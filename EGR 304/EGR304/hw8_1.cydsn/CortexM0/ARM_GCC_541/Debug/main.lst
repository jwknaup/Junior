ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_dmul
  20              		.section	.text.main,"ax",%progbits
  21              		.align	2
  22              		.global	main
  23              		.code	16
  24              		.thumb_func
  25              		.type	main, %function
  26              	main:
  27              	.LFB36:
  28              		.file 1 "main.c"
   1:main.c        **** /******************************************************************************
   2:main.c        **** * Project Name		: USB-UART-EGR
   3:main.c        **** * File Name			: main.c
   4:main.c        **** * Version 			: 1.1 (Updated by Dr. Jordan)
   5:main.c        **** * Device Used		: CY8C4245AXI-483
   6:main.c        **** * Software Used		: PSoC Creator 3.0 SP1
   7:main.c        **** * Compiler    		: ARMGCC 4.4.1
   8:main.c        **** * Related Hardware	: CY8CKIT-042 PSoC 4 Pioneer Kit 
   9:main.c        **** *
  10:main.c        **** *
  11:main.c        **** ******************************************************************************
  12:main.c        **** *                           THEORY OF OPERATION
  13:main.c        **** * This project demonstrates UART communication over the kit USB-UART Bridge. 
  14:main.c        **** * The project uses the SCB based UART component which stores the users input in an
  15:main.c        **** * array. when the user press the return key the PSoC will send what has be in the 
  16:main.c        **** * array, then clears the array and sets the pointer back to o.
  17:main.c        **** * 
  18:main.c        **** * UART is configured with
  19:main.c        **** * UART Basic
  20:main.c        **** * 	Mode: Standard
  21:main.c        **** * 	Direction: TX+RX
  22:main.c        **** * 	Baud rate (kbps): 9600
  23:main.c        **** * 	Data bits: 8 bits
  24:main.c        **** * 	Parity: None
  25:main.c        **** * 	Stop bits: 1 bit
  26:main.c        **** * 	Physical connections needed:
  27:main.c        **** * 	Jumper between P0[5] and PSoC 5LP Header J8 P12[6]
  28:main.c        **** * UART Advanced
  29:main.c        **** * 	RX buffer size: 8
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 2


  30:main.c        **** * 	TX buffer size: 8
  31:main.c        **** * 	Interrupt: None
  32:main.c        **** *
  33:main.c        **** * Physical Connetion
  34:main.c        **** * Connect jumper wire from the UART RX (P0[4]) of PSoC 4 to J8_10 (P12[7]) of PSoC 5LP
  35:main.c        **** * Connect jumper wire from the UART TX (P0[5]) of PSoC 4 to J8_9 (P12[6]) of PSoC 5LP
  36:main.c        **** * ******************************************************************************/ 
  37:main.c        **** #include <project.h>
  38:main.c        **** #include <stdio.h>
  39:main.c        **** #include <stdlib.h>     // contains strtod(), which converts an ASCII string to a double
  40:main.c        **** 
  41:main.c        **** int main()
  42:main.c        **** {
  29              		.loc 1 42 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 104
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 9BB0     		sub	sp, sp, #108
  41              		.cfi_def_cfa_offset 128
  42              	.LVL0:
  43:main.c        ****     char rxbuffer[100];                 // UART receive buffer
  44:main.c        ****     int rxindex;                        // UART receive buffer index
  45:main.c        ****     
  46:main.c        ****     double number;                      // floating-point number
  47:main.c        ****     
  48:main.c        ****     uint8 ch;                           // variable to hold received character
  49:main.c        ****    
  50:main.c        ****     // initialize and clear rxbuffer
  51:main.c        ****     for( rxindex = 0; rxindex < 100; rxindex++ ) {
  43              		.loc 1 51 0
  44 0004 0023     		movs	r3, #0
  45 0006 03E0     		b	.L2
  46              	.LVL1:
  47              	.L3:
  52:main.c        ****         rxbuffer[rxindex] = 0u;
  48              		.loc 1 52 0 discriminator 3
  49 0008 0021     		movs	r1, #0
  50 000a 01AA     		add	r2, sp, #4
  51 000c D154     		strb	r1, [r2, r3]
  51:main.c        ****         rxbuffer[rxindex] = 0u;
  52              		.loc 1 51 0 discriminator 3
  53 000e 0133     		adds	r3, r3, #1
  54              	.LVL2:
  55              	.L2:
  51:main.c        ****         rxbuffer[rxindex] = 0u;
  56              		.loc 1 51 0 is_stmt 0 discriminator 1
  57 0010 632B     		cmp	r3, #99
  58 0012 F9DD     		ble	.L3
  59              	.LVL3:
  53:main.c        ****     }
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 3


  54:main.c        ****     rxindex = 0;                        // initialize rxindex
  55:main.c        ****    
  56:main.c        ****     uart_Start();  // start UART
  60              		.loc 1 56 0 is_stmt 1
  61 0014 FFF7FEFF 		bl	uart_Start
  62              	.LVL4:
  57:main.c        ****     
  58:main.c        ****     // printf( "COM OPEN!\n" );
  59:main.c        **** 	uart_PutString( "COM OPEN!\n" );// display initialization string
  63              		.loc 1 59 0
  64 0018 2748     		ldr	r0, .L9
  65 001a FFF7FEFF 		bl	uart_PutString
  66              	.LVL5:
  60:main.c        **** 	
  61:main.c        ****     // printf( "Type a number: " );
  62:main.c        ****     uart_PutString( "Type a number: " );
  67              		.loc 1 62 0
  68 001e 2748     		ldr	r0, .L9+4
  69 0020 FFF7FEFF 		bl	uart_PutString
  70              	.LVL6:
  54:main.c        ****    
  71              		.loc 1 54 0
  72 0024 0025     		movs	r5, #0
  63:main.c        ****     
  64:main.c        ****     // read string until the user presses return
  65:main.c        ****     // scanf( "%s", rxbuffer );
  66:main.c        ****     while( ch != '\r' ) {
  73              		.loc 1 66 0
  74 0026 09E0     		b	.L4
  75              	.LVL7:
  76              	.L6:
  67:main.c        ****         ch = uart_GetChar();        // get the next character
  77              		.loc 1 67 0
  78 0028 FFF7FEFF 		bl	uart_GetChar
  79              	.LVL8:
  80 002c 0400     		movs	r4, r0
  81              	.LVL9:
  68:main.c        ****         
  69:main.c        ****         if( ch != '\r' && ch != 0u ) {  // if the character is not a return or null
  82              		.loc 1 69 0
  83 002e 0D28     		cmp	r0, #13
  84 0030 04D0     		beq	.L4
  85              		.loc 1 69 0 is_stmt 0 discriminator 1
  86 0032 0028     		cmp	r0, #0
  87 0034 02D0     		beq	.L4
  70:main.c        ****             rxbuffer[rxindex] = ch;     // store it in the rxbuffer string
  88              		.loc 1 70 0 is_stmt 1
  89 0036 01AB     		add	r3, sp, #4
  90 0038 5855     		strb	r0, [r3, r5]
  71:main.c        ****             rxindex++;                  // increment the rxbuffer index
  91              		.loc 1 71 0
  92 003a 0135     		adds	r5, r5, #1
  93              	.LVL10:
  94              	.L4:
  66:main.c        ****         ch = uart_GetChar();        // get the next character
  95              		.loc 1 66 0
  96 003c 0D2C     		cmp	r4, #13
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 4


  97 003e F3D1     		bne	.L6
  72:main.c        ****         }
  73:main.c        ****     }
  74:main.c        ****     
  75:main.c        ****     // output the received string to the UART
  76:main.c        ****     // printf( "\n%s\n", rxbuffer );
  77:main.c        ****     uart_PutChar('\n');
  98              		.loc 1 77 0
  99 0040 0A20     		movs	r0, #10
 100 0042 FFF7FEFF 		bl	uart_PutChar
 101              	.LVL11:
  78:main.c        ****     uart_PutString(rxbuffer);
 102              		.loc 1 78 0
 103 0046 01A8     		add	r0, sp, #4
 104 0048 FFF7FEFF 		bl	uart_PutString
 105              	.LVL12:
  79:main.c        ****     uart_PutChar('\n');
 106              		.loc 1 79 0
 107 004c 0A20     		movs	r0, #10
 108 004e FFF7FEFF 		bl	uart_PutChar
 109              	.LVL13:
  80:main.c        **** 
  81:main.c        ****     // convert the received string to a double (floating-point number)
  82:main.c        ****     number = strtod( rxbuffer, 0 );
 110              		.loc 1 82 0
 111 0052 0021     		movs	r1, #0
 112 0054 01A8     		add	r0, sp, #4
 113 0056 FFF7FEFF 		bl	strtod
 114              	.LVL14:
 115 005a 0400     		movs	r4, r0
 116              	.LVL15:
 117 005c 0D00     		movs	r5, r1
 118              	.LVL16:
  83:main.c        ****     double sphereRadius = number;
  84:main.c        ****     double sphereVolume = 4.0/3.0*3.14159*sphereRadius*sphereRadius*sphereRadius;
 119              		.loc 1 84 0
 120 005e 184A     		ldr	r2, .L9+8
 121 0060 184B     		ldr	r3, .L9+12
 122 0062 FFF7FEFF 		bl	__aeabi_dmul
 123              	.LVL17:
 124 0066 0200     		movs	r2, r0
 125 0068 0B00     		movs	r3, r1
 126 006a 2000     		movs	r0, r4
 127 006c 2900     		movs	r1, r5
 128 006e FFF7FEFF 		bl	__aeabi_dmul
 129              	.LVL18:
 130 0072 0200     		movs	r2, r0
 131 0074 0B00     		movs	r3, r1
 132 0076 2000     		movs	r0, r4
 133 0078 2900     		movs	r1, r5
 134 007a FFF7FEFF 		bl	__aeabi_dmul
 135              	.LVL19:
 136 007e 0600     		movs	r6, r0
 137 0080 0F00     		movs	r7, r1
 138              	.LVL20:
  85:main.c        ****     // initialize and clear rxbuffer (good practice to avoid bugs)
  86:main.c        ****     for( rxindex = 0; rxindex < 100; rxindex++ ) {
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 5


 139              		.loc 1 86 0
 140 0082 0023     		movs	r3, #0
 141 0084 03E0     		b	.L7
 142              	.LVL21:
 143              	.L8:
  87:main.c        ****         rxbuffer[rxindex] = 0u;
 144              		.loc 1 87 0 discriminator 3
 145 0086 0024     		movs	r4, #0
 146 0088 01A9     		add	r1, sp, #4
 147 008a CC54     		strb	r4, [r1, r3]
  86:main.c        ****         rxbuffer[rxindex] = 0u;
 148              		.loc 1 86 0 discriminator 3
 149 008c 0133     		adds	r3, r3, #1
 150              	.LVL22:
 151              	.L7:
  86:main.c        ****         rxbuffer[rxindex] = 0u;
 152              		.loc 1 86 0 is_stmt 0 discriminator 1
 153 008e 632B     		cmp	r3, #99
 154 0090 F9DD     		ble	.L8
 155              	.LVL23:
  88:main.c        ****     }
  89:main.c        ****     rxindex = 0;        // initialize rxindex
  90:main.c        ****     
  91:main.c        ****     // output the float as a string and store it in rxbuffer
  92:main.c        ****     // NOTE: In order to properly output doubles, you must enable them in the compiler
  93:main.c        ****     // See http://www.cypress.com/?id=4&rID=87354 for more details
  94:main.c        ****     sprintf( rxbuffer, "Sphere volume = %lf\n", sphereVolume );
 156              		.loc 1 94 0 is_stmt 1
 157 0092 3200     		movs	r2, r6
 158 0094 3B00     		movs	r3, r7
 159 0096 0C49     		ldr	r1, .L9+16
 160 0098 01A8     		add	r0, sp, #4
 161 009a FFF7FEFF 		bl	sprintf
 162              	.LVL24:
  95:main.c        ****     
  96:main.c        ****     // output the new string to the UART
  97:main.c        ****     // printf( "\n%s\n", rxbuffer );
  98:main.c        ****     uart_PutChar('\n');
 163              		.loc 1 98 0
 164 009e 0A20     		movs	r0, #10
 165 00a0 FFF7FEFF 		bl	uart_PutChar
 166              	.LVL25:
  99:main.c        ****     uart_PutString(rxbuffer);
 167              		.loc 1 99 0
 168 00a4 01A8     		add	r0, sp, #4
 169 00a6 FFF7FEFF 		bl	uart_PutString
 170              	.LVL26:
 100:main.c        ****     uart_PutChar('\n');
 171              		.loc 1 100 0
 172 00aa 0A20     		movs	r0, #10
 173 00ac FFF7FEFF 		bl	uart_PutChar
 174              	.LVL27:
 101:main.c        ****     
 102:main.c        ****     return 0;
 103:main.c        **** }
 175              		.loc 1 103 0
 176 00b0 0020     		movs	r0, #0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 6


 177 00b2 1BB0     		add	sp, sp, #108
 178              		@ sp needed
 179              	.LVL28:
 180 00b4 F0BD     		pop	{r4, r5, r6, r7, pc}
 181              	.L10:
 182 00b6 C046     		.align	2
 183              	.L9:
 184 00b8 00000000 		.word	.LC0
 185 00bc 0C000000 		.word	.LC2
 186 00c0 4904BD4A 		.word	1253901385
 187 00c4 51C11040 		.word	1074839889
 188 00c8 1C000000 		.word	.LC4
 189              		.cfi_endproc
 190              	.LFE36:
 191              		.size	main, .-main
 192              		.section	.rodata.str1.4,"aMS",%progbits,1
 193              		.align	2
 194              	.LC0:
 195 0000 434F4D20 		.ascii	"COM OPEN!\012\000"
 195      4F50454E 
 195      210A00
 196 000b 00       		.space	1
 197              	.LC2:
 198 000c 54797065 		.ascii	"Type a number: \000"
 198      2061206E 
 198      756D6265 
 198      723A2000 
 199              	.LC4:
 200 001c 53706865 		.ascii	"Sphere volume = %lf\012\000"
 200      72652076 
 200      6F6C756D 
 200      65203D20 
 200      256C660A 
 201              		.text
 202              	.Letext0:
 203              		.file 2 "Generated_Source\\PSoC4/uart.h"
 204              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 205              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 206              		.file 5 "Generated_Source\\PSoC4/cytypes.h"
 207              		.section	.debug_info,"",%progbits
 208              	.Ldebug_info0:
 209 0000 46020000 		.4byte	0x246
 210 0004 0400     		.2byte	0x4
 211 0006 00000000 		.4byte	.Ldebug_abbrev0
 212 000a 04       		.byte	0x4
 213 000b 01       		.uleb128 0x1
 214 000c 68000000 		.4byte	.LASF25
 215 0010 0C       		.byte	0xc
 216 0011 92010000 		.4byte	.LASF26
 217 0015 0B000000 		.4byte	.LASF27
 218 0019 00000000 		.4byte	.Ldebug_ranges0+0
 219 001d 00000000 		.4byte	0
 220 0021 00000000 		.4byte	.Ldebug_line0
 221 0025 02       		.uleb128 0x2
 222 0026 01       		.byte	0x1
 223 0027 06       		.byte	0x6
 224 0028 FC000000 		.4byte	.LASF0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 7


 225 002c 02       		.uleb128 0x2
 226 002d 01       		.byte	0x1
 227 002e 08       		.byte	0x8
 228 002f 36010000 		.4byte	.LASF1
 229 0033 02       		.uleb128 0x2
 230 0034 02       		.byte	0x2
 231 0035 05       		.byte	0x5
 232 0036 9E010000 		.4byte	.LASF2
 233 003a 02       		.uleb128 0x2
 234 003b 02       		.byte	0x2
 235 003c 07       		.byte	0x7
 236 003d 23010000 		.4byte	.LASF3
 237 0041 02       		.uleb128 0x2
 238 0042 04       		.byte	0x4
 239 0043 05       		.byte	0x5
 240 0044 BC010000 		.4byte	.LASF4
 241 0048 02       		.uleb128 0x2
 242 0049 04       		.byte	0x4
 243 004a 07       		.byte	0x7
 244 004b 11010000 		.4byte	.LASF5
 245 004f 02       		.uleb128 0x2
 246 0050 08       		.byte	0x8
 247 0051 05       		.byte	0x5
 248 0052 84010000 		.4byte	.LASF6
 249 0056 02       		.uleb128 0x2
 250 0057 08       		.byte	0x8
 251 0058 07       		.byte	0x7
 252 0059 64010000 		.4byte	.LASF7
 253 005d 03       		.uleb128 0x3
 254 005e 04       		.byte	0x4
 255 005f 05       		.byte	0x5
 256 0060 696E7400 		.ascii	"int\000"
 257 0064 02       		.uleb128 0x2
 258 0065 04       		.byte	0x4
 259 0066 07       		.byte	0x7
 260 0067 57010000 		.4byte	.LASF8
 261 006b 04       		.uleb128 0x4
 262 006c 62000000 		.4byte	.LASF28
 263 0070 05       		.byte	0x5
 264 0071 D201     		.2byte	0x1d2
 265 0073 2C000000 		.4byte	0x2c
 266 0077 02       		.uleb128 0x2
 267 0078 04       		.byte	0x4
 268 0079 04       		.byte	0x4
 269 007a F6000000 		.4byte	.LASF9
 270 007e 02       		.uleb128 0x2
 271 007f 08       		.byte	0x8
 272 0080 04       		.byte	0x4
 273 0081 44010000 		.4byte	.LASF10
 274 0085 02       		.uleb128 0x2
 275 0086 01       		.byte	0x1
 276 0087 08       		.byte	0x8
 277 0088 99010000 		.4byte	.LASF11
 278 008c 02       		.uleb128 0x2
 279 008d 08       		.byte	0x8
 280 008e 04       		.byte	0x4
 281 008f D2010000 		.4byte	.LASF12
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 8


 282 0093 02       		.uleb128 0x2
 283 0094 04       		.byte	0x4
 284 0095 07       		.byte	0x7
 285 0096 7B010000 		.4byte	.LASF13
 286 009a 05       		.uleb128 0x5
 287 009b 4B010000 		.4byte	.LASF29
 288 009f 01       		.byte	0x1
 289 00a0 29       		.byte	0x29
 290 00a1 5D000000 		.4byte	0x5d
 291 00a5 00000000 		.4byte	.LFB36
 292 00a9 CC000000 		.4byte	.LFE36-.LFB36
 293 00ad 01       		.uleb128 0x1
 294 00ae 9C       		.byte	0x9c
 295 00af F7010000 		.4byte	0x1f7
 296 00b3 06       		.uleb128 0x6
 297 00b4 08010000 		.4byte	.LASF14
 298 00b8 01       		.byte	0x1
 299 00b9 2B       		.byte	0x2b
 300 00ba F7010000 		.4byte	0x1f7
 301 00be 03       		.uleb128 0x3
 302 00bf 91       		.byte	0x91
 303 00c0 847F     		.sleb128 -124
 304 00c2 07       		.uleb128 0x7
 305 00c3 EB010000 		.4byte	.LASF15
 306 00c7 01       		.byte	0x1
 307 00c8 2C       		.byte	0x2c
 308 00c9 5D000000 		.4byte	0x5d
 309 00cd 00000000 		.4byte	.LLST0
 310 00d1 07       		.uleb128 0x7
 311 00d2 A8010000 		.4byte	.LASF16
 312 00d6 01       		.byte	0x1
 313 00d7 2E       		.byte	0x2e
 314 00d8 7E000000 		.4byte	0x7e
 315 00dc 59000000 		.4byte	.LLST1
 316 00e0 08       		.uleb128 0x8
 317 00e1 636800   		.ascii	"ch\000"
 318 00e4 01       		.byte	0x1
 319 00e5 30       		.byte	0x30
 320 00e6 6B000000 		.4byte	0x6b
 321 00ea 71000000 		.4byte	.LLST2
 322 00ee 07       		.uleb128 0x7
 323 00ef C5010000 		.4byte	.LASF17
 324 00f3 01       		.byte	0x1
 325 00f4 53       		.byte	0x53
 326 00f5 7E000000 		.4byte	0x7e
 327 00f9 59000000 		.4byte	.LLST1
 328 00fd 07       		.uleb128 0x7
 329 00fe AF010000 		.4byte	.LASF18
 330 0102 01       		.byte	0x1
 331 0103 54       		.byte	0x54
 332 0104 7E000000 		.4byte	0x7e
 333 0108 9A000000 		.4byte	.LLST4
 334 010c 09       		.uleb128 0x9
 335 010d 18000000 		.4byte	.LVL4
 336 0111 07020000 		.4byte	0x207
 337 0115 0A       		.uleb128 0xa
 338 0116 1E000000 		.4byte	.LVL5
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 9


 339 011a 12020000 		.4byte	0x212
 340 011e 2C010000 		.4byte	0x12c
 341 0122 0B       		.uleb128 0xb
 342 0123 01       		.uleb128 0x1
 343 0124 50       		.byte	0x50
 344 0125 05       		.uleb128 0x5
 345 0126 03       		.byte	0x3
 346 0127 00000000 		.4byte	.LC0
 347 012b 00       		.byte	0
 348 012c 0A       		.uleb128 0xa
 349 012d 24000000 		.4byte	.LVL6
 350 0131 12020000 		.4byte	0x212
 351 0135 43010000 		.4byte	0x143
 352 0139 0B       		.uleb128 0xb
 353 013a 01       		.uleb128 0x1
 354 013b 50       		.byte	0x50
 355 013c 05       		.uleb128 0x5
 356 013d 03       		.byte	0x3
 357 013e 0C000000 		.4byte	.LC2
 358 0142 00       		.byte	0
 359 0143 09       		.uleb128 0x9
 360 0144 2C000000 		.4byte	.LVL8
 361 0148 1D020000 		.4byte	0x21d
 362 014c 0A       		.uleb128 0xa
 363 014d 46000000 		.4byte	.LVL11
 364 0151 28020000 		.4byte	0x228
 365 0155 5F010000 		.4byte	0x15f
 366 0159 0B       		.uleb128 0xb
 367 015a 01       		.uleb128 0x1
 368 015b 50       		.byte	0x50
 369 015c 01       		.uleb128 0x1
 370 015d 3A       		.byte	0x3a
 371 015e 00       		.byte	0
 372 015f 0A       		.uleb128 0xa
 373 0160 4C000000 		.4byte	.LVL12
 374 0164 12020000 		.4byte	0x212
 375 0168 74010000 		.4byte	0x174
 376 016c 0B       		.uleb128 0xb
 377 016d 01       		.uleb128 0x1
 378 016e 50       		.byte	0x50
 379 016f 03       		.uleb128 0x3
 380 0170 91       		.byte	0x91
 381 0171 847F     		.sleb128 -124
 382 0173 00       		.byte	0
 383 0174 0A       		.uleb128 0xa
 384 0175 52000000 		.4byte	.LVL13
 385 0179 28020000 		.4byte	0x228
 386 017d 87010000 		.4byte	0x187
 387 0181 0B       		.uleb128 0xb
 388 0182 01       		.uleb128 0x1
 389 0183 50       		.byte	0x50
 390 0184 01       		.uleb128 0x1
 391 0185 3A       		.byte	0x3a
 392 0186 00       		.byte	0
 393 0187 0A       		.uleb128 0xa
 394 0188 5A000000 		.4byte	.LVL14
 395 018c 33020000 		.4byte	0x233
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 10


 396 0190 A1010000 		.4byte	0x1a1
 397 0194 0B       		.uleb128 0xb
 398 0195 01       		.uleb128 0x1
 399 0196 50       		.byte	0x50
 400 0197 03       		.uleb128 0x3
 401 0198 91       		.byte	0x91
 402 0199 847F     		.sleb128 -124
 403 019b 0B       		.uleb128 0xb
 404 019c 01       		.uleb128 0x1
 405 019d 51       		.byte	0x51
 406 019e 01       		.uleb128 0x1
 407 019f 30       		.byte	0x30
 408 01a0 00       		.byte	0
 409 01a1 0A       		.uleb128 0xa
 410 01a2 9E000000 		.4byte	.LVL24
 411 01a6 3E020000 		.4byte	0x23e
 412 01aa BF010000 		.4byte	0x1bf
 413 01ae 0B       		.uleb128 0xb
 414 01af 01       		.uleb128 0x1
 415 01b0 50       		.byte	0x50
 416 01b1 03       		.uleb128 0x3
 417 01b2 91       		.byte	0x91
 418 01b3 847F     		.sleb128 -124
 419 01b5 0B       		.uleb128 0xb
 420 01b6 01       		.uleb128 0x1
 421 01b7 51       		.byte	0x51
 422 01b8 05       		.uleb128 0x5
 423 01b9 03       		.byte	0x3
 424 01ba 1C000000 		.4byte	.LC4
 425 01be 00       		.byte	0
 426 01bf 0A       		.uleb128 0xa
 427 01c0 A4000000 		.4byte	.LVL25
 428 01c4 28020000 		.4byte	0x228
 429 01c8 D2010000 		.4byte	0x1d2
 430 01cc 0B       		.uleb128 0xb
 431 01cd 01       		.uleb128 0x1
 432 01ce 50       		.byte	0x50
 433 01cf 01       		.uleb128 0x1
 434 01d0 3A       		.byte	0x3a
 435 01d1 00       		.byte	0
 436 01d2 0A       		.uleb128 0xa
 437 01d3 AA000000 		.4byte	.LVL26
 438 01d7 12020000 		.4byte	0x212
 439 01db E7010000 		.4byte	0x1e7
 440 01df 0B       		.uleb128 0xb
 441 01e0 01       		.uleb128 0x1
 442 01e1 50       		.byte	0x50
 443 01e2 03       		.uleb128 0x3
 444 01e3 91       		.byte	0x91
 445 01e4 847F     		.sleb128 -124
 446 01e6 00       		.byte	0
 447 01e7 0C       		.uleb128 0xc
 448 01e8 B0000000 		.4byte	.LVL27
 449 01ec 28020000 		.4byte	0x228
 450 01f0 0B       		.uleb128 0xb
 451 01f1 01       		.uleb128 0x1
 452 01f2 50       		.byte	0x50
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 11


 453 01f3 01       		.uleb128 0x1
 454 01f4 3A       		.byte	0x3a
 455 01f5 00       		.byte	0
 456 01f6 00       		.byte	0
 457 01f7 0D       		.uleb128 0xd
 458 01f8 85000000 		.4byte	0x85
 459 01fc 07020000 		.4byte	0x207
 460 0200 0E       		.uleb128 0xe
 461 0201 93000000 		.4byte	0x93
 462 0205 63       		.byte	0x63
 463 0206 00       		.byte	0
 464 0207 0F       		.uleb128 0xf
 465 0208 00000000 		.4byte	.LASF19
 466 020c 00000000 		.4byte	.LASF19
 467 0210 02       		.byte	0x2
 468 0211 54       		.byte	0x54
 469 0212 0F       		.uleb128 0xf
 470 0213 46000000 		.4byte	.LASF20
 471 0217 46000000 		.4byte	.LASF20
 472 021b 02       		.byte	0x2
 473 021c 8B       		.byte	0x8b
 474 021d 0F       		.uleb128 0xf
 475 021e 55000000 		.4byte	.LASF21
 476 0222 55000000 		.4byte	.LASF21
 477 0226 02       		.byte	0x2
 478 0227 71       		.byte	0x71
 479 0228 0F       		.uleb128 0xf
 480 0229 DE010000 		.4byte	.LASF22
 481 022d DE010000 		.4byte	.LASF22
 482 0231 02       		.byte	0x2
 483 0232 8A       		.byte	0x8a
 484 0233 0F       		.uleb128 0xf
 485 0234 50010000 		.4byte	.LASF23
 486 0238 50010000 		.4byte	.LASF23
 487 023c 03       		.byte	0x3
 488 023d 97       		.byte	0x97
 489 023e 0F       		.uleb128 0xf
 490 023f F3010000 		.4byte	.LASF24
 491 0243 F3010000 		.4byte	.LASF24
 492 0247 04       		.byte	0x4
 493 0248 E7       		.byte	0xe7
 494 0249 00       		.byte	0
 495              		.section	.debug_abbrev,"",%progbits
 496              	.Ldebug_abbrev0:
 497 0000 01       		.uleb128 0x1
 498 0001 11       		.uleb128 0x11
 499 0002 01       		.byte	0x1
 500 0003 25       		.uleb128 0x25
 501 0004 0E       		.uleb128 0xe
 502 0005 13       		.uleb128 0x13
 503 0006 0B       		.uleb128 0xb
 504 0007 03       		.uleb128 0x3
 505 0008 0E       		.uleb128 0xe
 506 0009 1B       		.uleb128 0x1b
 507 000a 0E       		.uleb128 0xe
 508 000b 55       		.uleb128 0x55
 509 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 12


 510 000d 11       		.uleb128 0x11
 511 000e 01       		.uleb128 0x1
 512 000f 10       		.uleb128 0x10
 513 0010 17       		.uleb128 0x17
 514 0011 00       		.byte	0
 515 0012 00       		.byte	0
 516 0013 02       		.uleb128 0x2
 517 0014 24       		.uleb128 0x24
 518 0015 00       		.byte	0
 519 0016 0B       		.uleb128 0xb
 520 0017 0B       		.uleb128 0xb
 521 0018 3E       		.uleb128 0x3e
 522 0019 0B       		.uleb128 0xb
 523 001a 03       		.uleb128 0x3
 524 001b 0E       		.uleb128 0xe
 525 001c 00       		.byte	0
 526 001d 00       		.byte	0
 527 001e 03       		.uleb128 0x3
 528 001f 24       		.uleb128 0x24
 529 0020 00       		.byte	0
 530 0021 0B       		.uleb128 0xb
 531 0022 0B       		.uleb128 0xb
 532 0023 3E       		.uleb128 0x3e
 533 0024 0B       		.uleb128 0xb
 534 0025 03       		.uleb128 0x3
 535 0026 08       		.uleb128 0x8
 536 0027 00       		.byte	0
 537 0028 00       		.byte	0
 538 0029 04       		.uleb128 0x4
 539 002a 16       		.uleb128 0x16
 540 002b 00       		.byte	0
 541 002c 03       		.uleb128 0x3
 542 002d 0E       		.uleb128 0xe
 543 002e 3A       		.uleb128 0x3a
 544 002f 0B       		.uleb128 0xb
 545 0030 3B       		.uleb128 0x3b
 546 0031 05       		.uleb128 0x5
 547 0032 49       		.uleb128 0x49
 548 0033 13       		.uleb128 0x13
 549 0034 00       		.byte	0
 550 0035 00       		.byte	0
 551 0036 05       		.uleb128 0x5
 552 0037 2E       		.uleb128 0x2e
 553 0038 01       		.byte	0x1
 554 0039 3F       		.uleb128 0x3f
 555 003a 19       		.uleb128 0x19
 556 003b 03       		.uleb128 0x3
 557 003c 0E       		.uleb128 0xe
 558 003d 3A       		.uleb128 0x3a
 559 003e 0B       		.uleb128 0xb
 560 003f 3B       		.uleb128 0x3b
 561 0040 0B       		.uleb128 0xb
 562 0041 49       		.uleb128 0x49
 563 0042 13       		.uleb128 0x13
 564 0043 11       		.uleb128 0x11
 565 0044 01       		.uleb128 0x1
 566 0045 12       		.uleb128 0x12
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 13


 567 0046 06       		.uleb128 0x6
 568 0047 40       		.uleb128 0x40
 569 0048 18       		.uleb128 0x18
 570 0049 9642     		.uleb128 0x2116
 571 004b 19       		.uleb128 0x19
 572 004c 01       		.uleb128 0x1
 573 004d 13       		.uleb128 0x13
 574 004e 00       		.byte	0
 575 004f 00       		.byte	0
 576 0050 06       		.uleb128 0x6
 577 0051 34       		.uleb128 0x34
 578 0052 00       		.byte	0
 579 0053 03       		.uleb128 0x3
 580 0054 0E       		.uleb128 0xe
 581 0055 3A       		.uleb128 0x3a
 582 0056 0B       		.uleb128 0xb
 583 0057 3B       		.uleb128 0x3b
 584 0058 0B       		.uleb128 0xb
 585 0059 49       		.uleb128 0x49
 586 005a 13       		.uleb128 0x13
 587 005b 02       		.uleb128 0x2
 588 005c 18       		.uleb128 0x18
 589 005d 00       		.byte	0
 590 005e 00       		.byte	0
 591 005f 07       		.uleb128 0x7
 592 0060 34       		.uleb128 0x34
 593 0061 00       		.byte	0
 594 0062 03       		.uleb128 0x3
 595 0063 0E       		.uleb128 0xe
 596 0064 3A       		.uleb128 0x3a
 597 0065 0B       		.uleb128 0xb
 598 0066 3B       		.uleb128 0x3b
 599 0067 0B       		.uleb128 0xb
 600 0068 49       		.uleb128 0x49
 601 0069 13       		.uleb128 0x13
 602 006a 02       		.uleb128 0x2
 603 006b 17       		.uleb128 0x17
 604 006c 00       		.byte	0
 605 006d 00       		.byte	0
 606 006e 08       		.uleb128 0x8
 607 006f 34       		.uleb128 0x34
 608 0070 00       		.byte	0
 609 0071 03       		.uleb128 0x3
 610 0072 08       		.uleb128 0x8
 611 0073 3A       		.uleb128 0x3a
 612 0074 0B       		.uleb128 0xb
 613 0075 3B       		.uleb128 0x3b
 614 0076 0B       		.uleb128 0xb
 615 0077 49       		.uleb128 0x49
 616 0078 13       		.uleb128 0x13
 617 0079 02       		.uleb128 0x2
 618 007a 17       		.uleb128 0x17
 619 007b 00       		.byte	0
 620 007c 00       		.byte	0
 621 007d 09       		.uleb128 0x9
 622 007e 898201   		.uleb128 0x4109
 623 0081 00       		.byte	0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 14


 624 0082 11       		.uleb128 0x11
 625 0083 01       		.uleb128 0x1
 626 0084 31       		.uleb128 0x31
 627 0085 13       		.uleb128 0x13
 628 0086 00       		.byte	0
 629 0087 00       		.byte	0
 630 0088 0A       		.uleb128 0xa
 631 0089 898201   		.uleb128 0x4109
 632 008c 01       		.byte	0x1
 633 008d 11       		.uleb128 0x11
 634 008e 01       		.uleb128 0x1
 635 008f 31       		.uleb128 0x31
 636 0090 13       		.uleb128 0x13
 637 0091 01       		.uleb128 0x1
 638 0092 13       		.uleb128 0x13
 639 0093 00       		.byte	0
 640 0094 00       		.byte	0
 641 0095 0B       		.uleb128 0xb
 642 0096 8A8201   		.uleb128 0x410a
 643 0099 00       		.byte	0
 644 009a 02       		.uleb128 0x2
 645 009b 18       		.uleb128 0x18
 646 009c 9142     		.uleb128 0x2111
 647 009e 18       		.uleb128 0x18
 648 009f 00       		.byte	0
 649 00a0 00       		.byte	0
 650 00a1 0C       		.uleb128 0xc
 651 00a2 898201   		.uleb128 0x4109
 652 00a5 01       		.byte	0x1
 653 00a6 11       		.uleb128 0x11
 654 00a7 01       		.uleb128 0x1
 655 00a8 31       		.uleb128 0x31
 656 00a9 13       		.uleb128 0x13
 657 00aa 00       		.byte	0
 658 00ab 00       		.byte	0
 659 00ac 0D       		.uleb128 0xd
 660 00ad 01       		.uleb128 0x1
 661 00ae 01       		.byte	0x1
 662 00af 49       		.uleb128 0x49
 663 00b0 13       		.uleb128 0x13
 664 00b1 01       		.uleb128 0x1
 665 00b2 13       		.uleb128 0x13
 666 00b3 00       		.byte	0
 667 00b4 00       		.byte	0
 668 00b5 0E       		.uleb128 0xe
 669 00b6 21       		.uleb128 0x21
 670 00b7 00       		.byte	0
 671 00b8 49       		.uleb128 0x49
 672 00b9 13       		.uleb128 0x13
 673 00ba 2F       		.uleb128 0x2f
 674 00bb 0B       		.uleb128 0xb
 675 00bc 00       		.byte	0
 676 00bd 00       		.byte	0
 677 00be 0F       		.uleb128 0xf
 678 00bf 2E       		.uleb128 0x2e
 679 00c0 00       		.byte	0
 680 00c1 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 15


 681 00c2 19       		.uleb128 0x19
 682 00c3 3C       		.uleb128 0x3c
 683 00c4 19       		.uleb128 0x19
 684 00c5 6E       		.uleb128 0x6e
 685 00c6 0E       		.uleb128 0xe
 686 00c7 03       		.uleb128 0x3
 687 00c8 0E       		.uleb128 0xe
 688 00c9 3A       		.uleb128 0x3a
 689 00ca 0B       		.uleb128 0xb
 690 00cb 3B       		.uleb128 0x3b
 691 00cc 0B       		.uleb128 0xb
 692 00cd 00       		.byte	0
 693 00ce 00       		.byte	0
 694 00cf 00       		.byte	0
 695              		.section	.debug_loc,"",%progbits
 696              	.Ldebug_loc0:
 697              	.LLST0:
 698 0000 04000000 		.4byte	.LVL0
 699 0004 08000000 		.4byte	.LVL1
 700 0008 0200     		.2byte	0x2
 701 000a 30       		.byte	0x30
 702 000b 9F       		.byte	0x9f
 703 000c 08000000 		.4byte	.LVL1
 704 0010 14000000 		.4byte	.LVL3
 705 0014 0100     		.2byte	0x1
 706 0016 53       		.byte	0x53
 707 0017 14000000 		.4byte	.LVL3
 708 001b 28000000 		.4byte	.LVL7
 709 001f 0200     		.2byte	0x2
 710 0021 30       		.byte	0x30
 711 0022 9F       		.byte	0x9f
 712 0023 28000000 		.4byte	.LVL7
 713 0027 5E000000 		.4byte	.LVL16
 714 002b 0100     		.2byte	0x1
 715 002d 55       		.byte	0x55
 716 002e 82000000 		.4byte	.LVL20
 717 0032 86000000 		.4byte	.LVL21
 718 0036 0200     		.2byte	0x2
 719 0038 30       		.byte	0x30
 720 0039 9F       		.byte	0x9f
 721 003a 86000000 		.4byte	.LVL21
 722 003e 92000000 		.4byte	.LVL23
 723 0042 0100     		.2byte	0x1
 724 0044 53       		.byte	0x53
 725 0045 92000000 		.4byte	.LVL23
 726 0049 CC000000 		.4byte	.LFE36
 727 004d 0200     		.2byte	0x2
 728 004f 30       		.byte	0x30
 729 0050 9F       		.byte	0x9f
 730 0051 00000000 		.4byte	0
 731 0055 00000000 		.4byte	0
 732              	.LLST1:
 733 0059 5E000000 		.4byte	.LVL16
 734 005d 86000000 		.4byte	.LVL21
 735 0061 0600     		.2byte	0x6
 736 0063 54       		.byte	0x54
 737 0064 93       		.byte	0x93
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 16


 738 0065 04       		.uleb128 0x4
 739 0066 55       		.byte	0x55
 740 0067 93       		.byte	0x93
 741 0068 04       		.uleb128 0x4
 742 0069 00000000 		.4byte	0
 743 006d 00000000 		.4byte	0
 744              	.LLST2:
 745 0071 28000000 		.4byte	.LVL7
 746 0075 2E000000 		.4byte	.LVL9
 747 0079 0100     		.2byte	0x1
 748 007b 54       		.byte	0x54
 749 007c 2E000000 		.4byte	.LVL9
 750 0080 3C000000 		.4byte	.LVL10
 751 0084 0100     		.2byte	0x1
 752 0086 50       		.byte	0x50
 753 0087 3C000000 		.4byte	.LVL10
 754 008b 5C000000 		.4byte	.LVL15
 755 008f 0100     		.2byte	0x1
 756 0091 54       		.byte	0x54
 757 0092 00000000 		.4byte	0
 758 0096 00000000 		.4byte	0
 759              	.LLST4:
 760 009a 82000000 		.4byte	.LVL20
 761 009e B4000000 		.4byte	.LVL28
 762 00a2 0600     		.2byte	0x6
 763 00a4 56       		.byte	0x56
 764 00a5 93       		.byte	0x93
 765 00a6 04       		.uleb128 0x4
 766 00a7 57       		.byte	0x57
 767 00a8 93       		.byte	0x93
 768 00a9 04       		.uleb128 0x4
 769 00aa 00000000 		.4byte	0
 770 00ae 00000000 		.4byte	0
 771              		.section	.debug_aranges,"",%progbits
 772 0000 1C000000 		.4byte	0x1c
 773 0004 0200     		.2byte	0x2
 774 0006 00000000 		.4byte	.Ldebug_info0
 775 000a 04       		.byte	0x4
 776 000b 00       		.byte	0
 777 000c 0000     		.2byte	0
 778 000e 0000     		.2byte	0
 779 0010 00000000 		.4byte	.LFB36
 780 0014 CC000000 		.4byte	.LFE36-.LFB36
 781 0018 00000000 		.4byte	0
 782 001c 00000000 		.4byte	0
 783              		.section	.debug_ranges,"",%progbits
 784              	.Ldebug_ranges0:
 785 0000 00000000 		.4byte	.LFB36
 786 0004 CC000000 		.4byte	.LFE36
 787 0008 00000000 		.4byte	0
 788 000c 00000000 		.4byte	0
 789              		.section	.debug_line,"",%progbits
 790              	.Ldebug_line0:
 791 0000 27010000 		.section	.debug_str,"MS",%progbits,1
 791      0200CA00 
 791      00000201 
 791      FB0E0D00 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 17


 791      01010101 
 792              	.LASF19:
 793 0000 75617274 		.ascii	"uart_Start\000"
 793      5F537461 
 793      727400
 794              	.LASF27:
 795 000b 433A5C55 		.ascii	"C:\\Users\\Jacob\\Documents\\Junior\\EGR 304\\EGR30"
 795      73657273 
 795      5C4A6163 
 795      6F625C44 
 795      6F63756D 
 796 0038 345C6877 		.ascii	"4\\hw8_1.cydsn\000"
 796      385F312E 
 796      63796473 
 796      6E00
 797              	.LASF20:
 798 0046 75617274 		.ascii	"uart_PutString\000"
 798      5F507574 
 798      53747269 
 798      6E6700
 799              	.LASF21:
 800 0055 75617274 		.ascii	"uart_GetChar\000"
 800      5F476574 
 800      43686172 
 800      00
 801              	.LASF28:
 802 0062 75696E74 		.ascii	"uint8\000"
 802      3800
 803              	.LASF25:
 804 0068 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 804      43313120 
 804      352E342E 
 804      31203230 
 804      31363036 
 805 009b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 805      20726576 
 805      6973696F 
 805      6E203233 
 805      37373135 
 806 00ce 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 806      66756E63 
 806      74696F6E 
 806      2D736563 
 806      74696F6E 
 807              	.LASF9:
 808 00f6 666C6F61 		.ascii	"float\000"
 808      7400
 809              	.LASF0:
 810 00fc 7369676E 		.ascii	"signed char\000"
 810      65642063 
 810      68617200 
 811              	.LASF14:
 812 0108 72786275 		.ascii	"rxbuffer\000"
 812      66666572 
 812      00
 813              	.LASF5:
 814 0111 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 18


 814      20756E73 
 814      69676E65 
 814      6420696E 
 814      7400
 815              	.LASF3:
 816 0123 73686F72 		.ascii	"short unsigned int\000"
 816      7420756E 
 816      7369676E 
 816      65642069 
 816      6E7400
 817              	.LASF1:
 818 0136 756E7369 		.ascii	"unsigned char\000"
 818      676E6564 
 818      20636861 
 818      7200
 819              	.LASF10:
 820 0144 646F7562 		.ascii	"double\000"
 820      6C6500
 821              	.LASF29:
 822 014b 6D61696E 		.ascii	"main\000"
 822      00
 823              	.LASF23:
 824 0150 73747274 		.ascii	"strtod\000"
 824      6F6400
 825              	.LASF8:
 826 0157 756E7369 		.ascii	"unsigned int\000"
 826      676E6564 
 826      20696E74 
 826      00
 827              	.LASF7:
 828 0164 6C6F6E67 		.ascii	"long long unsigned int\000"
 828      206C6F6E 
 828      6720756E 
 828      7369676E 
 828      65642069 
 829              	.LASF13:
 830 017b 73697A65 		.ascii	"sizetype\000"
 830      74797065 
 830      00
 831              	.LASF6:
 832 0184 6C6F6E67 		.ascii	"long long int\000"
 832      206C6F6E 
 832      6720696E 
 832      7400
 833              	.LASF26:
 834 0192 6D61696E 		.ascii	"main.c\000"
 834      2E6300
 835              	.LASF11:
 836 0199 63686172 		.ascii	"char\000"
 836      00
 837              	.LASF2:
 838 019e 73686F72 		.ascii	"short int\000"
 838      7420696E 
 838      7400
 839              	.LASF16:
 840 01a8 6E756D62 		.ascii	"number\000"
 840      657200
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccRWamoa.s 			page 19


 841              	.LASF18:
 842 01af 73706865 		.ascii	"sphereVolume\000"
 842      7265566F 
 842      6C756D65 
 842      00
 843              	.LASF4:
 844 01bc 6C6F6E67 		.ascii	"long int\000"
 844      20696E74 
 844      00
 845              	.LASF17:
 846 01c5 73706865 		.ascii	"sphereRadius\000"
 846      72655261 
 846      64697573 
 846      00
 847              	.LASF12:
 848 01d2 6C6F6E67 		.ascii	"long double\000"
 848      20646F75 
 848      626C6500 
 849              	.LASF22:
 850 01de 75617274 		.ascii	"uart_PutChar\000"
 850      5F507574 
 850      43686172 
 850      00
 851              	.LASF15:
 852 01eb 7278696E 		.ascii	"rxindex\000"
 852      64657800 
 853              	.LASF24:
 854 01f3 73707269 		.ascii	"sprintf\000"
 854      6E746600 
 855              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
