ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_B.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_B_initVar
  20              		.bss
  21              		.type	PWM_B_initVar, %object
  22              		.size	PWM_B_initVar, 1
  23              	PWM_B_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_B_Init,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_B_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	PWM_B_Init, %function
  31              	PWM_B_Init:
  32              	.LFB2:
  33              		.file 1 "Generated_Source\\PSoC4\\PWM_B.c"
   1:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_B.c **** * File Name: PWM_B.c
   3:Generated_Source\PSoC4/PWM_B.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM_B.c **** *
   5:Generated_Source\PSoC4/PWM_B.c **** * Description:
   6:Generated_Source\PSoC4/PWM_B.c **** *  This file provides the source code to the API for the PWM_B
   7:Generated_Source\PSoC4/PWM_B.c **** *  component
   8:Generated_Source\PSoC4/PWM_B.c **** *
   9:Generated_Source\PSoC4/PWM_B.c **** * Note:
  10:Generated_Source\PSoC4/PWM_B.c **** *  None
  11:Generated_Source\PSoC4/PWM_B.c **** *
  12:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM_B.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM_B.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM_B.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM_B.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM_B.c **** 
  19:Generated_Source\PSoC4/PWM_B.c **** #include "PWM_B.h"
  20:Generated_Source\PSoC4/PWM_B.c **** 
  21:Generated_Source\PSoC4/PWM_B.c **** uint8 PWM_B_initVar = 0u;
  22:Generated_Source\PSoC4/PWM_B.c **** 
  23:Generated_Source\PSoC4/PWM_B.c **** 
  24:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 2


  25:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_Init
  26:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM_B.c **** *
  28:Generated_Source\PSoC4/PWM_B.c **** * Summary:
  29:Generated_Source\PSoC4/PWM_B.c **** *  Initialize/Restore default PWM_B configuration.
  30:Generated_Source\PSoC4/PWM_B.c **** *
  31:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM_B.c **** *  None
  33:Generated_Source\PSoC4/PWM_B.c **** *
  34:Generated_Source\PSoC4/PWM_B.c **** * Return:
  35:Generated_Source\PSoC4/PWM_B.c **** *  None
  36:Generated_Source\PSoC4/PWM_B.c **** *
  37:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_Init(void)
  39:Generated_Source\PSoC4/PWM_B.c **** {
  34              		.loc 1 39 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/PWM_B.c **** 
  41:Generated_Source\PSoC4/PWM_B.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__QUAD == PWM_B_CONFIG)
  43:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_CONTROL_REG = PWM_B_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM_B.c ****         
  45:Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_TRIG_CONTROL1_REG  = PWM_B_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM_B.c **** 
  48:Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_SetInterruptMode(PWM_B_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM_B.c ****         
  51:Generated_Source\PSoC4/PWM_B.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_SetCounterMode(PWM_B_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WritePeriod(PWM_B_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WriteCounter(PWM_B_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM_B.c ****     #endif  /* (PWM_B__QUAD == PWM_B_CONFIG) */
  56:Generated_Source\PSoC4/PWM_B.c **** 
  57:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__TIMER == PWM_B_CONFIG)
  58:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_CONTROL_REG = PWM_B_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM_B.c ****         
  60:Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_TRIG_CONTROL1_REG  = PWM_B_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM_B.c ****     
  63:Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_SetInterruptMode(PWM_B_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM_B.c ****         
  66:Generated_Source\PSoC4/PWM_B.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WritePeriod(PWM_B_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM_B.c **** 
  69:Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__COMPARE == PWM_B_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCompare(PWM_B_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM_B.c **** 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 3


  72:Generated_Source\PSoC4/PWM_B.c ****             #if (1u == PWM_B_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_WriteCompareBuf(PWM_B_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM_B.c ****             #endif  /* (1u == PWM_B_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__COMPARE == PWM_B_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM_B.c **** 
  78:Generated_Source\PSoC4/PWM_B.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B_CY_TCPWM_V2 && PWM_B_TIMER_UPDOWN_CNT_USED && !PWM_B_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM_B.c ****         #elif(PWM_B__COUNT_DOWN == PWM_B_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCounter(PWM_B_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM_B.c ****         #else
  84:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM_B.c ****         #endif /* (PWM_B_CY_TCPWM_V2 && PWM_B_TIMER_UPDOWN_CNT_USED && !PWM_B_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/PWM_B.c ****     #endif  /* (PWM_B__TIMER == PWM_B_CONFIG) */
  87:Generated_Source\PSoC4/PWM_B.c **** 
  88:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__PWM_SEL == PWM_B_CONFIG)
  89:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_CONTROL_REG = PWM_B_CTRL_PWM_BASE_CONFIG;
  44              		.loc 1 89 0
  45 0004 114B     		ldr	r3, .L2
  46 0006 8222     		movs	r2, #130
  47 0008 D204     		lsls	r2, r2, #19
  48 000a 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/PWM_B.c **** 
  91:Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__PWM_PR == PWM_B_PWM_MODE)
  92:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_CONTROL_REG |= PWM_B_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCounter(PWM_B_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM_B.c ****         #else
  95:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_CONTROL_REG |= PWM_B_CTRL_PWM_ALIGN | PWM_B_CTRL_PWM_KILL_EVENT;
  49              		.loc 1 95 0
  50 000c 0F4B     		ldr	r3, .L2
  51 000e 0F4A     		ldr	r2, .L2
  52 0010 1268     		ldr	r2, [r2]
  53 0012 1A60     		str	r2, [r3]
  96:Generated_Source\PSoC4/PWM_B.c ****             
  97:Generated_Source\PSoC4/PWM_B.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B_CY_TCPWM_V2 && PWM_B_PWM_UPDOWN_CNT_USED && !PWM_B_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM_B.c ****             #elif (PWM_B__RIGHT == PWM_B_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_WriteCounter(PWM_B_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM_B.c ****             #else 
 103:Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_WriteCounter(0u);
  54              		.loc 1 103 0
  55 0014 0020     		movs	r0, #0
  56 0016 FFF7FEFF 		bl	PWM_B_WriteCounter
 104:Generated_Source\PSoC4/PWM_B.c ****             #endif  /* (PWM_B_CY_TCPWM_V2 && PWM_B_PWM_UPDOWN_CNT_USED && !PWM_B_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__PWM_PR == PWM_B_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM_B.c **** 
 107:Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__PWM_DT == PWM_B_PWM_MODE)
 108:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_CONTROL_REG |= PWM_B_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__PWM_DT == PWM_B_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM_B.c **** 
 111:Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__PWM == PWM_B_PWM_MODE)
 112:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_CONTROL_REG |= PWM_B_CTRL_PWM_PRESCALER;
  57              		.loc 1 112 0
  58 001a 0C4B     		ldr	r3, .L2
  59 001c 0B4A     		ldr	r2, .L2
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 4


  60 001e 1268     		ldr	r2, [r2]
  61 0020 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__PWM == PWM_B_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM_B.c **** 
 115:Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_TRIG_CONTROL1_REG  = PWM_B_PWM_SIGNALS_MODES;
  62              		.loc 1 116 0
  63 0022 0B4B     		ldr	r3, .L2+4
  64 0024 0C22     		movs	r2, #12
  65 0026 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/PWM_B.c ****     
 118:Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_SetInterruptMode(PWM_B_PWM_INTERRUPT_MASK);
  66              		.loc 1 119 0
  67 0028 0120     		movs	r0, #1
  68 002a FFF7FEFF 		bl	PWM_B_SetInterruptMode
 120:Generated_Source\PSoC4/PWM_B.c **** 
 121:Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__PWM_PR == PWM_B_PWM_MODE)
 123:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM_B.c ****                     (PWM_B_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM_B.c ****                     PWM_B_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM_B.c ****                     PWM_B_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM_B.c ****         #else
 128:Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B__LEFT == PWM_B_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_TRIG_CONTROL2_REG = PWM_B_PWM_MODE_LEFT;
  69              		.loc 1 129 0
  70 002e 094B     		ldr	r3, .L2+8
  71 0030 3122     		movs	r2, #49
  72 0032 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/PWM_B.c ****             #endif  /* ( PWM_B_PWM_LEFT == PWM_B_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM_B.c **** 
 132:Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B__RIGHT == PWM_B_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_TRIG_CONTROL2_REG = PWM_B_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM_B.c ****             #endif  /* ( PWM_B_PWM_RIGHT == PWM_B_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM_B.c **** 
 136:Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B__CENTER == PWM_B_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_TRIG_CONTROL2_REG = PWM_B_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM_B.c ****             #endif  /* ( PWM_B_PWM_CENTER == PWM_B_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM_B.c **** 
 140:Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B__ASYMMETRIC == PWM_B_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_TRIG_CONTROL2_REG = PWM_B_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM_B.c ****             #endif  /* (PWM_B__ASYMMETRIC == PWM_B_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__PWM_PR == PWM_B_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM_B.c **** 
 145:Generated_Source\PSoC4/PWM_B.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WritePeriod(PWM_B_PWM_PERIOD_VALUE );
  73              		.loc 1 146 0
  74 0034 084B     		ldr	r3, .L2+12
  75 0036 1800     		movs	r0, r3
  76 0038 FFF7FEFF 		bl	PWM_B_WritePeriod
 147:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WriteCompare(PWM_B_PWM_COMPARE_VALUE);
  77              		.loc 1 147 0
  78 003c 064B     		ldr	r3, .L2+12
  79 003e 1800     		movs	r0, r3
  80 0040 FFF7FEFF 		bl	PWM_B_WriteCompare
 148:Generated_Source\PSoC4/PWM_B.c **** 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 5


 149:Generated_Source\PSoC4/PWM_B.c ****         #if (1u == PWM_B_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCompareBuf(PWM_B_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (1u == PWM_B_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM_B.c **** 
 154:Generated_Source\PSoC4/PWM_B.c ****         #if (1u == PWM_B_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WritePeriodBuf(PWM_B_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (1u == PWM_B_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM_B.c ****     #endif  /* (PWM_B__PWM_SEL == PWM_B_CONFIG) */
 159:Generated_Source\PSoC4/PWM_B.c ****     
 160:Generated_Source\PSoC4/PWM_B.c **** }
  81              		.loc 1 160 0
  82 0044 C046     		nop
  83 0046 BD46     		mov	sp, r7
  84              		@ sp needed
  85 0048 80BD     		pop	{r7, pc}
  86              	.L3:
  87 004a C046     		.align	2
  88              	.L2:
  89 004c 40012040 		.word	1075839296
  90 0050 64012040 		.word	1075839332
  91 0054 68012040 		.word	1075839336
  92 0058 FFFF0000 		.word	65535
  93              		.cfi_endproc
  94              	.LFE2:
  95              		.size	PWM_B_Init, .-PWM_B_Init
  96              		.section	.text.PWM_B_Enable,"ax",%progbits
  97              		.align	2
  98              		.global	PWM_B_Enable
  99              		.code	16
 100              		.thumb_func
 101              		.type	PWM_B_Enable, %function
 102              	PWM_B_Enable:
 103              	.LFB3:
 161:Generated_Source\PSoC4/PWM_B.c **** 
 162:Generated_Source\PSoC4/PWM_B.c **** 
 163:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_Enable
 165:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM_B.c **** *
 167:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 168:Generated_Source\PSoC4/PWM_B.c **** *  Enables the PWM_B.
 169:Generated_Source\PSoC4/PWM_B.c **** *
 170:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM_B.c **** *  None
 172:Generated_Source\PSoC4/PWM_B.c **** *
 173:Generated_Source\PSoC4/PWM_B.c **** * Return:
 174:Generated_Source\PSoC4/PWM_B.c **** *  None
 175:Generated_Source\PSoC4/PWM_B.c **** *
 176:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_Enable(void)
 178:Generated_Source\PSoC4/PWM_B.c **** {
 104              		.loc 1 178 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 6


 108 0000 90B5     		push	{r4, r7, lr}
 109              		.cfi_def_cfa_offset 12
 110              		.cfi_offset 4, -12
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 83B0     		sub	sp, sp, #12
 114              		.cfi_def_cfa_offset 24
 115 0004 00AF     		add	r7, sp, #0
 116              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM_B.c **** 
 181:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 117              		.loc 1 181 0
 118 0006 FC1D     		adds	r4, r7, #7
 119 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 120 000c 0300     		movs	r3, r0
 121 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_BLOCK_CONTROL_REG |= PWM_B_MASK;
 122              		.loc 1 182 0
 123 0010 094B     		ldr	r3, .L5
 124 0012 094A     		ldr	r2, .L5
 125 0014 1268     		ldr	r2, [r2]
 126 0016 0221     		movs	r1, #2
 127 0018 0A43     		orrs	r2, r1
 128 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 129              		.loc 1 183 0
 130 001c FB1D     		adds	r3, r7, #7
 131 001e 1B78     		ldrb	r3, [r3]
 132 0020 1800     		movs	r0, r3
 133 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/PWM_B.c **** 
 185:Generated_Source\PSoC4/PWM_B.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__PWM_SEL == PWM_B_CONFIG)
 187:Generated_Source\PSoC4/PWM_B.c ****         #if (0u == PWM_B_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_TriggerCommand(PWM_B_MASK, PWM_B_CMD_START);
 134              		.loc 1 188 0
 135 0026 1821     		movs	r1, #24
 136 0028 0220     		movs	r0, #2
 137 002a FFF7FEFF 		bl	PWM_B_TriggerCommand
 189:Generated_Source\PSoC4/PWM_B.c ****         #endif /* (0u == PWM_B_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B__PWM_SEL == PWM_B_CONFIG) */
 191:Generated_Source\PSoC4/PWM_B.c **** 
 192:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__TIMER == PWM_B_CONFIG)
 193:Generated_Source\PSoC4/PWM_B.c ****         #if (0u == PWM_B_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_TriggerCommand(PWM_B_MASK, PWM_B_CMD_START);
 195:Generated_Source\PSoC4/PWM_B.c ****         #endif /* (0u == PWM_B_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B__TIMER == PWM_B_CONFIG) */
 197:Generated_Source\PSoC4/PWM_B.c ****     
 198:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__QUAD == PWM_B_CONFIG)
 199:Generated_Source\PSoC4/PWM_B.c ****         #if (0u != PWM_B_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM_B.c ****             PWM_B_TriggerCommand(PWM_B_MASK, PWM_B_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM_B.c ****         #endif /* (0u != PWM_B_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/PWM_B.c ****     #endif  /* (PWM_B__QUAD == PWM_B_CONFIG) */
 203:Generated_Source\PSoC4/PWM_B.c **** }
 138              		.loc 1 203 0
 139 002e C046     		nop
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 7


 140 0030 BD46     		mov	sp, r7
 141 0032 03B0     		add	sp, sp, #12
 142              		@ sp needed
 143 0034 90BD     		pop	{r4, r7, pc}
 144              	.L6:
 145 0036 C046     		.align	2
 146              	.L5:
 147 0038 00002040 		.word	1075838976
 148              		.cfi_endproc
 149              	.LFE3:
 150              		.size	PWM_B_Enable, .-PWM_B_Enable
 151              		.section	.text.PWM_B_Start,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_B_Start
 154              		.code	16
 155              		.thumb_func
 156              		.type	PWM_B_Start, %function
 157              	PWM_B_Start:
 158              	.LFB4:
 204:Generated_Source\PSoC4/PWM_B.c **** 
 205:Generated_Source\PSoC4/PWM_B.c **** 
 206:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_Start
 208:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM_B.c **** *
 210:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 211:Generated_Source\PSoC4/PWM_B.c **** *  Initializes the PWM_B with default customizer
 212:Generated_Source\PSoC4/PWM_B.c **** *  values when called the first time and enables the PWM_B.
 213:Generated_Source\PSoC4/PWM_B.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM_B.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM_B.c **** *
 216:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM_B.c **** *  None
 218:Generated_Source\PSoC4/PWM_B.c **** *
 219:Generated_Source\PSoC4/PWM_B.c **** * Return:
 220:Generated_Source\PSoC4/PWM_B.c **** *  None
 221:Generated_Source\PSoC4/PWM_B.c **** *
 222:Generated_Source\PSoC4/PWM_B.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM_B.c **** *  PWM_B_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM_B.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM_B.c **** *  to 1 the first time PWM_B_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM_B.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM_B.c **** *  calls to the PWM_B_Start() routine.
 228:Generated_Source\PSoC4/PWM_B.c **** *
 229:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_Start(void)
 231:Generated_Source\PSoC4/PWM_B.c **** {
 159              		.loc 1 231 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 8


 232:Generated_Source\PSoC4/PWM_B.c ****     if (0u == PWM_B_initVar)
 169              		.loc 1 232 0
 170 0004 064B     		ldr	r3, .L9
 171 0006 1B78     		ldrb	r3, [r3]
 172 0008 002B     		cmp	r3, #0
 173 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/PWM_B.c ****     {
 234:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_Init();
 174              		.loc 1 234 0
 175 000c FFF7FEFF 		bl	PWM_B_Init
 235:Generated_Source\PSoC4/PWM_B.c ****         PWM_B_initVar = 1u;
 176              		.loc 1 235 0
 177 0010 034B     		ldr	r3, .L9
 178 0012 0122     		movs	r2, #1
 179 0014 1A70     		strb	r2, [r3]
 180              	.L8:
 236:Generated_Source\PSoC4/PWM_B.c ****     }
 237:Generated_Source\PSoC4/PWM_B.c **** 
 238:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_Enable();
 181              		.loc 1 238 0
 182 0016 FFF7FEFF 		bl	PWM_B_Enable
 239:Generated_Source\PSoC4/PWM_B.c **** }
 183              		.loc 1 239 0
 184 001a C046     		nop
 185 001c BD46     		mov	sp, r7
 186              		@ sp needed
 187 001e 80BD     		pop	{r7, pc}
 188              	.L10:
 189              		.align	2
 190              	.L9:
 191 0020 00000000 		.word	PWM_B_initVar
 192              		.cfi_endproc
 193              	.LFE4:
 194              		.size	PWM_B_Start, .-PWM_B_Start
 195              		.section	.text.PWM_B_Stop,"ax",%progbits
 196              		.align	2
 197              		.global	PWM_B_Stop
 198              		.code	16
 199              		.thumb_func
 200              		.type	PWM_B_Stop, %function
 201              	PWM_B_Stop:
 202              	.LFB5:
 240:Generated_Source\PSoC4/PWM_B.c **** 
 241:Generated_Source\PSoC4/PWM_B.c **** 
 242:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_Stop
 244:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM_B.c **** *
 246:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 247:Generated_Source\PSoC4/PWM_B.c **** *  Disables the PWM_B.
 248:Generated_Source\PSoC4/PWM_B.c **** *
 249:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM_B.c **** *  None
 251:Generated_Source\PSoC4/PWM_B.c **** *
 252:Generated_Source\PSoC4/PWM_B.c **** * Return:
 253:Generated_Source\PSoC4/PWM_B.c **** *  None
 254:Generated_Source\PSoC4/PWM_B.c **** *
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 9


 255:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_Stop(void)
 257:Generated_Source\PSoC4/PWM_B.c **** {
 203              		.loc 1 257 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 8
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 90B5     		push	{r4, r7, lr}
 208              		.cfi_def_cfa_offset 12
 209              		.cfi_offset 4, -12
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 83B0     		sub	sp, sp, #12
 213              		.cfi_def_cfa_offset 24
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM_B.c **** 
 260:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 216              		.loc 1 260 0
 217 0006 FC1D     		adds	r4, r7, #7
 218 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 219 000c 0300     		movs	r3, r0
 220 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/PWM_B.c **** 
 262:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_BLOCK_CONTROL_REG &= (uint32)~PWM_B_MASK;
 221              		.loc 1 262 0
 222 0010 074B     		ldr	r3, .L12
 223 0012 074A     		ldr	r2, .L12
 224 0014 1268     		ldr	r2, [r2]
 225 0016 0221     		movs	r1, #2
 226 0018 8A43     		bics	r2, r1
 227 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/PWM_B.c **** 
 264:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 228              		.loc 1 264 0
 229 001c FB1D     		adds	r3, r7, #7
 230 001e 1B78     		ldrb	r3, [r3]
 231 0020 1800     		movs	r0, r3
 232 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/PWM_B.c **** }
 233              		.loc 1 265 0
 234 0026 C046     		nop
 235 0028 BD46     		mov	sp, r7
 236 002a 03B0     		add	sp, sp, #12
 237              		@ sp needed
 238 002c 90BD     		pop	{r4, r7, pc}
 239              	.L13:
 240 002e C046     		.align	2
 241              	.L12:
 242 0030 00002040 		.word	1075838976
 243              		.cfi_endproc
 244              	.LFE5:
 245              		.size	PWM_B_Stop, .-PWM_B_Stop
 246              		.section	.text.PWM_B_SetMode,"ax",%progbits
 247              		.align	2
 248              		.global	PWM_B_SetMode
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 10


 249              		.code	16
 250              		.thumb_func
 251              		.type	PWM_B_SetMode, %function
 252              	PWM_B_SetMode:
 253              	.LFB6:
 266:Generated_Source\PSoC4/PWM_B.c **** 
 267:Generated_Source\PSoC4/PWM_B.c **** 
 268:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetMode
 270:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM_B.c **** *
 272:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 273:Generated_Source\PSoC4/PWM_B.c **** *  Sets the operation mode of the PWM_B. This function is used when
 274:Generated_Source\PSoC4/PWM_B.c **** *  configured as a generic PWM_B and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM_B.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM_B.c **** *
 277:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 278:Generated_Source\PSoC4/PWM_B.c **** *  mode: Mode for the PWM_B to operate in
 279:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 280:Generated_Source\PSoC4/PWM_B.c **** *   - PWM_B_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM_B.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM_B.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM_B.c **** *
 289:Generated_Source\PSoC4/PWM_B.c **** * Return:
 290:Generated_Source\PSoC4/PWM_B.c **** *  None
 291:Generated_Source\PSoC4/PWM_B.c **** *
 292:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM_B.c **** {
 254              		.loc 1 294 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 16
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258 0000 90B5     		push	{r4, r7, lr}
 259              		.cfi_def_cfa_offset 12
 260              		.cfi_offset 4, -12
 261              		.cfi_offset 7, -8
 262              		.cfi_offset 14, -4
 263 0002 85B0     		sub	sp, sp, #20
 264              		.cfi_def_cfa_offset 32
 265 0004 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
 267 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM_B.c **** 
 297:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 268              		.loc 1 297 0
 269 0008 0F23     		movs	r3, #15
 270 000a FC18     		adds	r4, r7, r3
 271 000c FFF7FEFF 		bl	CyEnterCriticalSection
 272 0010 0300     		movs	r3, r0
 273 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 11


 298:Generated_Source\PSoC4/PWM_B.c **** 
 299:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_MODE_MASK;
 274              		.loc 1 299 0
 275 0014 0A4B     		ldr	r3, .L15
 276 0016 0A4A     		ldr	r2, .L15
 277 0018 1268     		ldr	r2, [r2]
 278 001a 0A49     		ldr	r1, .L15+4
 279 001c 0A40     		ands	r2, r1
 280 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= mode;
 281              		.loc 1 300 0
 282 0020 074B     		ldr	r3, .L15
 283 0022 074A     		ldr	r2, .L15
 284 0024 1168     		ldr	r1, [r2]
 285 0026 7A68     		ldr	r2, [r7, #4]
 286 0028 0A43     		orrs	r2, r1
 287 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/PWM_B.c **** 
 302:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 288              		.loc 1 302 0
 289 002c 0F23     		movs	r3, #15
 290 002e FB18     		adds	r3, r7, r3
 291 0030 1B78     		ldrb	r3, [r3]
 292 0032 1800     		movs	r0, r3
 293 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/PWM_B.c **** }
 294              		.loc 1 303 0
 295 0038 C046     		nop
 296 003a BD46     		mov	sp, r7
 297 003c 05B0     		add	sp, sp, #20
 298              		@ sp needed
 299 003e 90BD     		pop	{r4, r7, pc}
 300              	.L16:
 301              		.align	2
 302              	.L15:
 303 0040 40012040 		.word	1075839296
 304 0044 FFFFFFF8 		.word	-117440513
 305              		.cfi_endproc
 306              	.LFE6:
 307              		.size	PWM_B_SetMode, .-PWM_B_SetMode
 308              		.section	.text.PWM_B_SetQDMode,"ax",%progbits
 309              		.align	2
 310              		.global	PWM_B_SetQDMode
 311              		.code	16
 312              		.thumb_func
 313              		.type	PWM_B_SetQDMode, %function
 314              	PWM_B_SetQDMode:
 315              	.LFB7:
 304:Generated_Source\PSoC4/PWM_B.c **** 
 305:Generated_Source\PSoC4/PWM_B.c **** 
 306:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetQDMode
 308:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM_B.c **** *
 310:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 311:Generated_Source\PSoC4/PWM_B.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM_B.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 12


 313:Generated_Source\PSoC4/PWM_B.c **** *
 314:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM_B.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 317:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM_B.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM_B.c **** *
 322:Generated_Source\PSoC4/PWM_B.c **** * Return:
 323:Generated_Source\PSoC4/PWM_B.c **** *  None
 324:Generated_Source\PSoC4/PWM_B.c **** *
 325:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM_B.c **** {
 316              		.loc 1 327 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 16
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320 0000 90B5     		push	{r4, r7, lr}
 321              		.cfi_def_cfa_offset 12
 322              		.cfi_offset 4, -12
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 85B0     		sub	sp, sp, #20
 326              		.cfi_def_cfa_offset 32
 327 0004 00AF     		add	r7, sp, #0
 328              		.cfi_def_cfa_register 7
 329 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM_B.c **** 
 330:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 330              		.loc 1 330 0
 331 0008 0F23     		movs	r3, #15
 332 000a FC18     		adds	r4, r7, r3
 333 000c FFF7FEFF 		bl	CyEnterCriticalSection
 334 0010 0300     		movs	r3, r0
 335 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/PWM_B.c **** 
 332:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_QUAD_MODE_MASK;
 336              		.loc 1 332 0
 337 0014 0A4B     		ldr	r3, .L18
 338 0016 0A4A     		ldr	r2, .L18
 339 0018 1268     		ldr	r2, [r2]
 340 001a 0A49     		ldr	r1, .L18+4
 341 001c 0A40     		ands	r2, r1
 342 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= qdMode;
 343              		.loc 1 333 0
 344 0020 074B     		ldr	r3, .L18
 345 0022 074A     		ldr	r2, .L18
 346 0024 1168     		ldr	r1, [r2]
 347 0026 7A68     		ldr	r2, [r7, #4]
 348 0028 0A43     		orrs	r2, r1
 349 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/PWM_B.c **** 
 335:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 13


 350              		.loc 1 335 0
 351 002c 0F23     		movs	r3, #15
 352 002e FB18     		adds	r3, r7, r3
 353 0030 1B78     		ldrb	r3, [r3]
 354 0032 1800     		movs	r0, r3
 355 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/PWM_B.c **** }
 356              		.loc 1 336 0
 357 0038 C046     		nop
 358 003a BD46     		mov	sp, r7
 359 003c 05B0     		add	sp, sp, #20
 360              		@ sp needed
 361 003e 90BD     		pop	{r4, r7, pc}
 362              	.L19:
 363              		.align	2
 364              	.L18:
 365 0040 40012040 		.word	1075839296
 366 0044 FFFF8FFF 		.word	-7340033
 367              		.cfi_endproc
 368              	.LFE7:
 369              		.size	PWM_B_SetQDMode, .-PWM_B_SetQDMode
 370              		.section	.text.PWM_B_SetPrescaler,"ax",%progbits
 371              		.align	2
 372              		.global	PWM_B_SetPrescaler
 373              		.code	16
 374              		.thumb_func
 375              		.type	PWM_B_SetPrescaler, %function
 376              	PWM_B_SetPrescaler:
 377              	.LFB8:
 337:Generated_Source\PSoC4/PWM_B.c **** 
 338:Generated_Source\PSoC4/PWM_B.c **** 
 339:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPrescaler
 341:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM_B.c **** *
 343:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 344:Generated_Source\PSoC4/PWM_B.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM_B.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM_B.c **** *
 347:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM_B.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 350:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM_B.c **** *
 359:Generated_Source\PSoC4/PWM_B.c **** * Return:
 360:Generated_Source\PSoC4/PWM_B.c **** *  None
 361:Generated_Source\PSoC4/PWM_B.c **** *
 362:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM_B.c **** {
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 14


 378              		.loc 1 364 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 16
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382 0000 90B5     		push	{r4, r7, lr}
 383              		.cfi_def_cfa_offset 12
 384              		.cfi_offset 4, -12
 385              		.cfi_offset 7, -8
 386              		.cfi_offset 14, -4
 387 0002 85B0     		sub	sp, sp, #20
 388              		.cfi_def_cfa_offset 32
 389 0004 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
 391 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM_B.c **** 
 367:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 392              		.loc 1 367 0
 393 0008 0F23     		movs	r3, #15
 394 000a FC18     		adds	r4, r7, r3
 395 000c FFF7FEFF 		bl	CyEnterCriticalSection
 396 0010 0300     		movs	r3, r0
 397 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/PWM_B.c **** 
 369:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_PRESCALER_MASK;
 398              		.loc 1 369 0
 399 0014 0A4B     		ldr	r3, .L21
 400 0016 0A4A     		ldr	r2, .L21
 401 0018 1268     		ldr	r2, [r2]
 402 001a 0A49     		ldr	r1, .L21+4
 403 001c 0A40     		ands	r2, r1
 404 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= prescaler;
 405              		.loc 1 370 0
 406 0020 074B     		ldr	r3, .L21
 407 0022 074A     		ldr	r2, .L21
 408 0024 1168     		ldr	r1, [r2]
 409 0026 7A68     		ldr	r2, [r7, #4]
 410 0028 0A43     		orrs	r2, r1
 411 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/PWM_B.c **** 
 372:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 412              		.loc 1 372 0
 413 002c 0F23     		movs	r3, #15
 414 002e FB18     		adds	r3, r7, r3
 415 0030 1B78     		ldrb	r3, [r3]
 416 0032 1800     		movs	r0, r3
 417 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/PWM_B.c **** }
 418              		.loc 1 373 0
 419 0038 C046     		nop
 420 003a BD46     		mov	sp, r7
 421 003c 05B0     		add	sp, sp, #20
 422              		@ sp needed
 423 003e 90BD     		pop	{r4, r7, pc}
 424              	.L22:
 425              		.align	2
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 15


 426              	.L21:
 427 0040 40012040 		.word	1075839296
 428 0044 FF00FFFF 		.word	-65281
 429              		.cfi_endproc
 430              	.LFE8:
 431              		.size	PWM_B_SetPrescaler, .-PWM_B_SetPrescaler
 432              		.section	.text.PWM_B_SetOneShot,"ax",%progbits
 433              		.align	2
 434              		.global	PWM_B_SetOneShot
 435              		.code	16
 436              		.thumb_func
 437              		.type	PWM_B_SetOneShot, %function
 438              	PWM_B_SetOneShot:
 439              	.LFB9:
 374:Generated_Source\PSoC4/PWM_B.c **** 
 375:Generated_Source\PSoC4/PWM_B.c **** 
 376:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetOneShot
 378:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM_B.c **** *
 380:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 381:Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the PWM_B runs
 382:Generated_Source\PSoC4/PWM_B.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM_B.c **** *  PWM_B operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM_B.c **** *
 385:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM_B.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 388:Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM_B.c **** *
 391:Generated_Source\PSoC4/PWM_B.c **** * Return:
 392:Generated_Source\PSoC4/PWM_B.c **** *  None
 393:Generated_Source\PSoC4/PWM_B.c **** *
 394:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM_B.c **** {
 440              		.loc 1 396 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 16
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 0000 90B5     		push	{r4, r7, lr}
 445              		.cfi_def_cfa_offset 12
 446              		.cfi_offset 4, -12
 447              		.cfi_offset 7, -8
 448              		.cfi_offset 14, -4
 449 0002 85B0     		sub	sp, sp, #20
 450              		.cfi_def_cfa_offset 32
 451 0004 00AF     		add	r7, sp, #0
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM_B.c **** 
 399:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 454              		.loc 1 399 0
 455 0008 0F23     		movs	r3, #15
 456 000a FC18     		adds	r4, r7, r3
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 16


 457 000c FFF7FEFF 		bl	CyEnterCriticalSection
 458 0010 0300     		movs	r3, r0
 459 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/PWM_B.c **** 
 401:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_ONESHOT_MASK;
 460              		.loc 1 401 0
 461 0014 0C4B     		ldr	r3, .L24
 462 0016 0C4A     		ldr	r2, .L24
 463 0018 1268     		ldr	r2, [r2]
 464 001a 0C49     		ldr	r1, .L24+4
 465 001c 0A40     		ands	r2, r1
 466 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_B_1BIT_MASK) <<
 467              		.loc 1 402 0
 468 0020 094B     		ldr	r3, .L24
 469 0022 094A     		ldr	r2, .L24
 470 0024 1168     		ldr	r1, [r2]
 471 0026 7A68     		ldr	r2, [r7, #4]
 472 0028 9004     		lsls	r0, r2, #18
 473 002a 8022     		movs	r2, #128
 474 002c D202     		lsls	r2, r2, #11
 475 002e 0240     		ands	r2, r0
 476 0030 0A43     		orrs	r2, r1
 477 0032 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/PWM_B.c ****                                                                PWM_B_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM_B.c **** 
 405:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 478              		.loc 1 405 0
 479 0034 0F23     		movs	r3, #15
 480 0036 FB18     		adds	r3, r7, r3
 481 0038 1B78     		ldrb	r3, [r3]
 482 003a 1800     		movs	r0, r3
 483 003c FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/PWM_B.c **** }
 484              		.loc 1 406 0
 485 0040 C046     		nop
 486 0042 BD46     		mov	sp, r7
 487 0044 05B0     		add	sp, sp, #20
 488              		@ sp needed
 489 0046 90BD     		pop	{r4, r7, pc}
 490              	.L25:
 491              		.align	2
 492              	.L24:
 493 0048 40012040 		.word	1075839296
 494 004c FFFFFBFF 		.word	-262145
 495              		.cfi_endproc
 496              	.LFE9:
 497              		.size	PWM_B_SetOneShot, .-PWM_B_SetOneShot
 498              		.section	.text.PWM_B_SetPWMMode,"ax",%progbits
 499              		.align	2
 500              		.global	PWM_B_SetPWMMode
 501              		.code	16
 502              		.thumb_func
 503              		.type	PWM_B_SetPWMMode, %function
 504              	PWM_B_SetPWMMode:
 505              	.LFB10:
 407:Generated_Source\PSoC4/PWM_B.c **** 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 17


 408:Generated_Source\PSoC4/PWM_B.c **** 
 409:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMMode
 411:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM_B.c **** *
 413:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 414:Generated_Source\PSoC4/PWM_B.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM_B.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM_B.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM_B.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM_B.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM_B.c **** *
 420:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM_B.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM_B.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 424:Generated_Source\PSoC4/PWM_B.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM_B.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM_B.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM_B.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM_B.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM_B.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM_B.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM_B.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM_B.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM_B.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM_B.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM_B.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM_B.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM_B.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM_B.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM_B.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM_B.c **** *
 445:Generated_Source\PSoC4/PWM_B.c **** * Return:
 446:Generated_Source\PSoC4/PWM_B.c **** *  None
 447:Generated_Source\PSoC4/PWM_B.c **** *
 448:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM_B.c **** {
 506              		.loc 1 450 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 8
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510 0000 80B5     		push	{r7, lr}
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 7, -8
 513              		.cfi_offset 14, -4
 514 0002 82B0     		sub	sp, sp, #8
 515              		.cfi_def_cfa_offset 16
 516 0004 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
 518 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL2_REG = (modeMask & PWM_B_6BIT_MASK);
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 18


 519              		.loc 1 451 0
 520 0008 044B     		ldr	r3, .L27
 521 000a 7A68     		ldr	r2, [r7, #4]
 522 000c 3F21     		movs	r1, #63
 523 000e 0A40     		ands	r2, r1
 524 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/PWM_B.c **** }
 525              		.loc 1 452 0
 526 0012 C046     		nop
 527 0014 BD46     		mov	sp, r7
 528 0016 02B0     		add	sp, sp, #8
 529              		@ sp needed
 530 0018 80BD     		pop	{r7, pc}
 531              	.L28:
 532 001a C046     		.align	2
 533              	.L27:
 534 001c 68012040 		.word	1075839336
 535              		.cfi_endproc
 536              	.LFE10:
 537              		.size	PWM_B_SetPWMMode, .-PWM_B_SetPWMMode
 538              		.section	.text.PWM_B_SetPWMSyncKill,"ax",%progbits
 539              		.align	2
 540              		.global	PWM_B_SetPWMSyncKill
 541              		.code	16
 542              		.thumb_func
 543              		.type	PWM_B_SetPWMSyncKill, %function
 544              	PWM_B_SetPWMSyncKill:
 545              	.LFB11:
 453:Generated_Source\PSoC4/PWM_B.c **** 
 454:Generated_Source\PSoC4/PWM_B.c **** 
 455:Generated_Source\PSoC4/PWM_B.c **** 
 456:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM_B.c **** *
 460:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 461:Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM_B.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM_B.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM_B.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM_B.c **** *
 466:Generated_Source\PSoC4/PWM_B.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM_B.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM_B.c **** *
 469:Generated_Source\PSoC4/PWM_B.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM_B.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM_B.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM_B.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM_B.c **** 
 474:Generated_Source\PSoC4/PWM_B.c **** *
 475:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM_B.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 478:Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM_B.c **** *
 481:Generated_Source\PSoC4/PWM_B.c **** * Return:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 19


 482:Generated_Source\PSoC4/PWM_B.c **** *  None
 483:Generated_Source\PSoC4/PWM_B.c **** *
 484:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM_B.c **** {
 546              		.loc 1 486 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 16
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550 0000 90B5     		push	{r4, r7, lr}
 551              		.cfi_def_cfa_offset 12
 552              		.cfi_offset 4, -12
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 85B0     		sub	sp, sp, #20
 556              		.cfi_def_cfa_offset 32
 557 0004 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 559 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM_B.c **** 
 489:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 560              		.loc 1 489 0
 561 0008 0F23     		movs	r3, #15
 562 000a FC18     		adds	r4, r7, r3
 563 000c FFF7FEFF 		bl	CyEnterCriticalSection
 564 0010 0300     		movs	r3, r0
 565 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/PWM_B.c **** 
 491:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_PWM_SYNC_KILL_MASK;
 566              		.loc 1 491 0
 567 0014 0C4B     		ldr	r3, .L30
 568 0016 0C4A     		ldr	r2, .L30
 569 0018 1268     		ldr	r2, [r2]
 570 001a 0421     		movs	r1, #4
 571 001c 8A43     		bics	r2, r1
 572 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_B_1BIT_MASK)  <<
 573              		.loc 1 492 0
 574 0020 094B     		ldr	r3, .L30
 575 0022 094A     		ldr	r2, .L30
 576 0024 1168     		ldr	r1, [r2]
 577 0026 7A68     		ldr	r2, [r7, #4]
 578 0028 9200     		lsls	r2, r2, #2
 579 002a 0420     		movs	r0, #4
 580 002c 0240     		ands	r2, r0
 581 002e 0A43     		orrs	r2, r1
 582 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/PWM_B.c ****                                                PWM_B_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM_B.c **** 
 495:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 583              		.loc 1 495 0
 584 0032 0F23     		movs	r3, #15
 585 0034 FB18     		adds	r3, r7, r3
 586 0036 1B78     		ldrb	r3, [r3]
 587 0038 1800     		movs	r0, r3
 588 003a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 20


 496:Generated_Source\PSoC4/PWM_B.c **** }
 589              		.loc 1 496 0
 590 003e C046     		nop
 591 0040 BD46     		mov	sp, r7
 592 0042 05B0     		add	sp, sp, #20
 593              		@ sp needed
 594 0044 90BD     		pop	{r4, r7, pc}
 595              	.L31:
 596 0046 C046     		.align	2
 597              	.L30:
 598 0048 40012040 		.word	1075839296
 599              		.cfi_endproc
 600              	.LFE11:
 601              		.size	PWM_B_SetPWMSyncKill, .-PWM_B_SetPWMSyncKill
 602              		.section	.text.PWM_B_SetPWMStopOnKill,"ax",%progbits
 603              		.align	2
 604              		.global	PWM_B_SetPWMStopOnKill
 605              		.code	16
 606              		.thumb_func
 607              		.type	PWM_B_SetPWMStopOnKill, %function
 608              	PWM_B_SetPWMStopOnKill:
 609              	.LFB12:
 497:Generated_Source\PSoC4/PWM_B.c **** 
 498:Generated_Source\PSoC4/PWM_B.c **** 
 499:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM_B.c **** *
 503:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 504:Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM_B.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM_B.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM_B.c **** *
 508:Generated_Source\PSoC4/PWM_B.c **** *
 509:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM_B.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 512:Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM_B.c **** *
 515:Generated_Source\PSoC4/PWM_B.c **** * Return:
 516:Generated_Source\PSoC4/PWM_B.c **** *  None
 517:Generated_Source\PSoC4/PWM_B.c **** *
 518:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM_B.c **** {
 610              		.loc 1 520 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 16
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614 0000 90B5     		push	{r4, r7, lr}
 615              		.cfi_def_cfa_offset 12
 616              		.cfi_offset 4, -12
 617              		.cfi_offset 7, -8
 618              		.cfi_offset 14, -4
 619 0002 85B0     		sub	sp, sp, #20
 620              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 21


 621 0004 00AF     		add	r7, sp, #0
 622              		.cfi_def_cfa_register 7
 623 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM_B.c **** 
 523:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 624              		.loc 1 523 0
 625 0008 0F23     		movs	r3, #15
 626 000a FC18     		adds	r4, r7, r3
 627 000c FFF7FEFF 		bl	CyEnterCriticalSection
 628 0010 0300     		movs	r3, r0
 629 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/PWM_B.c **** 
 525:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_PWM_STOP_KILL_MASK;
 630              		.loc 1 525 0
 631 0014 0C4B     		ldr	r3, .L33
 632 0016 0C4A     		ldr	r2, .L33
 633 0018 1268     		ldr	r2, [r2]
 634 001a 0821     		movs	r1, #8
 635 001c 8A43     		bics	r2, r1
 636 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_B_1BIT_MASK)  <<
 637              		.loc 1 526 0
 638 0020 094B     		ldr	r3, .L33
 639 0022 094A     		ldr	r2, .L33
 640 0024 1168     		ldr	r1, [r2]
 641 0026 7A68     		ldr	r2, [r7, #4]
 642 0028 D200     		lsls	r2, r2, #3
 643 002a 0820     		movs	r0, #8
 644 002c 0240     		ands	r2, r0
 645 002e 0A43     		orrs	r2, r1
 646 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/PWM_B.c ****                                                          PWM_B_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM_B.c **** 
 529:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 647              		.loc 1 529 0
 648 0032 0F23     		movs	r3, #15
 649 0034 FB18     		adds	r3, r7, r3
 650 0036 1B78     		ldrb	r3, [r3]
 651 0038 1800     		movs	r0, r3
 652 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/PWM_B.c **** }
 653              		.loc 1 530 0
 654 003e C046     		nop
 655 0040 BD46     		mov	sp, r7
 656 0042 05B0     		add	sp, sp, #20
 657              		@ sp needed
 658 0044 90BD     		pop	{r4, r7, pc}
 659              	.L34:
 660 0046 C046     		.align	2
 661              	.L33:
 662 0048 40012040 		.word	1075839296
 663              		.cfi_endproc
 664              	.LFE12:
 665              		.size	PWM_B_SetPWMStopOnKill, .-PWM_B_SetPWMStopOnKill
 666              		.section	.text.PWM_B_SetPWMDeadTime,"ax",%progbits
 667              		.align	2
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 22


 668              		.global	PWM_B_SetPWMDeadTime
 669              		.code	16
 670              		.thumb_func
 671              		.type	PWM_B_SetPWMDeadTime, %function
 672              	PWM_B_SetPWMDeadTime:
 673              	.LFB13:
 531:Generated_Source\PSoC4/PWM_B.c **** 
 532:Generated_Source\PSoC4/PWM_B.c **** 
 533:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM_B.c **** *
 537:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 538:Generated_Source\PSoC4/PWM_B.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM_B.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM_B.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM_B.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM_B.c **** 
 543:Generated_Source\PSoC4/PWM_B.c **** *
 544:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM_B.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM_B.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM_B.c **** *
 548:Generated_Source\PSoC4/PWM_B.c **** * Return:
 549:Generated_Source\PSoC4/PWM_B.c **** *  None
 550:Generated_Source\PSoC4/PWM_B.c **** *
 551:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM_B.c **** {
 674              		.loc 1 553 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 16
 677              		@ frame_needed = 1, uses_anonymous_args = 0
 678 0000 90B5     		push	{r4, r7, lr}
 679              		.cfi_def_cfa_offset 12
 680              		.cfi_offset 4, -12
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 85B0     		sub	sp, sp, #20
 684              		.cfi_def_cfa_offset 32
 685 0004 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
 687 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM_B.c **** 
 556:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 688              		.loc 1 556 0
 689 0008 0F23     		movs	r3, #15
 690 000a FC18     		adds	r4, r7, r3
 691 000c FFF7FEFF 		bl	CyEnterCriticalSection
 692 0010 0300     		movs	r3, r0
 693 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/PWM_B.c **** 
 558:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_PRESCALER_MASK;
 694              		.loc 1 558 0
 695 0014 0C4B     		ldr	r3, .L36
 696 0016 0C4A     		ldr	r2, .L36
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 23


 697 0018 1268     		ldr	r2, [r2]
 698 001a 0C49     		ldr	r1, .L36+4
 699 001c 0A40     		ands	r2, r1
 700 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((deadTime & PWM_B_8BIT_MASK) <<
 701              		.loc 1 559 0
 702 0020 094B     		ldr	r3, .L36
 703 0022 094A     		ldr	r2, .L36
 704 0024 1168     		ldr	r1, [r2]
 705 0026 7A68     		ldr	r2, [r7, #4]
 706 0028 1202     		lsls	r2, r2, #8
 707 002a 1204     		lsls	r2, r2, #16
 708 002c 120C     		lsrs	r2, r2, #16
 709 002e 0A43     		orrs	r2, r1
 710 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/PWM_B.c ****                                                           PWM_B_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM_B.c **** 
 562:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 711              		.loc 1 562 0
 712 0032 0F23     		movs	r3, #15
 713 0034 FB18     		adds	r3, r7, r3
 714 0036 1B78     		ldrb	r3, [r3]
 715 0038 1800     		movs	r0, r3
 716 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/PWM_B.c **** }
 717              		.loc 1 563 0
 718 003e C046     		nop
 719 0040 BD46     		mov	sp, r7
 720 0042 05B0     		add	sp, sp, #20
 721              		@ sp needed
 722 0044 90BD     		pop	{r4, r7, pc}
 723              	.L37:
 724 0046 C046     		.align	2
 725              	.L36:
 726 0048 40012040 		.word	1075839296
 727 004c FF00FFFF 		.word	-65281
 728              		.cfi_endproc
 729              	.LFE13:
 730              		.size	PWM_B_SetPWMDeadTime, .-PWM_B_SetPWMDeadTime
 731              		.section	.text.PWM_B_SetPWMInvert,"ax",%progbits
 732              		.align	2
 733              		.global	PWM_B_SetPWMInvert
 734              		.code	16
 735              		.thumb_func
 736              		.type	PWM_B_SetPWMInvert, %function
 737              	PWM_B_SetPWMInvert:
 738              	.LFB14:
 564:Generated_Source\PSoC4/PWM_B.c **** 
 565:Generated_Source\PSoC4/PWM_B.c **** 
 566:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMInvert
 568:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM_B.c **** *
 570:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 571:Generated_Source\PSoC4/PWM_B.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM_B.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM_B.c **** *  applicable to the three PWM modes.
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 24


 574:Generated_Source\PSoC4/PWM_B.c **** *
 575:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM_B.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 578:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM_B.c **** *
 581:Generated_Source\PSoC4/PWM_B.c **** * Return:
 582:Generated_Source\PSoC4/PWM_B.c **** *  None
 583:Generated_Source\PSoC4/PWM_B.c **** *
 584:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM_B.c **** {
 739              		.loc 1 586 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 16
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743 0000 90B5     		push	{r4, r7, lr}
 744              		.cfi_def_cfa_offset 12
 745              		.cfi_offset 4, -12
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 85B0     		sub	sp, sp, #20
 749              		.cfi_def_cfa_offset 32
 750 0004 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 752 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM_B.c **** 
 589:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 753              		.loc 1 589 0
 754 0008 0F23     		movs	r3, #15
 755 000a FC18     		adds	r4, r7, r3
 756 000c FFF7FEFF 		bl	CyEnterCriticalSection
 757 0010 0300     		movs	r3, r0
 758 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/PWM_B.c **** 
 591:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_INV_OUT_MASK;
 759              		.loc 1 591 0
 760 0014 0A4B     		ldr	r3, .L39
 761 0016 0A4A     		ldr	r2, .L39
 762 0018 1268     		ldr	r2, [r2]
 763 001a 0A49     		ldr	r1, .L39+4
 764 001c 0A40     		ands	r2, r1
 765 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= mask;
 766              		.loc 1 592 0
 767 0020 074B     		ldr	r3, .L39
 768 0022 074A     		ldr	r2, .L39
 769 0024 1168     		ldr	r1, [r2]
 770 0026 7A68     		ldr	r2, [r7, #4]
 771 0028 0A43     		orrs	r2, r1
 772 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/PWM_B.c **** 
 594:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 773              		.loc 1 594 0
 774 002c 0F23     		movs	r3, #15
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 25


 775 002e FB18     		adds	r3, r7, r3
 776 0030 1B78     		ldrb	r3, [r3]
 777 0032 1800     		movs	r0, r3
 778 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/PWM_B.c **** }
 779              		.loc 1 595 0
 780 0038 C046     		nop
 781 003a BD46     		mov	sp, r7
 782 003c 05B0     		add	sp, sp, #20
 783              		@ sp needed
 784 003e 90BD     		pop	{r4, r7, pc}
 785              	.L40:
 786              		.align	2
 787              	.L39:
 788 0040 40012040 		.word	1075839296
 789 0044 FFFFCFFF 		.word	-3145729
 790              		.cfi_endproc
 791              	.LFE14:
 792              		.size	PWM_B_SetPWMInvert, .-PWM_B_SetPWMInvert
 793              		.section	.text.PWM_B_WriteCounter,"ax",%progbits
 794              		.align	2
 795              		.global	PWM_B_WriteCounter
 796              		.code	16
 797              		.thumb_func
 798              		.type	PWM_B_WriteCounter, %function
 799              	PWM_B_WriteCounter:
 800              	.LFB15:
 596:Generated_Source\PSoC4/PWM_B.c **** 
 597:Generated_Source\PSoC4/PWM_B.c **** 
 598:Generated_Source\PSoC4/PWM_B.c **** 
 599:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WriteCounter
 601:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM_B.c **** *
 603:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 604:Generated_Source\PSoC4/PWM_B.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM_B.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM_B.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM_B.c **** *
 608:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM_B.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM_B.c **** *
 611:Generated_Source\PSoC4/PWM_B.c **** * Return:
 612:Generated_Source\PSoC4/PWM_B.c **** *  None
 613:Generated_Source\PSoC4/PWM_B.c **** *
 614:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM_B.c **** {
 801              		.loc 1 616 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 8
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805 0000 80B5     		push	{r7, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 26


 810              		.cfi_def_cfa_offset 16
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 813 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_COUNTER_REG = (count & PWM_B_16BIT_MASK);
 814              		.loc 1 617 0
 815 0008 044B     		ldr	r3, .L42
 816 000a 7A68     		ldr	r2, [r7, #4]
 817 000c 1204     		lsls	r2, r2, #16
 818 000e 120C     		lsrs	r2, r2, #16
 819 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/PWM_B.c **** }
 820              		.loc 1 618 0
 821 0012 C046     		nop
 822 0014 BD46     		mov	sp, r7
 823 0016 02B0     		add	sp, sp, #8
 824              		@ sp needed
 825 0018 80BD     		pop	{r7, pc}
 826              	.L43:
 827 001a C046     		.align	2
 828              	.L42:
 829 001c 48012040 		.word	1075839304
 830              		.cfi_endproc
 831              	.LFE15:
 832              		.size	PWM_B_WriteCounter, .-PWM_B_WriteCounter
 833              		.section	.text.PWM_B_ReadCounter,"ax",%progbits
 834              		.align	2
 835              		.global	PWM_B_ReadCounter
 836              		.code	16
 837              		.thumb_func
 838              		.type	PWM_B_ReadCounter, %function
 839              	PWM_B_ReadCounter:
 840              	.LFB16:
 619:Generated_Source\PSoC4/PWM_B.c **** 
 620:Generated_Source\PSoC4/PWM_B.c **** 
 621:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCounter
 623:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM_B.c **** *
 625:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 626:Generated_Source\PSoC4/PWM_B.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM_B.c **** *
 628:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM_B.c **** *  None
 630:Generated_Source\PSoC4/PWM_B.c **** *
 631:Generated_Source\PSoC4/PWM_B.c **** * Return:
 632:Generated_Source\PSoC4/PWM_B.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM_B.c **** *
 634:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM_B.c **** {
 841              		.loc 1 636 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 1, uses_anonymous_args = 0
 845 0000 80B5     		push	{r7, lr}
 846              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 27


 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 00AF     		add	r7, sp, #0
 850              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_COUNTER_REG & PWM_B_16BIT_MASK);
 851              		.loc 1 637 0
 852 0004 034B     		ldr	r3, .L46
 853 0006 1B68     		ldr	r3, [r3]
 854 0008 1B04     		lsls	r3, r3, #16
 855 000a 1B0C     		lsrs	r3, r3, #16
 638:Generated_Source\PSoC4/PWM_B.c **** }
 856              		.loc 1 638 0
 857 000c 1800     		movs	r0, r3
 858 000e BD46     		mov	sp, r7
 859              		@ sp needed
 860 0010 80BD     		pop	{r7, pc}
 861              	.L47:
 862 0012 C046     		.align	2
 863              	.L46:
 864 0014 48012040 		.word	1075839304
 865              		.cfi_endproc
 866              	.LFE16:
 867              		.size	PWM_B_ReadCounter, .-PWM_B_ReadCounter
 868              		.section	.text.PWM_B_SetCounterMode,"ax",%progbits
 869              		.align	2
 870              		.global	PWM_B_SetCounterMode
 871              		.code	16
 872              		.thumb_func
 873              		.type	PWM_B_SetCounterMode, %function
 874              	PWM_B_SetCounterMode:
 875              	.LFB17:
 639:Generated_Source\PSoC4/PWM_B.c **** 
 640:Generated_Source\PSoC4/PWM_B.c **** 
 641:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetCounterMode
 643:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM_B.c **** *
 645:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 646:Generated_Source\PSoC4/PWM_B.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM_B.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM_B.c **** *
 649:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM_B.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 652:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM_B.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM_B.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM_B.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM_B.c **** *
 660:Generated_Source\PSoC4/PWM_B.c **** * Return:
 661:Generated_Source\PSoC4/PWM_B.c **** *  None
 662:Generated_Source\PSoC4/PWM_B.c **** *
 663:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetCounterMode(uint32 counterMode)
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 28


 665:Generated_Source\PSoC4/PWM_B.c **** {
 876              		.loc 1 665 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 16
 879              		@ frame_needed = 1, uses_anonymous_args = 0
 880 0000 90B5     		push	{r4, r7, lr}
 881              		.cfi_def_cfa_offset 12
 882              		.cfi_offset 4, -12
 883              		.cfi_offset 7, -8
 884              		.cfi_offset 14, -4
 885 0002 85B0     		sub	sp, sp, #20
 886              		.cfi_def_cfa_offset 32
 887 0004 00AF     		add	r7, sp, #0
 888              		.cfi_def_cfa_register 7
 889 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM_B.c **** 
 668:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 890              		.loc 1 668 0
 891 0008 0F23     		movs	r3, #15
 892 000a FC18     		adds	r4, r7, r3
 893 000c FFF7FEFF 		bl	CyEnterCriticalSection
 894 0010 0300     		movs	r3, r0
 895 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/PWM_B.c **** 
 670:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_UPDOWN_MASK;
 896              		.loc 1 670 0
 897 0014 0A4B     		ldr	r3, .L49
 898 0016 0A4A     		ldr	r2, .L49
 899 0018 1268     		ldr	r2, [r2]
 900 001a 0A49     		ldr	r1, .L49+4
 901 001c 0A40     		ands	r2, r1
 902 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= counterMode;
 903              		.loc 1 671 0
 904 0020 074B     		ldr	r3, .L49
 905 0022 074A     		ldr	r2, .L49
 906 0024 1168     		ldr	r1, [r2]
 907 0026 7A68     		ldr	r2, [r7, #4]
 908 0028 0A43     		orrs	r2, r1
 909 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/PWM_B.c **** 
 673:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 910              		.loc 1 673 0
 911 002c 0F23     		movs	r3, #15
 912 002e FB18     		adds	r3, r7, r3
 913 0030 1B78     		ldrb	r3, [r3]
 914 0032 1800     		movs	r0, r3
 915 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/PWM_B.c **** }
 916              		.loc 1 674 0
 917 0038 C046     		nop
 918 003a BD46     		mov	sp, r7
 919 003c 05B0     		add	sp, sp, #20
 920              		@ sp needed
 921 003e 90BD     		pop	{r4, r7, pc}
 922              	.L50:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 29


 923              		.align	2
 924              	.L49:
 925 0040 40012040 		.word	1075839296
 926 0044 FFFFFCFF 		.word	-196609
 927              		.cfi_endproc
 928              	.LFE17:
 929              		.size	PWM_B_SetCounterMode, .-PWM_B_SetCounterMode
 930              		.section	.text.PWM_B_WritePeriod,"ax",%progbits
 931              		.align	2
 932              		.global	PWM_B_WritePeriod
 933              		.code	16
 934              		.thumb_func
 935              		.type	PWM_B_WritePeriod, %function
 936              	PWM_B_WritePeriod:
 937              	.LFB18:
 675:Generated_Source\PSoC4/PWM_B.c **** 
 676:Generated_Source\PSoC4/PWM_B.c **** 
 677:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WritePeriod
 679:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM_B.c **** *
 681:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 682:Generated_Source\PSoC4/PWM_B.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM_B.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM_B.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM_B.c **** *
 686:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM_B.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM_B.c **** *
 689:Generated_Source\PSoC4/PWM_B.c **** * Return:
 690:Generated_Source\PSoC4/PWM_B.c **** *  None
 691:Generated_Source\PSoC4/PWM_B.c **** *
 692:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM_B.c **** {
 938              		.loc 1 694 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 8
 941              		@ frame_needed = 1, uses_anonymous_args = 0
 942 0000 80B5     		push	{r7, lr}
 943              		.cfi_def_cfa_offset 8
 944              		.cfi_offset 7, -8
 945              		.cfi_offset 14, -4
 946 0002 82B0     		sub	sp, sp, #8
 947              		.cfi_def_cfa_offset 16
 948 0004 00AF     		add	r7, sp, #0
 949              		.cfi_def_cfa_register 7
 950 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_PERIOD_REG = (period & PWM_B_16BIT_MASK);
 951              		.loc 1 695 0
 952 0008 044B     		ldr	r3, .L52
 953 000a 7A68     		ldr	r2, [r7, #4]
 954 000c 1204     		lsls	r2, r2, #16
 955 000e 120C     		lsrs	r2, r2, #16
 956 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/PWM_B.c **** }
 957              		.loc 1 696 0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 30


 958 0012 C046     		nop
 959 0014 BD46     		mov	sp, r7
 960 0016 02B0     		add	sp, sp, #8
 961              		@ sp needed
 962 0018 80BD     		pop	{r7, pc}
 963              	.L53:
 964 001a C046     		.align	2
 965              	.L52:
 966 001c 54012040 		.word	1075839316
 967              		.cfi_endproc
 968              	.LFE18:
 969              		.size	PWM_B_WritePeriod, .-PWM_B_WritePeriod
 970              		.section	.text.PWM_B_ReadPeriod,"ax",%progbits
 971              		.align	2
 972              		.global	PWM_B_ReadPeriod
 973              		.code	16
 974              		.thumb_func
 975              		.type	PWM_B_ReadPeriod, %function
 976              	PWM_B_ReadPeriod:
 977              	.LFB19:
 697:Generated_Source\PSoC4/PWM_B.c **** 
 698:Generated_Source\PSoC4/PWM_B.c **** 
 699:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadPeriod
 701:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM_B.c **** *
 703:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 704:Generated_Source\PSoC4/PWM_B.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM_B.c **** *
 706:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM_B.c **** *  None
 708:Generated_Source\PSoC4/PWM_B.c **** *
 709:Generated_Source\PSoC4/PWM_B.c **** * Return:
 710:Generated_Source\PSoC4/PWM_B.c **** *  Period value
 711:Generated_Source\PSoC4/PWM_B.c **** *
 712:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM_B.c **** {
 978              		.loc 1 714 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982 0000 80B5     		push	{r7, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 7, -8
 985              		.cfi_offset 14, -4
 986 0002 00AF     		add	r7, sp, #0
 987              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_PERIOD_REG & PWM_B_16BIT_MASK);
 988              		.loc 1 715 0
 989 0004 034B     		ldr	r3, .L56
 990 0006 1B68     		ldr	r3, [r3]
 991 0008 1B04     		lsls	r3, r3, #16
 992 000a 1B0C     		lsrs	r3, r3, #16
 716:Generated_Source\PSoC4/PWM_B.c **** }
 993              		.loc 1 716 0
 994 000c 1800     		movs	r0, r3
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 31


 995 000e BD46     		mov	sp, r7
 996              		@ sp needed
 997 0010 80BD     		pop	{r7, pc}
 998              	.L57:
 999 0012 C046     		.align	2
 1000              	.L56:
 1001 0014 54012040 		.word	1075839316
 1002              		.cfi_endproc
 1003              	.LFE19:
 1004              		.size	PWM_B_ReadPeriod, .-PWM_B_ReadPeriod
 1005              		.section	.text.PWM_B_SetCompareSwap,"ax",%progbits
 1006              		.align	2
 1007              		.global	PWM_B_SetCompareSwap
 1008              		.code	16
 1009              		.thumb_func
 1010              		.type	PWM_B_SetCompareSwap, %function
 1011              	PWM_B_SetCompareSwap:
 1012              	.LFB20:
 717:Generated_Source\PSoC4/PWM_B.c **** 
 718:Generated_Source\PSoC4/PWM_B.c **** 
 719:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetCompareSwap
 721:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM_B.c **** *
 723:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 724:Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM_B.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM_B.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM_B.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/PWM_B.c **** *
 729:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM_B.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 732:Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM_B.c **** *
 735:Generated_Source\PSoC4/PWM_B.c **** * Return:
 736:Generated_Source\PSoC4/PWM_B.c **** *  None
 737:Generated_Source\PSoC4/PWM_B.c **** *
 738:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM_B.c **** {
 1013              		.loc 1 740 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 16
 1016              		@ frame_needed = 1, uses_anonymous_args = 0
 1017 0000 90B5     		push	{r4, r7, lr}
 1018              		.cfi_def_cfa_offset 12
 1019              		.cfi_offset 4, -12
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 1022 0002 85B0     		sub	sp, sp, #20
 1023              		.cfi_def_cfa_offset 32
 1024 0004 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 1026 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 32


 742:Generated_Source\PSoC4/PWM_B.c **** 
 743:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1027              		.loc 1 743 0
 1028 0008 0F23     		movs	r3, #15
 1029 000a FC18     		adds	r4, r7, r3
 1030 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1031 0010 0300     		movs	r3, r0
 1032 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/PWM_B.c **** 
 745:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_RELOAD_CC_MASK;
 1033              		.loc 1 745 0
 1034 0014 0B4B     		ldr	r3, .L59
 1035 0016 0B4A     		ldr	r2, .L59
 1036 0018 1268     		ldr	r2, [r2]
 1037 001a 0121     		movs	r1, #1
 1038 001c 8A43     		bics	r2, r1
 1039 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= (swapEnable & PWM_B_1BIT_MASK);
 1040              		.loc 1 746 0
 1041 0020 084B     		ldr	r3, .L59
 1042 0022 084A     		ldr	r2, .L59
 1043 0024 1168     		ldr	r1, [r2]
 1044 0026 7A68     		ldr	r2, [r7, #4]
 1045 0028 0120     		movs	r0, #1
 1046 002a 0240     		ands	r2, r0
 1047 002c 0A43     		orrs	r2, r1
 1048 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/PWM_B.c **** 
 748:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 748 0
 1050 0030 0F23     		movs	r3, #15
 1051 0032 FB18     		adds	r3, r7, r3
 1052 0034 1B78     		ldrb	r3, [r3]
 1053 0036 1800     		movs	r0, r3
 1054 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/PWM_B.c **** }
 1055              		.loc 1 749 0
 1056 003c C046     		nop
 1057 003e BD46     		mov	sp, r7
 1058 0040 05B0     		add	sp, sp, #20
 1059              		@ sp needed
 1060 0042 90BD     		pop	{r4, r7, pc}
 1061              	.L60:
 1062              		.align	2
 1063              	.L59:
 1064 0044 40012040 		.word	1075839296
 1065              		.cfi_endproc
 1066              	.LFE20:
 1067              		.size	PWM_B_SetCompareSwap, .-PWM_B_SetCompareSwap
 1068              		.section	.text.PWM_B_WritePeriodBuf,"ax",%progbits
 1069              		.align	2
 1070              		.global	PWM_B_WritePeriodBuf
 1071              		.code	16
 1072              		.thumb_func
 1073              		.type	PWM_B_WritePeriodBuf, %function
 1074              	PWM_B_WritePeriodBuf:
 1075              	.LFB21:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 33


 750:Generated_Source\PSoC4/PWM_B.c **** 
 751:Generated_Source\PSoC4/PWM_B.c **** 
 752:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM_B.c **** *
 756:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 757:Generated_Source\PSoC4/PWM_B.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM_B.c **** *
 759:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM_B.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM_B.c **** *
 762:Generated_Source\PSoC4/PWM_B.c **** * Return:
 763:Generated_Source\PSoC4/PWM_B.c **** *  None
 764:Generated_Source\PSoC4/PWM_B.c **** *
 765:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM_B.c **** {
 1076              		.loc 1 767 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 8
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080 0000 80B5     		push	{r7, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084 0002 82B0     		sub	sp, sp, #8
 1085              		.cfi_def_cfa_offset 16
 1086 0004 00AF     		add	r7, sp, #0
 1087              		.cfi_def_cfa_register 7
 1088 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_PERIOD_BUF_REG = (periodBuf & PWM_B_16BIT_MASK);
 1089              		.loc 1 768 0
 1090 0008 044B     		ldr	r3, .L62
 1091 000a 7A68     		ldr	r2, [r7, #4]
 1092 000c 1204     		lsls	r2, r2, #16
 1093 000e 120C     		lsrs	r2, r2, #16
 1094 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/PWM_B.c **** }
 1095              		.loc 1 769 0
 1096 0012 C046     		nop
 1097 0014 BD46     		mov	sp, r7
 1098 0016 02B0     		add	sp, sp, #8
 1099              		@ sp needed
 1100 0018 80BD     		pop	{r7, pc}
 1101              	.L63:
 1102 001a C046     		.align	2
 1103              	.L62:
 1104 001c 58012040 		.word	1075839320
 1105              		.cfi_endproc
 1106              	.LFE21:
 1107              		.size	PWM_B_WritePeriodBuf, .-PWM_B_WritePeriodBuf
 1108              		.section	.text.PWM_B_ReadPeriodBuf,"ax",%progbits
 1109              		.align	2
 1110              		.global	PWM_B_ReadPeriodBuf
 1111              		.code	16
 1112              		.thumb_func
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 34


 1113              		.type	PWM_B_ReadPeriodBuf, %function
 1114              	PWM_B_ReadPeriodBuf:
 1115              	.LFB22:
 770:Generated_Source\PSoC4/PWM_B.c **** 
 771:Generated_Source\PSoC4/PWM_B.c **** 
 772:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM_B.c **** *
 776:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 777:Generated_Source\PSoC4/PWM_B.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM_B.c **** *
 779:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM_B.c **** *  None
 781:Generated_Source\PSoC4/PWM_B.c **** *
 782:Generated_Source\PSoC4/PWM_B.c **** * Return:
 783:Generated_Source\PSoC4/PWM_B.c **** *  Period value
 784:Generated_Source\PSoC4/PWM_B.c **** *
 785:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM_B.c **** {
 1116              		.loc 1 787 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 00AF     		add	r7, sp, #0
 1125              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_PERIOD_BUF_REG & PWM_B_16BIT_MASK);
 1126              		.loc 1 788 0
 1127 0004 034B     		ldr	r3, .L66
 1128 0006 1B68     		ldr	r3, [r3]
 1129 0008 1B04     		lsls	r3, r3, #16
 1130 000a 1B0C     		lsrs	r3, r3, #16
 789:Generated_Source\PSoC4/PWM_B.c **** }
 1131              		.loc 1 789 0
 1132 000c 1800     		movs	r0, r3
 1133 000e BD46     		mov	sp, r7
 1134              		@ sp needed
 1135 0010 80BD     		pop	{r7, pc}
 1136              	.L67:
 1137 0012 C046     		.align	2
 1138              	.L66:
 1139 0014 58012040 		.word	1075839320
 1140              		.cfi_endproc
 1141              	.LFE22:
 1142              		.size	PWM_B_ReadPeriodBuf, .-PWM_B_ReadPeriodBuf
 1143              		.section	.text.PWM_B_SetPeriodSwap,"ax",%progbits
 1144              		.align	2
 1145              		.global	PWM_B_SetPeriodSwap
 1146              		.code	16
 1147              		.thumb_func
 1148              		.type	PWM_B_SetPeriodSwap, %function
 1149              	PWM_B_SetPeriodSwap:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 35


 1150              	.LFB23:
 790:Generated_Source\PSoC4/PWM_B.c **** 
 791:Generated_Source\PSoC4/PWM_B.c **** 
 792:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM_B.c **** *
 796:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 797:Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM_B.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM_B.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM_B.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM_B.c **** *
 802:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM_B.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM_B.c **** *   Values:
 805:Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM_B.c **** *
 808:Generated_Source\PSoC4/PWM_B.c **** * Return:
 809:Generated_Source\PSoC4/PWM_B.c **** *  None
 810:Generated_Source\PSoC4/PWM_B.c **** *
 811:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM_B.c **** {
 1151              		.loc 1 813 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 16
 1154              		@ frame_needed = 1, uses_anonymous_args = 0
 1155 0000 90B5     		push	{r4, r7, lr}
 1156              		.cfi_def_cfa_offset 12
 1157              		.cfi_offset 4, -12
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 85B0     		sub	sp, sp, #20
 1161              		.cfi_def_cfa_offset 32
 1162 0004 00AF     		add	r7, sp, #0
 1163              		.cfi_def_cfa_register 7
 1164 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM_B.c **** 
 816:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1165              		.loc 1 816 0
 1166 0008 0F23     		movs	r3, #15
 1167 000a FC18     		adds	r4, r7, r3
 1168 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1169 0010 0300     		movs	r3, r0
 1170 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/PWM_B.c **** 
 818:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_RELOAD_PERIOD_MASK;
 1171              		.loc 1 818 0
 1172 0014 0C4B     		ldr	r3, .L69
 1173 0016 0C4A     		ldr	r2, .L69
 1174 0018 1268     		ldr	r2, [r2]
 1175 001a 0221     		movs	r1, #2
 1176 001c 8A43     		bics	r2, r1
 1177 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 36


 819:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((swapEnable & PWM_B_1BIT_MASK) <<
 1178              		.loc 1 819 0
 1179 0020 094B     		ldr	r3, .L69
 1180 0022 094A     		ldr	r2, .L69
 1181 0024 1168     		ldr	r1, [r2]
 1182 0026 7A68     		ldr	r2, [r7, #4]
 1183 0028 5200     		lsls	r2, r2, #1
 1184 002a 0220     		movs	r0, #2
 1185 002c 0240     		ands	r2, r0
 1186 002e 0A43     		orrs	r2, r1
 1187 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/PWM_B.c ****                                                             PWM_B_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM_B.c **** 
 822:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1188              		.loc 1 822 0
 1189 0032 0F23     		movs	r3, #15
 1190 0034 FB18     		adds	r3, r7, r3
 1191 0036 1B78     		ldrb	r3, [r3]
 1192 0038 1800     		movs	r0, r3
 1193 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/PWM_B.c **** }
 1194              		.loc 1 823 0
 1195 003e C046     		nop
 1196 0040 BD46     		mov	sp, r7
 1197 0042 05B0     		add	sp, sp, #20
 1198              		@ sp needed
 1199 0044 90BD     		pop	{r4, r7, pc}
 1200              	.L70:
 1201 0046 C046     		.align	2
 1202              	.L69:
 1203 0048 40012040 		.word	1075839296
 1204              		.cfi_endproc
 1205              	.LFE23:
 1206              		.size	PWM_B_SetPeriodSwap, .-PWM_B_SetPeriodSwap
 1207              		.section	.text.PWM_B_WriteCompare,"ax",%progbits
 1208              		.align	2
 1209              		.global	PWM_B_WriteCompare
 1210              		.code	16
 1211              		.thumb_func
 1212              		.type	PWM_B_WriteCompare, %function
 1213              	PWM_B_WriteCompare:
 1214              	.LFB24:
 824:Generated_Source\PSoC4/PWM_B.c **** 
 825:Generated_Source\PSoC4/PWM_B.c **** 
 826:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WriteCompare
 828:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM_B.c **** *
 830:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 831:Generated_Source\PSoC4/PWM_B.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM_B.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM_B.c **** *
 834:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM_B.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM_B.c **** *
 837:Generated_Source\PSoC4/PWM_B.c **** * Return:
 838:Generated_Source\PSoC4/PWM_B.c **** *  None
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 37


 839:Generated_Source\PSoC4/PWM_B.c **** *
 840:Generated_Source\PSoC4/PWM_B.c **** * Note:
 841:Generated_Source\PSoC4/PWM_B.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM_B.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM_B.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM_B.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM_B.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM_B.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM_B.c **** *
 848:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM_B.c **** {
 1215              		.loc 1 850 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 8
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219 0000 80B5     		push	{r7, lr}
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 7, -8
 1222              		.cfi_offset 14, -4
 1223 0002 82B0     		sub	sp, sp, #8
 1224              		.cfi_def_cfa_offset 16
 1225 0004 00AF     		add	r7, sp, #0
 1226              		.cfi_def_cfa_register 7
 1227 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM_B.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM_B.c **** 
 855:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM_B.c ****         currentMode = ((PWM_B_CONTROL_REG & PWM_B_UPDOWN_MASK) >> PWM_B_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM_B.c **** 
 858:Generated_Source\PSoC4/PWM_B.c ****         if (((uint32)PWM_B__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM_B.c ****         {
 860:Generated_Source\PSoC4/PWM_B.c ****             compare++;
 861:Generated_Source\PSoC4/PWM_B.c ****         }
 862:Generated_Source\PSoC4/PWM_B.c ****         else if (((uint32)PWM_B__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM_B.c ****         {
 864:Generated_Source\PSoC4/PWM_B.c ****             compare--;
 865:Generated_Source\PSoC4/PWM_B.c ****         }
 866:Generated_Source\PSoC4/PWM_B.c ****         else
 867:Generated_Source\PSoC4/PWM_B.c ****         {
 868:Generated_Source\PSoC4/PWM_B.c ****         }
 869:Generated_Source\PSoC4/PWM_B.c ****         
 870:Generated_Source\PSoC4/PWM_B.c ****     
 871:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM_B.c ****     
 873:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_COMP_CAP_REG = (compare & PWM_B_16BIT_MASK);
 1228              		.loc 1 873 0
 1229 0008 044B     		ldr	r3, .L72
 1230 000a 7A68     		ldr	r2, [r7, #4]
 1231 000c 1204     		lsls	r2, r2, #16
 1232 000e 120C     		lsrs	r2, r2, #16
 1233 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/PWM_B.c **** }
 1234              		.loc 1 874 0
 1235 0012 C046     		nop
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 38


 1236 0014 BD46     		mov	sp, r7
 1237 0016 02B0     		add	sp, sp, #8
 1238              		@ sp needed
 1239 0018 80BD     		pop	{r7, pc}
 1240              	.L73:
 1241 001a C046     		.align	2
 1242              	.L72:
 1243 001c 4C012040 		.word	1075839308
 1244              		.cfi_endproc
 1245              	.LFE24:
 1246              		.size	PWM_B_WriteCompare, .-PWM_B_WriteCompare
 1247              		.section	.text.PWM_B_ReadCompare,"ax",%progbits
 1248              		.align	2
 1249              		.global	PWM_B_ReadCompare
 1250              		.code	16
 1251              		.thumb_func
 1252              		.type	PWM_B_ReadCompare, %function
 1253              	PWM_B_ReadCompare:
 1254              	.LFB25:
 875:Generated_Source\PSoC4/PWM_B.c **** 
 876:Generated_Source\PSoC4/PWM_B.c **** 
 877:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCompare
 879:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM_B.c **** *
 881:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 882:Generated_Source\PSoC4/PWM_B.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM_B.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM_B.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM_B.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM_B.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM_B.c **** *
 888:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM_B.c **** *  None
 890:Generated_Source\PSoC4/PWM_B.c **** *
 891:Generated_Source\PSoC4/PWM_B.c **** * Return:
 892:Generated_Source\PSoC4/PWM_B.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM_B.c **** *
 894:Generated_Source\PSoC4/PWM_B.c **** * Note:
 895:Generated_Source\PSoC4/PWM_B.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM_B.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM_B.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM_B.c **** *
 899:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM_B.c **** {
 1255              		.loc 1 901 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259 0000 80B5     		push	{r7, lr}
 1260              		.cfi_def_cfa_offset 8
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 1263 0002 00AF     		add	r7, sp, #0
 1264              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 39


 903:Generated_Source\PSoC4/PWM_B.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM_B.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM_B.c **** 
 907:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM_B.c ****         currentMode = ((PWM_B_CONTROL_REG & PWM_B_UPDOWN_MASK) >> PWM_B_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM_B.c ****         
 910:Generated_Source\PSoC4/PWM_B.c ****         regVal = PWM_B_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM_B.c ****         
 912:Generated_Source\PSoC4/PWM_B.c ****         if (((uint32)PWM_B__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM_B.c ****         {
 914:Generated_Source\PSoC4/PWM_B.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM_B.c ****         }
 916:Generated_Source\PSoC4/PWM_B.c ****         else if (((uint32)PWM_B__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM_B.c ****         {
 918:Generated_Source\PSoC4/PWM_B.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM_B.c ****         }
 920:Generated_Source\PSoC4/PWM_B.c ****         else
 921:Generated_Source\PSoC4/PWM_B.c ****         {
 922:Generated_Source\PSoC4/PWM_B.c ****         }
 923:Generated_Source\PSoC4/PWM_B.c **** 
 924:Generated_Source\PSoC4/PWM_B.c ****         return (regVal & PWM_B_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM_B.c ****     #else
 926:Generated_Source\PSoC4/PWM_B.c ****         return (PWM_B_COMP_CAP_REG & PWM_B_16BIT_MASK);
 1265              		.loc 1 926 0
 1266 0004 034B     		ldr	r3, .L76
 1267 0006 1B68     		ldr	r3, [r3]
 1268 0008 1B04     		lsls	r3, r3, #16
 1269 000a 1B0C     		lsrs	r3, r3, #16
 927:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM_B.c **** }
 1270              		.loc 1 928 0
 1271 000c 1800     		movs	r0, r3
 1272 000e BD46     		mov	sp, r7
 1273              		@ sp needed
 1274 0010 80BD     		pop	{r7, pc}
 1275              	.L77:
 1276 0012 C046     		.align	2
 1277              	.L76:
 1278 0014 4C012040 		.word	1075839308
 1279              		.cfi_endproc
 1280              	.LFE25:
 1281              		.size	PWM_B_ReadCompare, .-PWM_B_ReadCompare
 1282              		.section	.text.PWM_B_WriteCompareBuf,"ax",%progbits
 1283              		.align	2
 1284              		.global	PWM_B_WriteCompareBuf
 1285              		.code	16
 1286              		.thumb_func
 1287              		.type	PWM_B_WriteCompareBuf, %function
 1288              	PWM_B_WriteCompareBuf:
 1289              	.LFB26:
 929:Generated_Source\PSoC4/PWM_B.c **** 
 930:Generated_Source\PSoC4/PWM_B.c **** 
 931:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM_B.c **** *
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 40


 935:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 936:Generated_Source\PSoC4/PWM_B.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM_B.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM_B.c **** *
 939:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM_B.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM_B.c **** *
 942:Generated_Source\PSoC4/PWM_B.c **** * Return:
 943:Generated_Source\PSoC4/PWM_B.c **** *  None
 944:Generated_Source\PSoC4/PWM_B.c **** *
 945:Generated_Source\PSoC4/PWM_B.c **** * Note:
 946:Generated_Source\PSoC4/PWM_B.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM_B.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM_B.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM_B.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM_B.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM_B.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM_B.c **** *
 953:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM_B.c **** {
 1290              		.loc 1 955 0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 8
 1293              		@ frame_needed = 1, uses_anonymous_args = 0
 1294 0000 80B5     		push	{r7, lr}
 1295              		.cfi_def_cfa_offset 8
 1296              		.cfi_offset 7, -8
 1297              		.cfi_offset 14, -4
 1298 0002 82B0     		sub	sp, sp, #8
 1299              		.cfi_def_cfa_offset 16
 1300 0004 00AF     		add	r7, sp, #0
 1301              		.cfi_def_cfa_register 7
 1302 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM_B.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM_B.c **** 
 960:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM_B.c ****         currentMode = ((PWM_B_CONTROL_REG & PWM_B_UPDOWN_MASK) >> PWM_B_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM_B.c **** 
 963:Generated_Source\PSoC4/PWM_B.c ****         if (((uint32)PWM_B__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM_B.c ****         {
 965:Generated_Source\PSoC4/PWM_B.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM_B.c ****         }
 967:Generated_Source\PSoC4/PWM_B.c ****         else if (((uint32)PWM_B__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM_B.c ****         {
 969:Generated_Source\PSoC4/PWM_B.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM_B.c ****         }
 971:Generated_Source\PSoC4/PWM_B.c ****         else
 972:Generated_Source\PSoC4/PWM_B.c ****         {
 973:Generated_Source\PSoC4/PWM_B.c ****         }
 974:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM_B.c ****     
 976:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_COMP_CAP_BUF_REG = (compareBuf & PWM_B_16BIT_MASK);
 1303              		.loc 1 976 0
 1304 0008 044B     		ldr	r3, .L79
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 41


 1305 000a 7A68     		ldr	r2, [r7, #4]
 1306 000c 1204     		lsls	r2, r2, #16
 1307 000e 120C     		lsrs	r2, r2, #16
 1308 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/PWM_B.c **** }
 1309              		.loc 1 977 0
 1310 0012 C046     		nop
 1311 0014 BD46     		mov	sp, r7
 1312 0016 02B0     		add	sp, sp, #8
 1313              		@ sp needed
 1314 0018 80BD     		pop	{r7, pc}
 1315              	.L80:
 1316 001a C046     		.align	2
 1317              	.L79:
 1318 001c 50012040 		.word	1075839312
 1319              		.cfi_endproc
 1320              	.LFE26:
 1321              		.size	PWM_B_WriteCompareBuf, .-PWM_B_WriteCompareBuf
 1322              		.section	.text.PWM_B_ReadCompareBuf,"ax",%progbits
 1323              		.align	2
 1324              		.global	PWM_B_ReadCompareBuf
 1325              		.code	16
 1326              		.thumb_func
 1327              		.type	PWM_B_ReadCompareBuf, %function
 1328              	PWM_B_ReadCompareBuf:
 1329              	.LFB27:
 978:Generated_Source\PSoC4/PWM_B.c **** 
 979:Generated_Source\PSoC4/PWM_B.c **** 
 980:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM_B.c **** *
 984:Generated_Source\PSoC4/PWM_B.c **** * Summary:
 985:Generated_Source\PSoC4/PWM_B.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM_B.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM_B.c **** *
 988:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM_B.c **** *  None
 990:Generated_Source\PSoC4/PWM_B.c **** *
 991:Generated_Source\PSoC4/PWM_B.c **** * Return:
 992:Generated_Source\PSoC4/PWM_B.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM_B.c **** *
 994:Generated_Source\PSoC4/PWM_B.c **** * Note:
 995:Generated_Source\PSoC4/PWM_B.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM_B.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM_B.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM_B.c **** *
 999:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM_B.c **** {
 1330              		.loc 1 1001 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 1, uses_anonymous_args = 0
 1334 0000 80B5     		push	{r7, lr}
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 7, -8
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 42


 1337              		.cfi_offset 14, -4
 1338 0002 00AF     		add	r7, sp, #0
 1339              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM_B.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM_B.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM_B.c **** 
1007:Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM_B.c ****         currentMode = ((PWM_B_CONTROL_REG & PWM_B_UPDOWN_MASK) >> PWM_B_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM_B.c **** 
1010:Generated_Source\PSoC4/PWM_B.c ****         regVal = PWM_B_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM_B.c ****         
1012:Generated_Source\PSoC4/PWM_B.c ****         if (((uint32)PWM_B__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM_B.c ****         {
1014:Generated_Source\PSoC4/PWM_B.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM_B.c ****         }
1016:Generated_Source\PSoC4/PWM_B.c ****         else if (((uint32)PWM_B__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM_B.c ****         {
1018:Generated_Source\PSoC4/PWM_B.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM_B.c ****         }
1020:Generated_Source\PSoC4/PWM_B.c ****         else
1021:Generated_Source\PSoC4/PWM_B.c ****         {
1022:Generated_Source\PSoC4/PWM_B.c ****         }
1023:Generated_Source\PSoC4/PWM_B.c **** 
1024:Generated_Source\PSoC4/PWM_B.c ****         return (regVal & PWM_B_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM_B.c ****     #else
1026:Generated_Source\PSoC4/PWM_B.c ****         return (PWM_B_COMP_CAP_BUF_REG & PWM_B_16BIT_MASK);
 1340              		.loc 1 1026 0
 1341 0004 034B     		ldr	r3, .L83
 1342 0006 1B68     		ldr	r3, [r3]
 1343 0008 1B04     		lsls	r3, r3, #16
 1344 000a 1B0C     		lsrs	r3, r3, #16
1027:Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM_B.c **** }
 1345              		.loc 1 1028 0
 1346 000c 1800     		movs	r0, r3
 1347 000e BD46     		mov	sp, r7
 1348              		@ sp needed
 1349 0010 80BD     		pop	{r7, pc}
 1350              	.L84:
 1351 0012 C046     		.align	2
 1352              	.L83:
 1353 0014 50012040 		.word	1075839312
 1354              		.cfi_endproc
 1355              	.LFE27:
 1356              		.size	PWM_B_ReadCompareBuf, .-PWM_B_ReadCompareBuf
 1357              		.section	.text.PWM_B_ReadCapture,"ax",%progbits
 1358              		.align	2
 1359              		.global	PWM_B_ReadCapture
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	PWM_B_ReadCapture, %function
 1363              	PWM_B_ReadCapture:
 1364              	.LFB28:
1029:Generated_Source\PSoC4/PWM_B.c **** 
1030:Generated_Source\PSoC4/PWM_B.c **** 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 43


1031:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCapture
1033:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM_B.c **** *
1035:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1036:Generated_Source\PSoC4/PWM_B.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM_B.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM_B.c **** *
1039:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM_B.c **** *  None
1041:Generated_Source\PSoC4/PWM_B.c **** *
1042:Generated_Source\PSoC4/PWM_B.c **** * Return:
1043:Generated_Source\PSoC4/PWM_B.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM_B.c **** *
1045:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM_B.c **** {
 1365              		.loc 1 1047 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 1, uses_anonymous_args = 0
 1369 0000 80B5     		push	{r7, lr}
 1370              		.cfi_def_cfa_offset 8
 1371              		.cfi_offset 7, -8
 1372              		.cfi_offset 14, -4
 1373 0002 00AF     		add	r7, sp, #0
 1374              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_COMP_CAP_REG & PWM_B_16BIT_MASK);
 1375              		.loc 1 1048 0
 1376 0004 034B     		ldr	r3, .L87
 1377 0006 1B68     		ldr	r3, [r3]
 1378 0008 1B04     		lsls	r3, r3, #16
 1379 000a 1B0C     		lsrs	r3, r3, #16
1049:Generated_Source\PSoC4/PWM_B.c **** }
 1380              		.loc 1 1049 0
 1381 000c 1800     		movs	r0, r3
 1382 000e BD46     		mov	sp, r7
 1383              		@ sp needed
 1384 0010 80BD     		pop	{r7, pc}
 1385              	.L88:
 1386 0012 C046     		.align	2
 1387              	.L87:
 1388 0014 4C012040 		.word	1075839308
 1389              		.cfi_endproc
 1390              	.LFE28:
 1391              		.size	PWM_B_ReadCapture, .-PWM_B_ReadCapture
 1392              		.section	.text.PWM_B_ReadCaptureBuf,"ax",%progbits
 1393              		.align	2
 1394              		.global	PWM_B_ReadCaptureBuf
 1395              		.code	16
 1396              		.thumb_func
 1397              		.type	PWM_B_ReadCaptureBuf, %function
 1398              	PWM_B_ReadCaptureBuf:
 1399              	.LFB29:
1050:Generated_Source\PSoC4/PWM_B.c **** 
1051:Generated_Source\PSoC4/PWM_B.c **** 
1052:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 44


1053:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM_B.c **** *
1056:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1057:Generated_Source\PSoC4/PWM_B.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM_B.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM_B.c **** *
1060:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM_B.c **** *  None
1062:Generated_Source\PSoC4/PWM_B.c **** *
1063:Generated_Source\PSoC4/PWM_B.c **** * Return:
1064:Generated_Source\PSoC4/PWM_B.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM_B.c **** *
1066:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM_B.c **** {
 1400              		.loc 1 1068 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 1, uses_anonymous_args = 0
 1404 0000 80B5     		push	{r7, lr}
 1405              		.cfi_def_cfa_offset 8
 1406              		.cfi_offset 7, -8
 1407              		.cfi_offset 14, -4
 1408 0002 00AF     		add	r7, sp, #0
 1409              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_COMP_CAP_BUF_REG & PWM_B_16BIT_MASK);
 1410              		.loc 1 1069 0
 1411 0004 034B     		ldr	r3, .L91
 1412 0006 1B68     		ldr	r3, [r3]
 1413 0008 1B04     		lsls	r3, r3, #16
 1414 000a 1B0C     		lsrs	r3, r3, #16
1070:Generated_Source\PSoC4/PWM_B.c **** }
 1415              		.loc 1 1070 0
 1416 000c 1800     		movs	r0, r3
 1417 000e BD46     		mov	sp, r7
 1418              		@ sp needed
 1419 0010 80BD     		pop	{r7, pc}
 1420              	.L92:
 1421 0012 C046     		.align	2
 1422              	.L91:
 1423 0014 50012040 		.word	1075839312
 1424              		.cfi_endproc
 1425              	.LFE29:
 1426              		.size	PWM_B_ReadCaptureBuf, .-PWM_B_ReadCaptureBuf
 1427              		.section	.text.PWM_B_SetCaptureMode,"ax",%progbits
 1428              		.align	2
 1429              		.global	PWM_B_SetCaptureMode
 1430              		.code	16
 1431              		.thumb_func
 1432              		.type	PWM_B_SetCaptureMode, %function
 1433              	PWM_B_SetCaptureMode:
 1434              	.LFB30:
1071:Generated_Source\PSoC4/PWM_B.c **** 
1072:Generated_Source\PSoC4/PWM_B.c **** 
1073:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetCaptureMode
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 45


1075:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM_B.c **** *
1077:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1078:Generated_Source\PSoC4/PWM_B.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM_B.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM_B.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM_B.c **** *
1082:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1085:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM_B.c **** *
1090:Generated_Source\PSoC4/PWM_B.c **** * Return:
1091:Generated_Source\PSoC4/PWM_B.c **** *  None
1092:Generated_Source\PSoC4/PWM_B.c **** *
1093:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM_B.c **** {
 1435              		.loc 1 1095 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 16
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439 0000 90B5     		push	{r4, r7, lr}
 1440              		.cfi_def_cfa_offset 12
 1441              		.cfi_offset 4, -12
 1442              		.cfi_offset 7, -8
 1443              		.cfi_offset 14, -4
 1444 0002 85B0     		sub	sp, sp, #20
 1445              		.cfi_def_cfa_offset 32
 1446 0004 00AF     		add	r7, sp, #0
 1447              		.cfi_def_cfa_register 7
 1448 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM_B.c **** 
1098:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1449              		.loc 1 1098 0
 1450 0008 0F23     		movs	r3, #15
 1451 000a FC18     		adds	r4, r7, r3
 1452 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1453 0010 0300     		movs	r3, r0
 1454 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/PWM_B.c **** 
1100:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_CAPTURE_MASK;
 1455              		.loc 1 1100 0
 1456 0014 0A4B     		ldr	r3, .L94
 1457 0016 0A4A     		ldr	r2, .L94
 1458 0018 1268     		ldr	r2, [r2]
 1459 001a 0321     		movs	r1, #3
 1460 001c 8A43     		bics	r2, r1
 1461 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= triggerMode;
 1462              		.loc 1 1101 0
 1463 0020 074B     		ldr	r3, .L94
 1464 0022 074A     		ldr	r2, .L94
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 46


 1465 0024 1168     		ldr	r1, [r2]
 1466 0026 7A68     		ldr	r2, [r7, #4]
 1467 0028 0A43     		orrs	r2, r1
 1468 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/PWM_B.c **** 
1103:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1469              		.loc 1 1103 0
 1470 002c 0F23     		movs	r3, #15
 1471 002e FB18     		adds	r3, r7, r3
 1472 0030 1B78     		ldrb	r3, [r3]
 1473 0032 1800     		movs	r0, r3
 1474 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/PWM_B.c **** }
 1475              		.loc 1 1104 0
 1476 0038 C046     		nop
 1477 003a BD46     		mov	sp, r7
 1478 003c 05B0     		add	sp, sp, #20
 1479              		@ sp needed
 1480 003e 90BD     		pop	{r4, r7, pc}
 1481              	.L95:
 1482              		.align	2
 1483              	.L94:
 1484 0040 64012040 		.word	1075839332
 1485              		.cfi_endproc
 1486              	.LFE30:
 1487              		.size	PWM_B_SetCaptureMode, .-PWM_B_SetCaptureMode
 1488              		.section	.text.PWM_B_SetReloadMode,"ax",%progbits
 1489              		.align	2
 1490              		.global	PWM_B_SetReloadMode
 1491              		.code	16
 1492              		.thumb_func
 1493              		.type	PWM_B_SetReloadMode, %function
 1494              	PWM_B_SetReloadMode:
 1495              	.LFB31:
1105:Generated_Source\PSoC4/PWM_B.c **** 
1106:Generated_Source\PSoC4/PWM_B.c **** 
1107:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetReloadMode
1109:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM_B.c **** *
1111:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1112:Generated_Source\PSoC4/PWM_B.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM_B.c **** *  input.
1114:Generated_Source\PSoC4/PWM_B.c **** *
1115:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1118:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM_B.c **** *
1123:Generated_Source\PSoC4/PWM_B.c **** * Return:
1124:Generated_Source\PSoC4/PWM_B.c **** *  None
1125:Generated_Source\PSoC4/PWM_B.c **** *
1126:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetReloadMode(uint32 triggerMode)
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 47


1128:Generated_Source\PSoC4/PWM_B.c **** {
 1496              		.loc 1 1128 0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 16
 1499              		@ frame_needed = 1, uses_anonymous_args = 0
 1500 0000 90B5     		push	{r4, r7, lr}
 1501              		.cfi_def_cfa_offset 12
 1502              		.cfi_offset 4, -12
 1503              		.cfi_offset 7, -8
 1504              		.cfi_offset 14, -4
 1505 0002 85B0     		sub	sp, sp, #20
 1506              		.cfi_def_cfa_offset 32
 1507 0004 00AF     		add	r7, sp, #0
 1508              		.cfi_def_cfa_register 7
 1509 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM_B.c **** 
1131:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1510              		.loc 1 1131 0
 1511 0008 0F23     		movs	r3, #15
 1512 000a FC18     		adds	r4, r7, r3
 1513 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1514 0010 0300     		movs	r3, r0
 1515 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/PWM_B.c **** 
1133:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_RELOAD_MASK;
 1516              		.loc 1 1133 0
 1517 0014 0B4B     		ldr	r3, .L97
 1518 0016 0B4A     		ldr	r2, .L97
 1519 0018 1268     		ldr	r2, [r2]
 1520 001a 3021     		movs	r1, #48
 1521 001c 8A43     		bics	r2, r1
 1522 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_B_RELOAD_SHIFT));
 1523              		.loc 1 1134 0
 1524 0020 084B     		ldr	r3, .L97
 1525 0022 084A     		ldr	r2, .L97
 1526 0024 1168     		ldr	r1, [r2]
 1527 0026 7A68     		ldr	r2, [r7, #4]
 1528 0028 1201     		lsls	r2, r2, #4
 1529 002a 0A43     		orrs	r2, r1
 1530 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/PWM_B.c **** 
1136:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1531              		.loc 1 1136 0
 1532 002e 0F23     		movs	r3, #15
 1533 0030 FB18     		adds	r3, r7, r3
 1534 0032 1B78     		ldrb	r3, [r3]
 1535 0034 1800     		movs	r0, r3
 1536 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/PWM_B.c **** }
 1537              		.loc 1 1137 0
 1538 003a C046     		nop
 1539 003c BD46     		mov	sp, r7
 1540 003e 05B0     		add	sp, sp, #20
 1541              		@ sp needed
 1542 0040 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 48


 1543              	.L98:
 1544 0042 C046     		.align	2
 1545              	.L97:
 1546 0044 64012040 		.word	1075839332
 1547              		.cfi_endproc
 1548              	.LFE31:
 1549              		.size	PWM_B_SetReloadMode, .-PWM_B_SetReloadMode
 1550              		.section	.text.PWM_B_SetStartMode,"ax",%progbits
 1551              		.align	2
 1552              		.global	PWM_B_SetStartMode
 1553              		.code	16
 1554              		.thumb_func
 1555              		.type	PWM_B_SetStartMode, %function
 1556              	PWM_B_SetStartMode:
 1557              	.LFB32:
1138:Generated_Source\PSoC4/PWM_B.c **** 
1139:Generated_Source\PSoC4/PWM_B.c **** 
1140:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetStartMode
1142:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM_B.c **** *
1144:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1145:Generated_Source\PSoC4/PWM_B.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM_B.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM_B.c **** *
1148:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1151:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM_B.c **** *
1156:Generated_Source\PSoC4/PWM_B.c **** * Return:
1157:Generated_Source\PSoC4/PWM_B.c **** *  None
1158:Generated_Source\PSoC4/PWM_B.c **** *
1159:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM_B.c **** {
 1558              		.loc 1 1161 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 16
 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562 0000 90B5     		push	{r4, r7, lr}
 1563              		.cfi_def_cfa_offset 12
 1564              		.cfi_offset 4, -12
 1565              		.cfi_offset 7, -8
 1566              		.cfi_offset 14, -4
 1567 0002 85B0     		sub	sp, sp, #20
 1568              		.cfi_def_cfa_offset 32
 1569 0004 00AF     		add	r7, sp, #0
 1570              		.cfi_def_cfa_register 7
 1571 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM_B.c **** 
1164:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1572              		.loc 1 1164 0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 49


 1573 0008 0F23     		movs	r3, #15
 1574 000a FC18     		adds	r4, r7, r3
 1575 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1576 0010 0300     		movs	r3, r0
 1577 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/PWM_B.c **** 
1166:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_START_MASK;
 1578              		.loc 1 1166 0
 1579 0014 0B4B     		ldr	r3, .L100
 1580 0016 0B4A     		ldr	r2, .L100
 1581 0018 1268     		ldr	r2, [r2]
 1582 001a 0B49     		ldr	r1, .L100+4
 1583 001c 0A40     		ands	r2, r1
 1584 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_B_START_SHIFT));
 1585              		.loc 1 1167 0
 1586 0020 084B     		ldr	r3, .L100
 1587 0022 084A     		ldr	r2, .L100
 1588 0024 1168     		ldr	r1, [r2]
 1589 0026 7A68     		ldr	r2, [r7, #4]
 1590 0028 1202     		lsls	r2, r2, #8
 1591 002a 0A43     		orrs	r2, r1
 1592 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/PWM_B.c **** 
1169:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1593              		.loc 1 1169 0
 1594 002e 0F23     		movs	r3, #15
 1595 0030 FB18     		adds	r3, r7, r3
 1596 0032 1B78     		ldrb	r3, [r3]
 1597 0034 1800     		movs	r0, r3
 1598 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/PWM_B.c **** }
 1599              		.loc 1 1170 0
 1600 003a C046     		nop
 1601 003c BD46     		mov	sp, r7
 1602 003e 05B0     		add	sp, sp, #20
 1603              		@ sp needed
 1604 0040 90BD     		pop	{r4, r7, pc}
 1605              	.L101:
 1606 0042 C046     		.align	2
 1607              	.L100:
 1608 0044 64012040 		.word	1075839332
 1609 0048 FFFCFFFF 		.word	-769
 1610              		.cfi_endproc
 1611              	.LFE32:
 1612              		.size	PWM_B_SetStartMode, .-PWM_B_SetStartMode
 1613              		.section	.text.PWM_B_SetStopMode,"ax",%progbits
 1614              		.align	2
 1615              		.global	PWM_B_SetStopMode
 1616              		.code	16
 1617              		.thumb_func
 1618              		.type	PWM_B_SetStopMode, %function
 1619              	PWM_B_SetStopMode:
 1620              	.LFB33:
1171:Generated_Source\PSoC4/PWM_B.c **** 
1172:Generated_Source\PSoC4/PWM_B.c **** 
1173:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 50


1174:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetStopMode
1175:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM_B.c **** *
1177:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1178:Generated_Source\PSoC4/PWM_B.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM_B.c **** *
1180:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1183:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM_B.c **** *
1188:Generated_Source\PSoC4/PWM_B.c **** * Return:
1189:Generated_Source\PSoC4/PWM_B.c **** *  None
1190:Generated_Source\PSoC4/PWM_B.c **** *
1191:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM_B.c **** {
 1621              		.loc 1 1193 0
 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 16
 1624              		@ frame_needed = 1, uses_anonymous_args = 0
 1625 0000 90B5     		push	{r4, r7, lr}
 1626              		.cfi_def_cfa_offset 12
 1627              		.cfi_offset 4, -12
 1628              		.cfi_offset 7, -8
 1629              		.cfi_offset 14, -4
 1630 0002 85B0     		sub	sp, sp, #20
 1631              		.cfi_def_cfa_offset 32
 1632 0004 00AF     		add	r7, sp, #0
 1633              		.cfi_def_cfa_register 7
 1634 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM_B.c **** 
1196:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1635              		.loc 1 1196 0
 1636 0008 0F23     		movs	r3, #15
 1637 000a FC18     		adds	r4, r7, r3
 1638 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1639 0010 0300     		movs	r3, r0
 1640 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/PWM_B.c **** 
1198:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_STOP_MASK;
 1641              		.loc 1 1198 0
 1642 0014 0B4B     		ldr	r3, .L103
 1643 0016 0B4A     		ldr	r2, .L103
 1644 0018 1268     		ldr	r2, [r2]
 1645 001a C021     		movs	r1, #192
 1646 001c 8A43     		bics	r2, r1
 1647 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_B_STOP_SHIFT));
 1648              		.loc 1 1199 0
 1649 0020 084B     		ldr	r3, .L103
 1650 0022 084A     		ldr	r2, .L103
 1651 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 51


 1652 0026 7A68     		ldr	r2, [r7, #4]
 1653 0028 9201     		lsls	r2, r2, #6
 1654 002a 0A43     		orrs	r2, r1
 1655 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/PWM_B.c **** 
1201:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1656              		.loc 1 1201 0
 1657 002e 0F23     		movs	r3, #15
 1658 0030 FB18     		adds	r3, r7, r3
 1659 0032 1B78     		ldrb	r3, [r3]
 1660 0034 1800     		movs	r0, r3
 1661 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/PWM_B.c **** }
 1662              		.loc 1 1202 0
 1663 003a C046     		nop
 1664 003c BD46     		mov	sp, r7
 1665 003e 05B0     		add	sp, sp, #20
 1666              		@ sp needed
 1667 0040 90BD     		pop	{r4, r7, pc}
 1668              	.L104:
 1669 0042 C046     		.align	2
 1670              	.L103:
 1671 0044 64012040 		.word	1075839332
 1672              		.cfi_endproc
 1673              	.LFE33:
 1674              		.size	PWM_B_SetStopMode, .-PWM_B_SetStopMode
 1675              		.section	.text.PWM_B_SetCountMode,"ax",%progbits
 1676              		.align	2
 1677              		.global	PWM_B_SetCountMode
 1678              		.code	16
 1679              		.thumb_func
 1680              		.type	PWM_B_SetCountMode, %function
 1681              	PWM_B_SetCountMode:
 1682              	.LFB34:
1203:Generated_Source\PSoC4/PWM_B.c **** 
1204:Generated_Source\PSoC4/PWM_B.c **** 
1205:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetCountMode
1207:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM_B.c **** *
1209:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1210:Generated_Source\PSoC4/PWM_B.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM_B.c **** *  input.
1212:Generated_Source\PSoC4/PWM_B.c **** *
1213:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1216:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM_B.c **** *
1221:Generated_Source\PSoC4/PWM_B.c **** * Return:
1222:Generated_Source\PSoC4/PWM_B.c **** *  None
1223:Generated_Source\PSoC4/PWM_B.c **** *
1224:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetCountMode(uint32 triggerMode)
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 52


1226:Generated_Source\PSoC4/PWM_B.c **** {
 1683              		.loc 1 1226 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 16
 1686              		@ frame_needed = 1, uses_anonymous_args = 0
 1687 0000 90B5     		push	{r4, r7, lr}
 1688              		.cfi_def_cfa_offset 12
 1689              		.cfi_offset 4, -12
 1690              		.cfi_offset 7, -8
 1691              		.cfi_offset 14, -4
 1692 0002 85B0     		sub	sp, sp, #20
 1693              		.cfi_def_cfa_offset 32
 1694 0004 00AF     		add	r7, sp, #0
 1695              		.cfi_def_cfa_register 7
 1696 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM_B.c **** 
1229:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1697              		.loc 1 1229 0
 1698 0008 0F23     		movs	r3, #15
 1699 000a FC18     		adds	r4, r7, r3
 1700 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1701 0010 0300     		movs	r3, r0
 1702 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/PWM_B.c **** 
1231:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_COUNT_MASK;
 1703              		.loc 1 1231 0
 1704 0014 0B4B     		ldr	r3, .L106
 1705 0016 0B4A     		ldr	r2, .L106
 1706 0018 1268     		ldr	r2, [r2]
 1707 001a 0C21     		movs	r1, #12
 1708 001c 8A43     		bics	r2, r1
 1709 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_B_COUNT_SHIFT));
 1710              		.loc 1 1232 0
 1711 0020 084B     		ldr	r3, .L106
 1712 0022 084A     		ldr	r2, .L106
 1713 0024 1168     		ldr	r1, [r2]
 1714 0026 7A68     		ldr	r2, [r7, #4]
 1715 0028 9200     		lsls	r2, r2, #2
 1716 002a 0A43     		orrs	r2, r1
 1717 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/PWM_B.c **** 
1234:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1718              		.loc 1 1234 0
 1719 002e 0F23     		movs	r3, #15
 1720 0030 FB18     		adds	r3, r7, r3
 1721 0032 1B78     		ldrb	r3, [r3]
 1722 0034 1800     		movs	r0, r3
 1723 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/PWM_B.c **** }
 1724              		.loc 1 1235 0
 1725 003a C046     		nop
 1726 003c BD46     		mov	sp, r7
 1727 003e 05B0     		add	sp, sp, #20
 1728              		@ sp needed
 1729 0040 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 53


 1730              	.L107:
 1731 0042 C046     		.align	2
 1732              	.L106:
 1733 0044 64012040 		.word	1075839332
 1734              		.cfi_endproc
 1735              	.LFE34:
 1736              		.size	PWM_B_SetCountMode, .-PWM_B_SetCountMode
 1737              		.section	.text.PWM_B_TriggerCommand,"ax",%progbits
 1738              		.align	2
 1739              		.global	PWM_B_TriggerCommand
 1740              		.code	16
 1741              		.thumb_func
 1742              		.type	PWM_B_TriggerCommand, %function
 1743              	PWM_B_TriggerCommand:
 1744              	.LFB35:
1236:Generated_Source\PSoC4/PWM_B.c **** 
1237:Generated_Source\PSoC4/PWM_B.c **** 
1238:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_TriggerCommand
1240:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM_B.c **** *
1242:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1243:Generated_Source\PSoC4/PWM_B.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM_B.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM_B.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM_B.c **** *
1247:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM_B.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM_B.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM_B.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM_B.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM_B.c **** *        define.
1253:Generated_Source\PSoC4/PWM_B.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM_B.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1256:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM_B.c **** *
1261:Generated_Source\PSoC4/PWM_B.c **** * Return:
1262:Generated_Source\PSoC4/PWM_B.c **** *  None
1263:Generated_Source\PSoC4/PWM_B.c **** *
1264:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM_B.c **** {
 1745              		.loc 1 1266 0
 1746              		.cfi_startproc
 1747              		@ args = 0, pretend = 0, frame = 16
 1748              		@ frame_needed = 1, uses_anonymous_args = 0
 1749 0000 90B5     		push	{r4, r7, lr}
 1750              		.cfi_def_cfa_offset 12
 1751              		.cfi_offset 4, -12
 1752              		.cfi_offset 7, -8
 1753              		.cfi_offset 14, -4
 1754 0002 85B0     		sub	sp, sp, #20
 1755              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 54


 1756 0004 00AF     		add	r7, sp, #0
 1757              		.cfi_def_cfa_register 7
 1758 0006 7860     		str	r0, [r7, #4]
 1759 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM_B.c **** 
1269:Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1760              		.loc 1 1269 0
 1761 000a 0F23     		movs	r3, #15
 1762 000c FC18     		adds	r4, r7, r3
 1763 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1764 0012 0300     		movs	r3, r0
 1765 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/PWM_B.c **** 
1271:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_COMMAND_REG = ((uint32)(mask << command));
 1766              		.loc 1 1271 0
 1767 0016 084B     		ldr	r3, .L109
 1768 0018 7968     		ldr	r1, [r7, #4]
 1769 001a 3A68     		ldr	r2, [r7]
 1770 001c 9140     		lsls	r1, r1, r2
 1771 001e 0A00     		movs	r2, r1
 1772 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/PWM_B.c **** 
1273:Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1773              		.loc 1 1273 0
 1774 0022 0F23     		movs	r3, #15
 1775 0024 FB18     		adds	r3, r7, r3
 1776 0026 1B78     		ldrb	r3, [r3]
 1777 0028 1800     		movs	r0, r3
 1778 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/PWM_B.c **** }
 1779              		.loc 1 1274 0
 1780 002e C046     		nop
 1781 0030 BD46     		mov	sp, r7
 1782 0032 05B0     		add	sp, sp, #20
 1783              		@ sp needed
 1784 0034 90BD     		pop	{r4, r7, pc}
 1785              	.L110:
 1786 0036 C046     		.align	2
 1787              	.L109:
 1788 0038 08002040 		.word	1075838984
 1789              		.cfi_endproc
 1790              	.LFE35:
 1791              		.size	PWM_B_TriggerCommand, .-PWM_B_TriggerCommand
 1792              		.section	.text.PWM_B_ReadStatus,"ax",%progbits
 1793              		.align	2
 1794              		.global	PWM_B_ReadStatus
 1795              		.code	16
 1796              		.thumb_func
 1797              		.type	PWM_B_ReadStatus, %function
 1798              	PWM_B_ReadStatus:
 1799              	.LFB36:
1275:Generated_Source\PSoC4/PWM_B.c **** 
1276:Generated_Source\PSoC4/PWM_B.c **** 
1277:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadStatus
1279:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 55


1280:Generated_Source\PSoC4/PWM_B.c **** *
1281:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1282:Generated_Source\PSoC4/PWM_B.c **** *  Reads the status of the PWM_B.
1283:Generated_Source\PSoC4/PWM_B.c **** *
1284:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM_B.c **** *  None
1286:Generated_Source\PSoC4/PWM_B.c **** *
1287:Generated_Source\PSoC4/PWM_B.c **** * Return:
1288:Generated_Source\PSoC4/PWM_B.c **** *  Status
1289:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1290:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM_B.c **** *
1293:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM_B.c **** {
 1800              		.loc 1 1295 0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 0
 1803              		@ frame_needed = 1, uses_anonymous_args = 0
 1804 0000 80B5     		push	{r7, lr}
 1805              		.cfi_def_cfa_offset 8
 1806              		.cfi_offset 7, -8
 1807              		.cfi_offset 14, -4
 1808 0002 00AF     		add	r7, sp, #0
 1809              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/PWM_B.c ****     return ((PWM_B_STATUS_REG >> PWM_B_RUNNING_STATUS_SHIFT) |
 1810              		.loc 1 1296 0
 1811 0004 054B     		ldr	r3, .L113
 1812 0006 1B68     		ldr	r3, [r3]
 1813 0008 9A0F     		lsrs	r2, r3, #30
1297:Generated_Source\PSoC4/PWM_B.c ****             (PWM_B_STATUS_REG & PWM_B_STATUS_DOWN));
 1814              		.loc 1 1297 0
 1815 000a 044B     		ldr	r3, .L113
 1816 000c 1B68     		ldr	r3, [r3]
 1817 000e 0121     		movs	r1, #1
 1818 0010 0B40     		ands	r3, r1
1296:Generated_Source\PSoC4/PWM_B.c ****     return ((PWM_B_STATUS_REG >> PWM_B_RUNNING_STATUS_SHIFT) |
 1819              		.loc 1 1296 0
 1820 0012 1343     		orrs	r3, r2
1298:Generated_Source\PSoC4/PWM_B.c **** }
 1821              		.loc 1 1298 0
 1822 0014 1800     		movs	r0, r3
 1823 0016 BD46     		mov	sp, r7
 1824              		@ sp needed
 1825 0018 80BD     		pop	{r7, pc}
 1826              	.L114:
 1827 001a C046     		.align	2
 1828              	.L113:
 1829 001c 44012040 		.word	1075839300
 1830              		.cfi_endproc
 1831              	.LFE36:
 1832              		.size	PWM_B_ReadStatus, .-PWM_B_ReadStatus
 1833              		.section	.text.PWM_B_SetInterruptMode,"ax",%progbits
 1834              		.align	2
 1835              		.global	PWM_B_SetInterruptMode
 1836              		.code	16
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 56


 1837              		.thumb_func
 1838              		.type	PWM_B_SetInterruptMode, %function
 1839              	PWM_B_SetInterruptMode:
 1840              	.LFB37:
1299:Generated_Source\PSoC4/PWM_B.c **** 
1300:Generated_Source\PSoC4/PWM_B.c **** 
1301:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetInterruptMode
1303:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM_B.c **** *
1305:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1306:Generated_Source\PSoC4/PWM_B.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM_B.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM_B.c **** *
1309:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM_B.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1312:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM_B.c **** *
1315:Generated_Source\PSoC4/PWM_B.c **** * Return:
1316:Generated_Source\PSoC4/PWM_B.c **** *  None
1317:Generated_Source\PSoC4/PWM_B.c **** *
1318:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM_B.c **** {
 1841              		.loc 1 1320 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 8
 1844              		@ frame_needed = 1, uses_anonymous_args = 0
 1845 0000 80B5     		push	{r7, lr}
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 7, -8
 1848              		.cfi_offset 14, -4
 1849 0002 82B0     		sub	sp, sp, #8
 1850              		.cfi_def_cfa_offset 16
 1851 0004 00AF     		add	r7, sp, #0
 1852              		.cfi_def_cfa_register 7
 1853 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_INTERRUPT_MASK_REG =  interruptMask;
 1854              		.loc 1 1321 0
 1855 0008 034B     		ldr	r3, .L116
 1856 000a 7A68     		ldr	r2, [r7, #4]
 1857 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/PWM_B.c **** }
 1858              		.loc 1 1322 0
 1859 000e C046     		nop
 1860 0010 BD46     		mov	sp, r7
 1861 0012 02B0     		add	sp, sp, #8
 1862              		@ sp needed
 1863 0014 80BD     		pop	{r7, pc}
 1864              	.L117:
 1865 0016 C046     		.align	2
 1866              	.L116:
 1867 0018 78012040 		.word	1075839352
 1868              		.cfi_endproc
 1869              	.LFE37:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 57


 1870              		.size	PWM_B_SetInterruptMode, .-PWM_B_SetInterruptMode
 1871              		.section	.text.PWM_B_GetInterruptSourceMasked,"ax",%progbits
 1872              		.align	2
 1873              		.global	PWM_B_GetInterruptSourceMasked
 1874              		.code	16
 1875              		.thumb_func
 1876              		.type	PWM_B_GetInterruptSourceMasked, %function
 1877              	PWM_B_GetInterruptSourceMasked:
 1878              	.LFB38:
1323:Generated_Source\PSoC4/PWM_B.c **** 
1324:Generated_Source\PSoC4/PWM_B.c **** 
1325:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM_B.c **** *
1329:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1330:Generated_Source\PSoC4/PWM_B.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM_B.c **** *
1332:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM_B.c **** *   None
1334:Generated_Source\PSoC4/PWM_B.c **** *
1335:Generated_Source\PSoC4/PWM_B.c **** * Return:
1336:Generated_Source\PSoC4/PWM_B.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1338:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM_B.c **** *
1341:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM_B.c **** {
 1879              		.loc 1 1343 0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 1, uses_anonymous_args = 0
 1883 0000 80B5     		push	{r7, lr}
 1884              		.cfi_def_cfa_offset 8
 1885              		.cfi_offset 7, -8
 1886              		.cfi_offset 14, -4
 1887 0002 00AF     		add	r7, sp, #0
 1888              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_INTERRUPT_MASKED_REG);
 1889              		.loc 1 1344 0
 1890 0004 024B     		ldr	r3, .L120
 1891 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/PWM_B.c **** }
 1892              		.loc 1 1345 0
 1893 0008 1800     		movs	r0, r3
 1894 000a BD46     		mov	sp, r7
 1895              		@ sp needed
 1896 000c 80BD     		pop	{r7, pc}
 1897              	.L121:
 1898 000e C046     		.align	2
 1899              	.L120:
 1900 0010 7C012040 		.word	1075839356
 1901              		.cfi_endproc
 1902              	.LFE38:
 1903              		.size	PWM_B_GetInterruptSourceMasked, .-PWM_B_GetInterruptSourceMasked
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 58


 1904              		.section	.text.PWM_B_GetInterruptSource,"ax",%progbits
 1905              		.align	2
 1906              		.global	PWM_B_GetInterruptSource
 1907              		.code	16
 1908              		.thumb_func
 1909              		.type	PWM_B_GetInterruptSource, %function
 1910              	PWM_B_GetInterruptSource:
 1911              	.LFB39:
1346:Generated_Source\PSoC4/PWM_B.c **** 
1347:Generated_Source\PSoC4/PWM_B.c **** 
1348:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_GetInterruptSource
1350:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM_B.c **** *
1352:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1353:Generated_Source\PSoC4/PWM_B.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM_B.c **** *
1355:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM_B.c **** *  None
1357:Generated_Source\PSoC4/PWM_B.c **** *
1358:Generated_Source\PSoC4/PWM_B.c **** * Return:
1359:Generated_Source\PSoC4/PWM_B.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1361:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM_B.c **** *
1364:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM_B.c **** {
 1912              		.loc 1 1366 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 1, uses_anonymous_args = 0
 1916 0000 80B5     		push	{r7, lr}
 1917              		.cfi_def_cfa_offset 8
 1918              		.cfi_offset 7, -8
 1919              		.cfi_offset 14, -4
 1920 0002 00AF     		add	r7, sp, #0
 1921              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_INTERRUPT_REQ_REG);
 1922              		.loc 1 1367 0
 1923 0004 024B     		ldr	r3, .L124
 1924 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/PWM_B.c **** }
 1925              		.loc 1 1368 0
 1926 0008 1800     		movs	r0, r3
 1927 000a BD46     		mov	sp, r7
 1928              		@ sp needed
 1929 000c 80BD     		pop	{r7, pc}
 1930              	.L125:
 1931 000e C046     		.align	2
 1932              	.L124:
 1933 0010 70012040 		.word	1075839344
 1934              		.cfi_endproc
 1935              	.LFE39:
 1936              		.size	PWM_B_GetInterruptSource, .-PWM_B_GetInterruptSource
 1937              		.section	.text.PWM_B_ClearInterrupt,"ax",%progbits
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 59


 1938              		.align	2
 1939              		.global	PWM_B_ClearInterrupt
 1940              		.code	16
 1941              		.thumb_func
 1942              		.type	PWM_B_ClearInterrupt, %function
 1943              	PWM_B_ClearInterrupt:
 1944              	.LFB40:
1369:Generated_Source\PSoC4/PWM_B.c **** 
1370:Generated_Source\PSoC4/PWM_B.c **** 
1371:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ClearInterrupt
1373:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM_B.c **** *
1375:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1376:Generated_Source\PSoC4/PWM_B.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM_B.c **** *
1378:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM_B.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1381:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM_B.c **** *
1384:Generated_Source\PSoC4/PWM_B.c **** * Return:
1385:Generated_Source\PSoC4/PWM_B.c **** *  None
1386:Generated_Source\PSoC4/PWM_B.c **** *
1387:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM_B.c **** {
 1945              		.loc 1 1389 0
 1946              		.cfi_startproc
 1947              		@ args = 0, pretend = 0, frame = 8
 1948              		@ frame_needed = 1, uses_anonymous_args = 0
 1949 0000 80B5     		push	{r7, lr}
 1950              		.cfi_def_cfa_offset 8
 1951              		.cfi_offset 7, -8
 1952              		.cfi_offset 14, -4
 1953 0002 82B0     		sub	sp, sp, #8
 1954              		.cfi_def_cfa_offset 16
 1955 0004 00AF     		add	r7, sp, #0
 1956              		.cfi_def_cfa_register 7
 1957 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_INTERRUPT_REQ_REG = interruptMask;
 1958              		.loc 1 1390 0
 1959 0008 034B     		ldr	r3, .L127
 1960 000a 7A68     		ldr	r2, [r7, #4]
 1961 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/PWM_B.c **** }
 1962              		.loc 1 1391 0
 1963 000e C046     		nop
 1964 0010 BD46     		mov	sp, r7
 1965 0012 02B0     		add	sp, sp, #8
 1966              		@ sp needed
 1967 0014 80BD     		pop	{r7, pc}
 1968              	.L128:
 1969 0016 C046     		.align	2
 1970              	.L127:
 1971 0018 70012040 		.word	1075839344
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 60


 1972              		.cfi_endproc
 1973              	.LFE40:
 1974              		.size	PWM_B_ClearInterrupt, .-PWM_B_ClearInterrupt
 1975              		.section	.text.PWM_B_SetInterrupt,"ax",%progbits
 1976              		.align	2
 1977              		.global	PWM_B_SetInterrupt
 1978              		.code	16
 1979              		.thumb_func
 1980              		.type	PWM_B_SetInterrupt, %function
 1981              	PWM_B_SetInterrupt:
 1982              	.LFB41:
1392:Generated_Source\PSoC4/PWM_B.c **** 
1393:Generated_Source\PSoC4/PWM_B.c **** 
1394:Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetInterrupt
1396:Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM_B.c **** *
1398:Generated_Source\PSoC4/PWM_B.c **** * Summary:
1399:Generated_Source\PSoC4/PWM_B.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM_B.c **** *
1401:Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM_B.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM_B.c **** *   Values:
1404:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM_B.c **** *
1407:Generated_Source\PSoC4/PWM_B.c **** * Return:
1408:Generated_Source\PSoC4/PWM_B.c **** *  None
1409:Generated_Source\PSoC4/PWM_B.c **** *
1410:Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM_B.c **** {
 1983              		.loc 1 1412 0
 1984              		.cfi_startproc
 1985              		@ args = 0, pretend = 0, frame = 8
 1986              		@ frame_needed = 1, uses_anonymous_args = 0
 1987 0000 80B5     		push	{r7, lr}
 1988              		.cfi_def_cfa_offset 8
 1989              		.cfi_offset 7, -8
 1990              		.cfi_offset 14, -4
 1991 0002 82B0     		sub	sp, sp, #8
 1992              		.cfi_def_cfa_offset 16
 1993 0004 00AF     		add	r7, sp, #0
 1994              		.cfi_def_cfa_register 7
 1995 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/PWM_B.c ****     PWM_B_INTERRUPT_SET_REG = interruptMask;
 1996              		.loc 1 1413 0
 1997 0008 034B     		ldr	r3, .L130
 1998 000a 7A68     		ldr	r2, [r7, #4]
 1999 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/PWM_B.c **** }
 2000              		.loc 1 1414 0
 2001 000e C046     		nop
 2002 0010 BD46     		mov	sp, r7
 2003 0012 02B0     		add	sp, sp, #8
 2004              		@ sp needed
 2005 0014 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 61


 2006              	.L131:
 2007 0016 C046     		.align	2
 2008              	.L130:
 2009 0018 74012040 		.word	1075839348
 2010              		.cfi_endproc
 2011              	.LFE41:
 2012              		.size	PWM_B_SetInterrupt, .-PWM_B_SetInterrupt
 2013              		.text
 2014              	.Letext0:
 2015              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2016              		.section	.debug_info,"",%progbits
 2017              	.Ldebug_info0:
 2018 0000 F7060000 		.4byte	0x6f7
 2019 0004 0400     		.2byte	0x4
 2020 0006 00000000 		.4byte	.Ldebug_abbrev0
 2021 000a 04       		.byte	0x4
 2022 000b 01       		.uleb128 0x1
 2023 000c 42020000 		.4byte	.LASF77
 2024 0010 0C       		.byte	0xc
 2025 0011 75050000 		.4byte	.LASF78
 2026 0015 42030000 		.4byte	.LASF79
 2027 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2028 001d 00000000 		.4byte	0
 2029 0021 00000000 		.4byte	.Ldebug_line0
 2030 0025 02       		.uleb128 0x2
 2031 0026 01       		.byte	0x1
 2032 0027 06       		.byte	0x6
 2033 0028 D5000000 		.4byte	.LASF0
 2034 002c 02       		.uleb128 0x2
 2035 002d 01       		.byte	0x1
 2036 002e 08       		.byte	0x8
 2037 002f D1030000 		.4byte	.LASF1
 2038 0033 02       		.uleb128 0x2
 2039 0034 02       		.byte	0x2
 2040 0035 05       		.byte	0x5
 2041 0036 F0030000 		.4byte	.LASF2
 2042 003a 02       		.uleb128 0x2
 2043 003b 02       		.byte	0x2
 2044 003c 07       		.byte	0x7
 2045 003d EA010000 		.4byte	.LASF3
 2046 0041 02       		.uleb128 0x2
 2047 0042 04       		.byte	0x4
 2048 0043 05       		.byte	0x5
 2049 0044 07010000 		.4byte	.LASF4
 2050 0048 02       		.uleb128 0x2
 2051 0049 04       		.byte	0x4
 2052 004a 07       		.byte	0x7
 2053 004b AE010000 		.4byte	.LASF5
 2054 004f 02       		.uleb128 0x2
 2055 0050 08       		.byte	0x8
 2056 0051 05       		.byte	0x5
 2057 0052 C7000000 		.4byte	.LASF6
 2058 0056 02       		.uleb128 0x2
 2059 0057 08       		.byte	0x8
 2060 0058 07       		.byte	0x7
 2061 0059 6E000000 		.4byte	.LASF7
 2062 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 62


 2063 005e 04       		.byte	0x4
 2064 005f 05       		.byte	0x5
 2065 0060 696E7400 		.ascii	"int\000"
 2066 0064 02       		.uleb128 0x2
 2067 0065 04       		.byte	0x4
 2068 0066 07       		.byte	0x7
 2069 0067 99010000 		.4byte	.LASF8
 2070 006b 04       		.uleb128 0x4
 2071 006c 32010000 		.4byte	.LASF9
 2072 0070 02       		.byte	0x2
 2073 0071 D201     		.2byte	0x1d2
 2074 0073 2C000000 		.4byte	0x2c
 2075 0077 04       		.uleb128 0x4
 2076 0078 53010000 		.4byte	.LASF10
 2077 007c 02       		.byte	0x2
 2078 007d D401     		.2byte	0x1d4
 2079 007f 48000000 		.4byte	0x48
 2080 0083 02       		.uleb128 0x2
 2081 0084 04       		.byte	0x4
 2082 0085 04       		.byte	0x4
 2083 0086 3C030000 		.4byte	.LASF11
 2084 008a 02       		.uleb128 0x2
 2085 008b 08       		.byte	0x8
 2086 008c 04       		.byte	0x4
 2087 008d 38010000 		.4byte	.LASF12
 2088 0091 02       		.uleb128 0x2
 2089 0092 01       		.byte	0x1
 2090 0093 08       		.byte	0x8
 2091 0094 67040000 		.4byte	.LASF13
 2092 0098 04       		.uleb128 0x4
 2093 0099 D0020000 		.4byte	.LASF14
 2094 009d 02       		.byte	0x2
 2095 009e 7E02     		.2byte	0x27e
 2096 00a0 A4000000 		.4byte	0xa4
 2097 00a4 05       		.uleb128 0x5
 2098 00a5 77000000 		.4byte	0x77
 2099 00a9 02       		.uleb128 0x2
 2100 00aa 08       		.byte	0x8
 2101 00ab 04       		.byte	0x4
 2102 00ac 02030000 		.4byte	.LASF15
 2103 00b0 02       		.uleb128 0x2
 2104 00b1 04       		.byte	0x4
 2105 00b2 07       		.byte	0x7
 2106 00b3 F9020000 		.4byte	.LASF16
 2107 00b7 06       		.uleb128 0x6
 2108 00b8 1C000000 		.4byte	.LASF17
 2109 00bc 01       		.byte	0x1
 2110 00bd 26       		.byte	0x26
 2111 00be 00000000 		.4byte	.LFB2
 2112 00c2 5C000000 		.4byte	.LFE2-.LFB2
 2113 00c6 01       		.uleb128 0x1
 2114 00c7 9C       		.byte	0x9c
 2115 00c8 07       		.uleb128 0x7
 2116 00c9 25010000 		.4byte	.LASF19
 2117 00cd 01       		.byte	0x1
 2118 00ce B1       		.byte	0xb1
 2119 00cf 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 63


 2120 00d3 3C000000 		.4byte	.LFE3-.LFB3
 2121 00d7 01       		.uleb128 0x1
 2122 00d8 9C       		.byte	0x9c
 2123 00d9 EC000000 		.4byte	0xec
 2124 00dd 08       		.uleb128 0x8
 2125 00de D5040000 		.4byte	.LASF21
 2126 00e2 01       		.byte	0x1
 2127 00e3 B3       		.byte	0xb3
 2128 00e4 6B000000 		.4byte	0x6b
 2129 00e8 02       		.uleb128 0x2
 2130 00e9 91       		.byte	0x91
 2131 00ea 6F       		.sleb128 -17
 2132 00eb 00       		.byte	0
 2133 00ec 06       		.uleb128 0x6
 2134 00ed F4040000 		.4byte	.LASF18
 2135 00f1 01       		.byte	0x1
 2136 00f2 E6       		.byte	0xe6
 2137 00f3 00000000 		.4byte	.LFB4
 2138 00f7 24000000 		.4byte	.LFE4-.LFB4
 2139 00fb 01       		.uleb128 0x1
 2140 00fc 9C       		.byte	0x9c
 2141 00fd 09       		.uleb128 0x9
 2142 00fe B3030000 		.4byte	.LASF20
 2143 0102 01       		.byte	0x1
 2144 0103 0001     		.2byte	0x100
 2145 0105 00000000 		.4byte	.LFB5
 2146 0109 34000000 		.4byte	.LFE5-.LFB5
 2147 010d 01       		.uleb128 0x1
 2148 010e 9C       		.byte	0x9c
 2149 010f 23010000 		.4byte	0x123
 2150 0113 0A       		.uleb128 0xa
 2151 0114 D5040000 		.4byte	.LASF21
 2152 0118 01       		.byte	0x1
 2153 0119 0201     		.2byte	0x102
 2154 011b 6B000000 		.4byte	0x6b
 2155 011f 02       		.uleb128 0x2
 2156 0120 91       		.byte	0x91
 2157 0121 6F       		.sleb128 -17
 2158 0122 00       		.byte	0
 2159 0123 09       		.uleb128 0x9
 2160 0124 E6040000 		.4byte	.LASF22
 2161 0128 01       		.byte	0x1
 2162 0129 2501     		.2byte	0x125
 2163 012b 00000000 		.4byte	.LFB6
 2164 012f 48000000 		.4byte	.LFE6-.LFB6
 2165 0133 01       		.uleb128 0x1
 2166 0134 9C       		.byte	0x9c
 2167 0135 58010000 		.4byte	0x158
 2168 0139 0B       		.uleb128 0xb
 2169 013a 6C040000 		.4byte	.LASF24
 2170 013e 01       		.byte	0x1
 2171 013f 2501     		.2byte	0x125
 2172 0141 77000000 		.4byte	0x77
 2173 0145 02       		.uleb128 0x2
 2174 0146 91       		.byte	0x91
 2175 0147 64       		.sleb128 -28
 2176 0148 0A       		.uleb128 0xa
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 64


 2177 0149 D5040000 		.4byte	.LASF21
 2178 014d 01       		.byte	0x1
 2179 014e 2701     		.2byte	0x127
 2180 0150 6B000000 		.4byte	0x6b
 2181 0154 02       		.uleb128 0x2
 2182 0155 91       		.byte	0x91
 2183 0156 6F       		.sleb128 -17
 2184 0157 00       		.byte	0
 2185 0158 09       		.uleb128 0x9
 2186 0159 C9010000 		.4byte	.LASF23
 2187 015d 01       		.byte	0x1
 2188 015e 4601     		.2byte	0x146
 2189 0160 00000000 		.4byte	.LFB7
 2190 0164 48000000 		.4byte	.LFE7-.LFB7
 2191 0168 01       		.uleb128 0x1
 2192 0169 9C       		.byte	0x9c
 2193 016a 8D010000 		.4byte	0x18d
 2194 016e 0B       		.uleb128 0xb
 2195 016f AF000000 		.4byte	.LASF25
 2196 0173 01       		.byte	0x1
 2197 0174 4601     		.2byte	0x146
 2198 0176 77000000 		.4byte	0x77
 2199 017a 02       		.uleb128 0x2
 2200 017b 91       		.byte	0x91
 2201 017c 64       		.sleb128 -28
 2202 017d 0A       		.uleb128 0xa
 2203 017e D5040000 		.4byte	.LASF21
 2204 0182 01       		.byte	0x1
 2205 0183 4801     		.2byte	0x148
 2206 0185 6B000000 		.4byte	0x6b
 2207 0189 02       		.uleb128 0x2
 2208 018a 91       		.byte	0x91
 2209 018b 6F       		.sleb128 -17
 2210 018c 00       		.byte	0
 2211 018d 09       		.uleb128 0x9
 2212 018e 5A010000 		.4byte	.LASF26
 2213 0192 01       		.byte	0x1
 2214 0193 6B01     		.2byte	0x16b
 2215 0195 00000000 		.4byte	.LFB8
 2216 0199 48000000 		.4byte	.LFE8-.LFB8
 2217 019d 01       		.uleb128 0x1
 2218 019e 9C       		.byte	0x9c
 2219 019f C2010000 		.4byte	0x1c2
 2220 01a3 0B       		.uleb128 0xb
 2221 01a4 94030000 		.4byte	.LASF27
 2222 01a8 01       		.byte	0x1
 2223 01a9 6B01     		.2byte	0x16b
 2224 01ab 77000000 		.4byte	0x77
 2225 01af 02       		.uleb128 0x2
 2226 01b0 91       		.byte	0x91
 2227 01b1 64       		.sleb128 -28
 2228 01b2 0A       		.uleb128 0xa
 2229 01b3 D5040000 		.4byte	.LASF21
 2230 01b7 01       		.byte	0x1
 2231 01b8 6D01     		.2byte	0x16d
 2232 01ba 6B000000 		.4byte	0x6b
 2233 01be 02       		.uleb128 0x2
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 65


 2234 01bf 91       		.byte	0x91
 2235 01c0 6F       		.sleb128 -17
 2236 01c1 00       		.byte	0
 2237 01c2 09       		.uleb128 0x9
 2238 01c3 B6000000 		.4byte	.LASF28
 2239 01c7 01       		.byte	0x1
 2240 01c8 8B01     		.2byte	0x18b
 2241 01ca 00000000 		.4byte	.LFB9
 2242 01ce 50000000 		.4byte	.LFE9-.LFB9
 2243 01d2 01       		.uleb128 0x1
 2244 01d3 9C       		.byte	0x9c
 2245 01d4 F7010000 		.4byte	0x1f7
 2246 01d8 0B       		.uleb128 0xb
 2247 01d9 11020000 		.4byte	.LASF29
 2248 01dd 01       		.byte	0x1
 2249 01de 8B01     		.2byte	0x18b
 2250 01e0 77000000 		.4byte	0x77
 2251 01e4 02       		.uleb128 0x2
 2252 01e5 91       		.byte	0x91
 2253 01e6 64       		.sleb128 -28
 2254 01e7 0A       		.uleb128 0xa
 2255 01e8 D5040000 		.4byte	.LASF21
 2256 01ec 01       		.byte	0x1
 2257 01ed 8D01     		.2byte	0x18d
 2258 01ef 6B000000 		.4byte	0x6b
 2259 01f3 02       		.uleb128 0x2
 2260 01f4 91       		.byte	0x91
 2261 01f5 6F       		.sleb128 -17
 2262 01f6 00       		.byte	0
 2263 01f7 0C       		.uleb128 0xc
 2264 01f8 16030000 		.4byte	.LASF30
 2265 01fc 01       		.byte	0x1
 2266 01fd C101     		.2byte	0x1c1
 2267 01ff 00000000 		.4byte	.LFB10
 2268 0203 20000000 		.4byte	.LFE10-.LFB10
 2269 0207 01       		.uleb128 0x1
 2270 0208 9C       		.byte	0x9c
 2271 0209 1D020000 		.4byte	0x21d
 2272 020d 0B       		.uleb128 0xb
 2273 020e C0010000 		.4byte	.LASF31
 2274 0212 01       		.byte	0x1
 2275 0213 C101     		.2byte	0x1c1
 2276 0215 77000000 		.4byte	0x77
 2277 0219 02       		.uleb128 0x2
 2278 021a 91       		.byte	0x91
 2279 021b 74       		.sleb128 -12
 2280 021c 00       		.byte	0
 2281 021d 09       		.uleb128 0x9
 2282 021e 83040000 		.4byte	.LASF32
 2283 0222 01       		.byte	0x1
 2284 0223 E501     		.2byte	0x1e5
 2285 0225 00000000 		.4byte	.LFB11
 2286 0229 4C000000 		.4byte	.LFE11-.LFB11
 2287 022d 01       		.uleb128 0x1
 2288 022e 9C       		.byte	0x9c
 2289 022f 52020000 		.4byte	0x252
 2290 0233 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 66


 2291 0234 17050000 		.4byte	.LASF33
 2292 0238 01       		.byte	0x1
 2293 0239 E501     		.2byte	0x1e5
 2294 023b 77000000 		.4byte	0x77
 2295 023f 02       		.uleb128 0x2
 2296 0240 91       		.byte	0x91
 2297 0241 64       		.sleb128 -28
 2298 0242 0A       		.uleb128 0xa
 2299 0243 D5040000 		.4byte	.LASF21
 2300 0247 01       		.byte	0x1
 2301 0248 E701     		.2byte	0x1e7
 2302 024a 6B000000 		.4byte	0x6b
 2303 024e 02       		.uleb128 0x2
 2304 024f 91       		.byte	0x91
 2305 0250 6F       		.sleb128 -17
 2306 0251 00       		.byte	0
 2307 0252 09       		.uleb128 0x9
 2308 0253 00050000 		.4byte	.LASF34
 2309 0257 01       		.byte	0x1
 2310 0258 0702     		.2byte	0x207
 2311 025a 00000000 		.4byte	.LFB12
 2312 025e 4C000000 		.4byte	.LFE12-.LFB12
 2313 0262 01       		.uleb128 0x1
 2314 0263 9C       		.byte	0x9c
 2315 0264 87020000 		.4byte	0x287
 2316 0268 0B       		.uleb128 0xb
 2317 0269 DF030000 		.4byte	.LASF35
 2318 026d 01       		.byte	0x1
 2319 026e 0702     		.2byte	0x207
 2320 0270 77000000 		.4byte	0x77
 2321 0274 02       		.uleb128 0x2
 2322 0275 91       		.byte	0x91
 2323 0276 64       		.sleb128 -28
 2324 0277 0A       		.uleb128 0xa
 2325 0278 D5040000 		.4byte	.LASF21
 2326 027c 01       		.byte	0x1
 2327 027d 0902     		.2byte	0x209
 2328 027f 6B000000 		.4byte	0x6b
 2329 0283 02       		.uleb128 0x2
 2330 0284 91       		.byte	0x91
 2331 0285 6F       		.sleb128 -17
 2332 0286 00       		.byte	0
 2333 0287 09       		.uleb128 0x9
 2334 0288 59000000 		.4byte	.LASF36
 2335 028c 01       		.byte	0x1
 2336 028d 2802     		.2byte	0x228
 2337 028f 00000000 		.4byte	.LFB13
 2338 0293 50000000 		.4byte	.LFE13-.LFB13
 2339 0297 01       		.uleb128 0x1
 2340 0298 9C       		.byte	0x9c
 2341 0299 BC020000 		.4byte	0x2bc
 2342 029d 0B       		.uleb128 0xb
 2343 029e 90010000 		.4byte	.LASF37
 2344 02a2 01       		.byte	0x1
 2345 02a3 2802     		.2byte	0x228
 2346 02a5 77000000 		.4byte	0x77
 2347 02a9 02       		.uleb128 0x2
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 67


 2348 02aa 91       		.byte	0x91
 2349 02ab 64       		.sleb128 -28
 2350 02ac 0A       		.uleb128 0xa
 2351 02ad D5040000 		.4byte	.LASF21
 2352 02b1 01       		.byte	0x1
 2353 02b2 2A02     		.2byte	0x22a
 2354 02b4 6B000000 		.4byte	0x6b
 2355 02b8 02       		.uleb128 0x2
 2356 02b9 91       		.byte	0x91
 2357 02ba 6F       		.sleb128 -17
 2358 02bb 00       		.byte	0
 2359 02bc 09       		.uleb128 0x9
 2360 02bd 9C000000 		.4byte	.LASF38
 2361 02c1 01       		.byte	0x1
 2362 02c2 4902     		.2byte	0x249
 2363 02c4 00000000 		.4byte	.LFB14
 2364 02c8 48000000 		.4byte	.LFE14-.LFB14
 2365 02cc 01       		.uleb128 0x1
 2366 02cd 9C       		.byte	0x9c
 2367 02ce F1020000 		.4byte	0x2f1
 2368 02d2 0B       		.uleb128 0xb
 2369 02d3 79010000 		.4byte	.LASF39
 2370 02d7 01       		.byte	0x1
 2371 02d8 4902     		.2byte	0x249
 2372 02da 77000000 		.4byte	0x77
 2373 02de 02       		.uleb128 0x2
 2374 02df 91       		.byte	0x91
 2375 02e0 64       		.sleb128 -28
 2376 02e1 0A       		.uleb128 0xa
 2377 02e2 D5040000 		.4byte	.LASF21
 2378 02e6 01       		.byte	0x1
 2379 02e7 4B02     		.2byte	0x24b
 2380 02e9 6B000000 		.4byte	0x6b
 2381 02ed 02       		.uleb128 0x2
 2382 02ee 91       		.byte	0x91
 2383 02ef 6F       		.sleb128 -17
 2384 02f0 00       		.byte	0
 2385 02f1 0C       		.uleb128 0xc
 2386 02f2 43050000 		.4byte	.LASF40
 2387 02f6 01       		.byte	0x1
 2388 02f7 6702     		.2byte	0x267
 2389 02f9 00000000 		.4byte	.LFB15
 2390 02fd 20000000 		.4byte	.LFE15-.LFB15
 2391 0301 01       		.uleb128 0x1
 2392 0302 9C       		.byte	0x9c
 2393 0303 17030000 		.4byte	0x317
 2394 0307 0B       		.uleb128 0xb
 2395 0308 00000000 		.4byte	.LASF41
 2396 030c 01       		.byte	0x1
 2397 030d 6702     		.2byte	0x267
 2398 030f 77000000 		.4byte	0x77
 2399 0313 02       		.uleb128 0x2
 2400 0314 91       		.byte	0x91
 2401 0315 74       		.sleb128 -12
 2402 0316 00       		.byte	0
 2403 0317 0D       		.uleb128 0xd
 2404 0318 7E010000 		.4byte	.LASF46
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 68


 2405 031c 01       		.byte	0x1
 2406 031d 7B02     		.2byte	0x27b
 2407 031f 77000000 		.4byte	0x77
 2408 0323 00000000 		.4byte	.LFB16
 2409 0327 18000000 		.4byte	.LFE16-.LFB16
 2410 032b 01       		.uleb128 0x1
 2411 032c 9C       		.byte	0x9c
 2412 032d 09       		.uleb128 0x9
 2413 032e 1F020000 		.4byte	.LASF42
 2414 0332 01       		.byte	0x1
 2415 0333 9802     		.2byte	0x298
 2416 0335 00000000 		.4byte	.LFB17
 2417 0339 48000000 		.4byte	.LFE17-.LFB17
 2418 033d 01       		.uleb128 0x1
 2419 033e 9C       		.byte	0x9c
 2420 033f 62030000 		.4byte	0x362
 2421 0343 0B       		.uleb128 0xb
 2422 0344 98040000 		.4byte	.LASF43
 2423 0348 01       		.byte	0x1
 2424 0349 9802     		.2byte	0x298
 2425 034b 77000000 		.4byte	0x77
 2426 034f 02       		.uleb128 0x2
 2427 0350 91       		.byte	0x91
 2428 0351 64       		.sleb128 -28
 2429 0352 0A       		.uleb128 0xa
 2430 0353 D5040000 		.4byte	.LASF21
 2431 0357 01       		.byte	0x1
 2432 0358 9A02     		.2byte	0x29a
 2433 035a 6B000000 		.4byte	0x6b
 2434 035e 02       		.uleb128 0x2
 2435 035f 91       		.byte	0x91
 2436 0360 6F       		.sleb128 -17
 2437 0361 00       		.byte	0
 2438 0362 0C       		.uleb128 0xc
 2439 0363 31050000 		.4byte	.LASF44
 2440 0367 01       		.byte	0x1
 2441 0368 B502     		.2byte	0x2b5
 2442 036a 00000000 		.4byte	.LFB18
 2443 036e 20000000 		.4byte	.LFE18-.LFB18
 2444 0372 01       		.uleb128 0x1
 2445 0373 9C       		.byte	0x9c
 2446 0374 88030000 		.4byte	0x388
 2447 0378 0B       		.uleb128 0xb
 2448 0379 52000000 		.4byte	.LASF45
 2449 037d 01       		.byte	0x1
 2450 037e B502     		.2byte	0x2b5
 2451 0380 77000000 		.4byte	0x77
 2452 0384 02       		.uleb128 0x2
 2453 0385 91       		.byte	0x91
 2454 0386 74       		.sleb128 -12
 2455 0387 00       		.byte	0
 2456 0388 0D       		.uleb128 0xd
 2457 0389 D9010000 		.4byte	.LASF47
 2458 038d 01       		.byte	0x1
 2459 038e C902     		.2byte	0x2c9
 2460 0390 77000000 		.4byte	0x77
 2461 0394 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 69


 2462 0398 18000000 		.4byte	.LFE19-.LFB19
 2463 039c 01       		.uleb128 0x1
 2464 039d 9C       		.byte	0x9c
 2465 039e 09       		.uleb128 0x9
 2466 039f 0B040000 		.4byte	.LASF48
 2467 03a3 01       		.byte	0x1
 2468 03a4 E302     		.2byte	0x2e3
 2469 03a6 00000000 		.4byte	.LFB20
 2470 03aa 48000000 		.4byte	.LFE20-.LFB20
 2471 03ae 01       		.uleb128 0x1
 2472 03af 9C       		.byte	0x9c
 2473 03b0 D3030000 		.4byte	0x3d3
 2474 03b4 0B       		.uleb128 0xb
 2475 03b5 26050000 		.4byte	.LASF49
 2476 03b9 01       		.byte	0x1
 2477 03ba E302     		.2byte	0x2e3
 2478 03bc 77000000 		.4byte	0x77
 2479 03c0 02       		.uleb128 0x2
 2480 03c1 91       		.byte	0x91
 2481 03c2 64       		.sleb128 -28
 2482 03c3 0A       		.uleb128 0xa
 2483 03c4 D5040000 		.4byte	.LASF21
 2484 03c8 01       		.byte	0x1
 2485 03c9 E502     		.2byte	0x2e5
 2486 03cb 6B000000 		.4byte	0x6b
 2487 03cf 02       		.uleb128 0x2
 2488 03d0 91       		.byte	0x91
 2489 03d1 6F       		.sleb128 -17
 2490 03d2 00       		.byte	0
 2491 03d3 0C       		.uleb128 0xc
 2492 03d4 E4020000 		.4byte	.LASF50
 2493 03d8 01       		.byte	0x1
 2494 03d9 FE02     		.2byte	0x2fe
 2495 03db 00000000 		.4byte	.LFB21
 2496 03df 20000000 		.4byte	.LFE21-.LFB21
 2497 03e3 01       		.uleb128 0x1
 2498 03e4 9C       		.byte	0x9c
 2499 03e5 F9030000 		.4byte	0x3f9
 2500 03e9 0B       		.uleb128 0xb
 2501 03ea 56050000 		.4byte	.LASF51
 2502 03ee 01       		.byte	0x1
 2503 03ef FE02     		.2byte	0x2fe
 2504 03f1 77000000 		.4byte	0x77
 2505 03f5 02       		.uleb128 0x2
 2506 03f6 91       		.byte	0x91
 2507 03f7 74       		.sleb128 -12
 2508 03f8 00       		.byte	0
 2509 03f9 0D       		.uleb128 0xd
 2510 03fa F3000000 		.4byte	.LASF52
 2511 03fe 01       		.byte	0x1
 2512 03ff 1203     		.2byte	0x312
 2513 0401 77000000 		.4byte	0x77
 2514 0405 00000000 		.4byte	.LFB22
 2515 0409 18000000 		.4byte	.LFE22-.LFB22
 2516 040d 01       		.uleb128 0x1
 2517 040e 9C       		.byte	0x9c
 2518 040f 09       		.uleb128 0x9
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 70


 2519 0410 3F010000 		.4byte	.LASF53
 2520 0414 01       		.byte	0x1
 2521 0415 2C03     		.2byte	0x32c
 2522 0417 00000000 		.4byte	.LFB23
 2523 041b 4C000000 		.4byte	.LFE23-.LFB23
 2524 041f 01       		.uleb128 0x1
 2525 0420 9C       		.byte	0x9c
 2526 0421 44040000 		.4byte	0x444
 2527 0425 0B       		.uleb128 0xb
 2528 0426 26050000 		.4byte	.LASF49
 2529 042a 01       		.byte	0x1
 2530 042b 2C03     		.2byte	0x32c
 2531 042d 77000000 		.4byte	0x77
 2532 0431 02       		.uleb128 0x2
 2533 0432 91       		.byte	0x91
 2534 0433 64       		.sleb128 -28
 2535 0434 0A       		.uleb128 0xa
 2536 0435 D5040000 		.4byte	.LASF21
 2537 0439 01       		.byte	0x1
 2538 043a 2E03     		.2byte	0x32e
 2539 043c 6B000000 		.4byte	0x6b
 2540 0440 02       		.uleb128 0x2
 2541 0441 91       		.byte	0x91
 2542 0442 6F       		.sleb128 -17
 2543 0443 00       		.byte	0
 2544 0444 0C       		.uleb128 0xc
 2545 0445 C2040000 		.4byte	.LASF54
 2546 0449 01       		.byte	0x1
 2547 044a 5103     		.2byte	0x351
 2548 044c 00000000 		.4byte	.LFB24
 2549 0450 20000000 		.4byte	.LFE24-.LFB24
 2550 0454 01       		.uleb128 0x1
 2551 0455 9C       		.byte	0x9c
 2552 0456 6A040000 		.4byte	0x46a
 2553 045a 0B       		.uleb128 0xb
 2554 045b 0E030000 		.4byte	.LASF55
 2555 045f 01       		.byte	0x1
 2556 0460 5103     		.2byte	0x351
 2557 0462 77000000 		.4byte	0x77
 2558 0466 02       		.uleb128 0x2
 2559 0467 91       		.byte	0x91
 2560 0468 74       		.sleb128 -12
 2561 0469 00       		.byte	0
 2562 046a 0D       		.uleb128 0xd
 2563 046b E1000000 		.4byte	.LASF56
 2564 046f 01       		.byte	0x1
 2565 0470 8403     		.2byte	0x384
 2566 0472 77000000 		.4byte	0x77
 2567 0476 00000000 		.4byte	.LFB25
 2568 047a 18000000 		.4byte	.LFE25-.LFB25
 2569 047e 01       		.uleb128 0x1
 2570 047f 9C       		.byte	0x9c
 2571 0480 0C       		.uleb128 0xc
 2572 0481 06000000 		.4byte	.LASF57
 2573 0485 01       		.byte	0x1
 2574 0486 BA03     		.2byte	0x3ba
 2575 0488 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 71


 2576 048c 20000000 		.4byte	.LFE26-.LFB26
 2577 0490 01       		.uleb128 0x1
 2578 0491 9C       		.byte	0x9c
 2579 0492 A6040000 		.4byte	0x4a6
 2580 0496 0B       		.uleb128 0xb
 2581 0497 B7040000 		.4byte	.LASF58
 2582 049b 01       		.byte	0x1
 2583 049c BA03     		.2byte	0x3ba
 2584 049e 77000000 		.4byte	0x77
 2585 04a2 02       		.uleb128 0x2
 2586 04a3 91       		.byte	0x91
 2587 04a4 74       		.sleb128 -12
 2588 04a5 00       		.byte	0
 2589 04a6 0D       		.uleb128 0xd
 2590 04a7 60050000 		.4byte	.LASF59
 2591 04ab 01       		.byte	0x1
 2592 04ac E803     		.2byte	0x3e8
 2593 04ae 77000000 		.4byte	0x77
 2594 04b2 00000000 		.4byte	.LFB27
 2595 04b6 18000000 		.4byte	.LFE27-.LFB27
 2596 04ba 01       		.uleb128 0x1
 2597 04bb 9C       		.byte	0x9c
 2598 04bc 0D       		.uleb128 0xd
 2599 04bd 40000000 		.4byte	.LASF60
 2600 04c1 01       		.byte	0x1
 2601 04c2 1604     		.2byte	0x416
 2602 04c4 77000000 		.4byte	0x77
 2603 04c8 00000000 		.4byte	.LFB28
 2604 04cc 18000000 		.4byte	.LFE28-.LFB28
 2605 04d0 01       		.uleb128 0x1
 2606 04d1 9C       		.byte	0x9c
 2607 04d2 0D       		.uleb128 0xd
 2608 04d3 9E030000 		.4byte	.LASF61
 2609 04d7 01       		.byte	0x1
 2610 04d8 2B04     		.2byte	0x42b
 2611 04da 77000000 		.4byte	0x77
 2612 04de 00000000 		.4byte	.LFB29
 2613 04e2 18000000 		.4byte	.LFE29-.LFB29
 2614 04e6 01       		.uleb128 0x1
 2615 04e7 9C       		.byte	0x9c
 2616 04e8 09       		.uleb128 0x9
 2617 04e9 27030000 		.4byte	.LASF62
 2618 04ed 01       		.byte	0x1
 2619 04ee 4604     		.2byte	0x446
 2620 04f0 00000000 		.4byte	.LFB30
 2621 04f4 44000000 		.4byte	.LFE30-.LFB30
 2622 04f8 01       		.uleb128 0x1
 2623 04f9 9C       		.byte	0x9c
 2624 04fa 1D050000 		.4byte	0x51d
 2625 04fe 0B       		.uleb128 0xb
 2626 04ff 6D010000 		.4byte	.LASF63
 2627 0503 01       		.byte	0x1
 2628 0504 4604     		.2byte	0x446
 2629 0506 77000000 		.4byte	0x77
 2630 050a 02       		.uleb128 0x2
 2631 050b 91       		.byte	0x91
 2632 050c 64       		.sleb128 -28
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 72


 2633 050d 0A       		.uleb128 0xa
 2634 050e D5040000 		.4byte	.LASF21
 2635 0512 01       		.byte	0x1
 2636 0513 4804     		.2byte	0x448
 2637 0515 6B000000 		.4byte	0x6b
 2638 0519 02       		.uleb128 0x2
 2639 051a 91       		.byte	0x91
 2640 051b 6F       		.sleb128 -17
 2641 051c 00       		.byte	0
 2642 051d 09       		.uleb128 0x9
 2643 051e FD010000 		.4byte	.LASF64
 2644 0522 01       		.byte	0x1
 2645 0523 6704     		.2byte	0x467
 2646 0525 00000000 		.4byte	.LFB31
 2647 0529 48000000 		.4byte	.LFE31-.LFB31
 2648 052d 01       		.uleb128 0x1
 2649 052e 9C       		.byte	0x9c
 2650 052f 52050000 		.4byte	0x552
 2651 0533 0B       		.uleb128 0xb
 2652 0534 6D010000 		.4byte	.LASF63
 2653 0538 01       		.byte	0x1
 2654 0539 6704     		.2byte	0x467
 2655 053b 77000000 		.4byte	0x77
 2656 053f 02       		.uleb128 0x2
 2657 0540 91       		.byte	0x91
 2658 0541 64       		.sleb128 -28
 2659 0542 0A       		.uleb128 0xa
 2660 0543 D5040000 		.4byte	.LASF21
 2661 0547 01       		.byte	0x1
 2662 0548 6904     		.2byte	0x469
 2663 054a 6B000000 		.4byte	0x6b
 2664 054e 02       		.uleb128 0x2
 2665 054f 91       		.byte	0x91
 2666 0550 6F       		.sleb128 -17
 2667 0551 00       		.byte	0
 2668 0552 09       		.uleb128 0x9
 2669 0553 A4040000 		.4byte	.LASF65
 2670 0557 01       		.byte	0x1
 2671 0558 8804     		.2byte	0x488
 2672 055a 00000000 		.4byte	.LFB32
 2673 055e 4C000000 		.4byte	.LFE32-.LFB32
 2674 0562 01       		.uleb128 0x1
 2675 0563 9C       		.byte	0x9c
 2676 0564 87050000 		.4byte	0x587
 2677 0568 0B       		.uleb128 0xb
 2678 0569 6D010000 		.4byte	.LASF63
 2679 056d 01       		.byte	0x1
 2680 056e 8804     		.2byte	0x488
 2681 0570 77000000 		.4byte	0x77
 2682 0574 02       		.uleb128 0x2
 2683 0575 91       		.byte	0x91
 2684 0576 64       		.sleb128 -28
 2685 0577 0A       		.uleb128 0xa
 2686 0578 D5040000 		.4byte	.LASF21
 2687 057c 01       		.byte	0x1
 2688 057d 8A04     		.2byte	0x48a
 2689 057f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 73


 2690 0583 02       		.uleb128 0x2
 2691 0584 91       		.byte	0x91
 2692 0585 6F       		.sleb128 -17
 2693 0586 00       		.byte	0
 2694 0587 09       		.uleb128 0x9
 2695 0588 71040000 		.4byte	.LASF66
 2696 058c 01       		.byte	0x1
 2697 058d A804     		.2byte	0x4a8
 2698 058f 00000000 		.4byte	.LFB33
 2699 0593 48000000 		.4byte	.LFE33-.LFB33
 2700 0597 01       		.uleb128 0x1
 2701 0598 9C       		.byte	0x9c
 2702 0599 BC050000 		.4byte	0x5bc
 2703 059d 0B       		.uleb128 0xb
 2704 059e 6D010000 		.4byte	.LASF63
 2705 05a2 01       		.byte	0x1
 2706 05a3 A804     		.2byte	0x4a8
 2707 05a5 77000000 		.4byte	0x77
 2708 05a9 02       		.uleb128 0x2
 2709 05aa 91       		.byte	0x91
 2710 05ab 64       		.sleb128 -28
 2711 05ac 0A       		.uleb128 0xa
 2712 05ad D5040000 		.4byte	.LASF21
 2713 05b1 01       		.byte	0x1
 2714 05b2 AA04     		.2byte	0x4aa
 2715 05b4 6B000000 		.4byte	0x6b
 2716 05b8 02       		.uleb128 0x2
 2717 05b9 91       		.byte	0x91
 2718 05ba 6F       		.sleb128 -17
 2719 05bb 00       		.byte	0
 2720 05bc 09       		.uleb128 0x9
 2721 05bd 54040000 		.4byte	.LASF67
 2722 05c1 01       		.byte	0x1
 2723 05c2 C904     		.2byte	0x4c9
 2724 05c4 00000000 		.4byte	.LFB34
 2725 05c8 48000000 		.4byte	.LFE34-.LFB34
 2726 05cc 01       		.uleb128 0x1
 2727 05cd 9C       		.byte	0x9c
 2728 05ce F1050000 		.4byte	0x5f1
 2729 05d2 0B       		.uleb128 0xb
 2730 05d3 6D010000 		.4byte	.LASF63
 2731 05d7 01       		.byte	0x1
 2732 05d8 C904     		.2byte	0x4c9
 2733 05da 77000000 		.4byte	0x77
 2734 05de 02       		.uleb128 0x2
 2735 05df 91       		.byte	0x91
 2736 05e0 64       		.sleb128 -28
 2737 05e1 0A       		.uleb128 0xa
 2738 05e2 D5040000 		.4byte	.LASF21
 2739 05e6 01       		.byte	0x1
 2740 05e7 CB04     		.2byte	0x4cb
 2741 05e9 6B000000 		.4byte	0x6b
 2742 05ed 02       		.uleb128 0x2
 2743 05ee 91       		.byte	0x91
 2744 05ef 6F       		.sleb128 -17
 2745 05f0 00       		.byte	0
 2746 05f1 09       		.uleb128 0x9
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 74


 2747 05f2 10010000 		.4byte	.LASF68
 2748 05f6 01       		.byte	0x1
 2749 05f7 F104     		.2byte	0x4f1
 2750 05f9 00000000 		.4byte	.LFB35
 2751 05fd 3C000000 		.4byte	.LFE35-.LFB35
 2752 0601 01       		.uleb128 0x1
 2753 0602 9C       		.byte	0x9c
 2754 0603 35060000 		.4byte	0x635
 2755 0607 0B       		.uleb128 0xb
 2756 0608 79010000 		.4byte	.LASF39
 2757 060c 01       		.byte	0x1
 2758 060d F104     		.2byte	0x4f1
 2759 060f 77000000 		.4byte	0x77
 2760 0613 02       		.uleb128 0x2
 2761 0614 91       		.byte	0x91
 2762 0615 64       		.sleb128 -28
 2763 0616 0B       		.uleb128 0xb
 2764 0617 A6010000 		.4byte	.LASF69
 2765 061b 01       		.byte	0x1
 2766 061c F104     		.2byte	0x4f1
 2767 061e 77000000 		.4byte	0x77
 2768 0622 02       		.uleb128 0x2
 2769 0623 91       		.byte	0x91
 2770 0624 60       		.sleb128 -32
 2771 0625 0A       		.uleb128 0xa
 2772 0626 D5040000 		.4byte	.LASF21
 2773 062a 01       		.byte	0x1
 2774 062b F304     		.2byte	0x4f3
 2775 062d 6B000000 		.4byte	0x6b
 2776 0631 02       		.uleb128 0x2
 2777 0632 91       		.byte	0x91
 2778 0633 6F       		.sleb128 -17
 2779 0634 00       		.byte	0
 2780 0635 0D       		.uleb128 0xd
 2781 0636 FA030000 		.4byte	.LASF70
 2782 063a 01       		.byte	0x1
 2783 063b 0E05     		.2byte	0x50e
 2784 063d 77000000 		.4byte	0x77
 2785 0641 00000000 		.4byte	.LFB36
 2786 0645 20000000 		.4byte	.LFE36-.LFB36
 2787 0649 01       		.uleb128 0x1
 2788 064a 9C       		.byte	0x9c
 2789 064b 0C       		.uleb128 0xc
 2790 064c 85000000 		.4byte	.LASF71
 2791 0650 01       		.byte	0x1
 2792 0651 2705     		.2byte	0x527
 2793 0653 00000000 		.4byte	.LFB37
 2794 0657 1C000000 		.4byte	.LFE37-.LFB37
 2795 065b 01       		.uleb128 0x1
 2796 065c 9C       		.byte	0x9c
 2797 065d 71060000 		.4byte	0x671
 2798 0661 0B       		.uleb128 0xb
 2799 0662 D6020000 		.4byte	.LASF72
 2800 0666 01       		.byte	0x1
 2801 0667 2705     		.2byte	0x527
 2802 0669 77000000 		.4byte	0x77
 2803 066d 02       		.uleb128 0x2
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 75


 2804 066e 91       		.byte	0x91
 2805 066f 74       		.sleb128 -12
 2806 0670 00       		.byte	0
 2807 0671 0D       		.uleb128 0xd
 2808 0672 35040000 		.4byte	.LASF73
 2809 0676 01       		.byte	0x1
 2810 0677 3E05     		.2byte	0x53e
 2811 0679 77000000 		.4byte	0x77
 2812 067d 00000000 		.4byte	.LFB38
 2813 0681 14000000 		.4byte	.LFE38-.LFB38
 2814 0685 01       		.uleb128 0x1
 2815 0686 9C       		.byte	0x9c
 2816 0687 0D       		.uleb128 0xd
 2817 0688 27000000 		.4byte	.LASF74
 2818 068c 01       		.byte	0x1
 2819 068d 5505     		.2byte	0x555
 2820 068f 77000000 		.4byte	0x77
 2821 0693 00000000 		.4byte	.LFB39
 2822 0697 14000000 		.4byte	.LFE39-.LFB39
 2823 069b 01       		.uleb128 0x1
 2824 069c 9C       		.byte	0x9c
 2825 069d 0C       		.uleb128 0xc
 2826 069e 20040000 		.4byte	.LASF75
 2827 06a2 01       		.byte	0x1
 2828 06a3 6C05     		.2byte	0x56c
 2829 06a5 00000000 		.4byte	.LFB40
 2830 06a9 1C000000 		.4byte	.LFE40-.LFB40
 2831 06ad 01       		.uleb128 0x1
 2832 06ae 9C       		.byte	0x9c
 2833 06af C3060000 		.4byte	0x6c3
 2834 06b3 0B       		.uleb128 0xb
 2835 06b4 D6020000 		.4byte	.LASF72
 2836 06b8 01       		.byte	0x1
 2837 06b9 6C05     		.2byte	0x56c
 2838 06bb 77000000 		.4byte	0x77
 2839 06bf 02       		.uleb128 0x2
 2840 06c0 91       		.byte	0x91
 2841 06c1 74       		.sleb128 -12
 2842 06c2 00       		.byte	0
 2843 06c3 0C       		.uleb128 0xc
 2844 06c4 BE030000 		.4byte	.LASF76
 2845 06c8 01       		.byte	0x1
 2846 06c9 8305     		.2byte	0x583
 2847 06cb 00000000 		.4byte	.LFB41
 2848 06cf 1C000000 		.4byte	.LFE41-.LFB41
 2849 06d3 01       		.uleb128 0x1
 2850 06d4 9C       		.byte	0x9c
 2851 06d5 E9060000 		.4byte	0x6e9
 2852 06d9 0B       		.uleb128 0xb
 2853 06da D6020000 		.4byte	.LASF72
 2854 06de 01       		.byte	0x1
 2855 06df 8305     		.2byte	0x583
 2856 06e1 77000000 		.4byte	0x77
 2857 06e5 02       		.uleb128 0x2
 2858 06e6 91       		.byte	0x91
 2859 06e7 74       		.sleb128 -12
 2860 06e8 00       		.byte	0
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 76


 2861 06e9 0E       		.uleb128 0xe
 2862 06ea 34020000 		.4byte	.LASF80
 2863 06ee 01       		.byte	0x1
 2864 06ef 15       		.byte	0x15
 2865 06f0 6B000000 		.4byte	0x6b
 2866 06f4 05       		.uleb128 0x5
 2867 06f5 03       		.byte	0x3
 2868 06f6 00000000 		.4byte	PWM_B_initVar
 2869 06fa 00       		.byte	0
 2870              		.section	.debug_abbrev,"",%progbits
 2871              	.Ldebug_abbrev0:
 2872 0000 01       		.uleb128 0x1
 2873 0001 11       		.uleb128 0x11
 2874 0002 01       		.byte	0x1
 2875 0003 25       		.uleb128 0x25
 2876 0004 0E       		.uleb128 0xe
 2877 0005 13       		.uleb128 0x13
 2878 0006 0B       		.uleb128 0xb
 2879 0007 03       		.uleb128 0x3
 2880 0008 0E       		.uleb128 0xe
 2881 0009 1B       		.uleb128 0x1b
 2882 000a 0E       		.uleb128 0xe
 2883 000b 55       		.uleb128 0x55
 2884 000c 17       		.uleb128 0x17
 2885 000d 11       		.uleb128 0x11
 2886 000e 01       		.uleb128 0x1
 2887 000f 10       		.uleb128 0x10
 2888 0010 17       		.uleb128 0x17
 2889 0011 00       		.byte	0
 2890 0012 00       		.byte	0
 2891 0013 02       		.uleb128 0x2
 2892 0014 24       		.uleb128 0x24
 2893 0015 00       		.byte	0
 2894 0016 0B       		.uleb128 0xb
 2895 0017 0B       		.uleb128 0xb
 2896 0018 3E       		.uleb128 0x3e
 2897 0019 0B       		.uleb128 0xb
 2898 001a 03       		.uleb128 0x3
 2899 001b 0E       		.uleb128 0xe
 2900 001c 00       		.byte	0
 2901 001d 00       		.byte	0
 2902 001e 03       		.uleb128 0x3
 2903 001f 24       		.uleb128 0x24
 2904 0020 00       		.byte	0
 2905 0021 0B       		.uleb128 0xb
 2906 0022 0B       		.uleb128 0xb
 2907 0023 3E       		.uleb128 0x3e
 2908 0024 0B       		.uleb128 0xb
 2909 0025 03       		.uleb128 0x3
 2910 0026 08       		.uleb128 0x8
 2911 0027 00       		.byte	0
 2912 0028 00       		.byte	0
 2913 0029 04       		.uleb128 0x4
 2914 002a 16       		.uleb128 0x16
 2915 002b 00       		.byte	0
 2916 002c 03       		.uleb128 0x3
 2917 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 77


 2918 002e 3A       		.uleb128 0x3a
 2919 002f 0B       		.uleb128 0xb
 2920 0030 3B       		.uleb128 0x3b
 2921 0031 05       		.uleb128 0x5
 2922 0032 49       		.uleb128 0x49
 2923 0033 13       		.uleb128 0x13
 2924 0034 00       		.byte	0
 2925 0035 00       		.byte	0
 2926 0036 05       		.uleb128 0x5
 2927 0037 35       		.uleb128 0x35
 2928 0038 00       		.byte	0
 2929 0039 49       		.uleb128 0x49
 2930 003a 13       		.uleb128 0x13
 2931 003b 00       		.byte	0
 2932 003c 00       		.byte	0
 2933 003d 06       		.uleb128 0x6
 2934 003e 2E       		.uleb128 0x2e
 2935 003f 00       		.byte	0
 2936 0040 3F       		.uleb128 0x3f
 2937 0041 19       		.uleb128 0x19
 2938 0042 03       		.uleb128 0x3
 2939 0043 0E       		.uleb128 0xe
 2940 0044 3A       		.uleb128 0x3a
 2941 0045 0B       		.uleb128 0xb
 2942 0046 3B       		.uleb128 0x3b
 2943 0047 0B       		.uleb128 0xb
 2944 0048 27       		.uleb128 0x27
 2945 0049 19       		.uleb128 0x19
 2946 004a 11       		.uleb128 0x11
 2947 004b 01       		.uleb128 0x1
 2948 004c 12       		.uleb128 0x12
 2949 004d 06       		.uleb128 0x6
 2950 004e 40       		.uleb128 0x40
 2951 004f 18       		.uleb128 0x18
 2952 0050 9642     		.uleb128 0x2116
 2953 0052 19       		.uleb128 0x19
 2954 0053 00       		.byte	0
 2955 0054 00       		.byte	0
 2956 0055 07       		.uleb128 0x7
 2957 0056 2E       		.uleb128 0x2e
 2958 0057 01       		.byte	0x1
 2959 0058 3F       		.uleb128 0x3f
 2960 0059 19       		.uleb128 0x19
 2961 005a 03       		.uleb128 0x3
 2962 005b 0E       		.uleb128 0xe
 2963 005c 3A       		.uleb128 0x3a
 2964 005d 0B       		.uleb128 0xb
 2965 005e 3B       		.uleb128 0x3b
 2966 005f 0B       		.uleb128 0xb
 2967 0060 27       		.uleb128 0x27
 2968 0061 19       		.uleb128 0x19
 2969 0062 11       		.uleb128 0x11
 2970 0063 01       		.uleb128 0x1
 2971 0064 12       		.uleb128 0x12
 2972 0065 06       		.uleb128 0x6
 2973 0066 40       		.uleb128 0x40
 2974 0067 18       		.uleb128 0x18
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 78


 2975 0068 9642     		.uleb128 0x2116
 2976 006a 19       		.uleb128 0x19
 2977 006b 01       		.uleb128 0x1
 2978 006c 13       		.uleb128 0x13
 2979 006d 00       		.byte	0
 2980 006e 00       		.byte	0
 2981 006f 08       		.uleb128 0x8
 2982 0070 34       		.uleb128 0x34
 2983 0071 00       		.byte	0
 2984 0072 03       		.uleb128 0x3
 2985 0073 0E       		.uleb128 0xe
 2986 0074 3A       		.uleb128 0x3a
 2987 0075 0B       		.uleb128 0xb
 2988 0076 3B       		.uleb128 0x3b
 2989 0077 0B       		.uleb128 0xb
 2990 0078 49       		.uleb128 0x49
 2991 0079 13       		.uleb128 0x13
 2992 007a 02       		.uleb128 0x2
 2993 007b 18       		.uleb128 0x18
 2994 007c 00       		.byte	0
 2995 007d 00       		.byte	0
 2996 007e 09       		.uleb128 0x9
 2997 007f 2E       		.uleb128 0x2e
 2998 0080 01       		.byte	0x1
 2999 0081 3F       		.uleb128 0x3f
 3000 0082 19       		.uleb128 0x19
 3001 0083 03       		.uleb128 0x3
 3002 0084 0E       		.uleb128 0xe
 3003 0085 3A       		.uleb128 0x3a
 3004 0086 0B       		.uleb128 0xb
 3005 0087 3B       		.uleb128 0x3b
 3006 0088 05       		.uleb128 0x5
 3007 0089 27       		.uleb128 0x27
 3008 008a 19       		.uleb128 0x19
 3009 008b 11       		.uleb128 0x11
 3010 008c 01       		.uleb128 0x1
 3011 008d 12       		.uleb128 0x12
 3012 008e 06       		.uleb128 0x6
 3013 008f 40       		.uleb128 0x40
 3014 0090 18       		.uleb128 0x18
 3015 0091 9642     		.uleb128 0x2116
 3016 0093 19       		.uleb128 0x19
 3017 0094 01       		.uleb128 0x1
 3018 0095 13       		.uleb128 0x13
 3019 0096 00       		.byte	0
 3020 0097 00       		.byte	0
 3021 0098 0A       		.uleb128 0xa
 3022 0099 34       		.uleb128 0x34
 3023 009a 00       		.byte	0
 3024 009b 03       		.uleb128 0x3
 3025 009c 0E       		.uleb128 0xe
 3026 009d 3A       		.uleb128 0x3a
 3027 009e 0B       		.uleb128 0xb
 3028 009f 3B       		.uleb128 0x3b
 3029 00a0 05       		.uleb128 0x5
 3030 00a1 49       		.uleb128 0x49
 3031 00a2 13       		.uleb128 0x13
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 79


 3032 00a3 02       		.uleb128 0x2
 3033 00a4 18       		.uleb128 0x18
 3034 00a5 00       		.byte	0
 3035 00a6 00       		.byte	0
 3036 00a7 0B       		.uleb128 0xb
 3037 00a8 05       		.uleb128 0x5
 3038 00a9 00       		.byte	0
 3039 00aa 03       		.uleb128 0x3
 3040 00ab 0E       		.uleb128 0xe
 3041 00ac 3A       		.uleb128 0x3a
 3042 00ad 0B       		.uleb128 0xb
 3043 00ae 3B       		.uleb128 0x3b
 3044 00af 05       		.uleb128 0x5
 3045 00b0 49       		.uleb128 0x49
 3046 00b1 13       		.uleb128 0x13
 3047 00b2 02       		.uleb128 0x2
 3048 00b3 18       		.uleb128 0x18
 3049 00b4 00       		.byte	0
 3050 00b5 00       		.byte	0
 3051 00b6 0C       		.uleb128 0xc
 3052 00b7 2E       		.uleb128 0x2e
 3053 00b8 01       		.byte	0x1
 3054 00b9 3F       		.uleb128 0x3f
 3055 00ba 19       		.uleb128 0x19
 3056 00bb 03       		.uleb128 0x3
 3057 00bc 0E       		.uleb128 0xe
 3058 00bd 3A       		.uleb128 0x3a
 3059 00be 0B       		.uleb128 0xb
 3060 00bf 3B       		.uleb128 0x3b
 3061 00c0 05       		.uleb128 0x5
 3062 00c1 27       		.uleb128 0x27
 3063 00c2 19       		.uleb128 0x19
 3064 00c3 11       		.uleb128 0x11
 3065 00c4 01       		.uleb128 0x1
 3066 00c5 12       		.uleb128 0x12
 3067 00c6 06       		.uleb128 0x6
 3068 00c7 40       		.uleb128 0x40
 3069 00c8 18       		.uleb128 0x18
 3070 00c9 9742     		.uleb128 0x2117
 3071 00cb 19       		.uleb128 0x19
 3072 00cc 01       		.uleb128 0x1
 3073 00cd 13       		.uleb128 0x13
 3074 00ce 00       		.byte	0
 3075 00cf 00       		.byte	0
 3076 00d0 0D       		.uleb128 0xd
 3077 00d1 2E       		.uleb128 0x2e
 3078 00d2 00       		.byte	0
 3079 00d3 3F       		.uleb128 0x3f
 3080 00d4 19       		.uleb128 0x19
 3081 00d5 03       		.uleb128 0x3
 3082 00d6 0E       		.uleb128 0xe
 3083 00d7 3A       		.uleb128 0x3a
 3084 00d8 0B       		.uleb128 0xb
 3085 00d9 3B       		.uleb128 0x3b
 3086 00da 05       		.uleb128 0x5
 3087 00db 27       		.uleb128 0x27
 3088 00dc 19       		.uleb128 0x19
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 80


 3089 00dd 49       		.uleb128 0x49
 3090 00de 13       		.uleb128 0x13
 3091 00df 11       		.uleb128 0x11
 3092 00e0 01       		.uleb128 0x1
 3093 00e1 12       		.uleb128 0x12
 3094 00e2 06       		.uleb128 0x6
 3095 00e3 40       		.uleb128 0x40
 3096 00e4 18       		.uleb128 0x18
 3097 00e5 9742     		.uleb128 0x2117
 3098 00e7 19       		.uleb128 0x19
 3099 00e8 00       		.byte	0
 3100 00e9 00       		.byte	0
 3101 00ea 0E       		.uleb128 0xe
 3102 00eb 34       		.uleb128 0x34
 3103 00ec 00       		.byte	0
 3104 00ed 03       		.uleb128 0x3
 3105 00ee 0E       		.uleb128 0xe
 3106 00ef 3A       		.uleb128 0x3a
 3107 00f0 0B       		.uleb128 0xb
 3108 00f1 3B       		.uleb128 0x3b
 3109 00f2 0B       		.uleb128 0xb
 3110 00f3 49       		.uleb128 0x49
 3111 00f4 13       		.uleb128 0x13
 3112 00f5 3F       		.uleb128 0x3f
 3113 00f6 19       		.uleb128 0x19
 3114 00f7 02       		.uleb128 0x2
 3115 00f8 18       		.uleb128 0x18
 3116 00f9 00       		.byte	0
 3117 00fa 00       		.byte	0
 3118 00fb 00       		.byte	0
 3119              		.section	.debug_aranges,"",%progbits
 3120 0000 54010000 		.4byte	0x154
 3121 0004 0200     		.2byte	0x2
 3122 0006 00000000 		.4byte	.Ldebug_info0
 3123 000a 04       		.byte	0x4
 3124 000b 00       		.byte	0
 3125 000c 0000     		.2byte	0
 3126 000e 0000     		.2byte	0
 3127 0010 00000000 		.4byte	.LFB2
 3128 0014 5C000000 		.4byte	.LFE2-.LFB2
 3129 0018 00000000 		.4byte	.LFB3
 3130 001c 3C000000 		.4byte	.LFE3-.LFB3
 3131 0020 00000000 		.4byte	.LFB4
 3132 0024 24000000 		.4byte	.LFE4-.LFB4
 3133 0028 00000000 		.4byte	.LFB5
 3134 002c 34000000 		.4byte	.LFE5-.LFB5
 3135 0030 00000000 		.4byte	.LFB6
 3136 0034 48000000 		.4byte	.LFE6-.LFB6
 3137 0038 00000000 		.4byte	.LFB7
 3138 003c 48000000 		.4byte	.LFE7-.LFB7
 3139 0040 00000000 		.4byte	.LFB8
 3140 0044 48000000 		.4byte	.LFE8-.LFB8
 3141 0048 00000000 		.4byte	.LFB9
 3142 004c 50000000 		.4byte	.LFE9-.LFB9
 3143 0050 00000000 		.4byte	.LFB10
 3144 0054 20000000 		.4byte	.LFE10-.LFB10
 3145 0058 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 81


 3146 005c 4C000000 		.4byte	.LFE11-.LFB11
 3147 0060 00000000 		.4byte	.LFB12
 3148 0064 4C000000 		.4byte	.LFE12-.LFB12
 3149 0068 00000000 		.4byte	.LFB13
 3150 006c 50000000 		.4byte	.LFE13-.LFB13
 3151 0070 00000000 		.4byte	.LFB14
 3152 0074 48000000 		.4byte	.LFE14-.LFB14
 3153 0078 00000000 		.4byte	.LFB15
 3154 007c 20000000 		.4byte	.LFE15-.LFB15
 3155 0080 00000000 		.4byte	.LFB16
 3156 0084 18000000 		.4byte	.LFE16-.LFB16
 3157 0088 00000000 		.4byte	.LFB17
 3158 008c 48000000 		.4byte	.LFE17-.LFB17
 3159 0090 00000000 		.4byte	.LFB18
 3160 0094 20000000 		.4byte	.LFE18-.LFB18
 3161 0098 00000000 		.4byte	.LFB19
 3162 009c 18000000 		.4byte	.LFE19-.LFB19
 3163 00a0 00000000 		.4byte	.LFB20
 3164 00a4 48000000 		.4byte	.LFE20-.LFB20
 3165 00a8 00000000 		.4byte	.LFB21
 3166 00ac 20000000 		.4byte	.LFE21-.LFB21
 3167 00b0 00000000 		.4byte	.LFB22
 3168 00b4 18000000 		.4byte	.LFE22-.LFB22
 3169 00b8 00000000 		.4byte	.LFB23
 3170 00bc 4C000000 		.4byte	.LFE23-.LFB23
 3171 00c0 00000000 		.4byte	.LFB24
 3172 00c4 20000000 		.4byte	.LFE24-.LFB24
 3173 00c8 00000000 		.4byte	.LFB25
 3174 00cc 18000000 		.4byte	.LFE25-.LFB25
 3175 00d0 00000000 		.4byte	.LFB26
 3176 00d4 20000000 		.4byte	.LFE26-.LFB26
 3177 00d8 00000000 		.4byte	.LFB27
 3178 00dc 18000000 		.4byte	.LFE27-.LFB27
 3179 00e0 00000000 		.4byte	.LFB28
 3180 00e4 18000000 		.4byte	.LFE28-.LFB28
 3181 00e8 00000000 		.4byte	.LFB29
 3182 00ec 18000000 		.4byte	.LFE29-.LFB29
 3183 00f0 00000000 		.4byte	.LFB30
 3184 00f4 44000000 		.4byte	.LFE30-.LFB30
 3185 00f8 00000000 		.4byte	.LFB31
 3186 00fc 48000000 		.4byte	.LFE31-.LFB31
 3187 0100 00000000 		.4byte	.LFB32
 3188 0104 4C000000 		.4byte	.LFE32-.LFB32
 3189 0108 00000000 		.4byte	.LFB33
 3190 010c 48000000 		.4byte	.LFE33-.LFB33
 3191 0110 00000000 		.4byte	.LFB34
 3192 0114 48000000 		.4byte	.LFE34-.LFB34
 3193 0118 00000000 		.4byte	.LFB35
 3194 011c 3C000000 		.4byte	.LFE35-.LFB35
 3195 0120 00000000 		.4byte	.LFB36
 3196 0124 20000000 		.4byte	.LFE36-.LFB36
 3197 0128 00000000 		.4byte	.LFB37
 3198 012c 1C000000 		.4byte	.LFE37-.LFB37
 3199 0130 00000000 		.4byte	.LFB38
 3200 0134 14000000 		.4byte	.LFE38-.LFB38
 3201 0138 00000000 		.4byte	.LFB39
 3202 013c 14000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 82


 3203 0140 00000000 		.4byte	.LFB40
 3204 0144 1C000000 		.4byte	.LFE40-.LFB40
 3205 0148 00000000 		.4byte	.LFB41
 3206 014c 1C000000 		.4byte	.LFE41-.LFB41
 3207 0150 00000000 		.4byte	0
 3208 0154 00000000 		.4byte	0
 3209              		.section	.debug_ranges,"",%progbits
 3210              	.Ldebug_ranges0:
 3211 0000 00000000 		.4byte	.LFB2
 3212 0004 5C000000 		.4byte	.LFE2
 3213 0008 00000000 		.4byte	.LFB3
 3214 000c 3C000000 		.4byte	.LFE3
 3215 0010 00000000 		.4byte	.LFB4
 3216 0014 24000000 		.4byte	.LFE4
 3217 0018 00000000 		.4byte	.LFB5
 3218 001c 34000000 		.4byte	.LFE5
 3219 0020 00000000 		.4byte	.LFB6
 3220 0024 48000000 		.4byte	.LFE6
 3221 0028 00000000 		.4byte	.LFB7
 3222 002c 48000000 		.4byte	.LFE7
 3223 0030 00000000 		.4byte	.LFB8
 3224 0034 48000000 		.4byte	.LFE8
 3225 0038 00000000 		.4byte	.LFB9
 3226 003c 50000000 		.4byte	.LFE9
 3227 0040 00000000 		.4byte	.LFB10
 3228 0044 20000000 		.4byte	.LFE10
 3229 0048 00000000 		.4byte	.LFB11
 3230 004c 4C000000 		.4byte	.LFE11
 3231 0050 00000000 		.4byte	.LFB12
 3232 0054 4C000000 		.4byte	.LFE12
 3233 0058 00000000 		.4byte	.LFB13
 3234 005c 50000000 		.4byte	.LFE13
 3235 0060 00000000 		.4byte	.LFB14
 3236 0064 48000000 		.4byte	.LFE14
 3237 0068 00000000 		.4byte	.LFB15
 3238 006c 20000000 		.4byte	.LFE15
 3239 0070 00000000 		.4byte	.LFB16
 3240 0074 18000000 		.4byte	.LFE16
 3241 0078 00000000 		.4byte	.LFB17
 3242 007c 48000000 		.4byte	.LFE17
 3243 0080 00000000 		.4byte	.LFB18
 3244 0084 20000000 		.4byte	.LFE18
 3245 0088 00000000 		.4byte	.LFB19
 3246 008c 18000000 		.4byte	.LFE19
 3247 0090 00000000 		.4byte	.LFB20
 3248 0094 48000000 		.4byte	.LFE20
 3249 0098 00000000 		.4byte	.LFB21
 3250 009c 20000000 		.4byte	.LFE21
 3251 00a0 00000000 		.4byte	.LFB22
 3252 00a4 18000000 		.4byte	.LFE22
 3253 00a8 00000000 		.4byte	.LFB23
 3254 00ac 4C000000 		.4byte	.LFE23
 3255 00b0 00000000 		.4byte	.LFB24
 3256 00b4 20000000 		.4byte	.LFE24
 3257 00b8 00000000 		.4byte	.LFB25
 3258 00bc 18000000 		.4byte	.LFE25
 3259 00c0 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 83


 3260 00c4 20000000 		.4byte	.LFE26
 3261 00c8 00000000 		.4byte	.LFB27
 3262 00cc 18000000 		.4byte	.LFE27
 3263 00d0 00000000 		.4byte	.LFB28
 3264 00d4 18000000 		.4byte	.LFE28
 3265 00d8 00000000 		.4byte	.LFB29
 3266 00dc 18000000 		.4byte	.LFE29
 3267 00e0 00000000 		.4byte	.LFB30
 3268 00e4 44000000 		.4byte	.LFE30
 3269 00e8 00000000 		.4byte	.LFB31
 3270 00ec 48000000 		.4byte	.LFE31
 3271 00f0 00000000 		.4byte	.LFB32
 3272 00f4 4C000000 		.4byte	.LFE32
 3273 00f8 00000000 		.4byte	.LFB33
 3274 00fc 48000000 		.4byte	.LFE33
 3275 0100 00000000 		.4byte	.LFB34
 3276 0104 48000000 		.4byte	.LFE34
 3277 0108 00000000 		.4byte	.LFB35
 3278 010c 3C000000 		.4byte	.LFE35
 3279 0110 00000000 		.4byte	.LFB36
 3280 0114 20000000 		.4byte	.LFE36
 3281 0118 00000000 		.4byte	.LFB37
 3282 011c 1C000000 		.4byte	.LFE37
 3283 0120 00000000 		.4byte	.LFB38
 3284 0124 14000000 		.4byte	.LFE38
 3285 0128 00000000 		.4byte	.LFB39
 3286 012c 14000000 		.4byte	.LFE39
 3287 0130 00000000 		.4byte	.LFB40
 3288 0134 1C000000 		.4byte	.LFE40
 3289 0138 00000000 		.4byte	.LFB41
 3290 013c 1C000000 		.4byte	.LFE41
 3291 0140 00000000 		.4byte	0
 3292 0144 00000000 		.4byte	0
 3293              		.section	.debug_line,"",%progbits
 3294              	.Ldebug_line0:
 3295 0000 6F030000 		.section	.debug_str,"MS",%progbits,1
 3295      02004200 
 3295      00000201 
 3295      FB0E0D00 
 3295      01010101 
 3296              	.LASF41:
 3297 0000 636F756E 		.ascii	"count\000"
 3297      7400
 3298              	.LASF57:
 3299 0006 50574D5F 		.ascii	"PWM_B_WriteCompareBuf\000"
 3299      425F5772 
 3299      69746543 
 3299      6F6D7061 
 3299      72654275 
 3300              	.LASF17:
 3301 001c 50574D5F 		.ascii	"PWM_B_Init\000"
 3301      425F496E 
 3301      697400
 3302              	.LASF74:
 3303 0027 50574D5F 		.ascii	"PWM_B_GetInterruptSource\000"
 3303      425F4765 
 3303      74496E74 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 84


 3303      65727275 
 3303      7074536F 
 3304              	.LASF60:
 3305 0040 50574D5F 		.ascii	"PWM_B_ReadCapture\000"
 3305      425F5265 
 3305      61644361 
 3305      70747572 
 3305      6500
 3306              	.LASF45:
 3307 0052 70657269 		.ascii	"period\000"
 3307      6F6400
 3308              	.LASF36:
 3309 0059 50574D5F 		.ascii	"PWM_B_SetPWMDeadTime\000"
 3309      425F5365 
 3309      7450574D 
 3309      44656164 
 3309      54696D65 
 3310              	.LASF7:
 3311 006e 6C6F6E67 		.ascii	"long long unsigned int\000"
 3311      206C6F6E 
 3311      6720756E 
 3311      7369676E 
 3311      65642069 
 3312              	.LASF71:
 3313 0085 50574D5F 		.ascii	"PWM_B_SetInterruptMode\000"
 3313      425F5365 
 3313      74496E74 
 3313      65727275 
 3313      70744D6F 
 3314              	.LASF38:
 3315 009c 50574D5F 		.ascii	"PWM_B_SetPWMInvert\000"
 3315      425F5365 
 3315      7450574D 
 3315      496E7665 
 3315      727400
 3316              	.LASF25:
 3317 00af 71644D6F 		.ascii	"qdMode\000"
 3317      646500
 3318              	.LASF28:
 3319 00b6 50574D5F 		.ascii	"PWM_B_SetOneShot\000"
 3319      425F5365 
 3319      744F6E65 
 3319      53686F74 
 3319      00
 3320              	.LASF6:
 3321 00c7 6C6F6E67 		.ascii	"long long int\000"
 3321      206C6F6E 
 3321      6720696E 
 3321      7400
 3322              	.LASF0:
 3323 00d5 7369676E 		.ascii	"signed char\000"
 3323      65642063 
 3323      68617200 
 3324              	.LASF56:
 3325 00e1 50574D5F 		.ascii	"PWM_B_ReadCompare\000"
 3325      425F5265 
 3325      6164436F 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 85


 3325      6D706172 
 3325      6500
 3326              	.LASF52:
 3327 00f3 50574D5F 		.ascii	"PWM_B_ReadPeriodBuf\000"
 3327      425F5265 
 3327      61645065 
 3327      72696F64 
 3327      42756600 
 3328              	.LASF4:
 3329 0107 6C6F6E67 		.ascii	"long int\000"
 3329      20696E74 
 3329      00
 3330              	.LASF68:
 3331 0110 50574D5F 		.ascii	"PWM_B_TriggerCommand\000"
 3331      425F5472 
 3331      69676765 
 3331      72436F6D 
 3331      6D616E64 
 3332              	.LASF19:
 3333 0125 50574D5F 		.ascii	"PWM_B_Enable\000"
 3333      425F456E 
 3333      61626C65 
 3333      00
 3334              	.LASF9:
 3335 0132 75696E74 		.ascii	"uint8\000"
 3335      3800
 3336              	.LASF12:
 3337 0138 646F7562 		.ascii	"double\000"
 3337      6C6500
 3338              	.LASF53:
 3339 013f 50574D5F 		.ascii	"PWM_B_SetPeriodSwap\000"
 3339      425F5365 
 3339      74506572 
 3339      696F6453 
 3339      77617000 
 3340              	.LASF10:
 3341 0153 75696E74 		.ascii	"uint32\000"
 3341      333200
 3342              	.LASF26:
 3343 015a 50574D5F 		.ascii	"PWM_B_SetPrescaler\000"
 3343      425F5365 
 3343      74507265 
 3343      7363616C 
 3343      657200
 3344              	.LASF63:
 3345 016d 74726967 		.ascii	"triggerMode\000"
 3345      6765724D 
 3345      6F646500 
 3346              	.LASF39:
 3347 0179 6D61736B 		.ascii	"mask\000"
 3347      00
 3348              	.LASF46:
 3349 017e 50574D5F 		.ascii	"PWM_B_ReadCounter\000"
 3349      425F5265 
 3349      6164436F 
 3349      756E7465 
 3349      7200
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 86


 3350              	.LASF37:
 3351 0190 64656164 		.ascii	"deadTime\000"
 3351      54696D65 
 3351      00
 3352              	.LASF8:
 3353 0199 756E7369 		.ascii	"unsigned int\000"
 3353      676E6564 
 3353      20696E74 
 3353      00
 3354              	.LASF69:
 3355 01a6 636F6D6D 		.ascii	"command\000"
 3355      616E6400 
 3356              	.LASF5:
 3357 01ae 6C6F6E67 		.ascii	"long unsigned int\000"
 3357      20756E73 
 3357      69676E65 
 3357      6420696E 
 3357      7400
 3358              	.LASF31:
 3359 01c0 6D6F6465 		.ascii	"modeMask\000"
 3359      4D61736B 
 3359      00
 3360              	.LASF23:
 3361 01c9 50574D5F 		.ascii	"PWM_B_SetQDMode\000"
 3361      425F5365 
 3361      7451444D 
 3361      6F646500 
 3362              	.LASF47:
 3363 01d9 50574D5F 		.ascii	"PWM_B_ReadPeriod\000"
 3363      425F5265 
 3363      61645065 
 3363      72696F64 
 3363      00
 3364              	.LASF3:
 3365 01ea 73686F72 		.ascii	"short unsigned int\000"
 3365      7420756E 
 3365      7369676E 
 3365      65642069 
 3365      6E7400
 3366              	.LASF64:
 3367 01fd 50574D5F 		.ascii	"PWM_B_SetReloadMode\000"
 3367      425F5365 
 3367      7452656C 
 3367      6F61644D 
 3367      6F646500 
 3368              	.LASF29:
 3369 0211 6F6E6553 		.ascii	"oneShotEnable\000"
 3369      686F7445 
 3369      6E61626C 
 3369      6500
 3370              	.LASF42:
 3371 021f 50574D5F 		.ascii	"PWM_B_SetCounterMode\000"
 3371      425F5365 
 3371      74436F75 
 3371      6E746572 
 3371      4D6F6465 
 3372              	.LASF80:
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 87


 3373 0234 50574D5F 		.ascii	"PWM_B_initVar\000"
 3373      425F696E 
 3373      69745661 
 3373      7200
 3374              	.LASF77:
 3375 0242 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3375      43313120 
 3375      352E342E 
 3375      31203230 
 3375      31363036 
 3376 0275 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3376      20726576 
 3376      6973696F 
 3376      6E203233 
 3376      37373135 
 3377 02a8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3377      66756E63 
 3377      74696F6E 
 3377      2D736563 
 3377      74696F6E 
 3378              	.LASF14:
 3379 02d0 72656733 		.ascii	"reg32\000"
 3379      3200
 3380              	.LASF72:
 3381 02d6 696E7465 		.ascii	"interruptMask\000"
 3381      72727570 
 3381      744D6173 
 3381      6B00
 3382              	.LASF50:
 3383 02e4 50574D5F 		.ascii	"PWM_B_WritePeriodBuf\000"
 3383      425F5772 
 3383      69746550 
 3383      6572696F 
 3383      64427566 
 3384              	.LASF16:
 3385 02f9 73697A65 		.ascii	"sizetype\000"
 3385      74797065 
 3385      00
 3386              	.LASF15:
 3387 0302 6C6F6E67 		.ascii	"long double\000"
 3387      20646F75 
 3387      626C6500 
 3388              	.LASF55:
 3389 030e 636F6D70 		.ascii	"compare\000"
 3389      61726500 
 3390              	.LASF30:
 3391 0316 50574D5F 		.ascii	"PWM_B_SetPWMMode\000"
 3391      425F5365 
 3391      7450574D 
 3391      4D6F6465 
 3391      00
 3392              	.LASF62:
 3393 0327 50574D5F 		.ascii	"PWM_B_SetCaptureMode\000"
 3393      425F5365 
 3393      74436170 
 3393      74757265 
 3393      4D6F6465 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 88


 3394              	.LASF11:
 3395 033c 666C6F61 		.ascii	"float\000"
 3395      7400
 3396              	.LASF79:
 3397 0342 433A5C55 		.ascii	"C:\\Users\\Jacob\\Documents\\Junior\\EGR 304\\EGR30"
 3397      73657273 
 3397      5C4A6163 
 3397      6F625C44 
 3397      6F63756D 
 3398 036f 345C4857 		.ascii	"4\\HW09 Lab Templates\\Lab 4 ADC.cydsn\000"
 3398      3039204C 
 3398      61622054 
 3398      656D706C 
 3398      61746573 
 3399              	.LASF27:
 3400 0394 70726573 		.ascii	"prescaler\000"
 3400      63616C65 
 3400      7200
 3401              	.LASF61:
 3402 039e 50574D5F 		.ascii	"PWM_B_ReadCaptureBuf\000"
 3402      425F5265 
 3402      61644361 
 3402      70747572 
 3402      65427566 
 3403              	.LASF20:
 3404 03b3 50574D5F 		.ascii	"PWM_B_Stop\000"
 3404      425F5374 
 3404      6F7000
 3405              	.LASF76:
 3406 03be 50574D5F 		.ascii	"PWM_B_SetInterrupt\000"
 3406      425F5365 
 3406      74496E74 
 3406      65727275 
 3406      707400
 3407              	.LASF1:
 3408 03d1 756E7369 		.ascii	"unsigned char\000"
 3408      676E6564 
 3408      20636861 
 3408      7200
 3409              	.LASF35:
 3410 03df 73746F70 		.ascii	"stopOnKillEnable\000"
 3410      4F6E4B69 
 3410      6C6C456E 
 3410      61626C65 
 3410      00
 3411              	.LASF2:
 3412 03f0 73686F72 		.ascii	"short int\000"
 3412      7420696E 
 3412      7400
 3413              	.LASF70:
 3414 03fa 50574D5F 		.ascii	"PWM_B_ReadStatus\000"
 3414      425F5265 
 3414      61645374 
 3414      61747573 
 3414      00
 3415              	.LASF48:
 3416 040b 50574D5F 		.ascii	"PWM_B_SetCompareSwap\000"
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 89


 3416      425F5365 
 3416      74436F6D 
 3416      70617265 
 3416      53776170 
 3417              	.LASF75:
 3418 0420 50574D5F 		.ascii	"PWM_B_ClearInterrupt\000"
 3418      425F436C 
 3418      65617249 
 3418      6E746572 
 3418      72757074 
 3419              	.LASF73:
 3420 0435 50574D5F 		.ascii	"PWM_B_GetInterruptSourceMasked\000"
 3420      425F4765 
 3420      74496E74 
 3420      65727275 
 3420      7074536F 
 3421              	.LASF67:
 3422 0454 50574D5F 		.ascii	"PWM_B_SetCountMode\000"
 3422      425F5365 
 3422      74436F75 
 3422      6E744D6F 
 3422      646500
 3423              	.LASF13:
 3424 0467 63686172 		.ascii	"char\000"
 3424      00
 3425              	.LASF24:
 3426 046c 6D6F6465 		.ascii	"mode\000"
 3426      00
 3427              	.LASF66:
 3428 0471 50574D5F 		.ascii	"PWM_B_SetStopMode\000"
 3428      425F5365 
 3428      7453746F 
 3428      704D6F64 
 3428      6500
 3429              	.LASF32:
 3430 0483 50574D5F 		.ascii	"PWM_B_SetPWMSyncKill\000"
 3430      425F5365 
 3430      7450574D 
 3430      53796E63 
 3430      4B696C6C 
 3431              	.LASF43:
 3432 0498 636F756E 		.ascii	"counterMode\000"
 3432      7465724D 
 3432      6F646500 
 3433              	.LASF65:
 3434 04a4 50574D5F 		.ascii	"PWM_B_SetStartMode\000"
 3434      425F5365 
 3434      74537461 
 3434      72744D6F 
 3434      646500
 3435              	.LASF58:
 3436 04b7 636F6D70 		.ascii	"compareBuf\000"
 3436      61726542 
 3436      756600
 3437              	.LASF54:
 3438 04c2 50574D5F 		.ascii	"PWM_B_WriteCompare\000"
 3438      425F5772 
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 90


 3438      69746543 
 3438      6F6D7061 
 3438      726500
 3439              	.LASF21:
 3440 04d5 656E6162 		.ascii	"enableInterrupts\000"
 3440      6C65496E 
 3440      74657272 
 3440      75707473 
 3440      00
 3441              	.LASF22:
 3442 04e6 50574D5F 		.ascii	"PWM_B_SetMode\000"
 3442      425F5365 
 3442      744D6F64 
 3442      6500
 3443              	.LASF18:
 3444 04f4 50574D5F 		.ascii	"PWM_B_Start\000"
 3444      425F5374 
 3444      61727400 
 3445              	.LASF34:
 3446 0500 50574D5F 		.ascii	"PWM_B_SetPWMStopOnKill\000"
 3446      425F5365 
 3446      7450574D 
 3446      53746F70 
 3446      4F6E4B69 
 3447              	.LASF33:
 3448 0517 73796E63 		.ascii	"syncKillEnable\000"
 3448      4B696C6C 
 3448      456E6162 
 3448      6C6500
 3449              	.LASF49:
 3450 0526 73776170 		.ascii	"swapEnable\000"
 3450      456E6162 
 3450      6C6500
 3451              	.LASF44:
 3452 0531 50574D5F 		.ascii	"PWM_B_WritePeriod\000"
 3452      425F5772 
 3452      69746550 
 3452      6572696F 
 3452      6400
 3453              	.LASF40:
 3454 0543 50574D5F 		.ascii	"PWM_B_WriteCounter\000"
 3454      425F5772 
 3454      69746543 
 3454      6F756E74 
 3454      657200
 3455              	.LASF51:
 3456 0556 70657269 		.ascii	"periodBuf\000"
 3456      6F644275 
 3456      6600
 3457              	.LASF59:
 3458 0560 50574D5F 		.ascii	"PWM_B_ReadCompareBuf\000"
 3458      425F5265 
 3458      6164436F 
 3458      6D706172 
 3458      65427566 
 3459              	.LASF78:
 3460 0575 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_B.c\000"
ARM GAS  C:\Users\Jacob\AppData\Local\Temp\ccef0cuI.s 			page 91


 3460      72617465 
 3460      645F536F 
 3460      75726365 
 3460      5C50536F 
 3461              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
