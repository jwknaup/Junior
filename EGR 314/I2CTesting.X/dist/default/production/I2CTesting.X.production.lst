

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Apr 15 15:25:32 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1
    69                           	psect	text58,global,reloc=2,class=CODE,delta=1
    70                           	psect	text59,global,reloc=2,class=CODE,delta=1
    71                           	psect	text60,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	text62,global,reloc=2,class=CODE,delta=1
    74                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text64,global,reloc=2,class=CODE,delta=1
    76                           	psect	text65,global,reloc=2,class=CODE,delta=1
    77                           	psect	text66,global,reloc=2,class=CODE,delta=1
    78                           	psect	text67,global,reloc=2,class=CODE,delta=1
    79                           	psect	text68,global,reloc=2,class=CODE,delta=1
    80                           	psect	text69,global,reloc=2,class=CODE,delta=1
    81                           	psect	text70,global,reloc=2,class=CODE,delta=1
    82                           	psect	text71,global,reloc=2,class=CODE,delta=1
    83                           	psect	text72,global,reloc=2,class=CODE,delta=1
    84                           	psect	text73,global,reloc=2,class=CODE,delta=1
    85                           	psect	text74,global,reloc=2,class=CODE,delta=1
    86                           	psect	text75,global,reloc=2,class=CODE,delta=1
    87                           	psect	text76,global,reloc=2,class=CODE,delta=1
    88                           	psect	text77,global,reloc=2,class=CODE,delta=1
    89                           	psect	text78,global,reloc=2,class=CODE,delta=1
    90                           	psect	text79,global,reloc=2,class=CODE,delta=1
    91                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text87,global,reloc=2,class=CODE,delta=1
    99                           	psect	text88,global,reloc=2,class=CODE,delta=1
   100                           	psect	text89,global,reloc=2,class=CODE,delta=1
   101                           	psect	text90,global,reloc=2,class=CODE,delta=1
   102                           	psect	text91,global,reloc=2,class=CODE,delta=1
   103                           	psect	text92,global,reloc=2,class=CODE,delta=1
   104                           	psect	text93,global,reloc=2,class=CODE,delta=1
   105                           	psect	text94,global,reloc=2,class=CODE,delta=1
   106                           	psect	text95,global,reloc=2,class=CODE,delta=1
   107                           	psect	text96,global,reloc=2,class=CODE,delta=1
   108                           	psect	text97,global,reloc=2,class=CODE,delta=1
   109                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text101,global,reloc=2,class=CODE,delta=1
   113                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   115                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   117                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   118  0000                     
   119                           ; Version 1.45
   120                           ; Generated 16/11/2017 GMT
   121                           ; 
   122                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC18F47K40 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153  0000                     
   154                           	psect	idataBANK0
   155  0009E0                     __pidataBANK0:
   156                           	opt stack 0
   157                           
   158                           ;initializer for _fsmStateTable
   159  0009E0  84                 	db	low _do_I2C_IDLE
   160  0009E1  0C                 	db	high _do_I2C_IDLE
   161  0009E2  00                 	db	low (_do_I2C_IDLE shr (0+16))
   162  0009E3  28                 	db	low _do_I2C_SEND_ADR_READ
   163  0009E4  0C                 	db	high _do_I2C_SEND_ADR_READ
   164  0009E5  00                 	db	low (_do_I2C_SEND_ADR_READ shr (0+16))
   165  0009E6  14                 	db	low _do_I2C_SEND_ADR_WRITE
   166  0009E7  0C                 	db	high _do_I2C_SEND_ADR_WRITE
   167  0009E8  00                 	db	low (_do_I2C_SEND_ADR_WRITE shr (0+16))
   168  0009E9  3E                 	db	low _do_I2C_TX
   169  0009EA  02                 	db	high _do_I2C_TX
   170  0009EB  00                 	db	low (_do_I2C_TX shr (0+16))
   171  0009EC  50                 	db	low _do_I2C_RX
   172  0009ED  04                 	db	high _do_I2C_RX
   173  0009EE  00                 	db	low (_do_I2C_RX shr (0+16))
   174  0009EF  74                 	db	low _do_I2C_RCEN
   175  0009F0  0C                 	db	high _do_I2C_RCEN
   176  0009F1  00                 	db	low (_do_I2C_RCEN shr (0+16))
   177  0009F2  B2                 	db	low _do_I2C_TX_EMPTY
   178  0009F3  05                 	db	high _do_I2C_TX_EMPTY
   179  0009F4  00                 	db	low (_do_I2C_TX_EMPTY shr (0+16))
   180  0009F5  04                 	db	low _do_I2C_SEND_RESTART_READ
   181  0009F6  0D                 	db	high _do_I2C_SEND_RESTART_READ
   182  0009F7  00                 	db	low (_do_I2C_SEND_RESTART_READ shr (0+16))
   183  0009F8  F6                 	db	low _do_I2C_SEND_RESTART_WRITE
   184  0009F9  0C                 	db	high _do_I2C_SEND_RESTART_WRITE
   185  0009FA  00                 	db	low (_do_I2C_SEND_RESTART_WRITE shr (0+16))
   186  0009FB  E8                 	db	low _do_I2C_SEND_RESTART
   187  0009FC  0C                 	db	high _do_I2C_SEND_RESTART
   188  0009FD  00                 	db	low (_do_I2C_SEND_RESTART shr (0+16))
   189  0009FE  DA                 	db	low _do_I2C_SEND_STOP
   190  0009FF  0C                 	db	high _do_I2C_SEND_STOP
   191  000A00  00                 	db	low (_do_I2C_SEND_STOP shr (0+16))
   192  000A01  CC                 	db	low _do_I2C_DO_ACK
   193  000A02  0C                 	db	high _do_I2C_DO_ACK
   194  000A03  00                 	db	low (_do_I2C_DO_ACK shr (0+16))
   195  000A04  BE                 	db	low _do_I2C_DO_NACK_STOP
   196  000A05  0C                 	db	high _do_I2C_DO_NACK_STOP
   197  000A06  00                 	db	low (_do_I2C_DO_NACK_STOP shr (0+16))
   198  000A07  B0                 	db	low _do_I2C_DO_NACK_RESTART
   199  000A08  0C                 	db	high _do_I2C_DO_NACK_RESTART
   200  000A09  00                 	db	low (_do_I2C_DO_NACK_RESTART shr (0+16))
   201  000A0A  3C                 	db	low _do_I2C_RESET
   202  000A0B  0C                 	db	high _do_I2C_RESET
   203  000A0C  00                 	db	low (_do_I2C_RESET shr (0+16))
   204  000A0D  02                 	db	low _do_I2C_DO_ADDRESS_NACK
   205  000A0E  07                 	db	high _do_I2C_DO_ADDRESS_NACK
   206  000A0F  00                 	db	low (_do_I2C_DO_ADDRESS_NACK shr (0+16))
   207  0000                     _SSP1DATPPSbits	set	3768
   208  0000                     _RC4PPS	set	3835
   209  0000                     _RC3PPS	set	3834
   210  0000                     _SSP1CLKPPSbits	set	3767
   211  0000                     _PIR3bits	set	3789
   212  0000                     _PIE3bits	set	3781
   213  0000                     _PMD5	set	3814
   214  0000                     _PMD4	set	3813
   215  0000                     _PMD3	set	3812
   216  0000                     _PMD2	set	3811
   217  0000                     _PMD1	set	3810
   218  0000                     _PMD0	set	3809
   219  0000                     _OSCTUNE	set	3805
   220  0000                     _OSCFRQ	set	3806
   221  0000                     _OSCEN	set	3804
   222  0000                     _OSCCON3	set	3802
   223  0000                     _OSCCON1	set	3800
   224  0000                     _ODCOND	set	3876
   225  0000                     _ODCONC	set	3871
   226  0000                     _ODCONB	set	3863
   227  0000                     _ODCONA	set	3855
   228  0000                     _ODCONE	set	3884
   229  0000                     _WPUC	set	3872
   230  0000                     _WPUA	set	3856
   231  0000                     _WPUB	set	3864
   232  0000                     _WPUE	set	3885
   233  0000                     _WPUD	set	3877
   234  0000                     _ANSELA	set	3857
   235  0000                     _ANSELE	set	3886
   236  0000                     _ANSELD	set	3878
   237  0000                     _ANSELB	set	3865
   238  0000                     _ANSELC	set	3873
   239  0000                     _LATAbits	set	3971
   240  0000                     _INTCONbits	set	4082
   241  0000                     _TRISD	set	3979
   242  0000                     _TRISC	set	3978
   243  0000                     _TRISB	set	3977
   244  0000                     _TRISA	set	3976
   245  0000                     _TRISE	set	3980
   246  0000                     _LATC	set	3973
   247  0000                     _LATB	set	3972
   248  0000                     _LATA	set	3971
   249  0000                     _LATD	set	3974
   250  0000                     _LATE	set	3975
   251  0000                     _SSP1STATbits	set	3989
   252  0000                     _SSP1MSK	set	3988
   253  0000                     _SSP1BUF	set	3986
   254  0000                     _SSP1CON2bits	set	3991
   255  0000                     _SSP1ADD	set	3987
   256  0000                     _SSP1CON2	set	3991
   257  0000                     _SSP1CON1	set	3990
   258  0000                     _SSP1STAT	set	3989
   259  0000                     _SSP1CON1bits	set	3990
   260                           
   261                           ; #config settings
   262  0000                     
   263                           	psect	cinit
   264  00093E                     __pcinit:
   265                           	opt stack 0
   266  00093E                     start_initialization:
   267                           	opt stack 0
   268  00093E                     __initialization:
   269                           	opt stack 0
   270                           
   271                           ; Initialize objects allocated to BANK0 (48 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273  00093E  0EE0               	movlw	low __pidataBANK0
   274  000940  6EF6               	movwf	tblptrl,c
   275  000942  0E09               	movlw	high __pidataBANK0
   276  000944  6EF7               	movwf	tblptrh,c
   277  000946  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278  000948  6EF8               	movwf	tblptru,c
   279  00094A  EE00  F060         	lfsr	0,__pdataBANK0
   280  00094E  EE10 F030          	lfsr	1,48
   281  000952                     copy_data0:
   282  000952  0009               	tblrd		*+
   283  000954  CFF5 FFEE          	movff	tablat,postinc0
   284  000958  50E5               	movf	postdec1,w,c
   285  00095A  50E1               	movf	fsr1l,w,c
   286  00095C  E1FA               	bnz	copy_data0
   287                           
   288                           ; Clear objects allocated to COMRAM (48 bytes)
   289  00095E  EE00  F001         	lfsr	0,__pbssCOMRAM
   290  000962  0E30               	movlw	48
   291  000964                     clear_0:
   292  000964  6AEE               	clrf	postinc0,c
   293  000966  06E8               	decf	wreg,f,c
   294  000968  E1FD               	bnz	clear_0
   295  00096A                     end_of_initialization:
   296                           	opt stack 0
   297  00096A                     __end_of__initialization:
   298                           	opt stack 0
   299  00096A  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   300  00096C  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   301  00096E  0100               	movlb	0
   302  000970  EFCA  F000         	goto	_main	;jump to C main() function
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	bssCOMRAM
   313  000001                     __pbssCOMRAM:
   314                           	opt stack 0
   315  000001                     _i2c_status:
   316                           	opt stack 0
   317  000001                     	ds	42
   318  00002B                     _i2c1_driver_i2cISR:
   319                           	opt stack 0
   320  00002B                     	ds	3
   321  00002E                     _i2c1_driver_busCollisionISR:
   322                           	opt stack 0
   323  00002E                     	ds	3
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           postdec1	equ	0xFE5
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	dataBANK0
   334  000060                     __pdataBANK0:
   335                           	opt stack 0
   336  000060                     _fsmStateTable:
   337                           	opt stack 0
   338  000060                     	ds	48
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           postdec1	equ	0xFE5
   346                           fsr1l	equ	0xFE1
   347                           
   348                           	psect	cstackBANK0
   349  000090                     __pcstackBANK0:
   350                           	opt stack 0
   351  000090                     i2c_open@address:
   352                           	opt stack 0
   353  000090                     i2c_masterOperation@read:
   354                           	opt stack 0
   355  000090                     setCallBack@cb:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x0
   359  000090                     	ds	1
   360  000091                     i2c_open@ret:
   361                           	opt stack 0
   362  000091                     i2c_masterOperation@ret:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x1
   366  000091                     	ds	1
   367  000092                     i2c_readNBytes@data:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x2
   371  000092                     	ds	1
   372  000093                     setCallBack@p:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x3
   376  000093                     	ds	1
   377  000094                     i2c_readNBytes@len:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x4
   381  000094                     	ds	1
   382  000095                     i2c_setDataCompleteCallback@cb:
   383                           	opt stack 0
   384  000095                     i2c_setAddressNACKCallback@cb:
   385                           	opt stack 0
   386                           
   387                           ; 3 bytes @ 0x5
   388  000095                     	ds	1
   389  000096                     i2c_readNBytes@address:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x6
   393  000096                     	ds	2
   394  000098                     i2c_setDataCompleteCallback@p:
   395                           	opt stack 0
   396  000098                     i2c_setAddressNACKCallback@p:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x8
   400  000098                     	ds	2
   401  00009A                     returnStop@p:
   402                           	opt stack 0
   403  00009A                     wr1RegCompleteHandler@p:
   404                           	opt stack 0
   405  00009A                     i2c_writeNBytes@data:
   406                           	opt stack 0
   407  00009A                     rd1RegCompleteHandler@p:
   408                           	opt stack 0
   409  00009A                     rd2RegCompleteHandler@p:
   410                           	opt stack 0
   411  00009A                     wr2RegCompleteHandler@p:
   412                           	opt stack 0
   413  00009A                     rdBlkRegCompleteHandler@p:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0xA
   417  00009A                     	ds	2
   418  00009C                     i2c_writeNBytes@len:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0xC
   422  00009C                     	ds	2
   423  00009E                     i2c_writeNBytes@address:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0xE
   427  00009E                     	ds	1
   428  00009F                     main@data:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0xF
   432  00009F                     	ds	2
   433  0000A1                     main@rec:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x11
   437  0000A1                     	ds	1
   438  0000A2                     main@rec_1229:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x12
   442  0000A2                     	ds	1
   443  0000A3                     main@addr:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x13
   447  0000A3                     	ds	1
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           postdec1	equ	0xFE5
   455                           fsr1l	equ	0xFE1
   456                           
   457                           	psect	cstackCOMRAM
   458  000031                     __pcstackCOMRAM:
   459                           	opt stack 0
   460  000031                     ??i2_i2c1_driver_isNACK:
   461  000031                     i2i2c1_driver_TXData@d:
   462                           	opt stack 0
   463  000031                     i2i2c_setBuffer@buffer:
   464                           	opt stack 0
   465  000031                     i2setCallBack@cb:
   466                           	opt stack 0
   467                           
   468                           ; 3 bytes @ 0x0
   469  000031                     	ds	1
   470  000032                     i2_do_I2C_TX$1023:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x1
   474  000032                     	ds	1
   475  000033                     i2i2c_setBuffer@bufferSize:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x2
   479  000033                     	ds	1
   480  000034                     ??_INTERRUPT_InterruptManager:
   481  000034                     i2setCallBack@p:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x3
   485  000034                     	ds	1
   486  000035                     
   487                           ; 1 bytes @ 0x4
   488  000035                     	ds	1
   489  000036                     i2setCallBack@idx:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x5
   493  000036                     	ds	1
   494  000037                     i2i2c_setDataCompleteCallback@cb:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x6
   498  000037                     	ds	3
   499  00003A                     i2i2c_setDataCompleteCallback@p:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x9
   503  00003A                     	ds	2
   504  00003C                     i2returnStop@p:
   505                           	opt stack 0
   506  00003C                     i2wr1RegCompleteHandler@p:
   507                           	opt stack 0
   508  00003C                     i2rd1RegCompleteHandler@p:
   509                           	opt stack 0
   510  00003C                     i2rd2RegCompleteHandler@p:
   511                           	opt stack 0
   512  00003C                     i2wr2RegCompleteHandler@p:
   513                           	opt stack 0
   514  00003C                     i2rdBlkRegCompleteHandler@p:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0xB
   518  00003C                     	ds	2
   519  00003E                     
   520                           ; 1 bytes @ 0xD
   521  00003E                     	ds	8
   522  000046                     ??_mssp1_IRQisEnabled:
   523  000046                     ??_i2c1_driver_isNACK:
   524  000046                     i2c1_driver_TXData@d:
   525                           	opt stack 0
   526  000046                     i2c_close@ret:
   527                           	opt stack 0
   528  000046                     setCallBack@idx:
   529                           	opt stack 0
   530  000046                     mssp1_waitForEvent@timeout:
   531                           	opt stack 0
   532  000046                     i2c_setBuffer@buffer:
   533                           	opt stack 0
   534  000046                     i2c1_driver_setBusCollisionISR@f:
   535                           	opt stack 0
   536  000046                     i2c1_driver_setI2cISR@f:
   537                           	opt stack 0
   538                           
   539                           ; 3 bytes @ 0x15
   540  000046                     	ds	1
   541  000047                     _do_I2C_TX$1023:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x16
   545  000047                     	ds	1
   546  000048                     i2c_setBuffer@bufferSize:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x17
   550  000048                     	ds	1
   551  000049                     
   552                           ; 1 bytes @ 0x18
   553  000049                     	ds	1
   554  00004A                     tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec1	equ	0xFE5
   561                           fsr1l	equ	0xFE1
   562                           
   563                           ; 1 bytes @ 0x19
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 48 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  rec             1   18[BANK0 ] unsigned char 
   574 ;;  data            2   15[BANK0 ] unsigned char [2]
   575 ;;  addr            1   19[BANK0 ] unsigned char 
   576 ;;  rec             1   17[BANK0 ] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   587 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   589 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   590 ;;Total ram usage:        5 bytes
   591 ;; Hardware stack levels required when called:   15
   592 ;; This function calls:
   593 ;;		_SYSTEM_Initialize
   594 ;;		_i2c_readNBytes
   595 ;;		_i2c_writeNBytes
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text0
   602  000194                     __ptext0:
   603                           	opt stack 0
   604  000194                     _main:
   605                           	opt stack 16
   606                           
   607                           ;main.c: 51: SYSTEM_Initialize();
   608                           
   609                           ;incstack = 0
   610  000194  EC31  F006         	call	_SYSTEM_Initialize	;wreg free
   611                           
   612                           ;main.c: 58: (INTCONbits.GIE = 1);
   613  000198  8EF2               	bsf	intcon,7,c	;volatile
   614                           
   615                           ;main.c: 64: (INTCONbits.PEIE = 1);
   616  00019A  8CF2               	bsf	intcon,6,c	;volatile
   617                           
   618                           ;main.c: 70: uint8_t data[2];
   619                           ;main.c: 71: uint8_t addr = 0x20;
   620  00019C  0E20               	movlw	32
   621  00019E  0100               	movlb	0	; () banked
   622  0001A0  6FA3               	movwf	main@addr& (0+255),b
   623                           
   624                           ; BSR set to: 0
   625                           ;main.c: 74: data[0] = 0x00;
   626  0001A2  0E00               	movlw	0
   627  0001A4  6F9F               	movwf	main@data& (0+255),b
   628                           
   629                           ; BSR set to: 0
   630                           ;main.c: 75: data[1] = 0x00;
   631  0001A6  0E00               	movlw	0
   632  0001A8  6FA0               	movwf	(main@data+1)& (0+255),b
   633                           
   634                           ; BSR set to: 0
   635                           ;main.c: 76: i2c_writeNBytes(addr, data, 2);
   636  0001AA  0E9F               	movlw	low main@data
   637  0001AC  6F9A               	movwf	i2c_writeNBytes@data& (0+255),b
   638  0001AE  0E00               	movlw	high main@data
   639  0001B0  6F9B               	movwf	(i2c_writeNBytes@data+1)& (0+255),b
   640  0001B2  0E00               	movlw	0
   641  0001B4  6F9D               	movwf	(i2c_writeNBytes@len+1)& (0+255),b
   642  0001B6  0E02               	movlw	2
   643  0001B8  6F9C               	movwf	i2c_writeNBytes@len& (0+255),b
   644  0001BA  51A3               	movf	main@addr& (0+255),w,b
   645  0001BC  EC32  F003         	call	_i2c_writeNBytes
   646                           
   647                           ;main.c: 81: data[0]=0x13;
   648  0001C0  0E13               	movlw	19
   649  0001C2  0100               	movlb	0	; () banked
   650  0001C4  6F9F               	movwf	main@data& (0+255),b
   651                           
   652                           ; BSR set to: 0
   653                           ;main.c: 82: i2c_writeNBytes(addr, &data[0], 1);
   654  0001C6  0E9F               	movlw	low main@data
   655  0001C8  6F9A               	movwf	i2c_writeNBytes@data& (0+255),b
   656  0001CA  0E00               	movlw	high main@data
   657  0001CC  6F9B               	movwf	(i2c_writeNBytes@data+1)& (0+255),b
   658  0001CE  0E00               	movlw	0
   659  0001D0  6F9D               	movwf	(i2c_writeNBytes@len+1)& (0+255),b
   660  0001D2  0E01               	movlw	1
   661  0001D4  6F9C               	movwf	i2c_writeNBytes@len& (0+255),b
   662  0001D6  51A3               	movf	main@addr& (0+255),w,b
   663  0001D8  EC32  F003         	call	_i2c_writeNBytes
   664                           
   665                           ;main.c: 83: uint8_t rec;
   666                           ;main.c: 84: i2c_readNBytes(addr, &rec, 1);
   667  0001DC  0EA1               	movlw	low main@rec
   668  0001DE  0100               	movlb	0	; () banked
   669  0001E0  6F92               	movwf	i2c_readNBytes@data& (0+255),b
   670  0001E2  0E00               	movlw	high main@rec
   671  0001E4  6F93               	movwf	(i2c_readNBytes@data+1)& (0+255),b
   672  0001E6  0E00               	movlw	0
   673  0001E8  6F95               	movwf	(i2c_readNBytes@len+1)& (0+255),b
   674  0001EA  0E01               	movlw	1
   675  0001EC  6F94               	movwf	i2c_readNBytes@len& (0+255),b
   676  0001EE  51A3               	movf	main@addr& (0+255),w,b
   677  0001F0  ECBA  F004         	call	_i2c_readNBytes
   678                           
   679                           ;main.c: 86: if(rec != 0b11111110)
   680  0001F4  0EFE               	movlw	254
   681  0001F6  0100               	movlb	0	; () banked
   682  0001F8  19A1               	xorwf	main@rec& (0+255),w,b
   683  0001FA  A4D8               	btfss	status,2,c
   684  0001FC                     
   685                           ; BSR set to: 0
   686                           
   687                           ;main.c: 87: do { LATAbits.LATA2 = 0; } while(0);
   688  0001FC  9483               	bcf	3971,2,c	;volatile
   689  0001FE                     
   690                           ; BSR set to: 0
   691                           ;main.c: 96: {
   692                           ;main.c: 98: data[0]=0x13;
   693                           
   694                           ; BSR set to: 0
   695                           
   696                           ;main.c: 95: while (1)
   697                           
   698                           ; BSR set to: 0
   699                           
   700                           ; BSR set to: 0
   701  0001FE  0E13               	movlw	19
   702  000200  6F9F               	movwf	main@data& (0+255),b
   703                           
   704                           ; BSR set to: 0
   705                           ;main.c: 99: i2c_writeNBytes(addr, &data[0], 1);
   706  000202  0E9F               	movlw	low main@data
   707  000204  6F9A               	movwf	i2c_writeNBytes@data& (0+255),b
   708  000206  0E00               	movlw	high main@data
   709  000208  6F9B               	movwf	(i2c_writeNBytes@data+1)& (0+255),b
   710  00020A  0E00               	movlw	0
   711  00020C  6F9D               	movwf	(i2c_writeNBytes@len+1)& (0+255),b
   712  00020E  0E01               	movlw	1
   713  000210  6F9C               	movwf	i2c_writeNBytes@len& (0+255),b
   714  000212  51A3               	movf	main@addr& (0+255),w,b
   715  000214  EC32  F003         	call	_i2c_writeNBytes
   716                           
   717                           ;main.c: 100: uint8_t rec;
   718                           ;main.c: 101: i2c_readNBytes(addr, &rec, 1);
   719  000218  0EA2               	movlw	low main@rec_1229
   720  00021A  0100               	movlb	0	; () banked
   721  00021C  6F92               	movwf	i2c_readNBytes@data& (0+255),b
   722  00021E  0E00               	movlw	high main@rec_1229
   723  000220  6F93               	movwf	(i2c_readNBytes@data+1)& (0+255),b
   724  000222  0E00               	movlw	0
   725  000224  6F95               	movwf	(i2c_readNBytes@len+1)& (0+255),b
   726  000226  0E01               	movlw	1
   727  000228  6F94               	movwf	i2c_readNBytes@len& (0+255),b
   728  00022A  51A3               	movf	main@addr& (0+255),w,b
   729  00022C  ECBA  F004         	call	_i2c_readNBytes
   730                           
   731                           ;main.c: 103: if(rec != 0b11111110)
   732  000230  0EFE               	movlw	254
   733  000232  0100               	movlb	0	; () banked
   734  000234  19A2               	xorwf	main@rec_1229& (0+255),w,b
   735  000236  A4D8               	btfss	status,2,c
   736  000238  D7E1               	goto	L5
   737                           
   738                           ; BSR set to: 0
   739                           
   740                           ; BSR set to: 0
   741                           ;main.c: 105: else
   742                           ;main.c: 106: do { LATAbits.LATA2 = 1; } while(0);
   743                           
   744                           ; BSR set to: 0
   745                           
   746                           ; BSR set to: 0
   747                           
   748                           ;main.c: 104: do { LATAbits.LATA2 = 0; } while(0);
   749  00023A  8483               	bsf	3971,2,c	;volatile
   750                           
   751                           ; BSR set to: 0
   752                           
   753                           ; BSR set to: 0
   754                           
   755                           ; BSR set to: 0
   756  00023C  D7E0               	goto	l614
   757  00023E                     __end_of_main:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           intcon	equ	0xFF2
   764                           postinc0	equ	0xFEE
   765                           wreg	equ	0xFE8
   766                           postdec1	equ	0xFE5
   767                           fsr1l	equ	0xFE1
   768                           status	equ	0xFD8
   769                           
   770 ;; *************** function _i2c_writeNBytes *****************
   771 ;; Defined at:
   772 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  address         1    wreg     unsigned char 
   775 ;;  data            2   10[BANK0 ] PTR void 
   776 ;;		 -> main@data(2), 
   777 ;;  len             2   12[BANK0 ] unsigned int 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  address         1   14[BANK0 ] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   789 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   793 ;;Total ram usage:        5 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:   14
   796 ;; This function calls:
   797 ;;		_i2c_close
   798 ;;		_i2c_masterWrite
   799 ;;		_i2c_open
   800 ;;		_i2c_setAddressNACKCallback
   801 ;;		_i2c_setBuffer
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text1
   808  000664                     __ptext1:
   809                           	opt stack 0
   810  000664                     _i2c_writeNBytes:
   811                           	opt stack 16
   812                           
   813                           ; BSR set to: 0
   814                           ;incstack = 0
   815                           ;i2c_writeNBytes@address stored from wreg
   816  000664  0100               	movlb	0	; () banked
   817  000666  6F9E               	movwf	i2c_writeNBytes@address& (0+255),b
   818  000668                     
   819                           ;i2c_simple_master.c: 50: while(!i2c_open(address));
   820  000668  0100               	movlb	0	; () banked
   821  00066A  519E               	movf	i2c_writeNBytes@address& (0+255),w,b
   822  00066C  EC70  F000         	call	_i2c_open
   823  000670  0900               	iorlw	0
   824  000672  B4D8               	btfsc	status,2,c
   825  000674  D7F9               	goto	l3734
   826                           
   827                           ;i2c_simple_master.c: 51: i2c_setBuffer(data,len);
   828  000676  C09A  F046         	movff	i2c_writeNBytes@data,i2c_setBuffer@buffer
   829  00067A  C09B  F047         	movff	i2c_writeNBytes@data+1,i2c_setBuffer@buffer+1
   830  00067E  C09C  F048         	movff	i2c_writeNBytes@len,i2c_setBuffer@bufferSize
   831  000682  C09D  F049         	movff	i2c_writeNBytes@len+1,i2c_setBuffer@bufferSize+1
   832  000686  ECBA  F005         	call	_i2c_setBuffer	;wreg free
   833                           
   834                           ;i2c_simple_master.c: 52: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
   835  00068A  0E3C               	movlw	low _i2c_restartWrite
   836  00068C  0100               	movlb	0	; () banked
   837  00068E  6F95               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
   838  000690  0E0D               	movlw	high _i2c_restartWrite
   839  000692  6F96               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
   840  000694  0E00               	movlw	low (_i2c_restartWrite shr (0+16))
   841  000696  6F97               	movwf	(i2c_setAddressNACKCallback@cb+2)& (0+255),b
   842  000698  0E00               	movlw	0
   843  00069A  6F98               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
   844  00069C  0E00               	movlw	0
   845  00069E  6F99               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
   846  0006A0  EC68  F005         	call	_i2c_setAddressNACKCallback	;wreg free
   847                           
   848                           ;i2c_simple_master.c: 53: i2c_masterWrite();
   849  0006A4  ECB7  F006         	call	_i2c_masterWrite	;wreg free
   850  0006A8  EC84  F005         	call	_i2c_close	;wreg free
   851  0006AC  06E8               	decf	wreg,f,c
   852  0006AE  A4D8               	btfss	status,2,c
   853  0006B0  0012               	return	
   854  0006B2  D7FA               	goto	l531
   855  0006B4                     __end_of_i2c_writeNBytes:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           intcon	equ	0xFF2
   862                           postinc0	equ	0xFEE
   863                           wreg	equ	0xFE8
   864                           postdec1	equ	0xFE5
   865                           fsr1l	equ	0xFE1
   866                           status	equ	0xFD8
   867                           
   868 ;; *************** function _i2c_setAddressNACKCallback *****************
   869 ;; Defined at:
   870 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  cb              3    5[BANK0 ] PTR FTN(PTR void ,)enum 
   873 ;;		 -> i2c_restartWrite(1), 
   874 ;;  p               2    8[BANK0 ] PTR void 
   875 ;;		 -> NULL(0), 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   887 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   890 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   891 ;;Total ram usage:        5 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    7
   894 ;; This function calls:
   895 ;;		_setCallBack
   896 ;; This function is called by:
   897 ;;		_i2c_writeNBytes
   898 ;;		_i2c_write1ByteRegister
   899 ;;		_i2c_read1ByteRegister
   900 ;;		_i2c_read2ByteRegister
   901 ;;		_i2c_write2ByteRegister
   902 ;;		_i2c_readDataBlock
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text2
   907  000AD0                     __ptext2:
   908                           	opt stack 0
   909  000AD0                     _i2c_setAddressNACKCallback:
   910                           	opt stack 22
   911                           
   912                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
   913                           
   914                           ;incstack = 0
   915  000AD0  C095  F090         	movff	i2c_setAddressNACKCallback@cb,setCallBack@cb
   916  000AD4  C096  F091         	movff	i2c_setAddressNACKCallback@cb+1,setCallBack@cb+1
   917  000AD8  C097  F092         	movff	i2c_setAddressNACKCallback@cb+2,setCallBack@cb+2
   918  000ADC  C098  F093         	movff	i2c_setAddressNACKCallback@p,setCallBack@p
   919  000AE0  C099  F094         	movff	i2c_setAddressNACKCallback@p+1,setCallBack@p+1
   920  000AE4  0E02               	movlw	2
   921  000AE6  ECAE  F001         	call	_setCallBack
   922  000AEA  0012               	return		;funcret
   923  000AEC                     __end_of_i2c_setAddressNACKCallback:
   924                           	opt stack 0
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           intcon	equ	0xFF2
   930                           postinc0	equ	0xFEE
   931                           wreg	equ	0xFE8
   932                           postdec1	equ	0xFE5
   933                           fsr1l	equ	0xFE1
   934                           status	equ	0xFD8
   935                           
   936 ;; *************** function _i2c_masterWrite *****************
   937 ;; Defined at:
   938 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      enum E11785
   945 ;; Registers used:
   946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:   13
   959 ;; This function calls:
   960 ;;		_i2c_masterOperation
   961 ;; This function is called by:
   962 ;;		_i2c_writeNBytes
   963 ;;		_i2c_write1ByteRegister
   964 ;;		_i2c_read1ByteRegister
   965 ;;		_i2c_read2ByteRegister
   966 ;;		_i2c_write2ByteRegister
   967 ;;		_i2c_readDataBlock
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text3
   972  000D6E                     __ptext3:
   973                           	opt stack 0
   974  000D6E                     _i2c_masterWrite:
   975                           	opt stack 16
   976                           
   977                           ;i2c_master.c: 224: return i2c_masterOperation(0);
   978                           ;	Return value of _i2c_masterWrite is never used
   979                           
   980                           ;incstack = 0
   981  000D6E  0E00               	movlw	0
   982  000D70  ECD5  F004         	call	_i2c_masterOperation
   983  000D74  0012               	return	
   984  000D76                     __end_of_i2c_masterWrite:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           postdec1	equ	0xFE5
   994                           fsr1l	equ	0xFE1
   995                           status	equ	0xFD8
   996                           
   997 ;; *************** function _i2c_readNBytes *****************
   998 ;; Defined at:
   999 ;;		line 156 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  address         1    wreg     unsigned char 
  1002 ;;  data            2    2[BANK0 ] PTR void 
  1003 ;;		 -> main@rec_1229(1), main@rec(1), 
  1004 ;;  len             2    4[BANK0 ] unsigned int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  address         1    6[BANK0 ] unsigned char 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1016 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1017 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1019 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1020 ;;Total ram usage:        5 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:   14
  1023 ;; This function calls:
  1024 ;;		_i2c_close
  1025 ;;		_i2c_masterRead
  1026 ;;		_i2c_open
  1027 ;;		_i2c_setBuffer
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text4
  1034  000974                     __ptext4:
  1035                           	opt stack 0
  1036  000974                     _i2c_readNBytes:
  1037                           	opt stack 16
  1038                           
  1039                           ;incstack = 0
  1040                           ;i2c_readNBytes@address stored from wreg
  1041  000974  0100               	movlb	0	; () banked
  1042  000976  6F96               	movwf	i2c_readNBytes@address& (0+255),b
  1043  000978                     
  1044                           ;i2c_simple_master.c: 158: while(!i2c_open(address));
  1045  000978  0100               	movlb	0	; () banked
  1046  00097A  5196               	movf	i2c_readNBytes@address& (0+255),w,b
  1047  00097C  EC70  F000         	call	_i2c_open
  1048  000980  0900               	iorlw	0
  1049  000982  B4D8               	btfsc	status,2,c
  1050  000984  D7F9               	goto	l3746
  1051                           
  1052                           ;i2c_simple_master.c: 159: i2c_setBuffer(data,len);
  1053  000986  C092  F046         	movff	i2c_readNBytes@data,i2c_setBuffer@buffer
  1054  00098A  C093  F047         	movff	i2c_readNBytes@data+1,i2c_setBuffer@buffer+1
  1055  00098E  C094  F048         	movff	i2c_readNBytes@len,i2c_setBuffer@bufferSize
  1056  000992  C095  F049         	movff	i2c_readNBytes@len+1,i2c_setBuffer@bufferSize+1
  1057  000996  ECBA  F005         	call	_i2c_setBuffer	;wreg free
  1058                           
  1059                           ;i2c_simple_master.c: 160: i2c_masterRead();
  1060  00099A  ECBB  F006         	call	_i2c_masterRead	;wreg free
  1061  00099E  EC84  F005         	call	_i2c_close	;wreg free
  1062  0009A2  06E8               	decf	wreg,f,c
  1063  0009A4  A4D8               	btfss	status,2,c
  1064  0009A6  0012               	return	
  1065  0009A8  D7FA               	goto	l591
  1066  0009AA                     __end_of_i2c_readNBytes:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           intcon	equ	0xFF2
  1073                           postinc0	equ	0xFEE
  1074                           wreg	equ	0xFE8
  1075                           postdec1	equ	0xFE5
  1076                           fsr1l	equ	0xFE1
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _i2c_open *****************
  1080 ;; Defined at:
  1081 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  address         1    wreg     unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  address         1    0[BANK0 ] unsigned char 
  1086 ;;  ret             1    1[BANK0 ] enum E11785
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      enum E11785
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1099 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1100 ;;Total ram usage:        2 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    7
  1103 ;; This function calls:
  1104 ;;		_i2c1_driver_open
  1105 ;;		_i2c1_driver_setBusCollisionISR
  1106 ;;		_i2c1_driver_setI2cISR
  1107 ;;		_mssp1_clearIRQ
  1108 ;; This function is called by:
  1109 ;;		_i2c_writeNBytes
  1110 ;;		_i2c_readNBytes
  1111 ;;		_i2c_write1ByteRegister
  1112 ;;		_i2c_read1ByteRegister
  1113 ;;		_i2c_read2ByteRegister
  1114 ;;		_i2c_write2ByteRegister
  1115 ;;		_i2c_readDataBlock
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119                           	psect	text5
  1120  0000E0                     __ptext5:
  1121                           	opt stack 0
  1122  0000E0                     _i2c_open:
  1123                           	opt stack 22
  1124                           
  1125                           ;incstack = 0
  1126                           ;i2c_open@address stored from wreg
  1127  0000E0  0100               	movlb	0	; () banked
  1128  0000E2  6F90               	movwf	i2c_open@address& (0+255),b
  1129                           
  1130                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
  1131  0000E4  0E01               	movlw	1
  1132  0000E6  0100               	movlb	0	; () banked
  1133  0000E8  6F91               	movwf	i2c_open@ret& (0+255),b
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;i2c_master.c: 120: if(!i2c_status.inUse)
  1137  0000EA  B201               	btfsc	_i2c_status,1,c
  1138  0000EC  D051               	goto	l348
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;i2c_master.c: 121: {
  1142                           ;i2c_master.c: 122: i2c_status.address = address;
  1143  0000EE  C090  F002         	movff	i2c_open@address,_i2c_status+1
  1144                           
  1145                           ; BSR set to: 0
  1146                           ;i2c_master.c: 123: i2c_status.busy = 0;
  1147  0000F2  9001               	bcf	_i2c_status,0,c
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;i2c_master.c: 124: i2c_status.inUse = 1;
  1151  0000F4  8201               	bsf	_i2c_status,1,c
  1152                           
  1153                           ; BSR set to: 0
  1154                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
  1155  0000F6  9601               	bcf	_i2c_status,3,c
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
  1159  0000F8  0E0E               	movlw	14
  1160  0000FA  6E0B               	movwf	_i2c_status+10,c
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
  1164  0000FC  0E01               	movlw	1
  1165  0000FE  6E0A               	movwf	_i2c_status+9,c
  1166  000100  0EF4               	movlw	244
  1167  000102  6E09               	movwf	_i2c_status+8,c
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
  1171  000104  8401               	bsf	_i2c_status,2,c
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
  1175  000106  0E50               	movlw	low _returnStop
  1176  000108  6E0D               	movwf	_i2c_status+12,c
  1177  00010A  0E0D               	movlw	high _returnStop
  1178  00010C  6E0E               	movwf	_i2c_status+13,c
  1179  00010E  0E00               	movlw	low (_returnStop shr (0+16))
  1180  000110  6E0F               	movwf	_i2c_status+14,c
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
  1184  000112  0E00               	movlw	0
  1185  000114  6E1F               	movwf	_i2c_status+30,c
  1186  000116  0E00               	movlw	0
  1187  000118  6E20               	movwf	_i2c_status+31,c
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
  1191  00011A  0E50               	movlw	low _returnStop
  1192  00011C  6E10               	movwf	_i2c_status+15,c
  1193  00011E  0E0D               	movlw	high _returnStop
  1194  000120  6E11               	movwf	_i2c_status+16,c
  1195  000122  0E00               	movlw	low (_returnStop shr (0+16))
  1196  000124  6E12               	movwf	_i2c_status+17,c
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
  1200  000126  0E00               	movlw	0
  1201  000128  6E21               	movwf	_i2c_status+32,c
  1202  00012A  0E00               	movlw	0
  1203  00012C  6E22               	movwf	_i2c_status+33,c
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
  1207  00012E  0E50               	movlw	low _returnStop
  1208  000130  6E13               	movwf	_i2c_status+18,c
  1209  000132  0E0D               	movlw	high _returnStop
  1210  000134  6E14               	movwf	_i2c_status+19,c
  1211  000136  0E00               	movlw	low (_returnStop shr (0+16))
  1212  000138  6E15               	movwf	_i2c_status+20,c
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
  1216  00013A  0E00               	movlw	0
  1217  00013C  6E23               	movwf	_i2c_status+34,c
  1218  00013E  0E00               	movlw	0
  1219  000140  6E24               	movwf	_i2c_status+35,c
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
  1223  000142  0E50               	movlw	low _returnStop
  1224  000144  6E16               	movwf	_i2c_status+21,c
  1225  000146  0E0D               	movlw	high _returnStop
  1226  000148  6E17               	movwf	_i2c_status+22,c
  1227  00014A  0E00               	movlw	low (_returnStop shr (0+16))
  1228  00014C  6E18               	movwf	_i2c_status+23,c
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
  1232  00014E  0E00               	movlw	0
  1233  000150  6E25               	movwf	_i2c_status+36,c
  1234  000152  0E00               	movlw	0
  1235  000154  6E26               	movwf	_i2c_status+37,c
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
  1239  000156  0E46               	movlw	low _returnReset
  1240  000158  6E19               	movwf	_i2c_status+24,c
  1241  00015A  0E0D               	movlw	high _returnReset
  1242  00015C  6E1A               	movwf	_i2c_status+25,c
  1243  00015E  0E00               	movlw	low (_returnReset shr (0+16))
  1244  000160  6E1B               	movwf	_i2c_status+26,c
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
  1248  000162  0E00               	movlw	0
  1249  000164  6E27               	movwf	_i2c_status+38,c
  1250  000166  0E00               	movlw	0
  1251  000168  6E28               	movwf	_i2c_status+39,c
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;i2c_master.c: 142: i2c1_driver_open();
  1255  00016A  ECDE  F005         	call	_i2c1_driver_open	;wreg free
  1256                           
  1257                           ;i2c_master.c: 143: mssp1_clearIRQ();
  1258  00016E  ECEF  F006         	call	_mssp1_clearIRQ	;wreg free
  1259                           
  1260                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
  1261  000172  0EFC               	movlw	low _i2c_busCollisionISR
  1262  000174  6E46               	movwf	i2c1_driver_setBusCollisionISR@f,c
  1263  000176  0E0D               	movlw	high _i2c_busCollisionISR
  1264  000178  6E47               	movwf	i2c1_driver_setBusCollisionISR@f+1,c
  1265  00017A  EC51  F006         	call	_i2c1_driver_setBusCollisionISR	;wreg free
  1266                           
  1267                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
  1268  00017E  0E4E               	movlw	low _i2c_ISR
  1269  000180  6E46               	movwf	i2c1_driver_setI2cISR@f,c
  1270  000182  0E07               	movlw	high _i2c_ISR
  1271  000184  6E47               	movwf	i2c1_driver_setI2cISR@f+1,c
  1272  000186  EC4A  F006         	call	_i2c1_driver_setI2cISR	;wreg free
  1273                           
  1274                           ;i2c_master.c: 151: ret = I2C_NOERR;
  1275  00018A  0E00               	movlw	0
  1276  00018C  0100               	movlb	0	; () banked
  1277  00018E  6F91               	movwf	i2c_open@ret& (0+255),b
  1278  000190                     l348:
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;i2c_master.c: 152: }
  1282                           ;i2c_master.c: 153: return ret;
  1283                           
  1284                           ; BSR set to: 0
  1285  000190  5191               	movf	i2c_open@ret& (0+255),w,b
  1286  000192  0012               	return	
  1287  000194                     __end_of_i2c_open:
  1288                           	opt stack 0
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           intcon	equ	0xFF2
  1294                           postinc0	equ	0xFEE
  1295                           wreg	equ	0xFE8
  1296                           postdec1	equ	0xFE5
  1297                           fsr1l	equ	0xFE1
  1298                           status	equ	0xFD8
  1299                           
  1300 ;; *************** function _i2c1_driver_setI2cISR *****************
  1301 ;; Defined at:
  1302 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  f               3   21[COMRAM] PTR void 
  1305 ;;		 -> i2c_ISR(1), 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1317 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1320 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1321 ;;Total ram usage:        3 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    6
  1324 ;; This function calls:
  1325 ;;		Nothing
  1326 ;; This function is called by:
  1327 ;;		_i2c_open
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text6
  1332  000C94                     __ptext6:
  1333                           	opt stack 0
  1334  000C94                     _i2c1_driver_setI2cISR:
  1335                           	opt stack 22
  1336                           
  1337                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
  1338                           
  1339                           ; BSR set to: 0
  1340                           ;incstack = 0
  1341  000C94  C046  F02B         	movff	i2c1_driver_setI2cISR@f,_i2c1_driver_i2cISR
  1342  000C98  C047  F02C         	movff	i2c1_driver_setI2cISR@f+1,_i2c1_driver_i2cISR+1
  1343  000C9C  C048  F02D         	movff	i2c1_driver_setI2cISR@f+2,_i2c1_driver_i2cISR+2
  1344  000CA0  0012               	return		;funcret
  1345  000CA2                     __end_of_i2c1_driver_setI2cISR:
  1346                           	opt stack 0
  1347                           tblptru	equ	0xFF8
  1348                           tblptrh	equ	0xFF7
  1349                           tblptrl	equ	0xFF6
  1350                           tablat	equ	0xFF5
  1351                           intcon	equ	0xFF2
  1352                           postinc0	equ	0xFEE
  1353                           wreg	equ	0xFE8
  1354                           postdec1	equ	0xFE5
  1355                           fsr1l	equ	0xFE1
  1356                           status	equ	0xFD8
  1357                           
  1358 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
  1359 ;; Defined at:
  1360 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  f               3   21[COMRAM] PTR void 
  1363 ;;		 -> i2c_busCollisionISR(1), 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1375 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1378 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1379 ;;Total ram usage:        3 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    6
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_i2c_open
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text7
  1390  000CA2                     __ptext7:
  1391                           	opt stack 0
  1392  000CA2                     _i2c1_driver_setBusCollisionISR:
  1393                           	opt stack 22
  1394                           
  1395                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
  1396                           
  1397                           ;incstack = 0
  1398  000CA2  C046  F02E         	movff	i2c1_driver_setBusCollisionISR@f,_i2c1_driver_busCollisionISR
  1399  000CA6  C047  F02F         	movff	i2c1_driver_setBusCollisionISR@f+1,_i2c1_driver_busCollisionISR+1
  1400  000CAA  C048  F030         	movff	i2c1_driver_setBusCollisionISR@f+2,_i2c1_driver_busCollisionISR+2
  1401  000CAE  0012               	return		;funcret
  1402  000CB0                     __end_of_i2c1_driver_setBusCollisionISR:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           intcon	equ	0xFF2
  1409                           postinc0	equ	0xFEE
  1410                           wreg	equ	0xFE8
  1411                           postdec1	equ	0xFE5
  1412                           fsr1l	equ	0xFE1
  1413                           status	equ	0xFD8
  1414                           
  1415 ;; *************** function _i2c1_driver_open *****************
  1416 ;; Defined at:
  1417 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;		None               void
  1424 ;; Registers used:
  1425 ;;		wreg, status,2
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1435 ;;Total ram usage:        0 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    6
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_i2c_open
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text8
  1446  000BBC                     __ptext8:
  1447                           	opt stack 0
  1448  000BBC                     _i2c1_driver_open:
  1449                           	opt stack 22
  1450                           
  1451                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  1452                           
  1453                           ;incstack = 0
  1454  000BBC  BA96               	btfsc	3990,5,c	;volatile
  1455  000BBE  0012               	return	
  1456                           
  1457                           ;i2c1_driver.c: 86: {
  1458                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
  1459  000BC0  0E00               	movlw	0
  1460  000BC2  6E95               	movwf	3989,c	;volatile
  1461                           
  1462                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  1463  000BC4  0E28               	movlw	40
  1464  000BC6  6E96               	movwf	3990,c	;volatile
  1465                           
  1466                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  1467  000BC8  0E00               	movlw	0
  1468  000BCA  6E97               	movwf	3991,c	;volatile
  1469                           
  1470                           ;i2c1_driver.c: 90: SSP1ADD = 0x4;
  1471  000BCC  0E04               	movlw	4
  1472  000BCE  6E93               	movwf	3987,c	;volatile
  1473                           
  1474                           ;i2c1_driver.c: 93: else
  1475                           ;i2c1_driver.c: 94: return 0;
  1476                           ;	Return value of _i2c1_driver_open is never used
  1477                           
  1478                           ;i2c1_driver.c: 92: }
  1479                           
  1480                           ;i2c1_driver.c: 91: return 1;
  1481                           ;	Return value of _i2c1_driver_open is never used
  1482  000BD0  0012               	return	
  1483  000BD2                     __end_of_i2c1_driver_open:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           intcon	equ	0xFF2
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           postdec1	equ	0xFE5
  1493                           fsr1l	equ	0xFE1
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _i2c_masterRead *****************
  1497 ;; Defined at:
  1498 ;;		line 217 in file "mcc_generated_files/drivers/i2c_master.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      enum E11785
  1505 ;; Registers used:
  1506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:   13
  1519 ;; This function calls:
  1520 ;;		_i2c_masterOperation
  1521 ;; This function is called by:
  1522 ;;		_i2c_readNBytes
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text9
  1527  000D76                     __ptext9:
  1528                           	opt stack 0
  1529  000D76                     _i2c_masterRead:
  1530                           	opt stack 16
  1531                           
  1532                           ;i2c_master.c: 219: return i2c_masterOperation(1);
  1533                           ;	Return value of _i2c_masterRead is never used
  1534                           
  1535                           ;incstack = 0
  1536  000D76  0E01               	movlw	1
  1537  000D78  ECD5  F004         	call	_i2c_masterOperation
  1538  000D7C  0012               	return	
  1539  000D7E                     __end_of_i2c_masterRead:
  1540                           	opt stack 0
  1541                           tblptru	equ	0xFF8
  1542                           tblptrh	equ	0xFF7
  1543                           tblptrl	equ	0xFF6
  1544                           tablat	equ	0xFF5
  1545                           intcon	equ	0xFF2
  1546                           postinc0	equ	0xFEE
  1547                           wreg	equ	0xFE8
  1548                           postdec1	equ	0xFE5
  1549                           fsr1l	equ	0xFE1
  1550                           status	equ	0xFD8
  1551                           
  1552 ;; *************** function _i2c_masterOperation *****************
  1553 ;; Defined at:
  1554 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  read            1    wreg     unsigned char 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  read            1    0[BANK0 ] unsigned char 
  1559 ;;  ret             1    1[BANK0 ] enum E11785
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      enum E11785
  1562 ;; Registers used:
  1563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1570 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1572 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1573 ;;Total ram usage:        2 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:   12
  1576 ;; This function calls:
  1577 ;;		_i2c1_driver_start
  1578 ;;		_i2c_poller
  1579 ;;		_mssp1_IRQisEnabled
  1580 ;; This function is called by:
  1581 ;;		_i2c_masterRead
  1582 ;;		_i2c_masterWrite
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text10
  1587  0009AA                     __ptext10:
  1588                           	opt stack 0
  1589  0009AA                     _i2c_masterOperation:
  1590                           	opt stack 16
  1591                           
  1592                           ;incstack = 0
  1593                           ;i2c_masterOperation@read stored from wreg
  1594  0009AA  0100               	movlb	0	; () banked
  1595  0009AC  6F90               	movwf	i2c_masterOperation@read& (0+255),b
  1596                           
  1597                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
  1598  0009AE  0E01               	movlw	1
  1599  0009B0  0100               	movlb	0	; () banked
  1600  0009B2  6F91               	movwf	i2c_masterOperation@ret& (0+255),b
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;i2c_master.c: 196: if(!i2c_status.busy)
  1604  0009B4  B001               	btfsc	_i2c_status,0,c
  1605  0009B6  D011               	goto	l369
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;i2c_master.c: 197: {
  1609                           ;i2c_master.c: 198: i2c_status.busy = 1;
  1610  0009B8  8001               	bsf	_i2c_status,0,c
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;i2c_master.c: 199: ret = I2C_NOERR;
  1614  0009BA  0E00               	movlw	0
  1615  0009BC  6F91               	movwf	i2c_masterOperation@ret& (0+255),b
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;i2c_master.c: 201: if(read)
  1619  0009BE  5190               	movf	i2c_masterOperation@read& (0+255),w,b
  1620  0009C0  B4D8               	btfsc	status,2,c
  1621  0009C2  D002               	goto	l367
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;i2c_master.c: 202: {
  1625                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
  1626  0009C4  0E01               	movlw	1
  1627  0009C6  D001               	goto	L1
  1628  0009C8                     l367:
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;i2c_master.c: 205: else
  1632                           ;i2c_master.c: 206: {
  1633                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
  1634                           
  1635                           ; BSR set to: 0
  1636  0009C8  0E02               	movlw	2
  1637  0009CA                     L1:
  1638  0009CA  6E0B               	movwf	_i2c_status+10,c
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;i2c_master.c: 208: }
  1642                           ;i2c_master.c: 209: i2c1_driver_start();
  1643                           
  1644                           ; BSR set to: 0
  1645  0009CC  EC0C  F007         	call	_i2c1_driver_start	;wreg free
  1646                           
  1647                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
  1648  0009D0  EC28  F006         	call	_mssp1_IRQisEnabled	;wreg free
  1649  0009D4  A0D8               	btfss	status,0,c
  1650                           
  1651                           ;i2c_master.c: 212: i2c_poller();
  1652  0009D6  ECAE  F005         	call	_i2c_poller	;wreg free
  1653  0009DA                     l369:
  1654                           
  1655                           ;i2c_master.c: 213: }
  1656                           ;i2c_master.c: 214: return ret;
  1657  0009DA  0100               	movlb	0	; () banked
  1658  0009DC  5191               	movf	i2c_masterOperation@ret& (0+255),w,b
  1659  0009DE  0012               	return	
  1660  0009E0                     __end_of_i2c_masterOperation:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           intcon	equ	0xFF2
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           postdec1	equ	0xFE5
  1670                           fsr1l	equ	0xFE1
  1671                           status	equ	0xFD8
  1672                           
  1673 ;; *************** function _mssp1_IRQisEnabled *****************
  1674 ;; Defined at:
  1675 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;		None               void
  1682 ;; Registers used:
  1683 ;;		wreg, status,0
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1693 ;;Total ram usage:        1 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    6
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_i2c_masterOperation
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text11
  1704  000C50                     __ptext11:
  1705                           	opt stack 0
  1706  000C50                     _mssp1_IRQisEnabled:
  1707                           	opt stack 21
  1708                           
  1709                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;incstack = 0
  1713  000C50  010E               	movlb	14	; () banked
  1714  000C52  A1C5               	btfss	197,0,b	;volatile
  1715  000C54  D003               	goto	u1350
  1716  000C56  6A46               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  1717  000C58  2A46               	incf	??_mssp1_IRQisEnabled& (0+255),f,c
  1718  000C5A  D001               	goto	u1358
  1719  000C5C                     u1350:
  1720  000C5C  6A46               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  1721  000C5E                     u1358:
  1722  000C5E  3046               	rrcf	??_mssp1_IRQisEnabled,w,c
  1723  000C60  0012               	return	
  1724  000C62                     __end_of_mssp1_IRQisEnabled:
  1725                           	opt stack 0
  1726                           tblptru	equ	0xFF8
  1727                           tblptrh	equ	0xFF7
  1728                           tblptrl	equ	0xFF6
  1729                           tablat	equ	0xFF5
  1730                           intcon	equ	0xFF2
  1731                           postinc0	equ	0xFEE
  1732                           wreg	equ	0xFE8
  1733                           postdec1	equ	0xFE5
  1734                           fsr1l	equ	0xFE1
  1735                           status	equ	0xFD8
  1736                           
  1737 ;; *************** function _i2c_poller *****************
  1738 ;; Defined at:
  1739 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:   11
  1760 ;; This function calls:
  1761 ;;		_i2c_ISR
  1762 ;;		_mssp1_waitForEvent
  1763 ;; This function is called by:
  1764 ;;		_i2c_masterOperation
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text12
  1769  000B5C                     __ptext12:
  1770                           	opt stack 0
  1771  000B5C                     _i2c_poller:
  1772                           	opt stack 16
  1773                           
  1774                           ;i2c_master.c: 232: while(i2c_status.busy)
  1775                           
  1776                           ;incstack = 0
  1777  000B5C  D008               	goto	l379
  1778  000B5E                     
  1779                           ;i2c_master.c: 233: {
  1780                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
  1781  000B5E  0E00               	movlw	0
  1782  000B60  6E46               	movwf	mssp1_waitForEvent@timeout,c
  1783  000B62  0E00               	movlw	0
  1784  000B64  6E47               	movwf	mssp1_waitForEvent@timeout+1,c
  1785  000B66  ECE9  F005         	call	_mssp1_waitForEvent	;wreg free
  1786                           
  1787                           ;i2c_master.c: 235: i2c_ISR();
  1788  000B6A  ECA7  F003         	call	_i2c_ISR	;wreg free
  1789  000B6E                     l379:
  1790  000B6E  A001               	btfss	_i2c_status,0,c
  1791  000B70  0012               	return	
  1792  000B72  D7F5               	goto	l380
  1793  000B74                     __end_of_i2c_poller:
  1794                           	opt stack 0
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           intcon	equ	0xFF2
  1800                           postinc0	equ	0xFEE
  1801                           wreg	equ	0xFE8
  1802                           postdec1	equ	0xFE5
  1803                           fsr1l	equ	0xFE1
  1804                           status	equ	0xFD8
  1805                           
  1806 ;; *************** function _mssp1_waitForEvent *****************
  1807 ;; Defined at:
  1808 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  timeout         2   21[COMRAM] PTR unsigned int 
  1811 ;;		 -> NULL(0), 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1827 ;;Total ram usage:        2 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    6
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_i2c_poller
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text13
  1838  000BD2                     __ptext13:
  1839                           	opt stack 0
  1840  000BD2                     _mssp1_waitForEvent:
  1841                           	opt stack 20
  1842                           
  1843                           ;i2c1_driver.c: 73: if(PIR3bits.SSP1IF == 0)
  1844                           
  1845                           ;incstack = 0
  1846  000BD2  010E               	movlb	14	; () banked
  1847  000BD4  B1CD               	btfsc	205,0,b	;volatile
  1848  000BD6  0012               	return	
  1849  000BD8                     u1290:
  1850                           
  1851                           ;i2c1_driver.c: 76: {
  1852                           ;i2c1_driver.c: 77: if(PIR3bits.SSP1IF) break;
  1853                           
  1854                           ;i2c1_driver.c: 74: {
  1855                           ;i2c1_driver.c: 75: while(1)
  1856  000BD8  010E               	movlb	14	; () banked
  1857  000BDA  B1CD               	btfsc	205,0,b	;volatile
  1858  000BDC  0012               	return	
  1859                           
  1860                           ; BSR set to: 14
  1861                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(2000000/4000000.0)));
  1862                           
  1863                           ; BSR set to: 14
  1864                           
  1865                           ; BSR set to: 14
  1866  000BDE  0E10               	movlw	16
  1867  000BE0                     u1807:
  1868  000BE0  2EE8               	decfsz	wreg,f,c
  1869  000BE2  D7FE               	bra	u1807
  1870  000BE4  D000               	nop2	
  1871  000BE6  D7F8               	goto	u1290
  1872  000BE8                     __end_of_mssp1_waitForEvent:
  1873                           	opt stack 0
  1874                           tblptru	equ	0xFF8
  1875                           tblptrh	equ	0xFF7
  1876                           tblptrl	equ	0xFF6
  1877                           tablat	equ	0xFF5
  1878                           intcon	equ	0xFF2
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1l	equ	0xFE1
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function _i2c_ISR *****************
  1886 ;; Defined at:
  1887 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:   10
  1908 ;; This function calls:
  1909 ;;		_do_I2C_DO_ACK
  1910 ;;		_do_I2C_DO_ADDRESS_NACK
  1911 ;;		_do_I2C_DO_NACK_RESTART
  1912 ;;		_do_I2C_DO_NACK_STOP
  1913 ;;		_do_I2C_IDLE
  1914 ;;		_do_I2C_RCEN
  1915 ;;		_do_I2C_RESET
  1916 ;;		_do_I2C_RX
  1917 ;;		_do_I2C_SEND_ADR_READ
  1918 ;;		_do_I2C_SEND_ADR_WRITE
  1919 ;;		_do_I2C_SEND_RESTART
  1920 ;;		_do_I2C_SEND_RESTART_READ
  1921 ;;		_do_I2C_SEND_RESTART_WRITE
  1922 ;;		_do_I2C_SEND_STOP
  1923 ;;		_do_I2C_TX
  1924 ;;		_do_I2C_TX_EMPTY
  1925 ;;		_i2c1_driver_isNACK
  1926 ;;		_mssp1_clearIRQ
  1927 ;; This function is called by:
  1928 ;;		_i2c_open
  1929 ;;		_i2c_poller
  1930 ;;		_INTERRUPT_InterruptManager
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text14
  1935  00074E                     __ptext14:
  1936                           	opt stack 0
  1937  00074E                     _i2c_ISR:
  1938                           	opt stack 0
  1939                           
  1940                           ;Skip over the trampoline to the duplicate function for level 2
  1941  00074E  B24A               	btfsc	btemp,1,c
  1942  000750  EF0F  F004         	goto	i2_i2c_ISR
  1943  000754                     _i2c_ISR$intlevel0:
  1944                           	opt stack 16
  1945                           
  1946                           ;i2c_master.c: 421: mssp1_clearIRQ();
  1947                           
  1948                           ;incstack = 0
  1949  000754  ECEF  F006         	call	_mssp1_clearIRQ	;wreg free
  1950                           
  1951                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  1952  000758  A601               	btfss	_i2c_status,3,c
  1953  00075A  D006               	goto	l469
  1954  00075C  ECF4  F005         	call	_i2c1_driver_isNACK	;wreg free
  1955  000760  A0D8               	btfss	status,0,c
  1956  000762  D002               	goto	l469
  1957                           
  1958                           ;i2c_master.c: 428: {
  1959                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  1960  000764  0E0F               	movlw	15
  1961  000766  6E0B               	movwf	_i2c_status+10,c
  1962  000768                     l469:
  1963                           
  1964                           ;i2c_master.c: 430: }
  1965                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  1966  000768  500B               	movf	_i2c_status+10,w,c
  1967  00076A  0D03               	mullw	3
  1968  00076C  0E60               	movlw	low _fsmStateTable
  1969  00076E  24F3               	addwf	prodl,w,c
  1970  000770  6ED9               	movwf	fsr2l,c
  1971  000772  0E00               	movlw	high _fsmStateTable
  1972  000774  20F4               	addwfc	prodh,w,c
  1973  000776  6EDA               	movwf	fsr2h,c
  1974  000778  D801               	call	u1338
  1975  00077A  D00A               	goto	u1339
  1976  00077C                     u1338:
  1977  00077C  0005               	push	
  1978  00077E  6EFA               	movwf	pclath,c
  1979  000780  50DE               	movf	postinc2,w,c
  1980  000782  6EFD               	movwf	tosl,c
  1981  000784  50DE               	movf	postinc2,w,c
  1982  000786  6EFE               	movwf	tosh,c
  1983  000788  50DE               	movf	postinc2,w,c
  1984  00078A  6EFF               	movwf	tosu,c
  1985  00078C  50FA               	movf	pclath,w,c
  1986  00078E  0012               	return		;indir
  1987  000790                     u1339:
  1988  000790  6E0B               	movwf	_i2c_status+10,c
  1989  000792  0012               	return		;funcret
  1990  000794                     __end_of_i2c_ISR:
  1991                           	opt stack 0
  1992                           tosu	equ	0xFFF
  1993                           tosh	equ	0xFFE
  1994                           tosl	equ	0xFFD
  1995                           pclath	equ	0xFFA
  1996                           tblptru	equ	0xFF8
  1997                           tblptrh	equ	0xFF7
  1998                           tblptrl	equ	0xFF6
  1999                           tablat	equ	0xFF5
  2000                           prodh	equ	0xFF4
  2001                           prodl	equ	0xFF3
  2002                           intcon	equ	0xFF2
  2003                           postinc0	equ	0xFEE
  2004                           wreg	equ	0xFE8
  2005                           postdec1	equ	0xFE5
  2006                           fsr1l	equ	0xFE1
  2007                           postinc2	equ	0xFDE
  2008                           fsr2h	equ	0xFDA
  2009                           fsr2l	equ	0xFD9
  2010                           status	equ	0xFD8
  2011                           
  2012 ;; *************** function _do_I2C_RX *****************
  2013 ;; Defined at:
  2014 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      enum E11956
  2021 ;; Registers used:
  2022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    9
  2035 ;; This function calls:
  2036 ;;		Absolute function
  2037 ;;		_do_I2C_DO_NACK_RESTART
  2038 ;;		_do_I2C_DO_NACK_STOP
  2039 ;;		_i2c1_driver_getRXData
  2040 ;;		_i2c1_driver_sendACK
  2041 ;;		_i2c_restartWrite
  2042 ;;		_rd1RegCompleteHandler
  2043 ;;		_rd2RegCompleteHandler
  2044 ;;		_rdBlkRegCompleteHandler
  2045 ;;		_returnReset
  2046 ;;		_returnStop
  2047 ;;		_wr1RegCompleteHandler
  2048 ;;		_wr2RegCompleteHandler
  2049 ;; This function is called by:
  2050 ;;		_i2c_ISR
  2051 ;;		i2_i2c_ISR
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text15
  2056  000450                     __ptext15:
  2057                           	opt stack 0
  2058  000450                     _do_I2C_RX:
  2059                           	opt stack 0
  2060                           
  2061                           ;Skip over the trampoline to the duplicate function for level 2
  2062  000450  B24A               	btfsc	btemp,1,c
  2063  000452  EFA0  F002         	goto	i2_do_I2C_RX
  2064  000456                     _do_I2C_RX$intlevel0:
  2065                           	opt stack 16
  2066                           
  2067                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  2068                           
  2069                           ;incstack = 0
  2070  000456  EC04  F007         	call	_i2c1_driver_getRXData	;wreg free
  2071  00045A  C003  FFD9         	movff	_i2c_status+2,fsr2l
  2072  00045E  C004  FFDA         	movff	_i2c_status+3,fsr2h
  2073  000462  6EDF               	movwf	indf2,c
  2074  000464  4A03               	infsnz	_i2c_status+2,f,c
  2075  000466  2A04               	incf	_i2c_status+3,f,c
  2076                           
  2077                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  2078  000468  0605               	decf	_i2c_status+4,f,c
  2079  00046A  A0D8               	btfss	status,0,c
  2080  00046C  0606               	decf	_i2c_status+5,f,c
  2081  00046E  5005               	movf	_i2c_status+4,w,c
  2082  000470  1006               	iorwf	_i2c_status+5,w,c
  2083  000472  B4D8               	btfsc	status,2,c
  2084  000474  D004               	goto	l445
  2085                           
  2086                           ;i2c_master.c: 361: {
  2087                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  2088  000476  ECE9  F006         	call	_i2c1_driver_sendACK	;wreg free
  2089                           
  2090                           ;i2c_master.c: 363: return I2C_RCEN;
  2091  00047A  0E05               	movlw	5
  2092                           
  2093                           ;i2c_master.c: 364: }
  2094  00047C  0012               	return	
  2095  00047E                     l445:
  2096                           
  2097                           ;i2c_master.c: 365: else
  2098                           ;i2c_master.c: 366: {
  2099                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  2100  00047E  8401               	bsf	_i2c_status,2,c
  2101                           
  2102                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  2103  000480  D006               	goto	l448
  2104  000482                     
  2105                           ;i2c_master.c: 371: case i2c_restart_read:
  2106                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  2107  000482  EC58  F006         	call	_do_I2C_DO_NACK_RESTART	;wreg free
  2108  000486  0012               	return	
  2109  000488                     
  2110                           ;i2c_master.c: 375: case i2c_stop:
  2111                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  2112                           
  2113                           ;i2c_master.c: 374: case i2c_continue:
  2114  000488  EC5F  F006         	call	_do_I2C_DO_NACK_STOP	;wreg free
  2115                           
  2116                           ;i2c_master.c: 377: }
  2117  00048C  0012               	return	
  2118  00048E                     l448:
  2119  00048E  C01F  F09A         	movff	_i2c_status+30,returnStop@p
  2120  000492  C020  F09B         	movff	_i2c_status+31,returnStop@p+1
  2121  000496  EE20  F00D         	lfsr	2,_i2c_status+12
  2122  00049A  D801               	call	u1278
  2123  00049C  D00A               	goto	u1279
  2124  00049E                     u1278:
  2125  00049E  0005               	push	
  2126  0004A0  6EFA               	movwf	pclath,c
  2127  0004A2  50DE               	movf	postinc2,w,c
  2128  0004A4  6EFD               	movwf	tosl,c
  2129  0004A6  50DE               	movf	postinc2,w,c
  2130  0004A8  6EFE               	movwf	tosh,c
  2131  0004AA  50DE               	movf	postinc2,w,c
  2132  0004AC  6EFF               	movwf	tosu,c
  2133  0004AE  50FA               	movf	pclath,w,c
  2134  0004B0  0012               	return		;indir
  2135  0004B2                     u1279:
  2136                           
  2137                           ; Switch size 1, requested type "space"
  2138                           ; Number of cases is 4, Range of values is 1 to 4
  2139                           ; switch strategies available:
  2140                           ; Name         Instructions Cycles
  2141                           ; simple_byte           13     7 (average)
  2142                           ;	Chosen strategy is simple_byte
  2143  0004B2  0A01               	xorlw	1	; case 1
  2144  0004B4  B4D8               	btfsc	status,2,c
  2145  0004B6  D7E8               	goto	l451
  2146  0004B8  0A03               	xorlw	3	; case 2
  2147  0004BA  B4D8               	btfsc	status,2,c
  2148  0004BC  D7E2               	goto	l449
  2149  0004BE  0A01               	xorlw	1	; case 3
  2150  0004C0  B4D8               	btfsc	status,2,c
  2151  0004C2  D7DF               	goto	l449
  2152  0004C4  0A07               	xorlw	7	; case 4
  2153  0004C6  D7E0               	goto	l451
  2154  0004C8                     __end_of_do_I2C_RX:
  2155                           	opt stack 0
  2156                           tosu	equ	0xFFF
  2157                           tosh	equ	0xFFE
  2158                           tosl	equ	0xFFD
  2159                           pclath	equ	0xFFA
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           prodh	equ	0xFF4
  2165                           prodl	equ	0xFF3
  2166                           intcon	equ	0xFF2
  2167                           postinc0	equ	0xFEE
  2168                           wreg	equ	0xFE8
  2169                           postdec1	equ	0xFE5
  2170                           fsr1l	equ	0xFE1
  2171                           indf2	equ	0xFDF
  2172                           postinc2	equ	0xFDE
  2173                           fsr2h	equ	0xFDA
  2174                           fsr2l	equ	0xFD9
  2175                           status	equ	0xFD8
  2176                           
  2177 ;; *************** function _do_I2C_TX *****************
  2178 ;; Defined at:
  2179 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      enum E11956
  2186 ;; Registers used:
  2187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    9
  2200 ;; This function calls:
  2201 ;;		Absolute function
  2202 ;;		_do_I2C_SEND_RESTART_READ
  2203 ;;		_do_I2C_SEND_RESTART_WRITE
  2204 ;;		_do_I2C_SEND_STOP
  2205 ;;		_i2c1_driver_TXData
  2206 ;;		_i2c1_driver_isNACK
  2207 ;;		_i2c_restartWrite
  2208 ;;		_rd1RegCompleteHandler
  2209 ;;		_rd2RegCompleteHandler
  2210 ;;		_rdBlkRegCompleteHandler
  2211 ;;		_returnReset
  2212 ;;		_returnStop
  2213 ;;		_wr1RegCompleteHandler
  2214 ;;		_wr2RegCompleteHandler
  2215 ;; This function is called by:
  2216 ;;		_i2c_ISR
  2217 ;;		i2_i2c_ISR
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text16
  2222  00023E                     __ptext16:
  2223                           	opt stack 0
  2224  00023E                     _do_I2C_TX:
  2225                           	opt stack 0
  2226                           
  2227                           ;Skip over the trampoline to the duplicate function for level 2
  2228  00023E  B24A               	btfsc	btemp,1,c
  2229  000240  EF68  F001         	goto	i2_do_I2C_TX
  2230  000244                     _do_I2C_TX$intlevel0:
  2231                           	opt stack 16
  2232                           
  2233                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  2234                           
  2235                           ;incstack = 0
  2236  000244  ECF4  F005         	call	_i2c1_driver_isNACK	;wreg free
  2237  000248  B0D8               	btfsc	status,0,c
  2238  00024A  D00A               	goto	l430
  2239  00024C  D026               	goto	l429
  2240  00024E                     
  2241                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  2242  00024E  EC82  F006         	call	_do_I2C_SEND_RESTART_READ	;wreg free
  2243  000252  0012               	return	
  2244  000254                     
  2245                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  2246  000254  EC7B  F006         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
  2247  000258  0012               	return	
  2248  00025A                     
  2249                           ;i2c_master.c: 345: case i2c_stop:
  2250                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  2251                           
  2252                           ;i2c_master.c: 344: case i2c_continue:
  2253  00025A  EC6D  F006         	call	_do_I2C_SEND_STOP	;wreg free
  2254                           
  2255                           ;i2c_master.c: 347: }
  2256  00025E  0012               	return	
  2257  000260                     l430:
  2258  000260  C025  F09A         	movff	_i2c_status+36,returnStop@p
  2259  000264  C026  F09B         	movff	_i2c_status+37,returnStop@p+1
  2260  000268  EE20  F016         	lfsr	2,_i2c_status+21
  2261  00026C  D801               	call	u1248
  2262  00026E  D00A               	goto	u1249
  2263  000270                     u1248:
  2264  000270  0005               	push	
  2265  000272  6EFA               	movwf	pclath,c
  2266  000274  50DE               	movf	postinc2,w,c
  2267  000276  6EFD               	movwf	tosl,c
  2268  000278  50DE               	movf	postinc2,w,c
  2269  00027A  6EFE               	movwf	tosh,c
  2270  00027C  50DE               	movf	postinc2,w,c
  2271  00027E  6EFF               	movwf	tosu,c
  2272  000280  50FA               	movf	pclath,w,c
  2273  000282  0012               	return		;indir
  2274  000284                     u1249:
  2275                           
  2276                           ; Switch size 1, requested type "space"
  2277                           ; Number of cases is 4, Range of values is 1 to 4
  2278                           ; switch strategies available:
  2279                           ; Name         Instructions Cycles
  2280                           ; simple_byte           13     7 (average)
  2281                           ;	Chosen strategy is simple_byte
  2282  000284  0A01               	xorlw	1	; case 1
  2283  000286  B4D8               	btfsc	status,2,c
  2284  000288  D7E8               	goto	l434
  2285  00028A  0A03               	xorlw	3	; case 2
  2286  00028C  B4D8               	btfsc	status,2,c
  2287  00028E  D7DF               	goto	l431
  2288  000290  0A01               	xorlw	1	; case 3
  2289  000292  B4D8               	btfsc	status,2,c
  2290  000294  D7DF               	goto	l433
  2291  000296  0A07               	xorlw	7	; case 4
  2292  000298  D7E0               	goto	l434
  2293  00029A                     l429:
  2294                           
  2295                           ;i2c_master.c: 349: else
  2296                           ;i2c_master.c: 350: {
  2297                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  2298  00029A  9601               	bcf	_i2c_status,3,c
  2299                           
  2300                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  2301  00029C  C003  FFD9         	movff	_i2c_status+2,fsr2l
  2302  0002A0  C004  FFDA         	movff	_i2c_status+3,fsr2h
  2303  0002A4  4A03               	infsnz	_i2c_status+2,f,c
  2304  0002A6  2A04               	incf	_i2c_status+3,f,c
  2305  0002A8  50DF               	movf	indf2,w,c
  2306  0002AA  ECBF  F006         	call	_i2c1_driver_TXData
  2307                           
  2308                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  2309  0002AE  0605               	decf	_i2c_status+4,f,c
  2310  0002B0  A0D8               	btfss	status,0,c
  2311  0002B2  0606               	decf	_i2c_status+5,f,c
  2312  0002B4  5005               	movf	_i2c_status+4,w,c
  2313  0002B6  1006               	iorwf	_i2c_status+5,w,c
  2314  0002B8  A4D8               	btfss	status,2,c
  2315  0002BA  D004               	goto	l440
  2316  0002BC  0E00               	movlw	0
  2317  0002BE  6E48               	movwf	_do_I2C_TX$1023+1,c
  2318  0002C0  0E06               	movlw	6
  2319  0002C2  D003               	goto	L2
  2320  0002C4                     l440:
  2321  0002C4  0E00               	movlw	0
  2322  0002C6  6E48               	movwf	_do_I2C_TX$1023+1,c
  2323  0002C8  0E03               	movlw	3
  2324  0002CA                     L2:
  2325  0002CA  6E47               	movwf	_do_I2C_TX$1023,c
  2326  0002CC  5047               	movf	_do_I2C_TX$1023,w,c
  2327  0002CE  0012               	return	
  2328  0002D0                     __end_of_do_I2C_TX:
  2329                           	opt stack 0
  2330                           tosu	equ	0xFFF
  2331                           tosh	equ	0xFFE
  2332                           tosl	equ	0xFFD
  2333                           pclath	equ	0xFFA
  2334                           tblptru	equ	0xFF8
  2335                           tblptrh	equ	0xFF7
  2336                           tblptrl	equ	0xFF6
  2337                           tablat	equ	0xFF5
  2338                           prodh	equ	0xFF4
  2339                           prodl	equ	0xFF3
  2340                           intcon	equ	0xFF2
  2341                           postinc0	equ	0xFEE
  2342                           wreg	equ	0xFE8
  2343                           postdec1	equ	0xFE5
  2344                           fsr1l	equ	0xFE1
  2345                           indf2	equ	0xFDF
  2346                           postinc2	equ	0xFDE
  2347                           fsr2h	equ	0xFDA
  2348                           fsr2l	equ	0xFD9
  2349                           status	equ	0xFD8
  2350                           
  2351 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  2352 ;; Defined at:
  2353 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      enum E11956
  2360 ;; Registers used:
  2361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2371 ;;Total ram usage:        0 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    9
  2374 ;; This function calls:
  2375 ;;		Absolute function
  2376 ;;		_do_I2C_SEND_RESTART
  2377 ;;		_do_I2C_SEND_STOP
  2378 ;;		_i2c_restartWrite
  2379 ;;		_rd1RegCompleteHandler
  2380 ;;		_rd2RegCompleteHandler
  2381 ;;		_rdBlkRegCompleteHandler
  2382 ;;		_returnReset
  2383 ;;		_returnStop
  2384 ;;		_wr1RegCompleteHandler
  2385 ;;		_wr2RegCompleteHandler
  2386 ;; This function is called by:
  2387 ;;		_i2c_ISR
  2388 ;;		i2_i2c_ISR
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text17
  2393  000702                     __ptext17:
  2394                           	opt stack 0
  2395  000702                     _do_I2C_DO_ADDRESS_NACK:
  2396                           	opt stack 0
  2397                           
  2398                           ;Skip over the trampoline to the duplicate function for level 2
  2399  000702  B24A               	btfsc	btemp,1,c
  2400  000704  EFCA  F003         	goto	i2_do_I2C_DO_ADDRESS_NACK
  2401  000708                     _do_I2C_DO_ADDRESS_NACK$intlevel0:
  2402                           	opt stack 16
  2403                           
  2404                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  2405                           
  2406                           ;incstack = 0
  2407  000708  9601               	bcf	_i2c_status,3,c
  2408                           
  2409                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  2410  00070A  0E02               	movlw	2
  2411  00070C  6E0C               	movwf	_i2c_status+11,c
  2412                           
  2413                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  2414  00070E  D006               	goto	l421
  2415  000710                     
  2416                           ;i2c_master.c: 326: case i2c_restart_write:
  2417                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  2418  000710  EC74  F006         	call	_do_I2C_SEND_RESTART	;wreg free
  2419  000714  0012               	return	
  2420  000716                     
  2421                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  2422  000716  EC6D  F006         	call	_do_I2C_SEND_STOP	;wreg free
  2423                           
  2424                           ;i2c_master.c: 330: }
  2425  00071A  0012               	return	
  2426  00071C                     l421:
  2427  00071C  C023  F09A         	movff	_i2c_status+34,returnStop@p
  2428  000720  C024  F09B         	movff	_i2c_status+35,returnStop@p+1
  2429  000724  EE20  F013         	lfsr	2,_i2c_status+18
  2430  000728  D801               	call	u1228
  2431  00072A  D00A               	goto	u1229
  2432  00072C                     u1228:
  2433  00072C  0005               	push	
  2434  00072E  6EFA               	movwf	pclath,c
  2435  000730  50DE               	movf	postinc2,w,c
  2436  000732  6EFD               	movwf	tosl,c
  2437  000734  50DE               	movf	postinc2,w,c
  2438  000736  6EFE               	movwf	tosh,c
  2439  000738  50DE               	movf	postinc2,w,c
  2440  00073A  6EFF               	movwf	tosu,c
  2441  00073C  50FA               	movf	pclath,w,c
  2442  00073E  0012               	return		;indir
  2443  000740                     u1229:
  2444                           
  2445                           ; Switch size 1, requested type "space"
  2446                           ; Number of cases is 2, Range of values is 2 to 3
  2447                           ; switch strategies available:
  2448                           ; Name         Instructions Cycles
  2449                           ; simple_byte            7     4 (average)
  2450                           ;	Chosen strategy is simple_byte
  2451  000740  0A02               	xorlw	2	; case 2
  2452  000742  B4D8               	btfsc	status,2,c
  2453  000744  D7E5               	goto	l422
  2454  000746  0A01               	xorlw	1	; case 3
  2455  000748  B4D8               	btfsc	status,2,c
  2456  00074A  D7E2               	goto	l422
  2457  00074C  D7E4               	goto	l425
  2458  00074E                     __end_of_do_I2C_DO_ADDRESS_NACK:
  2459                           	opt stack 0
  2460                           tosu	equ	0xFFF
  2461                           tosh	equ	0xFFE
  2462                           tosl	equ	0xFFD
  2463                           pclath	equ	0xFFA
  2464                           tblptru	equ	0xFF8
  2465                           tblptrh	equ	0xFF7
  2466                           tblptrl	equ	0xFF6
  2467                           tablat	equ	0xFF5
  2468                           prodh	equ	0xFF4
  2469                           prodl	equ	0xFF3
  2470                           intcon	equ	0xFF2
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           postdec1	equ	0xFE5
  2474                           fsr1l	equ	0xFE1
  2475                           indf2	equ	0xFDF
  2476                           postinc2	equ	0xFDE
  2477                           fsr2h	equ	0xFDA
  2478                           fsr2l	equ	0xFD9
  2479                           status	equ	0xFD8
  2480                           
  2481 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  2482 ;; Defined at:
  2483 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      enum E11956
  2490 ;; Registers used:
  2491 ;;		wreg, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2501 ;;Total ram usage:        0 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    7
  2504 ;; This function calls:
  2505 ;;		_i2c1_driver_sendNACK
  2506 ;; This function is called by:
  2507 ;;		_do_I2C_RX
  2508 ;;		_i2c_ISR
  2509 ;;		i2_i2c_ISR
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text18
  2514  000CB0                     __ptext18:
  2515                           	opt stack 0
  2516  000CB0                     _do_I2C_DO_NACK_RESTART:
  2517                           	opt stack 0
  2518                           
  2519                           ;Skip over the trampoline to the duplicate function for level 2
  2520  000CB0  B24A               	btfsc	btemp,1,c
  2521  000CB2  EFC3  F006         	goto	i2_do_I2C_DO_NACK_RESTART
  2522  000CB6                     _do_I2C_DO_NACK_RESTART$intlevel0:
  2523                           	opt stack 17
  2524                           
  2525                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  2526                           
  2527                           ;incstack = 0
  2528  000CB6  ECE6  F006         	call	_i2c1_driver_sendNACK	;wreg free
  2529                           
  2530                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  2531  000CBA  0E09               	movlw	9
  2532  000CBC  0012               	return	
  2533  000CBE                     __end_of_do_I2C_DO_NACK_RESTART:
  2534                           	opt stack 0
  2535                           tosu	equ	0xFFF
  2536                           tosh	equ	0xFFE
  2537                           tosl	equ	0xFFD
  2538                           pclath	equ	0xFFA
  2539                           tblptru	equ	0xFF8
  2540                           tblptrh	equ	0xFF7
  2541                           tblptrl	equ	0xFF6
  2542                           tablat	equ	0xFF5
  2543                           prodh	equ	0xFF4
  2544                           prodl	equ	0xFF3
  2545                           intcon	equ	0xFF2
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           postdec1	equ	0xFE5
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           postinc2	equ	0xFDE
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  2557 ;; Defined at:
  2558 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      enum E11956
  2565 ;; Registers used:
  2566 ;;		wreg, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    7
  2579 ;; This function calls:
  2580 ;;		_i2c1_driver_sendNACK
  2581 ;; This function is called by:
  2582 ;;		_do_I2C_RX
  2583 ;;		_i2c_ISR
  2584 ;;		i2_i2c_ISR
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text19
  2589  000CBE                     __ptext19:
  2590                           	opt stack 0
  2591  000CBE                     _do_I2C_DO_NACK_STOP:
  2592                           	opt stack 0
  2593                           
  2594                           ;Skip over the trampoline to the duplicate function for level 2
  2595  000CBE  B24A               	btfsc	btemp,1,c
  2596  000CC0  EFC7  F006         	goto	i2_do_I2C_DO_NACK_STOP
  2597  000CC4                     _do_I2C_DO_NACK_STOP$intlevel0:
  2598                           	opt stack 17
  2599                           
  2600                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  2601                           
  2602                           ;incstack = 0
  2603  000CC4  ECE6  F006         	call	_i2c1_driver_sendNACK	;wreg free
  2604                           
  2605                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  2606  000CC8  0E0A               	movlw	10
  2607  000CCA  0012               	return	
  2608  000CCC                     __end_of_do_I2C_DO_NACK_STOP:
  2609                           	opt stack 0
  2610                           tosu	equ	0xFFF
  2611                           tosh	equ	0xFFE
  2612                           tosl	equ	0xFFD
  2613                           pclath	equ	0xFFA
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           intcon	equ	0xFF2
  2621                           postinc0	equ	0xFEE
  2622                           wreg	equ	0xFE8
  2623                           postdec1	equ	0xFE5
  2624                           fsr1l	equ	0xFE1
  2625                           indf2	equ	0xFDF
  2626                           postinc2	equ	0xFDE
  2627                           fsr2h	equ	0xFDA
  2628                           fsr2l	equ	0xFD9
  2629                           status	equ	0xFD8
  2630                           
  2631 ;; *************** function _do_I2C_DO_ACK *****************
  2632 ;; Defined at:
  2633 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      enum E11956
  2640 ;; Registers used:
  2641 ;;		wreg, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;Total ram usage:        0 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    7
  2654 ;; This function calls:
  2655 ;;		_i2c1_driver_sendACK
  2656 ;; This function is called by:
  2657 ;;		_i2c_ISR
  2658 ;;		i2_i2c_ISR
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text20
  2663  000CCC                     __ptext20:
  2664                           	opt stack 0
  2665  000CCC                     _do_I2C_DO_ACK:
  2666                           	opt stack 0
  2667                           
  2668                           ;Skip over the trampoline to the duplicate function for level 2
  2669  000CCC  B24A               	btfsc	btemp,1,c
  2670  000CCE  EFCB  F006         	goto	i2_do_I2C_DO_ACK
  2671  000CD2                     _do_I2C_DO_ACK$intlevel0:
  2672                           	opt stack 18
  2673                           
  2674                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  2675                           
  2676                           ;incstack = 0
  2677  000CD2  ECE9  F006         	call	_i2c1_driver_sendACK	;wreg free
  2678                           
  2679                           ;i2c_master.c: 302: return I2C_RCEN;
  2680  000CD6  0E05               	movlw	5
  2681  000CD8  0012               	return	
  2682  000CDA                     __end_of_do_I2C_DO_ACK:
  2683                           	opt stack 0
  2684                           tosu	equ	0xFFF
  2685                           tosh	equ	0xFFE
  2686                           tosl	equ	0xFFD
  2687                           pclath	equ	0xFFA
  2688                           tblptru	equ	0xFF8
  2689                           tblptrh	equ	0xFF7
  2690                           tblptrl	equ	0xFF6
  2691                           tablat	equ	0xFF5
  2692                           prodh	equ	0xFF4
  2693                           prodl	equ	0xFF3
  2694                           intcon	equ	0xFF2
  2695                           postinc0	equ	0xFEE
  2696                           wreg	equ	0xFE8
  2697                           postdec1	equ	0xFE5
  2698                           fsr1l	equ	0xFE1
  2699                           indf2	equ	0xFDF
  2700                           postinc2	equ	0xFDE
  2701                           fsr2h	equ	0xFDA
  2702                           fsr2l	equ	0xFD9
  2703                           status	equ	0xFD8
  2704                           
  2705 ;; *************** function _do_I2C_RCEN *****************
  2706 ;; Defined at:
  2707 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      enum E11956
  2714 ;; Registers used:
  2715 ;;		wreg, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    7
  2728 ;; This function calls:
  2729 ;;		_i2c1_driver_startRX
  2730 ;; This function is called by:
  2731 ;;		_i2c_ISR
  2732 ;;		i2_i2c_ISR
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text21
  2737  000C74                     __ptext21:
  2738                           	opt stack 0
  2739  000C74                     _do_I2C_RCEN:
  2740                           	opt stack 0
  2741                           
  2742                           ;Skip over the trampoline to the duplicate function for level 2
  2743  000C74  B24A               	btfsc	btemp,1,c
  2744  000C76  EFAD  F006         	goto	i2_do_I2C_RCEN
  2745  000C7A                     _do_I2C_RCEN$intlevel0:
  2746                           	opt stack 18
  2747                           
  2748                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  2749                           
  2750                           ;incstack = 0
  2751  000C7A  9601               	bcf	_i2c_status,3,c
  2752                           
  2753                           ;i2c_master.c: 295: i2c1_driver_startRX();
  2754  000C7C  EC06  F007         	call	_i2c1_driver_startRX	;wreg free
  2755                           
  2756                           ;i2c_master.c: 296: return I2C_RX;
  2757  000C80  0E04               	movlw	4
  2758  000C82  0012               	return	
  2759  000C84                     __end_of_do_I2C_RCEN:
  2760                           	opt stack 0
  2761                           tosu	equ	0xFFF
  2762                           tosh	equ	0xFFE
  2763                           tosl	equ	0xFFD
  2764                           pclath	equ	0xFFA
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           prodh	equ	0xFF4
  2770                           prodl	equ	0xFF3
  2771                           intcon	equ	0xFF2
  2772                           postinc0	equ	0xFEE
  2773                           wreg	equ	0xFE8
  2774                           postdec1	equ	0xFE5
  2775                           fsr1l	equ	0xFE1
  2776                           indf2	equ	0xFDF
  2777                           postinc2	equ	0xFDE
  2778                           fsr2h	equ	0xFDA
  2779                           fsr2l	equ	0xFD9
  2780                           status	equ	0xFD8
  2781                           
  2782 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  2783 ;; Defined at:
  2784 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      enum E11956
  2791 ;; Registers used:
  2792 ;;		wreg, status,2, status,0, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    7
  2805 ;; This function calls:
  2806 ;;		_i2c1_driver_TXData
  2807 ;; This function is called by:
  2808 ;;		_i2c_ISR
  2809 ;;		i2_i2c_ISR
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text22
  2814  000C14                     __ptext22:
  2815                           	opt stack 0
  2816  000C14                     _do_I2C_SEND_ADR_WRITE:
  2817                           	opt stack 0
  2818                           
  2819                           ;Skip over the trampoline to the duplicate function for level 2
  2820  000C14  B24A               	btfsc	btemp,1,c
  2821  000C16  EF89  F006         	goto	i2_do_I2C_SEND_ADR_WRITE
  2822  000C1A                     _do_I2C_SEND_ADR_WRITE$intlevel0:
  2823                           	opt stack 18
  2824                           
  2825                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  2826                           
  2827                           ;incstack = 0
  2828  000C1A  8601               	bsf	_i2c_status,3,c
  2829                           
  2830                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  2831  000C1C  5002               	movf	_i2c_status+1,w,c
  2832  000C1E  2402               	addwf	_i2c_status+1,w,c
  2833  000C20  ECBF  F006         	call	_i2c1_driver_TXData
  2834                           
  2835                           ;i2c_master.c: 289: return I2C_TX;
  2836  000C24  0E03               	movlw	3
  2837  000C26  0012               	return	
  2838  000C28                     __end_of_do_I2C_SEND_ADR_WRITE:
  2839                           	opt stack 0
  2840                           tosu	equ	0xFFF
  2841                           tosh	equ	0xFFE
  2842                           tosl	equ	0xFFD
  2843                           pclath	equ	0xFFA
  2844                           tblptru	equ	0xFF8
  2845                           tblptrh	equ	0xFF7
  2846                           tblptrl	equ	0xFF6
  2847                           tablat	equ	0xFF5
  2848                           prodh	equ	0xFF4
  2849                           prodl	equ	0xFF3
  2850                           intcon	equ	0xFF2
  2851                           postinc0	equ	0xFEE
  2852                           wreg	equ	0xFE8
  2853                           postdec1	equ	0xFE5
  2854                           fsr1l	equ	0xFE1
  2855                           indf2	equ	0xFDF
  2856                           postinc2	equ	0xFDE
  2857                           fsr2h	equ	0xFDA
  2858                           fsr2l	equ	0xFD9
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  2862 ;; Defined at:
  2863 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      enum E11956
  2870 ;; Registers used:
  2871 ;;		wreg, status,0, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:    7
  2884 ;; This function calls:
  2885 ;;		_i2c1_driver_TXData
  2886 ;; This function is called by:
  2887 ;;		_i2c_ISR
  2888 ;;		i2_i2c_ISR
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text23
  2893  000C28                     __ptext23:
  2894                           	opt stack 0
  2895  000C28                     _do_I2C_SEND_ADR_READ:
  2896                           	opt stack 0
  2897                           
  2898                           ;Skip over the trampoline to the duplicate function for level 2
  2899  000C28  B24A               	btfsc	btemp,1,c
  2900  000C2A  EF90  F006         	goto	i2_do_I2C_SEND_ADR_READ
  2901  000C2E                     _do_I2C_SEND_ADR_READ$intlevel0:
  2902                           	opt stack 18
  2903                           
  2904                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  2905                           
  2906                           ;incstack = 0
  2907  000C2E  8601               	bsf	_i2c_status,3,c
  2908                           
  2909                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  2910  000C30  80D8               	bsf	status,0,c
  2911  000C32  3402               	rlcf	_i2c_status+1,w,c
  2912  000C34  ECBF  F006         	call	_i2c1_driver_TXData
  2913                           
  2914                           ;i2c_master.c: 282: return I2C_RCEN;
  2915  000C38  0E05               	movlw	5
  2916  000C3A  0012               	return	
  2917  000C3C                     __end_of_do_I2C_SEND_ADR_READ:
  2918                           	opt stack 0
  2919                           tosu	equ	0xFFF
  2920                           tosh	equ	0xFFE
  2921                           tosl	equ	0xFFD
  2922                           pclath	equ	0xFFA
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           prodh	equ	0xFF4
  2928                           prodl	equ	0xFF3
  2929                           intcon	equ	0xFF2
  2930                           postinc0	equ	0xFEE
  2931                           wreg	equ	0xFE8
  2932                           postdec1	equ	0xFE5
  2933                           fsr1l	equ	0xFE1
  2934                           indf2	equ	0xFDF
  2935                           postinc2	equ	0xFDE
  2936                           fsr2h	equ	0xFDA
  2937                           fsr2l	equ	0xFD9
  2938                           status	equ	0xFD8
  2939                           
  2940 ;; *************** function _do_I2C_SEND_STOP *****************
  2941 ;; Defined at:
  2942 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      enum E11956
  2949 ;; Registers used:
  2950 ;;		wreg, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2960 ;;Total ram usage:        0 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    7
  2963 ;; This function calls:
  2964 ;;		_i2c1_driver_stop
  2965 ;; This function is called by:
  2966 ;;		_do_I2C_DO_ADDRESS_NACK
  2967 ;;		_do_I2C_TX
  2968 ;;		_do_I2C_TX_EMPTY
  2969 ;;		_i2c_ISR
  2970 ;;		i2_i2c_ISR
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text24
  2975  000CDA                     __ptext24:
  2976                           	opt stack 0
  2977  000CDA                     _do_I2C_SEND_STOP:
  2978                           	opt stack 0
  2979                           
  2980                           ;Skip over the trampoline to the duplicate function for level 2
  2981  000CDA  B24A               	btfsc	btemp,1,c
  2982  000CDC  EFCF  F006         	goto	i2_do_I2C_SEND_STOP
  2983  000CE0                     _do_I2C_SEND_STOP$intlevel0:
  2984                           	opt stack 17
  2985                           
  2986                           ;i2c_master.c: 274: i2c1_driver_stop();
  2987                           
  2988                           ;incstack = 0
  2989  000CE0  EC08  F007         	call	_i2c1_driver_stop	;wreg free
  2990                           
  2991                           ;i2c_master.c: 275: return I2C_IDLE;
  2992  000CE4  0E00               	movlw	0
  2993  000CE6  0012               	return	
  2994  000CE8                     __end_of_do_I2C_SEND_STOP:
  2995                           	opt stack 0
  2996                           tosu	equ	0xFFF
  2997                           tosh	equ	0xFFE
  2998                           tosl	equ	0xFFD
  2999                           pclath	equ	0xFFA
  3000                           tblptru	equ	0xFF8
  3001                           tblptrh	equ	0xFF7
  3002                           tblptrl	equ	0xFF6
  3003                           tablat	equ	0xFF5
  3004                           prodh	equ	0xFF4
  3005                           prodl	equ	0xFF3
  3006                           intcon	equ	0xFF2
  3007                           postinc0	equ	0xFEE
  3008                           wreg	equ	0xFE8
  3009                           postdec1	equ	0xFE5
  3010                           fsr1l	equ	0xFE1
  3011                           indf2	equ	0xFDF
  3012                           postinc2	equ	0xFDE
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           
  3017 ;; *************** function _do_I2C_SEND_RESTART *****************
  3018 ;; Defined at:
  3019 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;		None
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      enum E11956
  3026 ;; Registers used:
  3027 ;;		wreg, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;Total ram usage:        0 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    7
  3040 ;; This function calls:
  3041 ;;		_i2c1_driver_restart
  3042 ;; This function is called by:
  3043 ;;		_do_I2C_DO_ADDRESS_NACK
  3044 ;;		_do_I2C_TX_EMPTY
  3045 ;;		_i2c_ISR
  3046 ;;		i2_i2c_ISR
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text25
  3051  000CE8                     __ptext25:
  3052                           	opt stack 0
  3053  000CE8                     _do_I2C_SEND_RESTART:
  3054                           	opt stack 0
  3055                           
  3056                           ;Skip over the trampoline to the duplicate function for level 2
  3057  000CE8  B24A               	btfsc	btemp,1,c
  3058  000CEA  EFD3  F006         	goto	i2_do_I2C_SEND_RESTART
  3059  000CEE                     _do_I2C_SEND_RESTART$intlevel0:
  3060                           	opt stack 17
  3061                           
  3062                           ;i2c_master.c: 268: i2c1_driver_restart();
  3063                           
  3064                           ;incstack = 0
  3065  000CEE  EC0A  F007         	call	_i2c1_driver_restart	;wreg free
  3066                           
  3067                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  3068  000CF2  0E01               	movlw	1
  3069  000CF4  0012               	return	
  3070  000CF6                     __end_of_do_I2C_SEND_RESTART:
  3071                           	opt stack 0
  3072                           tosu	equ	0xFFF
  3073                           tosh	equ	0xFFE
  3074                           tosl	equ	0xFFD
  3075                           pclath	equ	0xFFA
  3076                           tblptru	equ	0xFF8
  3077                           tblptrh	equ	0xFF7
  3078                           tblptrl	equ	0xFF6
  3079                           tablat	equ	0xFF5
  3080                           prodh	equ	0xFF4
  3081                           prodl	equ	0xFF3
  3082                           intcon	equ	0xFF2
  3083                           postinc0	equ	0xFEE
  3084                           wreg	equ	0xFE8
  3085                           postdec1	equ	0xFE5
  3086                           fsr1l	equ	0xFE1
  3087                           indf2	equ	0xFDF
  3088                           postinc2	equ	0xFDE
  3089                           fsr2h	equ	0xFDA
  3090                           fsr2l	equ	0xFD9
  3091                           status	equ	0xFD8
  3092                           
  3093 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  3094 ;; Defined at:
  3095 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      enum E11956
  3102 ;; Registers used:
  3103 ;;		wreg, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    7
  3116 ;; This function calls:
  3117 ;;		_i2c1_driver_restart
  3118 ;; This function is called by:
  3119 ;;		_do_I2C_TX
  3120 ;;		_i2c_ISR
  3121 ;;		i2_i2c_ISR
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text26
  3126  000CF6                     __ptext26:
  3127                           	opt stack 0
  3128  000CF6                     _do_I2C_SEND_RESTART_WRITE:
  3129                           	opt stack 0
  3130                           
  3131                           ;Skip over the trampoline to the duplicate function for level 2
  3132  000CF6  B24A               	btfsc	btemp,1,c
  3133  000CF8  EFD7  F006         	goto	i2_do_I2C_SEND_RESTART_WRITE
  3134  000CFC                     _do_I2C_SEND_RESTART_WRITE$intlevel0:
  3135                           	opt stack 17
  3136                           
  3137                           ;i2c_master.c: 262: i2c1_driver_restart();
  3138                           
  3139                           ;incstack = 0
  3140  000CFC  EC0A  F007         	call	_i2c1_driver_restart	;wreg free
  3141                           
  3142                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  3143  000D00  0E02               	movlw	2
  3144  000D02  0012               	return	
  3145  000D04                     __end_of_do_I2C_SEND_RESTART_WRITE:
  3146                           	opt stack 0
  3147                           tosu	equ	0xFFF
  3148                           tosh	equ	0xFFE
  3149                           tosl	equ	0xFFD
  3150                           pclath	equ	0xFFA
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           prodh	equ	0xFF4
  3156                           prodl	equ	0xFF3
  3157                           intcon	equ	0xFF2
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           postdec1	equ	0xFE5
  3161                           fsr1l	equ	0xFE1
  3162                           indf2	equ	0xFDF
  3163                           postinc2	equ	0xFDE
  3164                           fsr2h	equ	0xFDA
  3165                           fsr2l	equ	0xFD9
  3166                           status	equ	0xFD8
  3167                           
  3168 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  3169 ;; Defined at:
  3170 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      enum E11956
  3177 ;; Registers used:
  3178 ;;		wreg, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3188 ;;Total ram usage:        0 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    7
  3191 ;; This function calls:
  3192 ;;		_i2c1_driver_restart
  3193 ;; This function is called by:
  3194 ;;		_do_I2C_TX
  3195 ;;		_i2c_ISR
  3196 ;;		i2_i2c_ISR
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text27
  3201  000D04                     __ptext27:
  3202                           	opt stack 0
  3203  000D04                     _do_I2C_SEND_RESTART_READ:
  3204                           	opt stack 0
  3205                           
  3206                           ;Skip over the trampoline to the duplicate function for level 2
  3207  000D04  B24A               	btfsc	btemp,1,c
  3208  000D06  EFDB  F006         	goto	i2_do_I2C_SEND_RESTART_READ
  3209  000D0A                     _do_I2C_SEND_RESTART_READ$intlevel0:
  3210                           	opt stack 17
  3211                           
  3212                           ;i2c_master.c: 256: i2c1_driver_restart();
  3213                           
  3214                           ;incstack = 0
  3215  000D0A  EC0A  F007         	call	_i2c1_driver_restart	;wreg free
  3216                           
  3217                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  3218  000D0E  0E01               	movlw	1
  3219  000D10  0012               	return	
  3220  000D12                     __end_of_do_I2C_SEND_RESTART_READ:
  3221                           	opt stack 0
  3222                           tosu	equ	0xFFF
  3223                           tosh	equ	0xFFE
  3224                           tosl	equ	0xFFD
  3225                           pclath	equ	0xFFA
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodh	equ	0xFF4
  3231                           prodl	equ	0xFF3
  3232                           intcon	equ	0xFF2
  3233                           postinc0	equ	0xFEE
  3234                           wreg	equ	0xFE8
  3235                           postdec1	equ	0xFE5
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _do_I2C_IDLE *****************
  3244 ;; Defined at:
  3245 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      enum E11956
  3252 ;; Registers used:
  3253 ;;		wreg, status,2
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    6
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_i2c_ISR
  3270 ;;		i2_i2c_ISR
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text28
  3275  000C84                     __ptext28:
  3276                           	opt stack 0
  3277  000C84                     _do_I2C_IDLE:
  3278                           	opt stack 0
  3279                           
  3280                           ;Skip over the trampoline to the duplicate function for level 2
  3281  000C84  B24A               	btfsc	btemp,1,c
  3282  000C86  EFB2  F006         	goto	i2_do_I2C_IDLE
  3283  000C8A                     _do_I2C_IDLE$intlevel0:
  3284                           	opt stack 19
  3285                           
  3286                           ;i2c_master.c: 249: i2c_status.busy = 0;
  3287                           
  3288                           ;incstack = 0
  3289  000C8A  9001               	bcf	_i2c_status,0,c
  3290                           
  3291                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  3292  000C8C  0E00               	movlw	0
  3293  000C8E  6E0C               	movwf	_i2c_status+11,c
  3294                           
  3295                           ;i2c_master.c: 251: return I2C_RESET;
  3296  000C90  0E0E               	movlw	14
  3297  000C92  0012               	return	
  3298  000C94                     __end_of_do_I2C_IDLE:
  3299                           	opt stack 0
  3300                           tosu	equ	0xFFF
  3301                           tosh	equ	0xFFE
  3302                           tosl	equ	0xFFD
  3303                           pclath	equ	0xFFA
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           prodh	equ	0xFF4
  3309                           prodl	equ	0xFF3
  3310                           intcon	equ	0xFF2
  3311                           postinc0	equ	0xFEE
  3312                           wreg	equ	0xFE8
  3313                           postdec1	equ	0xFE5
  3314                           fsr1l	equ	0xFE1
  3315                           indf2	equ	0xFDF
  3316                           postinc2	equ	0xFDE
  3317                           fsr2h	equ	0xFDA
  3318                           fsr2l	equ	0xFD9
  3319                           status	equ	0xFD8
  3320                           
  3321 ;; *************** function _do_I2C_RESET *****************
  3322 ;; Defined at:
  3323 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      enum E11956
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3341 ;;Total ram usage:        0 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    7
  3344 ;; This function calls:
  3345 ;;		_i2c1_driver_resetBus
  3346 ;; This function is called by:
  3347 ;;		_i2c_ISR
  3348 ;;		i2_i2c_ISR
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text29
  3353  000C3C                     __ptext29:
  3354                           	opt stack 0
  3355  000C3C                     _do_I2C_RESET:
  3356                           	opt stack 0
  3357                           
  3358                           ;Skip over the trampoline to the duplicate function for level 2
  3359  000C3C  B24A               	btfsc	btemp,1,c
  3360  000C3E  EF97  F006         	goto	i2_do_I2C_RESET
  3361  000C42                     _do_I2C_RESET$intlevel0:
  3362                           	opt stack 18
  3363                           
  3364                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  3365                           
  3366                           ;incstack = 0
  3367  000C42  EC1E  F007         	call	_i2c1_driver_resetBus	;wreg free
  3368                           
  3369                           ;i2c_master.c: 242: i2c_status.busy = 0;
  3370  000C46  9001               	bcf	_i2c_status,0,c
  3371                           
  3372                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  3373  000C48  0E00               	movlw	0
  3374  000C4A  6E0C               	movwf	_i2c_status+11,c
  3375                           
  3376                           ;i2c_master.c: 244: return I2C_RESET;
  3377  000C4C  0E0E               	movlw	14
  3378  000C4E  0012               	return	
  3379  000C50                     __end_of_do_I2C_RESET:
  3380                           	opt stack 0
  3381                           tosu	equ	0xFFF
  3382                           tosh	equ	0xFFE
  3383                           tosl	equ	0xFFD
  3384                           pclath	equ	0xFFA
  3385                           tblptru	equ	0xFF8
  3386                           tblptrh	equ	0xFF7
  3387                           tblptrl	equ	0xFF6
  3388                           tablat	equ	0xFF5
  3389                           prodh	equ	0xFF4
  3390                           prodl	equ	0xFF3
  3391                           intcon	equ	0xFF2
  3392                           postinc0	equ	0xFEE
  3393                           wreg	equ	0xFE8
  3394                           postdec1	equ	0xFE5
  3395                           fsr1l	equ	0xFE1
  3396                           indf2	equ	0xFDF
  3397                           postinc2	equ	0xFDE
  3398                           fsr2h	equ	0xFDA
  3399                           fsr2l	equ	0xFD9
  3400                           status	equ	0xFD8
  3401                           
  3402 ;; *************** function _do_I2C_TX_EMPTY *****************
  3403 ;; Defined at:
  3404 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      enum E11956
  3411 ;; Registers used:
  3412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3422 ;;Total ram usage:        0 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    9
  3425 ;; This function calls:
  3426 ;;		Absolute function
  3427 ;;		_do_I2C_SEND_RESTART
  3428 ;;		_do_I2C_SEND_STOP
  3429 ;;		_i2c_restartWrite
  3430 ;;		_mssp1_setIRQ
  3431 ;;		_rd1RegCompleteHandler
  3432 ;;		_rd2RegCompleteHandler
  3433 ;;		_rdBlkRegCompleteHandler
  3434 ;;		_returnReset
  3435 ;;		_returnStop
  3436 ;;		_wr1RegCompleteHandler
  3437 ;;		_wr2RegCompleteHandler
  3438 ;; This function is called by:
  3439 ;;		_i2c_ISR
  3440 ;;		i2_i2c_ISR
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text30
  3445  0005B2                     __ptext30:
  3446                           	opt stack 0
  3447  0005B2                     _do_I2C_TX_EMPTY:
  3448                           	opt stack 0
  3449                           
  3450                           ;Skip over the trampoline to the duplicate function for level 2
  3451  0005B2  B24A               	btfsc	btemp,1,c
  3452  0005B4  EF07  F003         	goto	i2_do_I2C_TX_EMPTY
  3453  0005B8                     _do_I2C_TX_EMPTY$intlevel0:
  3454                           	opt stack 16
  3455                           
  3456                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  3457                           
  3458                           ;incstack = 0
  3459  0005B8  8401               	bsf	_i2c_status,2,c
  3460                           
  3461                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  3462  0005BA  D00A               	goto	l457
  3463  0005BC                     
  3464                           ;i2c_master.c: 388: case i2c_restart_write:
  3465                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  3466  0005BC  EC74  F006         	call	_do_I2C_SEND_RESTART	;wreg free
  3467  0005C0  0012               	return	
  3468  0005C2                     
  3469                           ;i2c_master.c: 391: mssp1_setIRQ();
  3470  0005C2  ECE3  F006         	call	_mssp1_setIRQ	;wreg free
  3471                           
  3472                           ;i2c_master.c: 392: return I2C_TX;
  3473  0005C6  0E03               	movlw	3
  3474  0005C8  0012               	return	
  3475  0005CA                     
  3476                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  3477                           
  3478                           ;i2c_master.c: 394: case i2c_stop:
  3479  0005CA  EC6D  F006         	call	_do_I2C_SEND_STOP	;wreg free
  3480                           
  3481                           ;i2c_master.c: 396: }
  3482  0005CE  0012               	return	
  3483  0005D0                     l457:
  3484  0005D0  C01F  F09A         	movff	_i2c_status+30,returnStop@p
  3485  0005D4  C020  F09B         	movff	_i2c_status+31,returnStop@p+1
  3486  0005D8  EE20  F00D         	lfsr	2,_i2c_status+12
  3487  0005DC  D801               	call	u1288
  3488  0005DE  D00A               	goto	u1289
  3489  0005E0                     u1288:
  3490  0005E0  0005               	push	
  3491  0005E2  6EFA               	movwf	pclath,c
  3492  0005E4  50DE               	movf	postinc2,w,c
  3493  0005E6  6EFD               	movwf	tosl,c
  3494  0005E8  50DE               	movf	postinc2,w,c
  3495  0005EA  6EFE               	movwf	tosh,c
  3496  0005EC  50DE               	movf	postinc2,w,c
  3497  0005EE  6EFF               	movwf	tosu,c
  3498  0005F0  50FA               	movf	pclath,w,c
  3499  0005F2  0012               	return		;indir
  3500  0005F4                     u1289:
  3501                           
  3502                           ; Switch size 1, requested type "space"
  3503                           ; Number of cases is 4, Range of values is 1 to 4
  3504                           ; switch strategies available:
  3505                           ; Name         Instructions Cycles
  3506                           ; simple_byte           13     7 (average)
  3507                           ;	Chosen strategy is simple_byte
  3508  0005F4  0A01               	xorlw	1	; case 1
  3509  0005F6  B4D8               	btfsc	status,2,c
  3510  0005F8  D7E8               	goto	l462
  3511  0005FA  0A03               	xorlw	3	; case 2
  3512  0005FC  B4D8               	btfsc	status,2,c
  3513  0005FE  D7DE               	goto	l458
  3514  000600  0A01               	xorlw	1	; case 3
  3515  000602  B4D8               	btfsc	status,2,c
  3516  000604  D7DB               	goto	l458
  3517  000606  0A07               	xorlw	7	; case 4
  3518  000608  B4D8               	btfsc	status,2,c
  3519  00060A  D7DB               	goto	l461
  3520  00060C  D7DE               	goto	l462
  3521  00060E                     __end_of_do_I2C_TX_EMPTY:
  3522                           	opt stack 0
  3523                           tosu	equ	0xFFF
  3524                           tosh	equ	0xFFE
  3525                           tosl	equ	0xFFD
  3526                           pclath	equ	0xFFA
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           prodh	equ	0xFF4
  3532                           prodl	equ	0xFF3
  3533                           intcon	equ	0xFF2
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           postdec1	equ	0xFE5
  3537                           fsr1l	equ	0xFE1
  3538                           indf2	equ	0xFDF
  3539                           postinc2	equ	0xFDE
  3540                           fsr2h	equ	0xFDA
  3541                           fsr2l	equ	0xFD9
  3542                           status	equ	0xFD8
  3543                           
  3544 ;; *************** function _mssp1_setIRQ *****************
  3545 ;; Defined at:
  3546 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		None
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    6
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_do_I2C_TX_EMPTY
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text31
  3575  000DC6                     __ptext31:
  3576                           	opt stack 0
  3577  000DC6                     _mssp1_setIRQ:
  3578                           	opt stack 18
  3579                           
  3580                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  3581                           
  3582                           ;incstack = 0
  3583  000DC6  010E               	movlb	14	; () banked
  3584  000DC8  81CD               	bsf	205,0,b	;volatile
  3585                           
  3586                           ; BSR set to: 14
  3587  000DCA  0012               	return		;funcret
  3588  000DCC                     __end_of_mssp1_setIRQ:
  3589                           	opt stack 0
  3590                           tosu	equ	0xFFF
  3591                           tosh	equ	0xFFE
  3592                           tosl	equ	0xFFD
  3593                           pclath	equ	0xFFA
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           prodh	equ	0xFF4
  3599                           prodl	equ	0xFF3
  3600                           intcon	equ	0xFF2
  3601                           postinc0	equ	0xFEE
  3602                           wreg	equ	0xFE8
  3603                           postdec1	equ	0xFE5
  3604                           fsr1l	equ	0xFE1
  3605                           indf2	equ	0xFDF
  3606                           postinc2	equ	0xFDE
  3607                           fsr2h	equ	0xFDA
  3608                           fsr2l	equ	0xFD9
  3609                           status	equ	0xFD8
  3610                           
  3611 ;; *************** function _i2c1_driver_isNACK *****************
  3612 ;; Defined at:
  3613 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;		None               void
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3631 ;;Total ram usage:        1 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:    6
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_do_I2C_TX
  3638 ;;		_i2c_ISR
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text32
  3643  000BE8                     __ptext32:
  3644                           	opt stack 0
  3645  000BE8                     _i2c1_driver_isNACK:
  3646                           	opt stack 19
  3647                           
  3648                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  3649                           
  3650                           ; BSR set to: 14
  3651                           ;incstack = 0
  3652  000BE8  5097               	movf	3991,w,c	;volatile
  3653  000BEA  0BBF               	andlw	-65
  3654  000BEC  0940               	iorlw	64
  3655  000BEE  6E97               	movwf	3991,c	;volatile
  3656  000BF0  3897               	swapf	3991,w,c	;volatile
  3657  000BF2  32E8               	rrcf	wreg,f,c
  3658  000BF4  32E8               	rrcf	wreg,f,c
  3659  000BF6  0B01               	andlw	1
  3660  000BF8  6E46               	movwf	??_i2c1_driver_isNACK& (0+255),c
  3661  000BFA  3046               	rrcf	??_i2c1_driver_isNACK,w,c
  3662  000BFC  0012               	return	
  3663  000BFE                     __end_of_i2c1_driver_isNACK:
  3664                           	opt stack 0
  3665                           tosu	equ	0xFFF
  3666                           tosh	equ	0xFFE
  3667                           tosl	equ	0xFFD
  3668                           pclath	equ	0xFFA
  3669                           tblptru	equ	0xFF8
  3670                           tblptrh	equ	0xFF7
  3671                           tblptrl	equ	0xFF6
  3672                           tablat	equ	0xFF5
  3673                           prodh	equ	0xFF4
  3674                           prodl	equ	0xFF3
  3675                           intcon	equ	0xFF2
  3676                           postinc0	equ	0xFEE
  3677                           wreg	equ	0xFE8
  3678                           postdec1	equ	0xFE5
  3679                           fsr1l	equ	0xFE1
  3680                           indf2	equ	0xFDF
  3681                           postinc2	equ	0xFDE
  3682                           fsr2h	equ	0xFDA
  3683                           fsr2l	equ	0xFD9
  3684                           status	equ	0xFD8
  3685                           
  3686 ;; *************** function _i2c1_driver_TXData *****************
  3687 ;; Defined at:
  3688 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  d               1    wreg     unsigned char 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  d               1   21[COMRAM] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      void 
  3695 ;; Registers used:
  3696 ;;		wreg
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3706 ;;Total ram usage:        1 bytes
  3707 ;; Hardware stack levels used:    1
  3708 ;; Hardware stack levels required when called:    6
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_do_I2C_SEND_ADR_READ
  3713 ;;		_do_I2C_SEND_ADR_WRITE
  3714 ;;		_do_I2C_TX
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text33
  3719  000D7E                     __ptext33:
  3720                           	opt stack 0
  3721  000D7E                     _i2c1_driver_TXData:
  3722                           	opt stack 18
  3723                           
  3724                           ;incstack = 0
  3725                           ;i2c1_driver_TXData@d stored from wreg
  3726  000D7E  6E46               	movwf	i2c1_driver_TXData@d,c
  3727                           
  3728                           ;i2c1_driver.c: 188: SSP1BUF = d;
  3729  000D80  C046  FF92         	movff	i2c1_driver_TXData@d,3986	;volatile
  3730  000D84  0012               	return		;funcret
  3731  000D86                     __end_of_i2c1_driver_TXData:
  3732                           	opt stack 0
  3733                           tosu	equ	0xFFF
  3734                           tosh	equ	0xFFE
  3735                           tosl	equ	0xFFD
  3736                           pclath	equ	0xFFA
  3737                           tblptru	equ	0xFF8
  3738                           tblptrh	equ	0xFF7
  3739                           tblptrl	equ	0xFF6
  3740                           tablat	equ	0xFF5
  3741                           prodh	equ	0xFF4
  3742                           prodl	equ	0xFF3
  3743                           intcon	equ	0xFF2
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           postdec1	equ	0xFE5
  3747                           fsr1l	equ	0xFE1
  3748                           indf2	equ	0xFDF
  3749                           postinc2	equ	0xFDE
  3750                           fsr2h	equ	0xFDA
  3751                           fsr2l	equ	0xFD9
  3752                           status	equ	0xFD8
  3753                           
  3754 ;; *************** function _i2c1_driver_getRXData *****************
  3755 ;; Defined at:
  3756 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      unsigned char 
  3763 ;; Registers used:
  3764 ;;		wreg, status,2
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;Total ram usage:        0 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    6
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_do_I2C_RX
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text34
  3785  000E08                     __ptext34:
  3786                           	opt stack 0
  3787  000E08                     _i2c1_driver_getRXData:
  3788                           	opt stack 18
  3789                           
  3790                           ;i2c1_driver.c: 173: return SSP1BUF;
  3791                           
  3792                           ;incstack = 0
  3793  000E08  5092               	movf	3986,w,c	;volatile
  3794  000E0A  0012               	return	
  3795  000E0C                     __end_of_i2c1_driver_getRXData:
  3796                           	opt stack 0
  3797                           tosu	equ	0xFFF
  3798                           tosh	equ	0xFFE
  3799                           tosl	equ	0xFFD
  3800                           pclath	equ	0xFFA
  3801                           tblptru	equ	0xFF8
  3802                           tblptrh	equ	0xFF7
  3803                           tblptrl	equ	0xFF6
  3804                           tablat	equ	0xFF5
  3805                           prodh	equ	0xFF4
  3806                           prodl	equ	0xFF3
  3807                           intcon	equ	0xFF2
  3808                           postinc0	equ	0xFEE
  3809                           wreg	equ	0xFE8
  3810                           postdec1	equ	0xFE5
  3811                           fsr1l	equ	0xFE1
  3812                           indf2	equ	0xFDF
  3813                           postinc2	equ	0xFDE
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _i2c1_driver_sendNACK *****************
  3819 ;; Defined at:
  3820 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		None
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    6
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_do_I2C_DO_NACK_STOP
  3845 ;;		_do_I2C_DO_NACK_RESTART
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text35
  3850  000DCC                     __ptext35:
  3851                           	opt stack 0
  3852  000DCC                     _i2c1_driver_sendNACK:
  3853                           	opt stack 17
  3854                           
  3855                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  3856                           
  3857                           ;incstack = 0
  3858  000DCC  8A97               	bsf	3991,5,c	;volatile
  3859                           
  3860                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  3861  000DCE  8897               	bsf	3991,4,c	;volatile
  3862  000DD0  0012               	return		;funcret
  3863  000DD2                     __end_of_i2c1_driver_sendNACK:
  3864                           	opt stack 0
  3865                           tosu	equ	0xFFF
  3866                           tosh	equ	0xFFE
  3867                           tosl	equ	0xFFD
  3868                           pclath	equ	0xFFA
  3869                           tblptru	equ	0xFF8
  3870                           tblptrh	equ	0xFF7
  3871                           tblptrl	equ	0xFF6
  3872                           tablat	equ	0xFF5
  3873                           prodh	equ	0xFF4
  3874                           prodl	equ	0xFF3
  3875                           intcon	equ	0xFF2
  3876                           postinc0	equ	0xFEE
  3877                           wreg	equ	0xFE8
  3878                           postdec1	equ	0xFE5
  3879                           fsr1l	equ	0xFE1
  3880                           indf2	equ	0xFDF
  3881                           postinc2	equ	0xFDE
  3882                           fsr2h	equ	0xFDA
  3883                           fsr2l	equ	0xFD9
  3884                           status	equ	0xFD8
  3885                           
  3886 ;; *************** function _i2c1_driver_resetBus *****************
  3887 ;; Defined at:
  3888 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		None
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    6
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_do_I2C_RESET
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text36
  3917  000E3C                     __ptext36:
  3918                           	opt stack 0
  3919  000E3C                     _i2c1_driver_resetBus:
  3920                           	opt stack 18
  3921                           
  3922                           ;incstack = 0
  3923  000E3C  0012               	return		;funcret
  3924  000E3E                     __end_of_i2c1_driver_resetBus:
  3925                           	opt stack 0
  3926                           tosu	equ	0xFFF
  3927                           tosh	equ	0xFFE
  3928                           tosl	equ	0xFFD
  3929                           pclath	equ	0xFFA
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           intcon	equ	0xFF2
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           postdec1	equ	0xFE5
  3940                           fsr1l	equ	0xFE1
  3941                           indf2	equ	0xFDF
  3942                           postinc2	equ	0xFDE
  3943                           fsr2h	equ	0xFDA
  3944                           fsr2l	equ	0xFD9
  3945                           status	equ	0xFD8
  3946                           
  3947 ;; *************** function _i2c1_driver_startRX *****************
  3948 ;; Defined at:
  3949 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		None
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;Total ram usage:        0 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    6
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_do_I2C_RCEN
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text37
  3978  000E0C                     __ptext37:
  3979                           	opt stack 0
  3980  000E0C                     _i2c1_driver_startRX:
  3981                           	opt stack 18
  3982                           
  3983                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  3984                           
  3985                           ;incstack = 0
  3986  000E0C  8697               	bsf	3991,3,c	;volatile
  3987  000E0E  0012               	return		;funcret
  3988  000E10                     __end_of_i2c1_driver_startRX:
  3989                           	opt stack 0
  3990                           tosu	equ	0xFFF
  3991                           tosh	equ	0xFFE
  3992                           tosl	equ	0xFFD
  3993                           pclath	equ	0xFFA
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           prodh	equ	0xFF4
  3999                           prodl	equ	0xFF3
  4000                           intcon	equ	0xFF2
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           postdec1	equ	0xFE5
  4004                           fsr1l	equ	0xFE1
  4005                           indf2	equ	0xFDF
  4006                           postinc2	equ	0xFDE
  4007                           fsr2h	equ	0xFDA
  4008                           fsr2l	equ	0xFD9
  4009                           status	equ	0xFD8
  4010                           
  4011 ;; *************** function _rdBlkRegCompleteHandler *****************
  4012 ;; Defined at:
  4013 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  p               2   10[BANK0 ] PTR void 
  4016 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4017 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      enum E97
  4022 ;; Registers used:
  4023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4032 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4033 ;;Total ram usage:        2 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; Hardware stack levels required when called:    8
  4036 ;; This function calls:
  4037 ;;		_i2c_setBuffer
  4038 ;;		_i2c_setDataCompleteCallback
  4039 ;; This function is called by:
  4040 ;;		_i2c_readDataBlock
  4041 ;;		_do_I2C_DO_ADDRESS_NACK
  4042 ;;		_do_I2C_TX
  4043 ;;		_do_I2C_RX
  4044 ;;		_do_I2C_TX_EMPTY
  4045 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4046 ;;		i2_do_I2C_TX
  4047 ;;		i2_do_I2C_RX
  4048 ;;		i2_do_I2C_TX_EMPTY
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text38
  4053  0006B4                     __ptext38:
  4054                           	opt stack 0
  4055  0006B4                     _rdBlkRegCompleteHandler:
  4056                           	opt stack 0
  4057                           
  4058                           ;Skip over the trampoline to the duplicate function for level 2
  4059  0006B4  B24A               	btfsc	btemp,1,c
  4060  0006B6  EFED  F003         	goto	i2_rdBlkRegCompleteHandler
  4061  0006BA                     _rdBlkRegCompleteHandler$intlevel0:
  4062                           	opt stack 16
  4063                           
  4064                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  4065                           
  4066                           ;incstack = 0
  4067  0006BA  0100               	movlb	0	; () banked
  4068  0006BC  EE20 F002          	lfsr	2,2
  4069  0006C0  519A               	movf	rdBlkRegCompleteHandler@p& (0+255),w,b
  4070  0006C2  26D9               	addwf	fsr2l,f,c
  4071  0006C4  519B               	movf	(rdBlkRegCompleteHandler@p+1)& (0+255),w,b
  4072  0006C6  22DA               	addwfc	fsr2h,f,c
  4073  0006C8  CFDE F046          	movff	postinc2,i2c_setBuffer@buffer
  4074  0006CC  CFDD F047          	movff	postdec2,i2c_setBuffer@buffer+1
  4075  0006D0  C09A  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
  4076  0006D4  C09B  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
  4077  0006D8  CFDE F048          	movff	postinc2,i2c_setBuffer@bufferSize
  4078  0006DC  CFDD F049          	movff	postdec2,i2c_setBuffer@bufferSize+1
  4079  0006E0  ECBA  F005         	call	_i2c_setBuffer	;wreg free
  4080                           
  4081                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  4082  0006E4  0E00               	movlw	0
  4083  0006E6  0100               	movlb	0	; () banked
  4084  0006E8  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4085  0006EA  0E00               	movlw	0
  4086  0006EC  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4087  0006EE  0E00               	movlw	0
  4088  0006F0  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4089  0006F2  0E00               	movlw	0
  4090  0006F4  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4091  0006F6  0E00               	movlw	0
  4092  0006F8  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4093  0006FA  EC76  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4094                           
  4095                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  4096  0006FE  0E02               	movlw	2
  4097  000700  0012               	return	
  4098  000702                     __end_of_rdBlkRegCompleteHandler:
  4099                           	opt stack 0
  4100                           tosu	equ	0xFFF
  4101                           tosh	equ	0xFFE
  4102                           tosl	equ	0xFFD
  4103                           pclath	equ	0xFFA
  4104                           tblptru	equ	0xFF8
  4105                           tblptrh	equ	0xFF7
  4106                           tblptrl	equ	0xFF6
  4107                           tablat	equ	0xFF5
  4108                           prodh	equ	0xFF4
  4109                           prodl	equ	0xFF3
  4110                           intcon	equ	0xFF2
  4111                           postinc0	equ	0xFEE
  4112                           wreg	equ	0xFE8
  4113                           postdec1	equ	0xFE5
  4114                           fsr1l	equ	0xFE1
  4115                           indf2	equ	0xFDF
  4116                           postinc2	equ	0xFDE
  4117                           postdec2	equ	0xFDD
  4118                           fsr2h	equ	0xFDA
  4119                           fsr2l	equ	0xFD9
  4120                           status	equ	0xFD8
  4121                           
  4122 ;; *************** function _rd2RegCompleteHandler *****************
  4123 ;; Defined at:
  4124 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  p               2   10[BANK0 ] PTR void 
  4127 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4128 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      enum E97
  4133 ;; Registers used:
  4134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;Total ram usage:        2 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    8
  4147 ;; This function calls:
  4148 ;;		_i2c_setBuffer
  4149 ;;		_i2c_setDataCompleteCallback
  4150 ;; This function is called by:
  4151 ;;		_i2c_read2ByteRegister
  4152 ;;		_do_I2C_DO_ADDRESS_NACK
  4153 ;;		_do_I2C_TX
  4154 ;;		_do_I2C_RX
  4155 ;;		_do_I2C_TX_EMPTY
  4156 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4157 ;;		i2_do_I2C_TX
  4158 ;;		i2_do_I2C_RX
  4159 ;;		i2_do_I2C_TX_EMPTY
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text39
  4164  00085E                     __ptext39:
  4165                           	opt stack 0
  4166  00085E                     _rd2RegCompleteHandler:
  4167                           	opt stack 0
  4168                           
  4169                           ;Skip over the trampoline to the duplicate function for level 2
  4170  00085E  B24A               	btfsc	btemp,1,c
  4171  000860  EF08  F005         	goto	i2_rd2RegCompleteHandler
  4172  000864                     _rd2RegCompleteHandler$intlevel0:
  4173                           	opt stack 16
  4174                           
  4175                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  4176                           
  4177                           ;incstack = 0
  4178  000864  C09A  F046         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
  4179  000868  C09B  F047         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4180  00086C  0E00               	movlw	0
  4181  00086E  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4182  000870  0E02               	movlw	2
  4183  000872  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4184  000874  ECBA  F005         	call	_i2c_setBuffer	;wreg free
  4185                           
  4186                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  4187  000878  0E00               	movlw	0
  4188  00087A  0100               	movlb	0	; () banked
  4189  00087C  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4190  00087E  0E00               	movlw	0
  4191  000880  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4192  000882  0E00               	movlw	0
  4193  000884  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4194  000886  0E00               	movlw	0
  4195  000888  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4196  00088A  0E00               	movlw	0
  4197  00088C  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4198  00088E  EC76  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4199                           
  4200                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  4201  000892  0E02               	movlw	2
  4202  000894  0012               	return	
  4203  000896                     __end_of_rd2RegCompleteHandler:
  4204                           	opt stack 0
  4205                           tosu	equ	0xFFF
  4206                           tosh	equ	0xFFE
  4207                           tosl	equ	0xFFD
  4208                           pclath	equ	0xFFA
  4209                           tblptru	equ	0xFF8
  4210                           tblptrh	equ	0xFF7
  4211                           tblptrl	equ	0xFF6
  4212                           tablat	equ	0xFF5
  4213                           prodh	equ	0xFF4
  4214                           prodl	equ	0xFF3
  4215                           intcon	equ	0xFF2
  4216                           postinc0	equ	0xFEE
  4217                           wreg	equ	0xFE8
  4218                           postdec1	equ	0xFE5
  4219                           fsr1l	equ	0xFE1
  4220                           indf2	equ	0xFDF
  4221                           postinc2	equ	0xFDE
  4222                           postdec2	equ	0xFDD
  4223                           fsr2h	equ	0xFDA
  4224                           fsr2l	equ	0xFD9
  4225                           status	equ	0xFD8
  4226                           
  4227 ;; *************** function _rd1RegCompleteHandler *****************
  4228 ;; Defined at:
  4229 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  p               2   10[BANK0 ] PTR void 
  4232 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4233 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      enum E97
  4238 ;; Registers used:
  4239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4245 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4248 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4249 ;;Total ram usage:        2 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    8
  4252 ;; This function calls:
  4253 ;;		_i2c_setBuffer
  4254 ;;		_i2c_setDataCompleteCallback
  4255 ;; This function is called by:
  4256 ;;		_i2c_read1ByteRegister
  4257 ;;		_do_I2C_DO_ADDRESS_NACK
  4258 ;;		_do_I2C_TX
  4259 ;;		_do_I2C_RX
  4260 ;;		_do_I2C_TX_EMPTY
  4261 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4262 ;;		i2_do_I2C_TX
  4263 ;;		i2_do_I2C_RX
  4264 ;;		i2_do_I2C_TX_EMPTY
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text40
  4269  000896                     __ptext40:
  4270                           	opt stack 0
  4271  000896                     _rd1RegCompleteHandler:
  4272                           	opt stack 0
  4273                           
  4274                           ;Skip over the trampoline to the duplicate function for level 2
  4275  000896  B24A               	btfsc	btemp,1,c
  4276  000898  EF20  F005         	goto	i2_rd1RegCompleteHandler
  4277  00089C                     _rd1RegCompleteHandler$intlevel0:
  4278                           	opt stack 16
  4279                           
  4280                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  4281                           
  4282                           ;incstack = 0
  4283  00089C  C09A  F046         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
  4284  0008A0  C09B  F047         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4285  0008A4  0E00               	movlw	0
  4286  0008A6  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4287  0008A8  0E01               	movlw	1
  4288  0008AA  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4289  0008AC  ECBA  F005         	call	_i2c_setBuffer	;wreg free
  4290                           
  4291                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  4292  0008B0  0E00               	movlw	0
  4293  0008B2  0100               	movlb	0	; () banked
  4294  0008B4  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4295  0008B6  0E00               	movlw	0
  4296  0008B8  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4297  0008BA  0E00               	movlw	0
  4298  0008BC  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4299  0008BE  0E00               	movlw	0
  4300  0008C0  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4301  0008C2  0E00               	movlw	0
  4302  0008C4  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4303  0008C6  EC76  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4304                           
  4305                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  4306  0008CA  0E02               	movlw	2
  4307  0008CC  0012               	return	
  4308  0008CE                     __end_of_rd1RegCompleteHandler:
  4309                           	opt stack 0
  4310                           tosu	equ	0xFFF
  4311                           tosh	equ	0xFFE
  4312                           tosl	equ	0xFFD
  4313                           pclath	equ	0xFFA
  4314                           tblptru	equ	0xFF8
  4315                           tblptrh	equ	0xFF7
  4316                           tblptrl	equ	0xFF6
  4317                           tablat	equ	0xFF5
  4318                           prodh	equ	0xFF4
  4319                           prodl	equ	0xFF3
  4320                           intcon	equ	0xFF2
  4321                           postinc0	equ	0xFEE
  4322                           wreg	equ	0xFE8
  4323                           postdec1	equ	0xFE5
  4324                           fsr1l	equ	0xFE1
  4325                           indf2	equ	0xFDF
  4326                           postinc2	equ	0xFDE
  4327                           postdec2	equ	0xFDD
  4328                           fsr2h	equ	0xFDA
  4329                           fsr2l	equ	0xFD9
  4330                           status	equ	0xFD8
  4331                           
  4332 ;; *************** function _wr1RegCompleteHandler *****************
  4333 ;; Defined at:
  4334 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  p               2   10[BANK0 ] PTR void 
  4337 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4338 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      enum E97
  4343 ;; Registers used:
  4344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4353 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4354 ;;Total ram usage:        2 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    8
  4357 ;; This function calls:
  4358 ;;		_i2c_setBuffer
  4359 ;;		_i2c_setDataCompleteCallback
  4360 ;; This function is called by:
  4361 ;;		_i2c_write1ByteRegister
  4362 ;;		_do_I2C_DO_ADDRESS_NACK
  4363 ;;		_do_I2C_TX
  4364 ;;		_do_I2C_RX
  4365 ;;		_do_I2C_TX_EMPTY
  4366 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4367 ;;		i2_do_I2C_TX
  4368 ;;		i2_do_I2C_RX
  4369 ;;		i2_do_I2C_TX_EMPTY
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text41
  4374  0008CE                     __ptext41:
  4375                           	opt stack 0
  4376  0008CE                     _wr1RegCompleteHandler:
  4377                           	opt stack 0
  4378                           
  4379                           ;Skip over the trampoline to the duplicate function for level 2
  4380  0008CE  B24A               	btfsc	btemp,1,c
  4381  0008D0  EF38  F005         	goto	i2_wr1RegCompleteHandler
  4382  0008D4                     _wr1RegCompleteHandler$intlevel0:
  4383                           	opt stack 16
  4384                           
  4385                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  4386                           
  4387                           ;incstack = 0
  4388  0008D4  C09A  F046         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
  4389  0008D8  C09B  F047         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4390  0008DC  0E00               	movlw	0
  4391  0008DE  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4392  0008E0  0E01               	movlw	1
  4393  0008E2  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4394  0008E4  ECBA  F005         	call	_i2c_setBuffer	;wreg free
  4395                           
  4396                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  4397  0008E8  0E00               	movlw	0
  4398  0008EA  0100               	movlb	0	; () banked
  4399  0008EC  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4400  0008EE  0E00               	movlw	0
  4401  0008F0  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4402  0008F2  0E00               	movlw	0
  4403  0008F4  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4404  0008F6  0E00               	movlw	0
  4405  0008F8  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4406  0008FA  0E00               	movlw	0
  4407  0008FC  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4408  0008FE  EC76  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4409                           
  4410                           ;i2c_simple_master.c: 35: return i2c_continue;
  4411  000902  0E04               	movlw	4
  4412  000904  0012               	return	
  4413  000906                     __end_of_wr1RegCompleteHandler:
  4414                           	opt stack 0
  4415                           tosu	equ	0xFFF
  4416                           tosh	equ	0xFFE
  4417                           tosl	equ	0xFFD
  4418                           pclath	equ	0xFFA
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           intcon	equ	0xFF2
  4426                           postinc0	equ	0xFEE
  4427                           wreg	equ	0xFE8
  4428                           postdec1	equ	0xFE5
  4429                           fsr1l	equ	0xFE1
  4430                           indf2	equ	0xFDF
  4431                           postinc2	equ	0xFDE
  4432                           postdec2	equ	0xFDD
  4433                           fsr2h	equ	0xFDA
  4434                           fsr2l	equ	0xFD9
  4435                           status	equ	0xFD8
  4436                           
  4437 ;; *************** function _i2c_restartWrite *****************
  4438 ;; Defined at:
  4439 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  p               2   10[BANK0 ] PTR void 
  4442 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4443 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;		None
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  1    wreg      enum E96
  4448 ;; Registers used:
  4449 ;;		wreg
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4458 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4459 ;;Total ram usage:        2 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    6
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_i2c_writeNBytes
  4466 ;;		_i2c_write1ByteRegister
  4467 ;;		_i2c_read1ByteRegister
  4468 ;;		_i2c_read2ByteRegister
  4469 ;;		_i2c_write2ByteRegister
  4470 ;;		_i2c_readDataBlock
  4471 ;;		_do_I2C_DO_ADDRESS_NACK
  4472 ;;		_do_I2C_TX
  4473 ;;		_do_I2C_RX
  4474 ;;		_do_I2C_TX_EMPTY
  4475 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4476 ;;		i2_do_I2C_TX
  4477 ;;		i2_do_I2C_RX
  4478 ;;		i2_do_I2C_TX_EMPTY
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text42
  4483  000D3C                     __ptext42:
  4484                           	opt stack 0
  4485  000D3C                     _i2c_restartWrite:
  4486                           	opt stack 0
  4487                           
  4488                           ;Skip over the trampoline to the duplicate function for level 2
  4489  000D3C  B24A               	btfsc	btemp,1,c
  4490  000D3E  EF14  F007         	goto	i2_i2c_restartWrite
  4491  000D42                     _i2c_restartWrite$intlevel0:
  4492                           	opt stack 18
  4493                           
  4494                           ;i2c_types.c: 37: return i2c_restart_write;
  4495                           
  4496                           ;incstack = 0
  4497  000D42  0E03               	movlw	3
  4498  000D44  0012               	return	
  4499  000D46                     __end_of_i2c_restartWrite:
  4500                           	opt stack 0
  4501                           tosu	equ	0xFFF
  4502                           tosh	equ	0xFFE
  4503                           tosl	equ	0xFFD
  4504                           pclath	equ	0xFFA
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           prodh	equ	0xFF4
  4510                           prodl	equ	0xFF3
  4511                           intcon	equ	0xFF2
  4512                           postinc0	equ	0xFEE
  4513                           wreg	equ	0xFE8
  4514                           postdec1	equ	0xFE5
  4515                           fsr1l	equ	0xFE1
  4516                           indf2	equ	0xFDF
  4517                           postinc2	equ	0xFDE
  4518                           postdec2	equ	0xFDD
  4519                           fsr2h	equ	0xFDA
  4520                           fsr2l	equ	0xFD9
  4521                           status	equ	0xFD8
  4522                           
  4523 ;; *************** function _returnReset *****************
  4524 ;; Defined at:
  4525 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  p               2   10[BANK0 ] PTR void 
  4528 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4529 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      enum E11790
  4534 ;; Registers used:
  4535 ;;		wreg
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;Total ram usage:        2 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    6
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_i2c_open
  4552 ;;		_do_I2C_DO_ADDRESS_NACK
  4553 ;;		_do_I2C_TX
  4554 ;;		_do_I2C_RX
  4555 ;;		_do_I2C_TX_EMPTY
  4556 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4557 ;;		i2_do_I2C_TX
  4558 ;;		i2_do_I2C_RX
  4559 ;;		i2_do_I2C_TX_EMPTY
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text43
  4564  000D46                     __ptext43:
  4565                           	opt stack 0
  4566  000D46                     _returnReset:
  4567                           	opt stack 0
  4568                           
  4569                           ;Skip over the trampoline to the duplicate function for level 2
  4570  000D46  B24A               	btfsc	btemp,1,c
  4571  000D48  EF16  F007         	goto	i2_returnReset
  4572  000D4C                     _returnReset$intlevel0:
  4573                           	opt stack 18
  4574                           
  4575                           ;i2c_master.c: 450: return i2c_reset_link;
  4576                           
  4577                           ;incstack = 0
  4578  000D4C  0E05               	movlw	5
  4579  000D4E  0012               	return	
  4580  000D50                     __end_of_returnReset:
  4581                           	opt stack 0
  4582                           tosu	equ	0xFFF
  4583                           tosh	equ	0xFFE
  4584                           tosl	equ	0xFFD
  4585                           pclath	equ	0xFFA
  4586                           tblptru	equ	0xFF8
  4587                           tblptrh	equ	0xFF7
  4588                           tblptrl	equ	0xFF6
  4589                           tablat	equ	0xFF5
  4590                           prodh	equ	0xFF4
  4591                           prodl	equ	0xFF3
  4592                           intcon	equ	0xFF2
  4593                           postinc0	equ	0xFEE
  4594                           wreg	equ	0xFE8
  4595                           postdec1	equ	0xFE5
  4596                           fsr1l	equ	0xFE1
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function _returnStop *****************
  4605 ;; Defined at:
  4606 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  p               2   10[BANK0 ] PTR void 
  4609 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4610 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;		None
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  1    wreg      enum E11790
  4615 ;; Registers used:
  4616 ;;		wreg
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4622 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4626 ;;Total ram usage:        2 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    6
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_i2c_open
  4633 ;;		_setCallBack
  4634 ;;		_do_I2C_DO_ADDRESS_NACK
  4635 ;;		_do_I2C_TX
  4636 ;;		_do_I2C_RX
  4637 ;;		_do_I2C_TX_EMPTY
  4638 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4639 ;;		i2_do_I2C_TX
  4640 ;;		i2_do_I2C_RX
  4641 ;;		i2_do_I2C_TX_EMPTY
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text44
  4646  000D50                     __ptext44:
  4647                           	opt stack 0
  4648  000D50                     _returnStop:
  4649                           	opt stack 0
  4650                           
  4651                           ;Skip over the trampoline to the duplicate function for level 2
  4652  000D50  B24A               	btfsc	btemp,1,c
  4653  000D52  EF18  F007         	goto	i2_returnStop
  4654  000D56                     _returnStop$intlevel0:
  4655                           	opt stack 18
  4656                           
  4657                           ;i2c_master.c: 445: return i2c_stop;
  4658                           
  4659                           ;incstack = 0
  4660  000D56  0E01               	movlw	1
  4661  000D58  0012               	return	
  4662  000D5A                     __end_of_returnStop:
  4663                           	opt stack 0
  4664                           tosu	equ	0xFFF
  4665                           tosh	equ	0xFFE
  4666                           tosl	equ	0xFFD
  4667                           pclath	equ	0xFFA
  4668                           tblptru	equ	0xFF8
  4669                           tblptrh	equ	0xFF7
  4670                           tblptrl	equ	0xFF6
  4671                           tablat	equ	0xFF5
  4672                           prodh	equ	0xFF4
  4673                           prodl	equ	0xFF3
  4674                           intcon	equ	0xFF2
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           postdec1	equ	0xFE5
  4678                           fsr1l	equ	0xFE1
  4679                           indf2	equ	0xFDF
  4680                           postinc2	equ	0xFDE
  4681                           postdec2	equ	0xFDD
  4682                           fsr2h	equ	0xFDA
  4683                           fsr2l	equ	0xFD9
  4684                           status	equ	0xFD8
  4685                           
  4686 ;; *************** function _wr2RegCompleteHandler *****************
  4687 ;; Defined at:
  4688 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  p               2   10[BANK0 ] PTR void 
  4691 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4692 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;		None
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      enum E97
  4697 ;; Registers used:
  4698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4707 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4708 ;;Total ram usage:        2 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    8
  4711 ;; This function calls:
  4712 ;;		_i2c_setBuffer
  4713 ;;		_i2c_setDataCompleteCallback
  4714 ;; This function is called by:
  4715 ;;		_i2c_write2ByteRegister
  4716 ;;		_do_I2C_DO_ADDRESS_NACK
  4717 ;;		_do_I2C_TX
  4718 ;;		_do_I2C_RX
  4719 ;;		_do_I2C_TX_EMPTY
  4720 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4721 ;;		i2_do_I2C_TX
  4722 ;;		i2_do_I2C_RX
  4723 ;;		i2_do_I2C_TX_EMPTY
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text45
  4728  000906                     __ptext45:
  4729                           	opt stack 0
  4730  000906                     _wr2RegCompleteHandler:
  4731                           	opt stack 0
  4732                           
  4733                           ;Skip over the trampoline to the duplicate function for level 2
  4734  000906  B24A               	btfsc	btemp,1,c
  4735  000908  EF50  F005         	goto	i2_wr2RegCompleteHandler
  4736  00090C                     _wr2RegCompleteHandler$intlevel0:
  4737                           	opt stack 16
  4738                           
  4739                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  4740                           
  4741                           ;incstack = 0
  4742  00090C  C09A  F046         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
  4743  000910  C09B  F047         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4744  000914  0E00               	movlw	0
  4745  000916  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4746  000918  0E02               	movlw	2
  4747  00091A  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4748  00091C  ECBA  F005         	call	_i2c_setBuffer	;wreg free
  4749                           
  4750                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  4751  000920  0E00               	movlw	0
  4752  000922  0100               	movlb	0	; () banked
  4753  000924  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4754  000926  0E00               	movlw	0
  4755  000928  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4756  00092A  0E00               	movlw	0
  4757  00092C  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4758  00092E  0E00               	movlw	0
  4759  000930  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4760  000932  0E00               	movlw	0
  4761  000934  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4762  000936  EC76  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4763                           
  4764                           ;i2c_simple_master.c: 114: return i2c_continue;
  4765  00093A  0E04               	movlw	4
  4766  00093C  0012               	return	
  4767  00093E                     __end_of_wr2RegCompleteHandler:
  4768                           	opt stack 0
  4769                           tosu	equ	0xFFF
  4770                           tosh	equ	0xFFE
  4771                           tosl	equ	0xFFD
  4772                           pclath	equ	0xFFA
  4773                           tblptru	equ	0xFF8
  4774                           tblptrh	equ	0xFF7
  4775                           tblptrl	equ	0xFF6
  4776                           tablat	equ	0xFF5
  4777                           prodh	equ	0xFF4
  4778                           prodl	equ	0xFF3
  4779                           intcon	equ	0xFF2
  4780                           postinc0	equ	0xFEE
  4781                           wreg	equ	0xFE8
  4782                           postdec1	equ	0xFE5
  4783                           fsr1l	equ	0xFE1
  4784                           indf2	equ	0xFDF
  4785                           postinc2	equ	0xFDE
  4786                           postdec2	equ	0xFDD
  4787                           fsr2h	equ	0xFDA
  4788                           fsr2l	equ	0xFD9
  4789                           status	equ	0xFD8
  4790                           
  4791 ;; *************** function _i2c_setDataCompleteCallback *****************
  4792 ;; Defined at:
  4793 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;  cb              3    5[BANK0 ] PTR FTN(PTR void ,)enum 
  4796 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4797 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  4798 ;;  p               2    8[BANK0 ] PTR void 
  4799 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4800 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4812 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;Total ram usage:        5 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    7
  4819 ;; This function calls:
  4820 ;;		_setCallBack
  4821 ;; This function is called by:
  4822 ;;		_wr1RegCompleteHandler
  4823 ;;		_rd1RegCompleteHandler
  4824 ;;		_rd2RegCompleteHandler
  4825 ;;		_wr2RegCompleteHandler
  4826 ;;		_rdBlkRegCompleteHandler
  4827 ;;		_i2c_write1ByteRegister
  4828 ;;		_i2c_read1ByteRegister
  4829 ;;		_i2c_read2ByteRegister
  4830 ;;		_i2c_write2ByteRegister
  4831 ;;		_i2c_readDataBlock
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text46
  4836  000AEC                     __ptext46:
  4837                           	opt stack 0
  4838  000AEC                     _i2c_setDataCompleteCallback:
  4839                           	opt stack 16
  4840                           
  4841                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  4842                           
  4843                           ;incstack = 0
  4844  000AEC  C095  F090         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
  4845  000AF0  C096  F091         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
  4846  000AF4  C097  F092         	movff	i2c_setDataCompleteCallback@cb+2,setCallBack@cb+2
  4847  000AF8  C098  F093         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
  4848  000AFC  C099  F094         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
  4849  000B00  0E00               	movlw	0
  4850  000B02  ECAE  F001         	call	_setCallBack
  4851  000B06  0012               	return		;funcret
  4852  000B08                     __end_of_i2c_setDataCompleteCallback:
  4853                           	opt stack 0
  4854                           tosu	equ	0xFFF
  4855                           tosh	equ	0xFFE
  4856                           tosl	equ	0xFFD
  4857                           pclath	equ	0xFFA
  4858                           tblptru	equ	0xFF8
  4859                           tblptrh	equ	0xFF7
  4860                           tblptrl	equ	0xFF6
  4861                           tablat	equ	0xFF5
  4862                           prodh	equ	0xFF4
  4863                           prodl	equ	0xFF3
  4864                           intcon	equ	0xFF2
  4865                           postinc0	equ	0xFEE
  4866                           wreg	equ	0xFE8
  4867                           postdec1	equ	0xFE5
  4868                           fsr1l	equ	0xFE1
  4869                           indf2	equ	0xFDF
  4870                           postinc2	equ	0xFDE
  4871                           postdec2	equ	0xFDD
  4872                           fsr2h	equ	0xFDA
  4873                           fsr2l	equ	0xFD9
  4874                           status	equ	0xFD8
  4875                           
  4876 ;; *************** function _setCallBack *****************
  4877 ;; Defined at:
  4878 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  idx             1    wreg     enum E11974
  4881 ;;  cb              3    0[BANK0 ] PTR FTN(PTR void ,)enum 
  4882 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4883 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  4884 ;;  p               2    3[BANK0 ] PTR void 
  4885 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4886 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  idx             1   21[COMRAM] enum E11974
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4898 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4901 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4902 ;;Total ram usage:        6 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    6
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_i2c_setDataCompleteCallback
  4909 ;;		_i2c_setAddressNACKCallback
  4910 ;;		_i2c_setWriteCollisionCallback
  4911 ;;		_i2c_setDataNACKCallback
  4912 ;;		_i2c_setTimeOutCallback
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text47
  4917  00035C                     __ptext47:
  4918                           	opt stack 0
  4919  00035C                     _setCallBack:
  4920                           	opt stack 22
  4921                           
  4922                           ;incstack = 0
  4923                           ;setCallBack@idx stored from wreg
  4924  00035C  6E46               	movwf	setCallBack@idx,c
  4925                           
  4926                           ;i2c_master.c: 455: if(cb)
  4927  00035E  0100               	movlb	0	; () banked
  4928  000360  5190               	movf	setCallBack@cb& (0+255),w,b
  4929  000362  1191               	iorwf	(setCallBack@cb+1)& (0+255),w,b
  4930  000364  1192               	iorwf	(setCallBack@cb+2)& (0+255),w,b
  4931  000366  B4D8               	btfsc	status,2,c
  4932  000368  D01B               	goto	l482
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;i2c_master.c: 456: {
  4936                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  4937  00036A  5046               	movf	setCallBack@idx,w,c
  4938  00036C  0D03               	mullw	3
  4939  00036E  0E0D               	movlw	low (_i2c_status+12)
  4940  000370  24F3               	addwf	prodl,w,c
  4941  000372  6ED9               	movwf	fsr2l,c
  4942  000374  0E00               	movlw	high (_i2c_status+12)
  4943  000376  20F4               	addwfc	prodh,w,c
  4944  000378  6EDA               	movwf	fsr2h,c
  4945  00037A  C090  FFDE         	movff	setCallBack@cb,postinc2
  4946  00037E  C091  FFDE         	movff	setCallBack@cb+1,postinc2
  4947  000382  C092  FFDE         	movff	setCallBack@cb+2,postinc2
  4948                           
  4949                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  4950  000386  5046               	movf	setCallBack@idx,w,c
  4951  000388  0D02               	mullw	2
  4952  00038A  0E1F               	movlw	low (_i2c_status+30)
  4953  00038C  24F3               	addwf	prodl,w,c
  4954  00038E  6ED9               	movwf	fsr2l,c
  4955  000390  0E00               	movlw	high (_i2c_status+30)
  4956  000392  20F4               	addwfc	prodh,w,c
  4957  000394  6EDA               	movwf	fsr2h,c
  4958  000396  C093  FFDE         	movff	setCallBack@p,postinc2
  4959  00039A  C094  FFDD         	movff	setCallBack@p+1,postdec2
  4960                           
  4961                           ;i2c_master.c: 459: }
  4962  00039E  0012               	return	
  4963  0003A0                     l482:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;i2c_master.c: 460: else
  4967                           ;i2c_master.c: 461: {
  4968                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  4969                           
  4970                           ; BSR set to: 0
  4971  0003A0  5046               	movf	setCallBack@idx,w,c
  4972  0003A2  0D03               	mullw	3
  4973  0003A4  0E0D               	movlw	low (_i2c_status+12)
  4974  0003A6  24F3               	addwf	prodl,w,c
  4975  0003A8  6ED9               	movwf	fsr2l,c
  4976  0003AA  0E00               	movlw	high (_i2c_status+12)
  4977  0003AC  20F4               	addwfc	prodh,w,c
  4978  0003AE  6EDA               	movwf	fsr2h,c
  4979  0003B0  0E50               	movlw	low _returnStop
  4980  0003B2  6EDE               	movwf	postinc2,c
  4981  0003B4  0E0D               	movlw	high _returnStop
  4982  0003B6  6EDE               	movwf	postinc2,c
  4983  0003B8  0E00               	movlw	low (_returnStop shr (0+16))
  4984  0003BA  6EDE               	movwf	postinc2,c
  4985                           
  4986                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  4987  0003BC  5046               	movf	setCallBack@idx,w,c
  4988  0003BE  0D02               	mullw	2
  4989  0003C0  0E1F               	movlw	low (_i2c_status+30)
  4990  0003C2  24F3               	addwf	prodl,w,c
  4991  0003C4  6ED9               	movwf	fsr2l,c
  4992  0003C6  0E00               	movlw	high (_i2c_status+30)
  4993  0003C8  20F4               	addwfc	prodh,w,c
  4994  0003CA  6EDA               	movwf	fsr2h,c
  4995  0003CC  0E00               	movlw	0
  4996  0003CE  6EDE               	movwf	postinc2,c
  4997  0003D0  0E00               	movlw	0
  4998  0003D2  6EDD               	movwf	postdec2,c
  4999  0003D4  0012               	return	
  5000  0003D6                     __end_of_setCallBack:
  5001                           	opt stack 0
  5002                           tosu	equ	0xFFF
  5003                           tosh	equ	0xFFE
  5004                           tosl	equ	0xFFD
  5005                           pclath	equ	0xFFA
  5006                           tblptru	equ	0xFF8
  5007                           tblptrh	equ	0xFF7
  5008                           tblptrl	equ	0xFF6
  5009                           tablat	equ	0xFF5
  5010                           prodh	equ	0xFF4
  5011                           prodl	equ	0xFF3
  5012                           intcon	equ	0xFF2
  5013                           postinc0	equ	0xFEE
  5014                           wreg	equ	0xFE8
  5015                           postdec1	equ	0xFE5
  5016                           fsr1l	equ	0xFE1
  5017                           indf2	equ	0xFDF
  5018                           postinc2	equ	0xFDE
  5019                           postdec2	equ	0xFDD
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function _i2c_setBuffer *****************
  5025 ;; Defined at:
  5026 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  buffer          2   21[COMRAM] PTR void 
  5029 ;;		 -> main@rec_1229(1), main@rec(1), main@data(2), i2c_readDataBlock@reg(1), 
  5030 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
  5031 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegist
      +er@reg(1), 
  5032 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5033 ;;  bufferSize      2   23[COMRAM] unsigned int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5049 ;;Total ram usage:        4 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    6
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_wr1RegCompleteHandler
  5056 ;;		_i2c_writeNBytes
  5057 ;;		_rd1RegCompleteHandler
  5058 ;;		_rd2RegCompleteHandler
  5059 ;;		_wr2RegCompleteHandler
  5060 ;;		_rdBlkRegCompleteHandler
  5061 ;;		_i2c_readNBytes
  5062 ;;		_i2c_write1ByteRegister
  5063 ;;		_i2c_read1ByteRegister
  5064 ;;		_i2c_read2ByteRegister
  5065 ;;		_i2c_write2ByteRegister
  5066 ;;		_i2c_readDataBlock
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text48
  5071  000B74                     __ptext48:
  5072                           	opt stack 0
  5073  000B74                     _i2c_setBuffer:
  5074                           	opt stack 23
  5075                           
  5076                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;incstack = 0
  5080  000B74  A401               	btfss	_i2c_status,2,c
  5081  000B76  0012               	return	
  5082                           
  5083                           ;i2c_master.c: 187: {
  5084                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  5085  000B78  C046  F003         	movff	i2c_setBuffer@buffer,_i2c_status+2
  5086  000B7C  C047  F004         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
  5087                           
  5088                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  5089  000B80  C048  F005         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
  5090  000B84  C049  F006         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
  5091                           
  5092                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  5093  000B88  9401               	bcf	_i2c_status,2,c
  5094  000B8A  0012               	return	
  5095  000B8C                     __end_of_i2c_setBuffer:
  5096                           	opt stack 0
  5097                           tosu	equ	0xFFF
  5098                           tosh	equ	0xFFE
  5099                           tosl	equ	0xFFD
  5100                           pclath	equ	0xFFA
  5101                           tblptru	equ	0xFF8
  5102                           tblptrh	equ	0xFF7
  5103                           tblptrl	equ	0xFF6
  5104                           tablat	equ	0xFF5
  5105                           prodh	equ	0xFF4
  5106                           prodl	equ	0xFF3
  5107                           intcon	equ	0xFF2
  5108                           postinc0	equ	0xFEE
  5109                           wreg	equ	0xFE8
  5110                           postdec1	equ	0xFE5
  5111                           fsr1l	equ	0xFE1
  5112                           indf2	equ	0xFDF
  5113                           postinc2	equ	0xFDE
  5114                           postdec2	equ	0xFDD
  5115                           fsr2h	equ	0xFDA
  5116                           fsr2l	equ	0xFD9
  5117                           status	equ	0xFD8
  5118                           
  5119 ;; *************** function _i2c1_driver_stop *****************
  5120 ;; Defined at:
  5121 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;		None
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		None
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5139 ;;Total ram usage:        0 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    6
  5142 ;; This function calls:
  5143 ;;		Nothing
  5144 ;; This function is called by:
  5145 ;;		_do_I2C_SEND_STOP
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text49
  5150  000E10                     __ptext49:
  5151                           	opt stack 0
  5152  000E10                     _i2c1_driver_stop:
  5153                           	opt stack 17
  5154                           
  5155                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  5156                           
  5157                           ;incstack = 0
  5158  000E10  8497               	bsf	3991,2,c	;volatile
  5159  000E12  0012               	return		;funcret
  5160  000E14                     __end_of_i2c1_driver_stop:
  5161                           	opt stack 0
  5162                           tosu	equ	0xFFF
  5163                           tosh	equ	0xFFE
  5164                           tosl	equ	0xFFD
  5165                           pclath	equ	0xFFA
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           prodh	equ	0xFF4
  5171                           prodl	equ	0xFF3
  5172                           intcon	equ	0xFF2
  5173                           postinc0	equ	0xFEE
  5174                           wreg	equ	0xFE8
  5175                           postdec1	equ	0xFE5
  5176                           fsr1l	equ	0xFE1
  5177                           indf2	equ	0xFDF
  5178                           postinc2	equ	0xFDE
  5179                           postdec2	equ	0xFDD
  5180                           fsr2h	equ	0xFDA
  5181                           fsr2l	equ	0xFD9
  5182                           status	equ	0xFD8
  5183                           
  5184 ;; *************** function _i2c1_driver_restart *****************
  5185 ;; Defined at:
  5186 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		None
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5204 ;;Total ram usage:        0 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    6
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_do_I2C_SEND_RESTART_READ
  5211 ;;		_do_I2C_SEND_RESTART_WRITE
  5212 ;;		_do_I2C_SEND_RESTART
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text50
  5217  000E14                     __ptext50:
  5218                           	opt stack 0
  5219  000E14                     _i2c1_driver_restart:
  5220                           	opt stack 17
  5221                           
  5222                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  5223                           
  5224                           ;incstack = 0
  5225  000E14  8297               	bsf	3991,1,c	;volatile
  5226  000E16  0012               	return		;funcret
  5227  000E18                     __end_of_i2c1_driver_restart:
  5228                           	opt stack 0
  5229                           tosu	equ	0xFFF
  5230                           tosh	equ	0xFFE
  5231                           tosl	equ	0xFFD
  5232                           pclath	equ	0xFFA
  5233                           tblptru	equ	0xFF8
  5234                           tblptrh	equ	0xFF7
  5235                           tblptrl	equ	0xFF6
  5236                           tablat	equ	0xFF5
  5237                           prodh	equ	0xFF4
  5238                           prodl	equ	0xFF3
  5239                           intcon	equ	0xFF2
  5240                           postinc0	equ	0xFEE
  5241                           wreg	equ	0xFE8
  5242                           postdec1	equ	0xFE5
  5243                           fsr1l	equ	0xFE1
  5244                           indf2	equ	0xFDF
  5245                           postinc2	equ	0xFDE
  5246                           postdec2	equ	0xFDD
  5247                           fsr2h	equ	0xFDA
  5248                           fsr2l	equ	0xFD9
  5249                           status	equ	0xFD8
  5250                           
  5251 ;; *************** function _i2c1_driver_sendACK *****************
  5252 ;; Defined at:
  5253 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		None
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5271 ;;Total ram usage:        0 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    6
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_do_I2C_DO_ACK
  5278 ;;		_do_I2C_RX
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text51
  5283  000DD2                     __ptext51:
  5284                           	opt stack 0
  5285  000DD2                     _i2c1_driver_sendACK:
  5286                           	opt stack 18
  5287                           
  5288                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  5289                           
  5290                           ;incstack = 0
  5291  000DD2  9A97               	bcf	3991,5,c	;volatile
  5292                           
  5293                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  5294  000DD4  8897               	bsf	3991,4,c	;volatile
  5295  000DD6  0012               	return		;funcret
  5296  000DD8                     __end_of_i2c1_driver_sendACK:
  5297                           	opt stack 0
  5298                           tosu	equ	0xFFF
  5299                           tosh	equ	0xFFE
  5300                           tosl	equ	0xFFD
  5301                           pclath	equ	0xFFA
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           prodh	equ	0xFF4
  5307                           prodl	equ	0xFF3
  5308                           intcon	equ	0xFF2
  5309                           postinc0	equ	0xFEE
  5310                           wreg	equ	0xFE8
  5311                           postdec1	equ	0xFE5
  5312                           fsr1l	equ	0xFE1
  5313                           indf2	equ	0xFDF
  5314                           postinc2	equ	0xFDE
  5315                           postdec2	equ	0xFDD
  5316                           fsr2h	equ	0xFDA
  5317                           fsr2l	equ	0xFD9
  5318                           status	equ	0xFD8
  5319                           
  5320 ;; *************** function _i2c1_driver_start *****************
  5321 ;; Defined at:
  5322 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;		None
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		None
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5340 ;;Total ram usage:        0 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    6
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_i2c_masterOperation
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text52
  5351  000E18                     __ptext52:
  5352                           	opt stack 0
  5353  000E18                     _i2c1_driver_start:
  5354                           	opt stack 21
  5355                           
  5356                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
  5357                           
  5358                           ;incstack = 0
  5359  000E18  8097               	bsf	3991,0,c	;volatile
  5360  000E1A  0012               	return		;funcret
  5361  000E1C                     __end_of_i2c1_driver_start:
  5362                           	opt stack 0
  5363                           tosu	equ	0xFFF
  5364                           tosh	equ	0xFFE
  5365                           tosl	equ	0xFFD
  5366                           pclath	equ	0xFFA
  5367                           tblptru	equ	0xFF8
  5368                           tblptrh	equ	0xFF7
  5369                           tblptrl	equ	0xFF6
  5370                           tablat	equ	0xFF5
  5371                           prodh	equ	0xFF4
  5372                           prodl	equ	0xFF3
  5373                           intcon	equ	0xFF2
  5374                           postinc0	equ	0xFEE
  5375                           wreg	equ	0xFE8
  5376                           postdec1	equ	0xFE5
  5377                           fsr1l	equ	0xFE1
  5378                           indf2	equ	0xFDF
  5379                           postinc2	equ	0xFDE
  5380                           postdec2	equ	0xFDD
  5381                           fsr2h	equ	0xFDA
  5382                           fsr2l	equ	0xFD9
  5383                           status	equ	0xFD8
  5384                           
  5385 ;; *************** function _i2c_close *****************
  5386 ;; Defined at:
  5387 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;		None
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  ret             1   21[COMRAM] enum E11785
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      enum E11785
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5405 ;;Total ram usage:        1 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    7
  5408 ;; This function calls:
  5409 ;;		_mssp1_clearIRQ
  5410 ;;		_mssp1_disableIRQ
  5411 ;; This function is called by:
  5412 ;;		_i2c_writeNBytes
  5413 ;;		_i2c_readNBytes
  5414 ;;		_i2c_write1ByteRegister
  5415 ;;		_i2c_read1ByteRegister
  5416 ;;		_i2c_read2ByteRegister
  5417 ;;		_i2c_write2ByteRegister
  5418 ;;		_i2c_readDataBlock
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text53
  5423  000B08                     __ptext53:
  5424                           	opt stack 0
  5425  000B08                     _i2c_close:
  5426                           	opt stack 22
  5427                           
  5428                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
  5429                           
  5430                           ;incstack = 0
  5431  000B08  0E01               	movlw	1
  5432  000B0A  6E46               	movwf	i2c_close@ret,c
  5433                           
  5434                           ;i2c_master.c: 165: if(!i2c_status.busy)
  5435  000B0C  B001               	btfsc	_i2c_status,0,c
  5436  000B0E  D008               	goto	l355
  5437                           
  5438                           ;i2c_master.c: 166: {
  5439                           ;i2c_master.c: 167: i2c_status.inUse = 0;
  5440  000B10  9201               	bcf	_i2c_status,1,c
  5441                           
  5442                           ;i2c_master.c: 169: i2c_status.address = 0xff;
  5443  000B12  6802               	setf	_i2c_status+1,c
  5444                           
  5445                           ;i2c_master.c: 170: mssp1_clearIRQ();
  5446  000B14  ECEF  F006         	call	_mssp1_clearIRQ	;wreg free
  5447                           
  5448                           ;i2c_master.c: 171: mssp1_disableIRQ();
  5449  000B18  ECEC  F006         	call	_mssp1_disableIRQ	;wreg free
  5450                           
  5451                           ;i2c_master.c: 172: ret = i2c_status.error;
  5452  000B1C  C00C  F046         	movff	_i2c_status+11,i2c_close@ret
  5453  000B20                     l355:
  5454                           
  5455                           ;i2c_master.c: 173: }
  5456                           ;i2c_master.c: 174: return ret;
  5457  000B20  5046               	movf	i2c_close@ret,w,c
  5458  000B22  0012               	return	
  5459  000B24                     __end_of_i2c_close:
  5460                           	opt stack 0
  5461                           tosu	equ	0xFFF
  5462                           tosh	equ	0xFFE
  5463                           tosl	equ	0xFFD
  5464                           pclath	equ	0xFFA
  5465                           tblptru	equ	0xFF8
  5466                           tblptrh	equ	0xFF7
  5467                           tblptrl	equ	0xFF6
  5468                           tablat	equ	0xFF5
  5469                           prodh	equ	0xFF4
  5470                           prodl	equ	0xFF3
  5471                           intcon	equ	0xFF2
  5472                           postinc0	equ	0xFEE
  5473                           wreg	equ	0xFE8
  5474                           postdec1	equ	0xFE5
  5475                           fsr1l	equ	0xFE1
  5476                           indf2	equ	0xFDF
  5477                           postinc2	equ	0xFDE
  5478                           postdec2	equ	0xFDD
  5479                           fsr2h	equ	0xFDA
  5480                           fsr2l	equ	0xFD9
  5481                           status	equ	0xFD8
  5482                           
  5483 ;; *************** function _mssp1_disableIRQ *****************
  5484 ;; Defined at:
  5485 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;		None
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;		None
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  1    wreg      void 
  5492 ;; Registers used:
  5493 ;;		None
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5503 ;;Total ram usage:        0 bytes
  5504 ;; Hardware stack levels used:    1
  5505 ;; Hardware stack levels required when called:    6
  5506 ;; This function calls:
  5507 ;;		Nothing
  5508 ;; This function is called by:
  5509 ;;		_i2c_close
  5510 ;;		_i2c_setTimeOut
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text54
  5515  000DD8                     __ptext54:
  5516                           	opt stack 0
  5517  000DD8                     _mssp1_disableIRQ:
  5518                           	opt stack 22
  5519                           
  5520                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
  5521                           
  5522                           ;incstack = 0
  5523  000DD8  010E               	movlb	14	; () banked
  5524  000DDA  91C5               	bcf	197,0,b	;volatile
  5525                           
  5526                           ; BSR set to: 14
  5527  000DDC  0012               	return		;funcret
  5528  000DDE                     __end_of_mssp1_disableIRQ:
  5529                           	opt stack 0
  5530                           tosu	equ	0xFFF
  5531                           tosh	equ	0xFFE
  5532                           tosl	equ	0xFFD
  5533                           pclath	equ	0xFFA
  5534                           tblptru	equ	0xFF8
  5535                           tblptrh	equ	0xFF7
  5536                           tblptrl	equ	0xFF6
  5537                           tablat	equ	0xFF5
  5538                           prodh	equ	0xFF4
  5539                           prodl	equ	0xFF3
  5540                           intcon	equ	0xFF2
  5541                           postinc0	equ	0xFEE
  5542                           wreg	equ	0xFE8
  5543                           postdec1	equ	0xFE5
  5544                           fsr1l	equ	0xFE1
  5545                           indf2	equ	0xFDF
  5546                           postinc2	equ	0xFDE
  5547                           postdec2	equ	0xFDD
  5548                           fsr2h	equ	0xFDA
  5549                           fsr2l	equ	0xFD9
  5550                           status	equ	0xFD8
  5551                           
  5552 ;; *************** function _mssp1_clearIRQ *****************
  5553 ;; Defined at:
  5554 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;		None
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;		None
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  1    wreg      void 
  5561 ;; Registers used:
  5562 ;;		None
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5572 ;;Total ram usage:        0 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; Hardware stack levels required when called:    6
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_i2c_open
  5579 ;;		_i2c_close
  5580 ;;		_i2c_ISR
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text55
  5585  000DDE                     __ptext55:
  5586                           	opt stack 0
  5587  000DDE                     _mssp1_clearIRQ:
  5588                           	opt stack 22
  5589                           
  5590                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  5591                           
  5592                           ; BSR set to: 14
  5593                           ;incstack = 0
  5594  000DDE  010E               	movlb	14	; () banked
  5595  000DE0  91CD               	bcf	205,0,b	;volatile
  5596                           
  5597                           ; BSR set to: 14
  5598  000DE2  0012               	return		;funcret
  5599  000DE4                     __end_of_mssp1_clearIRQ:
  5600                           	opt stack 0
  5601                           tosu	equ	0xFFF
  5602                           tosh	equ	0xFFE
  5603                           tosl	equ	0xFFD
  5604                           pclath	equ	0xFFA
  5605                           tblptru	equ	0xFF8
  5606                           tblptrh	equ	0xFF7
  5607                           tblptrl	equ	0xFF6
  5608                           tablat	equ	0xFF5
  5609                           prodh	equ	0xFF4
  5610                           prodl	equ	0xFF3
  5611                           intcon	equ	0xFF2
  5612                           postinc0	equ	0xFEE
  5613                           wreg	equ	0xFE8
  5614                           postdec1	equ	0xFE5
  5615                           fsr1l	equ	0xFE1
  5616                           indf2	equ	0xFDF
  5617                           postinc2	equ	0xFDE
  5618                           postdec2	equ	0xFDD
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function _SYSTEM_Initialize *****************
  5624 ;; Defined at:
  5625 ;;		line 116 in file "mcc_generated_files/mcc.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;		None
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;		None
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;Total ram usage:        0 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    7
  5646 ;; This function calls:
  5647 ;;		_INTERRUPT_Initialize
  5648 ;;		_OSCILLATOR_Initialize
  5649 ;;		_PIN_MANAGER_Initialize
  5650 ;;		_PMD_Initialize
  5651 ;; This function is called by:
  5652 ;;		_main
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text56
  5657  000C62                     __ptext56:
  5658                           	opt stack 0
  5659  000C62                     _SYSTEM_Initialize:
  5660                           	opt stack 23
  5661                           
  5662                           ;mcc.c: 118: INTERRUPT_Initialize();
  5663                           
  5664                           ; BSR set to: 14
  5665                           ;incstack = 0
  5666  000C62  EC0E  F007         	call	_INTERRUPT_Initialize	;wreg free
  5667                           
  5668                           ;mcc.c: 119: PMD_Initialize();
  5669  000C66  EC92  F005         	call	_PMD_Initialize	;wreg free
  5670                           
  5671                           ;mcc.c: 120: PIN_MANAGER_Initialize();
  5672  000C6A  ECEB  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  5673                           
  5674                           ;mcc.c: 121: OSCILLATOR_Initialize();
  5675  000C6E  ECC6  F005         	call	_OSCILLATOR_Initialize	;wreg free
  5676  000C72  0012               	return		;funcret
  5677  000C74                     __end_of_SYSTEM_Initialize:
  5678                           	opt stack 0
  5679                           tosu	equ	0xFFF
  5680                           tosh	equ	0xFFE
  5681                           tosl	equ	0xFFD
  5682                           pclath	equ	0xFFA
  5683                           tblptru	equ	0xFF8
  5684                           tblptrh	equ	0xFF7
  5685                           tblptrl	equ	0xFF6
  5686                           tablat	equ	0xFF5
  5687                           prodh	equ	0xFF4
  5688                           prodl	equ	0xFF3
  5689                           intcon	equ	0xFF2
  5690                           postinc0	equ	0xFEE
  5691                           wreg	equ	0xFE8
  5692                           postdec1	equ	0xFE5
  5693                           fsr1l	equ	0xFE1
  5694                           indf2	equ	0xFDF
  5695                           postinc2	equ	0xFDE
  5696                           postdec2	equ	0xFDD
  5697                           fsr2h	equ	0xFDA
  5698                           fsr2l	equ	0xFD9
  5699                           status	equ	0xFD8
  5700                           
  5701 ;; *************** function _PMD_Initialize *****************
  5702 ;; Defined at:
  5703 ;;		line 138 in file "mcc_generated_files/mcc.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;		None
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;		None
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  1    wreg      void 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5721 ;;Total ram usage:        0 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; Hardware stack levels required when called:    6
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_SYSTEM_Initialize
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text57
  5732  000B24                     __ptext57:
  5733                           	opt stack 0
  5734  000B24                     _PMD_Initialize:
  5735                           	opt stack 23
  5736                           
  5737                           ;mcc.c: 141: PMD0 = 0x00;
  5738                           
  5739                           ;incstack = 0
  5740  000B24  0E00               	movlw	0
  5741  000B26  010E               	movlb	14	; () banked
  5742  000B28  6FE1               	movwf	225,b	;volatile
  5743                           
  5744                           ;mcc.c: 143: PMD1 = 0x00;
  5745  000B2A  0E00               	movlw	0
  5746  000B2C  6FE2               	movwf	226,b	;volatile
  5747                           
  5748                           ;mcc.c: 145: PMD2 = 0x00;
  5749  000B2E  0E00               	movlw	0
  5750  000B30  6FE3               	movwf	227,b	;volatile
  5751                           
  5752                           ;mcc.c: 147: PMD3 = 0x00;
  5753  000B32  0E00               	movlw	0
  5754  000B34  6FE4               	movwf	228,b	;volatile
  5755                           
  5756                           ;mcc.c: 149: PMD4 = 0x00;
  5757  000B36  0E00               	movlw	0
  5758  000B38  6FE5               	movwf	229,b	;volatile
  5759                           
  5760                           ;mcc.c: 151: PMD5 = 0x00;
  5761  000B3A  0E00               	movlw	0
  5762  000B3C  6FE6               	movwf	230,b	;volatile
  5763                           
  5764                           ; BSR set to: 14
  5765  000B3E  0012               	return		;funcret
  5766  000B40                     __end_of_PMD_Initialize:
  5767                           	opt stack 0
  5768                           tosu	equ	0xFFF
  5769                           tosh	equ	0xFFE
  5770                           tosl	equ	0xFFD
  5771                           pclath	equ	0xFFA
  5772                           tblptru	equ	0xFF8
  5773                           tblptrh	equ	0xFF7
  5774                           tblptrl	equ	0xFF6
  5775                           tablat	equ	0xFF5
  5776                           prodh	equ	0xFF4
  5777                           prodl	equ	0xFF3
  5778                           intcon	equ	0xFF2
  5779                           postinc0	equ	0xFEE
  5780                           wreg	equ	0xFE8
  5781                           postdec1	equ	0xFE5
  5782                           fsr1l	equ	0xFE1
  5783                           indf2	equ	0xFDF
  5784                           postinc2	equ	0xFDE
  5785                           postdec2	equ	0xFDD
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8
  5789                           
  5790 ;; *************** function _PIN_MANAGER_Initialize *****************
  5791 ;; Defined at:
  5792 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;		None
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;		None
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      void 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;Total ram usage:        0 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    6
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_SYSTEM_Initialize
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text58
  5821  0003D6                     __ptext58:
  5822                           	opt stack 0
  5823  0003D6                     _PIN_MANAGER_Initialize:
  5824                           	opt stack 23
  5825                           
  5826                           ;pin_manager.c: 57: LATE = 0x00;
  5827                           
  5828                           ; BSR set to: 14
  5829                           ;incstack = 0
  5830  0003D6  0E00               	movlw	0
  5831  0003D8  6E87               	movwf	3975,c	;volatile
  5832                           
  5833                           ;pin_manager.c: 58: LATD = 0x00;
  5834  0003DA  0E00               	movlw	0
  5835  0003DC  6E86               	movwf	3974,c	;volatile
  5836                           
  5837                           ;pin_manager.c: 59: LATA = 0x0C;
  5838  0003DE  0E0C               	movlw	12
  5839  0003E0  6E83               	movwf	3971,c	;volatile
  5840                           
  5841                           ;pin_manager.c: 60: LATB = 0x00;
  5842  0003E2  0E00               	movlw	0
  5843  0003E4  6E84               	movwf	3972,c	;volatile
  5844                           
  5845                           ;pin_manager.c: 61: LATC = 0x00;
  5846  0003E6  0E00               	movlw	0
  5847  0003E8  6E85               	movwf	3973,c	;volatile
  5848                           
  5849                           ;pin_manager.c: 66: TRISE = 0x07;
  5850  0003EA  0E07               	movlw	7
  5851  0003EC  6E8C               	movwf	3980,c	;volatile
  5852                           
  5853                           ;pin_manager.c: 67: TRISA = 0xEB;
  5854  0003EE  0EEB               	movlw	235
  5855  0003F0  6E88               	movwf	3976,c	;volatile
  5856                           
  5857                           ;pin_manager.c: 68: TRISB = 0xFF;
  5858  0003F2  6889               	setf	3977,c	;volatile
  5859                           
  5860                           ;pin_manager.c: 69: TRISC = 0xFF;
  5861  0003F4  688A               	setf	3978,c	;volatile
  5862                           
  5863                           ;pin_manager.c: 70: TRISD = 0xFF;
  5864  0003F6  688B               	setf	3979,c	;volatile
  5865                           
  5866                           ;pin_manager.c: 75: ANSELC = 0xE7;
  5867  0003F8  0EE7               	movlw	231
  5868  0003FA  010F               	movlb	15	; () banked
  5869  0003FC  6F21               	movwf	33,b	;volatile
  5870                           
  5871                           ; BSR set to: 15
  5872                           ;pin_manager.c: 76: ANSELB = 0xFF;
  5873  0003FE  6919               	setf	25,b	;volatile
  5874                           
  5875                           ; BSR set to: 15
  5876                           ;pin_manager.c: 77: ANSELD = 0xFF;
  5877  000400  6926               	setf	38,b	;volatile
  5878                           
  5879                           ;pin_manager.c: 78: ANSELE = 0x07;
  5880  000402  0E07               	movlw	7
  5881  000404  6F2E               	movwf	46,b	;volatile
  5882                           
  5883                           ; BSR set to: 15
  5884                           ;pin_manager.c: 79: ANSELA = 0xFF;
  5885  000406  6911               	setf	17,b	;volatile
  5886                           
  5887                           ;pin_manager.c: 84: WPUD = 0x00;
  5888  000408  0E00               	movlw	0
  5889  00040A  6F25               	movwf	37,b	;volatile
  5890                           
  5891                           ;pin_manager.c: 85: WPUE = 0x00;
  5892  00040C  0E00               	movlw	0
  5893  00040E  6F2D               	movwf	45,b	;volatile
  5894                           
  5895                           ;pin_manager.c: 86: WPUB = 0x00;
  5896  000410  0E00               	movlw	0
  5897  000412  6F18               	movwf	24,b	;volatile
  5898                           
  5899                           ;pin_manager.c: 87: WPUA = 0x00;
  5900  000414  0E00               	movlw	0
  5901  000416  6F10               	movwf	16,b	;volatile
  5902                           
  5903                           ;pin_manager.c: 88: WPUC = 0x18;
  5904  000418  0E18               	movlw	24
  5905  00041A  6F20               	movwf	32,b	;volatile
  5906                           
  5907                           ;pin_manager.c: 93: ODCONE = 0x00;
  5908  00041C  0E00               	movlw	0
  5909  00041E  6F2C               	movwf	44,b	;volatile
  5910                           
  5911                           ;pin_manager.c: 94: ODCONA = 0x00;
  5912  000420  0E00               	movlw	0
  5913  000422  6F0F               	movwf	15,b	;volatile
  5914                           
  5915                           ;pin_manager.c: 95: ODCONB = 0x00;
  5916  000424  0E00               	movlw	0
  5917  000426  6F17               	movwf	23,b	;volatile
  5918                           
  5919                           ;pin_manager.c: 96: ODCONC = 0x00;
  5920  000428  0E00               	movlw	0
  5921  00042A  6F1F               	movwf	31,b	;volatile
  5922                           
  5923                           ;pin_manager.c: 97: ODCOND = 0x00;
  5924  00042C  0E00               	movlw	0
  5925  00042E  6F24               	movwf	36,b	;volatile
  5926                           
  5927                           ; BSR set to: 15
  5928                           ;pin_manager.c: 104: SSP1CLKPPSbits.SSPCLKPPS = 0x13;
  5929  000430  010E               	movlb	14	; () banked
  5930  000432  81B7               	bsf	183,0,b	;volatile
  5931  000434  83B7               	bsf	183,1,b	;volatile
  5932  000436  95B7               	bcf	183,2,b	;volatile
  5933  000438  97B7               	bcf	183,3,b	;volatile
  5934  00043A  89B7               	bsf	183,4,b	;volatile
  5935                           
  5936                           ;pin_manager.c: 105: RC3PPS = 0x0F;
  5937  00043C  0E0F               	movlw	15
  5938  00043E  6FFA               	movwf	250,b	;volatile
  5939                           
  5940                           ;pin_manager.c: 106: RC4PPS = 0x10;
  5941  000440  0E10               	movlw	16
  5942  000442  6FFB               	movwf	251,b	;volatile
  5943                           
  5944                           ; BSR set to: 14
  5945                           ;pin_manager.c: 107: SSP1DATPPSbits.SSPDATPPS = 0x14;
  5946  000444  91B8               	bcf	184,0,b	;volatile
  5947  000446  93B8               	bcf	184,1,b	;volatile
  5948  000448  85B8               	bsf	184,2,b	;volatile
  5949  00044A  97B8               	bcf	184,3,b	;volatile
  5950  00044C  89B8               	bsf	184,4,b	;volatile
  5951                           
  5952                           ; BSR set to: 14
  5953  00044E  0012               	return		;funcret
  5954  000450                     __end_of_PIN_MANAGER_Initialize:
  5955                           	opt stack 0
  5956                           tosu	equ	0xFFF
  5957                           tosh	equ	0xFFE
  5958                           tosl	equ	0xFFD
  5959                           pclath	equ	0xFFA
  5960                           tblptru	equ	0xFF8
  5961                           tblptrh	equ	0xFF7
  5962                           tblptrl	equ	0xFF6
  5963                           tablat	equ	0xFF5
  5964                           prodh	equ	0xFF4
  5965                           prodl	equ	0xFF3
  5966                           intcon	equ	0xFF2
  5967                           postinc0	equ	0xFEE
  5968                           wreg	equ	0xFE8
  5969                           postdec1	equ	0xFE5
  5970                           fsr1l	equ	0xFE1
  5971                           indf2	equ	0xFDF
  5972                           postinc2	equ	0xFDE
  5973                           postdec2	equ	0xFDD
  5974                           fsr2h	equ	0xFDA
  5975                           fsr2l	equ	0xFD9
  5976                           status	equ	0xFD8
  5977                           
  5978 ;; *************** function _OSCILLATOR_Initialize *****************
  5979 ;; Defined at:
  5980 ;;		line 124 in file "mcc_generated_files/mcc.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    6
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_SYSTEM_Initialize
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text59
  6009  000B8C                     __ptext59:
  6010                           	opt stack 0
  6011  000B8C                     _OSCILLATOR_Initialize:
  6012                           	opt stack 23
  6013                           
  6014                           ;mcc.c: 127: OSCCON1 = 0x62;
  6015                           
  6016                           ; BSR set to: 14
  6017                           ;incstack = 0
  6018  000B8C  0E62               	movlw	98
  6019  000B8E  010E               	movlb	14	; () banked
  6020  000B90  6FD8               	movwf	216,b	;volatile
  6021                           
  6022                           ;mcc.c: 129: OSCCON3 = 0x00;
  6023  000B92  0E00               	movlw	0
  6024  000B94  6FDA               	movwf	218,b	;volatile
  6025                           
  6026                           ;mcc.c: 131: OSCEN = 0x00;
  6027  000B96  0E00               	movlw	0
  6028  000B98  6FDC               	movwf	220,b	;volatile
  6029                           
  6030                           ;mcc.c: 133: OSCFRQ = 0x03;
  6031  000B9A  0E03               	movlw	3
  6032  000B9C  6FDE               	movwf	222,b	;volatile
  6033                           
  6034                           ;mcc.c: 135: OSCTUNE = 0x20;
  6035  000B9E  0E20               	movlw	32
  6036  000BA0  6FDD               	movwf	221,b	;volatile
  6037                           
  6038                           ; BSR set to: 14
  6039  000BA2  0012               	return		;funcret
  6040  000BA4                     __end_of_OSCILLATOR_Initialize:
  6041                           	opt stack 0
  6042                           tosu	equ	0xFFF
  6043                           tosh	equ	0xFFE
  6044                           tosl	equ	0xFFD
  6045                           pclath	equ	0xFFA
  6046                           tblptru	equ	0xFF8
  6047                           tblptrh	equ	0xFF7
  6048                           tblptrl	equ	0xFF6
  6049                           tablat	equ	0xFF5
  6050                           prodh	equ	0xFF4
  6051                           prodl	equ	0xFF3
  6052                           intcon	equ	0xFF2
  6053                           postinc0	equ	0xFEE
  6054                           wreg	equ	0xFE8
  6055                           postdec1	equ	0xFE5
  6056                           fsr1l	equ	0xFE1
  6057                           indf2	equ	0xFDF
  6058                           postinc2	equ	0xFDE
  6059                           postdec2	equ	0xFDD
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function _INTERRUPT_Initialize *****************
  6065 ;; Defined at:
  6066 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		None
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    6
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_SYSTEM_Initialize
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text60
  6095  000E1C                     __ptext60:
  6096                           	opt stack 0
  6097  000E1C                     _INTERRUPT_Initialize:
  6098                           	opt stack 23
  6099                           
  6100                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  6101                           
  6102                           ; BSR set to: 14
  6103                           ;incstack = 0
  6104  000E1C  9AF2               	bcf	intcon,5,c	;volatile
  6105  000E1E  0012               	return		;funcret
  6106  000E20                     __end_of_INTERRUPT_Initialize:
  6107                           	opt stack 0
  6108                           tosu	equ	0xFFF
  6109                           tosh	equ	0xFFE
  6110                           tosl	equ	0xFFD
  6111                           pclath	equ	0xFFA
  6112                           tblptru	equ	0xFF8
  6113                           tblptrh	equ	0xFF7
  6114                           tblptrl	equ	0xFF6
  6115                           tablat	equ	0xFF5
  6116                           prodh	equ	0xFF4
  6117                           prodl	equ	0xFF3
  6118                           intcon	equ	0xFF2
  6119                           postinc0	equ	0xFEE
  6120                           wreg	equ	0xFE8
  6121                           postdec1	equ	0xFE5
  6122                           fsr1l	equ	0xFE1
  6123                           indf2	equ	0xFDF
  6124                           postinc2	equ	0xFDE
  6125                           postdec2	equ	0xFDD
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function _INTERRUPT_InterruptManager *****************
  6131 ;; Defined at:
  6132 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;		None
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;		None
  6137 ;; Return value:  Size  Location     Type
  6138 ;;                  1    wreg      void 
  6139 ;; Registers used:
  6140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6141 ;; Tracked objects:
  6142 ;;		On entry : 0/0
  6143 ;;		On exit  : 0/0
  6144 ;;		Unchanged: 0/0
  6145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6148 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6150 ;;Total ram usage:       18 bytes
  6151 ;; Hardware stack levels used:    1
  6152 ;; Hardware stack levels required when called:    5
  6153 ;; This function calls:
  6154 ;;		Absolute function
  6155 ;;		_i2c_busCollisionISR
  6156 ;;		i2_i2c_ISR
  6157 ;; This function is called by:
  6158 ;;		Interrupt level 2
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	intcode
  6163  000008                     __pintcode:
  6164                           	opt stack 0
  6165  000008                     _INTERRUPT_InterruptManager:
  6166                           	opt stack 16
  6167                           
  6168                           ;incstack = 0
  6169  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6170  00000A  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  6171  00000E  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6172  000012  CFE9 F036          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6173  000016  CFEA F037          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6174  00001A  CFE1 F038          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6175  00001E  CFE2 F039          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6176  000022  CFD9 F03A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6177  000026  CFDA F03B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6178  00002A  CFF3 F03C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6179  00002E  CFF4 F03D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6180  000032  CFF6 F03E          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6181  000036  CFF7 F03F          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6182  00003A  CFF8 F040          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6183  00003E  CFF5 F041          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6184  000042  C04A  F042         	movff	btemp,??_INTERRUPT_InterruptManager+14
  6185  000046  C04B  F043         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  6186  00004A  C04C  F044         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  6187  00004E  C04D  F045         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  6188                           
  6189                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  6190  000052  ACF2               	btfss	intcon,6,c	;volatile
  6191  000054  D01D               	goto	i2u164_49
  6192                           
  6193                           ;interrupt_manager.c: 61: {
  6194                           ;interrupt_manager.c: 62: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  6195  000056  010E               	movlb	14	; () banked
  6196  000058  B3C5               	btfsc	197,1,b	;volatile
  6197                           
  6198                           ; BSR set to: 14
  6199  00005A  A3CD               	btfss	205,1,b	;volatile
  6200  00005C  D00A               	goto	i2l267
  6201                           
  6202                           ; BSR set to: 14
  6203                           ;interrupt_manager.c: 63: {
  6204                           ;interrupt_manager.c: 64: i2c1_driver_busCollisionISR();
  6205  00005E  D801               	call	i2u161_48
  6206  000060  D017               	goto	i2u164_49
  6207  000062                     i2u161_48:
  6208  000062  0005               	push	
  6209  000064  6EFA               	movwf	pclath,c
  6210  000066  502E               	movf	_i2c1_driver_busCollisionISR,w,c
  6211  000068  6EFD               	movwf	tosl,c
  6212  00006A  502F               	movf	_i2c1_driver_busCollisionISR+1,w,c
  6213  00006C  6EFE               	movwf	tosh,c
  6214  00006E  5030               	movf	_i2c1_driver_busCollisionISR+2,w,c
  6215  000070  D00C               	goto	L3
  6216  000072                     i2l267:
  6217                           
  6218                           ; BSR set to: 14
  6219                           ;interrupt_manager.c: 66: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  6220  000072  B1C5               	btfsc	197,0,b	;volatile
  6221                           
  6222                           ; BSR set to: 14
  6223  000074  A1CD               	btfss	205,0,b	;volatile
  6224  000076  D00C               	goto	i2u164_49
  6225                           
  6226                           ; BSR set to: 14
  6227                           ;interrupt_manager.c: 67: {
  6228                           ;interrupt_manager.c: 68: i2c1_driver_i2cISR();
  6229  000078  D801               	call	i2u164_48
  6230  00007A  D00A               	goto	i2u164_49
  6231  00007C                     i2u164_48:
  6232  00007C  0005               	push	
  6233  00007E  6EFA               	movwf	pclath,c
  6234  000080  502B               	movf	_i2c1_driver_i2cISR,w,c
  6235  000082  6EFD               	movwf	tosl,c
  6236  000084  502C               	movf	_i2c1_driver_i2cISR+1,w,c
  6237  000086  6EFE               	movwf	tosh,c
  6238  000088  502D               	movf	_i2c1_driver_i2cISR+2,w,c
  6239  00008A                     L3:
  6240  00008A  6EFF               	movwf	tosu,c
  6241  00008C  50FA               	movf	pclath,w,c
  6242  00008E  0012               	return		;indir
  6243  000090                     i2u164_49:
  6244                           
  6245                           ;interrupt_manager.c: 75: else
  6246                           ;interrupt_manager.c: 76: {
  6247                           
  6248                           ;interrupt_manager.c: 73: }
  6249                           ;interrupt_manager.c: 74: }
  6250                           
  6251                           ;interrupt_manager.c: 70: else
  6252                           ;interrupt_manager.c: 71: {
  6253                           
  6254                           ;interrupt_manager.c: 69: }
  6255  000090  C045  F04D         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  6256  000094  C044  F04C         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  6257  000098  C043  F04B         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  6258  00009C  C042  F04A         	movff	??_INTERRUPT_InterruptManager+14,btemp
  6259  0000A0  C041  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6260  0000A4  C040  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6261  0000A8  C03F  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6262  0000AC  C03E  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6263  0000B0  C03D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6264  0000B4  C03C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6265  0000B8  C03B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6266  0000BC  C03A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6267  0000C0  C039  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6268  0000C4  C038  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6269  0000C8  C037  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6270  0000CC  C036  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6271  0000D0  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6272  0000D4  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6273  0000D8  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6274  0000DA  0011               	retfie		f
  6275  0000DC                     __end_of_INTERRUPT_InterruptManager:
  6276                           	opt stack 0
  6277                           tosu	equ	0xFFF
  6278                           tosh	equ	0xFFE
  6279                           tosl	equ	0xFFD
  6280                           pclatu	equ	0xFFB
  6281                           pclath	equ	0xFFA
  6282                           tblptru	equ	0xFF8
  6283                           tblptrh	equ	0xFF7
  6284                           tblptrl	equ	0xFF6
  6285                           tablat	equ	0xFF5
  6286                           prodh	equ	0xFF4
  6287                           prodl	equ	0xFF3
  6288                           intcon	equ	0xFF2
  6289                           postinc0	equ	0xFEE
  6290                           fsr0h	equ	0xFEA
  6291                           fsr0l	equ	0xFE9
  6292                           wreg	equ	0xFE8
  6293                           postdec1	equ	0xFE5
  6294                           fsr1h	equ	0xFE2
  6295                           fsr1l	equ	0xFE1
  6296                           indf2	equ	0xFDF
  6297                           postinc2	equ	0xFDE
  6298                           postdec2	equ	0xFDD
  6299                           fsr2h	equ	0xFDA
  6300                           fsr2l	equ	0xFD9
  6301                           status	equ	0xFD8
  6302                           
  6303 ;; *************** function i2_i2c_ISR *****************
  6304 ;; Defined at:
  6305 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;		None
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      void 
  6312 ;; Registers used:
  6313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6323 ;;Total ram usage:        0 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; Hardware stack levels required when called:    4
  6326 ;; This function calls:
  6327 ;;		i2_do_I2C_DO_ACK
  6328 ;;		i2_do_I2C_DO_ADDRESS_NACK
  6329 ;;		i2_do_I2C_DO_NACK_RESTART
  6330 ;;		i2_do_I2C_DO_NACK_STOP
  6331 ;;		i2_do_I2C_IDLE
  6332 ;;		i2_do_I2C_RCEN
  6333 ;;		i2_do_I2C_RESET
  6334 ;;		i2_do_I2C_RX
  6335 ;;		i2_do_I2C_SEND_ADR_READ
  6336 ;;		i2_do_I2C_SEND_ADR_WRITE
  6337 ;;		i2_do_I2C_SEND_RESTART
  6338 ;;		i2_do_I2C_SEND_RESTART_READ
  6339 ;;		i2_do_I2C_SEND_RESTART_WRITE
  6340 ;;		i2_do_I2C_SEND_STOP
  6341 ;;		i2_do_I2C_TX
  6342 ;;		i2_do_I2C_TX_EMPTY
  6343 ;;		i2_i2c1_driver_isNACK
  6344 ;;		i2_mssp1_clearIRQ
  6345 ;; This function is called by:
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text62
  6350  00081E                     __ptext62:
  6351                           	opt stack 0
  6352  00081E                     i2_i2c_ISR:
  6353                           	opt stack 16
  6354                           
  6355                           ;i2c_master.c: 421: mssp1_clearIRQ();
  6356                           
  6357                           ;incstack = 0
  6358  00081E  ECF2  F006         	call	i2_mssp1_clearIRQ	;wreg free
  6359                           
  6360                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  6361  000822  A601               	btfss	_i2c_status,3,c
  6362  000824  D006               	goto	i2l469
  6363  000826  ECFF  F005         	call	i2_i2c1_driver_isNACK	;wreg free
  6364  00082A  A0D8               	btfss	status,0,c
  6365  00082C  D002               	goto	i2l469
  6366                           
  6367                           ;i2c_master.c: 428: {
  6368                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  6369  00082E  0E0F               	movlw	15
  6370  000830  6E0B               	movwf	_i2c_status+10,c
  6371  000832                     i2l469:
  6372                           
  6373                           ;i2c_master.c: 430: }
  6374                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  6375  000832  500B               	movf	_i2c_status+10,w,c
  6376  000834  0D03               	mullw	3
  6377  000836  0E60               	movlw	low _fsmStateTable
  6378  000838  24F3               	addwf	prodl,w,c
  6379  00083A  6ED9               	movwf	fsr2l,c
  6380  00083C  0E00               	movlw	high _fsmStateTable
  6381  00083E  20F4               	addwfc	prodh,w,c
  6382  000840  6EDA               	movwf	fsr2h,c
  6383  000842  D801               	call	i2u157_48
  6384  000844  D00A               	goto	i2u157_49
  6385  000846                     i2u157_48:
  6386  000846  0005               	push	
  6387  000848  6EFA               	movwf	pclath,c
  6388  00084A  50DE               	movf	postinc2,w,c
  6389  00084C  6EFD               	movwf	tosl,c
  6390  00084E  50DE               	movf	postinc2,w,c
  6391  000850  6EFE               	movwf	tosh,c
  6392  000852  50DE               	movf	postinc2,w,c
  6393  000854  6EFF               	movwf	tosu,c
  6394  000856  50FA               	movf	pclath,w,c
  6395  000858  0012               	return		;indir
  6396  00085A                     i2u157_49:
  6397  00085A  6E0B               	movwf	_i2c_status+10,c
  6398  00085C  0012               	return		;funcret
  6399  00085E                     __end_ofi2_i2c_ISR:
  6400                           	opt stack 0
  6401                           tosu	equ	0xFFF
  6402                           tosh	equ	0xFFE
  6403                           tosl	equ	0xFFD
  6404                           pclatu	equ	0xFFB
  6405                           pclath	equ	0xFFA
  6406                           tblptru	equ	0xFF8
  6407                           tblptrh	equ	0xFF7
  6408                           tblptrl	equ	0xFF6
  6409                           tablat	equ	0xFF5
  6410                           prodh	equ	0xFF4
  6411                           prodl	equ	0xFF3
  6412                           intcon	equ	0xFF2
  6413                           postinc0	equ	0xFEE
  6414                           fsr0h	equ	0xFEA
  6415                           fsr0l	equ	0xFE9
  6416                           wreg	equ	0xFE8
  6417                           postdec1	equ	0xFE5
  6418                           fsr1h	equ	0xFE2
  6419                           fsr1l	equ	0xFE1
  6420                           indf2	equ	0xFDF
  6421                           postinc2	equ	0xFDE
  6422                           postdec2	equ	0xFDD
  6423                           fsr2h	equ	0xFDA
  6424                           fsr2l	equ	0xFD9
  6425                           status	equ	0xFD8
  6426                           
  6427 ;; *************** function i2_mssp1_clearIRQ *****************
  6428 ;; Defined at:
  6429 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;		None
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		None
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6447 ;;Total ram usage:        0 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		i2_i2c_ISR
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text63
  6457  000DE4                     __ptext63:
  6458                           	opt stack 0
  6459  000DE4                     i2_mssp1_clearIRQ:
  6460                           	opt stack 19
  6461                           
  6462                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  6463                           
  6464                           ;incstack = 0
  6465  000DE4  010E               	movlb	14	; () banked
  6466  000DE6  91CD               	bcf	205,0,b	;volatile
  6467                           
  6468                           ; BSR set to: 14
  6469  000DE8  0012               	return		;funcret
  6470  000DEA                     __end_ofi2_mssp1_clearIRQ:
  6471                           	opt stack 0
  6472                           tosu	equ	0xFFF
  6473                           tosh	equ	0xFFE
  6474                           tosl	equ	0xFFD
  6475                           pclatu	equ	0xFFB
  6476                           pclath	equ	0xFFA
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           intcon	equ	0xFF2
  6484                           postinc0	equ	0xFEE
  6485                           fsr0h	equ	0xFEA
  6486                           fsr0l	equ	0xFE9
  6487                           wreg	equ	0xFE8
  6488                           postdec1	equ	0xFE5
  6489                           fsr1h	equ	0xFE2
  6490                           fsr1l	equ	0xFE1
  6491                           indf2	equ	0xFDF
  6492                           postinc2	equ	0xFDE
  6493                           postdec2	equ	0xFDD
  6494                           fsr2h	equ	0xFDA
  6495                           fsr2l	equ	0xFD9
  6496                           status	equ	0xFD8
  6497                           
  6498 ;; *************** function i2_do_I2C_RX *****************
  6499 ;; Defined at:
  6500 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;		None
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      enum E11956
  6507 ;; Registers used:
  6508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6518 ;;Total ram usage:        0 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    3
  6521 ;; This function calls:
  6522 ;;		Absolute function
  6523 ;;		i2_do_I2C_DO_NACK_RESTART
  6524 ;;		i2_do_I2C_DO_NACK_STOP
  6525 ;;		i2_i2c1_driver_getRXData
  6526 ;;		i2_i2c1_driver_sendACK
  6527 ;;		i2_i2c_restartWrite
  6528 ;;		i2_rd1RegCompleteHandler
  6529 ;;		i2_rd2RegCompleteHandler
  6530 ;;		i2_rdBlkRegCompleteHandler
  6531 ;;		i2_returnReset
  6532 ;;		i2_returnStop
  6533 ;;		i2_wr1RegCompleteHandler
  6534 ;;		i2_wr2RegCompleteHandler
  6535 ;; This function is called by:
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text64
  6540  000540                     __ptext64:
  6541                           	opt stack 0
  6542  000540                     i2_do_I2C_RX:
  6543                           	opt stack 16
  6544                           
  6545                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  6546                           
  6547                           ; BSR set to: 14
  6548                           ;incstack = 0
  6549  000540  EC10  F007         	call	i2_i2c1_driver_getRXData	;wreg free
  6550  000544  C003  FFD9         	movff	_i2c_status+2,fsr2l
  6551  000548  C004  FFDA         	movff	_i2c_status+3,fsr2h
  6552  00054C  6EDF               	movwf	indf2,c
  6553  00054E  4A03               	infsnz	_i2c_status+2,f,c
  6554  000550  2A04               	incf	_i2c_status+3,f,c
  6555                           
  6556                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  6557  000552  0605               	decf	_i2c_status+4,f,c
  6558  000554  A0D8               	btfss	status,0,c
  6559  000556  0606               	decf	_i2c_status+5,f,c
  6560  000558  5005               	movf	_i2c_status+4,w,c
  6561  00055A  1006               	iorwf	_i2c_status+5,w,c
  6562  00055C  B4D8               	btfsc	status,2,c
  6563  00055E  D004               	goto	i2l445
  6564                           
  6565                           ;i2c_master.c: 361: {
  6566                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  6567  000560  ECFB  F006         	call	i2_i2c1_driver_sendACK	;wreg free
  6568                           
  6569                           ;i2c_master.c: 363: return I2C_RCEN;
  6570  000564  0E05               	movlw	5
  6571                           
  6572                           ;i2c_master.c: 364: }
  6573  000566  0012               	return	
  6574  000568                     i2l445:
  6575                           
  6576                           ;i2c_master.c: 365: else
  6577                           ;i2c_master.c: 366: {
  6578                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  6579  000568  8401               	bsf	_i2c_status,2,c
  6580                           
  6581                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  6582  00056A  D006               	goto	i2l448
  6583  00056C                     
  6584                           ;i2c_master.c: 371: case i2c_restart_read:
  6585                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  6586  00056C  ECC3  F006         	call	i2_do_I2C_DO_NACK_RESTART	;wreg free
  6587  000570  0012               	return	
  6588  000572                     
  6589                           ;i2c_master.c: 375: case i2c_stop:
  6590                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  6591                           
  6592                           ;i2c_master.c: 374: case i2c_continue:
  6593  000572  ECC7  F006         	call	i2_do_I2C_DO_NACK_STOP	;wreg free
  6594                           
  6595                           ;i2c_master.c: 377: }
  6596  000576  0012               	return	
  6597  000578                     i2l448:
  6598  000578  C01F  F03C         	movff	_i2c_status+30,i2returnStop@p
  6599  00057C  C020  F03D         	movff	_i2c_status+31,i2returnStop@p+1
  6600  000580  EE20  F00D         	lfsr	2,_i2c_status+12
  6601  000584  D801               	call	i2u149_48
  6602  000586  D00A               	goto	i2u149_49
  6603  000588                     i2u149_48:
  6604  000588  0005               	push	
  6605  00058A  6EFA               	movwf	pclath,c
  6606  00058C  50DE               	movf	postinc2,w,c
  6607  00058E  6EFD               	movwf	tosl,c
  6608  000590  50DE               	movf	postinc2,w,c
  6609  000592  6EFE               	movwf	tosh,c
  6610  000594  50DE               	movf	postinc2,w,c
  6611  000596  6EFF               	movwf	tosu,c
  6612  000598  50FA               	movf	pclath,w,c
  6613  00059A  0012               	return		;indir
  6614  00059C                     i2u149_49:
  6615                           
  6616                           ; Switch size 1, requested type "space"
  6617                           ; Number of cases is 4, Range of values is 1 to 4
  6618                           ; switch strategies available:
  6619                           ; Name         Instructions Cycles
  6620                           ; simple_byte           13     7 (average)
  6621                           ;	Chosen strategy is simple_byte
  6622  00059C  0A01               	xorlw	1	; case 1
  6623  00059E  B4D8               	btfsc	status,2,c
  6624  0005A0  D7E8               	goto	i2l451
  6625  0005A2  0A03               	xorlw	3	; case 2
  6626  0005A4  B4D8               	btfsc	status,2,c
  6627  0005A6  D7E2               	goto	i2l449
  6628  0005A8  0A01               	xorlw	1	; case 3
  6629  0005AA  B4D8               	btfsc	status,2,c
  6630  0005AC  D7DF               	goto	i2l449
  6631  0005AE  0A07               	xorlw	7	; case 4
  6632  0005B0  D7E0               	goto	i2l451
  6633  0005B2                     __end_ofi2_do_I2C_RX:
  6634                           	opt stack 0
  6635                           tosu	equ	0xFFF
  6636                           tosh	equ	0xFFE
  6637                           tosl	equ	0xFFD
  6638                           pclatu	equ	0xFFB
  6639                           pclath	equ	0xFFA
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           prodh	equ	0xFF4
  6645                           prodl	equ	0xFF3
  6646                           intcon	equ	0xFF2
  6647                           postinc0	equ	0xFEE
  6648                           fsr0h	equ	0xFEA
  6649                           fsr0l	equ	0xFE9
  6650                           wreg	equ	0xFE8
  6651                           postdec1	equ	0xFE5
  6652                           fsr1h	equ	0xFE2
  6653                           fsr1l	equ	0xFE1
  6654                           indf2	equ	0xFDF
  6655                           postinc2	equ	0xFDE
  6656                           postdec2	equ	0xFDD
  6657                           fsr2h	equ	0xFDA
  6658                           fsr2l	equ	0xFD9
  6659                           status	equ	0xFD8
  6660                           
  6661 ;; *************** function i2_do_I2C_TX *****************
  6662 ;; Defined at:
  6663 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      enum E11956
  6670 ;; Registers used:
  6671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6681 ;;Total ram usage:        2 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    3
  6684 ;; This function calls:
  6685 ;;		Absolute function
  6686 ;;		i2_do_I2C_SEND_RESTART_READ
  6687 ;;		i2_do_I2C_SEND_RESTART_WRITE
  6688 ;;		i2_do_I2C_SEND_STOP
  6689 ;;		i2_i2c1_driver_TXData
  6690 ;;		i2_i2c1_driver_isNACK
  6691 ;;		i2_i2c_restartWrite
  6692 ;;		i2_rd1RegCompleteHandler
  6693 ;;		i2_rd2RegCompleteHandler
  6694 ;;		i2_rdBlkRegCompleteHandler
  6695 ;;		i2_returnReset
  6696 ;;		i2_returnStop
  6697 ;;		i2_wr1RegCompleteHandler
  6698 ;;		i2_wr2RegCompleteHandler
  6699 ;; This function is called by:
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text65
  6704  0002D0                     __ptext65:
  6705                           	opt stack 0
  6706  0002D0                     i2_do_I2C_TX:
  6707                           	opt stack 16
  6708                           
  6709                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  6710                           
  6711                           ;incstack = 0
  6712  0002D0  ECFF  F005         	call	i2_i2c1_driver_isNACK	;wreg free
  6713  0002D4  B0D8               	btfsc	status,0,c
  6714  0002D6  D00A               	goto	i2l430
  6715  0002D8  D026               	goto	i2l429
  6716  0002DA                     
  6717                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  6718  0002DA  ECDB  F006         	call	i2_do_I2C_SEND_RESTART_READ	;wreg free
  6719  0002DE  0012               	return	
  6720  0002E0                     
  6721                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  6722  0002E0  ECD7  F006         	call	i2_do_I2C_SEND_RESTART_WRITE	;wreg free
  6723  0002E4  0012               	return	
  6724  0002E6                     
  6725                           ;i2c_master.c: 345: case i2c_stop:
  6726                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  6727                           
  6728                           ;i2c_master.c: 344: case i2c_continue:
  6729  0002E6  ECCF  F006         	call	i2_do_I2C_SEND_STOP	;wreg free
  6730                           
  6731                           ;i2c_master.c: 347: }
  6732  0002EA  0012               	return	
  6733  0002EC                     i2l430:
  6734  0002EC  C025  F03C         	movff	_i2c_status+36,i2returnStop@p
  6735  0002F0  C026  F03D         	movff	_i2c_status+37,i2returnStop@p+1
  6736  0002F4  EE20  F016         	lfsr	2,_i2c_status+21
  6737  0002F8  D801               	call	i2u146_48
  6738  0002FA  D00A               	goto	i2u146_49
  6739  0002FC                     i2u146_48:
  6740  0002FC  0005               	push	
  6741  0002FE  6EFA               	movwf	pclath,c
  6742  000300  50DE               	movf	postinc2,w,c
  6743  000302  6EFD               	movwf	tosl,c
  6744  000304  50DE               	movf	postinc2,w,c
  6745  000306  6EFE               	movwf	tosh,c
  6746  000308  50DE               	movf	postinc2,w,c
  6747  00030A  6EFF               	movwf	tosu,c
  6748  00030C  50FA               	movf	pclath,w,c
  6749  00030E  0012               	return		;indir
  6750  000310                     i2u146_49:
  6751                           
  6752                           ; Switch size 1, requested type "space"
  6753                           ; Number of cases is 4, Range of values is 1 to 4
  6754                           ; switch strategies available:
  6755                           ; Name         Instructions Cycles
  6756                           ; simple_byte           13     7 (average)
  6757                           ;	Chosen strategy is simple_byte
  6758  000310  0A01               	xorlw	1	; case 1
  6759  000312  B4D8               	btfsc	status,2,c
  6760  000314  D7E8               	goto	i2l434
  6761  000316  0A03               	xorlw	3	; case 2
  6762  000318  B4D8               	btfsc	status,2,c
  6763  00031A  D7DF               	goto	i2l431
  6764  00031C  0A01               	xorlw	1	; case 3
  6765  00031E  B4D8               	btfsc	status,2,c
  6766  000320  D7DF               	goto	i2l433
  6767  000322  0A07               	xorlw	7	; case 4
  6768  000324  D7E0               	goto	i2l434
  6769  000326                     i2l429:
  6770                           
  6771                           ;i2c_master.c: 349: else
  6772                           ;i2c_master.c: 350: {
  6773                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  6774  000326  9601               	bcf	_i2c_status,3,c
  6775                           
  6776                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  6777  000328  C003  FFD9         	movff	_i2c_status+2,fsr2l
  6778  00032C  C004  FFDA         	movff	_i2c_status+3,fsr2h
  6779  000330  4A03               	infsnz	_i2c_status+2,f,c
  6780  000332  2A04               	incf	_i2c_status+3,f,c
  6781  000334  50DF               	movf	indf2,w,c
  6782  000336  ECDF  F006         	call	i2_i2c1_driver_TXData
  6783                           
  6784                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  6785  00033A  0605               	decf	_i2c_status+4,f,c
  6786  00033C  A0D8               	btfss	status,0,c
  6787  00033E  0606               	decf	_i2c_status+5,f,c
  6788  000340  5005               	movf	_i2c_status+4,w,c
  6789  000342  1006               	iorwf	_i2c_status+5,w,c
  6790  000344  A4D8               	btfss	status,2,c
  6791  000346  D004               	goto	i2l440
  6792  000348  0E00               	movlw	0
  6793  00034A  6E33               	movwf	i2_do_I2C_TX$1023+1,c
  6794  00034C  0E06               	movlw	6
  6795  00034E  D003               	goto	L4
  6796  000350                     i2l440:
  6797  000350  0E00               	movlw	0
  6798  000352  6E33               	movwf	i2_do_I2C_TX$1023+1,c
  6799  000354  0E03               	movlw	3
  6800  000356                     L4:
  6801  000356  6E32               	movwf	i2_do_I2C_TX$1023,c
  6802  000358  5032               	movf	i2_do_I2C_TX$1023,w,c
  6803  00035A  0012               	return	
  6804  00035C                     __end_ofi2_do_I2C_TX:
  6805                           	opt stack 0
  6806                           tosu	equ	0xFFF
  6807                           tosh	equ	0xFFE
  6808                           tosl	equ	0xFFD
  6809                           pclatu	equ	0xFFB
  6810                           pclath	equ	0xFFA
  6811                           tblptru	equ	0xFF8
  6812                           tblptrh	equ	0xFF7
  6813                           tblptrl	equ	0xFF6
  6814                           tablat	equ	0xFF5
  6815                           prodh	equ	0xFF4
  6816                           prodl	equ	0xFF3
  6817                           intcon	equ	0xFF2
  6818                           postinc0	equ	0xFEE
  6819                           fsr0h	equ	0xFEA
  6820                           fsr0l	equ	0xFE9
  6821                           wreg	equ	0xFE8
  6822                           postdec1	equ	0xFE5
  6823                           fsr1h	equ	0xFE2
  6824                           fsr1l	equ	0xFE1
  6825                           indf2	equ	0xFDF
  6826                           postinc2	equ	0xFDE
  6827                           postdec2	equ	0xFDD
  6828                           fsr2h	equ	0xFDA
  6829                           fsr2l	equ	0xFD9
  6830                           status	equ	0xFD8
  6831                           
  6832 ;; *************** function i2_do_I2C_DO_ADDRESS_NACK *****************
  6833 ;; Defined at:
  6834 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;		None
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;		None
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  1    wreg      enum E11956
  6841 ;; Registers used:
  6842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6852 ;;Total ram usage:        0 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:    3
  6855 ;; This function calls:
  6856 ;;		Absolute function
  6857 ;;		i2_do_I2C_SEND_RESTART
  6858 ;;		i2_do_I2C_SEND_STOP
  6859 ;;		i2_i2c_restartWrite
  6860 ;;		i2_rd1RegCompleteHandler
  6861 ;;		i2_rd2RegCompleteHandler
  6862 ;;		i2_rdBlkRegCompleteHandler
  6863 ;;		i2_returnReset
  6864 ;;		i2_returnStop
  6865 ;;		i2_wr1RegCompleteHandler
  6866 ;;		i2_wr2RegCompleteHandler
  6867 ;; This function is called by:
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text66
  6872  000794                     __ptext66:
  6873                           	opt stack 0
  6874  000794                     i2_do_I2C_DO_ADDRESS_NACK:
  6875                           	opt stack 16
  6876                           
  6877                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  6878                           
  6879                           ;incstack = 0
  6880  000794  9601               	bcf	_i2c_status,3,c
  6881                           
  6882                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  6883  000796  0E02               	movlw	2
  6884  000798  6E0C               	movwf	_i2c_status+11,c
  6885                           
  6886                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  6887  00079A  D006               	goto	i2l421
  6888  00079C                     
  6889                           ;i2c_master.c: 326: case i2c_restart_write:
  6890                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  6891  00079C  ECD3  F006         	call	i2_do_I2C_SEND_RESTART	;wreg free
  6892  0007A0  0012               	return	
  6893  0007A2                     
  6894                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  6895  0007A2  ECCF  F006         	call	i2_do_I2C_SEND_STOP	;wreg free
  6896                           
  6897                           ;i2c_master.c: 330: }
  6898  0007A6  0012               	return	
  6899  0007A8                     i2l421:
  6900  0007A8  C023  F03C         	movff	_i2c_status+34,i2returnStop@p
  6901  0007AC  C024  F03D         	movff	_i2c_status+35,i2returnStop@p+1
  6902  0007B0  EE20  F013         	lfsr	2,_i2c_status+18
  6903  0007B4  D801               	call	i2u144_48
  6904  0007B6  D00A               	goto	i2u144_49
  6905  0007B8                     i2u144_48:
  6906  0007B8  0005               	push	
  6907  0007BA  6EFA               	movwf	pclath,c
  6908  0007BC  50DE               	movf	postinc2,w,c
  6909  0007BE  6EFD               	movwf	tosl,c
  6910  0007C0  50DE               	movf	postinc2,w,c
  6911  0007C2  6EFE               	movwf	tosh,c
  6912  0007C4  50DE               	movf	postinc2,w,c
  6913  0007C6  6EFF               	movwf	tosu,c
  6914  0007C8  50FA               	movf	pclath,w,c
  6915  0007CA  0012               	return		;indir
  6916  0007CC                     i2u144_49:
  6917                           
  6918                           ; Switch size 1, requested type "space"
  6919                           ; Number of cases is 2, Range of values is 2 to 3
  6920                           ; switch strategies available:
  6921                           ; Name         Instructions Cycles
  6922                           ; simple_byte            7     4 (average)
  6923                           ;	Chosen strategy is simple_byte
  6924  0007CC  0A02               	xorlw	2	; case 2
  6925  0007CE  B4D8               	btfsc	status,2,c
  6926  0007D0  D7E5               	goto	i2l422
  6927  0007D2  0A01               	xorlw	1	; case 3
  6928  0007D4  B4D8               	btfsc	status,2,c
  6929  0007D6  D7E2               	goto	i2l422
  6930  0007D8  D7E4               	goto	i2l425
  6931  0007DA                     __end_ofi2_do_I2C_DO_ADDRESS_NACK:
  6932                           	opt stack 0
  6933                           tosu	equ	0xFFF
  6934                           tosh	equ	0xFFE
  6935                           tosl	equ	0xFFD
  6936                           pclatu	equ	0xFFB
  6937                           pclath	equ	0xFFA
  6938                           tblptru	equ	0xFF8
  6939                           tblptrh	equ	0xFF7
  6940                           tblptrl	equ	0xFF6
  6941                           tablat	equ	0xFF5
  6942                           prodh	equ	0xFF4
  6943                           prodl	equ	0xFF3
  6944                           intcon	equ	0xFF2
  6945                           postinc0	equ	0xFEE
  6946                           fsr0h	equ	0xFEA
  6947                           fsr0l	equ	0xFE9
  6948                           wreg	equ	0xFE8
  6949                           postdec1	equ	0xFE5
  6950                           fsr1h	equ	0xFE2
  6951                           fsr1l	equ	0xFE1
  6952                           indf2	equ	0xFDF
  6953                           postinc2	equ	0xFDE
  6954                           postdec2	equ	0xFDD
  6955                           fsr2h	equ	0xFDA
  6956                           fsr2l	equ	0xFD9
  6957                           status	equ	0xFD8
  6958                           
  6959 ;; *************** function i2_do_I2C_DO_NACK_RESTART *****************
  6960 ;; Defined at:
  6961 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;		None
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      enum E11956
  6968 ;; Registers used:
  6969 ;;		wreg, cstack
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6979 ;;Total ram usage:        0 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; Hardware stack levels required when called:    1
  6982 ;; This function calls:
  6983 ;;		i2_i2c1_driver_sendNACK
  6984 ;; This function is called by:
  6985 ;;		i2_do_I2C_RX
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text67
  6990  000D86                     __ptext67:
  6991                           	opt stack 0
  6992  000D86                     i2_do_I2C_DO_NACK_RESTART:
  6993                           	opt stack 17
  6994                           
  6995                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  6996                           
  6997                           ;incstack = 0
  6998  000D86  ECF8  F006         	call	i2_i2c1_driver_sendNACK	;wreg free
  6999                           
  7000                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  7001  000D8A  0E09               	movlw	9
  7002  000D8C  0012               	return	
  7003  000D8E                     __end_ofi2_do_I2C_DO_NACK_RESTART:
  7004                           	opt stack 0
  7005                           tosu	equ	0xFFF
  7006                           tosh	equ	0xFFE
  7007                           tosl	equ	0xFFD
  7008                           pclatu	equ	0xFFB
  7009                           pclath	equ	0xFFA
  7010                           tblptru	equ	0xFF8
  7011                           tblptrh	equ	0xFF7
  7012                           tblptrl	equ	0xFF6
  7013                           tablat	equ	0xFF5
  7014                           prodh	equ	0xFF4
  7015                           prodl	equ	0xFF3
  7016                           intcon	equ	0xFF2
  7017                           postinc0	equ	0xFEE
  7018                           fsr0h	equ	0xFEA
  7019                           fsr0l	equ	0xFE9
  7020                           wreg	equ	0xFE8
  7021                           postdec1	equ	0xFE5
  7022                           fsr1h	equ	0xFE2
  7023                           fsr1l	equ	0xFE1
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           postdec2	equ	0xFDD
  7027                           fsr2h	equ	0xFDA
  7028                           fsr2l	equ	0xFD9
  7029                           status	equ	0xFD8
  7030                           
  7031 ;; *************** function i2_do_I2C_DO_NACK_STOP *****************
  7032 ;; Defined at:
  7033 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;		None
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;		None
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      enum E11956
  7040 ;; Registers used:
  7041 ;;		wreg, cstack
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;Total ram usage:        0 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; Hardware stack levels required when called:    1
  7054 ;; This function calls:
  7055 ;;		i2_i2c1_driver_sendNACK
  7056 ;; This function is called by:
  7057 ;;		i2_do_I2C_RX
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text68
  7062  000D8E                     __ptext68:
  7063                           	opt stack 0
  7064  000D8E                     i2_do_I2C_DO_NACK_STOP:
  7065                           	opt stack 17
  7066                           
  7067                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  7068                           
  7069                           ;incstack = 0
  7070  000D8E  ECF8  F006         	call	i2_i2c1_driver_sendNACK	;wreg free
  7071                           
  7072                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  7073  000D92  0E0A               	movlw	10
  7074  000D94  0012               	return	
  7075  000D96                     __end_ofi2_do_I2C_DO_NACK_STOP:
  7076                           	opt stack 0
  7077                           tosu	equ	0xFFF
  7078                           tosh	equ	0xFFE
  7079                           tosl	equ	0xFFD
  7080                           pclatu	equ	0xFFB
  7081                           pclath	equ	0xFFA
  7082                           tblptru	equ	0xFF8
  7083                           tblptrh	equ	0xFF7
  7084                           tblptrl	equ	0xFF6
  7085                           tablat	equ	0xFF5
  7086                           prodh	equ	0xFF4
  7087                           prodl	equ	0xFF3
  7088                           intcon	equ	0xFF2
  7089                           postinc0	equ	0xFEE
  7090                           fsr0h	equ	0xFEA
  7091                           fsr0l	equ	0xFE9
  7092                           wreg	equ	0xFE8
  7093                           postdec1	equ	0xFE5
  7094                           fsr1h	equ	0xFE2
  7095                           fsr1l	equ	0xFE1
  7096                           indf2	equ	0xFDF
  7097                           postinc2	equ	0xFDE
  7098                           postdec2	equ	0xFDD
  7099                           fsr2h	equ	0xFDA
  7100                           fsr2l	equ	0xFD9
  7101                           status	equ	0xFD8
  7102                           
  7103 ;; *************** function i2_do_I2C_DO_ACK *****************
  7104 ;; Defined at:
  7105 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;		None
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      enum E11956
  7112 ;; Registers used:
  7113 ;;		wreg, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;Total ram usage:        0 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:    1
  7126 ;; This function calls:
  7127 ;;		i2_i2c1_driver_sendACK
  7128 ;; This function is called by:
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text69
  7133  000D96                     __ptext69:
  7134                           	opt stack 0
  7135  000D96                     i2_do_I2C_DO_ACK:
  7136                           	opt stack 18
  7137                           
  7138                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  7139                           
  7140                           ;incstack = 0
  7141  000D96  ECFB  F006         	call	i2_i2c1_driver_sendACK	;wreg free
  7142                           
  7143                           ;i2c_master.c: 302: return I2C_RCEN;
  7144  000D9A  0E05               	movlw	5
  7145  000D9C  0012               	return	
  7146  000D9E                     __end_ofi2_do_I2C_DO_ACK:
  7147                           	opt stack 0
  7148                           tosu	equ	0xFFF
  7149                           tosh	equ	0xFFE
  7150                           tosl	equ	0xFFD
  7151                           pclatu	equ	0xFFB
  7152                           pclath	equ	0xFFA
  7153                           tblptru	equ	0xFF8
  7154                           tblptrh	equ	0xFF7
  7155                           tblptrl	equ	0xFF6
  7156                           tablat	equ	0xFF5
  7157                           prodh	equ	0xFF4
  7158                           prodl	equ	0xFF3
  7159                           intcon	equ	0xFF2
  7160                           postinc0	equ	0xFEE
  7161                           fsr0h	equ	0xFEA
  7162                           fsr0l	equ	0xFE9
  7163                           wreg	equ	0xFE8
  7164                           postdec1	equ	0xFE5
  7165                           fsr1h	equ	0xFE2
  7166                           fsr1l	equ	0xFE1
  7167                           indf2	equ	0xFDF
  7168                           postinc2	equ	0xFDE
  7169                           postdec2	equ	0xFDD
  7170                           fsr2h	equ	0xFDA
  7171                           fsr2l	equ	0xFD9
  7172                           status	equ	0xFD8
  7173                           
  7174 ;; *************** function i2_do_I2C_RCEN *****************
  7175 ;; Defined at:
  7176 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;		None
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;		None
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  1    wreg      enum E11956
  7183 ;; Registers used:
  7184 ;;		wreg, cstack
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7194 ;;Total ram usage:        0 bytes
  7195 ;; Hardware stack levels used:    1
  7196 ;; Hardware stack levels required when called:    1
  7197 ;; This function calls:
  7198 ;;		i2_i2c1_driver_startRX
  7199 ;; This function is called by:
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text70
  7204  000D5A                     __ptext70:
  7205                           	opt stack 0
  7206  000D5A                     i2_do_I2C_RCEN:
  7207                           	opt stack 18
  7208                           
  7209                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  7210                           
  7211                           ;incstack = 0
  7212  000D5A  9601               	bcf	_i2c_status,3,c
  7213                           
  7214                           ;i2c_master.c: 295: i2c1_driver_startRX();
  7215  000D5C  EC12  F007         	call	i2_i2c1_driver_startRX	;wreg free
  7216                           
  7217                           ;i2c_master.c: 296: return I2C_RX;
  7218  000D60  0E04               	movlw	4
  7219  000D62  0012               	return	
  7220  000D64                     __end_ofi2_do_I2C_RCEN:
  7221                           	opt stack 0
  7222                           tosu	equ	0xFFF
  7223                           tosh	equ	0xFFE
  7224                           tosl	equ	0xFFD
  7225                           pclatu	equ	0xFFB
  7226                           pclath	equ	0xFFA
  7227                           tblptru	equ	0xFF8
  7228                           tblptrh	equ	0xFF7
  7229                           tblptrl	equ	0xFF6
  7230                           tablat	equ	0xFF5
  7231                           prodh	equ	0xFF4
  7232                           prodl	equ	0xFF3
  7233                           intcon	equ	0xFF2
  7234                           postinc0	equ	0xFEE
  7235                           fsr0h	equ	0xFEA
  7236                           fsr0l	equ	0xFE9
  7237                           wreg	equ	0xFE8
  7238                           postdec1	equ	0xFE5
  7239                           fsr1h	equ	0xFE2
  7240                           fsr1l	equ	0xFE1
  7241                           indf2	equ	0xFDF
  7242                           postinc2	equ	0xFDE
  7243                           postdec2	equ	0xFDD
  7244                           fsr2h	equ	0xFDA
  7245                           fsr2l	equ	0xFD9
  7246                           status	equ	0xFD8
  7247                           
  7248 ;; *************** function i2_do_I2C_SEND_ADR_WRITE *****************
  7249 ;; Defined at:
  7250 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;		None
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      enum E11956
  7257 ;; Registers used:
  7258 ;;		wreg, status,2, status,0, cstack
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/0
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7268 ;;Total ram usage:        0 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:    1
  7271 ;; This function calls:
  7272 ;;		i2_i2c1_driver_TXData
  7273 ;; This function is called by:
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           	psect	text71
  7278  000D12                     __ptext71:
  7279                           	opt stack 0
  7280  000D12                     i2_do_I2C_SEND_ADR_WRITE:
  7281                           	opt stack 18
  7282                           
  7283                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  7284                           
  7285                           ;incstack = 0
  7286  000D12  8601               	bsf	_i2c_status,3,c
  7287                           
  7288                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  7289  000D14  5002               	movf	_i2c_status+1,w,c
  7290  000D16  2402               	addwf	_i2c_status+1,w,c
  7291  000D18  ECDF  F006         	call	i2_i2c1_driver_TXData
  7292                           
  7293                           ;i2c_master.c: 289: return I2C_TX;
  7294  000D1C  0E03               	movlw	3
  7295  000D1E  0012               	return	
  7296  000D20                     __end_ofi2_do_I2C_SEND_ADR_WRITE:
  7297                           	opt stack 0
  7298                           tosu	equ	0xFFF
  7299                           tosh	equ	0xFFE
  7300                           tosl	equ	0xFFD
  7301                           pclatu	equ	0xFFB
  7302                           pclath	equ	0xFFA
  7303                           tblptru	equ	0xFF8
  7304                           tblptrh	equ	0xFF7
  7305                           tblptrl	equ	0xFF6
  7306                           tablat	equ	0xFF5
  7307                           prodh	equ	0xFF4
  7308                           prodl	equ	0xFF3
  7309                           intcon	equ	0xFF2
  7310                           postinc0	equ	0xFEE
  7311                           fsr0h	equ	0xFEA
  7312                           fsr0l	equ	0xFE9
  7313                           wreg	equ	0xFE8
  7314                           postdec1	equ	0xFE5
  7315                           fsr1h	equ	0xFE2
  7316                           fsr1l	equ	0xFE1
  7317                           indf2	equ	0xFDF
  7318                           postinc2	equ	0xFDE
  7319                           postdec2	equ	0xFDD
  7320                           fsr2h	equ	0xFDA
  7321                           fsr2l	equ	0xFD9
  7322                           status	equ	0xFD8
  7323                           
  7324 ;; *************** function i2_do_I2C_SEND_ADR_READ *****************
  7325 ;; Defined at:
  7326 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      enum E11956
  7333 ;; Registers used:
  7334 ;;		wreg, status,0, cstack
  7335 ;; Tracked objects:
  7336 ;;		On entry : 0/0
  7337 ;;		On exit  : 0/0
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7344 ;;Total ram usage:        0 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    1
  7347 ;; This function calls:
  7348 ;;		i2_i2c1_driver_TXData
  7349 ;; This function is called by:
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text72
  7354  000D20                     __ptext72:
  7355                           	opt stack 0
  7356  000D20                     i2_do_I2C_SEND_ADR_READ:
  7357                           	opt stack 18
  7358                           
  7359                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  7360                           
  7361                           ;incstack = 0
  7362  000D20  8601               	bsf	_i2c_status,3,c
  7363                           
  7364                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  7365  000D22  80D8               	bsf	status,0,c
  7366  000D24  3402               	rlcf	_i2c_status+1,w,c
  7367  000D26  ECDF  F006         	call	i2_i2c1_driver_TXData
  7368                           
  7369                           ;i2c_master.c: 282: return I2C_RCEN;
  7370  000D2A  0E05               	movlw	5
  7371  000D2C  0012               	return	
  7372  000D2E                     __end_ofi2_do_I2C_SEND_ADR_READ:
  7373                           	opt stack 0
  7374                           tosu	equ	0xFFF
  7375                           tosh	equ	0xFFE
  7376                           tosl	equ	0xFFD
  7377                           pclatu	equ	0xFFB
  7378                           pclath	equ	0xFFA
  7379                           tblptru	equ	0xFF8
  7380                           tblptrh	equ	0xFF7
  7381                           tblptrl	equ	0xFF6
  7382                           tablat	equ	0xFF5
  7383                           prodh	equ	0xFF4
  7384                           prodl	equ	0xFF3
  7385                           intcon	equ	0xFF2
  7386                           postinc0	equ	0xFEE
  7387                           fsr0h	equ	0xFEA
  7388                           fsr0l	equ	0xFE9
  7389                           wreg	equ	0xFE8
  7390                           postdec1	equ	0xFE5
  7391                           fsr1h	equ	0xFE2
  7392                           fsr1l	equ	0xFE1
  7393                           indf2	equ	0xFDF
  7394                           postinc2	equ	0xFDE
  7395                           postdec2	equ	0xFDD
  7396                           fsr2h	equ	0xFDA
  7397                           fsr2l	equ	0xFD9
  7398                           status	equ	0xFD8
  7399                           
  7400 ;; *************** function i2_do_I2C_SEND_STOP *****************
  7401 ;; Defined at:
  7402 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;		None
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  1    wreg      enum E11956
  7409 ;; Registers used:
  7410 ;;		wreg, cstack
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;Total ram usage:        0 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; Hardware stack levels required when called:    1
  7423 ;; This function calls:
  7424 ;;		i2_i2c1_driver_stop
  7425 ;; This function is called by:
  7426 ;;		i2_do_I2C_DO_ADDRESS_NACK
  7427 ;;		i2_do_I2C_TX
  7428 ;;		i2_do_I2C_TX_EMPTY
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text73
  7433  000D9E                     __ptext73:
  7434                           	opt stack 0
  7435  000D9E                     i2_do_I2C_SEND_STOP:
  7436                           	opt stack 17
  7437                           
  7438                           ;i2c_master.c: 274: i2c1_driver_stop();
  7439                           
  7440                           ;incstack = 0
  7441  000D9E  EC1A  F007         	call	i2_i2c1_driver_stop	;wreg free
  7442                           
  7443                           ;i2c_master.c: 275: return I2C_IDLE;
  7444  000DA2  0E00               	movlw	0
  7445  000DA4  0012               	return	
  7446  000DA6                     __end_ofi2_do_I2C_SEND_STOP:
  7447                           	opt stack 0
  7448                           tosu	equ	0xFFF
  7449                           tosh	equ	0xFFE
  7450                           tosl	equ	0xFFD
  7451                           pclatu	equ	0xFFB
  7452                           pclath	equ	0xFFA
  7453                           tblptru	equ	0xFF8
  7454                           tblptrh	equ	0xFF7
  7455                           tblptrl	equ	0xFF6
  7456                           tablat	equ	0xFF5
  7457                           prodh	equ	0xFF4
  7458                           prodl	equ	0xFF3
  7459                           intcon	equ	0xFF2
  7460                           postinc0	equ	0xFEE
  7461                           fsr0h	equ	0xFEA
  7462                           fsr0l	equ	0xFE9
  7463                           wreg	equ	0xFE8
  7464                           postdec1	equ	0xFE5
  7465                           fsr1h	equ	0xFE2
  7466                           fsr1l	equ	0xFE1
  7467                           indf2	equ	0xFDF
  7468                           postinc2	equ	0xFDE
  7469                           postdec2	equ	0xFDD
  7470                           fsr2h	equ	0xFDA
  7471                           fsr2l	equ	0xFD9
  7472                           status	equ	0xFD8
  7473                           
  7474 ;; *************** function i2_do_I2C_SEND_RESTART *****************
  7475 ;; Defined at:
  7476 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;		None
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      enum E11956
  7483 ;; Registers used:
  7484 ;;		wreg, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7494 ;;Total ram usage:        0 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    1
  7497 ;; This function calls:
  7498 ;;		i2_i2c1_driver_restart
  7499 ;; This function is called by:
  7500 ;;		i2_do_I2C_DO_ADDRESS_NACK
  7501 ;;		i2_do_I2C_TX_EMPTY
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           	psect	text74
  7506  000DA6                     __ptext74:
  7507                           	opt stack 0
  7508  000DA6                     i2_do_I2C_SEND_RESTART:
  7509                           	opt stack 17
  7510                           
  7511                           ;i2c_master.c: 268: i2c1_driver_restart();
  7512                           
  7513                           ;incstack = 0
  7514  000DA6  EC1C  F007         	call	i2_i2c1_driver_restart	;wreg free
  7515                           
  7516                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  7517  000DAA  0E01               	movlw	1
  7518  000DAC  0012               	return	
  7519  000DAE                     __end_ofi2_do_I2C_SEND_RESTART:
  7520                           	opt stack 0
  7521                           tosu	equ	0xFFF
  7522                           tosh	equ	0xFFE
  7523                           tosl	equ	0xFFD
  7524                           pclatu	equ	0xFFB
  7525                           pclath	equ	0xFFA
  7526                           tblptru	equ	0xFF8
  7527                           tblptrh	equ	0xFF7
  7528                           tblptrl	equ	0xFF6
  7529                           tablat	equ	0xFF5
  7530                           prodh	equ	0xFF4
  7531                           prodl	equ	0xFF3
  7532                           intcon	equ	0xFF2
  7533                           postinc0	equ	0xFEE
  7534                           fsr0h	equ	0xFEA
  7535                           fsr0l	equ	0xFE9
  7536                           wreg	equ	0xFE8
  7537                           postdec1	equ	0xFE5
  7538                           fsr1h	equ	0xFE2
  7539                           fsr1l	equ	0xFE1
  7540                           indf2	equ	0xFDF
  7541                           postinc2	equ	0xFDE
  7542                           postdec2	equ	0xFDD
  7543                           fsr2h	equ	0xFDA
  7544                           fsr2l	equ	0xFD9
  7545                           status	equ	0xFD8
  7546                           
  7547 ;; *************** function i2_do_I2C_SEND_RESTART_WRITE *****************
  7548 ;; Defined at:
  7549 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;		None
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;		None
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  1    wreg      enum E11956
  7556 ;; Registers used:
  7557 ;;		wreg, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7567 ;;Total ram usage:        0 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:    1
  7570 ;; This function calls:
  7571 ;;		i2_i2c1_driver_restart
  7572 ;; This function is called by:
  7573 ;;		i2_do_I2C_TX
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text75
  7578  000DAE                     __ptext75:
  7579                           	opt stack 0
  7580  000DAE                     i2_do_I2C_SEND_RESTART_WRITE:
  7581                           	opt stack 17
  7582                           
  7583                           ;i2c_master.c: 262: i2c1_driver_restart();
  7584                           
  7585                           ;incstack = 0
  7586  000DAE  EC1C  F007         	call	i2_i2c1_driver_restart	;wreg free
  7587                           
  7588                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  7589  000DB2  0E02               	movlw	2
  7590  000DB4  0012               	return	
  7591  000DB6                     __end_ofi2_do_I2C_SEND_RESTART_WRITE:
  7592                           	opt stack 0
  7593                           tosu	equ	0xFFF
  7594                           tosh	equ	0xFFE
  7595                           tosl	equ	0xFFD
  7596                           pclatu	equ	0xFFB
  7597                           pclath	equ	0xFFA
  7598                           tblptru	equ	0xFF8
  7599                           tblptrh	equ	0xFF7
  7600                           tblptrl	equ	0xFF6
  7601                           tablat	equ	0xFF5
  7602                           prodh	equ	0xFF4
  7603                           prodl	equ	0xFF3
  7604                           intcon	equ	0xFF2
  7605                           postinc0	equ	0xFEE
  7606                           fsr0h	equ	0xFEA
  7607                           fsr0l	equ	0xFE9
  7608                           wreg	equ	0xFE8
  7609                           postdec1	equ	0xFE5
  7610                           fsr1h	equ	0xFE2
  7611                           fsr1l	equ	0xFE1
  7612                           indf2	equ	0xFDF
  7613                           postinc2	equ	0xFDE
  7614                           postdec2	equ	0xFDD
  7615                           fsr2h	equ	0xFDA
  7616                           fsr2l	equ	0xFD9
  7617                           status	equ	0xFD8
  7618                           
  7619 ;; *************** function i2_do_I2C_SEND_RESTART_READ *****************
  7620 ;; Defined at:
  7621 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;		None
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      enum E11956
  7628 ;; Registers used:
  7629 ;;		wreg, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7639 ;;Total ram usage:        0 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    1
  7642 ;; This function calls:
  7643 ;;		i2_i2c1_driver_restart
  7644 ;; This function is called by:
  7645 ;;		i2_do_I2C_TX
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text76
  7650  000DB6                     __ptext76:
  7651                           	opt stack 0
  7652  000DB6                     i2_do_I2C_SEND_RESTART_READ:
  7653                           	opt stack 17
  7654                           
  7655                           ;i2c_master.c: 256: i2c1_driver_restart();
  7656                           
  7657                           ;incstack = 0
  7658  000DB6  EC1C  F007         	call	i2_i2c1_driver_restart	;wreg free
  7659                           
  7660                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  7661  000DBA  0E01               	movlw	1
  7662  000DBC  0012               	return	
  7663  000DBE                     __end_ofi2_do_I2C_SEND_RESTART_READ:
  7664                           	opt stack 0
  7665                           tosu	equ	0xFFF
  7666                           tosh	equ	0xFFE
  7667                           tosl	equ	0xFFD
  7668                           pclatu	equ	0xFFB
  7669                           pclath	equ	0xFFA
  7670                           tblptru	equ	0xFF8
  7671                           tblptrh	equ	0xFF7
  7672                           tblptrl	equ	0xFF6
  7673                           tablat	equ	0xFF5
  7674                           prodh	equ	0xFF4
  7675                           prodl	equ	0xFF3
  7676                           intcon	equ	0xFF2
  7677                           postinc0	equ	0xFEE
  7678                           fsr0h	equ	0xFEA
  7679                           fsr0l	equ	0xFE9
  7680                           wreg	equ	0xFE8
  7681                           postdec1	equ	0xFE5
  7682                           fsr1h	equ	0xFE2
  7683                           fsr1l	equ	0xFE1
  7684                           indf2	equ	0xFDF
  7685                           postinc2	equ	0xFDE
  7686                           postdec2	equ	0xFDD
  7687                           fsr2h	equ	0xFDA
  7688                           fsr2l	equ	0xFD9
  7689                           status	equ	0xFD8
  7690                           
  7691 ;; *************** function i2_do_I2C_IDLE *****************
  7692 ;; Defined at:
  7693 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;		None
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      enum E11956
  7700 ;; Registers used:
  7701 ;;		wreg, status,2
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7711 ;;Total ram usage:        0 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	text77
  7720  000D64                     __ptext77:
  7721                           	opt stack 0
  7722  000D64                     i2_do_I2C_IDLE:
  7723                           	opt stack 19
  7724                           
  7725                           ;i2c_master.c: 249: i2c_status.busy = 0;
  7726                           
  7727                           ;incstack = 0
  7728  000D64  9001               	bcf	_i2c_status,0,c
  7729                           
  7730                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  7731  000D66  0E00               	movlw	0
  7732  000D68  6E0C               	movwf	_i2c_status+11,c
  7733                           
  7734                           ;i2c_master.c: 251: return I2C_RESET;
  7735  000D6A  0E0E               	movlw	14
  7736  000D6C  0012               	return	
  7737  000D6E                     __end_ofi2_do_I2C_IDLE:
  7738                           	opt stack 0
  7739                           tosu	equ	0xFFF
  7740                           tosh	equ	0xFFE
  7741                           tosl	equ	0xFFD
  7742                           pclatu	equ	0xFFB
  7743                           pclath	equ	0xFFA
  7744                           tblptru	equ	0xFF8
  7745                           tblptrh	equ	0xFF7
  7746                           tblptrl	equ	0xFF6
  7747                           tablat	equ	0xFF5
  7748                           prodh	equ	0xFF4
  7749                           prodl	equ	0xFF3
  7750                           intcon	equ	0xFF2
  7751                           postinc0	equ	0xFEE
  7752                           fsr0h	equ	0xFEA
  7753                           fsr0l	equ	0xFE9
  7754                           wreg	equ	0xFE8
  7755                           postdec1	equ	0xFE5
  7756                           fsr1h	equ	0xFE2
  7757                           fsr1l	equ	0xFE1
  7758                           indf2	equ	0xFDF
  7759                           postinc2	equ	0xFDE
  7760                           postdec2	equ	0xFDD
  7761                           fsr2h	equ	0xFDA
  7762                           fsr2l	equ	0xFD9
  7763                           status	equ	0xFD8
  7764                           
  7765 ;; *************** function i2_do_I2C_RESET *****************
  7766 ;; Defined at:
  7767 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;		None
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      enum E11956
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, cstack
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;Total ram usage:        0 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:    1
  7788 ;; This function calls:
  7789 ;;		i2_i2c1_driver_resetBus
  7790 ;; This function is called by:
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text78
  7795  000D2E                     __ptext78:
  7796                           	opt stack 0
  7797  000D2E                     i2_do_I2C_RESET:
  7798                           	opt stack 18
  7799                           
  7800                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  7801                           
  7802                           ;incstack = 0
  7803  000D2E  EC1F  F007         	call	i2_i2c1_driver_resetBus	;wreg free
  7804                           
  7805                           ;i2c_master.c: 242: i2c_status.busy = 0;
  7806  000D32  9001               	bcf	_i2c_status,0,c
  7807                           
  7808                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  7809  000D34  0E00               	movlw	0
  7810  000D36  6E0C               	movwf	_i2c_status+11,c
  7811                           
  7812                           ;i2c_master.c: 244: return I2C_RESET;
  7813  000D38  0E0E               	movlw	14
  7814  000D3A  0012               	return	
  7815  000D3C                     __end_ofi2_do_I2C_RESET:
  7816                           	opt stack 0
  7817                           tosu	equ	0xFFF
  7818                           tosh	equ	0xFFE
  7819                           tosl	equ	0xFFD
  7820                           pclatu	equ	0xFFB
  7821                           pclath	equ	0xFFA
  7822                           tblptru	equ	0xFF8
  7823                           tblptrh	equ	0xFF7
  7824                           tblptrl	equ	0xFF6
  7825                           tablat	equ	0xFF5
  7826                           prodh	equ	0xFF4
  7827                           prodl	equ	0xFF3
  7828                           intcon	equ	0xFF2
  7829                           postinc0	equ	0xFEE
  7830                           fsr0h	equ	0xFEA
  7831                           fsr0l	equ	0xFE9
  7832                           wreg	equ	0xFE8
  7833                           postdec1	equ	0xFE5
  7834                           fsr1h	equ	0xFE2
  7835                           fsr1l	equ	0xFE1
  7836                           indf2	equ	0xFDF
  7837                           postinc2	equ	0xFDE
  7838                           postdec2	equ	0xFDD
  7839                           fsr2h	equ	0xFDA
  7840                           fsr2l	equ	0xFD9
  7841                           status	equ	0xFD8
  7842                           
  7843 ;; *************** function i2_do_I2C_TX_EMPTY *****************
  7844 ;; Defined at:
  7845 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      enum E11956
  7852 ;; Registers used:
  7853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    3
  7866 ;; This function calls:
  7867 ;;		Absolute function
  7868 ;;		i2_do_I2C_SEND_RESTART
  7869 ;;		i2_do_I2C_SEND_STOP
  7870 ;;		i2_i2c_restartWrite
  7871 ;;		i2_mssp1_setIRQ
  7872 ;;		i2_rd1RegCompleteHandler
  7873 ;;		i2_rd2RegCompleteHandler
  7874 ;;		i2_rdBlkRegCompleteHandler
  7875 ;;		i2_returnReset
  7876 ;;		i2_returnStop
  7877 ;;		i2_wr1RegCompleteHandler
  7878 ;;		i2_wr2RegCompleteHandler
  7879 ;; This function is called by:
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           	psect	text79
  7884  00060E                     __ptext79:
  7885                           	opt stack 0
  7886  00060E                     i2_do_I2C_TX_EMPTY:
  7887                           	opt stack 16
  7888                           
  7889                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  7890                           
  7891                           ;incstack = 0
  7892  00060E  8401               	bsf	_i2c_status,2,c
  7893                           
  7894                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  7895  000610  D00A               	goto	i2l457
  7896  000612                     
  7897                           ;i2c_master.c: 388: case i2c_restart_write:
  7898                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  7899  000612  ECD3  F006         	call	i2_do_I2C_SEND_RESTART	;wreg free
  7900  000616  0012               	return	
  7901  000618                     
  7902                           ;i2c_master.c: 391: mssp1_setIRQ();
  7903  000618  ECF5  F006         	call	i2_mssp1_setIRQ	;wreg free
  7904                           
  7905                           ;i2c_master.c: 392: return I2C_TX;
  7906  00061C  0E03               	movlw	3
  7907  00061E  0012               	return	
  7908  000620                     
  7909                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  7910                           
  7911                           ;i2c_master.c: 394: case i2c_stop:
  7912  000620  ECCF  F006         	call	i2_do_I2C_SEND_STOP	;wreg free
  7913                           
  7914                           ;i2c_master.c: 396: }
  7915  000624  0012               	return	
  7916  000626                     i2l457:
  7917  000626  C01F  F03C         	movff	_i2c_status+30,i2returnStop@p
  7918  00062A  C020  F03D         	movff	_i2c_status+31,i2returnStop@p+1
  7919  00062E  EE20  F00D         	lfsr	2,_i2c_status+12
  7920  000632  D801               	call	i2u150_48
  7921  000634  D00A               	goto	i2u150_49
  7922  000636                     i2u150_48:
  7923  000636  0005               	push	
  7924  000638  6EFA               	movwf	pclath,c
  7925  00063A  50DE               	movf	postinc2,w,c
  7926  00063C  6EFD               	movwf	tosl,c
  7927  00063E  50DE               	movf	postinc2,w,c
  7928  000640  6EFE               	movwf	tosh,c
  7929  000642  50DE               	movf	postinc2,w,c
  7930  000644  6EFF               	movwf	tosu,c
  7931  000646  50FA               	movf	pclath,w,c
  7932  000648  0012               	return		;indir
  7933  00064A                     i2u150_49:
  7934                           
  7935                           ; Switch size 1, requested type "space"
  7936                           ; Number of cases is 4, Range of values is 1 to 4
  7937                           ; switch strategies available:
  7938                           ; Name         Instructions Cycles
  7939                           ; simple_byte           13     7 (average)
  7940                           ;	Chosen strategy is simple_byte
  7941  00064A  0A01               	xorlw	1	; case 1
  7942  00064C  B4D8               	btfsc	status,2,c
  7943  00064E  D7E8               	goto	i2l462
  7944  000650  0A03               	xorlw	3	; case 2
  7945  000652  B4D8               	btfsc	status,2,c
  7946  000654  D7DE               	goto	i2l458
  7947  000656  0A01               	xorlw	1	; case 3
  7948  000658  B4D8               	btfsc	status,2,c
  7949  00065A  D7DB               	goto	i2l458
  7950  00065C  0A07               	xorlw	7	; case 4
  7951  00065E  B4D8               	btfsc	status,2,c
  7952  000660  D7DB               	goto	i2l461
  7953  000662  D7DE               	goto	i2l462
  7954  000664                     __end_ofi2_do_I2C_TX_EMPTY:
  7955                           	opt stack 0
  7956                           tosu	equ	0xFFF
  7957                           tosh	equ	0xFFE
  7958                           tosl	equ	0xFFD
  7959                           pclatu	equ	0xFFB
  7960                           pclath	equ	0xFFA
  7961                           tblptru	equ	0xFF8
  7962                           tblptrh	equ	0xFF7
  7963                           tblptrl	equ	0xFF6
  7964                           tablat	equ	0xFF5
  7965                           prodh	equ	0xFF4
  7966                           prodl	equ	0xFF3
  7967                           intcon	equ	0xFF2
  7968                           postinc0	equ	0xFEE
  7969                           fsr0h	equ	0xFEA
  7970                           fsr0l	equ	0xFE9
  7971                           wreg	equ	0xFE8
  7972                           postdec1	equ	0xFE5
  7973                           fsr1h	equ	0xFE2
  7974                           fsr1l	equ	0xFE1
  7975                           indf2	equ	0xFDF
  7976                           postinc2	equ	0xFDE
  7977                           postdec2	equ	0xFDD
  7978                           fsr2h	equ	0xFDA
  7979                           fsr2l	equ	0xFD9
  7980                           status	equ	0xFD8
  7981                           
  7982 ;; *************** function i2_mssp1_setIRQ *****************
  7983 ;; Defined at:
  7984 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;		None
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		None
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8002 ;;Total ram usage:        0 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		i2_do_I2C_TX_EMPTY
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text80
  8012  000DEA                     __ptext80:
  8013                           	opt stack 0
  8014  000DEA                     i2_mssp1_setIRQ:
  8015                           	opt stack 18
  8016                           
  8017                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  8018                           
  8019                           ;incstack = 0
  8020  000DEA  010E               	movlb	14	; () banked
  8021  000DEC  81CD               	bsf	205,0,b	;volatile
  8022                           
  8023                           ; BSR set to: 14
  8024  000DEE  0012               	return		;funcret
  8025  000DF0                     __end_ofi2_mssp1_setIRQ:
  8026                           	opt stack 0
  8027                           tosu	equ	0xFFF
  8028                           tosh	equ	0xFFE
  8029                           tosl	equ	0xFFD
  8030                           pclatu	equ	0xFFB
  8031                           pclath	equ	0xFFA
  8032                           tblptru	equ	0xFF8
  8033                           tblptrh	equ	0xFF7
  8034                           tblptrl	equ	0xFF6
  8035                           tablat	equ	0xFF5
  8036                           prodh	equ	0xFF4
  8037                           prodl	equ	0xFF3
  8038                           intcon	equ	0xFF2
  8039                           postinc0	equ	0xFEE
  8040                           fsr0h	equ	0xFEA
  8041                           fsr0l	equ	0xFE9
  8042                           wreg	equ	0xFE8
  8043                           postdec1	equ	0xFE5
  8044                           fsr1h	equ	0xFE2
  8045                           fsr1l	equ	0xFE1
  8046                           indf2	equ	0xFDF
  8047                           postinc2	equ	0xFDE
  8048                           postdec2	equ	0xFDD
  8049                           fsr2h	equ	0xFDA
  8050                           fsr2l	equ	0xFD9
  8051                           status	equ	0xFD8
  8052                           
  8053 ;; *************** function i2_i2c1_driver_isNACK *****************
  8054 ;; Defined at:
  8055 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;		None
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;		None               void
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8071 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8073 ;;Total ram usage:        1 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		i2_do_I2C_TX
  8079 ;;		i2_i2c_ISR
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text81
  8084  000BFE                     __ptext81:
  8085                           	opt stack 0
  8086  000BFE                     i2_i2c1_driver_isNACK:
  8087                           	opt stack 19
  8088                           
  8089                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  8090                           
  8091                           ; BSR set to: 14
  8092                           ;incstack = 0
  8093  000BFE  5097               	movf	3991,w,c	;volatile
  8094  000C00  0BBF               	andlw	-65
  8095  000C02  0940               	iorlw	64
  8096  000C04  6E97               	movwf	3991,c	;volatile
  8097  000C06  3897               	swapf	3991,w,c	;volatile
  8098  000C08  32E8               	rrcf	wreg,f,c
  8099  000C0A  32E8               	rrcf	wreg,f,c
  8100  000C0C  0B01               	andlw	1
  8101  000C0E  6E31               	movwf	??i2_i2c1_driver_isNACK& (0+255),c
  8102  000C10  3031               	rrcf	??i2_i2c1_driver_isNACK,w,c
  8103  000C12  0012               	return	
  8104  000C14                     __end_ofi2_i2c1_driver_isNACK:
  8105                           	opt stack 0
  8106                           tosu	equ	0xFFF
  8107                           tosh	equ	0xFFE
  8108                           tosl	equ	0xFFD
  8109                           pclatu	equ	0xFFB
  8110                           pclath	equ	0xFFA
  8111                           tblptru	equ	0xFF8
  8112                           tblptrh	equ	0xFF7
  8113                           tblptrl	equ	0xFF6
  8114                           tablat	equ	0xFF5
  8115                           prodh	equ	0xFF4
  8116                           prodl	equ	0xFF3
  8117                           intcon	equ	0xFF2
  8118                           postinc0	equ	0xFEE
  8119                           fsr0h	equ	0xFEA
  8120                           fsr0l	equ	0xFE9
  8121                           wreg	equ	0xFE8
  8122                           postdec1	equ	0xFE5
  8123                           fsr1h	equ	0xFE2
  8124                           fsr1l	equ	0xFE1
  8125                           indf2	equ	0xFDF
  8126                           postinc2	equ	0xFDE
  8127                           postdec2	equ	0xFDD
  8128                           fsr2h	equ	0xFDA
  8129                           fsr2l	equ	0xFD9
  8130                           status	equ	0xFD8
  8131                           
  8132 ;; *************** function i2_i2c1_driver_TXData *****************
  8133 ;; Defined at:
  8134 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  d               1    wreg     unsigned char 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  d               1    0[COMRAM] unsigned char 
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1    wreg      void 
  8141 ;; Registers used:
  8142 ;;		wreg
  8143 ;; Tracked objects:
  8144 ;;		On entry : 0/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8152 ;;Total ram usage:        1 bytes
  8153 ;; Hardware stack levels used:    1
  8154 ;; This function calls:
  8155 ;;		Nothing
  8156 ;; This function is called by:
  8157 ;;		i2_do_I2C_SEND_ADR_READ
  8158 ;;		i2_do_I2C_SEND_ADR_WRITE
  8159 ;;		i2_do_I2C_TX
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text82
  8164  000DBE                     __ptext82:
  8165                           	opt stack 0
  8166  000DBE                     i2_i2c1_driver_TXData:
  8167                           	opt stack 18
  8168                           
  8169                           ;incstack = 0
  8170                           ;i2i2c1_driver_TXData@d stored from wreg
  8171  000DBE  6E31               	movwf	i2i2c1_driver_TXData@d,c
  8172                           
  8173                           ;i2c1_driver.c: 188: SSP1BUF = d;
  8174  000DC0  C031  FF92         	movff	i2i2c1_driver_TXData@d,3986	;volatile
  8175  000DC4  0012               	return		;funcret
  8176  000DC6                     __end_ofi2_i2c1_driver_TXData:
  8177                           	opt stack 0
  8178                           tosu	equ	0xFFF
  8179                           tosh	equ	0xFFE
  8180                           tosl	equ	0xFFD
  8181                           pclatu	equ	0xFFB
  8182                           pclath	equ	0xFFA
  8183                           tblptru	equ	0xFF8
  8184                           tblptrh	equ	0xFF7
  8185                           tblptrl	equ	0xFF6
  8186                           tablat	equ	0xFF5
  8187                           prodh	equ	0xFF4
  8188                           prodl	equ	0xFF3
  8189                           intcon	equ	0xFF2
  8190                           postinc0	equ	0xFEE
  8191                           fsr0h	equ	0xFEA
  8192                           fsr0l	equ	0xFE9
  8193                           wreg	equ	0xFE8
  8194                           postdec1	equ	0xFE5
  8195                           fsr1h	equ	0xFE2
  8196                           fsr1l	equ	0xFE1
  8197                           indf2	equ	0xFDF
  8198                           postinc2	equ	0xFDE
  8199                           postdec2	equ	0xFDD
  8200                           fsr2h	equ	0xFDA
  8201                           fsr2l	equ	0xFD9
  8202                           status	equ	0xFD8
  8203                           
  8204 ;; *************** function i2_i2c1_driver_getRXData *****************
  8205 ;; Defined at:
  8206 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      unsigned char 
  8213 ;; Registers used:
  8214 ;;		wreg, status,2
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8224 ;;Total ram usage:        0 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; This function calls:
  8227 ;;		Nothing
  8228 ;; This function is called by:
  8229 ;;		i2_do_I2C_RX
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text83
  8234  000E20                     __ptext83:
  8235                           	opt stack 0
  8236  000E20                     i2_i2c1_driver_getRXData:
  8237                           	opt stack 18
  8238                           
  8239                           ;i2c1_driver.c: 173: return SSP1BUF;
  8240                           
  8241                           ;incstack = 0
  8242  000E20  5092               	movf	3986,w,c	;volatile
  8243  000E22  0012               	return	
  8244  000E24                     __end_ofi2_i2c1_driver_getRXData:
  8245                           	opt stack 0
  8246                           tosu	equ	0xFFF
  8247                           tosh	equ	0xFFE
  8248                           tosl	equ	0xFFD
  8249                           pclatu	equ	0xFFB
  8250                           pclath	equ	0xFFA
  8251                           tblptru	equ	0xFF8
  8252                           tblptrh	equ	0xFF7
  8253                           tblptrl	equ	0xFF6
  8254                           tablat	equ	0xFF5
  8255                           prodh	equ	0xFF4
  8256                           prodl	equ	0xFF3
  8257                           intcon	equ	0xFF2
  8258                           postinc0	equ	0xFEE
  8259                           fsr0h	equ	0xFEA
  8260                           fsr0l	equ	0xFE9
  8261                           wreg	equ	0xFE8
  8262                           postdec1	equ	0xFE5
  8263                           fsr1h	equ	0xFE2
  8264                           fsr1l	equ	0xFE1
  8265                           indf2	equ	0xFDF
  8266                           postinc2	equ	0xFDE
  8267                           postdec2	equ	0xFDD
  8268                           fsr2h	equ	0xFDA
  8269                           fsr2l	equ	0xFD9
  8270                           status	equ	0xFD8
  8271                           
  8272 ;; *************** function i2_i2c1_driver_sendNACK *****************
  8273 ;; Defined at:
  8274 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		None
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		i2_do_I2C_DO_NACK_STOP
  8298 ;;		i2_do_I2C_DO_NACK_RESTART
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text84
  8303  000DF0                     __ptext84:
  8304                           	opt stack 0
  8305  000DF0                     i2_i2c1_driver_sendNACK:
  8306                           	opt stack 17
  8307                           
  8308                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  8309                           
  8310                           ;incstack = 0
  8311  000DF0  8A97               	bsf	3991,5,c	;volatile
  8312                           
  8313                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  8314  000DF2  8897               	bsf	3991,4,c	;volatile
  8315  000DF4  0012               	return		;funcret
  8316  000DF6                     __end_ofi2_i2c1_driver_sendNACK:
  8317                           	opt stack 0
  8318                           tosu	equ	0xFFF
  8319                           tosh	equ	0xFFE
  8320                           tosl	equ	0xFFD
  8321                           pclatu	equ	0xFFB
  8322                           pclath	equ	0xFFA
  8323                           tblptru	equ	0xFF8
  8324                           tblptrh	equ	0xFF7
  8325                           tblptrl	equ	0xFF6
  8326                           tablat	equ	0xFF5
  8327                           prodh	equ	0xFF4
  8328                           prodl	equ	0xFF3
  8329                           intcon	equ	0xFF2
  8330                           postinc0	equ	0xFEE
  8331                           fsr0h	equ	0xFEA
  8332                           fsr0l	equ	0xFE9
  8333                           wreg	equ	0xFE8
  8334                           postdec1	equ	0xFE5
  8335                           fsr1h	equ	0xFE2
  8336                           fsr1l	equ	0xFE1
  8337                           indf2	equ	0xFDF
  8338                           postinc2	equ	0xFDE
  8339                           postdec2	equ	0xFDD
  8340                           fsr2h	equ	0xFDA
  8341                           fsr2l	equ	0xFD9
  8342                           status	equ	0xFD8
  8343                           
  8344 ;; *************** function i2_i2c1_driver_resetBus *****************
  8345 ;; Defined at:
  8346 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;		None
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  1    wreg      void 
  8353 ;; Registers used:
  8354 ;;		None
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;Total ram usage:        0 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		i2_do_I2C_RESET
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text85
  8374  000E3E                     __ptext85:
  8375                           	opt stack 0
  8376  000E3E                     i2_i2c1_driver_resetBus:
  8377                           	opt stack 18
  8378                           
  8379                           ;incstack = 0
  8380  000E3E  0012               	return		;funcret
  8381  000E40                     __end_ofi2_i2c1_driver_resetBus:
  8382                           	opt stack 0
  8383                           tosu	equ	0xFFF
  8384                           tosh	equ	0xFFE
  8385                           tosl	equ	0xFFD
  8386                           pclatu	equ	0xFFB
  8387                           pclath	equ	0xFFA
  8388                           tblptru	equ	0xFF8
  8389                           tblptrh	equ	0xFF7
  8390                           tblptrl	equ	0xFF6
  8391                           tablat	equ	0xFF5
  8392                           prodh	equ	0xFF4
  8393                           prodl	equ	0xFF3
  8394                           intcon	equ	0xFF2
  8395                           postinc0	equ	0xFEE
  8396                           fsr0h	equ	0xFEA
  8397                           fsr0l	equ	0xFE9
  8398                           wreg	equ	0xFE8
  8399                           postdec1	equ	0xFE5
  8400                           fsr1h	equ	0xFE2
  8401                           fsr1l	equ	0xFE1
  8402                           indf2	equ	0xFDF
  8403                           postinc2	equ	0xFDE
  8404                           postdec2	equ	0xFDD
  8405                           fsr2h	equ	0xFDA
  8406                           fsr2l	equ	0xFD9
  8407                           status	equ	0xFD8
  8408                           
  8409 ;; *************** function i2_i2c1_driver_startRX *****************
  8410 ;; Defined at:
  8411 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;		None
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		None
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8429 ;;Total ram usage:        0 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		i2_do_I2C_RCEN
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           	psect	text86
  8439  000E24                     __ptext86:
  8440                           	opt stack 0
  8441  000E24                     i2_i2c1_driver_startRX:
  8442                           	opt stack 18
  8443                           
  8444                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  8445                           
  8446                           ;incstack = 0
  8447  000E24  8697               	bsf	3991,3,c	;volatile
  8448  000E26  0012               	return		;funcret
  8449  000E28                     __end_ofi2_i2c1_driver_startRX:
  8450                           	opt stack 0
  8451                           tosu	equ	0xFFF
  8452                           tosh	equ	0xFFE
  8453                           tosl	equ	0xFFD
  8454                           pclatu	equ	0xFFB
  8455                           pclath	equ	0xFFA
  8456                           tblptru	equ	0xFF8
  8457                           tblptrh	equ	0xFF7
  8458                           tblptrl	equ	0xFF6
  8459                           tablat	equ	0xFF5
  8460                           prodh	equ	0xFF4
  8461                           prodl	equ	0xFF3
  8462                           intcon	equ	0xFF2
  8463                           postinc0	equ	0xFEE
  8464                           fsr0h	equ	0xFEA
  8465                           fsr0l	equ	0xFE9
  8466                           wreg	equ	0xFE8
  8467                           postdec1	equ	0xFE5
  8468                           fsr1h	equ	0xFE2
  8469                           fsr1l	equ	0xFE1
  8470                           indf2	equ	0xFDF
  8471                           postinc2	equ	0xFDE
  8472                           postdec2	equ	0xFDD
  8473                           fsr2h	equ	0xFDA
  8474                           fsr2l	equ	0xFD9
  8475                           status	equ	0xFD8
  8476                           
  8477 ;; *************** function i2_rdBlkRegCompleteHandler *****************
  8478 ;; Defined at:
  8479 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  p               2   11[COMRAM] PTR void 
  8482 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8483 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      enum E97
  8488 ;; Registers used:
  8489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8498 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8499 ;;Total ram usage:        2 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    2
  8502 ;; This function calls:
  8503 ;;		i2_i2c_setBuffer
  8504 ;;		i2_i2c_setDataCompleteCallback
  8505 ;; This function is called by:
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text87
  8510  0007DA                     __ptext87:
  8511                           	opt stack 0
  8512  0007DA                     i2_rdBlkRegCompleteHandler:
  8513                           	opt stack 16
  8514                           
  8515                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  8516                           
  8517                           ;incstack = 0
  8518  0007DA  EE20 F002          	lfsr	2,2
  8519  0007DE  503C               	movf	i2rdBlkRegCompleteHandler@p,w,c
  8520  0007E0  26D9               	addwf	fsr2l,f,c
  8521  0007E2  503D               	movf	i2rdBlkRegCompleteHandler@p+1,w,c
  8522  0007E4  22DA               	addwfc	fsr2h,f,c
  8523  0007E6  CFDE F031          	movff	postinc2,i2i2c_setBuffer@buffer
  8524  0007EA  CFDD F032          	movff	postdec2,i2i2c_setBuffer@buffer+1
  8525  0007EE  C03C  FFD9         	movff	i2rdBlkRegCompleteHandler@p,fsr2l
  8526  0007F2  C03D  FFDA         	movff	i2rdBlkRegCompleteHandler@p+1,fsr2h
  8527  0007F6  CFDE F033          	movff	postinc2,i2i2c_setBuffer@bufferSize
  8528  0007FA  CFDD F034          	movff	postdec2,i2i2c_setBuffer@bufferSize+1
  8529  0007FE  ECD2  F005         	call	i2_i2c_setBuffer	;wreg free
  8530                           
  8531                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  8532  000802  0E00               	movlw	0
  8533  000804  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8534  000806  0E00               	movlw	0
  8535  000808  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8536  00080A  0E00               	movlw	0
  8537  00080C  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8538  00080E  0E00               	movlw	0
  8539  000810  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8540  000812  0E00               	movlw	0
  8541  000814  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8542  000816  ECA0  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8543                           
  8544                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  8545  00081A  0E02               	movlw	2
  8546  00081C  0012               	return	
  8547  00081E                     __end_ofi2_rdBlkRegCompleteHandler:
  8548                           	opt stack 0
  8549                           tosu	equ	0xFFF
  8550                           tosh	equ	0xFFE
  8551                           tosl	equ	0xFFD
  8552                           pclatu	equ	0xFFB
  8553                           pclath	equ	0xFFA
  8554                           tblptru	equ	0xFF8
  8555                           tblptrh	equ	0xFF7
  8556                           tblptrl	equ	0xFF6
  8557                           tablat	equ	0xFF5
  8558                           prodh	equ	0xFF4
  8559                           prodl	equ	0xFF3
  8560                           intcon	equ	0xFF2
  8561                           postinc0	equ	0xFEE
  8562                           fsr0h	equ	0xFEA
  8563                           fsr0l	equ	0xFE9
  8564                           wreg	equ	0xFE8
  8565                           postdec1	equ	0xFE5
  8566                           fsr1h	equ	0xFE2
  8567                           fsr1l	equ	0xFE1
  8568                           indf2	equ	0xFDF
  8569                           postinc2	equ	0xFDE
  8570                           postdec2	equ	0xFDD
  8571                           fsr2h	equ	0xFDA
  8572                           fsr2l	equ	0xFD9
  8573                           status	equ	0xFD8
  8574                           
  8575 ;; *************** function i2_rd2RegCompleteHandler *****************
  8576 ;; Defined at:
  8577 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  p               2   11[COMRAM] PTR void 
  8580 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8581 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;		None
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  1    wreg      enum E97
  8586 ;; Registers used:
  8587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8597 ;;Total ram usage:        2 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    2
  8600 ;; This function calls:
  8601 ;;		i2_i2c_setBuffer
  8602 ;;		i2_i2c_setDataCompleteCallback
  8603 ;; This function is called by:
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text88
  8608  000A10                     __ptext88:
  8609                           	opt stack 0
  8610  000A10                     i2_rd2RegCompleteHandler:
  8611                           	opt stack 16
  8612                           
  8613                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  8614                           
  8615                           ;incstack = 0
  8616  000A10  C03C  F031         	movff	i2rd2RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8617  000A14  C03D  F032         	movff	i2rd2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8618  000A18  0E00               	movlw	0
  8619  000A1A  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  8620  000A1C  0E02               	movlw	2
  8621  000A1E  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  8622  000A20  ECD2  F005         	call	i2_i2c_setBuffer	;wreg free
  8623                           
  8624                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  8625  000A24  0E00               	movlw	0
  8626  000A26  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8627  000A28  0E00               	movlw	0
  8628  000A2A  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8629  000A2C  0E00               	movlw	0
  8630  000A2E  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8631  000A30  0E00               	movlw	0
  8632  000A32  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8633  000A34  0E00               	movlw	0
  8634  000A36  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8635  000A38  ECA0  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8636                           
  8637                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  8638  000A3C  0E02               	movlw	2
  8639  000A3E  0012               	return	
  8640  000A40                     __end_ofi2_rd2RegCompleteHandler:
  8641                           	opt stack 0
  8642                           tosu	equ	0xFFF
  8643                           tosh	equ	0xFFE
  8644                           tosl	equ	0xFFD
  8645                           pclatu	equ	0xFFB
  8646                           pclath	equ	0xFFA
  8647                           tblptru	equ	0xFF8
  8648                           tblptrh	equ	0xFF7
  8649                           tblptrl	equ	0xFF6
  8650                           tablat	equ	0xFF5
  8651                           prodh	equ	0xFF4
  8652                           prodl	equ	0xFF3
  8653                           intcon	equ	0xFF2
  8654                           postinc0	equ	0xFEE
  8655                           fsr0h	equ	0xFEA
  8656                           fsr0l	equ	0xFE9
  8657                           wreg	equ	0xFE8
  8658                           postdec1	equ	0xFE5
  8659                           fsr1h	equ	0xFE2
  8660                           fsr1l	equ	0xFE1
  8661                           indf2	equ	0xFDF
  8662                           postinc2	equ	0xFDE
  8663                           postdec2	equ	0xFDD
  8664                           fsr2h	equ	0xFDA
  8665                           fsr2l	equ	0xFD9
  8666                           status	equ	0xFD8
  8667                           
  8668 ;; *************** function i2_rd1RegCompleteHandler *****************
  8669 ;; Defined at:
  8670 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  p               2   11[COMRAM] PTR void 
  8673 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8674 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      enum E97
  8679 ;; Registers used:
  8680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8690 ;;Total ram usage:        2 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    2
  8693 ;; This function calls:
  8694 ;;		i2_i2c_setBuffer
  8695 ;;		i2_i2c_setDataCompleteCallback
  8696 ;; This function is called by:
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text89
  8701  000A40                     __ptext89:
  8702                           	opt stack 0
  8703  000A40                     i2_rd1RegCompleteHandler:
  8704                           	opt stack 16
  8705                           
  8706                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  8707                           
  8708                           ;incstack = 0
  8709  000A40  C03C  F031         	movff	i2rd1RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8710  000A44  C03D  F032         	movff	i2rd1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8711  000A48  0E00               	movlw	0
  8712  000A4A  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  8713  000A4C  0E01               	movlw	1
  8714  000A4E  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  8715  000A50  ECD2  F005         	call	i2_i2c_setBuffer	;wreg free
  8716                           
  8717                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  8718  000A54  0E00               	movlw	0
  8719  000A56  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8720  000A58  0E00               	movlw	0
  8721  000A5A  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8722  000A5C  0E00               	movlw	0
  8723  000A5E  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8724  000A60  0E00               	movlw	0
  8725  000A62  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8726  000A64  0E00               	movlw	0
  8727  000A66  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8728  000A68  ECA0  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8729                           
  8730                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  8731  000A6C  0E02               	movlw	2
  8732  000A6E  0012               	return	
  8733  000A70                     __end_ofi2_rd1RegCompleteHandler:
  8734                           	opt stack 0
  8735                           tosu	equ	0xFFF
  8736                           tosh	equ	0xFFE
  8737                           tosl	equ	0xFFD
  8738                           pclatu	equ	0xFFB
  8739                           pclath	equ	0xFFA
  8740                           tblptru	equ	0xFF8
  8741                           tblptrh	equ	0xFF7
  8742                           tblptrl	equ	0xFF6
  8743                           tablat	equ	0xFF5
  8744                           prodh	equ	0xFF4
  8745                           prodl	equ	0xFF3
  8746                           intcon	equ	0xFF2
  8747                           postinc0	equ	0xFEE
  8748                           fsr0h	equ	0xFEA
  8749                           fsr0l	equ	0xFE9
  8750                           wreg	equ	0xFE8
  8751                           postdec1	equ	0xFE5
  8752                           fsr1h	equ	0xFE2
  8753                           fsr1l	equ	0xFE1
  8754                           indf2	equ	0xFDF
  8755                           postinc2	equ	0xFDE
  8756                           postdec2	equ	0xFDD
  8757                           fsr2h	equ	0xFDA
  8758                           fsr2l	equ	0xFD9
  8759                           status	equ	0xFD8
  8760                           
  8761 ;; *************** function i2_wr1RegCompleteHandler *****************
  8762 ;; Defined at:
  8763 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  p               2   11[COMRAM] PTR void 
  8766 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8767 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;		None
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      enum E97
  8772 ;; Registers used:
  8773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;Total ram usage:        2 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; Hardware stack levels required when called:    2
  8786 ;; This function calls:
  8787 ;;		i2_i2c_setBuffer
  8788 ;;		i2_i2c_setDataCompleteCallback
  8789 ;; This function is called by:
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           	psect	text90
  8794  000A70                     __ptext90:
  8795                           	opt stack 0
  8796  000A70                     i2_wr1RegCompleteHandler:
  8797                           	opt stack 16
  8798                           
  8799                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  8800                           
  8801                           ;incstack = 0
  8802  000A70  C03C  F031         	movff	i2wr1RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8803  000A74  C03D  F032         	movff	i2wr1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8804  000A78  0E00               	movlw	0
  8805  000A7A  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  8806  000A7C  0E01               	movlw	1
  8807  000A7E  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  8808  000A80  ECD2  F005         	call	i2_i2c_setBuffer	;wreg free
  8809                           
  8810                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  8811  000A84  0E00               	movlw	0
  8812  000A86  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8813  000A88  0E00               	movlw	0
  8814  000A8A  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8815  000A8C  0E00               	movlw	0
  8816  000A8E  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8817  000A90  0E00               	movlw	0
  8818  000A92  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8819  000A94  0E00               	movlw	0
  8820  000A96  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8821  000A98  ECA0  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8822                           
  8823                           ;i2c_simple_master.c: 35: return i2c_continue;
  8824  000A9C  0E04               	movlw	4
  8825  000A9E  0012               	return	
  8826  000AA0                     __end_ofi2_wr1RegCompleteHandler:
  8827                           	opt stack 0
  8828                           tosu	equ	0xFFF
  8829                           tosh	equ	0xFFE
  8830                           tosl	equ	0xFFD
  8831                           pclatu	equ	0xFFB
  8832                           pclath	equ	0xFFA
  8833                           tblptru	equ	0xFF8
  8834                           tblptrh	equ	0xFF7
  8835                           tblptrl	equ	0xFF6
  8836                           tablat	equ	0xFF5
  8837                           prodh	equ	0xFF4
  8838                           prodl	equ	0xFF3
  8839                           intcon	equ	0xFF2
  8840                           postinc0	equ	0xFEE
  8841                           fsr0h	equ	0xFEA
  8842                           fsr0l	equ	0xFE9
  8843                           wreg	equ	0xFE8
  8844                           postdec1	equ	0xFE5
  8845                           fsr1h	equ	0xFE2
  8846                           fsr1l	equ	0xFE1
  8847                           indf2	equ	0xFDF
  8848                           postinc2	equ	0xFDE
  8849                           postdec2	equ	0xFDD
  8850                           fsr2h	equ	0xFDA
  8851                           fsr2l	equ	0xFD9
  8852                           status	equ	0xFD8
  8853                           
  8854 ;; *************** function i2_i2c_restartWrite *****************
  8855 ;; Defined at:
  8856 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  p               2   11[COMRAM] PTR void 
  8859 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8860 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      enum E96
  8865 ;; Registers used:
  8866 ;;		wreg
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8876 ;;Total ram usage:        2 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; This function calls:
  8879 ;;		Nothing
  8880 ;; This function is called by:
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text91
  8885  000E28                     __ptext91:
  8886                           	opt stack 0
  8887  000E28                     i2_i2c_restartWrite:
  8888                           	opt stack 18
  8889                           
  8890                           ;i2c_types.c: 37: return i2c_restart_write;
  8891                           
  8892                           ;incstack = 0
  8893  000E28  0E03               	movlw	3
  8894  000E2A  0012               	return	
  8895  000E2C                     __end_ofi2_i2c_restartWrite:
  8896                           	opt stack 0
  8897                           tosu	equ	0xFFF
  8898                           tosh	equ	0xFFE
  8899                           tosl	equ	0xFFD
  8900                           pclatu	equ	0xFFB
  8901                           pclath	equ	0xFFA
  8902                           tblptru	equ	0xFF8
  8903                           tblptrh	equ	0xFF7
  8904                           tblptrl	equ	0xFF6
  8905                           tablat	equ	0xFF5
  8906                           prodh	equ	0xFF4
  8907                           prodl	equ	0xFF3
  8908                           intcon	equ	0xFF2
  8909                           postinc0	equ	0xFEE
  8910                           fsr0h	equ	0xFEA
  8911                           fsr0l	equ	0xFE9
  8912                           wreg	equ	0xFE8
  8913                           postdec1	equ	0xFE5
  8914                           fsr1h	equ	0xFE2
  8915                           fsr1l	equ	0xFE1
  8916                           indf2	equ	0xFDF
  8917                           postinc2	equ	0xFDE
  8918                           postdec2	equ	0xFDD
  8919                           fsr2h	equ	0xFDA
  8920                           fsr2l	equ	0xFD9
  8921                           status	equ	0xFD8
  8922                           
  8923 ;; *************** function i2_returnReset *****************
  8924 ;; Defined at:
  8925 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;  p               2   11[COMRAM] PTR void 
  8928 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8929 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      enum E11790
  8934 ;; Registers used:
  8935 ;;		wreg
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8945 ;;Total ram usage:        2 bytes
  8946 ;; Hardware stack levels used:    1
  8947 ;; This function calls:
  8948 ;;		Nothing
  8949 ;; This function is called by:
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text92
  8954  000E2C                     __ptext92:
  8955                           	opt stack 0
  8956  000E2C                     i2_returnReset:
  8957                           	opt stack 18
  8958                           
  8959                           ;i2c_master.c: 450: return i2c_reset_link;
  8960                           
  8961                           ;incstack = 0
  8962  000E2C  0E05               	movlw	5
  8963  000E2E  0012               	return	
  8964  000E30                     __end_ofi2_returnReset:
  8965                           	opt stack 0
  8966                           tosu	equ	0xFFF
  8967                           tosh	equ	0xFFE
  8968                           tosl	equ	0xFFD
  8969                           pclatu	equ	0xFFB
  8970                           pclath	equ	0xFFA
  8971                           tblptru	equ	0xFF8
  8972                           tblptrh	equ	0xFF7
  8973                           tblptrl	equ	0xFF6
  8974                           tablat	equ	0xFF5
  8975                           prodh	equ	0xFF4
  8976                           prodl	equ	0xFF3
  8977                           intcon	equ	0xFF2
  8978                           postinc0	equ	0xFEE
  8979                           fsr0h	equ	0xFEA
  8980                           fsr0l	equ	0xFE9
  8981                           wreg	equ	0xFE8
  8982                           postdec1	equ	0xFE5
  8983                           fsr1h	equ	0xFE2
  8984                           fsr1l	equ	0xFE1
  8985                           indf2	equ	0xFDF
  8986                           postinc2	equ	0xFDE
  8987                           postdec2	equ	0xFDD
  8988                           fsr2h	equ	0xFDA
  8989                           fsr2l	equ	0xFD9
  8990                           status	equ	0xFD8
  8991                           
  8992 ;; *************** function i2_returnStop *****************
  8993 ;; Defined at:
  8994 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  p               2   11[COMRAM] PTR void 
  8997 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8998 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;		None
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  1    wreg      enum E11790
  9003 ;; Registers used:
  9004 ;;		wreg
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;Total ram usage:        2 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; This function calls:
  9017 ;;		Nothing
  9018 ;; This function is called by:
  9019 ;;		i2_setCallBack
  9020 ;;		_do_I2C_DO_ADDRESS_NACK
  9021 ;;		_do_I2C_TX
  9022 ;;		_do_I2C_RX
  9023 ;;		_do_I2C_TX_EMPTY
  9024 ;;		i2_do_I2C_DO_ADDRESS_NACK
  9025 ;;		i2_do_I2C_TX
  9026 ;;		i2_do_I2C_RX
  9027 ;;		i2_do_I2C_TX_EMPTY
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text93
  9032  000E30                     __ptext93:
  9033                           	opt stack 0
  9034  000E30                     i2_returnStop:
  9035                           	opt stack 18
  9036                           
  9037                           ;i2c_master.c: 445: return i2c_stop;
  9038                           
  9039                           ;incstack = 0
  9040  000E30  0E01               	movlw	1
  9041  000E32  0012               	return	
  9042  000E34                     __end_ofi2_returnStop:
  9043                           	opt stack 0
  9044                           tosu	equ	0xFFF
  9045                           tosh	equ	0xFFE
  9046                           tosl	equ	0xFFD
  9047                           pclatu	equ	0xFFB
  9048                           pclath	equ	0xFFA
  9049                           tblptru	equ	0xFF8
  9050                           tblptrh	equ	0xFF7
  9051                           tblptrl	equ	0xFF6
  9052                           tablat	equ	0xFF5
  9053                           prodh	equ	0xFF4
  9054                           prodl	equ	0xFF3
  9055                           intcon	equ	0xFF2
  9056                           postinc0	equ	0xFEE
  9057                           fsr0h	equ	0xFEA
  9058                           fsr0l	equ	0xFE9
  9059                           wreg	equ	0xFE8
  9060                           postdec1	equ	0xFE5
  9061                           fsr1h	equ	0xFE2
  9062                           fsr1l	equ	0xFE1
  9063                           indf2	equ	0xFDF
  9064                           postinc2	equ	0xFDE
  9065                           postdec2	equ	0xFDD
  9066                           fsr2h	equ	0xFDA
  9067                           fsr2l	equ	0xFD9
  9068                           status	equ	0xFD8
  9069                           
  9070 ;; *************** function i2_wr2RegCompleteHandler *****************
  9071 ;; Defined at:
  9072 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;  p               2   11[COMRAM] PTR void 
  9075 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9076 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      enum E97
  9081 ;; Registers used:
  9082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9092 ;;Total ram usage:        2 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    2
  9095 ;; This function calls:
  9096 ;;		i2_i2c_setBuffer
  9097 ;;		i2_i2c_setDataCompleteCallback
  9098 ;; This function is called by:
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text94
  9103  000AA0                     __ptext94:
  9104                           	opt stack 0
  9105  000AA0                     i2_wr2RegCompleteHandler:
  9106                           	opt stack 16
  9107                           
  9108                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  9109                           
  9110                           ;incstack = 0
  9111  000AA0  C03C  F031         	movff	i2wr2RegCompleteHandler@p,i2i2c_setBuffer@buffer
  9112  000AA4  C03D  F032         	movff	i2wr2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  9113  000AA8  0E00               	movlw	0
  9114  000AAA  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  9115  000AAC  0E02               	movlw	2
  9116  000AAE  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  9117  000AB0  ECD2  F005         	call	i2_i2c_setBuffer	;wreg free
  9118                           
  9119                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  9120  000AB4  0E00               	movlw	0
  9121  000AB6  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  9122  000AB8  0E00               	movlw	0
  9123  000ABA  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  9124  000ABC  0E00               	movlw	0
  9125  000ABE  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  9126  000AC0  0E00               	movlw	0
  9127  000AC2  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  9128  000AC4  0E00               	movlw	0
  9129  000AC6  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  9130  000AC8  ECA0  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  9131                           
  9132                           ;i2c_simple_master.c: 114: return i2c_continue;
  9133  000ACC  0E04               	movlw	4
  9134  000ACE  0012               	return	
  9135  000AD0                     __end_ofi2_wr2RegCompleteHandler:
  9136                           	opt stack 0
  9137                           tosu	equ	0xFFF
  9138                           tosh	equ	0xFFE
  9139                           tosl	equ	0xFFD
  9140                           pclatu	equ	0xFFB
  9141                           pclath	equ	0xFFA
  9142                           tblptru	equ	0xFF8
  9143                           tblptrh	equ	0xFF7
  9144                           tblptrl	equ	0xFF6
  9145                           tablat	equ	0xFF5
  9146                           prodh	equ	0xFF4
  9147                           prodl	equ	0xFF3
  9148                           intcon	equ	0xFF2
  9149                           postinc0	equ	0xFEE
  9150                           fsr0h	equ	0xFEA
  9151                           fsr0l	equ	0xFE9
  9152                           wreg	equ	0xFE8
  9153                           postdec1	equ	0xFE5
  9154                           fsr1h	equ	0xFE2
  9155                           fsr1l	equ	0xFE1
  9156                           indf2	equ	0xFDF
  9157                           postinc2	equ	0xFDE
  9158                           postdec2	equ	0xFDD
  9159                           fsr2h	equ	0xFDA
  9160                           fsr2l	equ	0xFD9
  9161                           status	equ	0xFD8
  9162                           
  9163 ;; *************** function i2_i2c_setDataCompleteCallback *****************
  9164 ;; Defined at:
  9165 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  9166 ;; Parameters:    Size  Location     Type
  9167 ;;  cb              3    6[COMRAM] PTR FTN(PTR void ,)enum 
  9168 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9169 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  9170 ;;  p               2    9[COMRAM] PTR void 
  9171 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9172 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;		None
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      void 
  9177 ;; Registers used:
  9178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9184 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9187 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9188 ;;Total ram usage:        5 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    1
  9191 ;; This function calls:
  9192 ;;		i2_setCallBack
  9193 ;; This function is called by:
  9194 ;;		i2_wr1RegCompleteHandler
  9195 ;;		i2_rd1RegCompleteHandler
  9196 ;;		i2_rd2RegCompleteHandler
  9197 ;;		i2_wr2RegCompleteHandler
  9198 ;;		i2_rdBlkRegCompleteHandler
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text95
  9203  000B40                     __ptext95:
  9204                           	opt stack 0
  9205  000B40                     i2_i2c_setDataCompleteCallback:
  9206                           	opt stack 16
  9207                           
  9208                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  9209                           
  9210                           ;incstack = 0
  9211  000B40  C037  F031         	movff	i2i2c_setDataCompleteCallback@cb,i2setCallBack@cb
  9212  000B44  C038  F032         	movff	i2i2c_setDataCompleteCallback@cb+1,i2setCallBack@cb+1
  9213  000B48  C039  F033         	movff	i2i2c_setDataCompleteCallback@cb+2,i2setCallBack@cb+2
  9214  000B4C  C03A  F034         	movff	i2i2c_setDataCompleteCallback@p,i2setCallBack@p
  9215  000B50  C03B  F035         	movff	i2i2c_setDataCompleteCallback@p+1,i2setCallBack@p+1
  9216  000B54  0E00               	movlw	0
  9217  000B56  EC64  F002         	call	i2_setCallBack
  9218  000B5A  0012               	return		;funcret
  9219  000B5C                     __end_ofi2_i2c_setDataCompleteCallback:
  9220                           	opt stack 0
  9221                           tosu	equ	0xFFF
  9222                           tosh	equ	0xFFE
  9223                           tosl	equ	0xFFD
  9224                           pclatu	equ	0xFFB
  9225                           pclath	equ	0xFFA
  9226                           tblptru	equ	0xFF8
  9227                           tblptrh	equ	0xFF7
  9228                           tblptrl	equ	0xFF6
  9229                           tablat	equ	0xFF5
  9230                           prodh	equ	0xFF4
  9231                           prodl	equ	0xFF3
  9232                           intcon	equ	0xFF2
  9233                           postinc0	equ	0xFEE
  9234                           fsr0h	equ	0xFEA
  9235                           fsr0l	equ	0xFE9
  9236                           wreg	equ	0xFE8
  9237                           postdec1	equ	0xFE5
  9238                           fsr1h	equ	0xFE2
  9239                           fsr1l	equ	0xFE1
  9240                           indf2	equ	0xFDF
  9241                           postinc2	equ	0xFDE
  9242                           postdec2	equ	0xFDD
  9243                           fsr2h	equ	0xFDA
  9244                           fsr2l	equ	0xFD9
  9245                           status	equ	0xFD8
  9246                           
  9247 ;; *************** function i2_setCallBack *****************
  9248 ;; Defined at:
  9249 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  idx             1    wreg     enum E11974
  9252 ;;  cb              3    0[COMRAM] PTR FTN(PTR void ,)enum 
  9253 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9254 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  9255 ;;  p               2    3[COMRAM] PTR void 
  9256 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9257 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  idx             1    5[COMRAM] enum E11974
  9260 ;; Return value:  Size  Location     Type
  9261 ;;                  1    wreg      void 
  9262 ;; Registers used:
  9263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9269 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9270 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9273 ;;Total ram usage:        6 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; This function calls:
  9276 ;;		Nothing
  9277 ;; This function is called by:
  9278 ;;		i2_i2c_setDataCompleteCallback
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           	psect	text96
  9283  0004C8                     __ptext96:
  9284                           	opt stack 0
  9285  0004C8                     i2_setCallBack:
  9286                           	opt stack 16
  9287                           
  9288                           ;incstack = 0
  9289                           ;i2setCallBack@idx stored from wreg
  9290  0004C8  6E36               	movwf	i2setCallBack@idx,c
  9291                           
  9292                           ;i2c_master.c: 455: if(cb)
  9293  0004CA  5031               	movf	i2setCallBack@cb,w,c
  9294  0004CC  1032               	iorwf	i2setCallBack@cb+1,w,c
  9295  0004CE  1033               	iorwf	i2setCallBack@cb+2,w,c
  9296  0004D0  B4D8               	btfsc	status,2,c
  9297  0004D2  D01B               	goto	i2l482
  9298                           
  9299                           ;i2c_master.c: 456: {
  9300                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  9301  0004D4  5036               	movf	i2setCallBack@idx,w,c
  9302  0004D6  0D03               	mullw	3
  9303  0004D8  0E0D               	movlw	low (_i2c_status+12)
  9304  0004DA  24F3               	addwf	prodl,w,c
  9305  0004DC  6ED9               	movwf	fsr2l,c
  9306  0004DE  0E00               	movlw	high (_i2c_status+12)
  9307  0004E0  20F4               	addwfc	prodh,w,c
  9308  0004E2  6EDA               	movwf	fsr2h,c
  9309  0004E4  C031  FFDE         	movff	i2setCallBack@cb,postinc2
  9310  0004E8  C032  FFDE         	movff	i2setCallBack@cb+1,postinc2
  9311  0004EC  C033  FFDE         	movff	i2setCallBack@cb+2,postinc2
  9312                           
  9313                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  9314  0004F0  5036               	movf	i2setCallBack@idx,w,c
  9315  0004F2  0D02               	mullw	2
  9316  0004F4  0E1F               	movlw	low (_i2c_status+30)
  9317  0004F6  24F3               	addwf	prodl,w,c
  9318  0004F8  6ED9               	movwf	fsr2l,c
  9319  0004FA  0E00               	movlw	high (_i2c_status+30)
  9320  0004FC  20F4               	addwfc	prodh,w,c
  9321  0004FE  6EDA               	movwf	fsr2h,c
  9322  000500  C034  FFDE         	movff	i2setCallBack@p,postinc2
  9323  000504  C035  FFDD         	movff	i2setCallBack@p+1,postdec2
  9324                           
  9325                           ;i2c_master.c: 459: }
  9326  000508  0012               	return	
  9327  00050A                     i2l482:
  9328                           
  9329                           ;i2c_master.c: 460: else
  9330                           ;i2c_master.c: 461: {
  9331                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  9332  00050A  5036               	movf	i2setCallBack@idx,w,c
  9333  00050C  0D03               	mullw	3
  9334  00050E  0E0D               	movlw	low (_i2c_status+12)
  9335  000510  24F3               	addwf	prodl,w,c
  9336  000512  6ED9               	movwf	fsr2l,c
  9337  000514  0E00               	movlw	high (_i2c_status+12)
  9338  000516  20F4               	addwfc	prodh,w,c
  9339  000518  6EDA               	movwf	fsr2h,c
  9340  00051A  0E30               	movlw	low i2_returnStop
  9341  00051C  6EDE               	movwf	postinc2,c
  9342  00051E  0E0E               	movlw	high i2_returnStop
  9343  000520  6EDE               	movwf	postinc2,c
  9344  000522  0E00               	movlw	low (i2_returnStop shr (0+16))
  9345  000524  6EDE               	movwf	postinc2,c
  9346                           
  9347                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  9348  000526  5036               	movf	i2setCallBack@idx,w,c
  9349  000528  0D02               	mullw	2
  9350  00052A  0E1F               	movlw	low (_i2c_status+30)
  9351  00052C  24F3               	addwf	prodl,w,c
  9352  00052E  6ED9               	movwf	fsr2l,c
  9353  000530  0E00               	movlw	high (_i2c_status+30)
  9354  000532  20F4               	addwfc	prodh,w,c
  9355  000534  6EDA               	movwf	fsr2h,c
  9356  000536  0E00               	movlw	0
  9357  000538  6EDE               	movwf	postinc2,c
  9358  00053A  0E00               	movlw	0
  9359  00053C  6EDD               	movwf	postdec2,c
  9360  00053E  0012               	return	
  9361  000540                     __end_ofi2_setCallBack:
  9362                           	opt stack 0
  9363                           tosu	equ	0xFFF
  9364                           tosh	equ	0xFFE
  9365                           tosl	equ	0xFFD
  9366                           pclatu	equ	0xFFB
  9367                           pclath	equ	0xFFA
  9368                           tblptru	equ	0xFF8
  9369                           tblptrh	equ	0xFF7
  9370                           tblptrl	equ	0xFF6
  9371                           tablat	equ	0xFF5
  9372                           prodh	equ	0xFF4
  9373                           prodl	equ	0xFF3
  9374                           intcon	equ	0xFF2
  9375                           postinc0	equ	0xFEE
  9376                           fsr0h	equ	0xFEA
  9377                           fsr0l	equ	0xFE9
  9378                           wreg	equ	0xFE8
  9379                           postdec1	equ	0xFE5
  9380                           fsr1h	equ	0xFE2
  9381                           fsr1l	equ	0xFE1
  9382                           indf2	equ	0xFDF
  9383                           postinc2	equ	0xFDE
  9384                           postdec2	equ	0xFDD
  9385                           fsr2h	equ	0xFDA
  9386                           fsr2l	equ	0xFD9
  9387                           status	equ	0xFD8
  9388                           
  9389 ;; *************** function i2_i2c_setBuffer *****************
  9390 ;; Defined at:
  9391 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;  buffer          2    0[COMRAM] PTR void 
  9394 ;;		 -> main@rec_1229(1), main@rec(1), main@data(2), i2c_readDataBlock@reg(1), 
  9395 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
  9396 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegist
      +er@reg(1), 
  9397 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9398 ;;  bufferSize      2    2[COMRAM] unsigned int 
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      void 
  9403 ;; Registers used:
  9404 ;;		wreg, status,2, status,0
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9413 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9414 ;;Total ram usage:        4 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; This function calls:
  9417 ;;		Nothing
  9418 ;; This function is called by:
  9419 ;;		i2_wr1RegCompleteHandler
  9420 ;;		i2_rd1RegCompleteHandler
  9421 ;;		i2_rd2RegCompleteHandler
  9422 ;;		i2_wr2RegCompleteHandler
  9423 ;;		i2_rdBlkRegCompleteHandler
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           	psect	text97
  9428  000BA4                     __ptext97:
  9429                           	opt stack 0
  9430  000BA4                     i2_i2c_setBuffer:
  9431                           	opt stack 17
  9432                           
  9433                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  9434                           
  9435                           ;incstack = 0
  9436  000BA4  A401               	btfss	_i2c_status,2,c
  9437  000BA6  0012               	return	
  9438                           
  9439                           ;i2c_master.c: 187: {
  9440                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  9441  000BA8  C031  F003         	movff	i2i2c_setBuffer@buffer,_i2c_status+2
  9442  000BAC  C032  F004         	movff	i2i2c_setBuffer@buffer+1,_i2c_status+3
  9443                           
  9444                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  9445  000BB0  C033  F005         	movff	i2i2c_setBuffer@bufferSize,_i2c_status+4
  9446  000BB4  C034  F006         	movff	i2i2c_setBuffer@bufferSize+1,_i2c_status+5
  9447                           
  9448                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  9449  000BB8  9401               	bcf	_i2c_status,2,c
  9450  000BBA  0012               	return	
  9451  000BBC                     __end_ofi2_i2c_setBuffer:
  9452                           	opt stack 0
  9453                           tosu	equ	0xFFF
  9454                           tosh	equ	0xFFE
  9455                           tosl	equ	0xFFD
  9456                           pclatu	equ	0xFFB
  9457                           pclath	equ	0xFFA
  9458                           tblptru	equ	0xFF8
  9459                           tblptrh	equ	0xFF7
  9460                           tblptrl	equ	0xFF6
  9461                           tablat	equ	0xFF5
  9462                           prodh	equ	0xFF4
  9463                           prodl	equ	0xFF3
  9464                           intcon	equ	0xFF2
  9465                           postinc0	equ	0xFEE
  9466                           fsr0h	equ	0xFEA
  9467                           fsr0l	equ	0xFE9
  9468                           wreg	equ	0xFE8
  9469                           postdec1	equ	0xFE5
  9470                           fsr1h	equ	0xFE2
  9471                           fsr1l	equ	0xFE1
  9472                           indf2	equ	0xFDF
  9473                           postinc2	equ	0xFDE
  9474                           postdec2	equ	0xFDD
  9475                           fsr2h	equ	0xFDA
  9476                           fsr2l	equ	0xFD9
  9477                           status	equ	0xFD8
  9478                           
  9479 ;; *************** function i2_i2c1_driver_stop *****************
  9480 ;; Defined at:
  9481 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;		None
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;		None
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1    wreg      void 
  9488 ;; Registers used:
  9489 ;;		None
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9499 ;;Total ram usage:        0 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; This function calls:
  9502 ;;		Nothing
  9503 ;; This function is called by:
  9504 ;;		i2_do_I2C_SEND_STOP
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text98
  9509  000E34                     __ptext98:
  9510                           	opt stack 0
  9511  000E34                     i2_i2c1_driver_stop:
  9512                           	opt stack 17
  9513                           
  9514                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  9515                           
  9516                           ;incstack = 0
  9517  000E34  8497               	bsf	3991,2,c	;volatile
  9518  000E36  0012               	return		;funcret
  9519  000E38                     __end_ofi2_i2c1_driver_stop:
  9520                           	opt stack 0
  9521                           tosu	equ	0xFFF
  9522                           tosh	equ	0xFFE
  9523                           tosl	equ	0xFFD
  9524                           pclatu	equ	0xFFB
  9525                           pclath	equ	0xFFA
  9526                           tblptru	equ	0xFF8
  9527                           tblptrh	equ	0xFF7
  9528                           tblptrl	equ	0xFF6
  9529                           tablat	equ	0xFF5
  9530                           prodh	equ	0xFF4
  9531                           prodl	equ	0xFF3
  9532                           intcon	equ	0xFF2
  9533                           postinc0	equ	0xFEE
  9534                           fsr0h	equ	0xFEA
  9535                           fsr0l	equ	0xFE9
  9536                           wreg	equ	0xFE8
  9537                           postdec1	equ	0xFE5
  9538                           fsr1h	equ	0xFE2
  9539                           fsr1l	equ	0xFE1
  9540                           indf2	equ	0xFDF
  9541                           postinc2	equ	0xFDE
  9542                           postdec2	equ	0xFDD
  9543                           fsr2h	equ	0xFDA
  9544                           fsr2l	equ	0xFD9
  9545                           status	equ	0xFD8
  9546                           
  9547 ;; *************** function i2_i2c1_driver_restart *****************
  9548 ;; Defined at:
  9549 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		None
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;Total ram usage:        0 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		i2_do_I2C_SEND_RESTART_READ
  9573 ;;		i2_do_I2C_SEND_RESTART_WRITE
  9574 ;;		i2_do_I2C_SEND_RESTART
  9575 ;; This function uses a non-reentrant model
  9576 ;;
  9577                           
  9578                           	psect	text99
  9579  000E38                     __ptext99:
  9580                           	opt stack 0
  9581  000E38                     i2_i2c1_driver_restart:
  9582                           	opt stack 17
  9583                           
  9584                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  9585                           
  9586                           ;incstack = 0
  9587  000E38  8297               	bsf	3991,1,c	;volatile
  9588  000E3A  0012               	return		;funcret
  9589  000E3C                     __end_ofi2_i2c1_driver_restart:
  9590                           	opt stack 0
  9591                           tosu	equ	0xFFF
  9592                           tosh	equ	0xFFE
  9593                           tosl	equ	0xFFD
  9594                           pclatu	equ	0xFFB
  9595                           pclath	equ	0xFFA
  9596                           tblptru	equ	0xFF8
  9597                           tblptrh	equ	0xFF7
  9598                           tblptrl	equ	0xFF6
  9599                           tablat	equ	0xFF5
  9600                           prodh	equ	0xFF4
  9601                           prodl	equ	0xFF3
  9602                           intcon	equ	0xFF2
  9603                           postinc0	equ	0xFEE
  9604                           fsr0h	equ	0xFEA
  9605                           fsr0l	equ	0xFE9
  9606                           wreg	equ	0xFE8
  9607                           postdec1	equ	0xFE5
  9608                           fsr1h	equ	0xFE2
  9609                           fsr1l	equ	0xFE1
  9610                           indf2	equ	0xFDF
  9611                           postinc2	equ	0xFDE
  9612                           postdec2	equ	0xFDD
  9613                           fsr2h	equ	0xFDA
  9614                           fsr2l	equ	0xFD9
  9615                           status	equ	0xFD8
  9616                           
  9617 ;; *************** function i2_i2c1_driver_sendACK *****************
  9618 ;; Defined at:
  9619 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      void 
  9626 ;; Registers used:
  9627 ;;		None
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9637 ;;Total ram usage:        0 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; This function calls:
  9640 ;;		Nothing
  9641 ;; This function is called by:
  9642 ;;		i2_do_I2C_DO_ACK
  9643 ;;		i2_do_I2C_RX
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text100
  9648  000DF6                     __ptext100:
  9649                           	opt stack 0
  9650  000DF6                     i2_i2c1_driver_sendACK:
  9651                           	opt stack 18
  9652                           
  9653                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  9654                           
  9655                           ;incstack = 0
  9656  000DF6  9A97               	bcf	3991,5,c	;volatile
  9657                           
  9658                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  9659  000DF8  8897               	bsf	3991,4,c	;volatile
  9660  000DFA  0012               	return		;funcret
  9661  000DFC                     __end_ofi2_i2c1_driver_sendACK:
  9662                           	opt stack 0
  9663                           tosu	equ	0xFFF
  9664                           tosh	equ	0xFFE
  9665                           tosl	equ	0xFFD
  9666                           pclatu	equ	0xFFB
  9667                           pclath	equ	0xFFA
  9668                           tblptru	equ	0xFF8
  9669                           tblptrh	equ	0xFF7
  9670                           tblptrl	equ	0xFF6
  9671                           tablat	equ	0xFF5
  9672                           prodh	equ	0xFF4
  9673                           prodl	equ	0xFF3
  9674                           intcon	equ	0xFF2
  9675                           postinc0	equ	0xFEE
  9676                           fsr0h	equ	0xFEA
  9677                           fsr0l	equ	0xFE9
  9678                           wreg	equ	0xFE8
  9679                           postdec1	equ	0xFE5
  9680                           fsr1h	equ	0xFE2
  9681                           fsr1l	equ	0xFE1
  9682                           indf2	equ	0xFDF
  9683                           postinc2	equ	0xFDE
  9684                           postdec2	equ	0xFDD
  9685                           fsr2h	equ	0xFDA
  9686                           fsr2l	equ	0xFD9
  9687                           status	equ	0xFD8
  9688                           
  9689 ;; *************** function _i2c_busCollisionISR *****************
  9690 ;; Defined at:
  9691 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;		None
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;		None
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  1    wreg      void 
  9698 ;; Registers used:
  9699 ;;		cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9709 ;;Total ram usage:        0 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:    1
  9712 ;; This function calls:
  9713 ;;		_i2c1_driver_clearBusCollision
  9714 ;; This function is called by:
  9715 ;;		_i2c_open
  9716 ;;		_INTERRUPT_InterruptManager
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text101
  9721  000DFC                     __ptext101:
  9722                           	opt stack 0
  9723  000DFC                     _i2c_busCollisionISR:
  9724                           	opt stack 19
  9725                           
  9726                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
  9727                           
  9728                           ;incstack = 0
  9729  000DFC  EC01  F007         	call	_i2c1_driver_clearBusCollision	;wreg free
  9730  000E00  0012               	return		;funcret
  9731  000E02                     __end_of_i2c_busCollisionISR:
  9732                           	opt stack 0
  9733                           tosu	equ	0xFFF
  9734                           tosh	equ	0xFFE
  9735                           tosl	equ	0xFFD
  9736                           pclatu	equ	0xFFB
  9737                           pclath	equ	0xFFA
  9738                           tblptru	equ	0xFF8
  9739                           tblptrh	equ	0xFF7
  9740                           tblptrl	equ	0xFF6
  9741                           tablat	equ	0xFF5
  9742                           prodh	equ	0xFF4
  9743                           prodl	equ	0xFF3
  9744                           intcon	equ	0xFF2
  9745                           postinc0	equ	0xFEE
  9746                           fsr0h	equ	0xFEA
  9747                           fsr0l	equ	0xFE9
  9748                           wreg	equ	0xFE8
  9749                           postdec1	equ	0xFE5
  9750                           fsr1h	equ	0xFE2
  9751                           fsr1l	equ	0xFE1
  9752                           indf2	equ	0xFDF
  9753                           postinc2	equ	0xFDE
  9754                           postdec2	equ	0xFDD
  9755                           fsr2h	equ	0xFDA
  9756                           fsr2l	equ	0xFD9
  9757                           status	equ	0xFD8
  9758                           
  9759 ;; *************** function _i2c1_driver_clearBusCollision *****************
  9760 ;; Defined at:
  9761 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;		None
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      void 
  9768 ;; Registers used:
  9769 ;;		None
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9779 ;;Total ram usage:        0 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_i2c_busCollisionISR
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text102
  9789  000E02                     __ptext102:
  9790                           	opt stack 0
  9791  000E02                     _i2c1_driver_clearBusCollision:
  9792                           	opt stack 19
  9793                           
  9794                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
  9795                           
  9796                           ;incstack = 0
  9797  000E02  010E               	movlb	14	; () banked
  9798  000E04  93CD               	bcf	205,1,b	;volatile
  9799                           
  9800                           ; BSR set to: 14
  9801  000E06  0012               	return		;funcret
  9802  000E08                     __end_of_i2c1_driver_clearBusCollision:
  9803                           	opt stack 0
  9804  0000                     tosu	equ	0xFFF
  9805                           tosh	equ	0xFFE
  9806                           tosl	equ	0xFFD
  9807                           pclatu	equ	0xFFB
  9808                           pclath	equ	0xFFA
  9809                           tblptru	equ	0xFF8
  9810                           tblptrh	equ	0xFF7
  9811                           tblptrl	equ	0xFF6
  9812                           tablat	equ	0xFF5
  9813                           prodh	equ	0xFF4
  9814                           prodl	equ	0xFF3
  9815                           intcon	equ	0xFF2
  9816                           postinc0	equ	0xFEE
  9817                           fsr0h	equ	0xFEA
  9818                           fsr0l	equ	0xFE9
  9819                           wreg	equ	0xFE8
  9820                           postdec1	equ	0xFE5
  9821                           fsr1h	equ	0xFE2
  9822                           fsr1l	equ	0xFE1
  9823                           indf2	equ	0xFDF
  9824                           postinc2	equ	0xFDE
  9825                           postdec2	equ	0xFDD
  9826                           fsr2h	equ	0xFDA
  9827                           fsr2l	equ	0xFD9
  9828                           status	equ	0xFD8
  9829                           tosu	equ	0xFFF
  9830                           tosh	equ	0xFFE
  9831                           tosl	equ	0xFFD
  9832                           pclatu	equ	0xFFB
  9833                           pclath	equ	0xFFA
  9834                           tblptru	equ	0xFF8
  9835                           tblptrh	equ	0xFF7
  9836                           tblptrl	equ	0xFF6
  9837                           tablat	equ	0xFF5
  9838                           prodh	equ	0xFF4
  9839                           prodl	equ	0xFF3
  9840                           intcon	equ	0xFF2
  9841                           postinc0	equ	0xFEE
  9842                           fsr0h	equ	0xFEA
  9843                           fsr0l	equ	0xFE9
  9844                           wreg	equ	0xFE8
  9845                           postdec1	equ	0xFE5
  9846                           fsr1h	equ	0xFE2
  9847                           fsr1l	equ	0xFE1
  9848                           indf2	equ	0xFDF
  9849                           postinc2	equ	0xFDE
  9850                           postdec2	equ	0xFDD
  9851                           fsr2h	equ	0xFDA
  9852                           fsr2l	equ	0xFD9
  9853                           status	equ	0xFD8
  9854                           
  9855                           	psect	text103
  9856  000000                     __ptext103:
  9857                           	opt stack 0
  9858                           tosu	equ	0xFFF
  9859                           tosh	equ	0xFFE
  9860                           tosl	equ	0xFFD
  9861                           pclatu	equ	0xFFB
  9862                           pclath	equ	0xFFA
  9863                           tblptru	equ	0xFF8
  9864                           tblptrh	equ	0xFF7
  9865                           tblptrl	equ	0xFF6
  9866                           tablat	equ	0xFF5
  9867                           prodh	equ	0xFF4
  9868                           prodl	equ	0xFF3
  9869                           intcon	equ	0xFF2
  9870                           postinc0	equ	0xFEE
  9871                           fsr0h	equ	0xFEA
  9872                           fsr0l	equ	0xFE9
  9873                           wreg	equ	0xFE8
  9874                           postdec1	equ	0xFE5
  9875                           fsr1h	equ	0xFE2
  9876                           fsr1l	equ	0xFE1
  9877                           indf2	equ	0xFDF
  9878                           postinc2	equ	0xFDE
  9879                           postdec2	equ	0xFDD
  9880                           fsr2h	equ	0xFDA
  9881                           fsr2l	equ	0xFD9
  9882                           status	equ	0xFD8
  9883                           
  9884                           	psect	rparam
  9885  0000                     tosu	equ	0xFFF
  9886                           tosh	equ	0xFFE
  9887                           tosl	equ	0xFFD
  9888                           pclatu	equ	0xFFB
  9889                           pclath	equ	0xFFA
  9890                           tblptru	equ	0xFF8
  9891                           tblptrh	equ	0xFF7
  9892                           tblptrl	equ	0xFF6
  9893                           tablat	equ	0xFF5
  9894                           prodh	equ	0xFF4
  9895                           prodl	equ	0xFF3
  9896                           intcon	equ	0xFF2
  9897                           postinc0	equ	0xFEE
  9898                           fsr0h	equ	0xFEA
  9899                           fsr0l	equ	0xFE9
  9900                           wreg	equ	0xFE8
  9901                           postdec1	equ	0xFE5
  9902                           fsr1h	equ	0xFE2
  9903                           fsr1l	equ	0xFE1
  9904                           indf2	equ	0xFDF
  9905                           postinc2	equ	0xFDE
  9906                           postdec2	equ	0xFDD
  9907                           fsr2h	equ	0xFDA
  9908                           fsr2l	equ	0xFD9
  9909                           status	equ	0xFD8
  9910                           
  9911                           	psect	temp
  9912  00004A                     btemp:
  9913                           	opt stack 0
  9914  00004A                     	ds	1
  9915  0000                     int$flags	set	btemp
  9916  0000                     wtemp6	set	btemp+1
  9917                           tosu	equ	0xFFF
  9918                           tosh	equ	0xFFE
  9919                           tosl	equ	0xFFD
  9920                           pclatu	equ	0xFFB
  9921                           pclath	equ	0xFFA
  9922                           tblptru	equ	0xFF8
  9923                           tblptrh	equ	0xFF7
  9924                           tblptrl	equ	0xFF6
  9925                           tablat	equ	0xFF5
  9926                           prodh	equ	0xFF4
  9927                           prodl	equ	0xFF3
  9928                           intcon	equ	0xFF2
  9929                           postinc0	equ	0xFEE
  9930                           fsr0h	equ	0xFEA
  9931                           fsr0l	equ	0xFE9
  9932                           wreg	equ	0xFE8
  9933                           postdec1	equ	0xFE5
  9934                           fsr1h	equ	0xFE2
  9935                           fsr1l	equ	0xFE1
  9936                           indf2	equ	0xFDF
  9937                           postinc2	equ	0xFDE
  9938                           postdec2	equ	0xFDD
  9939                           fsr2h	equ	0xFDA
  9940                           fsr2l	equ	0xFD9
  9941                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      73
    BANK0           160     20      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    do_I2C_TX$1973$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$1979$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$1985$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_ISR$1991	PTR const FTN()enum E11956 size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$1990	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$1985	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$1984	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$1979	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$1978	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX$1973	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S820$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_readNBytes@data	PTR void  size(2) Largest target is 1
		 -> main@rec_1229(BANK0[1]), main@rec(BANK0[1]), 

    d.data	PTR unsigned char  size(2) Largest target is 0

    S1085$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(2) Largest target is 2
		 -> main@data(BANK0[2]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E11956[16] size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> main@rec_1229(BANK0[1]), main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S820$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S820$callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> i2_returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> returnReset(), returnStop(), 

    S820$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@rec_1229(BANK0[1]), main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@rec_1229(BANK0[1]), main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMRAM

    _i2c_writeNBytes->_i2c_setBuffer
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_readNBytes->_i2c_setBuffer
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setBuffer
    _wr1RegCompleteHandler->_i2c_setBuffer
    _rdBlkRegCompleteHandler->_i2c_setBuffer
    _rd2RegCompleteHandler->_i2c_setBuffer
    _rd1RegCompleteHandler->_i2c_setBuffer
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    i2_i2c_ISR->i2_do_I2C_TX
    i2_do_I2C_TX->i2_i2c1_driver_TXData
    i2_do_I2C_TX->i2_i2c1_driver_isNACK
    i2_do_I2C_SEND_ADR_WRITE->i2_i2c1_driver_TXData
    i2_do_I2C_SEND_ADR_READ->i2_i2c1_driver_TXData
    i2_wr2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_wr1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rdBlkRegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_i2c_setDataCompleteCallback->i2_setCallBack

Critical Paths under _main in BANK0

    _main->_i2c_writeNBytes
    _i2c_writeNBytes->_i2c_setAddressNACKCallback
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_readNBytes->_i2c_open
    _i2c_masterRead->_i2c_masterOperation
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  221142
                                             15 BANK0      5     5      0
                  _SYSTEM_Initialize
                     _i2c_readNBytes
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _i2c_writeNBytes                                      5     1      4  111553
                                             10 BANK0      5     1      4
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_setAddressNACKCallback                           5     0      5    2259
                                              5 BANK0      5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (2) _i2c_masterWrite                                      0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (1) _i2c_readNBytes                                       5     1      4  109114
                                              2 BANK0      5     1      4
                          _i2c_close
                     _i2c_masterRead
                           _i2c_open
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_open                                             2     2      0     310
                                              0 BANK0      2     2      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_setI2cISR                                3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_setBusCollisionISR                       3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_masterRead                                       0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (3) _i2c_masterOperation                                  2     2      0  106092
                                              0 BANK0      2     2      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (4) _mssp1_IRQisEnabled                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_poller                                           0     0      0  106024
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (5) _mssp1_waitForEvent                                   2     0      2      90
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _i2c_ISR                                              0     0      0  105934
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX_EMPTY                                      0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX                                            2     2      0   26519
                                             22 COMRAM     2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_isNACK                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_TXData                                   1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RX                                            0     0      0   26451
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ADDRESS_NACK                               0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _returnStop                                           2     0      2     108
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _returnReset                                          2     0      2       0
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              2     0      2    5415
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _i2c_setDataCompleteCallback                          5     0      5    2979
                                              5 BANK0      5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (3) _setCallBack                                          6     1      5    1117
                                             21 COMRAM     1     1      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _i2c_setBuffer                                        4     0      4    2222
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _i2c_restartWrite                                     2     0      2       0
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_close                                            1     1      0      37
                                             21 COMRAM     1     1      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (3) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         18    18      0   23654
                                              3 COMRAM    18    18      0
                   Absolute function *
                _i2c_busCollisionISR *
                          i2_i2c_ISR *
 ---------------------------------------------------------------------------------
 (11) i2_i2c_ISR                                           0     0      0   23654
                    i2_do_I2C_DO_ACK *
           i2_do_I2C_DO_ADDRESS_NACK *
           i2_do_I2C_DO_NACK_RESTART *
              i2_do_I2C_DO_NACK_STOP *
                      i2_do_I2C_IDLE *
                      i2_do_I2C_RCEN *
                     i2_do_I2C_RESET *
                        i2_do_I2C_RX *
             i2_do_I2C_SEND_ADR_READ *
            i2_do_I2C_SEND_ADR_WRITE *
              i2_do_I2C_SEND_RESTART *
         i2_do_I2C_SEND_RESTART_READ *
        i2_do_I2C_SEND_RESTART_WRITE *
                 i2_do_I2C_SEND_STOP *
                        i2_do_I2C_TX *
                  i2_do_I2C_TX_EMPTY *
               i2_i2c1_driver_isNACK
                   i2_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (12) i2_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_TX_EMPTY                                   0     0      0    5881
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
                     i2_mssp1_setIRQ
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_TX                                         2     2      0    5949
                                              1 COMRAM     2     2      0
                   Absolute function *
         i2_do_I2C_SEND_RESTART_READ
        i2_do_I2C_SEND_RESTART_WRITE
                 i2_do_I2C_SEND_STOP
               i2_i2c1_driver_TXData
               i2_i2c1_driver_isNACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) i2_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_SEND_ADR_READ                              0     0      0      31
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_TXData                                1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RX                                         0     0      0    5881
                   Absolute function *
           i2_do_I2C_DO_NACK_RESTART
              i2_do_I2C_DO_NACK_STOP
            i2_i2c1_driver_getRXData
              i2_i2c1_driver_sendACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_DO_NACK_STOP                               0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RESET                                      0     0      0       0
             i2_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RCEN                                       0     0      0       0
              i2_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_DO_ADDRESS_NACK                            0     0      0    5881
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_wr2RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_wr1RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_returnStop                                        2     0      2     108
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_returnReset                                       2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_rdBlkRegCompleteHandler                           2     0      2    1205
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_rd2RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_rd1RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i2_i2c_setDataCompleteCallback                       5     0      5     699
                                              6 COMRAM     5     0      5
                      i2_setCallBack
 ---------------------------------------------------------------------------------
 (15) i2_setCallBack                                       6     1      5     287
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (14) i2_i2c_setBuffer                                     4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (13) i2_i2c_restartWrite                                  2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_STOP                                  0     0      0       0
                 i2_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART                               0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_DO_ACK                                     0     0      0       0
              i2_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _i2c_readNBytes
     _i2c_close
       _mssp1_clearIRQ
       _mssp1_disableIRQ
     _i2c_masterRead
       _i2c_masterOperation
         _i2c1_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c1_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c1_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c1_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c1_driver_startRX
             _do_I2C_RESET *
               _i2c1_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _i2c1_driver_getRXData *
               _i2c1_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c1_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c1_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c1_driver_restart
             _do_I2C_SEND_STOP *
               _i2c1_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c1_driver_TXData *
               _i2c1_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _mssp1_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c1_driver_isNACK *
             _mssp1_clearIRQ *
           _mssp1_waitForEvent
         _mssp1_IRQisEnabled
     _i2c_open
       _i2c1_driver_open
       _i2c1_driver_setBusCollisionISR
       _i2c1_driver_setI2cISR
       _mssp1_clearIRQ
     _i2c_setBuffer
   _i2c_writeNBytes
     _i2c_close
       _mssp1_clearIRQ
       _mssp1_disableIRQ
     _i2c_masterWrite
       _i2c_masterOperation
         _i2c1_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c1_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c1_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c1_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c1_driver_startRX
             _do_I2C_RESET *
               _i2c1_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _i2c1_driver_getRXData *
               _i2c1_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c1_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c1_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c1_driver_restart
             _do_I2C_SEND_STOP *
               _i2c1_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c1_driver_TXData *
               _i2c1_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _mssp1_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c1_driver_isNACK *
             _mssp1_clearIRQ *
           _mssp1_waitForEvent
         _mssp1_IRQisEnabled
     _i2c_open
       _i2c1_driver_open
       _i2c1_driver_setBusCollisionISR
       _i2c1_driver_setI2cISR
       _mssp1_clearIRQ
     _i2c_setAddressNACKCallback
       _setCallBack
     _i2c_setBuffer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i2_i2c_ISR *
     i2_do_I2C_DO_ACK *
       i2_i2c1_driver_sendACK
     i2_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_DO_NACK_RESTART *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_DO_NACK_STOP *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_IDLE *
     i2_do_I2C_RCEN *
       i2_i2c1_driver_startRX
     i2_do_I2C_RESET *
       i2_i2c1_driver_resetBus
     i2_do_I2C_RX *
       Absolute function(Fake) *
       i2_do_I2C_DO_NACK_RESTART *
         i2_i2c1_driver_sendNACK
       i2_do_I2C_DO_NACK_STOP *
         i2_i2c1_driver_sendNACK
       i2_i2c1_driver_getRXData *
       i2_i2c1_driver_sendACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_SEND_ADR_READ *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_ADR_WRITE *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_RESTART *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_READ *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_WRITE *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_STOP *
       i2_i2c1_driver_stop
     i2_do_I2C_TX *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART_READ *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_RESTART_WRITE *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c1_driver_TXData *
       i2_i2c1_driver_isNACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_mssp1_setIRQ *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_i2c1_driver_isNACK *
     i2_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      44       5       42.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      49       1       77.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8D       6        0.0%
DATA                 0      0      8D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Apr 15 15:25:32 2018

                ??i2_i2c1_driver_startRX 0031                             returnReset@p 009A  
          _do_I2C_SEND_RESTART$intlevel0 0CEE                              __CFG_CP$OFF 000000  
                   __size_of_do_I2C_IDLE 0010                      _do_I2C_SEND_RESTART 0CE8  
                   __size_of_do_I2C_RCEN 0010                      ?i2_i2c_restartWrite 003C  
                            __CFG_LVP$ON 000000                                      l421 071C  
                                    l422 0710                                      l430 0260  
                                    l431 024E                                      l440 02C4  
                                    l425 0716                                      l433 0254  
                                    l434 025A                                      l355 0B20  
                                    l451 0488                                      l531 06A8  
                                    l380 0B5E                                      l348 0190  
                                    l461 05C2                                      l429 029A  
                                    l445 047E                                      l462 05CA  
                                    l614 01FE                                      l367 09C8  
                                    l448 048E                                      l457 05D0  
                                    l449 0482                                      l369 09DA  
                                    l482 03A0                                      l458 05BC  
                                    l379 0B6E                                      l469 0768  
                                    l591 099E                             __CFG_CPD$OFF 000000  
        __end_ofi2_i2c1_driver_getRXData 0E24             __size_of_i2c_masterOperation 0036  
                   _returnStop$intlevel0 0D56          i2i2c_setDataCompleteCallback@cb 0037  
          i2c_setDataCompleteCallback@cb 0095                  __size_of_PMD_Initialize 001C  
                  __size_of_do_I2C_RESET 0014                                      prod 000FF3  
                                    tosl 000FFD                                      wreg 000FE8  
               ?i2_rd1RegCompleteHandler 003C          i2c1_driver_setBusCollisionISR@f 0046  
                            i2_do_I2C_RX 0540                              i2_do_I2C_TX 02D0  
               ?i2_wr1RegCompleteHandler 003C                             __CFG_ZCD$OFF 000000  
                ??_rd2RegCompleteHandler 004A                                     l3734 0668  
                                   l3746 0978                           i2_mssp1_setIRQ 0DEA  
                 __size_ofi2_do_I2C_IDLE 000A                   __size_ofi2_do_I2C_RCEN 000A  
                                   u1228 072C                                     u1229 0740  
                                   _LATA 000F83                                     u1350 0C5C  
                                   _LATB 000F84                                     _LATC 000F85  
                                   u1248 0270                                     _LATD 000F86  
                                   u1249 0284                                     _LATE 000F87  
                                   u1338 077C                                     u1290 0BD8  
                                   u1339 0790                                     u1278 049E  
                                   u1358 0C5E                                     u1279 04B2  
                                   u1288 05E0                                     u1289 05F4  
                                   u1807 0BE0                                     _PMD0 000EE1  
                                   _PMD1 000EE2                                     _PMD2 000EE3  
                                   _PMD3 000EE4                                     _PMD4 000EE5  
                                   _PMD5 000EE6                     ?_do_I2C_SEND_RESTART 0031  
                                   _WPUA 000F10                                     _WPUB 000F18  
                                   _WPUC 000F20                                     _WPUD 000F25  
                                   _WPUE 000F2D                     ??i2_i2c_restartWrite 003E  
                ??_wr2RegCompleteHandler 004A                            __CFG_FCMEN$ON 000000  
      __size_of_do_I2C_SEND_RESTART_READ 000E                     __end_ofi2_returnStop 0E34  
              ?_do_I2C_SEND_RESTART_READ 0031                                     _main 0194  
              __size_of_do_I2C_SEND_STOP 000E                   __size_of_do_I2C_DO_ACK 000E  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 004A  
                  ?_do_I2C_SEND_ADR_READ 0031                                     prodh 000FF4  
                                   prodl 000FF3          ??_i2c1_driver_clearBusCollision 0031  
               __size_of_i2c_writeNBytes 0050                                     start 00DC  
                          _i2c_setBuffer 0B74                            __CFG_CSWEN$ON 000000  
                        __end_of_i2c_ISR 0794                             ___param_bank 000000  
       __size_of_rdBlkRegCompleteHandler 004E                            __CFG_SCANE$ON 000000  
               ??_do_I2C_DO_NACK_RESTART 0046                __size_of_mssp1_disableIRQ 0006  
                           _do_I2C_RESET 0C3C           __size_of_OSCILLATOR_Initialize 0018  
            i2c_setAddressNACKCallback@p 0098                             main@rec_1229 00A2  
          __end_of_OSCILLATOR_Initialize 0BA4                 __end_of_i2c1_driver_open 0BD2  
                                  ?_main 0031                           _i2c_readNBytes 0974  
               __size_ofi2_i2c_setBuffer 0018                 __end_of_i2c1_driver_stop 0E14  
                          __CFG_WDTE$OFF 000000               __end_of_i2c1_driver_TXData 0D86  
                         __CFG_DEBUG$OFF 000000                  __size_ofi2_do_I2C_RESET 000E  
                                  i2l421 07A8                                    i2l422 079C  
                                  i2l430 02EC                                    i2l431 02DA  
                                  i2l440 0350                                    i2l425 07A2  
                                  i2l433 02E0                                    i2l434 02E6  
                                  i2l451 0572                                    i2l267 0072  
                                  i2l461 0618                                    i2l429 0326  
                                  i2l445 0568                                    i2l462 0620  
                                  i2l448 0578                                    i2l457 0626  
                                  i2l449 056C                                    i2l482 050A  
                                  i2l458 0612                                    i2l469 0832  
                                  _OSCEN 000EDC                                    _TRISA 000F88  
                                  _TRISB 000F89                                    _TRISC 000F8A  
                                  _TRISD 000F8B                                    _TRISE 000F8C  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                          __CFG_WRT4$OFF 000000                            __CFG_WRT5$OFF 000000  
                          __CFG_WRT6$OFF 000000                            __CFG_WRT7$OFF 000000  
                         __CFG_EBTR0$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                            i2c_open@ret 0091                           __CFG_EBTR4$OFF 000000  
                         __CFG_EBTR5$OFF 000000                           __CFG_EBTR6$OFF 000000  
                         __CFG_EBTR7$OFF 000000                           _i2c_masterRead 0D76  
                          __CFG_WRTB$OFF 000000                    __end_ofi2_returnReset 0E30  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                 __end_ofi2_mssp1_setIRQ 0DF0                           __CFG_EBTRB$OFF 000000  
             __end_of_i2c1_driver_isNACK 0BFE                       __size_ofi2_i2c_ISR 0040  
             ?_do_I2C_SEND_RESTART_WRITE 0031                       __CFG_MCLRE$EXTMCLR 000000  
                  ??_do_I2C_SEND_RESTART 0046                            i2returnStop@p 003C  
 __end_of_i2c1_driver_setBusCollisionISR 0CB0  __size_of_i2c1_driver_setBusCollisionISR 000E  
         _i2c1_driver_setBusCollisionISR 0CA2                                    pclath 000FFA  
                                  tablat 000FF5                  __size_of_mssp1_clearIRQ 0006  
                 ?_do_I2C_SEND_ADR_WRITE 0031                                    status 000FD8  
                                  wtemp6 004B          __size_ofi2_i2c1_driver_sendNACK 0006  
                         ?_i2c_setBuffer 0046                             ?_setCallBack 0090  
        __size_ofi2_i2c1_driver_resetBus 0002                            _fsmStateTable 0060  
                        __initialization 093E                               _i2c_poller 0B5C  
                             _i2c_status 0001                             __end_of_main 023E  
                          i2_do_I2C_IDLE 0D64                         i2setCallBack@idx 0036  
                          i2_do_I2C_RCEN 0D5A                         i2_do_I2C_TX$1023 0032  
                       __end_of_i2c_open 0194                   __end_of_i2c_readNBytes 09AA  
            ?_INTERRUPT_InterruptManager 0031                    i2i2c_setBuffer@buffer 0031  
                       i2_mssp1_clearIRQ 0DE4         __end_ofi2_do_I2C_DO_ADDRESS_NACK 07DA  
        __end_ofi2_rd1RegCompleteHandler 0A70                            setCallBack@cb 0090  
                          _do_I2C_DO_ACK 0CCC                                   ??_main 004A  
                      ?_i2c_restartWrite 009A            __size_of_i2c1_driver_sendNACK 0006  
                          __activetblptr 000003          __end_ofi2_wr1RegCompleteHandler 0AA0  
                           i2c_close@ret 0046                   __end_of_i2c_masterRead 0D7E  
                     ??_i2c_restartWrite 004A            __size_of_i2c1_driver_resetBus 0002  
                ?_do_I2C_DO_ADDRESS_NACK 0031                          ?i2_mssp1_setIRQ 0031  
     __end_ofi2_do_I2C_SEND_RESTART_READ 0DBE               i2_do_I2C_SEND_RESTART_READ 0DB6  
                                 _ANSELA 000F11                                   _ANSELB 000F19  
                                 _ANSELC 000F21                                   _ANSELD 000F26  
                                 _ANSELE 000F2E                 __size_ofi2_do_I2C_DO_ACK 0008  
                                 _RC3PPS 000EFA                                   _RC4PPS 000EFB  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _ODCOND 000F24  
                                 _ODCONE 000F2C                           __CFG_WDTCCS$SC 000000  
                     __size_of_i2c_close 001C                                   _OSCFRQ 000EDE  
                i2_do_I2C_SEND_ADR_WRITE 0D12                   ??_do_I2C_SEND_ADR_READ 0047  
               rdBlkRegCompleteHandler@p 009A                                ??_i2c_ISR 0049  
                         __CFG_PWRTE$OFF 000000                  ??i2_do_I2C_SEND_RESTART 0031  
                         __CFG_XINST$OFF 000000         __size_ofi2_i2c1_driver_getRXData 0004  
                  _i2c1_driver_getRXData 0E08                __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                     i2_i2c1_driver_stop 0E34                      _do_I2C_RX$intlevel0 0456  
            __end_of_do_I2C_DO_NACK_STOP 0CCC      __end_of_i2c_setDataCompleteCallback 0B08  
         ?i2_i2c_setDataCompleteCallback 0037              _i2c_setDataCompleteCallback 0AEC  
                         ?i2_do_I2C_IDLE 0031                          _i2c_masterWrite 0D6E  
                         ?i2_do_I2C_RCEN 0031    __end_of_i2c1_driver_clearBusCollision 0E08  
 __size_of_i2c1_driver_clearBusCollision 0006            _i2c1_driver_clearBusCollision 0E02  
                         __CFG_STVREN$ON 000000                        __end_ofi2_i2c_ISR 085E  
        __size_of_do_I2C_DO_NACK_RESTART 000E                        ??_i2c_writeNBytes 004A  
                        ?_i2c_readNBytes 0092                           i2returnReset@p 003C  
                                 clear_0 0964                           ?_do_I2C_DO_ACK 0031  
                    ?i2_i2c1_driver_stop 0031           i2i2c_setDataCompleteCallback@p 003A  
                 i2_i2c1_driver_sendNACK 0DF0                   i2c1_driver_setI2cISR@f 0046  
            __end_of_i2c1_driver_sendACK 0DD8                           _PMD_Initialize 0B24  
         __end_of_do_I2C_DO_ADDRESS_NACK 074E                          ?_i2c_masterRead 0031  
                 i2_i2c1_driver_resetBus 0E3E              ?_i2c_setAddressNACKCallback 0095  
   __size_ofi2_do_I2C_SEND_RESTART_WRITE 0008              __end_of_i2c1_driver_restart 0E18  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                             ?_returnReset 009A  
          _do_I2C_DO_NACK_STOP$intlevel0 0CC4                    _i2c1_driver_setI2cISR 0C94  
            __end_of_i2c1_driver_startRX 0E10                    __size_ofi2_returnStop 0004  
                      ??i2_i2c_setBuffer 0035           __size_ofi2_do_I2C_DO_NACK_STOP 0008  
          __size_of_INTERRUPT_Initialize 0004            __end_ofi2_do_I2C_DO_NACK_STOP 0D96  
                      _SYSTEM_Initialize 0C62                               __accesstop 0060  
                   ??i2_i2c1_driver_stop 0031                  __end_of__initialization 096A  
                        ??_i2c_setBuffer 004A           _do_I2C_SEND_ADR_READ$intlevel0 0C2E  
                       _do_I2C_SEND_STOP 0CDA                       __size_of_do_I2C_RX 0078  
                     __size_of_do_I2C_TX 0092                       ?_SYSTEM_Initialize 0031  
                          ___rparam_used 000001               __end_of_mssp1_IRQisEnabled 0C62  
      _rdBlkRegCompleteHandler$intlevel0 06BA                      _i2c_masterOperation 09AA  
               __size_of_do_I2C_TX_EMPTY 005C               ?i2_rdBlkRegCompleteHandler 003C  
                _rdBlkRegCompleteHandler 06B4           __size_ofi2_i2c1_driver_sendACK 0006  
             __end_of_mssp1_waitForEvent 0BE8            __end_ofi2_i2c1_driver_sendACK 0DFC  
                            ?_i2c_poller 0031                           __pcstackCOMRAM 0031  
                    _do_I2C_TX$intlevel0 0244                             __pidataBANK0 09E0  
                    ??_SYSTEM_Initialize 0046           __size_ofi2_i2c1_driver_restart 0004  
          __end_ofi2_i2c1_driver_restart 0E3C                         _mssp1_disableIRQ 0DD8  
         __size_ofi2_i2c1_driver_startRX 0004            __end_ofi2_i2c1_driver_startRX 0E28  
                 __end_of_PMD_Initialize 0B40                        __end_of_i2c_close 0B24  
                           i2_returnStop 0E30                           i2_do_I2C_RESET 0D2E  
                   ?_i2c_masterOperation 0031                 i2_do_I2C_DO_ADDRESS_NACK 0794  
                           ?i2_do_I2C_RX 0031                             ?i2_do_I2C_TX 0031  
      __size_ofi2_do_I2C_DO_NACK_RESTART 0008                 i2rd2RegCompleteHandler@p 003C  
                         setCallBack@idx 0046                ?i2_do_I2C_DO_NACK_RESTART 0031  
                 _do_I2C_DO_NACK_RESTART 0CB0                           _do_I2C_TX$1023 0047  
              __end_of_SYSTEM_Initialize 0C74                ??i2_do_I2C_SEND_ADR_WRITE 0032  
             __end_ofi2_do_I2C_SEND_STOP 0DA6                           _mssp1_clearIRQ 0DDE  
          __size_ofi2_i2c1_driver_TXData 0008           __size_of_rd2RegCompleteHandler 0038  
                              ?_i2c_open 0031            __end_of_rd2RegCompleteHandler 0896  
         __size_of_wr2RegCompleteHandler 0038            __end_of_wr2RegCompleteHandler 093E  
                __end_of_i2c_masterWrite 0D76         __size_ofi2_rd1RegCompleteHandler 0030  
                  _rd1RegCompleteHandler 0896                   ?_i2c1_driver_getRXData 0031  
                      ??i2_do_I2C_DO_ACK 0031                 i2wr2RegCompleteHandler@p 003C  
          __size_ofi2_i2c1_driver_isNACK 0016                    _do_I2C_IDLE$intlevel0 0C8A  
                      i2_do_I2C_TX_EMPTY 060E         __size_ofi2_wr1RegCompleteHandler 0030  
                        ??i2_do_I2C_IDLE 0031                    _wr1RegCompleteHandler 08CE  
                         _SSP1DATPPSbits 000EB8             __size_of_i2c_busCollisionISR 0006  
                        ??i2_do_I2C_RCEN 0031          _wr1RegCompleteHandler$intlevel0 08D4  
        _rd1RegCompleteHandler$intlevel0 089C                            ??_do_I2C_IDLE 0046  
                   __size_of_setCallBack 007A                            ??_do_I2C_RCEN 0046  
      __end_ofi2_rdBlkRegCompleteHandler 081E                    i2c_readNBytes@address 0096  
                     ?i2_do_I2C_TX_EMPTY 0031                          __CFG_PPS1WAY$ON 000000  
                        ??_do_I2C_DO_ACK 0046                   __end_ofi2_do_I2C_RESET 0D3C  
                    i2c_setBuffer@buffer 0046                           _SSP1CLKPPSbits 000EB7  
                        ?_PMD_Initialize 0031           ?_i2c1_driver_clearBusCollision 0031  
                    ??i2_do_I2C_TX_EMPTY 0031                    ??_i2c_masterOperation 0049  
                      ?_i2c1_driver_open 0031                        __end_of_do_I2C_RX 04C8  
                      __end_of_do_I2C_TX 02D0                 ??i2_do_I2C_SEND_ADR_READ 0032  
                      ?_i2c1_driver_stop 0031                   ?_i2c1_driver_setI2cISR 0046  
                     ??_i2c1_driver_open 0046                 ?i2_rd2RegCompleteHandler 003C  
                     ??_i2c1_driver_stop 0046                                  _OSCCON1 000ED8  
                                _OSCCON3 000EDA                            ?_mssp1_setIRQ 0031  
                 __size_ofi2_setCallBack 0078                                  _OSCTUNE 000EDD  
                                _SSP1ADD 000F93                 ?i2_wr2RegCompleteHandler 003C  
                                _SSP1BUF 000F92                   __end_of_mssp1_clearIRQ 0DE4  
                                _SSP1MSK 000F94                      __size_of_i2c_poller 0018  
                ??_do_I2C_SEND_ADR_WRITE 0047      _do_I2C_SEND_RESTART_WRITE$intlevel0 0CFC  
            ??_do_I2C_SEND_RESTART_WRITE 0046                       _i2c1_driver_TXData 0D7E  
                             ??_i2c_open 0049              __size_ofi2_i2c_restartWrite 0004  
               __end_ofi2_mssp1_clearIRQ 0DEA                       _i2c1_driver_i2cISR 002B  
                                _i2c_ISR 074E                ??_rdBlkRegCompleteHandler 004A  
              __end_ofi2_do_I2C_TX_EMPTY 0664                  i2_i2c1_driver_getRXData 0E20  
                                __Hparam 0000                    _returnReset$intlevel0 0D4C  
                  _do_I2C_RCEN$intlevel0 0C7A                       _i2c1_driver_isNACK 0BE8  
                    ?_i2c1_driver_TXData 0031                                  __Lparam 0000  
       _do_I2C_DO_ADDRESS_NACK$intlevel0 0708      __size_of_i2c_setAddressNACKCallback 001C  
                      ??_do_I2C_TX_EMPTY 0046                      ?_i2c1_driver_isNACK 0031  
                        ?i2_do_I2C_RESET 0031                                  __pcinit 093E  
                                __ramtop 0F00                   i2c_writeNBytes@address 009E  
                     i2c_readNBytes@data 0092                                  __ptext0 0194  
                                __ptext1 0664                                  __ptext2 0AD0  
                                __ptext3 0D6E                                  __ptext4 0974  
                                __ptext5 00E0                                  __ptext6 0C94  
                                __ptext7 0CA2                                  __ptext8 0BBC  
                                __ptext9 0D76                      __end_of_do_I2C_IDLE 0C94  
                    __end_of_do_I2C_RCEN 0C84                         ??i2_mssp1_setIRQ 0031  
                  _OSCILLATOR_Initialize 0B8C              __end_of_do_I2C_SEND_RESTART 0CF6  
                         ??_mssp1_setIRQ 0046                     ??_i2c1_driver_TXData 0046  
               ??_PIN_MANAGER_Initialize 0046                   i2c_masterOperation@ret 0091  
                        ?_mssp1_clearIRQ 0031               _do_I2C_SEND_STOP$intlevel0 0CE0  
            ?i2_do_I2C_SEND_RESTART_READ 0031                 _do_I2C_SEND_RESTART_READ 0D04  
             __size_of_SYSTEM_Initialize 0012                                  main@rec 00A1  
                   __size_of_returnReset 000A                     end_of_initialization 096A  
                   ??_i2c1_driver_isNACK 0046                __size_of_i2c_restartWrite 000A  
           __end_of_i2c1_driver_sendNACK 0DD2                   ?_rd1RegCompleteHandler 009A  
                        _i2c_writeNBytes 0664                         ?_i2c_masterWrite 0031  
                 ?_wr1RegCompleteHandler 009A             __end_of_i2c1_driver_resetBus 0E3E  
                       ??_i2c_readNBytes 004A                            i2_setCallBack 04C8  
         __size_ofi2_do_I2C_SEND_RESTART 0008            __end_ofi2_do_I2C_SEND_RESTART 0DAE  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
                 __size_ofi2_returnReset 0004             ?i2_do_I2C_SEND_RESTART_WRITE 0031  
              _do_I2C_SEND_RESTART_WRITE 0CF6                  ?i2_i2c1_driver_sendNACK 0031  
                       ??_i2c_masterRead 0049                    __CFG_WDTCPS$WDTCPS_31 000000  
                        i2_i2c_setBuffer 0BA4                  ?i2_i2c1_driver_resetBus 0031  
        __end_ofi2_rd2RegCompleteHandler 0A40                               _returnStop 0D50  
        __end_of_rdBlkRegCompleteHandler 0702                 __end_of_do_I2C_SEND_STOP 0CE8  
                              i2_i2c_ISR 081E          __end_ofi2_wr2RegCompleteHandler 0AD0  
        __size_ofi2_do_I2C_SEND_ADR_READ 000E     __size_of_i2c_setDataCompleteCallback 001C  
        ??i2_i2c_setDataCompleteCallback 003C                              returnStop@p 009A  
                       __CFG_FEXTOSC$OFF 000000                 __end_of_mssp1_disableIRQ 0DDE  
                   __size_ofi2_do_I2C_RX 0072                     __size_ofi2_do_I2C_TX 008C  
           i2c_setDataCompleteCallback@p 0098                ??i2_i2c1_driver_getRXData 0031  
                i2_rd1RegCompleteHandler 0A40               __size_ofi2_do_I2C_TX_EMPTY 0056  
                i2_wr1RegCompleteHandler 0A70            __size_of_do_I2C_SEND_ADR_READ 0014  
                         ?i2_setCallBack 0031                             ??_i2c_poller 0049  
            ??i2_rdBlkRegCompleteHandler 003E           __end_ofi2_i2c1_driver_sendNACK 0DF6  
                            _do_I2C_IDLE 0C84                              _do_I2C_RCEN 0C74  
           __end_of_INTERRUPT_Initialize 0E20           __end_ofi2_i2c1_driver_resetBus 0E40  
             ??i2_do_I2C_DO_ADDRESS_NACK 0031         __end_ofi2_do_I2C_DO_NACK_RESTART 0D8E  
          ??i2_do_I2C_SEND_RESTART_WRITE 0031                       _mssp1_IRQisEnabled 0C50  
                 ?_OSCILLATOR_Initialize 0031                               ?i2_i2c_ISR 0031  
           __size_of_do_I2C_DO_NACK_STOP 000E                       _mssp1_waitForEvent 0BD2  
                ?_do_I2C_DO_NACK_RESTART 0031                      start_initialization 093E  
                              _i2c_close 0B08                      _i2c_busCollisionISR 0DFC  
        __size_of_PIN_MANAGER_Initialize 007A                      ?_mssp1_IRQisEnabled 0031  
                        i2setCallBack@cb 0031                  __end_of_i2c_writeNBytes 06B4  
                        i2_do_I2C_DO_ACK 0D96                            i2_returnReset 0E2C  
                    ?_mssp1_waitForEvent 0046                             setCallBack@p 0093  
                     __end_of_i2c_poller 0B74             __size_of_i2c1_driver_sendACK 0006  
                        i2c_open@address 0090                  i2c_setBuffer@bufferSize 0048  
                ??_i2c1_driver_getRXData 0046                   rd1RegCompleteHandler@p 009A  
           __size_of_i2c1_driver_restart 0004              __size_ofi2_i2c1_driver_stop 0004  
           __size_of_i2c1_driver_startRX 0004                    i2_do_I2C_DO_NACK_STOP 0D8E  
                 i2_do_I2C_SEND_ADR_READ 0D20                    __end_of_i2c_setBuffer 0B8C  
                      __size_of_i2c_open 00B4                     ?_i2c_busCollisionISR 0031  
                       __CFG_LPBOREN$OFF 000000                     __end_of_mssp1_setIRQ 0DCC  
                __end_ofi2_i2c_setBuffer 0BBC                     ??_mssp1_IRQisEnabled 0046  
                     i2_do_I2C_SEND_STOP 0D9E                         ??_PMD_Initialize 0046  
                   ??_mssp1_waitForEvent 0048                   wr1RegCompleteHandler@p 009A  
                  i2_i2c1_driver_sendACK 0DF6                            ?_do_I2C_RESET 0031  
           __end_ofi2_i2c1_driver_TXData 0DC6                              __pdataBANK0 0060  
                  i2i2c1_driver_TXData@d 0031                _do_I2C_TX_EMPTY$intlevel0 05B8  
    __size_ofi2_do_I2C_SEND_RESTART_READ 0008                    i2_i2c1_driver_restart 0E38  
                            ?_returnStop 009A                      ?i2_do_I2C_SEND_STOP 0031  
                ??_i2c1_driver_setI2cISR 0049                    i2_i2c1_driver_startRX 0E24  
                    i2i2c_restartWrite@p 003C           __end_of_do_I2C_DO_NACK_RESTART 0CBE  
                   _i2c1_driver_sendNACK 0DCC             __end_ofi2_i2c1_driver_isNACK 0C14  
                            __pbssCOMRAM 0001                               ?_i2c_close 0031  
                   _i2c1_driver_resetBus 0E3C                i2_rdBlkRegCompleteHandler 07DA  
                          __pcstackBANK0 0090                           ?i2_returnReset 003C  
                              _do_I2C_RX 0450                                _do_I2C_TX 023E  
              ??i2_rd1RegCompleteHandler 003E           __size_of_do_I2C_SEND_ADR_WRITE 0014  
  __end_ofi2_i2c_setDataCompleteCallback 0B5C   __size_ofi2_i2c_setDataCompleteCallback 001C  
          i2_i2c_setDataCompleteCallback 0B40            __end_of_do_I2C_SEND_ADR_WRITE 0C28  
              ??i2_wr1RegCompleteHandler 003E                         _i2c_restartWrite 0D3C  
                   ??i2_do_I2C_SEND_STOP 0031               _i2c_restartWrite$intlevel0 0D42  
              __size_of_i2c1_driver_open 0016                        ?i2_mssp1_clearIRQ 0031  
              __size_of_i2c1_driver_stop 0004                          ??i2_setCallBack 0036  
                               ?_i2c_ISR 0031          _do_I2C_SEND_ADR_WRITE$intlevel0 0C1A  
                        _do_I2C_TX_EMPTY 05B2                            ??_setCallBack 0046  
       __size_ofi2_rd2RegCompleteHandler 0030                    _rd2RegCompleteHandler 085E  
                     ??i2_mssp1_clearIRQ 0031                    ??_i2c_busCollisionISR 0031  
       __size_ofi2_wr2RegCompleteHandler 0030                   _PIN_MANAGER_Initialize 03D6  
                  _wr2RegCompleteHandler 0906                         ??i2_do_I2C_RESET 0031  
                              __pintcode 0008                    __end_ofi2_do_I2C_IDLE 0D6E  
                  __end_ofi2_do_I2C_RCEN 0D64                           ??_do_I2C_RESET 0046  
                              __ptext100 0DF6                                __ptext101 0DFC  
                              __ptext102 0E02                                __ptext103 0000  
            __end_of_i2c_masterOperation 09E0                 ??_do_I2C_DO_ADDRESS_NACK 0046  
            _i2c1_driver_busCollisionISR 002E                    __end_of_do_I2C_DO_ACK 0CDA  
           ??_INTERRUPT_InterruptManager 0034               ??_do_I2C_SEND_RESTART_READ 0046  
                  ?_i2c1_driver_sendNACK 0031                              ??i2_i2c_ISR 0034  
                __end_ofi2_do_I2C_DO_ACK 0D9E                         ??_mssp1_clearIRQ 0046  
               i2_do_I2C_DO_NACK_RESTART 0D86                    ?_i2c1_driver_resetBus 0031  
     __size_of_do_I2C_SEND_RESTART_WRITE 000E                 ?i2_do_I2C_SEND_ADR_WRITE 0031  
                             ?_do_I2C_RX 0031                               ?_do_I2C_TX 0031  
                      _i2c1_driver_start 0E18                         ?_i2c_writeNBytes 009A  
             __end_ofi2_i2c_restartWrite 0E2C                  ??_rd1RegCompleteHandler 004A  
                      i2c_readNBytes@len 0094                     _INTERRUPT_Initialize 0E1C  
                      _i2c_ISR$intlevel0 0754                       ?_i2c1_driver_start 0031  
                ??_wr1RegCompleteHandler 004A                   ?i2_do_I2C_DO_NACK_STOP 0031  
                               _LATAbits 000F83                      __size_of_returnStop 000A  
                               _PIE3bits 000EC5                      __CFG_BORV$VBOR_2P45 000000  
                    ??_i2c1_driver_start 0046                                 i2u150_48 0636  
                               i2u150_49 064A      __size_of_INTERRUPT_InterruptManager 00D4  
                               i2u144_48 07B8                                 i2u144_49 07CC  
                               i2u161_48 0062                                 i2u146_48 02FC  
                               i2u146_49 0310                                 i2u164_48 007C  
                               i2u164_49 0090                                 i2u149_48 0588  
                               i2u157_48 0846                                 i2u149_49 059C  
                               i2u157_49 085A                                 _PIR3bits 000ECD  
                       ?i2_i2c_setBuffer 0031                   ?i2_i2c1_driver_sendACK 0031  
                               _SSP1CON1 000F96                                 _SSP1CON2 000F97  
           ?_i2c_setDataCompleteCallback 0095                                 _SSP1STAT 000F95  
                    __end_of_setCallBack 03D6                   ?i2_i2c1_driver_restart 0031  
                 ?i2_i2c1_driver_startRX 0031             i2c_setAddressNACKCallback@cb 0095  
                      ?_do_I2C_SEND_STOP 0031                          ??i2_returnReset 003E  
                            ??_i2c_close 0046                __end_of_i2c1_driver_start 0E1C  
                          ??_returnReset 004A                       ??_do_I2C_SEND_STOP 0046  
            __size_of_i2c1_driver_TXData 0008             ??_i2c_setAddressNACKCallback 0047  
      __end_of_do_I2C_SEND_RESTART_WRITE 0D04                  __end_of_do_I2C_TX_EMPTY 060E  
                              copy_data0 0952                    ?_INTERRUPT_Initialize 0031  
               ?_rdBlkRegCompleteHandler 009A                        ?_mssp1_disableIRQ 0031  
           __size_of_do_I2C_SEND_RESTART 000E              __size_of_i2c1_driver_isNACK 0016  
                   i2_i2c1_driver_TXData 0DBE                  _do_I2C_DO_ACK$intlevel0 0CD2  
                               _i2c_open 00E0                    __size_of_mssp1_setIRQ 0006  
                         i2setCallBack@p 0034                       ??_mssp1_disableIRQ 0046  
                 ?_rd2RegCompleteHandler 009A                      _do_I2C_DO_NACK_STOP 0CBE  
                       __size_of_i2c_ISR 0046                   ?_wr2RegCompleteHandler 009A  
        _wr2RegCompleteHandler$intlevel0 090C          _rd2RegCompleteHandler$intlevel0 0864  
                               __Hrparam 0000                     i2_i2c1_driver_isNACK 0BFE  
                               __Lrparam 0000                       __CFG_BOREN$SBORDIS 000000  
                    i2c_writeNBytes@data 009A                             ?_do_I2C_IDLE 0031  
                           ?_do_I2C_RCEN 0031                  ??_OSCILLATOR_Initialize 0046  
                    _i2c1_driver_sendACK 0DD2                 __size_of_i2c_masterWrite 0008  
                  i2_do_I2C_SEND_RESTART 0DA6          __size_of_do_I2C_DO_ADDRESS_NACK 004C  
                    i2c1_driver_TXData@d 0046                   ??_i2c1_driver_sendNACK 0046  
          ??_i2c_setDataCompleteCallback 0047          __end_ofi2_do_I2C_SEND_ADR_WRITE 0D20  
       ??_i2c1_driver_setBusCollisionISR 0049          ?_i2c1_driver_setBusCollisionISR 0046  
     _do_I2C_SEND_RESTART_READ$intlevel0 0D0A                      _i2c1_driver_restart 0E14  
                          ?i2_returnStop 003C                     ?_do_I2C_DO_NACK_STOP 0031  
                    _i2c1_driver_startRX 0E0C             __end_of_do_I2C_SEND_ADR_READ 0C3C  
                 ??_i2c1_driver_resetBus 0046                         ?i2_do_I2C_DO_ACK 0031  
                          ??i2_do_I2C_RX 0031                            ??i2_do_I2C_TX 0032  
                           _mssp1_setIRQ 0DC6                              ??_do_I2C_RX 0046  
                            ??_do_I2C_TX 0047                                 __ptext10 09AA  
                               __ptext11 0C50                                 __ptext20 0CCC  
                               __ptext12 0B5C                                 __ptext21 0C74  
                               __ptext13 0BD2                                 __ptext30 05B2  
                               __ptext22 0C14                                 __ptext14 074E  
                               __ptext31 0DC6                                 __ptext23 0C28  
                               __ptext15 0450                                 __ptext40 0896  
                               __ptext32 0BE8                                 __ptext24 0CDA  
                               __ptext16 023E                                 __ptext41 08CE  
                               __ptext33 0D7E                                 __ptext25 0CE8  
                               __ptext17 0702                                 __ptext50 0E14  
                               __ptext42 0D3C                                 __ptext34 0E08  
                               __ptext26 0CF6                                 __ptext18 0CB0  
                               __ptext51 0DD2                                 __ptext43 0D46  
                               __ptext35 0DCC                                 __ptext27 0D04  
                               __ptext19 0CBE                                 __ptext60 0E1C  
                               __ptext52 0E18                                 __ptext44 0D50  
                               __ptext36 0E3C                                 __ptext28 0C84  
                               __ptext53 0B08                                 __ptext45 0906  
                               __ptext37 0E0C                                 __ptext29 0C3C  
                               __ptext70 0D5A                                 __ptext62 081E  
                               __ptext54 0DD8                                 __ptext46 0AEC  
                               __ptext38 06B4                                 __ptext71 0D12  
                               __ptext63 0DE4                                 __ptext55 0DDE  
                               __ptext47 035C                                 __ptext39 085E  
                               __ptext80 0DEA                                 __ptext72 0D20  
                               __ptext64 0540                                 __ptext56 0C62  
                               __ptext48 0B74                                 __ptext81 0BFE  
                               __ptext73 0D9E                                 __ptext65 02D0  
                               __ptext57 0B24                                 __ptext49 0E10  
                               __ptext90 0A70                                 __ptext82 0DBE  
                               __ptext74 0DA6                                 __ptext66 0794  
                               __ptext58 03D6                                 __ptext91 0E28  
                               __ptext83 0E20                                 __ptext75 0DAE  
                               __ptext67 0D86                                 __ptext59 0B8C  
                               __ptext92 0E2C                                 __ptext84 0DF0  
                               __ptext76 0DB6                                 __ptext68 0D8E  
                               __ptext93 0E30                                 __ptext85 0E3E  
                               __ptext77 0D64                                 __ptext69 0D96  
                               __ptext94 0AA0                                 __ptext86 0E24  
                               __ptext78 0D2E                                 __ptext95 0B40  
                               __ptext87 07DA                                 __ptext79 060E  
                               __ptext96 04C8                                 __ptext88 0A10  
                               __ptext97 0BA4                                 __ptext89 0A40  
                               __ptext98 0E34                                 __ptext99 0E38  
                           _SSP1CON1bits 000F96                             _SSP1CON2bits 000F97  
                   ?_i2c1_driver_sendACK 0031                     __end_of_do_I2C_RESET 0C50  
                  ?i2_i2c1_driver_TXData 0031                  ?i2_do_I2C_SEND_ADR_READ 0031  
                __size_ofi2_mssp1_setIRQ 0006                     ?_i2c1_driver_restart 0031  
                    __end_of_returnReset 0D50                         _i2c1_driver_open 0BBC  
     __size_ofi2_rdBlkRegCompleteHandler 0044                  i2_rd2RegCompleteHandler 0A10  
                       _i2c1_driver_stop 0E10                            __size_of_main 00AA  
                   ?_i2c1_driver_startRX 0031           __size_of_i2c1_driver_getRXData 0004  
          __end_of_i2c1_driver_getRXData 0E0C                  i2_wr2RegCompleteHandler 0AA0  
                   __CFG_WDTCWS$WDTCWS_7 000000                              _setCallBack 035C  
                  ?i2_i2c1_driver_isNACK 0031                  i2c_masterOperation@read 0090  
                               int$flags 004A       __end_of_INTERRUPT_InterruptManager 00DC  
             _INTERRUPT_InterruptManager 0008                                 main@addr 00A3  
                               main@data 009F                             _SSP1STATbits 000F95  
                         ??i2_returnStop 003E         __end_of_do_I2C_SEND_RESTART_READ 0D12  
                           ??_returnStop 004A                 __end_of_i2c_restartWrite 0D46  
                  ??_do_I2C_DO_NACK_STOP 0046                  __size_of_i2c_readNBytes 0036  
              mssp1_waitForEvent@timeout 0046           __size_of_i2c1_driver_setI2cISR 000E  
          __end_of_i2c1_driver_setI2cISR 0CA2                               _INTCONbits 000FF2  
             __size_of_i2c1_driver_start 0004                       i2c_writeNBytes@len 009C  
                 ??_INTERRUPT_Initialize 0046                 ?i2_i2c1_driver_getRXData 0031  
                __size_of_i2c_masterRead 0008           __end_ofi2_do_I2C_SEND_ADR_READ 0D2E  
                  ??_i2c1_driver_sendACK 0046                         ?_do_I2C_TX_EMPTY 0031  
      __size_ofi2_do_I2C_DO_ADDRESS_NACK 0046               __end_ofi2_i2c1_driver_stop 0E38  
              ?i2_do_I2C_DO_ADDRESS_NACK 0031                   _do_I2C_DO_ADDRESS_NACK 0702  
                               intlevel2 0000                   _do_I2C_RESET$intlevel0 0C42  
                  ??_i2c1_driver_restart 0046                   rd2RegCompleteHandler@p 009A  
                  ??_i2c1_driver_startRX 0046               i2rdBlkRegCompleteHandler@p 003C  
                    __end_ofi2_do_I2C_RX 05B2                      __end_ofi2_do_I2C_TX 035C  
                ?_PIN_MANAGER_Initialize 0031                        i2c_restartWrite@p 009A  
                      __CFG_CLKOUTEN$OFF 000000                       __end_of_returnStop 0D5A  
            __size_of_mssp1_IRQisEnabled 0012      __end_ofi2_do_I2C_SEND_RESTART_WRITE 0DB6  
            i2_do_I2C_SEND_RESTART_WRITE 0DAE                   ?i2_do_I2C_SEND_RESTART 0031  
             ??i2_do_I2C_DO_NACK_RESTART 0031                   wr2RegCompleteHandler@p 009A  
            __size_of_mssp1_waitForEvent 0016                i2i2c_setBuffer@bufferSize 0033  
              __size_ofi2_mssp1_clearIRQ 0006                        ??_i2c_masterWrite 0049  
     __end_of_i2c_setAddressNACKCallback 0AEC               _i2c_setAddressNACKCallback 0AD0  
                 __size_of_i2c_setBuffer 0018                              _returnReset 0D46  
       _do_I2C_DO_NACK_RESTART$intlevel0 0CB6                 i2rd1RegCompleteHandler@p 003C  
                ??i2_do_I2C_DO_NACK_STOP 0031                   ??i2_i2c1_driver_TXData 0031  
              ??i2_rd2RegCompleteHandler 003E             ??i2_do_I2C_SEND_RESTART_READ 0031  
         __end_of_PIN_MANAGER_Initialize 0450              __end_of_i2c_busCollisionISR 0E02  
         __size_of_rd1RegCompleteHandler 0038                ??i2_wr2RegCompleteHandler 003E  
          __end_of_rd1RegCompleteHandler 08CE              __size_ofi2_do_I2C_SEND_STOP 0008  
               ??i2_i2c1_driver_sendNACK 0031           __size_of_wr1RegCompleteHandler 0038  
                 ??i2_i2c1_driver_isNACK 0031            __end_of_wr1RegCompleteHandler 0906  
       __size_ofi2_do_I2C_SEND_ADR_WRITE 000E                    _do_I2C_SEND_ADR_WRITE 0C14  
                ??i2_i2c1_driver_sendACK 0031                     _do_I2C_SEND_ADR_READ 0C28  
                  __end_ofi2_setCallBack 0540                 ??i2_i2c1_driver_resetBus 0031  
               i2wr1RegCompleteHandler@p 003C                  ??i2_i2c1_driver_restart 0031  
                     i2_i2c_restartWrite 0E28  
