

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 23 22:43:33 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,inline
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1,inline
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	text82,global,reloc=2,class=CODE,delta=1
    95                           	psect	text83,global,reloc=2,class=CODE,delta=1
    96                           	psect	text84,global,reloc=2,class=CODE,delta=1
    97                           	psect	text85,global,reloc=2,class=CODE,delta=1
    98                           	psect	text86,global,reloc=2,class=CODE,delta=1
    99                           	psect	text87,global,reloc=2,class=CODE,delta=1
   100                           	psect	text88,global,reloc=2,class=CODE,delta=1
   101                           	psect	text89,global,reloc=2,class=CODE,delta=1
   102                           	psect	text90,global,reloc=2,class=CODE,delta=1
   103                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text93,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text94,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text95,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text97,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text98,global,reloc=2,class=CODE,delta=1
   111                           	psect	text99,global,reloc=2,class=CODE,delta=1
   112                           	psect	text100,global,reloc=2,class=CODE,delta=1
   113                           	psect	text101,global,reloc=2,class=CODE,delta=1
   114                           	psect	text102,global,reloc=2,class=CODE,delta=1
   115                           	psect	text103,global,reloc=2,class=CODE,delta=1
   116                           	psect	text104,global,reloc=2,class=CODE,delta=1
   117                           	psect	text105,global,reloc=2,class=CODE,delta=1
   118                           	psect	text106,global,reloc=2,class=CODE,delta=1
   119                           	psect	text107,global,reloc=2,class=CODE,delta=1
   120                           	psect	text108,global,reloc=2,class=CODE,delta=1
   121                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text110,global,reloc=2,class=CODE,delta=1,inline
   123                           	psect	text111,global,reloc=2,class=CODE,delta=1,inline
   124                           	psect	text112,global,reloc=2,class=CODE,delta=1
   125                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   126                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   127                           	psect	text114,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   129                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   130  0000                     
   131                           ; Version 1.45
   132                           ; Generated 16/11/2017 GMT
   133                           ; 
   134                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   135                           ; All rights reserved.
   136                           ; 
   137                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   138                           ; 
   139                           ; Redistribution and use in source and binary forms, with or without modification, are
   140                           ; permitted provided that the following conditions are met:
   141                           ; 
   142                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   143                           ;        conditions and the following disclaimer.
   144                           ; 
   145                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   146                           ;        of conditions and the following disclaimer in the documentation and/or other
   147                           ;        materials provided with the distribution.
   148                           ; 
   149                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   150                           ;        software without specific prior written permission.
   151                           ; 
   152                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   153                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   154                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   155                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   156                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   157                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   158                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   159                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   160                           ; 
   161                           ; 
   162                           ; Code-generator required, PIC18F47K40 Definitions
   163                           ; 
   164                           ; SFR Addresses
   165  0000                     
   166                           	psect	idataBANK0
   167  000F4C                     __pidataBANK0:
   168                           	opt stack 0
   169                           
   170                           ;initializer for _fsmStateTable
   171  000F4C  5E                 	db	low _do_I2C_IDLE
   172  000F4D  12                 	db	high _do_I2C_IDLE
   173  000F4E  00                 	db	low (_do_I2C_IDLE shr (0+16))
   174  000F4F  CC                 	db	low _do_I2C_SEND_ADR_READ
   175  000F50  11                 	db	high _do_I2C_SEND_ADR_READ
   176  000F51  00                 	db	low (_do_I2C_SEND_ADR_READ shr (0+16))
   177  000F52  B6                 	db	low _do_I2C_SEND_ADR_WRITE
   178  000F53  11                 	db	high _do_I2C_SEND_ADR_WRITE
   179  000F54  00                 	db	low (_do_I2C_SEND_ADR_WRITE shr (0+16))
   180  000F55  10                 	db	low _do_I2C_TX
   181  000F56  08                 	db	high _do_I2C_TX
   182  000F57  00                 	db	low (_do_I2C_TX shr (0+16))
   183  000F58  36                 	db	low _do_I2C_RX
   184  000F59  09                 	db	high _do_I2C_RX
   185  000F5A  00                 	db	low (_do_I2C_RX shr (0+16))
   186  000F5B  4C                 	db	low _do_I2C_RCEN
   187  000F5C  12                 	db	high _do_I2C_RCEN
   188  000F5D  00                 	db	low (_do_I2C_RCEN shr (0+16))
   189  000F5E  14                 	db	low _do_I2C_TX_EMPTY
   190  000F5F  0B                 	db	high _do_I2C_TX_EMPTY
   191  000F60  00                 	db	low (_do_I2C_TX_EMPTY shr (0+16))
   192  000F61  22                 	db	low _do_I2C_SEND_RESTART_READ
   193  000F62  13                 	db	high _do_I2C_SEND_RESTART_READ
   194  000F63  00                 	db	low (_do_I2C_SEND_RESTART_READ shr (0+16))
   195  000F64  14                 	db	low _do_I2C_SEND_RESTART_WRITE
   196  000F65  13                 	db	high _do_I2C_SEND_RESTART_WRITE
   197  000F66  00                 	db	low (_do_I2C_SEND_RESTART_WRITE shr (0+16))
   198  000F67  06                 	db	low _do_I2C_SEND_RESTART
   199  000F68  13                 	db	high _do_I2C_SEND_RESTART
   200  000F69  00                 	db	low (_do_I2C_SEND_RESTART shr (0+16))
   201  000F6A  F8                 	db	low _do_I2C_SEND_STOP
   202  000F6B  12                 	db	high _do_I2C_SEND_STOP
   203  000F6C  00                 	db	low (_do_I2C_SEND_STOP shr (0+16))
   204  000F6D  EA                 	db	low _do_I2C_DO_ACK
   205  000F6E  12                 	db	high _do_I2C_DO_ACK
   206  000F6F  00                 	db	low (_do_I2C_DO_ACK shr (0+16))
   207  000F70  DC                 	db	low _do_I2C_DO_NACK_STOP
   208  000F71  12                 	db	high _do_I2C_DO_NACK_STOP
   209  000F72  00                 	db	low (_do_I2C_DO_NACK_STOP shr (0+16))
   210  000F73  CE                 	db	low _do_I2C_DO_NACK_RESTART
   211  000F74  12                 	db	high _do_I2C_DO_NACK_RESTART
   212  000F75  00                 	db	low (_do_I2C_DO_NACK_RESTART shr (0+16))
   213  000F76  E2                 	db	low _do_I2C_RESET
   214  000F77  11                 	db	high _do_I2C_RESET
   215  000F78  00                 	db	low (_do_I2C_RESET shr (0+16))
   216  000F79  18                 	db	low _do_I2C_DO_ADDRESS_NACK
   217  000F7A  0C                 	db	high _do_I2C_DO_ADDRESS_NACK
   218  000F7B  00                 	db	low (_do_I2C_DO_ADDRESS_NACK shr (0+16))
   219  0000                     _TX2REG	set	3738
   220  0000                     _RC2REG	set	3737
   221  0000                     _RC2STAbits	set	3741
   222  0000                     _TX2STAbits	set	3742
   223  0000                     _SP2BRGH	set	3740
   224  0000                     _SP2BRGL	set	3739
   225  0000                     _TX2STA	set	3742
   226  0000                     _RC2STA	set	3741
   227  0000                     _BAUD2CON	set	3743
   228  0000                     _SSP1DATPPSbits	set	3768
   229  0000                     _RX2PPSbits	set	3725
   230  0000                     _SSP1CLKPPSbits	set	3767
   231  0000                     _RC6PPS	set	3837
   232  0000                     _RX1PPSbits	set	3765
   233  0000                     _RD0PPS	set	3839
   234  0000                     _RC4PPS	set	3835
   235  0000                     _RC3PPS	set	3834
   236  0000                     _PIR3bits	set	3789
   237  0000                     _PIE3bits	set	3781
   238  0000                     _PMD5	set	3814
   239  0000                     _PMD4	set	3813
   240  0000                     _PMD3	set	3812
   241  0000                     _PMD2	set	3811
   242  0000                     _PMD1	set	3810
   243  0000                     _PMD0	set	3809
   244  0000                     _OSCTUNE	set	3805
   245  0000                     _OSCFRQ	set	3806
   246  0000                     _OSCEN	set	3804
   247  0000                     _OSCCON3	set	3802
   248  0000                     _OSCCON1	set	3800
   249  0000                     _RD7PPS	set	3846
   250  0000                     _ODCOND	set	3876
   251  0000                     _ODCONC	set	3871
   252  0000                     _ODCONB	set	3863
   253  0000                     _ODCONA	set	3855
   254  0000                     _ODCONE	set	3884
   255  0000                     _WPUC	set	3872
   256  0000                     _WPUA	set	3856
   257  0000                     _WPUB	set	3864
   258  0000                     _WPUE	set	3885
   259  0000                     _WPUD	set	3877
   260  0000                     _ANSELA	set	3857
   261  0000                     _ANSELE	set	3886
   262  0000                     _ANSELD	set	3878
   263  0000                     _ANSELB	set	3865
   264  0000                     _ANSELC	set	3873
   265  0000                     _TX1REG	set	3994
   266  0000                     _RC1REG	set	3993
   267  0000                     _RC1STAbits	set	3997
   268  0000                     _TX1STAbits	set	3998
   269  0000                     _SP1BRGH	set	3996
   270  0000                     _SP1BRGL	set	3995
   271  0000                     _TX1STA	set	3998
   272  0000                     _RC1STA	set	3997
   273  0000                     _BAUD1CON	set	3999
   274  0000                     _LATAbits	set	3971
   275  0000                     _INTCONbits	set	4082
   276  0000                     _TRISD	set	3979
   277  0000                     _TRISC	set	3978
   278  0000                     _TRISB	set	3977
   279  0000                     _TRISA	set	3976
   280  0000                     _TRISE	set	3980
   281  0000                     _LATC	set	3973
   282  0000                     _LATB	set	3972
   283  0000                     _LATA	set	3971
   284  0000                     _LATD	set	3974
   285  0000                     _LATE	set	3975
   286  0000                     _SSP1STATbits	set	3989
   287  0000                     _SSP1MSK	set	3988
   288  0000                     _SSP1BUF	set	3986
   289  0000                     _SSP1CON2bits	set	3991
   290  0000                     _SSP1ADD	set	3987
   291  0000                     _SSP1CON2	set	3991
   292  0000                     _SSP1CON1	set	3990
   293  0000                     _SSP1STAT	set	3989
   294  0000                     _SSP1CON1bits	set	3990
   295                           
   296                           ; #config settings
   297  0000                     
   298                           	psect	cinit
   299  000DCE                     __pcinit:
   300                           	opt stack 0
   301  000DCE                     start_initialization:
   302                           	opt stack 0
   303  000DCE                     __initialization:
   304                           	opt stack 0
   305                           
   306                           ; Initialize objects allocated to BANK0 (48 bytes)
   307                           ; load TBLPTR registers with __pidataBANK0
   308  000DCE  0E4C               	movlw	low __pidataBANK0
   309  000DD0  6EF6               	movwf	tblptrl,c
   310  000DD2  0E0F               	movlw	high __pidataBANK0
   311  000DD4  6EF7               	movwf	tblptrh,c
   312  000DD6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   313  000DD8  6EF8               	movwf	tblptru,c
   314  000DDA  EE00  F0C7         	lfsr	0,__pdataBANK0
   315  000DDE  EE10 F030          	lfsr	1,48
   316  000DE2                     copy_data0:
   317  000DE2  0009               	tblrd		*+
   318  000DE4  CFF5 FFEE          	movff	tablat,postinc0
   319  000DE8  50E5               	movf	postdec1,w,c
   320  000DEA  50E1               	movf	fsr1l,w,c
   321  000DEC  E1FA               	bnz	copy_data0
   322                           
   323                           ; Clear objects allocated to BANK0 (52 bytes)
   324  000DEE  EE00  F060         	lfsr	0,__pbssBANK0
   325  000DF2  0E34               	movlw	52
   326  000DF4                     clear_0:
   327  000DF4  6AEE               	clrf	postinc0,c
   328  000DF6  06E8               	decf	wreg,f,c
   329  000DF8  E1FD               	bnz	clear_0
   330                           
   331                           ; Clear objects allocated to COMRAM (6 bytes)
   332  000DFA  6A46               	clrf	(__pbssCOMRAM+5)& (0+255),c
   333  000DFC  6A45               	clrf	(__pbssCOMRAM+4)& (0+255),c
   334  000DFE  6A44               	clrf	(__pbssCOMRAM+3)& (0+255),c
   335  000E00  6A43               	clrf	(__pbssCOMRAM+2)& (0+255),c
   336  000E02  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
   337  000E04  6A41               	clrf	__pbssCOMRAM& (0+255),c
   338  000E06                     end_of_initialization:
   339                           	opt stack 0
   340  000E06                     __end_of__initialization:
   341                           	opt stack 0
   342  000E06  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   343  000E08  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   344  000E0A  0100               	movlb	0
   345  000E0C  EF70  F000         	goto	_main	;jump to C main() function
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	bssCOMRAM
   356  000041                     __pbssCOMRAM:
   357                           	opt stack 0
   358  000041                     _i2c1_driver_i2cISR:
   359                           	opt stack 0
   360  000041                     	ds	3
   361  000044                     _i2c1_driver_busCollisionISR:
   362                           	opt stack 0
   363  000044                     	ds	3
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           postdec1	equ	0xFE5
   371                           fsr1l	equ	0xFE1
   372                           
   373                           	psect	bssBANK0
   374  000060                     __pbssBANK0:
   375                           	opt stack 0
   376  000060                     _i2c_status:
   377                           	opt stack 0
   378  000060                     	ds	42
   379  00008A                     main@F12066:
   380                           	opt stack 0
   381  00008A                     	ds	8
   382  000092                     main@F12062:
   383                           	opt stack 0
   384  000092                     	ds	2
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1l	equ	0xFE1
   393                           
   394                           	psect	dataBANK0
   395  0000C7                     __pdataBANK0:
   396                           	opt stack 0
   397  0000C7                     _fsmStateTable:
   398                           	opt stack 0
   399  0000C7                     	ds	48
   400                           tblptru	equ	0xFF8
   401                           tblptrh	equ	0xFF7
   402                           tblptrl	equ	0xFF6
   403                           tablat	equ	0xFF5
   404                           postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           postdec1	equ	0xFE5
   407                           fsr1l	equ	0xFE1
   408                           
   409                           	psect	cstackBANK0
   410  000094                     __pcstackBANK0:
   411                           	opt stack 0
   412  000094                     updateExpanders@spaces:
   413                           	opt stack 0
   414                           
   415                           ; 4 bytes @ 0x0
   416  000094                     	ds	4
   417  000098                     updateExpanders@lL:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x4
   421  000098                     	ds	1
   422  000099                     updateExpanders@lR:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x5
   426  000099                     	ds	1
   427  00009A                     updateExpanders@mL:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x6
   431  00009A                     	ds	1
   432  00009B                     updateExpanders@mR:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x7
   436  00009B                     	ds	1
   437  00009C                     updateExpanders@rL:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x8
   441  00009C                     	ds	1
   442  00009D                     updateExpanders@rR:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x9
   446  00009D                     	ds	1
   447  00009E                     getSpaces@spaceLast:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0xA
   451  00009E                     	ds	1
   452  00009F                     getSpaces@i:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0xB
   456  00009F                     	ds	2
   457  0000A1                     getSpaces@space:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0xD
   461  0000A1                     	ds	1
   462  0000A2                     ??_main:
   463                           
   464                           ; 1 bytes @ 0xE
   465  0000A2                     	ds	15
   466  0000B1                     main@receivedScore:
   467                           	opt stack 0
   468                           
   469                           ; 7 bytes @ 0x1D
   470  0000B1                     	ds	7
   471  0000B8                     main@gamerScore:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x24
   475  0000B8                     	ds	2
   476  0000BA                     main@photonAddress:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x26
   480  0000BA                     	ds	1
   481  0000BB                     main@i:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x27
   485  0000BB                     	ds	2
   486  0000BD                     main@spot:
   487                           	opt stack 0
   488                           
   489                           ; 8 bytes @ 0x29
   490  0000BD                     	ds	8
   491  0000C5                     main@player:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x31
   495  0000C5                     	ds	2
   496                           tblptru	equ	0xFF8
   497                           tblptrh	equ	0xFF7
   498                           tblptrl	equ	0xFF6
   499                           tablat	equ	0xFF5
   500                           postinc0	equ	0xFEE
   501                           wreg	equ	0xFE8
   502                           postdec1	equ	0xFE5
   503                           fsr1l	equ	0xFE1
   504                           
   505                           	psect	cstackCOMRAM
   506  000001                     __pcstackCOMRAM:
   507                           	opt stack 0
   508  000001                     ??i2_i2c1_driver_isNACK:
   509  000001                     i2i2c1_driver_TXData@d:
   510                           	opt stack 0
   511  000001                     i2i2c_setBuffer@buffer:
   512                           	opt stack 0
   513  000001                     i2setCallBack@cb:
   514                           	opt stack 0
   515                           
   516                           ; 3 bytes @ 0x0
   517  000001                     	ds	1
   518  000002                     i2_do_I2C_TX$1050:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x1
   522  000002                     	ds	1
   523  000003                     i2i2c_setBuffer@bufferSize:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x2
   527  000003                     	ds	1
   528  000004                     ??_INTERRUPT_InterruptManager:
   529  000004                     i2setCallBack@p:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x3
   533  000004                     	ds	1
   534  000005                     
   535                           ; 1 bytes @ 0x4
   536  000005                     	ds	1
   537  000006                     i2setCallBack@idx:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x5
   541  000006                     	ds	1
   542  000007                     i2i2c_setDataCompleteCallback@cb:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0x6
   546  000007                     	ds	3
   547  00000A                     i2i2c_setDataCompleteCallback@p:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x9
   551  00000A                     	ds	2
   552  00000C                     i2returnStop@p:
   553                           	opt stack 0
   554  00000C                     i2wr1RegCompleteHandler@p:
   555                           	opt stack 0
   556  00000C                     i2rd1RegCompleteHandler@p:
   557                           	opt stack 0
   558  00000C                     i2rd2RegCompleteHandler@p:
   559                           	opt stack 0
   560  00000C                     i2wr2RegCompleteHandler@p:
   561                           	opt stack 0
   562  00000C                     i2rdBlkRegCompleteHandler@p:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0xB
   566  00000C                     	ds	2
   567  00000E                     
   568                           ; 1 bytes @ 0xD
   569  00000E                     	ds	8
   570  000016                     ??_mssp1_IRQisEnabled:
   571  000016                     ??_i2c1_driver_isNACK:
   572  000016                     ?_abs:
   573                           	opt stack 0
   574  000016                     ?___aldiv:
   575                           	opt stack 0
   576  000016                     i2c1_driver_TXData@d:
   577                           	opt stack 0
   578  000016                     i2c_close@ret:
   579                           	opt stack 0
   580  000016                     EUSART2_Write@txData:
   581                           	opt stack 0
   582  000016                     EUSART1_Write@txData:
   583                           	opt stack 0
   584  000016                     mssp1_waitForEvent@timeout:
   585                           	opt stack 0
   586  000016                     i2c_setBuffer@buffer:
   587                           	opt stack 0
   588  000016                     abs@a:
   589                           	opt stack 0
   590  000016                     i2c1_driver_setBusCollisionISR@f:
   591                           	opt stack 0
   592  000016                     i2c1_driver_setI2cISR@f:
   593                           	opt stack 0
   594  000016                     setCallBack@cb:
   595                           	opt stack 0
   596  000016                     ___aldiv@dividend:
   597                           	opt stack 0
   598                           
   599                           ; 4 bytes @ 0x15
   600  000016                     	ds	1
   601  000017                     _do_I2C_TX$1050:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x16
   605  000017                     	ds	1
   606  000018                     ??_abs:
   607  000018                     i2c_setBuffer@bufferSize:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x17
   611  000018                     	ds	1
   612  000019                     i2c_open@address:
   613                           	opt stack 0
   614  000019                     i2c_masterOperation@read:
   615                           	opt stack 0
   616  000019                     setCallBack@p:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x18
   620  000019                     	ds	1
   621  00001A                     i2c_open@ret:
   622                           	opt stack 0
   623  00001A                     i2c_masterOperation@ret:
   624                           	opt stack 0
   625  00001A                     ___aldiv@divisor:
   626                           	opt stack 0
   627                           
   628                           ; 4 bytes @ 0x19
   629  00001A                     	ds	1
   630  00001B                     setCallBack@idx:
   631                           	opt stack 0
   632  00001B                     i2c_readNBytes@data:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x1A
   636  00001B                     	ds	1
   637  00001C                     i2c_setDataCompleteCallback@cb:
   638                           	opt stack 0
   639  00001C                     i2c_setAddressNACKCallback@cb:
   640                           	opt stack 0
   641                           
   642                           ; 3 bytes @ 0x1B
   643  00001C                     	ds	1
   644  00001D                     i2c_readNBytes@len:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x1C
   648  00001D                     	ds	1
   649  00001E                     ___aldiv@counter:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x1D
   653  00001E                     	ds	1
   654  00001F                     i2c_readNBytes@address:
   655                           	opt stack 0
   656  00001F                     ___aldiv@sign:
   657                           	opt stack 0
   658  00001F                     i2c_setDataCompleteCallback@p:
   659                           	opt stack 0
   660  00001F                     i2c_setAddressNACKCallback@p:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x1E
   664  00001F                     	ds	1
   665  000020                     ___aldiv@quotient:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x1F
   669  000020                     	ds	1
   670  000021                     returnStop@p:
   671                           	opt stack 0
   672  000021                     wr1RegCompleteHandler@p:
   673                           	opt stack 0
   674  000021                     i2c_writeNBytes@data:
   675                           	opt stack 0
   676  000021                     rd1RegCompleteHandler@p:
   677                           	opt stack 0
   678  000021                     rd2RegCompleteHandler@p:
   679                           	opt stack 0
   680  000021                     wr2RegCompleteHandler@p:
   681                           	opt stack 0
   682  000021                     rdBlkRegCompleteHandler@p:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x20
   686  000021                     	ds	2
   687  000023                     i2c_writeNBytes@len:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x22
   691  000023                     	ds	2
   692  000025                     i2c_writeNBytes@address:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x24
   696  000025                     	ds	1
   697  000026                     readIoExpander@bank:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x25
   701  000026                     	ds	1
   702  000027                     readIoExpander@index:
   703                           	opt stack 0
   704                           
   705                           ; 1 bytes @ 0x26
   706  000027                     	ds	1
   707  000028                     ??_readIoExpander:
   708                           
   709                           ; 1 bytes @ 0x27
   710  000028                     	ds	2
   711  00002A                     readIoExpander@spots:
   712                           	opt stack 0
   713                           
   714                           ; 8 bytes @ 0x29
   715  00002A                     	ds	8
   716  000032                     readIoExpander@data:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x31
   720  000032                     	ds	2
   721  000034                     readIoExpander@spaces:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x33
   725  000034                     	ds	1
   726  000035                     readIoExpander@addr:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x34
   730  000035                     	ds	1
   731  000036                     readIoExpander@rec:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x35
   735  000036                     	ds	1
   736  000037                     readIoExpander@i:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x36
   740  000037                     	ds	2
   741  000039                     ?_updateExpanders:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x38
   745  000039                     	ds	4
   746  00003D                     ??_updateExpanders:
   747                           
   748                           ; 1 bytes @ 0x3C
   749  00003D                     	ds	2
   750  00003F                     ??_getSpaces:
   751                           
   752                           ; 1 bytes @ 0x3E
   753  00003F                     	ds	2
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           postdec1	equ	0xFE5
   761                           fsr1l	equ	0xFE1
   762                           
   763 ;;
   764 ;;Main: autosize = 0, tempsize = 15, incstack = 0, save=0
   765 ;;
   766 ;; *************** function _main *****************
   767 ;; Defined at:
   768 ;;		line 141 in file "main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  i               2   39[BANK0 ] int 
   773 ;;  spot            8   41[BANK0 ] long [2]
   774 ;;  receivedScor    7   29[BANK0 ] unsigned char [7]
   775 ;;  player          2   49[BANK0 ] int 
   776 ;;  gamerScore      2   36[BANK0 ] unsigned char [2]
   777 ;;  plainScore      2    0        int 
   778 ;;  photonAddres    1   38[BANK0 ] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;Total ram usage:       37 bytes
   793 ;; Hardware stack levels required when called:   18
   794 ;; This function calls:
   795 ;;		_EUSART1_Initialize
   796 ;;		_EUSART1_Write
   797 ;;		_EUSART2_Initialize
   798 ;;		_EUSART2_Read
   799 ;;		_EUSART2_Write
   800 ;;		_EUSART2_is_rx_ready
   801 ;;		_SYSTEM_Initialize
   802 ;;		___aldiv
   803 ;;		_abs
   804 ;;		_getSpaces
   805 ;; This function is called by:
   806 ;;		Startup code after reset
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text0
   811  0000E0                     __ptext0:
   812                           	opt stack 0
   813  0000E0                     _main:
   814                           	opt stack 13
   815                           
   816                           ;main.c: 144: SYSTEM_Initialize();
   817                           
   818                           ;incstack = 0
   819  0000E0  EC93  F008         	call	_SYSTEM_Initialize	;wreg free
   820                           
   821                           ;main.c: 151: (INTCONbits.GIE = 1);
   822  0000E4  8EF2               	bsf	intcon,7,c	;volatile
   823                           
   824                           ;main.c: 157: (INTCONbits.PEIE = 1);
   825  0000E6  8CF2               	bsf	intcon,6,c	;volatile
   826                           
   827                           ;main.c: 173: uint8_t gamerScore[] = {0,0};
   828  0000E8  C092  F0B8         	movff	main@F12062,main@gamerScore
   829  0000EC  C093  F0B9         	movff	main@F12062+1,main@gamerScore+1
   830                           
   831                           ;main.c: 174: uint8_t photonAddress = 2;
   832  0000F0  0E02               	movlw	2
   833  0000F2  0100               	movlb	0	; () banked
   834  0000F4  6FBA               	movwf	main@photonAddress& (0+255),b
   835                           
   836                           ; BSR set to: 0
   837                           ;main.c: 198: EUSART1_Initialize();
   838  0000F6  EC07  F009         	call	_EUSART1_Initialize	;wreg free
   839                           
   840                           ;main.c: 199: EUSART2_Initialize();
   841  0000FA  ECB9  F008         	call	_EUSART2_Initialize	;wreg free
   842                           
   843                           ;main.c: 203: int player = 0;
   844  0000FE  0E00               	movlw	0
   845  000100  0100               	movlb	0	; () banked
   846  000102  6FC6               	movwf	(main@player+1)& (0+255),b
   847  000104  0E00               	movlw	0
   848  000106  6FC5               	movwf	main@player& (0+255),b
   849                           
   850                           ; BSR set to: 0
   851                           ;main.c: 204: long spot[2] = {0,0};
   852  000108  EE20  F08A         	lfsr	2,main@F12066
   853  00010C  EE10  F0BD         	lfsr	1,main@spot
   854  000110  0E07               	movlw	7
   855  000112                     u2641:
   856  000112  CFDB FFE3          	movff	plusw2,plusw1
   857  000116  06E8               	decf	wreg,f,c
   858  000118  E2FC               	bc	u2641
   859  00011A                     
   860                           ; BSR set to: 0
   861                           ;main.c: 209: {
   862                           ;main.c: 227: spot[player] = getSpaces()-31- spot[abs(player-1)];
   863                           
   864                           ; BSR set to: 0
   865  00011A  0EFF               	movlw	255
   866  00011C  25C5               	addwf	main@player& (0+255),w,b
   867  00011E  6E16               	movwf	abs@a,c
   868  000120  0EFF               	movlw	255
   869  000122  21C6               	addwfc	(main@player+1)& (0+255),w,b
   870  000124  6E17               	movwf	abs@a+1,c
   871  000126  EC1E  F008         	call	_abs	;wreg free
   872  00012A  90D8               	bcf	status,0,c
   873  00012C  3616               	rlcf	?_abs,f,c
   874  00012E  3617               	rlcf	?_abs+1,f,c
   875  000130  90D8               	bcf	status,0,c
   876  000132  3616               	rlcf	?_abs,f,c
   877  000134  3617               	rlcf	?_abs+1,f,c
   878  000136  0EBD               	movlw	low main@spot
   879  000138  2416               	addwf	?_abs,w,c
   880  00013A  6ED9               	movwf	fsr2l,c
   881  00013C  0E00               	movlw	high main@spot
   882  00013E  2017               	addwfc	?_abs+1,w,c
   883  000140  6EDA               	movwf	fsr2h,c
   884  000142  CFDE F0A2          	movff	postinc2,??_main
   885  000146  CFDE F0A3          	movff	postinc2,??_main+1
   886  00014A  CFDE F0A4          	movff	postinc2,??_main+2
   887  00014E  CFDE F0A5          	movff	postinc2,??_main+3
   888  000152  0100               	movlb	0	; () banked
   889  000154  1FA2               	comf	??_main& (0+255),f,b
   890  000156  1FA3               	comf	(??_main+1)& (0+255),f,b
   891  000158  1FA4               	comf	(??_main+2)& (0+255),f,b
   892  00015A  1FA5               	comf	(??_main+3)& (0+255),f,b
   893  00015C  2BA2               	incf	??_main& (0+255),f,b
   894  00015E  0E00               	movlw	0
   895  000160  23A3               	addwfc	(??_main+1)& (0+255),f,b
   896  000162  23A4               	addwfc	(??_main+2)& (0+255),f,b
   897  000164  23A5               	addwfc	(??_main+3)& (0+255),f,b
   898  000166  ECBC  F003         	call	_getSpaces	;wreg free
   899  00016A  0100               	movlb	0	; () banked
   900  00016C  6FA6               	movwf	(??_main+4)& (0+255),b
   901  00016E  0EE1               	movlw	225
   902  000170  25A6               	addwf	(??_main+4)& (0+255),w,b
   903  000172  6FA7               	movwf	(??_main+5)& (0+255),b
   904  000174  6BA8               	clrf	(??_main+6)& (0+255),b
   905  000176  0EFF               	movlw	255
   906  000178  23A8               	addwfc	(??_main+6)& (0+255),f,b
   907  00017A  6BA9               	clrf	(??_main+7)& (0+255),b
   908  00017C  BFA8               	btfsc	(??_main+6)& (0+255),7,b
   909  00017E  07A9               	decf	(??_main+7)& (0+255),f,b
   910  000180  51A9               	movf	(??_main+7)& (0+255),w,b
   911  000182  6FAA               	movwf	(??_main+8)& (0+255),b
   912  000184  51A2               	movf	??_main& (0+255),w,b
   913  000186  25A7               	addwf	(??_main+5)& (0+255),w,b
   914  000188  6FAB               	movwf	(??_main+9)& (0+255),b
   915  00018A  51A3               	movf	(??_main+1)& (0+255),w,b
   916  00018C  21A8               	addwfc	(??_main+6)& (0+255),w,b
   917  00018E  6FAC               	movwf	(??_main+10)& (0+255),b
   918  000190  51A4               	movf	(??_main+2)& (0+255),w,b
   919  000192  21A9               	addwfc	(??_main+7)& (0+255),w,b
   920  000194  6FAD               	movwf	(??_main+11)& (0+255),b
   921  000196  51A5               	movf	(??_main+3)& (0+255),w,b
   922  000198  21AA               	addwfc	(??_main+8)& (0+255),w,b
   923  00019A  6FAE               	movwf	(??_main+12)& (0+255),b
   924  00019C  0EBD               	movlw	low main@spot
   925  00019E  6FAF               	movwf	(??_main+13)& (0+255),b
   926  0001A0  0E00               	movlw	high main@spot
   927  0001A2  6FB0               	movwf	(??_main+14)& (0+255),b
   928  0001A4  90D8               	bcf	status,0,c
   929  0001A6  35C5               	rlcf	main@player& (0+255),w,b
   930  0001A8  6ED9               	movwf	fsr2l,c
   931  0001AA  35C6               	rlcf	(main@player+1)& (0+255),w,b
   932  0001AC  6EDA               	movwf	fsr2h,c
   933  0001AE  90D8               	bcf	status,0,c
   934  0001B0  36D9               	rlcf	fsr2l,f,c
   935  0001B2  36DA               	rlcf	fsr2h,f,c
   936  0001B4  51AF               	movf	(??_main+13)& (0+255),w,b
   937  0001B6  26D9               	addwf	fsr2l,f,c
   938  0001B8  51B0               	movf	(??_main+14)& (0+255),w,b
   939  0001BA  22DA               	addwfc	fsr2h,f,c
   940  0001BC  C0AB  FFDE         	movff	??_main+9,postinc2
   941  0001C0  C0AC  FFDE         	movff	??_main+10,postinc2
   942  0001C4  C0AD  FFDE         	movff	??_main+11,postinc2
   943  0001C8  C0AE  FFDE         	movff	??_main+12,postinc2
   944                           
   945                           ; BSR set to: 0
   946                           ;main.c: 228: if(spot[player] > 47)
   947  0001CC  0EBD               	movlw	low main@spot
   948  0001CE  6FA2               	movwf	??_main& (0+255),b
   949  0001D0  0E00               	movlw	high main@spot
   950  0001D2  6FA3               	movwf	(??_main+1)& (0+255),b
   951  0001D4  90D8               	bcf	status,0,c
   952  0001D6  35C5               	rlcf	main@player& (0+255),w,b
   953  0001D8  6ED9               	movwf	fsr2l,c
   954  0001DA  35C6               	rlcf	(main@player+1)& (0+255),w,b
   955  0001DC  6EDA               	movwf	fsr2h,c
   956  0001DE  90D8               	bcf	status,0,c
   957  0001E0  36D9               	rlcf	fsr2l,f,c
   958  0001E2  36DA               	rlcf	fsr2h,f,c
   959  0001E4  51A2               	movf	??_main& (0+255),w,b
   960  0001E6  26D9               	addwf	fsr2l,f,c
   961  0001E8  51A3               	movf	(??_main+1)& (0+255),w,b
   962  0001EA  22DA               	addwfc	fsr2h,f,c
   963  0001EC  0E03               	movlw	3
   964  0001EE  BEDB               	btfsc	plusw2,7,c
   965  0001F0  D048               	goto	l735
   966  0001F2  0E03               	movlw	3
   967  0001F4  50DB               	movf	plusw2,w,c
   968  0001F6  E10A               	bnz	u2650
   969  0001F8  0E02               	movlw	2
   970  0001FA  50DB               	movf	plusw2,w,c
   971  0001FC  E107               	bnz	u2650
   972  0001FE  0E01               	movlw	1
   973  000200  50DB               	movf	plusw2,w,c
   974  000202  E104               	bnz	u2650
   975  000204  0E30               	movlw	48
   976  000206  5CDE               	subwf	postinc2,w,c
   977  000208  A0D8               	btfss	status,0,c
   978  00020A  D03B               	goto	l735
   979  00020C                     u2650:
   980                           
   981                           ; BSR set to: 0
   982                           ;main.c: 229: spot[player] = spot[player]/2;
   983  00020C  0EBD               	movlw	low main@spot
   984  00020E  6FA2               	movwf	??_main& (0+255),b
   985  000210  0E00               	movlw	high main@spot
   986  000212  6FA3               	movwf	(??_main+1)& (0+255),b
   987  000214  90D8               	bcf	status,0,c
   988  000216  35C5               	rlcf	main@player& (0+255),w,b
   989  000218  6ED9               	movwf	fsr2l,c
   990  00021A  35C6               	rlcf	(main@player+1)& (0+255),w,b
   991  00021C  6EDA               	movwf	fsr2h,c
   992  00021E  90D8               	bcf	status,0,c
   993  000220  36D9               	rlcf	fsr2l,f,c
   994  000222  36DA               	rlcf	fsr2h,f,c
   995  000224  51A2               	movf	??_main& (0+255),w,b
   996  000226  26D9               	addwf	fsr2l,f,c
   997  000228  51A3               	movf	(??_main+1)& (0+255),w,b
   998  00022A  22DA               	addwfc	fsr2h,f,c
   999  00022C  CFDE F016          	movff	postinc2,___aldiv@dividend
  1000  000230  CFDE F017          	movff	postinc2,___aldiv@dividend+1
  1001  000234  CFDE F018          	movff	postinc2,___aldiv@dividend+2
  1002  000238  CFDE F019          	movff	postinc2,___aldiv@dividend+3
  1003  00023C  0E02               	movlw	2
  1004  00023E  6E1A               	movwf	___aldiv@divisor,c
  1005  000240  0E00               	movlw	0
  1006  000242  6E1B               	movwf	___aldiv@divisor+1,c
  1007  000244  0E00               	movlw	0
  1008  000246  6E1C               	movwf	___aldiv@divisor+2,c
  1009  000248  0E00               	movlw	0
  1010  00024A  6E1D               	movwf	___aldiv@divisor+3,c
  1011  00024C  ECAC  F002         	call	___aldiv	;wreg free
  1012  000250  0EBD               	movlw	low main@spot
  1013  000252  0100               	movlb	0	; () banked
  1014  000254  6FA4               	movwf	(??_main+2)& (0+255),b
  1015  000256  0E00               	movlw	high main@spot
  1016  000258  6FA5               	movwf	(??_main+3)& (0+255),b
  1017  00025A  90D8               	bcf	status,0,c
  1018  00025C  35C5               	rlcf	main@player& (0+255),w,b
  1019  00025E  6ED9               	movwf	fsr2l,c
  1020  000260  35C6               	rlcf	(main@player+1)& (0+255),w,b
  1021  000262  6EDA               	movwf	fsr2h,c
  1022  000264  90D8               	bcf	status,0,c
  1023  000266  36D9               	rlcf	fsr2l,f,c
  1024  000268  36DA               	rlcf	fsr2h,f,c
  1025  00026A  51A4               	movf	(??_main+2)& (0+255),w,b
  1026  00026C  26D9               	addwf	fsr2l,f,c
  1027  00026E  51A5               	movf	(??_main+3)& (0+255),w,b
  1028  000270  22DA               	addwfc	fsr2h,f,c
  1029  000272  C016  FFDE         	movff	?___aldiv,postinc2
  1030  000276  C017  FFDE         	movff	?___aldiv+1,postinc2
  1031  00027A  C018  FFDE         	movff	?___aldiv+2,postinc2
  1032  00027E  C019  FFDE         	movff	?___aldiv+3,postinc2
  1033  000282                     l735:
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;main.c: 233: if(player == 0)
  1037                           
  1038                           ; BSR set to: 0
  1039  000282  51C5               	movf	main@player& (0+255),w,b
  1040  000284  11C6               	iorwf	(main@player+1)& (0+255),w,b
  1041  000286  A4D8               	btfss	status,2,c
  1042  000288  D014               	goto	l736
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;main.c: 234: EUSART1_Write(spot[player]);
  1046  00028A  0EBD               	movlw	low main@spot
  1047  00028C  6FA2               	movwf	??_main& (0+255),b
  1048  00028E  0E00               	movlw	high main@spot
  1049  000290  6FA3               	movwf	(??_main+1)& (0+255),b
  1050  000292  90D8               	bcf	status,0,c
  1051  000294  35C5               	rlcf	main@player& (0+255),w,b
  1052  000296  6ED9               	movwf	fsr2l,c
  1053  000298  35C6               	rlcf	(main@player+1)& (0+255),w,b
  1054  00029A  6EDA               	movwf	fsr2h,c
  1055  00029C  90D8               	bcf	status,0,c
  1056  00029E  36D9               	rlcf	fsr2l,f,c
  1057  0002A0  36DA               	rlcf	fsr2h,f,c
  1058  0002A2  51A2               	movf	??_main& (0+255),w,b
  1059  0002A4  26D9               	addwf	fsr2l,f,c
  1060  0002A6  51A3               	movf	(??_main+1)& (0+255),w,b
  1061  0002A8  22DA               	addwfc	fsr2h,f,c
  1062  0002AA  50DF               	movf	indf2,w,c
  1063  0002AC  ECA6  F009         	call	_EUSART1_Write
  1064  0002B0  D014               	goto	l737
  1065  0002B2                     l736:
  1066                           
  1067                           ;main.c: 235: else
  1068                           ;main.c: 236: EUSART2_Write(spot[player]);
  1069  0002B2  0EBD               	movlw	low main@spot
  1070  0002B4  0100               	movlb	0	; () banked
  1071  0002B6  6FA2               	movwf	??_main& (0+255),b
  1072  0002B8  0E00               	movlw	high main@spot
  1073  0002BA  6FA3               	movwf	(??_main+1)& (0+255),b
  1074  0002BC  90D8               	bcf	status,0,c
  1075  0002BE  35C5               	rlcf	main@player& (0+255),w,b
  1076  0002C0  6ED9               	movwf	fsr2l,c
  1077  0002C2  35C6               	rlcf	(main@player+1)& (0+255),w,b
  1078  0002C4  6EDA               	movwf	fsr2h,c
  1079  0002C6  90D8               	bcf	status,0,c
  1080  0002C8  36D9               	rlcf	fsr2l,f,c
  1081  0002CA  36DA               	rlcf	fsr2h,f,c
  1082  0002CC  51A2               	movf	??_main& (0+255),w,b
  1083  0002CE  26D9               	addwf	fsr2l,f,c
  1084  0002D0  51A3               	movf	(??_main+1)& (0+255),w,b
  1085  0002D2  22DA               	addwfc	fsr2h,f,c
  1086  0002D4  50DF               	movf	indf2,w,c
  1087  0002D6  EC9F  F009         	call	_EUSART2_Write
  1088  0002DA                     l737:
  1089                           
  1090                           ;main.c: 238: if(spot[player] == 40){
  1091  0002DA  0EBD               	movlw	low main@spot
  1092  0002DC  0100               	movlb	0	; () banked
  1093  0002DE  6FA2               	movwf	??_main& (0+255),b
  1094  0002E0  0E00               	movlw	high main@spot
  1095  0002E2  6FA3               	movwf	(??_main+1)& (0+255),b
  1096  0002E4  90D8               	bcf	status,0,c
  1097  0002E6  35C5               	rlcf	main@player& (0+255),w,b
  1098  0002E8  6ED9               	movwf	fsr2l,c
  1099  0002EA  35C6               	rlcf	(main@player+1)& (0+255),w,b
  1100  0002EC  6EDA               	movwf	fsr2h,c
  1101  0002EE  90D8               	bcf	status,0,c
  1102  0002F0  36D9               	rlcf	fsr2l,f,c
  1103  0002F2  36DA               	rlcf	fsr2h,f,c
  1104  0002F4  51A2               	movf	??_main& (0+255),w,b
  1105  0002F6  26D9               	addwf	fsr2l,f,c
  1106  0002F8  51A3               	movf	(??_main+1)& (0+255),w,b
  1107  0002FA  22DA               	addwfc	fsr2h,f,c
  1108  0002FC  0E28               	movlw	40
  1109  0002FE  18DE               	xorwf	postinc2,w,c
  1110  000300  10DE               	iorwf	postinc2,w,c
  1111  000302  10DE               	iorwf	postinc2,w,c
  1112  000304  10DE               	iorwf	postinc2,w,c
  1113  000306  B4D8               	btfsc	status,2,c
  1114  000308  D00A               	goto	l739
  1115  00030A  D016               	goto	l744
  1116  00030C                     
  1117                           ;main.c: 243: _delay((unsigned long)((50)*(2000000/4000.0)));
  1118                           
  1119                           ; BSR set to: 0
  1120  00030C  0E21               	movlw	33
  1121  00030E  0100               	movlb	0	; () banked
  1122  000310  6FA2               	movwf	??_main& (0+255),b
  1123  000312  0E76               	movlw	118
  1124  000314                     u2727:
  1125  000314  2EE8               	decfsz	wreg,f,c
  1126  000316  D7FE               	bra	u2727
  1127  000318  2FA2               	decfsz	??_main& (0+255),f,b
  1128  00031A  D7FC               	bra	u2727
  1129  00031C  F000               	nop	
  1130  00031E                     l739:
  1131  00031E  EC98  F009         	call	_EUSART2_is_rx_ready	;wreg free
  1132  000322  0900               	iorlw	0
  1133  000324  B4D8               	btfsc	status,2,c
  1134  000326  D7F2               	goto	l740
  1135                           
  1136                           ;main.c: 244: }
  1137                           ;main.c: 245: receivedScore[0] = EUSART2_Read();
  1138  000328  EC38  F009         	call	_EUSART2_Read	;wreg free
  1139  00032C  0100               	movlb	0	; () banked
  1140  00032E  6FB1               	movwf	main@receivedScore& (0+255),b
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;main.c: 246: if(receivedScore[0] == 9)
  1144  000330  0E09               	movlw	9
  1145  000332  19B1               	xorwf	main@receivedScore& (0+255),w,b
  1146  000334  B4D8               	btfsc	status,2,c
  1147                           
  1148                           ; BSR set to: 0
  1149                           
  1150                           ;main.c: 247: do { LATAbits.LATA2 = 0; } while(0);
  1151  000336  9483               	bcf	3971,2,c	;volatile
  1152  000338                     l744:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;main.c: 249: }
  1156                           ;main.c: 251: player = abs(player-1);
  1157                           
  1158                           ; BSR set to: 0
  1159                           
  1160                           ; BSR set to: 0
  1161                           
  1162                           ; BSR set to: 0
  1163  000338  0EFF               	movlw	255
  1164  00033A  25C5               	addwf	main@player& (0+255),w,b
  1165  00033C  6E16               	movwf	abs@a,c
  1166  00033E  0EFF               	movlw	255
  1167  000340  21C6               	addwfc	(main@player+1)& (0+255),w,b
  1168  000342  6E17               	movwf	abs@a+1,c
  1169  000344  EC1E  F008         	call	_abs	;wreg free
  1170  000348  C016  F0C5         	movff	?_abs,main@player
  1171  00034C  C017  F0C6         	movff	?_abs+1,main@player+1
  1172                           
  1173                           ;main.c: 263: for(int i=0; i<20; i++)
  1174  000350  0E00               	movlw	0
  1175  000352  0100               	movlb	0	; () banked
  1176  000354  6FBC               	movwf	(main@i+1)& (0+255),b
  1177  000356  0E00               	movlw	0
  1178  000358  6FBB               	movwf	main@i& (0+255),b
  1179                           
  1180                           ; BSR set to: 0
  1181  00035A  BFBC               	btfsc	(main@i+1)& (0+255),7,b
  1182  00035C  D008               	goto	l745
  1183  00035E  51BC               	movf	(main@i+1)& (0+255),w,b
  1184  000360  E105               	bnz	u2700
  1185  000362  0E14               	movlw	20
  1186  000364  5DBB               	subwf	main@i& (0+255),w,b
  1187  000366  B0D8               	btfsc	status,0,c
  1188  000368  D6D8               	goto	l734
  1189  00036A  D001               	goto	l745
  1190  00036C                     u2700:
  1191                           
  1192                           ; BSR set to: 0
  1193  00036C  D6D6               	goto	l734
  1194  00036E                     l745:
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;main.c: 264: _delay((unsigned long)((50)*(2000000/4000.0)));
  1198                           
  1199                           ; BSR set to: 0
  1200  00036E  0E21               	movlw	33
  1201  000370  0100               	movlb	0	; () banked
  1202  000372  6FA2               	movwf	??_main& (0+255),b
  1203  000374  0E76               	movlw	118
  1204  000376                     u2737:
  1205  000376  2EE8               	decfsz	wreg,f,c
  1206  000378  D7FE               	bra	u2737
  1207  00037A  2FA2               	decfsz	??_main& (0+255),f,b
  1208  00037C  D7FC               	bra	u2737
  1209  00037E  F000               	nop	
  1210  000380  0100               	movlb	0	; () banked
  1211  000382  4BBB               	infsnz	main@i& (0+255),f,b
  1212  000384  2BBC               	incf	(main@i+1)& (0+255),f,b
  1213  000386  BFBC               	btfsc	(main@i+1)& (0+255),7,b
  1214  000388  D7F2               	goto	l745
  1215  00038A  51BC               	movf	(main@i+1)& (0+255),w,b
  1216  00038C  E101               	bnz	u2710
  1217  00038E  D7E9               	goto	L1
  1218  000390                     u2710:
  1219                           
  1220                           ; BSR set to: 0
  1221                           
  1222                           ; BSR set to: 0
  1223  000390  D6C4               	goto	l734
  1224  000392                     __end_of_main:
  1225                           	opt stack 0
  1226                           tblptru	equ	0xFF8
  1227                           tblptrh	equ	0xFF7
  1228                           tblptrl	equ	0xFF6
  1229                           tablat	equ	0xFF5
  1230                           intcon	equ	0xFF2
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           postdec1	equ	0xFE5
  1234                           plusw1	equ	0xFE3
  1235                           fsr1l	equ	0xFE1
  1236                           indf2	equ	0xFDF
  1237                           postinc2	equ	0xFDE
  1238                           plusw2	equ	0xFDB
  1239                           fsr2h	equ	0xFDA
  1240                           fsr2l	equ	0xFD9
  1241                           status	equ	0xFD8
  1242                           
  1243 ;; *************** function _getSpaces *****************
  1244 ;; Defined at:
  1245 ;;		line 79 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  i               2   11[BANK0 ] int 
  1250 ;;  space           1   13[BANK0 ] unsigned char 
  1251 ;;  spaceLast       1   10[BANK0 ] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      unsigned char 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1262 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1264 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1265 ;;Total ram usage:        6 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:   17
  1268 ;; This function calls:
  1269 ;;		_updateExpanders
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text1
  1276  000778                     __ptext1:
  1277                           	opt stack 0
  1278  000778                     _getSpaces:
  1279                           	opt stack 13
  1280                           
  1281                           ;main.c: 80: uint8_t space = 0;
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;incstack = 0
  1285  000778  0E00               	movlw	0
  1286  00077A  0100               	movlb	0	; () banked
  1287  00077C  6FA1               	movwf	getSpaces@space& (0+255),b
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;main.c: 81: uint8_t spaceLast = updateExpanders();
  1291  00077E  EC40  F002         	call	_updateExpanders	;wreg free
  1292  000782  5039               	movf	?_updateExpanders,w,c
  1293  000784  0100               	movlb	0	; () banked
  1294  000786  6F9E               	movwf	getSpaces@spaceLast& (0+255),b
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;main.c: 82: space = updateExpanders();
  1298  000788  EC40  F002         	call	_updateExpanders	;wreg free
  1299  00078C  5039               	movf	?_updateExpanders,w,c
  1300  00078E  0100               	movlb	0	; () banked
  1301  000790  6FA1               	movwf	getSpaces@space& (0+255),b
  1302                           
  1303                           ;main.c: 83: while(space == spaceLast){
  1304  000792  D010               	goto	l699
  1305  000794                     
  1306                           ; BSR set to: 0
  1307                           ;main.c: 84: space = updateExpanders();
  1308                           
  1309                           ; BSR set to: 0
  1310  000794  EC40  F002         	call	_updateExpanders	;wreg free
  1311  000798  5039               	movf	?_updateExpanders,w,c
  1312  00079A  0100               	movlb	0	; () banked
  1313  00079C  6FA1               	movwf	getSpaces@space& (0+255),b
  1314                           
  1315                           ; BSR set to: 0
  1316                           ;main.c: 85: _delay((unsigned long)((500)*(2000000/4000.0)));
  1317  00079E  0E02               	movlw	2
  1318  0007A0  6E40               	movwf	(??_getSpaces+1)& (0+255),c
  1319  0007A2  0E45               	movlw	69
  1320  0007A4  6E3F               	movwf	??_getSpaces& (0+255),c
  1321  0007A6  0EAA               	movlw	170
  1322  0007A8                     u2747:
  1323  0007A8  2EE8               	decfsz	wreg,f,c
  1324  0007AA  D7FE               	bra	u2747
  1325  0007AC  2E3F               	decfsz	??_getSpaces& (0+255),f,c
  1326  0007AE  D7FC               	bra	u2747
  1327  0007B0  2E40               	decfsz	(??_getSpaces+1)& (0+255),f,c
  1328  0007B2  D7FA               	bra	u2747
  1329  0007B4                     l699:
  1330  0007B4  0100               	movlb	0	; () banked
  1331  0007B6  519E               	movf	getSpaces@spaceLast& (0+255),w,b
  1332  0007B8  19A1               	xorwf	getSpaces@space& (0+255),w,b
  1333  0007BA  B4D8               	btfsc	status,2,c
  1334  0007BC  D7EB               	goto	l700
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;main.c: 86: }
  1338                           ;main.c: 87: for(int i=0;i<40;i++){
  1339                           
  1340                           ; BSR set to: 0
  1341  0007BE  0E00               	movlw	0
  1342  0007C0  6FA0               	movwf	(getSpaces@i+1)& (0+255),b
  1343  0007C2  0E00               	movlw	0
  1344  0007C4  6F9F               	movwf	getSpaces@i& (0+255),b
  1345  0007C6                     l4374:
  1346                           
  1347                           ; BSR set to: 0
  1348  0007C6  BFA0               	btfsc	(getSpaces@i+1)& (0+255),7,b
  1349  0007C8  D006               	goto	l702
  1350  0007CA  51A0               	movf	(getSpaces@i+1)& (0+255),w,b
  1351  0007CC  E11F               	bnz	l4392
  1352  0007CE  0E28               	movlw	40
  1353  0007D0  5D9F               	subwf	getSpaces@i& (0+255),w,b
  1354  0007D2  B0D8               	btfsc	status,0,c
  1355  0007D4  D01B               	goto	u2400
  1356  0007D6                     l702:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;main.c: 88: space = updateExpanders();
  1360                           
  1361                           ; BSR set to: 0
  1362  0007D6  EC40  F002         	call	_updateExpanders	;wreg free
  1363  0007DA  5039               	movf	?_updateExpanders,w,c
  1364  0007DC  0100               	movlb	0	; () banked
  1365  0007DE  6FA1               	movwf	getSpaces@space& (0+255),b
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;main.c: 89: if(space != spaceLast)
  1369  0007E0  519E               	movf	getSpaces@spaceLast& (0+255),w,b
  1370  0007E2  19A1               	xorwf	getSpaces@space& (0+255),w,b
  1371  0007E4  B4D8               	btfsc	status,2,c
  1372  0007E6  D004               	goto	l704
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;main.c: 90: i=0;
  1376  0007E8  0E00               	movlw	0
  1377  0007EA  6FA0               	movwf	(getSpaces@i+1)& (0+255),b
  1378  0007EC  0E00               	movlw	0
  1379  0007EE  6F9F               	movwf	getSpaces@i& (0+255),b
  1380  0007F0                     l704:
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;main.c: 91: spaceLast = space;
  1384                           
  1385                           ; BSR set to: 0
  1386  0007F0  C0A1  F09E         	movff	getSpaces@space,getSpaces@spaceLast
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;main.c: 92: _delay((unsigned long)((50)*(2000000/4000.0)));
  1390  0007F4  0E21               	movlw	33
  1391  0007F6  6E3F               	movwf	??_getSpaces& (0+255),c
  1392  0007F8  0E76               	movlw	118
  1393  0007FA                     u2757:
  1394  0007FA  2EE8               	decfsz	wreg,f,c
  1395  0007FC  D7FE               	bra	u2757
  1396  0007FE  2E3F               	decfsz	??_getSpaces& (0+255),f,c
  1397  000800  D7FC               	bra	u2757
  1398  000802  D000               	nop2	
  1399  000804  0100               	movlb	0	; () banked
  1400  000806  4B9F               	infsnz	getSpaces@i& (0+255),f,b
  1401  000808  2BA0               	incf	(getSpaces@i+1)& (0+255),f,b
  1402  00080A  D7DD               	goto	l4374
  1403  00080C                     u2400:
  1404  00080C                     l4392:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;main.c: 93: }
  1408                           ;main.c: 94: return space;
  1409  00080C  51A1               	movf	getSpaces@space& (0+255),w,b
  1410  00080E  0012               	return	
  1411  000810                     __end_of_getSpaces:
  1412                           	opt stack 0
  1413                           tblptru	equ	0xFF8
  1414                           tblptrh	equ	0xFF7
  1415                           tblptrl	equ	0xFF6
  1416                           tablat	equ	0xFF5
  1417                           intcon	equ	0xFF2
  1418                           postinc0	equ	0xFEE
  1419                           wreg	equ	0xFE8
  1420                           postdec1	equ	0xFE5
  1421                           plusw1	equ	0xFE3
  1422                           fsr1l	equ	0xFE1
  1423                           indf2	equ	0xFDF
  1424                           postinc2	equ	0xFDE
  1425                           plusw2	equ	0xFDB
  1426                           fsr2h	equ	0xFDA
  1427                           fsr2l	equ	0xFD9
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _updateExpanders *****************
  1431 ;; Defined at:
  1432 ;;		line 66 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  spaces          4    0[BANK0 ] long 
  1437 ;;  rR              1    9[BANK0 ] unsigned char 
  1438 ;;  rL              1    8[BANK0 ] unsigned char 
  1439 ;;  mR              1    7[BANK0 ] unsigned char 
  1440 ;;  mL              1    6[BANK0 ] unsigned char 
  1441 ;;  lR              1    5[BANK0 ] unsigned char 
  1442 ;;  lL              1    4[BANK0 ] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  4   56[COMRAM] long 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1452 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1453 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1456 ;;Total ram usage:       16 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:   16
  1459 ;; This function calls:
  1460 ;;		_readIoExpander
  1461 ;; This function is called by:
  1462 ;;		_getSpaces
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text2
  1467  000480                     __ptext2:
  1468                           	opt stack 0
  1469  000480                     _updateExpanders:
  1470                           	opt stack 13
  1471                           
  1472                           ;main.c: 67: uint8_t lL=0, lR=0, mL=0, mR=0, rL=0, rR=0;
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;incstack = 0
  1476  000480  0E00               	movlw	0
  1477  000482  0100               	movlb	0	; () banked
  1478  000484  6F98               	movwf	updateExpanders@lL& (0+255),b
  1479  000486  0E00               	movlw	0
  1480  000488  6F99               	movwf	updateExpanders@lR& (0+255),b
  1481  00048A  0E00               	movlw	0
  1482  00048C  6F9A               	movwf	updateExpanders@mL& (0+255),b
  1483  00048E  0E00               	movlw	0
  1484  000490  6F9B               	movwf	updateExpanders@mR& (0+255),b
  1485  000492  0E00               	movlw	0
  1486  000494  6F9C               	movwf	updateExpanders@rL& (0+255),b
  1487  000496  0E00               	movlw	0
  1488  000498  6F9D               	movwf	updateExpanders@rR& (0+255),b
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;main.c: 68: lL = readIoExpander(0x20, 'l',40);
  1492  00049A  0E6C               	movlw	108
  1493  00049C  6E26               	movwf	readIoExpander@bank,c
  1494  00049E  0E28               	movlw	40
  1495  0004A0  6E27               	movwf	readIoExpander@index,c
  1496  0004A2  0E20               	movlw	32
  1497  0004A4  ECC9  F001         	call	_readIoExpander
  1498  0004A8  0100               	movlb	0	; () banked
  1499  0004AA  6F98               	movwf	updateExpanders@lL& (0+255),b
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;main.c: 69: lR = readIoExpander(0x20, 'r',32);
  1503  0004AC  0E72               	movlw	114
  1504  0004AE  6E26               	movwf	readIoExpander@bank,c
  1505  0004B0  0E20               	movlw	32
  1506  0004B2  6E27               	movwf	readIoExpander@index,c
  1507  0004B4  0E20               	movlw	32
  1508  0004B6  ECC9  F001         	call	_readIoExpander
  1509  0004BA  0100               	movlb	0	; () banked
  1510  0004BC  6F99               	movwf	updateExpanders@lR& (0+255),b
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;main.c: 70: mL = readIoExpander(0x21, 'l',24);
  1514  0004BE  0E6C               	movlw	108
  1515  0004C0  6E26               	movwf	readIoExpander@bank,c
  1516  0004C2  0E18               	movlw	24
  1517  0004C4  6E27               	movwf	readIoExpander@index,c
  1518  0004C6  0E21               	movlw	33
  1519  0004C8  ECC9  F001         	call	_readIoExpander
  1520  0004CC  0100               	movlb	0	; () banked
  1521  0004CE  6F9A               	movwf	updateExpanders@mL& (0+255),b
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;main.c: 71: mR = readIoExpander(0x21, 'r',16);
  1525  0004D0  0E72               	movlw	114
  1526  0004D2  6E26               	movwf	readIoExpander@bank,c
  1527  0004D4  0E10               	movlw	16
  1528  0004D6  6E27               	movwf	readIoExpander@index,c
  1529  0004D8  0E21               	movlw	33
  1530  0004DA  ECC9  F001         	call	_readIoExpander
  1531  0004DE  0100               	movlb	0	; () banked
  1532  0004E0  6F9B               	movwf	updateExpanders@mR& (0+255),b
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;main.c: 72: rL = readIoExpander(0x22, 'l',0);
  1536  0004E2  0E6C               	movlw	108
  1537  0004E4  6E26               	movwf	readIoExpander@bank,c
  1538  0004E6  0E00               	movlw	0
  1539  0004E8  6E27               	movwf	readIoExpander@index,c
  1540  0004EA  0E22               	movlw	34
  1541  0004EC  ECC9  F001         	call	_readIoExpander
  1542  0004F0  0100               	movlb	0	; () banked
  1543  0004F2  6F9C               	movwf	updateExpanders@rL& (0+255),b
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;main.c: 73: rR = readIoExpander(0x22, 'r',8);
  1547  0004F4  0E72               	movlw	114
  1548  0004F6  6E26               	movwf	readIoExpander@bank,c
  1549  0004F8  0E08               	movlw	8
  1550  0004FA  6E27               	movwf	readIoExpander@index,c
  1551  0004FC  0E22               	movlw	34
  1552  0004FE  ECC9  F001         	call	_readIoExpander
  1553  000502  0100               	movlb	0	; () banked
  1554  000504  6F9D               	movwf	updateExpanders@rR& (0+255),b
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;main.c: 75: long spaces = lL+lR+mL+mR+rL+rR;
  1558  000506  5199               	movf	updateExpanders@lR& (0+255),w,b
  1559  000508  C098  F03D         	movff	updateExpanders@lL,??_updateExpanders
  1560  00050C  6A3E               	clrf	(??_updateExpanders+1)& (0+255),c
  1561  00050E  263D               	addwf	??_updateExpanders,f,c
  1562  000510  0E00               	movlw	0
  1563  000512  223E               	addwfc	??_updateExpanders+1,f,c
  1564  000514  519A               	movf	updateExpanders@mL& (0+255),w,b
  1565  000516  263D               	addwf	??_updateExpanders,f,c
  1566  000518  0E00               	movlw	0
  1567  00051A  223E               	addwfc	??_updateExpanders+1,f,c
  1568  00051C  519B               	movf	updateExpanders@mR& (0+255),w,b
  1569  00051E  263D               	addwf	??_updateExpanders,f,c
  1570  000520  0E00               	movlw	0
  1571  000522  223E               	addwfc	??_updateExpanders+1,f,c
  1572  000524  519C               	movf	updateExpanders@rL& (0+255),w,b
  1573  000526  263D               	addwf	??_updateExpanders,f,c
  1574  000528  0E00               	movlw	0
  1575  00052A  223E               	addwfc	??_updateExpanders+1,f,c
  1576  00052C  519D               	movf	updateExpanders@rR& (0+255),w,b
  1577  00052E  263D               	addwf	??_updateExpanders,f,c
  1578  000530  0E00               	movlw	0
  1579  000532  223E               	addwfc	??_updateExpanders+1,f,c
  1580  000534  C03D  F094         	movff	??_updateExpanders,updateExpanders@spaces
  1581  000538  C03E  F095         	movff	??_updateExpanders+1,updateExpanders@spaces+1
  1582  00053C  0E00               	movlw	0
  1583  00053E  BF95               	btfsc	(updateExpanders@spaces+1)& (0+255),7,b
  1584  000540  0EFF               	movlw	-1
  1585  000542  6F96               	movwf	(updateExpanders@spaces+2)& (0+255),b
  1586  000544  6F97               	movwf	(updateExpanders@spaces+3)& (0+255),b
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;main.c: 76: return spaces;
  1590  000546  C094  F039         	movff	updateExpanders@spaces,?_updateExpanders
  1591  00054A  C095  F03A         	movff	updateExpanders@spaces+1,?_updateExpanders+1
  1592  00054E  C096  F03B         	movff	updateExpanders@spaces+2,?_updateExpanders+2
  1593  000552  C097  F03C         	movff	updateExpanders@spaces+3,?_updateExpanders+3
  1594  000556  0012               	return	
  1595  000558                     __end_of_updateExpanders:
  1596                           	opt stack 0
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           intcon	equ	0xFF2
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           postdec1	equ	0xFE5
  1605                           plusw1	equ	0xFE3
  1606                           fsr1l	equ	0xFE1
  1607                           indf2	equ	0xFDF
  1608                           postinc2	equ	0xFDE
  1609                           plusw2	equ	0xFDB
  1610                           fsr2h	equ	0xFDA
  1611                           fsr2l	equ	0xFD9
  1612                           status	equ	0xFD8
  1613                           
  1614 ;; *************** function _readIoExpander *****************
  1615 ;; Defined at:
  1616 ;;		line 46 in file "main.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  addr            1    wreg     unsigned char 
  1619 ;;  bank            1   37[COMRAM] unsigned char 
  1620 ;;  index           1   38[COMRAM] unsigned char 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  addr            1   52[COMRAM] unsigned char 
  1623 ;;  i               2   54[COMRAM] int 
  1624 ;;  spots           8   41[COMRAM] unsigned char [8]
  1625 ;;  data            2   49[COMRAM] unsigned char [2]
  1626 ;;  rec             1   53[COMRAM] unsigned char 
  1627 ;;  spaces          1   51[COMRAM] unsigned char 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      unsigned char 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1638 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1640 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1641 ;;Total ram usage:       19 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:   15
  1644 ;; This function calls:
  1645 ;;		_i2c_readNBytes
  1646 ;;		_i2c_writeNBytes
  1647 ;; This function is called by:
  1648 ;;		_updateExpanders
  1649 ;;		_checkEnd
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text3
  1654  000392                     __ptext3:
  1655                           	opt stack 0
  1656  000392                     _readIoExpander:
  1657                           	opt stack 13
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;incstack = 0
  1661                           ;readIoExpander@addr stored from wreg
  1662  000392  6E35               	movwf	readIoExpander@addr,c
  1663                           
  1664                           ;main.c: 47: uint8_t data[2];
  1665                           ;main.c: 48: if(bank == 'A' || bank == 'a' || bank == 'r' || bank == 'R')
  1666  000394  0E41               	movlw	65
  1667  000396  1826               	xorwf	readIoExpander@bank,w,c
  1668  000398  B4D8               	btfsc	status,2,c
  1669  00039A  D00C               	goto	u2250
  1670  00039C  0E61               	movlw	97
  1671  00039E  1826               	xorwf	readIoExpander@bank,w,c
  1672  0003A0  B4D8               	btfsc	status,2,c
  1673  0003A2  D008               	goto	u2250
  1674  0003A4  0E72               	movlw	114
  1675  0003A6  1826               	xorwf	readIoExpander@bank,w,c
  1676  0003A8  B4D8               	btfsc	status,2,c
  1677  0003AA  D004               	goto	u2250
  1678  0003AC  0E52               	movlw	82
  1679  0003AE  1826               	xorwf	readIoExpander@bank,w,c
  1680  0003B0  A4D8               	btfss	status,2,c
  1681  0003B2  D002               	goto	l687
  1682  0003B4                     u2250:
  1683                           
  1684                           ;main.c: 49: data[0]=0x12;
  1685  0003B4  0E12               	movlw	18
  1686  0003B6  D001               	goto	L2
  1687  0003B8                     l687:
  1688                           
  1689                           ;main.c: 50: else
  1690                           ;main.c: 51: data[0]=0x13;
  1691  0003B8  0E13               	movlw	19
  1692  0003BA                     L2:
  1693  0003BA  6E32               	movwf	readIoExpander@data,c
  1694                           
  1695                           ;main.c: 52: i2c_writeNBytes(addr, &data[0], 1);
  1696  0003BC  0E32               	movlw	low readIoExpander@data
  1697  0003BE  6E21               	movwf	i2c_writeNBytes@data,c
  1698  0003C0  0E00               	movlw	high readIoExpander@data
  1699  0003C2  6E22               	movwf	i2c_writeNBytes@data+1,c
  1700  0003C4  0E00               	movlw	0
  1701  0003C6  6E24               	movwf	i2c_writeNBytes@len+1,c
  1702  0003C8  0E01               	movlw	1
  1703  0003CA  6E23               	movwf	i2c_writeNBytes@len,c
  1704  0003CC  5035               	movf	readIoExpander@addr,w,c
  1705  0003CE  EC33  F006         	call	_i2c_writeNBytes
  1706                           
  1707                           ;main.c: 53: uint8_t rec;
  1708                           ;main.c: 54: i2c_readNBytes(addr, &rec, 1);
  1709  0003D2  0E36               	movlw	low readIoExpander@rec
  1710  0003D4  6E1B               	movwf	i2c_readNBytes@data,c
  1711  0003D6  0E00               	movlw	high readIoExpander@rec
  1712  0003D8  6E1C               	movwf	i2c_readNBytes@data+1,c
  1713  0003DA  0E00               	movlw	0
  1714  0003DC  6E1E               	movwf	i2c_readNBytes@len+1,c
  1715  0003DE  0E01               	movlw	1
  1716  0003E0  6E1D               	movwf	i2c_readNBytes@len,c
  1717  0003E2  5035               	movf	readIoExpander@addr,w,c
  1718  0003E4  EC74  F007         	call	_i2c_readNBytes
  1719                           
  1720                           ;main.c: 55: rec = ~rec;
  1721  0003E8  1E36               	comf	readIoExpander@rec,f,c
  1722                           
  1723                           ;main.c: 56: uint8_t spots[8];
  1724                           ;main.c: 57: uint8_t spaces=0;
  1725  0003EA  0E00               	movlw	0
  1726  0003EC  6E34               	movwf	readIoExpander@spaces,c
  1727                           
  1728                           ;main.c: 58: for(int i=0;i<8;i++){
  1729  0003EE  0E00               	movlw	0
  1730  0003F0  6E38               	movwf	readIoExpander@i+1,c
  1731  0003F2  0E00               	movlw	0
  1732  0003F4  6E37               	movwf	readIoExpander@i,c
  1733  0003F6                     l4230:
  1734  0003F6  BE38               	btfsc	readIoExpander@i+1,7,c
  1735  0003F8  D006               	goto	l691
  1736  0003FA  5038               	movf	readIoExpander@i+1,w,c
  1737  0003FC  E13F               	bnz	l4244
  1738  0003FE  0E08               	movlw	8
  1739  000400  5C37               	subwf	readIoExpander@i,w,c
  1740  000402  B0D8               	btfsc	status,0,c
  1741  000404  D03B               	goto	u2290
  1742  000406                     l691:
  1743                           
  1744                           ;main.c: 59: spots[i] = rec & 1<<i;
  1745  000406  0E2A               	movlw	low readIoExpander@spots
  1746  000408  2437               	addwf	readIoExpander@i,w,c
  1747  00040A  6ED9               	movwf	fsr2l,c
  1748  00040C  0E00               	movlw	high readIoExpander@spots
  1749  00040E  2038               	addwfc	readIoExpander@i+1,w,c
  1750  000410  6EDA               	movwf	fsr2h,c
  1751  000412  C037  F028         	movff	readIoExpander@i,??_readIoExpander
  1752  000416  0E01               	movlw	1
  1753  000418  6E29               	movwf	(??_readIoExpander+1)& (0+255),c
  1754  00041A  2A28               	incf	??_readIoExpander,f,c
  1755  00041C  D002               	goto	u2274
  1756  00041E                     u2275:
  1757  00041E  90D8               	bcf	status,0,c
  1758  000420  3629               	rlcf	??_readIoExpander+1,f,c
  1759  000422                     u2274:
  1760  000422  2E28               	decfsz	??_readIoExpander,f,c
  1761  000424  D7FC               	goto	u2275
  1762  000426  5029               	movf	??_readIoExpander+1,w,c
  1763  000428  1436               	andwf	readIoExpander@rec,w,c
  1764  00042A  6EDF               	movwf	indf2,c
  1765                           
  1766                           ;main.c: 60: spots[i] = spots[i] >> i;
  1767  00042C  0E2A               	movlw	low readIoExpander@spots
  1768  00042E  2437               	addwf	readIoExpander@i,w,c
  1769  000430  6ED9               	movwf	fsr2l,c
  1770  000432  0E00               	movlw	high readIoExpander@spots
  1771  000434  2038               	addwfc	readIoExpander@i+1,w,c
  1772  000436  6EDA               	movwf	fsr2h,c
  1773  000438  C037  F028         	movff	readIoExpander@i,??_readIoExpander
  1774  00043C  0E2A               	movlw	low readIoExpander@spots
  1775  00043E  2437               	addwf	readIoExpander@i,w,c
  1776  000440  6EE1               	movwf	fsr1l,c
  1777  000442  0E00               	movlw	high readIoExpander@spots
  1778  000444  2038               	addwfc	readIoExpander@i+1,w,c
  1779  000446  6EE2               	movwf	fsr1h,c
  1780  000448  50E7               	movf	indf1,w,c
  1781  00044A  6E29               	movwf	(??_readIoExpander+1)& (0+255),c
  1782  00044C  2A28               	incf	??_readIoExpander,f,c
  1783  00044E  D002               	goto	u2284
  1784  000450                     u2285:
  1785  000450  90D8               	bcf	status,0,c
  1786  000452  3229               	rrcf	??_readIoExpander+1,f,c
  1787  000454                     u2284:
  1788  000454  2E28               	decfsz	??_readIoExpander,f,c
  1789  000456  D7FC               	goto	u2285
  1790  000458  5029               	movf	??_readIoExpander+1,w,c
  1791  00045A  6EDF               	movwf	indf2,c
  1792                           
  1793                           ;main.c: 61: spaces+=spots[i]*(i+index);
  1794  00045C  0E2A               	movlw	low readIoExpander@spots
  1795  00045E  2437               	addwf	readIoExpander@i,w,c
  1796  000460  6ED9               	movwf	fsr2l,c
  1797  000462  0E00               	movlw	high readIoExpander@spots
  1798  000464  2038               	addwfc	readIoExpander@i+1,w,c
  1799  000466  6EDA               	movwf	fsr2h,c
  1800  000468  50DF               	movf	indf2,w,c
  1801  00046A  6E28               	movwf	??_readIoExpander& (0+255),c
  1802  00046C  5027               	movf	readIoExpander@index,w,c
  1803  00046E  2437               	addwf	readIoExpander@i,w,c
  1804  000470  0228               	mulwf	??_readIoExpander,c
  1805  000472  50F3               	movf	prodl,w,c
  1806  000474  2634               	addwf	readIoExpander@spaces,f,c
  1807  000476  4A37               	infsnz	readIoExpander@i,f,c
  1808  000478  2A38               	incf	readIoExpander@i+1,f,c
  1809  00047A  D7BD               	goto	l4230
  1810  00047C                     u2290:
  1811  00047C                     l4244:
  1812                           
  1813                           ;main.c: 62: }
  1814                           ;main.c: 63: return spaces;
  1815  00047C  5034               	movf	readIoExpander@spaces,w,c
  1816  00047E  0012               	return	
  1817  000480                     __end_of_readIoExpander:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodl	equ	0xFF3
  1824                           intcon	equ	0xFF2
  1825                           postinc0	equ	0xFEE
  1826                           wreg	equ	0xFE8
  1827                           indf1	equ	0xFE7
  1828                           postdec1	equ	0xFE5
  1829                           plusw1	equ	0xFE3
  1830                           fsr1h	equ	0xFE2
  1831                           fsr1l	equ	0xFE1
  1832                           indf2	equ	0xFDF
  1833                           postinc2	equ	0xFDE
  1834                           plusw2	equ	0xFDB
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function _i2c_writeNBytes *****************
  1840 ;; Defined at:
  1841 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  address         1    wreg     unsigned char 
  1844 ;;  data            2   32[COMRAM] PTR void 
  1845 ;;		 -> readIoExpander@data(2), 
  1846 ;;  len             2   34[COMRAM] unsigned int 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  address         1   36[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;Total ram usage:        5 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:   14
  1865 ;; This function calls:
  1866 ;;		_i2c_close
  1867 ;;		_i2c_masterWrite
  1868 ;;		_i2c_open
  1869 ;;		_i2c_setAddressNACKCallback
  1870 ;;		_i2c_setBuffer
  1871 ;; This function is called by:
  1872 ;;		_readIoExpander
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text4
  1877  000C66                     __ptext4:
  1878                           	opt stack 0
  1879  000C66                     _i2c_writeNBytes:
  1880                           	opt stack 13
  1881                           
  1882                           ;incstack = 0
  1883                           ;i2c_writeNBytes@address stored from wreg
  1884  000C66  6E25               	movwf	i2c_writeNBytes@address,c
  1885  000C68                     
  1886                           ;i2c_simple_master.c: 50: while(!i2c_open(address));
  1887  000C68  5025               	movf	i2c_writeNBytes@address,w,c
  1888  000C6A  EC12  F003         	call	_i2c_open
  1889  000C6E  0900               	iorlw	0
  1890  000C70  B4D8               	btfsc	status,2,c
  1891  000C72  D7FA               	goto	l4186
  1892                           
  1893                           ;i2c_simple_master.c: 51: i2c_setBuffer(data,len);
  1894  000C74  C021  F016         	movff	i2c_writeNBytes@data,i2c_setBuffer@buffer
  1895  000C78  C022  F017         	movff	i2c_writeNBytes@data+1,i2c_setBuffer@buffer+1
  1896  000C7C  C023  F018         	movff	i2c_writeNBytes@len,i2c_setBuffer@bufferSize
  1897  000C80  C024  F019         	movff	i2c_writeNBytes@len+1,i2c_setBuffer@bufferSize+1
  1898  000C84  EC86  F008         	call	_i2c_setBuffer	;wreg free
  1899                           
  1900                           ;i2c_simple_master.c: 52: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
  1901  000C88  0E72               	movlw	low _i2c_restartWrite
  1902  000C8A  6E1C               	movwf	i2c_setAddressNACKCallback@cb,c
  1903  000C8C  0E13               	movlw	high _i2c_restartWrite
  1904  000C8E  6E1D               	movwf	i2c_setAddressNACKCallback@cb+1,c
  1905  000C90  0E00               	movlw	low (_i2c_restartWrite shr (0+16))
  1906  000C92  6E1E               	movwf	i2c_setAddressNACKCallback@cb+2,c
  1907  000C94  0E00               	movlw	0
  1908  000C96  6E1F               	movwf	i2c_setAddressNACKCallback@p,c
  1909  000C98  0E00               	movlw	0
  1910  000C9A  6E20               	movwf	i2c_setAddressNACKCallback@p+1,c
  1911  000C9C  EC41  F008         	call	_i2c_setAddressNACKCallback	;wreg free
  1912                           
  1913                           ;i2c_simple_master.c: 53: i2c_masterWrite();
  1914  000CA0  ECC8  F009         	call	_i2c_masterWrite	;wreg free
  1915  000CA4  EC32  F008         	call	_i2c_close	;wreg free
  1916  000CA8  06E8               	decf	wreg,f,c
  1917  000CAA  A4D8               	btfss	status,2,c
  1918  000CAC  0012               	return	
  1919  000CAE  D7FA               	goto	l545
  1920  000CB0                     __end_of_i2c_writeNBytes:
  1921                           	opt stack 0
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           prodl	equ	0xFF3
  1927                           intcon	equ	0xFF2
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           indf1	equ	0xFE7
  1931                           postdec1	equ	0xFE5
  1932                           plusw1	equ	0xFE3
  1933                           fsr1h	equ	0xFE2
  1934                           fsr1l	equ	0xFE1
  1935                           indf2	equ	0xFDF
  1936                           postinc2	equ	0xFDE
  1937                           plusw2	equ	0xFDB
  1938                           fsr2h	equ	0xFDA
  1939                           fsr2l	equ	0xFD9
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function _i2c_setAddressNACKCallback *****************
  1943 ;; Defined at:
  1944 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  cb              3   27[COMRAM] PTR FTN(PTR void ,)enum 
  1947 ;;		 -> i2c_restartWrite(1), 
  1948 ;;  p               2   30[COMRAM] PTR void 
  1949 ;;		 -> NULL(0), 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1961 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1964 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1965 ;;Total ram usage:        5 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    7
  1968 ;; This function calls:
  1969 ;;		_setCallBack
  1970 ;; This function is called by:
  1971 ;;		_i2c_writeNBytes
  1972 ;;		_i2c_write1ByteRegister
  1973 ;;		_i2c_read1ByteRegister
  1974 ;;		_i2c_read2ByteRegister
  1975 ;;		_i2c_write2ByteRegister
  1976 ;;		_i2c_readDataBlock
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text5
  1981  001082                     __ptext5:
  1982                           	opt stack 0
  1983  001082                     _i2c_setAddressNACKCallback:
  1984                           	opt stack 19
  1985                           
  1986                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
  1987                           
  1988                           ;incstack = 0
  1989  001082  C01C  F016         	movff	i2c_setAddressNACKCallback@cb,setCallBack@cb
  1990  001086  C01D  F017         	movff	i2c_setAddressNACKCallback@cb+1,setCallBack@cb+1
  1991  00108A  C01E  F018         	movff	i2c_setAddressNACKCallback@cb+2,setCallBack@cb+2
  1992  00108E  C01F  F019         	movff	i2c_setAddressNACKCallback@p,setCallBack@p
  1993  001092  C020  F01A         	movff	i2c_setAddressNACKCallback@p+1,setCallBack@p+1
  1994  001096  0E02               	movlw	2
  1995  001098  ECD8  F004         	call	_setCallBack
  1996  00109C  0012               	return		;funcret
  1997  00109E                     __end_of_i2c_setAddressNACKCallback:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           prodl	equ	0xFF3
  2004                           intcon	equ	0xFF2
  2005                           postinc0	equ	0xFEE
  2006                           wreg	equ	0xFE8
  2007                           indf1	equ	0xFE7
  2008                           postdec1	equ	0xFE5
  2009                           plusw1	equ	0xFE3
  2010                           fsr1h	equ	0xFE2
  2011                           fsr1l	equ	0xFE1
  2012                           indf2	equ	0xFDF
  2013                           postinc2	equ	0xFDE
  2014                           plusw2	equ	0xFDB
  2015                           fsr2h	equ	0xFDA
  2016                           fsr2l	equ	0xFD9
  2017                           status	equ	0xFD8
  2018                           
  2019 ;; *************** function _i2c_masterWrite *****************
  2020 ;; Defined at:
  2021 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;		None
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      enum E11785
  2028 ;; Registers used:
  2029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2039 ;;Total ram usage:        0 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:   13
  2042 ;; This function calls:
  2043 ;;		_i2c_masterOperation
  2044 ;; This function is called by:
  2045 ;;		_i2c_writeNBytes
  2046 ;;		_i2c_write1ByteRegister
  2047 ;;		_i2c_read1ByteRegister
  2048 ;;		_i2c_read2ByteRegister
  2049 ;;		_i2c_write2ByteRegister
  2050 ;;		_i2c_readDataBlock
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text6
  2055  001390                     __ptext6:
  2056                           	opt stack 0
  2057  001390                     _i2c_masterWrite:
  2058                           	opt stack 13
  2059                           
  2060                           ;i2c_master.c: 224: return i2c_masterOperation(0);
  2061                           ;	Return value of _i2c_masterWrite is never used
  2062                           
  2063                           ;incstack = 0
  2064  001390  0E00               	movlw	0
  2065  001392  EC8D  F007         	call	_i2c_masterOperation
  2066  001396  0012               	return	
  2067  001398                     __end_of_i2c_masterWrite:
  2068                           	opt stack 0
  2069                           tblptru	equ	0xFF8
  2070                           tblptrh	equ	0xFF7
  2071                           tblptrl	equ	0xFF6
  2072                           tablat	equ	0xFF5
  2073                           prodl	equ	0xFF3
  2074                           intcon	equ	0xFF2
  2075                           postinc0	equ	0xFEE
  2076                           wreg	equ	0xFE8
  2077                           indf1	equ	0xFE7
  2078                           postdec1	equ	0xFE5
  2079                           plusw1	equ	0xFE3
  2080                           fsr1h	equ	0xFE2
  2081                           fsr1l	equ	0xFE1
  2082                           indf2	equ	0xFDF
  2083                           postinc2	equ	0xFDE
  2084                           plusw2	equ	0xFDB
  2085                           fsr2h	equ	0xFDA
  2086                           fsr2l	equ	0xFD9
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _i2c_readNBytes *****************
  2090 ;; Defined at:
  2091 ;;		line 156 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  address         1    wreg     unsigned char 
  2094 ;;  data            2   26[COMRAM] PTR void 
  2095 ;;		 -> readIoExpander@rec(1), 
  2096 ;;  len             2   28[COMRAM] unsigned int 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  address         1   30[COMRAM] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2111 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2112 ;;Total ram usage:        5 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:   14
  2115 ;; This function calls:
  2116 ;;		_i2c_close
  2117 ;;		_i2c_masterRead
  2118 ;;		_i2c_open
  2119 ;;		_i2c_setBuffer
  2120 ;; This function is called by:
  2121 ;;		_readIoExpander
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text7
  2126  000EE8                     __ptext7:
  2127                           	opt stack 0
  2128  000EE8                     _i2c_readNBytes:
  2129                           	opt stack 13
  2130                           
  2131                           ;incstack = 0
  2132                           ;i2c_readNBytes@address stored from wreg
  2133  000EE8  6E1F               	movwf	i2c_readNBytes@address,c
  2134  000EEA                     
  2135                           ;i2c_simple_master.c: 158: while(!i2c_open(address));
  2136  000EEA  501F               	movf	i2c_readNBytes@address,w,c
  2137  000EEC  EC12  F003         	call	_i2c_open
  2138  000EF0  0900               	iorlw	0
  2139  000EF2  B4D8               	btfsc	status,2,c
  2140  000EF4  D7FA               	goto	l4198
  2141                           
  2142                           ;i2c_simple_master.c: 159: i2c_setBuffer(data,len);
  2143  000EF6  C01B  F016         	movff	i2c_readNBytes@data,i2c_setBuffer@buffer
  2144  000EFA  C01C  F017         	movff	i2c_readNBytes@data+1,i2c_setBuffer@buffer+1
  2145  000EFE  C01D  F018         	movff	i2c_readNBytes@len,i2c_setBuffer@bufferSize
  2146  000F02  C01E  F019         	movff	i2c_readNBytes@len+1,i2c_setBuffer@bufferSize+1
  2147  000F06  EC86  F008         	call	_i2c_setBuffer	;wreg free
  2148                           
  2149                           ;i2c_simple_master.c: 160: i2c_masterRead();
  2150  000F0A  ECCC  F009         	call	_i2c_masterRead	;wreg free
  2151  000F0E  EC32  F008         	call	_i2c_close	;wreg free
  2152  000F12  06E8               	decf	wreg,f,c
  2153  000F14  A4D8               	btfss	status,2,c
  2154  000F16  0012               	return	
  2155  000F18  D7FA               	goto	l605
  2156  000F1A                     __end_of_i2c_readNBytes:
  2157                           	opt stack 0
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           prodl	equ	0xFF3
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           indf1	equ	0xFE7
  2167                           postdec1	equ	0xFE5
  2168                           plusw1	equ	0xFE3
  2169                           fsr1h	equ	0xFE2
  2170                           fsr1l	equ	0xFE1
  2171                           indf2	equ	0xFDF
  2172                           postinc2	equ	0xFDE
  2173                           plusw2	equ	0xFDB
  2174                           fsr2h	equ	0xFDA
  2175                           fsr2l	equ	0xFD9
  2176                           status	equ	0xFD8
  2177                           
  2178 ;; *************** function _i2c_open *****************
  2179 ;; Defined at:
  2180 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  address         1    wreg     unsigned char 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  address         1   24[COMRAM] unsigned char 
  2185 ;;  ret             1   25[COMRAM] enum E11785
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      enum E11785
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2199 ;;Total ram usage:        2 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    7
  2202 ;; This function calls:
  2203 ;;		_i2c1_driver_open
  2204 ;;		_i2c1_driver_setBusCollisionISR
  2205 ;;		_i2c1_driver_setI2cISR
  2206 ;;		_mssp1_clearIRQ
  2207 ;; This function is called by:
  2208 ;;		_i2c_writeNBytes
  2209 ;;		_i2c_readNBytes
  2210 ;;		_i2c_write1ByteRegister
  2211 ;;		_i2c_read1ByteRegister
  2212 ;;		_i2c_read2ByteRegister
  2213 ;;		_i2c_write2ByteRegister
  2214 ;;		_i2c_readDataBlock
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text8
  2219  000624                     __ptext8:
  2220                           	opt stack 0
  2221  000624                     _i2c_open:
  2222                           	opt stack 19
  2223                           
  2224                           ;incstack = 0
  2225                           ;i2c_open@address stored from wreg
  2226  000624  6E19               	movwf	i2c_open@address,c
  2227                           
  2228                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
  2229  000626  0E01               	movlw	1
  2230  000628  6E1A               	movwf	i2c_open@ret,c
  2231                           
  2232                           ;i2c_master.c: 120: if(!i2c_status.inUse)
  2233  00062A  0100               	movlb	0	; () banked
  2234  00062C  B360               	btfsc	_i2c_status& (0+255),1,b
  2235  00062E  D050               	goto	l362
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;i2c_master.c: 121: {
  2239                           ;i2c_master.c: 122: i2c_status.address = address;
  2240  000630  C019  F061         	movff	i2c_open@address,_i2c_status+1
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;i2c_master.c: 123: i2c_status.busy = 0;
  2244  000634  9160               	bcf	_i2c_status& (0+255),0,b
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;i2c_master.c: 124: i2c_status.inUse = 1;
  2248  000636  8360               	bsf	_i2c_status& (0+255),1,b
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
  2252  000638  9760               	bcf	_i2c_status& (0+255),3,b
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
  2256  00063A  0E0E               	movlw	14
  2257  00063C  6F6A               	movwf	(_i2c_status+10)& (0+255),b
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
  2261  00063E  0E01               	movlw	1
  2262  000640  6F69               	movwf	(_i2c_status+9)& (0+255),b
  2263  000642  0EF4               	movlw	244
  2264  000644  6F68               	movwf	(_i2c_status+8)& (0+255),b
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
  2268  000646  8560               	bsf	_i2c_status& (0+255),2,b
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
  2272  000648  0E86               	movlw	low _returnStop
  2273  00064A  6F6C               	movwf	(_i2c_status+12)& (0+255),b
  2274  00064C  0E13               	movlw	high _returnStop
  2275  00064E  6F6D               	movwf	(_i2c_status+13)& (0+255),b
  2276  000650  0E00               	movlw	low (_returnStop shr (0+16))
  2277  000652  6F6E               	movwf	(_i2c_status+14)& (0+255),b
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
  2281  000654  0E00               	movlw	0
  2282  000656  6F7E               	movwf	(_i2c_status+30)& (0+255),b
  2283  000658  0E00               	movlw	0
  2284  00065A  6F7F               	movwf	(_i2c_status+31)& (0+255),b
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
  2288  00065C  0E86               	movlw	low _returnStop
  2289  00065E  6F6F               	movwf	(_i2c_status+15)& (0+255),b
  2290  000660  0E13               	movlw	high _returnStop
  2291  000662  6F70               	movwf	(_i2c_status+16)& (0+255),b
  2292  000664  0E00               	movlw	low (_returnStop shr (0+16))
  2293  000666  6F71               	movwf	(_i2c_status+17)& (0+255),b
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
  2297  000668  0E00               	movlw	0
  2298  00066A  6F80               	movwf	(_i2c_status+32)& (0+255),b
  2299  00066C  0E00               	movlw	0
  2300  00066E  6F81               	movwf	(_i2c_status+33)& (0+255),b
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
  2304  000670  0E86               	movlw	low _returnStop
  2305  000672  6F72               	movwf	(_i2c_status+18)& (0+255),b
  2306  000674  0E13               	movlw	high _returnStop
  2307  000676  6F73               	movwf	(_i2c_status+19)& (0+255),b
  2308  000678  0E00               	movlw	low (_returnStop shr (0+16))
  2309  00067A  6F74               	movwf	(_i2c_status+20)& (0+255),b
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
  2313  00067C  0E00               	movlw	0
  2314  00067E  6F82               	movwf	(_i2c_status+34)& (0+255),b
  2315  000680  0E00               	movlw	0
  2316  000682  6F83               	movwf	(_i2c_status+35)& (0+255),b
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
  2320  000684  0E86               	movlw	low _returnStop
  2321  000686  6F75               	movwf	(_i2c_status+21)& (0+255),b
  2322  000688  0E13               	movlw	high _returnStop
  2323  00068A  6F76               	movwf	(_i2c_status+22)& (0+255),b
  2324  00068C  0E00               	movlw	low (_returnStop shr (0+16))
  2325  00068E  6F77               	movwf	(_i2c_status+23)& (0+255),b
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
  2329  000690  0E00               	movlw	0
  2330  000692  6F84               	movwf	(_i2c_status+36)& (0+255),b
  2331  000694  0E00               	movlw	0
  2332  000696  6F85               	movwf	(_i2c_status+37)& (0+255),b
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
  2336  000698  0E7C               	movlw	low _returnReset
  2337  00069A  6F78               	movwf	(_i2c_status+24)& (0+255),b
  2338  00069C  0E13               	movlw	high _returnReset
  2339  00069E  6F79               	movwf	(_i2c_status+25)& (0+255),b
  2340  0006A0  0E00               	movlw	low (_returnReset shr (0+16))
  2341  0006A2  6F7A               	movwf	(_i2c_status+26)& (0+255),b
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
  2345  0006A4  0E00               	movlw	0
  2346  0006A6  6F86               	movwf	(_i2c_status+38)& (0+255),b
  2347  0006A8  0E00               	movlw	0
  2348  0006AA  6F87               	movwf	(_i2c_status+39)& (0+255),b
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;i2c_master.c: 142: i2c1_driver_open();
  2352  0006AC  ECC5  F008         	call	_i2c1_driver_open	;wreg free
  2353                           
  2354                           ;i2c_master.c: 143: mssp1_clearIRQ();
  2355  0006B0  EC00  F00A         	call	_mssp1_clearIRQ	;wreg free
  2356                           
  2357                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
  2358  0006B4  0E1E               	movlw	low _i2c_busCollisionISR
  2359  0006B6  6E16               	movwf	i2c1_driver_setBusCollisionISR@f,c
  2360  0006B8  0E14               	movlw	high _i2c_busCollisionISR
  2361  0006BA  6E17               	movwf	i2c1_driver_setBusCollisionISR@f+1,c
  2362  0006BC  EC60  F009         	call	_i2c1_driver_setBusCollisionISR	;wreg free
  2363                           
  2364                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
  2365  0006C0  0ECA               	movlw	low _i2c_ISR
  2366  0006C2  6E16               	movwf	i2c1_driver_setI2cISR@f,c
  2367  0006C4  0E0B               	movlw	high _i2c_ISR
  2368  0006C6  6E17               	movwf	i2c1_driver_setI2cISR@f+1,c
  2369  0006C8  EC59  F009         	call	_i2c1_driver_setI2cISR	;wreg free
  2370                           
  2371                           ;i2c_master.c: 151: ret = I2C_NOERR;
  2372  0006CC  0E00               	movlw	0
  2373  0006CE  6E1A               	movwf	i2c_open@ret,c
  2374  0006D0                     l362:
  2375                           
  2376                           ;i2c_master.c: 152: }
  2377                           ;i2c_master.c: 153: return ret;
  2378  0006D0  501A               	movf	i2c_open@ret,w,c
  2379  0006D2  0012               	return	
  2380  0006D4                     __end_of_i2c_open:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodl	equ	0xFF3
  2387                           intcon	equ	0xFF2
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           indf1	equ	0xFE7
  2391                           postdec1	equ	0xFE5
  2392                           plusw1	equ	0xFE3
  2393                           fsr1h	equ	0xFE2
  2394                           fsr1l	equ	0xFE1
  2395                           indf2	equ	0xFDF
  2396                           postinc2	equ	0xFDE
  2397                           plusw2	equ	0xFDB
  2398                           fsr2h	equ	0xFDA
  2399                           fsr2l	equ	0xFD9
  2400                           status	equ	0xFD8
  2401                           
  2402 ;; *************** function _i2c1_driver_setI2cISR *****************
  2403 ;; Defined at:
  2404 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  f               3   21[COMRAM] PTR void 
  2407 ;;		 -> i2c_ISR(1), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2419 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2422 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;Total ram usage:        3 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    6
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_i2c_open
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text9
  2434  0012B2                     __ptext9:
  2435                           	opt stack 0
  2436  0012B2                     _i2c1_driver_setI2cISR:
  2437                           	opt stack 19
  2438                           
  2439                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
  2440                           
  2441                           ;incstack = 0
  2442  0012B2  C016  F041         	movff	i2c1_driver_setI2cISR@f,_i2c1_driver_i2cISR
  2443  0012B6  C017  F042         	movff	i2c1_driver_setI2cISR@f+1,_i2c1_driver_i2cISR+1
  2444  0012BA  C018  F043         	movff	i2c1_driver_setI2cISR@f+2,_i2c1_driver_i2cISR+2
  2445  0012BE  0012               	return		;funcret
  2446  0012C0                     __end_of_i2c1_driver_setI2cISR:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           prodl	equ	0xFF3
  2453                           intcon	equ	0xFF2
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           indf1	equ	0xFE7
  2457                           postdec1	equ	0xFE5
  2458                           plusw1	equ	0xFE3
  2459                           fsr1h	equ	0xFE2
  2460                           fsr1l	equ	0xFE1
  2461                           indf2	equ	0xFDF
  2462                           postinc2	equ	0xFDE
  2463                           plusw2	equ	0xFDB
  2464                           fsr2h	equ	0xFDA
  2465                           fsr2l	equ	0xFD9
  2466                           status	equ	0xFD8
  2467                           
  2468 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
  2469 ;; Defined at:
  2470 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  f               3   21[COMRAM] PTR void 
  2473 ;;		 -> i2c_busCollisionISR(1), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2485 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2488 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2489 ;;Total ram usage:        3 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    6
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_i2c_open
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text10
  2500  0012C0                     __ptext10:
  2501                           	opt stack 0
  2502  0012C0                     _i2c1_driver_setBusCollisionISR:
  2503                           	opt stack 19
  2504                           
  2505                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
  2506                           
  2507                           ;incstack = 0
  2508  0012C0  C016  F044         	movff	i2c1_driver_setBusCollisionISR@f,_i2c1_driver_busCollisionISR
  2509  0012C4  C017  F045         	movff	i2c1_driver_setBusCollisionISR@f+1,_i2c1_driver_busCollisionISR+1
  2510  0012C8  C018  F046         	movff	i2c1_driver_setBusCollisionISR@f+2,_i2c1_driver_busCollisionISR+2
  2511  0012CC  0012               	return		;funcret
  2512  0012CE                     __end_of_i2c1_driver_setBusCollisionISR:
  2513                           	opt stack 0
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           prodl	equ	0xFF3
  2519                           intcon	equ	0xFF2
  2520                           postinc0	equ	0xFEE
  2521                           wreg	equ	0xFE8
  2522                           indf1	equ	0xFE7
  2523                           postdec1	equ	0xFE5
  2524                           plusw1	equ	0xFE3
  2525                           fsr1h	equ	0xFE2
  2526                           fsr1l	equ	0xFE1
  2527                           indf2	equ	0xFDF
  2528                           postinc2	equ	0xFDE
  2529                           plusw2	equ	0xFDB
  2530                           fsr2h	equ	0xFDA
  2531                           fsr2l	equ	0xFD9
  2532                           status	equ	0xFD8
  2533                           
  2534 ;; *************** function _i2c1_driver_open *****************
  2535 ;; Defined at:
  2536 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;		None               void
  2543 ;; Registers used:
  2544 ;;		wreg, status,2
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    6
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_i2c_open
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text11
  2565  00118A                     __ptext11:
  2566                           	opt stack 0
  2567  00118A                     _i2c1_driver_open:
  2568                           	opt stack 19
  2569                           
  2570                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  2571                           
  2572                           ;incstack = 0
  2573  00118A  BA96               	btfsc	3990,5,c	;volatile
  2574  00118C  0012               	return	
  2575                           
  2576                           ;i2c1_driver.c: 86: {
  2577                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
  2578  00118E  0E00               	movlw	0
  2579  001190  6E95               	movwf	3989,c	;volatile
  2580                           
  2581                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  2582  001192  0E28               	movlw	40
  2583  001194  6E96               	movwf	3990,c	;volatile
  2584                           
  2585                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  2586  001196  0E00               	movlw	0
  2587  001198  6E97               	movwf	3991,c	;volatile
  2588                           
  2589                           ;i2c1_driver.c: 90: SSP1ADD = 0x4;
  2590  00119A  0E04               	movlw	4
  2591  00119C  6E93               	movwf	3987,c	;volatile
  2592                           
  2593                           ;i2c1_driver.c: 93: else
  2594                           ;i2c1_driver.c: 94: return 0;
  2595                           ;	Return value of _i2c1_driver_open is never used
  2596                           
  2597                           ;i2c1_driver.c: 92: }
  2598                           
  2599                           ;i2c1_driver.c: 91: return 1;
  2600                           ;	Return value of _i2c1_driver_open is never used
  2601  00119E  0012               	return	
  2602  0011A0                     __end_of_i2c1_driver_open:
  2603                           	opt stack 0
  2604                           tblptru	equ	0xFF8
  2605                           tblptrh	equ	0xFF7
  2606                           tblptrl	equ	0xFF6
  2607                           tablat	equ	0xFF5
  2608                           prodl	equ	0xFF3
  2609                           intcon	equ	0xFF2
  2610                           postinc0	equ	0xFEE
  2611                           wreg	equ	0xFE8
  2612                           indf1	equ	0xFE7
  2613                           postdec1	equ	0xFE5
  2614                           plusw1	equ	0xFE3
  2615                           fsr1h	equ	0xFE2
  2616                           fsr1l	equ	0xFE1
  2617                           indf2	equ	0xFDF
  2618                           postinc2	equ	0xFDE
  2619                           plusw2	equ	0xFDB
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _i2c_masterRead *****************
  2625 ;; Defined at:
  2626 ;;		line 217 in file "mcc_generated_files/drivers/i2c_master.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;		None
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;		None
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      enum E11785
  2633 ;; Registers used:
  2634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2644 ;;Total ram usage:        0 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:   13
  2647 ;; This function calls:
  2648 ;;		_i2c_masterOperation
  2649 ;; This function is called by:
  2650 ;;		_i2c_readNBytes
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text12
  2655  001398                     __ptext12:
  2656                           	opt stack 0
  2657  001398                     _i2c_masterRead:
  2658                           	opt stack 13
  2659                           
  2660                           ;i2c_master.c: 219: return i2c_masterOperation(1);
  2661                           ;	Return value of _i2c_masterRead is never used
  2662                           
  2663                           ;incstack = 0
  2664  001398  0E01               	movlw	1
  2665  00139A  EC8D  F007         	call	_i2c_masterOperation
  2666  00139E  0012               	return	
  2667  0013A0                     __end_of_i2c_masterRead:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           prodl	equ	0xFF3
  2674                           intcon	equ	0xFF2
  2675                           postinc0	equ	0xFEE
  2676                           wreg	equ	0xFE8
  2677                           indf1	equ	0xFE7
  2678                           postdec1	equ	0xFE5
  2679                           plusw1	equ	0xFE3
  2680                           fsr1h	equ	0xFE2
  2681                           fsr1l	equ	0xFE1
  2682                           indf2	equ	0xFDF
  2683                           postinc2	equ	0xFDE
  2684                           plusw2	equ	0xFDB
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function _i2c_masterOperation *****************
  2690 ;; Defined at:
  2691 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  read            1    wreg     unsigned char 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  read            1   24[COMRAM] unsigned char 
  2696 ;;  ret             1   25[COMRAM] enum E11785
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      enum E11785
  2699 ;; Registers used:
  2700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2709 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2710 ;;Total ram usage:        2 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:   12
  2713 ;; This function calls:
  2714 ;;		_i2c1_driver_start
  2715 ;;		_i2c_poller
  2716 ;;		_mssp1_IRQisEnabled
  2717 ;; This function is called by:
  2718 ;;		_i2c_masterRead
  2719 ;;		_i2c_masterWrite
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text13
  2724  000F1A                     __ptext13:
  2725                           	opt stack 0
  2726  000F1A                     _i2c_masterOperation:
  2727                           	opt stack 13
  2728                           
  2729                           ;incstack = 0
  2730                           ;i2c_masterOperation@read stored from wreg
  2731  000F1A  6E19               	movwf	i2c_masterOperation@read,c
  2732                           
  2733                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
  2734  000F1C  0E01               	movlw	1
  2735  000F1E  6E1A               	movwf	i2c_masterOperation@ret,c
  2736                           
  2737                           ;i2c_master.c: 196: if(!i2c_status.busy)
  2738  000F20  0100               	movlb	0	; () banked
  2739  000F22  B160               	btfsc	_i2c_status& (0+255),0,b
  2740  000F24  D011               	goto	l383
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;i2c_master.c: 197: {
  2744                           ;i2c_master.c: 198: i2c_status.busy = 1;
  2745  000F26  8160               	bsf	_i2c_status& (0+255),0,b
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;i2c_master.c: 199: ret = I2C_NOERR;
  2749  000F28  0E00               	movlw	0
  2750  000F2A  6E1A               	movwf	i2c_masterOperation@ret,c
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;i2c_master.c: 201: if(read)
  2754  000F2C  5019               	movf	i2c_masterOperation@read,w,c
  2755  000F2E  B4D8               	btfsc	status,2,c
  2756  000F30  D002               	goto	l381
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;i2c_master.c: 202: {
  2760                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
  2761  000F32  0E01               	movlw	1
  2762  000F34  D001               	goto	L3
  2763  000F36                     l381:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;i2c_master.c: 205: else
  2767                           ;i2c_master.c: 206: {
  2768                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
  2769                           
  2770                           ; BSR set to: 0
  2771  000F36  0E02               	movlw	2
  2772  000F38                     L3:
  2773  000F38  6F6A               	movwf	(_i2c_status+10)& (0+255),b
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;i2c_master.c: 208: }
  2777                           ;i2c_master.c: 209: i2c1_driver_start();
  2778                           
  2779                           ; BSR set to: 0
  2780  000F3A  EC1D  F00A         	call	_i2c1_driver_start	;wreg free
  2781                           
  2782                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
  2783  000F3E  EC1D  F009         	call	_mssp1_IRQisEnabled	;wreg free
  2784  000F42  A0D8               	btfss	status,0,c
  2785                           
  2786                           ;i2c_master.c: 212: i2c_poller();
  2787  000F44  EC79  F008         	call	_i2c_poller	;wreg free
  2788  000F48                     l383:
  2789                           
  2790                           ;i2c_master.c: 213: }
  2791                           ;i2c_master.c: 214: return ret;
  2792  000F48  501A               	movf	i2c_masterOperation@ret,w,c
  2793  000F4A  0012               	return	
  2794  000F4C                     __end_of_i2c_masterOperation:
  2795                           	opt stack 0
  2796                           tblptru	equ	0xFF8
  2797                           tblptrh	equ	0xFF7
  2798                           tblptrl	equ	0xFF6
  2799                           tablat	equ	0xFF5
  2800                           prodl	equ	0xFF3
  2801                           intcon	equ	0xFF2
  2802                           postinc0	equ	0xFEE
  2803                           wreg	equ	0xFE8
  2804                           indf1	equ	0xFE7
  2805                           postdec1	equ	0xFE5
  2806                           plusw1	equ	0xFE3
  2807                           fsr1h	equ	0xFE2
  2808                           fsr1l	equ	0xFE1
  2809                           indf2	equ	0xFDF
  2810                           postinc2	equ	0xFDE
  2811                           plusw2	equ	0xFDB
  2812                           fsr2h	equ	0xFDA
  2813                           fsr2l	equ	0xFD9
  2814                           status	equ	0xFD8
  2815                           
  2816 ;; *************** function _mssp1_IRQisEnabled *****************
  2817 ;; Defined at:
  2818 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;		None               void
  2825 ;; Registers used:
  2826 ;;		wreg, status,0
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;Total ram usage:        1 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    6
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_i2c_masterOperation
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text14
  2847  00123A                     __ptext14:
  2848                           	opt stack 0
  2849  00123A                     _mssp1_IRQisEnabled:
  2850                           	opt stack 18
  2851                           
  2852                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
  2853                           
  2854                           ;incstack = 0
  2855  00123A  010E               	movlb	14	; () banked
  2856  00123C  A1C5               	btfss	197,0,b	;volatile
  2857  00123E  D003               	goto	u2100
  2858  001240  6A16               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  2859  001242  2A16               	incf	??_mssp1_IRQisEnabled& (0+255),f,c
  2860  001244  D001               	goto	u2108
  2861  001246                     u2100:
  2862  001246  6A16               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  2863  001248                     u2108:
  2864  001248  3016               	rrcf	??_mssp1_IRQisEnabled,w,c
  2865  00124A  0012               	return	
  2866  00124C                     __end_of_mssp1_IRQisEnabled:
  2867                           	opt stack 0
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           prodl	equ	0xFF3
  2873                           intcon	equ	0xFF2
  2874                           postinc0	equ	0xFEE
  2875                           wreg	equ	0xFE8
  2876                           indf1	equ	0xFE7
  2877                           postdec1	equ	0xFE5
  2878                           plusw1	equ	0xFE3
  2879                           fsr1h	equ	0xFE2
  2880                           fsr1l	equ	0xFE1
  2881                           indf2	equ	0xFDF
  2882                           postinc2	equ	0xFDE
  2883                           plusw2	equ	0xFDB
  2884                           fsr2h	equ	0xFDA
  2885                           fsr2l	equ	0xFD9
  2886                           status	equ	0xFD8
  2887                           
  2888 ;; *************** function _i2c_poller *****************
  2889 ;; Defined at:
  2890 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:   11
  2911 ;; This function calls:
  2912 ;;		_i2c_ISR
  2913 ;;		_mssp1_waitForEvent
  2914 ;; This function is called by:
  2915 ;;		_i2c_masterOperation
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text15
  2920  0010F2                     __ptext15:
  2921                           	opt stack 0
  2922  0010F2                     _i2c_poller:
  2923                           	opt stack 13
  2924                           
  2925                           ;i2c_master.c: 232: while(i2c_status.busy)
  2926                           
  2927                           ;incstack = 0
  2928  0010F2  D008               	goto	l393
  2929  0010F4                     
  2930                           ;i2c_master.c: 233: {
  2931                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
  2932  0010F4  0E00               	movlw	0
  2933  0010F6  6E16               	movwf	mssp1_waitForEvent@timeout,c
  2934  0010F8  0E00               	movlw	0
  2935  0010FA  6E17               	movwf	mssp1_waitForEvent@timeout+1,c
  2936  0010FC  ECD0  F008         	call	_mssp1_waitForEvent	;wreg free
  2937                           
  2938                           ;i2c_master.c: 235: i2c_ISR();
  2939  001100  ECE5  F005         	call	_i2c_ISR	;wreg free
  2940  001104                     l393:
  2941  001104  0100               	movlb	0	; () banked
  2942  001106  A160               	btfss	_i2c_status& (0+255),0,b
  2943  001108  0012               	return	
  2944  00110A  D7F4               	goto	l394
  2945  00110C                     __end_of_i2c_poller:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodl	equ	0xFF3
  2952                           intcon	equ	0xFF2
  2953                           postinc0	equ	0xFEE
  2954                           wreg	equ	0xFE8
  2955                           indf1	equ	0xFE7
  2956                           postdec1	equ	0xFE5
  2957                           plusw1	equ	0xFE3
  2958                           fsr1h	equ	0xFE2
  2959                           fsr1l	equ	0xFE1
  2960                           indf2	equ	0xFDF
  2961                           postinc2	equ	0xFDE
  2962                           plusw2	equ	0xFDB
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _mssp1_waitForEvent *****************
  2968 ;; Defined at:
  2969 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  timeout         2   21[COMRAM] PTR unsigned int 
  2972 ;;		 -> NULL(0), 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2988 ;;Total ram usage:        2 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    6
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_i2c_poller
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text16
  2999  0011A0                     __ptext16:
  3000                           	opt stack 0
  3001  0011A0                     _mssp1_waitForEvent:
  3002                           	opt stack 17
  3003                           
  3004                           ;i2c1_driver.c: 73: if(PIR3bits.SSP1IF == 0)
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;incstack = 0
  3008  0011A0  010E               	movlb	14	; () banked
  3009  0011A2  B1CD               	btfsc	205,0,b	;volatile
  3010  0011A4  0012               	return	
  3011  0011A6                     u2050:
  3012                           
  3013                           ;i2c1_driver.c: 76: {
  3014                           ;i2c1_driver.c: 77: if(PIR3bits.SSP1IF) break;
  3015                           
  3016                           ;i2c1_driver.c: 74: {
  3017                           ;i2c1_driver.c: 75: while(1)
  3018  0011A6  010E               	movlb	14	; () banked
  3019  0011A8  B1CD               	btfsc	205,0,b	;volatile
  3020  0011AA  0012               	return	
  3021                           
  3022                           ; BSR set to: 14
  3023                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(2000000/4000000.0)));
  3024                           
  3025                           ; BSR set to: 14
  3026                           
  3027                           ; BSR set to: 14
  3028  0011AC  0E10               	movlw	16
  3029  0011AE                     u2767:
  3030  0011AE  2EE8               	decfsz	wreg,f,c
  3031  0011B0  D7FE               	bra	u2767
  3032  0011B2  D000               	nop2	
  3033  0011B4  D7F8               	goto	u2050
  3034  0011B6                     __end_of_mssp1_waitForEvent:
  3035                           	opt stack 0
  3036                           tblptru	equ	0xFF8
  3037                           tblptrh	equ	0xFF7
  3038                           tblptrl	equ	0xFF6
  3039                           tablat	equ	0xFF5
  3040                           prodl	equ	0xFF3
  3041                           intcon	equ	0xFF2
  3042                           postinc0	equ	0xFEE
  3043                           wreg	equ	0xFE8
  3044                           indf1	equ	0xFE7
  3045                           postdec1	equ	0xFE5
  3046                           plusw1	equ	0xFE3
  3047                           fsr1h	equ	0xFE2
  3048                           fsr1l	equ	0xFE1
  3049                           indf2	equ	0xFDF
  3050                           postinc2	equ	0xFDE
  3051                           plusw2	equ	0xFDB
  3052                           fsr2h	equ	0xFDA
  3053                           fsr2l	equ	0xFD9
  3054                           status	equ	0xFD8
  3055                           
  3056 ;; *************** function _i2c_ISR *****************
  3057 ;; Defined at:
  3058 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:   10
  3079 ;; This function calls:
  3080 ;;		_do_I2C_DO_ACK
  3081 ;;		_do_I2C_DO_ADDRESS_NACK
  3082 ;;		_do_I2C_DO_NACK_RESTART
  3083 ;;		_do_I2C_DO_NACK_STOP
  3084 ;;		_do_I2C_IDLE
  3085 ;;		_do_I2C_RCEN
  3086 ;;		_do_I2C_RESET
  3087 ;;		_do_I2C_RX
  3088 ;;		_do_I2C_SEND_ADR_READ
  3089 ;;		_do_I2C_SEND_ADR_WRITE
  3090 ;;		_do_I2C_SEND_RESTART
  3091 ;;		_do_I2C_SEND_RESTART_READ
  3092 ;;		_do_I2C_SEND_RESTART_WRITE
  3093 ;;		_do_I2C_SEND_STOP
  3094 ;;		_do_I2C_TX
  3095 ;;		_do_I2C_TX_EMPTY
  3096 ;;		_i2c1_driver_isNACK
  3097 ;;		_mssp1_clearIRQ
  3098 ;; This function is called by:
  3099 ;;		_i2c_open
  3100 ;;		_i2c_poller
  3101 ;;		_INTERRUPT_InterruptManager
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text17
  3106  000BCA                     __ptext17:
  3107                           	opt stack 0
  3108  000BCA                     _i2c_ISR:
  3109                           	opt stack 0
  3110                           
  3111                           ;Skip over the trampoline to the duplicate function for level 2
  3112  000BCA  B247               	btfsc	btemp,1,c
  3113  000BCC  EF7D  F006         	goto	i2_i2c_ISR
  3114  000BD0                     _i2c_ISR$intlevel0:
  3115                           	opt stack 13
  3116                           
  3117                           ;i2c_master.c: 421: mssp1_clearIRQ();
  3118                           
  3119                           ;incstack = 0
  3120  000BD0  EC00  F00A         	call	_mssp1_clearIRQ	;wreg free
  3121                           
  3122                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  3123  000BD4  0100               	movlb	0	; () banked
  3124  000BD6  A760               	btfss	_i2c_status& (0+255),3,b
  3125  000BD8  D007               	goto	l483
  3126                           
  3127                           ; BSR set to: 0
  3128  000BDA  ECFC  F008         	call	_i2c1_driver_isNACK	;wreg free
  3129  000BDE  A0D8               	btfss	status,0,c
  3130  000BE0  D003               	goto	l483
  3131                           
  3132                           ;i2c_master.c: 428: {
  3133                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  3134  000BE2  0E0F               	movlw	15
  3135  000BE4  0100               	movlb	0	; () banked
  3136  000BE6  6F6A               	movwf	(_i2c_status+10)& (0+255),b
  3137  000BE8                     l483:
  3138                           
  3139                           ;i2c_master.c: 430: }
  3140                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  3141                           
  3142                           ; BSR set to: 0
  3143  000BE8  0100               	movlb	0	; () banked
  3144  000BEA  516A               	movf	(_i2c_status+10)& (0+255),w,b
  3145  000BEC  0D03               	mullw	3
  3146  000BEE  0EC7               	movlw	low _fsmStateTable
  3147  000BF0  24F3               	addwf	prodl,w,c
  3148  000BF2  6ED9               	movwf	fsr2l,c
  3149  000BF4  0E00               	movlw	high _fsmStateTable
  3150  000BF6  20F4               	addwfc	prodh,w,c
  3151  000BF8  6EDA               	movwf	fsr2h,c
  3152  000BFA  D801               	call	u2098
  3153  000BFC  D00A               	goto	u2099
  3154  000BFE                     u2098:
  3155  000BFE  0005               	push	
  3156  000C00  6EFA               	movwf	pclath,c
  3157  000C02  50DE               	movf	postinc2,w,c
  3158  000C04  6EFD               	movwf	tosl,c
  3159  000C06  50DE               	movf	postinc2,w,c
  3160  000C08  6EFE               	movwf	tosh,c
  3161  000C0A  50DE               	movf	postinc2,w,c
  3162  000C0C  6EFF               	movwf	tosu,c
  3163  000C0E  50FA               	movf	pclath,w,c
  3164  000C10  0012               	return		;indir
  3165  000C12                     u2099:
  3166  000C12  0100               	movlb	0	; () banked
  3167  000C14  6F6A               	movwf	(_i2c_status+10)& (0+255),b
  3168                           
  3169                           ; BSR set to: 0
  3170  000C16  0012               	return		;funcret
  3171  000C18                     __end_of_i2c_ISR:
  3172                           	opt stack 0
  3173                           tosu	equ	0xFFF
  3174                           tosh	equ	0xFFE
  3175                           tosl	equ	0xFFD
  3176                           pclath	equ	0xFFA
  3177                           tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           prodh	equ	0xFF4
  3182                           prodl	equ	0xFF3
  3183                           intcon	equ	0xFF2
  3184                           postinc0	equ	0xFEE
  3185                           wreg	equ	0xFE8
  3186                           indf1	equ	0xFE7
  3187                           postdec1	equ	0xFE5
  3188                           plusw1	equ	0xFE3
  3189                           fsr1h	equ	0xFE2
  3190                           fsr1l	equ	0xFE1
  3191                           indf2	equ	0xFDF
  3192                           postinc2	equ	0xFDE
  3193                           plusw2	equ	0xFDB
  3194                           fsr2h	equ	0xFDA
  3195                           fsr2l	equ	0xFD9
  3196                           status	equ	0xFD8
  3197                           
  3198 ;; *************** function _do_I2C_RX *****************
  3199 ;; Defined at:
  3200 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      enum E11956
  3207 ;; Registers used:
  3208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;Total ram usage:        0 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    9
  3221 ;; This function calls:
  3222 ;;		Absolute function
  3223 ;;		_do_I2C_DO_NACK_RESTART
  3224 ;;		_do_I2C_DO_NACK_STOP
  3225 ;;		_i2c1_driver_getRXData
  3226 ;;		_i2c1_driver_sendACK
  3227 ;;		_i2c_restartWrite
  3228 ;;		_rd1RegCompleteHandler
  3229 ;;		_rd2RegCompleteHandler
  3230 ;;		_rdBlkRegCompleteHandler
  3231 ;;		_returnReset
  3232 ;;		_returnStop
  3233 ;;		_wr1RegCompleteHandler
  3234 ;;		_wr2RegCompleteHandler
  3235 ;; This function is called by:
  3236 ;;		_i2c_ISR
  3237 ;;		i2_i2c_ISR
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text18
  3242  000936                     __ptext18:
  3243                           	opt stack 0
  3244  000936                     _do_I2C_RX:
  3245                           	opt stack 0
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;Skip over the trampoline to the duplicate function for level 2
  3249  000936  B247               	btfsc	btemp,1,c
  3250  000938  EF50  F005         	goto	i2_do_I2C_RX
  3251  00093C                     _do_I2C_RX$intlevel0:
  3252                           	opt stack 13
  3253                           
  3254                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  3255                           
  3256                           ;incstack = 0
  3257  00093C  EC15  F00A         	call	_i2c1_driver_getRXData	;wreg free
  3258  000940  C062  FFD9         	movff	_i2c_status+2,fsr2l
  3259  000944  C063  FFDA         	movff	_i2c_status+3,fsr2h
  3260  000948  6EDF               	movwf	indf2,c
  3261  00094A  0100               	movlb	0	; () banked
  3262  00094C  4B62               	infsnz	(_i2c_status+2)& (0+255),f,b
  3263  00094E  2B63               	incf	(_i2c_status+3)& (0+255),f,b
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  3267  000950  0764               	decf	(_i2c_status+4)& (0+255),f,b
  3268  000952  A0D8               	btfss	status,0,c
  3269  000954  0765               	decf	(_i2c_status+5)& (0+255),f,b
  3270  000956  5164               	movf	(_i2c_status+4)& (0+255),w,b
  3271  000958  1165               	iorwf	(_i2c_status+5)& (0+255),w,b
  3272  00095A  B4D8               	btfsc	status,2,c
  3273  00095C  D004               	goto	l459
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;i2c_master.c: 361: {
  3277                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  3278  00095E  ECFA  F009         	call	_i2c1_driver_sendACK	;wreg free
  3279                           
  3280                           ;i2c_master.c: 363: return I2C_RCEN;
  3281  000962  0E05               	movlw	5
  3282                           
  3283                           ;i2c_master.c: 364: }
  3284  000964  0012               	return	
  3285  000966                     l459:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;i2c_master.c: 365: else
  3289                           ;i2c_master.c: 366: {
  3290                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  3291  000966  8560               	bsf	_i2c_status& (0+255),2,b
  3292                           
  3293                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  3294  000968  D006               	goto	l462
  3295  00096A                     
  3296                           ;i2c_master.c: 371: case i2c_restart_read:
  3297                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  3298                           
  3299                           ; BSR set to: 0
  3300                           
  3301                           ; BSR set to: 0
  3302  00096A  EC67  F009         	call	_do_I2C_DO_NACK_RESTART	;wreg free
  3303  00096E  0012               	return	
  3304  000970                     
  3305                           ;i2c_master.c: 375: case i2c_stop:
  3306                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  3307                           
  3308                           ;i2c_master.c: 374: case i2c_continue:
  3309  000970  EC6E  F009         	call	_do_I2C_DO_NACK_STOP	;wreg free
  3310                           
  3311                           ;i2c_master.c: 377: }
  3312  000974  0012               	return	
  3313  000976                     l462:
  3314  000976  C07E  F021         	movff	_i2c_status+30,returnStop@p
  3315  00097A  C07F  F022         	movff	_i2c_status+31,returnStop@p+1
  3316  00097E  EE20  F06C         	lfsr	2,_i2c_status+12
  3317  000982  D801               	call	u2038
  3318  000984  D00A               	goto	u2039
  3319  000986                     u2038:
  3320  000986  0005               	push	
  3321  000988  6EFA               	movwf	pclath,c
  3322  00098A  50DE               	movf	postinc2,w,c
  3323  00098C  6EFD               	movwf	tosl,c
  3324  00098E  50DE               	movf	postinc2,w,c
  3325  000990  6EFE               	movwf	tosh,c
  3326  000992  50DE               	movf	postinc2,w,c
  3327  000994  6EFF               	movwf	tosu,c
  3328  000996  50FA               	movf	pclath,w,c
  3329  000998  0012               	return		;indir
  3330  00099A                     u2039:
  3331                           
  3332                           ; Switch size 1, requested type "space"
  3333                           ; Number of cases is 4, Range of values is 1 to 4
  3334                           ; switch strategies available:
  3335                           ; Name         Instructions Cycles
  3336                           ; simple_byte           13     7 (average)
  3337                           ;	Chosen strategy is simple_byte
  3338  00099A  0A01               	xorlw	1	; case 1
  3339  00099C  B4D8               	btfsc	status,2,c
  3340  00099E  D7E8               	goto	l465
  3341  0009A0  0A03               	xorlw	3	; case 2
  3342  0009A2  B4D8               	btfsc	status,2,c
  3343  0009A4  D7E2               	goto	l463
  3344  0009A6  0A01               	xorlw	1	; case 3
  3345  0009A8  B4D8               	btfsc	status,2,c
  3346  0009AA  D7DF               	goto	l463
  3347  0009AC  0A07               	xorlw	7	; case 4
  3348  0009AE  D7E0               	goto	l465
  3349  0009B0                     __end_of_do_I2C_RX:
  3350                           	opt stack 0
  3351                           tosu	equ	0xFFF
  3352                           tosh	equ	0xFFE
  3353                           tosl	equ	0xFFD
  3354                           pclath	equ	0xFFA
  3355                           tblptru	equ	0xFF8
  3356                           tblptrh	equ	0xFF7
  3357                           tblptrl	equ	0xFF6
  3358                           tablat	equ	0xFF5
  3359                           prodh	equ	0xFF4
  3360                           prodl	equ	0xFF3
  3361                           intcon	equ	0xFF2
  3362                           postinc0	equ	0xFEE
  3363                           wreg	equ	0xFE8
  3364                           indf1	equ	0xFE7
  3365                           postdec1	equ	0xFE5
  3366                           plusw1	equ	0xFE3
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           indf2	equ	0xFDF
  3370                           postinc2	equ	0xFDE
  3371                           plusw2	equ	0xFDB
  3372                           fsr2h	equ	0xFDA
  3373                           fsr2l	equ	0xFD9
  3374                           status	equ	0xFD8
  3375                           
  3376 ;; *************** function _do_I2C_TX *****************
  3377 ;; Defined at:
  3378 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      enum E11956
  3385 ;; Registers used:
  3386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3396 ;;Total ram usage:        2 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    9
  3399 ;; This function calls:
  3400 ;;		Absolute function
  3401 ;;		_do_I2C_SEND_RESTART_READ
  3402 ;;		_do_I2C_SEND_RESTART_WRITE
  3403 ;;		_do_I2C_SEND_STOP
  3404 ;;		_i2c1_driver_TXData
  3405 ;;		_i2c1_driver_isNACK
  3406 ;;		_i2c_restartWrite
  3407 ;;		_rd1RegCompleteHandler
  3408 ;;		_rd2RegCompleteHandler
  3409 ;;		_rdBlkRegCompleteHandler
  3410 ;;		_returnReset
  3411 ;;		_returnStop
  3412 ;;		_wr1RegCompleteHandler
  3413 ;;		_wr2RegCompleteHandler
  3414 ;; This function is called by:
  3415 ;;		_i2c_ISR
  3416 ;;		i2_i2c_ISR
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420                           	psect	text19
  3421  000810                     __ptext19:
  3422                           	opt stack 0
  3423  000810                     _do_I2C_TX:
  3424                           	opt stack 0
  3425                           
  3426                           ;Skip over the trampoline to the duplicate function for level 2
  3427  000810  B247               	btfsc	btemp,1,c
  3428  000812  EF53  F004         	goto	i2_do_I2C_TX
  3429  000816                     _do_I2C_TX$intlevel0:
  3430                           	opt stack 13
  3431                           
  3432                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  3433                           
  3434                           ;incstack = 0
  3435  000816  ECFC  F008         	call	_i2c1_driver_isNACK	;wreg free
  3436  00081A  B0D8               	btfsc	status,0,c
  3437  00081C  D00A               	goto	l444
  3438  00081E  D026               	goto	l443
  3439  000820                     
  3440                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  3441  000820  EC91  F009         	call	_do_I2C_SEND_RESTART_READ	;wreg free
  3442  000824  0012               	return	
  3443  000826                     
  3444                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  3445  000826  EC8A  F009         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
  3446  00082A  0012               	return	
  3447  00082C                     
  3448                           ;i2c_master.c: 345: case i2c_stop:
  3449                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  3450                           
  3451                           ;i2c_master.c: 344: case i2c_continue:
  3452  00082C  EC7C  F009         	call	_do_I2C_SEND_STOP	;wreg free
  3453                           
  3454                           ;i2c_master.c: 347: }
  3455  000830  0012               	return	
  3456  000832                     l444:
  3457  000832  C084  F021         	movff	_i2c_status+36,returnStop@p
  3458  000836  C085  F022         	movff	_i2c_status+37,returnStop@p+1
  3459  00083A  EE20  F075         	lfsr	2,_i2c_status+21
  3460  00083E  D801               	call	u2008
  3461  000840  D00A               	goto	u2009
  3462  000842                     u2008:
  3463  000842  0005               	push	
  3464  000844  6EFA               	movwf	pclath,c
  3465  000846  50DE               	movf	postinc2,w,c
  3466  000848  6EFD               	movwf	tosl,c
  3467  00084A  50DE               	movf	postinc2,w,c
  3468  00084C  6EFE               	movwf	tosh,c
  3469  00084E  50DE               	movf	postinc2,w,c
  3470  000850  6EFF               	movwf	tosu,c
  3471  000852  50FA               	movf	pclath,w,c
  3472  000854  0012               	return		;indir
  3473  000856                     u2009:
  3474                           
  3475                           ; Switch size 1, requested type "space"
  3476                           ; Number of cases is 4, Range of values is 1 to 4
  3477                           ; switch strategies available:
  3478                           ; Name         Instructions Cycles
  3479                           ; simple_byte           13     7 (average)
  3480                           ;	Chosen strategy is simple_byte
  3481  000856  0A01               	xorlw	1	; case 1
  3482  000858  B4D8               	btfsc	status,2,c
  3483  00085A  D7E8               	goto	l448
  3484  00085C  0A03               	xorlw	3	; case 2
  3485  00085E  B4D8               	btfsc	status,2,c
  3486  000860  D7DF               	goto	l445
  3487  000862  0A01               	xorlw	1	; case 3
  3488  000864  B4D8               	btfsc	status,2,c
  3489  000866  D7DF               	goto	l447
  3490  000868  0A07               	xorlw	7	; case 4
  3491  00086A  D7E0               	goto	l448
  3492  00086C                     l443:
  3493                           
  3494                           ;i2c_master.c: 349: else
  3495                           ;i2c_master.c: 350: {
  3496                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  3497  00086C  0100               	movlb	0	; () banked
  3498  00086E  9760               	bcf	_i2c_status& (0+255),3,b
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  3502  000870  C062  FFD9         	movff	_i2c_status+2,fsr2l
  3503  000874  C063  FFDA         	movff	_i2c_status+3,fsr2h
  3504  000878  4B62               	infsnz	(_i2c_status+2)& (0+255),f,b
  3505  00087A  2B63               	incf	(_i2c_status+3)& (0+255),f,b
  3506  00087C  50DF               	movf	indf2,w,c
  3507  00087E  ECD0  F009         	call	_i2c1_driver_TXData
  3508                           
  3509                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  3510  000882  0100               	movlb	0	; () banked
  3511  000884  0764               	decf	(_i2c_status+4)& (0+255),f,b
  3512  000886  A0D8               	btfss	status,0,c
  3513  000888  0765               	decf	(_i2c_status+5)& (0+255),f,b
  3514  00088A  5164               	movf	(_i2c_status+4)& (0+255),w,b
  3515  00088C  1165               	iorwf	(_i2c_status+5)& (0+255),w,b
  3516  00088E  A4D8               	btfss	status,2,c
  3517  000890  D004               	goto	l454
  3518                           
  3519                           ; BSR set to: 0
  3520  000892  0E00               	movlw	0
  3521  000894  6E18               	movwf	_do_I2C_TX$1050+1,c
  3522  000896  0E06               	movlw	6
  3523  000898  D003               	goto	L4
  3524  00089A                     l454:
  3525                           
  3526                           ; BSR set to: 0
  3527                           
  3528                           ; BSR set to: 0
  3529  00089A  0E00               	movlw	0
  3530  00089C  6E18               	movwf	_do_I2C_TX$1050+1,c
  3531  00089E  0E03               	movlw	3
  3532  0008A0                     L4:
  3533  0008A0  6E17               	movwf	_do_I2C_TX$1050,c
  3534                           
  3535                           ; BSR set to: 0
  3536  0008A2  5017               	movf	_do_I2C_TX$1050,w,c
  3537                           
  3538                           ; BSR set to: 0
  3539  0008A4  0012               	return	
  3540  0008A6                     __end_of_do_I2C_TX:
  3541                           	opt stack 0
  3542                           tosu	equ	0xFFF
  3543                           tosh	equ	0xFFE
  3544                           tosl	equ	0xFFD
  3545                           pclath	equ	0xFFA
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           prodh	equ	0xFF4
  3551                           prodl	equ	0xFF3
  3552                           intcon	equ	0xFF2
  3553                           postinc0	equ	0xFEE
  3554                           wreg	equ	0xFE8
  3555                           indf1	equ	0xFE7
  3556                           postdec1	equ	0xFE5
  3557                           plusw1	equ	0xFE3
  3558                           fsr1h	equ	0xFE2
  3559                           fsr1l	equ	0xFE1
  3560                           indf2	equ	0xFDF
  3561                           postinc2	equ	0xFDE
  3562                           plusw2	equ	0xFDB
  3563                           fsr2h	equ	0xFDA
  3564                           fsr2l	equ	0xFD9
  3565                           status	equ	0xFD8
  3566                           
  3567 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  3568 ;; Defined at:
  3569 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      enum E11956
  3576 ;; Registers used:
  3577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3587 ;;Total ram usage:        0 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    9
  3590 ;; This function calls:
  3591 ;;		Absolute function
  3592 ;;		_do_I2C_SEND_RESTART
  3593 ;;		_do_I2C_SEND_STOP
  3594 ;;		_i2c_restartWrite
  3595 ;;		_rd1RegCompleteHandler
  3596 ;;		_rd2RegCompleteHandler
  3597 ;;		_rdBlkRegCompleteHandler
  3598 ;;		_returnReset
  3599 ;;		_returnStop
  3600 ;;		_wr1RegCompleteHandler
  3601 ;;		_wr2RegCompleteHandler
  3602 ;; This function is called by:
  3603 ;;		_i2c_ISR
  3604 ;;		i2_i2c_ISR
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text20
  3609  000C18                     __ptext20:
  3610                           	opt stack 0
  3611  000C18                     _do_I2C_DO_ADDRESS_NACK:
  3612                           	opt stack 0
  3613                           
  3614                           ;Skip over the trampoline to the duplicate function for level 2
  3615  000C18  B247               	btfsc	btemp,1,c
  3616  000C1A  EFA1  F006         	goto	i2_do_I2C_DO_ADDRESS_NACK
  3617  000C1E                     _do_I2C_DO_ADDRESS_NACK$intlevel0:
  3618                           	opt stack 13
  3619                           
  3620                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  3621                           
  3622                           ;incstack = 0
  3623  000C1E  0100               	movlb	0	; () banked
  3624  000C20  9760               	bcf	_i2c_status& (0+255),3,b
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  3628  000C22  0E02               	movlw	2
  3629  000C24  6F6B               	movwf	(_i2c_status+11)& (0+255),b
  3630                           
  3631                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  3632  000C26  D006               	goto	l435
  3633  000C28                     
  3634                           ;i2c_master.c: 326: case i2c_restart_write:
  3635                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  3636                           
  3637                           ; BSR set to: 0
  3638                           
  3639                           ; BSR set to: 0
  3640  000C28  EC83  F009         	call	_do_I2C_SEND_RESTART	;wreg free
  3641  000C2C  0012               	return	
  3642  000C2E                     
  3643                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  3644  000C2E  EC7C  F009         	call	_do_I2C_SEND_STOP	;wreg free
  3645                           
  3646                           ;i2c_master.c: 330: }
  3647  000C32  0012               	return	
  3648  000C34                     l435:
  3649  000C34  C082  F021         	movff	_i2c_status+34,returnStop@p
  3650  000C38  C083  F022         	movff	_i2c_status+35,returnStop@p+1
  3651  000C3C  EE20  F072         	lfsr	2,_i2c_status+18
  3652  000C40  D801               	call	u1988
  3653  000C42  D00A               	goto	u1989
  3654  000C44                     u1988:
  3655  000C44  0005               	push	
  3656  000C46  6EFA               	movwf	pclath,c
  3657  000C48  50DE               	movf	postinc2,w,c
  3658  000C4A  6EFD               	movwf	tosl,c
  3659  000C4C  50DE               	movf	postinc2,w,c
  3660  000C4E  6EFE               	movwf	tosh,c
  3661  000C50  50DE               	movf	postinc2,w,c
  3662  000C52  6EFF               	movwf	tosu,c
  3663  000C54  50FA               	movf	pclath,w,c
  3664  000C56  0012               	return		;indir
  3665  000C58                     u1989:
  3666                           
  3667                           ; Switch size 1, requested type "space"
  3668                           ; Number of cases is 2, Range of values is 2 to 3
  3669                           ; switch strategies available:
  3670                           ; Name         Instructions Cycles
  3671                           ; simple_byte            7     4 (average)
  3672                           ;	Chosen strategy is simple_byte
  3673  000C58  0A02               	xorlw	2	; case 2
  3674  000C5A  B4D8               	btfsc	status,2,c
  3675  000C5C  D7E5               	goto	l436
  3676  000C5E  0A01               	xorlw	1	; case 3
  3677  000C60  B4D8               	btfsc	status,2,c
  3678  000C62  D7E2               	goto	l436
  3679  000C64  D7E4               	goto	l439
  3680  000C66                     __end_of_do_I2C_DO_ADDRESS_NACK:
  3681                           	opt stack 0
  3682                           tosu	equ	0xFFF
  3683                           tosh	equ	0xFFE
  3684                           tosl	equ	0xFFD
  3685                           pclath	equ	0xFFA
  3686                           tblptru	equ	0xFF8
  3687                           tblptrh	equ	0xFF7
  3688                           tblptrl	equ	0xFF6
  3689                           tablat	equ	0xFF5
  3690                           prodh	equ	0xFF4
  3691                           prodl	equ	0xFF3
  3692                           intcon	equ	0xFF2
  3693                           postinc0	equ	0xFEE
  3694                           wreg	equ	0xFE8
  3695                           indf1	equ	0xFE7
  3696                           postdec1	equ	0xFE5
  3697                           plusw1	equ	0xFE3
  3698                           fsr1h	equ	0xFE2
  3699                           fsr1l	equ	0xFE1
  3700                           indf2	equ	0xFDF
  3701                           postinc2	equ	0xFDE
  3702                           plusw2	equ	0xFDB
  3703                           fsr2h	equ	0xFDA
  3704                           fsr2l	equ	0xFD9
  3705                           status	equ	0xFD8
  3706                           
  3707 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  3708 ;; Defined at:
  3709 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      enum E11956
  3716 ;; Registers used:
  3717 ;;		wreg, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3727 ;;Total ram usage:        0 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    7
  3730 ;; This function calls:
  3731 ;;		_i2c1_driver_sendNACK
  3732 ;; This function is called by:
  3733 ;;		_do_I2C_RX
  3734 ;;		_i2c_ISR
  3735 ;;		i2_i2c_ISR
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text21
  3740  0012CE                     __ptext21:
  3741                           	opt stack 0
  3742  0012CE                     _do_I2C_DO_NACK_RESTART:
  3743                           	opt stack 0
  3744                           
  3745                           ;Skip over the trampoline to the duplicate function for level 2
  3746  0012CE  B247               	btfsc	btemp,1,c
  3747  0012D0  EFD4  F009         	goto	i2_do_I2C_DO_NACK_RESTART
  3748  0012D4                     _do_I2C_DO_NACK_RESTART$intlevel0:
  3749                           	opt stack 14
  3750                           
  3751                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  3752                           
  3753                           ;incstack = 0
  3754  0012D4  ECF7  F009         	call	_i2c1_driver_sendNACK	;wreg free
  3755                           
  3756                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  3757  0012D8  0E09               	movlw	9
  3758  0012DA  0012               	return	
  3759  0012DC                     __end_of_do_I2C_DO_NACK_RESTART:
  3760                           	opt stack 0
  3761                           tosu	equ	0xFFF
  3762                           tosh	equ	0xFFE
  3763                           tosl	equ	0xFFD
  3764                           pclath	equ	0xFFA
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           prodh	equ	0xFF4
  3770                           prodl	equ	0xFF3
  3771                           intcon	equ	0xFF2
  3772                           postinc0	equ	0xFEE
  3773                           wreg	equ	0xFE8
  3774                           indf1	equ	0xFE7
  3775                           postdec1	equ	0xFE5
  3776                           plusw1	equ	0xFE3
  3777                           fsr1h	equ	0xFE2
  3778                           fsr1l	equ	0xFE1
  3779                           indf2	equ	0xFDF
  3780                           postinc2	equ	0xFDE
  3781                           plusw2	equ	0xFDB
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  3787 ;; Defined at:
  3788 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      enum E11956
  3795 ;; Registers used:
  3796 ;;		wreg, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;Total ram usage:        0 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    7
  3809 ;; This function calls:
  3810 ;;		_i2c1_driver_sendNACK
  3811 ;; This function is called by:
  3812 ;;		_do_I2C_RX
  3813 ;;		_i2c_ISR
  3814 ;;		i2_i2c_ISR
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text22
  3819  0012DC                     __ptext22:
  3820                           	opt stack 0
  3821  0012DC                     _do_I2C_DO_NACK_STOP:
  3822                           	opt stack 0
  3823                           
  3824                           ;Skip over the trampoline to the duplicate function for level 2
  3825  0012DC  B247               	btfsc	btemp,1,c
  3826  0012DE  EFD8  F009         	goto	i2_do_I2C_DO_NACK_STOP
  3827  0012E2                     _do_I2C_DO_NACK_STOP$intlevel0:
  3828                           	opt stack 14
  3829                           
  3830                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  3831                           
  3832                           ;incstack = 0
  3833  0012E2  ECF7  F009         	call	_i2c1_driver_sendNACK	;wreg free
  3834                           
  3835                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  3836  0012E6  0E0A               	movlw	10
  3837  0012E8  0012               	return	
  3838  0012EA                     __end_of_do_I2C_DO_NACK_STOP:
  3839                           	opt stack 0
  3840                           tosu	equ	0xFFF
  3841                           tosh	equ	0xFFE
  3842                           tosl	equ	0xFFD
  3843                           pclath	equ	0xFFA
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           intcon	equ	0xFF2
  3851                           postinc0	equ	0xFEE
  3852                           wreg	equ	0xFE8
  3853                           indf1	equ	0xFE7
  3854                           postdec1	equ	0xFE5
  3855                           plusw1	equ	0xFE3
  3856                           fsr1h	equ	0xFE2
  3857                           fsr1l	equ	0xFE1
  3858                           indf2	equ	0xFDF
  3859                           postinc2	equ	0xFDE
  3860                           plusw2	equ	0xFDB
  3861                           fsr2h	equ	0xFDA
  3862                           fsr2l	equ	0xFD9
  3863                           status	equ	0xFD8
  3864                           
  3865 ;; *************** function _do_I2C_DO_ACK *****************
  3866 ;; Defined at:
  3867 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      enum E11956
  3874 ;; Registers used:
  3875 ;;		wreg, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3885 ;;Total ram usage:        0 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    7
  3888 ;; This function calls:
  3889 ;;		_i2c1_driver_sendACK
  3890 ;; This function is called by:
  3891 ;;		_i2c_ISR
  3892 ;;		i2_i2c_ISR
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text23
  3897  0012EA                     __ptext23:
  3898                           	opt stack 0
  3899  0012EA                     _do_I2C_DO_ACK:
  3900                           	opt stack 0
  3901                           
  3902                           ;Skip over the trampoline to the duplicate function for level 2
  3903  0012EA  B247               	btfsc	btemp,1,c
  3904  0012EC  EFDC  F009         	goto	i2_do_I2C_DO_ACK
  3905  0012F0                     _do_I2C_DO_ACK$intlevel0:
  3906                           	opt stack 15
  3907                           
  3908                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  3909                           
  3910                           ;incstack = 0
  3911  0012F0  ECFA  F009         	call	_i2c1_driver_sendACK	;wreg free
  3912                           
  3913                           ;i2c_master.c: 302: return I2C_RCEN;
  3914  0012F4  0E05               	movlw	5
  3915  0012F6  0012               	return	
  3916  0012F8                     __end_of_do_I2C_DO_ACK:
  3917                           	opt stack 0
  3918                           tosu	equ	0xFFF
  3919                           tosh	equ	0xFFE
  3920                           tosl	equ	0xFFD
  3921                           pclath	equ	0xFFA
  3922                           tblptru	equ	0xFF8
  3923                           tblptrh	equ	0xFF7
  3924                           tblptrl	equ	0xFF6
  3925                           tablat	equ	0xFF5
  3926                           prodh	equ	0xFF4
  3927                           prodl	equ	0xFF3
  3928                           intcon	equ	0xFF2
  3929                           postinc0	equ	0xFEE
  3930                           wreg	equ	0xFE8
  3931                           indf1	equ	0xFE7
  3932                           postdec1	equ	0xFE5
  3933                           plusw1	equ	0xFE3
  3934                           fsr1h	equ	0xFE2
  3935                           fsr1l	equ	0xFE1
  3936                           indf2	equ	0xFDF
  3937                           postinc2	equ	0xFDE
  3938                           plusw2	equ	0xFDB
  3939                           fsr2h	equ	0xFDA
  3940                           fsr2l	equ	0xFD9
  3941                           status	equ	0xFD8
  3942                           
  3943 ;; *************** function _do_I2C_RCEN *****************
  3944 ;; Defined at:
  3945 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      enum E11956
  3952 ;; Registers used:
  3953 ;;		wreg, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    7
  3966 ;; This function calls:
  3967 ;;		_i2c1_driver_startRX
  3968 ;; This function is called by:
  3969 ;;		_i2c_ISR
  3970 ;;		i2_i2c_ISR
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text24
  3975  00124C                     __ptext24:
  3976                           	opt stack 0
  3977  00124C                     _do_I2C_RCEN:
  3978                           	opt stack 0
  3979                           
  3980                           ;Skip over the trampoline to the duplicate function for level 2
  3981  00124C  B247               	btfsc	btemp,1,c
  3982  00124E  EFAD  F009         	goto	i2_do_I2C_RCEN
  3983  001252                     _do_I2C_RCEN$intlevel0:
  3984                           	opt stack 15
  3985                           
  3986                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  3987                           
  3988                           ;incstack = 0
  3989  001252  0100               	movlb	0	; () banked
  3990  001254  9760               	bcf	_i2c_status& (0+255),3,b
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;i2c_master.c: 295: i2c1_driver_startRX();
  3994  001256  EC17  F00A         	call	_i2c1_driver_startRX	;wreg free
  3995                           
  3996                           ;i2c_master.c: 296: return I2C_RX;
  3997  00125A  0E04               	movlw	4
  3998  00125C  0012               	return	
  3999  00125E                     __end_of_do_I2C_RCEN:
  4000                           	opt stack 0
  4001                           tosu	equ	0xFFF
  4002                           tosh	equ	0xFFE
  4003                           tosl	equ	0xFFD
  4004                           pclath	equ	0xFFA
  4005                           tblptru	equ	0xFF8
  4006                           tblptrh	equ	0xFF7
  4007                           tblptrl	equ	0xFF6
  4008                           tablat	equ	0xFF5
  4009                           prodh	equ	0xFF4
  4010                           prodl	equ	0xFF3
  4011                           intcon	equ	0xFF2
  4012                           postinc0	equ	0xFEE
  4013                           wreg	equ	0xFE8
  4014                           indf1	equ	0xFE7
  4015                           postdec1	equ	0xFE5
  4016                           plusw1	equ	0xFE3
  4017                           fsr1h	equ	0xFE2
  4018                           fsr1l	equ	0xFE1
  4019                           indf2	equ	0xFDF
  4020                           postinc2	equ	0xFDE
  4021                           plusw2	equ	0xFDB
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           status	equ	0xFD8
  4025                           
  4026 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  4027 ;; Defined at:
  4028 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      enum E11956
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    7
  4049 ;; This function calls:
  4050 ;;		_i2c1_driver_TXData
  4051 ;; This function is called by:
  4052 ;;		_i2c_ISR
  4053 ;;		i2_i2c_ISR
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text25
  4058  0011B6                     __ptext25:
  4059                           	opt stack 0
  4060  0011B6                     _do_I2C_SEND_ADR_WRITE:
  4061                           	opt stack 0
  4062                           
  4063                           ;Skip over the trampoline to the duplicate function for level 2
  4064  0011B6  B247               	btfsc	btemp,1,c
  4065  0011B8  EF41  F009         	goto	i2_do_I2C_SEND_ADR_WRITE
  4066  0011BC                     _do_I2C_SEND_ADR_WRITE$intlevel0:
  4067                           	opt stack 15
  4068                           
  4069                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  4070                           
  4071                           ;incstack = 0
  4072  0011BC  0100               	movlb	0	; () banked
  4073  0011BE  8760               	bsf	_i2c_status& (0+255),3,b
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  4077  0011C0  5161               	movf	(_i2c_status+1)& (0+255),w,b
  4078  0011C2  2561               	addwf	(_i2c_status+1)& (0+255),w,b
  4079  0011C4  ECD0  F009         	call	_i2c1_driver_TXData
  4080                           
  4081                           ;i2c_master.c: 289: return I2C_TX;
  4082  0011C8  0E03               	movlw	3
  4083  0011CA  0012               	return	
  4084  0011CC                     __end_of_do_I2C_SEND_ADR_WRITE:
  4085                           	opt stack 0
  4086                           tosu	equ	0xFFF
  4087                           tosh	equ	0xFFE
  4088                           tosl	equ	0xFFD
  4089                           pclath	equ	0xFFA
  4090                           tblptru	equ	0xFF8
  4091                           tblptrh	equ	0xFF7
  4092                           tblptrl	equ	0xFF6
  4093                           tablat	equ	0xFF5
  4094                           prodh	equ	0xFF4
  4095                           prodl	equ	0xFF3
  4096                           intcon	equ	0xFF2
  4097                           postinc0	equ	0xFEE
  4098                           wreg	equ	0xFE8
  4099                           indf1	equ	0xFE7
  4100                           postdec1	equ	0xFE5
  4101                           plusw1	equ	0xFE3
  4102                           fsr1h	equ	0xFE2
  4103                           fsr1l	equ	0xFE1
  4104                           indf2	equ	0xFDF
  4105                           postinc2	equ	0xFDE
  4106                           plusw2	equ	0xFDB
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  4112 ;; Defined at:
  4113 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;		None
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;		None
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  1    wreg      enum E11956
  4120 ;; Registers used:
  4121 ;;		wreg, status,0, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4131 ;;Total ram usage:        0 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    7
  4134 ;; This function calls:
  4135 ;;		_i2c1_driver_TXData
  4136 ;; This function is called by:
  4137 ;;		_i2c_ISR
  4138 ;;		i2_i2c_ISR
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text26
  4143  0011CC                     __ptext26:
  4144                           	opt stack 0
  4145  0011CC                     _do_I2C_SEND_ADR_READ:
  4146                           	opt stack 0
  4147                           
  4148                           ;Skip over the trampoline to the duplicate function for level 2
  4149  0011CC  B247               	btfsc	btemp,1,c
  4150  0011CE  EF49  F009         	goto	i2_do_I2C_SEND_ADR_READ
  4151  0011D2                     _do_I2C_SEND_ADR_READ$intlevel0:
  4152                           	opt stack 15
  4153                           
  4154                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  4155                           
  4156                           ;incstack = 0
  4157  0011D2  0100               	movlb	0	; () banked
  4158  0011D4  8760               	bsf	_i2c_status& (0+255),3,b
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  4162  0011D6  80D8               	bsf	status,0,c
  4163  0011D8  3561               	rlcf	(_i2c_status+1)& (0+255),w,b
  4164  0011DA  ECD0  F009         	call	_i2c1_driver_TXData
  4165                           
  4166                           ;i2c_master.c: 282: return I2C_RCEN;
  4167  0011DE  0E05               	movlw	5
  4168  0011E0  0012               	return	
  4169  0011E2                     __end_of_do_I2C_SEND_ADR_READ:
  4170                           	opt stack 0
  4171                           tosu	equ	0xFFF
  4172                           tosh	equ	0xFFE
  4173                           tosl	equ	0xFFD
  4174                           pclath	equ	0xFFA
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           intcon	equ	0xFF2
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           indf1	equ	0xFE7
  4185                           postdec1	equ	0xFE5
  4186                           plusw1	equ	0xFE3
  4187                           fsr1h	equ	0xFE2
  4188                           fsr1l	equ	0xFE1
  4189                           indf2	equ	0xFDF
  4190                           postinc2	equ	0xFDE
  4191                           plusw2	equ	0xFDB
  4192                           fsr2h	equ	0xFDA
  4193                           fsr2l	equ	0xFD9
  4194                           status	equ	0xFD8
  4195                           
  4196 ;; *************** function _do_I2C_SEND_STOP *****************
  4197 ;; Defined at:
  4198 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      enum E11956
  4205 ;; Registers used:
  4206 ;;		wreg, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4216 ;;Total ram usage:        0 bytes
  4217 ;; Hardware stack levels used:    1
  4218 ;; Hardware stack levels required when called:    7
  4219 ;; This function calls:
  4220 ;;		_i2c1_driver_stop
  4221 ;; This function is called by:
  4222 ;;		_do_I2C_DO_ADDRESS_NACK
  4223 ;;		_do_I2C_TX
  4224 ;;		_do_I2C_TX_EMPTY
  4225 ;;		_i2c_ISR
  4226 ;;		i2_i2c_ISR
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text27
  4231  0012F8                     __ptext27:
  4232                           	opt stack 0
  4233  0012F8                     _do_I2C_SEND_STOP:
  4234                           	opt stack 0
  4235                           
  4236                           ;Skip over the trampoline to the duplicate function for level 2
  4237  0012F8  B247               	btfsc	btemp,1,c
  4238  0012FA  EFE0  F009         	goto	i2_do_I2C_SEND_STOP
  4239  0012FE                     _do_I2C_SEND_STOP$intlevel0:
  4240                           	opt stack 14
  4241                           
  4242                           ;i2c_master.c: 274: i2c1_driver_stop();
  4243                           
  4244                           ;incstack = 0
  4245  0012FE  EC19  F00A         	call	_i2c1_driver_stop	;wreg free
  4246                           
  4247                           ;i2c_master.c: 275: return I2C_IDLE;
  4248  001302  0E00               	movlw	0
  4249  001304  0012               	return	
  4250  001306                     __end_of_do_I2C_SEND_STOP:
  4251                           	opt stack 0
  4252                           tosu	equ	0xFFF
  4253                           tosh	equ	0xFFE
  4254                           tosl	equ	0xFFD
  4255                           pclath	equ	0xFFA
  4256                           tblptru	equ	0xFF8
  4257                           tblptrh	equ	0xFF7
  4258                           tblptrl	equ	0xFF6
  4259                           tablat	equ	0xFF5
  4260                           prodh	equ	0xFF4
  4261                           prodl	equ	0xFF3
  4262                           intcon	equ	0xFF2
  4263                           postinc0	equ	0xFEE
  4264                           wreg	equ	0xFE8
  4265                           indf1	equ	0xFE7
  4266                           postdec1	equ	0xFE5
  4267                           plusw1	equ	0xFE3
  4268                           fsr1h	equ	0xFE2
  4269                           fsr1l	equ	0xFE1
  4270                           indf2	equ	0xFDF
  4271                           postinc2	equ	0xFDE
  4272                           plusw2	equ	0xFDB
  4273                           fsr2h	equ	0xFDA
  4274                           fsr2l	equ	0xFD9
  4275                           status	equ	0xFD8
  4276                           
  4277 ;; *************** function _do_I2C_SEND_RESTART *****************
  4278 ;; Defined at:
  4279 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;		None
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;		None
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      enum E11956
  4286 ;; Registers used:
  4287 ;;		wreg, cstack
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4297 ;;Total ram usage:        0 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:    7
  4300 ;; This function calls:
  4301 ;;		_i2c1_driver_restart
  4302 ;; This function is called by:
  4303 ;;		_do_I2C_DO_ADDRESS_NACK
  4304 ;;		_do_I2C_TX_EMPTY
  4305 ;;		_i2c_ISR
  4306 ;;		i2_i2c_ISR
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text28
  4311  001306                     __ptext28:
  4312                           	opt stack 0
  4313  001306                     _do_I2C_SEND_RESTART:
  4314                           	opt stack 0
  4315                           
  4316                           ;Skip over the trampoline to the duplicate function for level 2
  4317  001306  B247               	btfsc	btemp,1,c
  4318  001308  EFE4  F009         	goto	i2_do_I2C_SEND_RESTART
  4319  00130C                     _do_I2C_SEND_RESTART$intlevel0:
  4320                           	opt stack 14
  4321                           
  4322                           ;i2c_master.c: 268: i2c1_driver_restart();
  4323                           
  4324                           ;incstack = 0
  4325  00130C  EC1B  F00A         	call	_i2c1_driver_restart	;wreg free
  4326                           
  4327                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  4328  001310  0E01               	movlw	1
  4329  001312  0012               	return	
  4330  001314                     __end_of_do_I2C_SEND_RESTART:
  4331                           	opt stack 0
  4332                           tosu	equ	0xFFF
  4333                           tosh	equ	0xFFE
  4334                           tosl	equ	0xFFD
  4335                           pclath	equ	0xFFA
  4336                           tblptru	equ	0xFF8
  4337                           tblptrh	equ	0xFF7
  4338                           tblptrl	equ	0xFF6
  4339                           tablat	equ	0xFF5
  4340                           prodh	equ	0xFF4
  4341                           prodl	equ	0xFF3
  4342                           intcon	equ	0xFF2
  4343                           postinc0	equ	0xFEE
  4344                           wreg	equ	0xFE8
  4345                           indf1	equ	0xFE7
  4346                           postdec1	equ	0xFE5
  4347                           plusw1	equ	0xFE3
  4348                           fsr1h	equ	0xFE2
  4349                           fsr1l	equ	0xFE1
  4350                           indf2	equ	0xFDF
  4351                           postinc2	equ	0xFDE
  4352                           plusw2	equ	0xFDB
  4353                           fsr2h	equ	0xFDA
  4354                           fsr2l	equ	0xFD9
  4355                           status	equ	0xFD8
  4356                           
  4357 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  4358 ;; Defined at:
  4359 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      enum E11956
  4366 ;; Registers used:
  4367 ;;		wreg, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4377 ;;Total ram usage:        0 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    7
  4380 ;; This function calls:
  4381 ;;		_i2c1_driver_restart
  4382 ;; This function is called by:
  4383 ;;		_do_I2C_TX
  4384 ;;		_i2c_ISR
  4385 ;;		i2_i2c_ISR
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text29
  4390  001314                     __ptext29:
  4391                           	opt stack 0
  4392  001314                     _do_I2C_SEND_RESTART_WRITE:
  4393                           	opt stack 0
  4394                           
  4395                           ;Skip over the trampoline to the duplicate function for level 2
  4396  001314  B247               	btfsc	btemp,1,c
  4397  001316  EFE8  F009         	goto	i2_do_I2C_SEND_RESTART_WRITE
  4398  00131A                     _do_I2C_SEND_RESTART_WRITE$intlevel0:
  4399                           	opt stack 14
  4400                           
  4401                           ;i2c_master.c: 262: i2c1_driver_restart();
  4402                           
  4403                           ;incstack = 0
  4404  00131A  EC1B  F00A         	call	_i2c1_driver_restart	;wreg free
  4405                           
  4406                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  4407  00131E  0E02               	movlw	2
  4408  001320  0012               	return	
  4409  001322                     __end_of_do_I2C_SEND_RESTART_WRITE:
  4410                           	opt stack 0
  4411                           tosu	equ	0xFFF
  4412                           tosh	equ	0xFFE
  4413                           tosl	equ	0xFFD
  4414                           pclath	equ	0xFFA
  4415                           tblptru	equ	0xFF8
  4416                           tblptrh	equ	0xFF7
  4417                           tblptrl	equ	0xFF6
  4418                           tablat	equ	0xFF5
  4419                           prodh	equ	0xFF4
  4420                           prodl	equ	0xFF3
  4421                           intcon	equ	0xFF2
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           indf1	equ	0xFE7
  4425                           postdec1	equ	0xFE5
  4426                           plusw1	equ	0xFE3
  4427                           fsr1h	equ	0xFE2
  4428                           fsr1l	equ	0xFE1
  4429                           indf2	equ	0xFDF
  4430                           postinc2	equ	0xFDE
  4431                           plusw2	equ	0xFDB
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  4437 ;; Defined at:
  4438 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      enum E11956
  4445 ;; Registers used:
  4446 ;;		wreg, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    7
  4459 ;; This function calls:
  4460 ;;		_i2c1_driver_restart
  4461 ;; This function is called by:
  4462 ;;		_do_I2C_TX
  4463 ;;		_i2c_ISR
  4464 ;;		i2_i2c_ISR
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text30
  4469  001322                     __ptext30:
  4470                           	opt stack 0
  4471  001322                     _do_I2C_SEND_RESTART_READ:
  4472                           	opt stack 0
  4473                           
  4474                           ;Skip over the trampoline to the duplicate function for level 2
  4475  001322  B247               	btfsc	btemp,1,c
  4476  001324  EFEC  F009         	goto	i2_do_I2C_SEND_RESTART_READ
  4477  001328                     _do_I2C_SEND_RESTART_READ$intlevel0:
  4478                           	opt stack 14
  4479                           
  4480                           ;i2c_master.c: 256: i2c1_driver_restart();
  4481                           
  4482                           ;incstack = 0
  4483  001328  EC1B  F00A         	call	_i2c1_driver_restart	;wreg free
  4484                           
  4485                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  4486  00132C  0E01               	movlw	1
  4487  00132E  0012               	return	
  4488  001330                     __end_of_do_I2C_SEND_RESTART_READ:
  4489                           	opt stack 0
  4490                           tosu	equ	0xFFF
  4491                           tosh	equ	0xFFE
  4492                           tosl	equ	0xFFD
  4493                           pclath	equ	0xFFA
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           prodh	equ	0xFF4
  4499                           prodl	equ	0xFF3
  4500                           intcon	equ	0xFF2
  4501                           postinc0	equ	0xFEE
  4502                           wreg	equ	0xFE8
  4503                           indf1	equ	0xFE7
  4504                           postdec1	equ	0xFE5
  4505                           plusw1	equ	0xFE3
  4506                           fsr1h	equ	0xFE2
  4507                           fsr1l	equ	0xFE1
  4508                           indf2	equ	0xFDF
  4509                           postinc2	equ	0xFDE
  4510                           plusw2	equ	0xFDB
  4511                           fsr2h	equ	0xFDA
  4512                           fsr2l	equ	0xFD9
  4513                           status	equ	0xFD8
  4514                           
  4515 ;; *************** function _do_I2C_IDLE *****************
  4516 ;; Defined at:
  4517 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      enum E11956
  4524 ;; Registers used:
  4525 ;;		wreg, status,2
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4535 ;;Total ram usage:        0 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    6
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_i2c_ISR
  4542 ;;		i2_i2c_ISR
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text31
  4547  00125E                     __ptext31:
  4548                           	opt stack 0
  4549  00125E                     _do_I2C_IDLE:
  4550                           	opt stack 0
  4551                           
  4552                           ;Skip over the trampoline to the duplicate function for level 2
  4553  00125E  B247               	btfsc	btemp,1,c
  4554  001260  EFB3  F009         	goto	i2_do_I2C_IDLE
  4555  001264                     _do_I2C_IDLE$intlevel0:
  4556                           	opt stack 16
  4557                           
  4558                           ;i2c_master.c: 249: i2c_status.busy = 0;
  4559                           
  4560                           ;incstack = 0
  4561  001264  0100               	movlb	0	; () banked
  4562  001266  9160               	bcf	_i2c_status& (0+255),0,b
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  4566  001268  0E00               	movlw	0
  4567  00126A  6F6B               	movwf	(_i2c_status+11)& (0+255),b
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;i2c_master.c: 251: return I2C_RESET;
  4571  00126C  0E0E               	movlw	14
  4572  00126E  0012               	return	
  4573  001270                     __end_of_do_I2C_IDLE:
  4574                           	opt stack 0
  4575                           tosu	equ	0xFFF
  4576                           tosh	equ	0xFFE
  4577                           tosl	equ	0xFFD
  4578                           pclath	equ	0xFFA
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           prodh	equ	0xFF4
  4584                           prodl	equ	0xFF3
  4585                           intcon	equ	0xFF2
  4586                           postinc0	equ	0xFEE
  4587                           wreg	equ	0xFE8
  4588                           indf1	equ	0xFE7
  4589                           postdec1	equ	0xFE5
  4590                           plusw1	equ	0xFE3
  4591                           fsr1h	equ	0xFE2
  4592                           fsr1l	equ	0xFE1
  4593                           indf2	equ	0xFDF
  4594                           postinc2	equ	0xFDE
  4595                           plusw2	equ	0xFDB
  4596                           fsr2h	equ	0xFDA
  4597                           fsr2l	equ	0xFD9
  4598                           status	equ	0xFD8
  4599                           
  4600 ;; *************** function _do_I2C_RESET *****************
  4601 ;; Defined at:
  4602 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;		None
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      enum E11956
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4620 ;;Total ram usage:        0 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    7
  4623 ;; This function calls:
  4624 ;;		_i2c1_driver_resetBus
  4625 ;; This function is called by:
  4626 ;;		_i2c_ISR
  4627 ;;		i2_i2c_ISR
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text32
  4632  0011E2                     __ptext32:
  4633                           	opt stack 0
  4634  0011E2                     _do_I2C_RESET:
  4635                           	opt stack 0
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;Skip over the trampoline to the duplicate function for level 2
  4639  0011E2  B247               	btfsc	btemp,1,c
  4640  0011E4  EF51  F009         	goto	i2_do_I2C_RESET
  4641  0011E8                     _do_I2C_RESET$intlevel0:
  4642                           	opt stack 15
  4643                           
  4644                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  4645                           
  4646                           ;incstack = 0
  4647  0011E8  EC2F  F00A         	call	_i2c1_driver_resetBus	;wreg free
  4648                           
  4649                           ;i2c_master.c: 242: i2c_status.busy = 0;
  4650  0011EC  0100               	movlb	0	; () banked
  4651  0011EE  9160               	bcf	_i2c_status& (0+255),0,b
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  4655  0011F0  0E00               	movlw	0
  4656  0011F2  6F6B               	movwf	(_i2c_status+11)& (0+255),b
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;i2c_master.c: 244: return I2C_RESET;
  4660  0011F4  0E0E               	movlw	14
  4661  0011F6  0012               	return	
  4662  0011F8                     __end_of_do_I2C_RESET:
  4663                           	opt stack 0
  4664                           tosu	equ	0xFFF
  4665                           tosh	equ	0xFFE
  4666                           tosl	equ	0xFFD
  4667                           pclath	equ	0xFFA
  4668                           tblptru	equ	0xFF8
  4669                           tblptrh	equ	0xFF7
  4670                           tblptrl	equ	0xFF6
  4671                           tablat	equ	0xFF5
  4672                           prodh	equ	0xFF4
  4673                           prodl	equ	0xFF3
  4674                           intcon	equ	0xFF2
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           indf1	equ	0xFE7
  4678                           postdec1	equ	0xFE5
  4679                           plusw1	equ	0xFE3
  4680                           fsr1h	equ	0xFE2
  4681                           fsr1l	equ	0xFE1
  4682                           indf2	equ	0xFDF
  4683                           postinc2	equ	0xFDE
  4684                           plusw2	equ	0xFDB
  4685                           fsr2h	equ	0xFDA
  4686                           fsr2l	equ	0xFD9
  4687                           status	equ	0xFD8
  4688                           
  4689 ;; *************** function _do_I2C_TX_EMPTY *****************
  4690 ;; Defined at:
  4691 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      enum E11956
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4709 ;;Total ram usage:        0 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    9
  4712 ;; This function calls:
  4713 ;;		Absolute function
  4714 ;;		_do_I2C_SEND_RESTART
  4715 ;;		_do_I2C_SEND_STOP
  4716 ;;		_i2c_restartWrite
  4717 ;;		_mssp1_setIRQ
  4718 ;;		_rd1RegCompleteHandler
  4719 ;;		_rd2RegCompleteHandler
  4720 ;;		_rdBlkRegCompleteHandler
  4721 ;;		_returnReset
  4722 ;;		_returnStop
  4723 ;;		_wr1RegCompleteHandler
  4724 ;;		_wr2RegCompleteHandler
  4725 ;; This function is called by:
  4726 ;;		_i2c_ISR
  4727 ;;		i2_i2c_ISR
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text33
  4732  000B14                     __ptext33:
  4733                           	opt stack 0
  4734  000B14                     _do_I2C_TX_EMPTY:
  4735                           	opt stack 0
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;Skip over the trampoline to the duplicate function for level 2
  4739  000B14  B247               	btfsc	btemp,1,c
  4740  000B16  EFB9  F005         	goto	i2_do_I2C_TX_EMPTY
  4741  000B1A                     _do_I2C_TX_EMPTY$intlevel0:
  4742                           	opt stack 13
  4743                           
  4744                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  4745                           
  4746                           ;incstack = 0
  4747  000B1A  0100               	movlb	0	; () banked
  4748  000B1C  8560               	bsf	_i2c_status& (0+255),2,b
  4749                           
  4750                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  4751  000B1E  D00A               	goto	l471
  4752  000B20                     
  4753                           ;i2c_master.c: 388: case i2c_restart_write:
  4754                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  4755                           
  4756                           ; BSR set to: 0
  4757                           
  4758                           ; BSR set to: 0
  4759  000B20  EC83  F009         	call	_do_I2C_SEND_RESTART	;wreg free
  4760  000B24  0012               	return	
  4761  000B26                     
  4762                           ;i2c_master.c: 391: mssp1_setIRQ();
  4763  000B26  ECF4  F009         	call	_mssp1_setIRQ	;wreg free
  4764                           
  4765                           ;i2c_master.c: 392: return I2C_TX;
  4766  000B2A  0E03               	movlw	3
  4767  000B2C  0012               	return	
  4768  000B2E                     
  4769                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  4770                           
  4771                           ;i2c_master.c: 394: case i2c_stop:
  4772  000B2E  EC7C  F009         	call	_do_I2C_SEND_STOP	;wreg free
  4773                           
  4774                           ;i2c_master.c: 396: }
  4775  000B32  0012               	return	
  4776  000B34                     l471:
  4777  000B34  C07E  F021         	movff	_i2c_status+30,returnStop@p
  4778  000B38  C07F  F022         	movff	_i2c_status+31,returnStop@p+1
  4779  000B3C  EE20  F06C         	lfsr	2,_i2c_status+12
  4780  000B40  D801               	call	u2048
  4781  000B42  D00A               	goto	u2049
  4782  000B44                     u2048:
  4783  000B44  0005               	push	
  4784  000B46  6EFA               	movwf	pclath,c
  4785  000B48  50DE               	movf	postinc2,w,c
  4786  000B4A  6EFD               	movwf	tosl,c
  4787  000B4C  50DE               	movf	postinc2,w,c
  4788  000B4E  6EFE               	movwf	tosh,c
  4789  000B50  50DE               	movf	postinc2,w,c
  4790  000B52  6EFF               	movwf	tosu,c
  4791  000B54  50FA               	movf	pclath,w,c
  4792  000B56  0012               	return		;indir
  4793  000B58                     u2049:
  4794                           
  4795                           ; Switch size 1, requested type "space"
  4796                           ; Number of cases is 4, Range of values is 1 to 4
  4797                           ; switch strategies available:
  4798                           ; Name         Instructions Cycles
  4799                           ; simple_byte           13     7 (average)
  4800                           ;	Chosen strategy is simple_byte
  4801  000B58  0A01               	xorlw	1	; case 1
  4802  000B5A  B4D8               	btfsc	status,2,c
  4803  000B5C  D7E8               	goto	l476
  4804  000B5E  0A03               	xorlw	3	; case 2
  4805  000B60  B4D8               	btfsc	status,2,c
  4806  000B62  D7DE               	goto	l472
  4807  000B64  0A01               	xorlw	1	; case 3
  4808  000B66  B4D8               	btfsc	status,2,c
  4809  000B68  D7DB               	goto	l472
  4810  000B6A  0A07               	xorlw	7	; case 4
  4811  000B6C  B4D8               	btfsc	status,2,c
  4812  000B6E  D7DB               	goto	l475
  4813  000B70  D7DE               	goto	l476
  4814  000B72                     __end_of_do_I2C_TX_EMPTY:
  4815                           	opt stack 0
  4816                           tosu	equ	0xFFF
  4817                           tosh	equ	0xFFE
  4818                           tosl	equ	0xFFD
  4819                           pclath	equ	0xFFA
  4820                           tblptru	equ	0xFF8
  4821                           tblptrh	equ	0xFF7
  4822                           tblptrl	equ	0xFF6
  4823                           tablat	equ	0xFF5
  4824                           prodh	equ	0xFF4
  4825                           prodl	equ	0xFF3
  4826                           intcon	equ	0xFF2
  4827                           postinc0	equ	0xFEE
  4828                           wreg	equ	0xFE8
  4829                           indf1	equ	0xFE7
  4830                           postdec1	equ	0xFE5
  4831                           plusw1	equ	0xFE3
  4832                           fsr1h	equ	0xFE2
  4833                           fsr1l	equ	0xFE1
  4834                           indf2	equ	0xFDF
  4835                           postinc2	equ	0xFDE
  4836                           plusw2	equ	0xFDB
  4837                           fsr2h	equ	0xFDA
  4838                           fsr2l	equ	0xFD9
  4839                           status	equ	0xFD8
  4840                           
  4841 ;; *************** function _mssp1_setIRQ *****************
  4842 ;; Defined at:
  4843 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;		None
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		None
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4861 ;;Total ram usage:        0 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    6
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_do_I2C_TX_EMPTY
  4868 ;; This function uses a non-reentrant model
  4869 ;;
  4870                           
  4871                           	psect	text34
  4872  0013E8                     __ptext34:
  4873                           	opt stack 0
  4874  0013E8                     _mssp1_setIRQ:
  4875                           	opt stack 15
  4876                           
  4877                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  4878                           
  4879                           ;incstack = 0
  4880  0013E8  010E               	movlb	14	; () banked
  4881  0013EA  81CD               	bsf	205,0,b	;volatile
  4882                           
  4883                           ; BSR set to: 14
  4884  0013EC  0012               	return		;funcret
  4885  0013EE                     __end_of_mssp1_setIRQ:
  4886                           	opt stack 0
  4887                           tosu	equ	0xFFF
  4888                           tosh	equ	0xFFE
  4889                           tosl	equ	0xFFD
  4890                           pclath	equ	0xFFA
  4891                           tblptru	equ	0xFF8
  4892                           tblptrh	equ	0xFF7
  4893                           tblptrl	equ	0xFF6
  4894                           tablat	equ	0xFF5
  4895                           prodh	equ	0xFF4
  4896                           prodl	equ	0xFF3
  4897                           intcon	equ	0xFF2
  4898                           postinc0	equ	0xFEE
  4899                           wreg	equ	0xFE8
  4900                           indf1	equ	0xFE7
  4901                           postdec1	equ	0xFE5
  4902                           plusw1	equ	0xFE3
  4903                           fsr1h	equ	0xFE2
  4904                           fsr1l	equ	0xFE1
  4905                           indf2	equ	0xFDF
  4906                           postinc2	equ	0xFDE
  4907                           plusw2	equ	0xFDB
  4908                           fsr2h	equ	0xFDA
  4909                           fsr2l	equ	0xFD9
  4910                           status	equ	0xFD8
  4911                           
  4912 ;; *************** function _i2c1_driver_isNACK *****************
  4913 ;; Defined at:
  4914 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;		None               void
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4932 ;;Total ram usage:        1 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    6
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_do_I2C_TX
  4939 ;;		_i2c_ISR
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text35
  4944  0011F8                     __ptext35:
  4945                           	opt stack 0
  4946  0011F8                     _i2c1_driver_isNACK:
  4947                           	opt stack 16
  4948                           
  4949                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  4950                           
  4951                           ; BSR set to: 14
  4952                           ;incstack = 0
  4953  0011F8  5097               	movf	3991,w,c	;volatile
  4954  0011FA  0BBF               	andlw	-65
  4955  0011FC  0940               	iorlw	64
  4956  0011FE  6E97               	movwf	3991,c	;volatile
  4957  001200  3897               	swapf	3991,w,c	;volatile
  4958  001202  32E8               	rrcf	wreg,f,c
  4959  001204  32E8               	rrcf	wreg,f,c
  4960  001206  0B01               	andlw	1
  4961  001208  6E16               	movwf	??_i2c1_driver_isNACK& (0+255),c
  4962  00120A  3016               	rrcf	??_i2c1_driver_isNACK,w,c
  4963  00120C  0012               	return	
  4964  00120E                     __end_of_i2c1_driver_isNACK:
  4965                           	opt stack 0
  4966                           tosu	equ	0xFFF
  4967                           tosh	equ	0xFFE
  4968                           tosl	equ	0xFFD
  4969                           pclath	equ	0xFFA
  4970                           tblptru	equ	0xFF8
  4971                           tblptrh	equ	0xFF7
  4972                           tblptrl	equ	0xFF6
  4973                           tablat	equ	0xFF5
  4974                           prodh	equ	0xFF4
  4975                           prodl	equ	0xFF3
  4976                           intcon	equ	0xFF2
  4977                           postinc0	equ	0xFEE
  4978                           wreg	equ	0xFE8
  4979                           indf1	equ	0xFE7
  4980                           postdec1	equ	0xFE5
  4981                           plusw1	equ	0xFE3
  4982                           fsr1h	equ	0xFE2
  4983                           fsr1l	equ	0xFE1
  4984                           indf2	equ	0xFDF
  4985                           postinc2	equ	0xFDE
  4986                           plusw2	equ	0xFDB
  4987                           fsr2h	equ	0xFDA
  4988                           fsr2l	equ	0xFD9
  4989                           status	equ	0xFD8
  4990                           
  4991 ;; *************** function _i2c1_driver_TXData *****************
  4992 ;; Defined at:
  4993 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  d               1    wreg     unsigned char 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  d               1   21[COMRAM] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5011 ;;Total ram usage:        1 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; Hardware stack levels required when called:    6
  5014 ;; This function calls:
  5015 ;;		Nothing
  5016 ;; This function is called by:
  5017 ;;		_do_I2C_SEND_ADR_READ
  5018 ;;		_do_I2C_SEND_ADR_WRITE
  5019 ;;		_do_I2C_TX
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text36
  5024  0013A0                     __ptext36:
  5025                           	opt stack 0
  5026  0013A0                     _i2c1_driver_TXData:
  5027                           	opt stack 15
  5028                           
  5029                           ;incstack = 0
  5030                           ;i2c1_driver_TXData@d stored from wreg
  5031  0013A0  6E16               	movwf	i2c1_driver_TXData@d,c
  5032                           
  5033                           ;i2c1_driver.c: 188: SSP1BUF = d;
  5034  0013A2  C016  FF92         	movff	i2c1_driver_TXData@d,3986	;volatile
  5035  0013A6  0012               	return		;funcret
  5036  0013A8                     __end_of_i2c1_driver_TXData:
  5037                           	opt stack 0
  5038                           tosu	equ	0xFFF
  5039                           tosh	equ	0xFFE
  5040                           tosl	equ	0xFFD
  5041                           pclath	equ	0xFFA
  5042                           tblptru	equ	0xFF8
  5043                           tblptrh	equ	0xFF7
  5044                           tblptrl	equ	0xFF6
  5045                           tablat	equ	0xFF5
  5046                           prodh	equ	0xFF4
  5047                           prodl	equ	0xFF3
  5048                           intcon	equ	0xFF2
  5049                           postinc0	equ	0xFEE
  5050                           wreg	equ	0xFE8
  5051                           indf1	equ	0xFE7
  5052                           postdec1	equ	0xFE5
  5053                           plusw1	equ	0xFE3
  5054                           fsr1h	equ	0xFE2
  5055                           fsr1l	equ	0xFE1
  5056                           indf2	equ	0xFDF
  5057                           postinc2	equ	0xFDE
  5058                           plusw2	equ	0xFDB
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function _i2c1_driver_getRXData *****************
  5064 ;; Defined at:
  5065 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      unsigned char 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5083 ;;Total ram usage:        0 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    6
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_do_I2C_RX
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text37
  5094  00142A                     __ptext37:
  5095                           	opt stack 0
  5096  00142A                     _i2c1_driver_getRXData:
  5097                           	opt stack 15
  5098                           
  5099                           ;i2c1_driver.c: 173: return SSP1BUF;
  5100                           
  5101                           ;incstack = 0
  5102  00142A  5092               	movf	3986,w,c	;volatile
  5103  00142C  0012               	return	
  5104  00142E                     __end_of_i2c1_driver_getRXData:
  5105                           	opt stack 0
  5106                           tosu	equ	0xFFF
  5107                           tosh	equ	0xFFE
  5108                           tosl	equ	0xFFD
  5109                           pclath	equ	0xFFA
  5110                           tblptru	equ	0xFF8
  5111                           tblptrh	equ	0xFF7
  5112                           tblptrl	equ	0xFF6
  5113                           tablat	equ	0xFF5
  5114                           prodh	equ	0xFF4
  5115                           prodl	equ	0xFF3
  5116                           intcon	equ	0xFF2
  5117                           postinc0	equ	0xFEE
  5118                           wreg	equ	0xFE8
  5119                           indf1	equ	0xFE7
  5120                           postdec1	equ	0xFE5
  5121                           plusw1	equ	0xFE3
  5122                           fsr1h	equ	0xFE2
  5123                           fsr1l	equ	0xFE1
  5124                           indf2	equ	0xFDF
  5125                           postinc2	equ	0xFDE
  5126                           plusw2	equ	0xFDB
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function _i2c1_driver_sendNACK *****************
  5132 ;; Defined at:
  5133 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		None
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    6
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_do_I2C_DO_NACK_STOP
  5158 ;;		_do_I2C_DO_NACK_RESTART
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text38
  5163  0013EE                     __ptext38:
  5164                           	opt stack 0
  5165  0013EE                     _i2c1_driver_sendNACK:
  5166                           	opt stack 14
  5167                           
  5168                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  5169                           
  5170                           ;incstack = 0
  5171  0013EE  8A97               	bsf	3991,5,c	;volatile
  5172                           
  5173                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  5174  0013F0  8897               	bsf	3991,4,c	;volatile
  5175  0013F2  0012               	return		;funcret
  5176  0013F4                     __end_of_i2c1_driver_sendNACK:
  5177                           	opt stack 0
  5178                           tosu	equ	0xFFF
  5179                           tosh	equ	0xFFE
  5180                           tosl	equ	0xFFD
  5181                           pclath	equ	0xFFA
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           intcon	equ	0xFF2
  5189                           postinc0	equ	0xFEE
  5190                           wreg	equ	0xFE8
  5191                           indf1	equ	0xFE7
  5192                           postdec1	equ	0xFE5
  5193                           plusw1	equ	0xFE3
  5194                           fsr1h	equ	0xFE2
  5195                           fsr1l	equ	0xFE1
  5196                           indf2	equ	0xFDF
  5197                           postinc2	equ	0xFDE
  5198                           plusw2	equ	0xFDB
  5199                           fsr2h	equ	0xFDA
  5200                           fsr2l	equ	0xFD9
  5201                           status	equ	0xFD8
  5202                           
  5203 ;; *************** function _i2c1_driver_resetBus *****************
  5204 ;; Defined at:
  5205 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		None
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;Total ram usage:        0 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    6
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_do_I2C_RESET
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text39
  5234  00145E                     __ptext39:
  5235                           	opt stack 0
  5236  00145E                     _i2c1_driver_resetBus:
  5237                           	opt stack 15
  5238                           
  5239                           ;incstack = 0
  5240  00145E  0012               	return		;funcret
  5241  001460                     __end_of_i2c1_driver_resetBus:
  5242                           	opt stack 0
  5243                           tosu	equ	0xFFF
  5244                           tosh	equ	0xFFE
  5245                           tosl	equ	0xFFD
  5246                           pclath	equ	0xFFA
  5247                           tblptru	equ	0xFF8
  5248                           tblptrh	equ	0xFF7
  5249                           tblptrl	equ	0xFF6
  5250                           tablat	equ	0xFF5
  5251                           prodh	equ	0xFF4
  5252                           prodl	equ	0xFF3
  5253                           intcon	equ	0xFF2
  5254                           postinc0	equ	0xFEE
  5255                           wreg	equ	0xFE8
  5256                           indf1	equ	0xFE7
  5257                           postdec1	equ	0xFE5
  5258                           plusw1	equ	0xFE3
  5259                           fsr1h	equ	0xFE2
  5260                           fsr1l	equ	0xFE1
  5261                           indf2	equ	0xFDF
  5262                           postinc2	equ	0xFDE
  5263                           plusw2	equ	0xFDB
  5264                           fsr2h	equ	0xFDA
  5265                           fsr2l	equ	0xFD9
  5266                           status	equ	0xFD8
  5267                           
  5268 ;; *************** function _i2c1_driver_startRX *****************
  5269 ;; Defined at:
  5270 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		None
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    6
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_do_I2C_RCEN
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text40
  5299  00142E                     __ptext40:
  5300                           	opt stack 0
  5301  00142E                     _i2c1_driver_startRX:
  5302                           	opt stack 15
  5303                           
  5304                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  5305                           
  5306                           ;incstack = 0
  5307  00142E  8697               	bsf	3991,3,c	;volatile
  5308  001430  0012               	return		;funcret
  5309  001432                     __end_of_i2c1_driver_startRX:
  5310                           	opt stack 0
  5311                           tosu	equ	0xFFF
  5312                           tosh	equ	0xFFE
  5313                           tosl	equ	0xFFD
  5314                           pclath	equ	0xFFA
  5315                           tblptru	equ	0xFF8
  5316                           tblptrh	equ	0xFF7
  5317                           tblptrl	equ	0xFF6
  5318                           tablat	equ	0xFF5
  5319                           prodh	equ	0xFF4
  5320                           prodl	equ	0xFF3
  5321                           intcon	equ	0xFF2
  5322                           postinc0	equ	0xFEE
  5323                           wreg	equ	0xFE8
  5324                           indf1	equ	0xFE7
  5325                           postdec1	equ	0xFE5
  5326                           plusw1	equ	0xFE3
  5327                           fsr1h	equ	0xFE2
  5328                           fsr1l	equ	0xFE1
  5329                           indf2	equ	0xFDF
  5330                           postinc2	equ	0xFDE
  5331                           plusw2	equ	0xFDB
  5332                           fsr2h	equ	0xFDA
  5333                           fsr2l	equ	0xFD9
  5334                           status	equ	0xFD8
  5335                           
  5336 ;; *************** function _rdBlkRegCompleteHandler *****************
  5337 ;; Defined at:
  5338 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  p               2   32[COMRAM] PTR void 
  5341 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5342 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      enum E97
  5347 ;; Registers used:
  5348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5358 ;;Total ram usage:        2 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    8
  5361 ;; This function calls:
  5362 ;;		_i2c_setBuffer
  5363 ;;		_i2c_setDataCompleteCallback
  5364 ;; This function is called by:
  5365 ;;		_i2c_readDataBlock
  5366 ;;		_do_I2C_DO_ADDRESS_NACK
  5367 ;;		_do_I2C_TX
  5368 ;;		_do_I2C_RX
  5369 ;;		_do_I2C_TX_EMPTY
  5370 ;;		i2_do_I2C_DO_ADDRESS_NACK
  5371 ;;		i2_do_I2C_TX
  5372 ;;		i2_do_I2C_RX
  5373 ;;		i2_do_I2C_TX_EMPTY
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text41
  5378  000CB0                     __ptext41:
  5379                           	opt stack 0
  5380  000CB0                     _rdBlkRegCompleteHandler:
  5381                           	opt stack 0
  5382                           
  5383                           ;Skip over the trampoline to the duplicate function for level 2
  5384  000CB0  B247               	btfsc	btemp,1,c
  5385  000CB2  EFC5  F006         	goto	i2_rdBlkRegCompleteHandler
  5386  000CB6                     _rdBlkRegCompleteHandler$intlevel0:
  5387                           	opt stack 13
  5388                           
  5389                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  5390                           
  5391                           ;incstack = 0
  5392  000CB6  EE20 F002          	lfsr	2,2
  5393  000CBA  5021               	movf	rdBlkRegCompleteHandler@p,w,c
  5394  000CBC  26D9               	addwf	fsr2l,f,c
  5395  000CBE  5022               	movf	rdBlkRegCompleteHandler@p+1,w,c
  5396  000CC0  22DA               	addwfc	fsr2h,f,c
  5397  000CC2  CFDE F016          	movff	postinc2,i2c_setBuffer@buffer
  5398  000CC6  CFDD F017          	movff	postdec2,i2c_setBuffer@buffer+1
  5399  000CCA  C021  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
  5400  000CCE  C022  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
  5401  000CD2  CFDE F018          	movff	postinc2,i2c_setBuffer@bufferSize
  5402  000CD6  CFDD F019          	movff	postdec2,i2c_setBuffer@bufferSize+1
  5403  000CDA  EC86  F008         	call	_i2c_setBuffer	;wreg free
  5404                           
  5405                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  5406  000CDE  0E00               	movlw	0
  5407  000CE0  6E1C               	movwf	i2c_setDataCompleteCallback@cb,c
  5408  000CE2  0E00               	movlw	0
  5409  000CE4  6E1D               	movwf	i2c_setDataCompleteCallback@cb+1,c
  5410  000CE6  0E00               	movlw	0
  5411  000CE8  6E1E               	movwf	i2c_setDataCompleteCallback@cb+2,c
  5412  000CEA  0E00               	movlw	0
  5413  000CEC  6E1F               	movwf	i2c_setDataCompleteCallback@p,c
  5414  000CEE  0E00               	movlw	0
  5415  000CF0  6E20               	movwf	i2c_setDataCompleteCallback@p+1,c
  5416  000CF2  EC4F  F008         	call	_i2c_setDataCompleteCallback	;wreg free
  5417                           
  5418                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  5419  000CF6  0E02               	movlw	2
  5420  000CF8  0012               	return	
  5421  000CFA                     __end_of_rdBlkRegCompleteHandler:
  5422                           	opt stack 0
  5423                           tosu	equ	0xFFF
  5424                           tosh	equ	0xFFE
  5425                           tosl	equ	0xFFD
  5426                           pclath	equ	0xFFA
  5427                           tblptru	equ	0xFF8
  5428                           tblptrh	equ	0xFF7
  5429                           tblptrl	equ	0xFF6
  5430                           tablat	equ	0xFF5
  5431                           prodh	equ	0xFF4
  5432                           prodl	equ	0xFF3
  5433                           intcon	equ	0xFF2
  5434                           postinc0	equ	0xFEE
  5435                           wreg	equ	0xFE8
  5436                           indf1	equ	0xFE7
  5437                           postdec1	equ	0xFE5
  5438                           plusw1	equ	0xFE3
  5439                           fsr1h	equ	0xFE2
  5440                           fsr1l	equ	0xFE1
  5441                           indf2	equ	0xFDF
  5442                           postinc2	equ	0xFDE
  5443                           postdec2	equ	0xFDD
  5444                           plusw2	equ	0xFDB
  5445                           fsr2h	equ	0xFDA
  5446                           fsr2l	equ	0xFD9
  5447                           status	equ	0xFD8
  5448                           
  5449 ;; *************** function _rd2RegCompleteHandler *****************
  5450 ;; Defined at:
  5451 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  p               2   32[COMRAM] PTR void 
  5454 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5455 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      enum E97
  5460 ;; Registers used:
  5461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;Total ram usage:        2 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    8
  5474 ;; This function calls:
  5475 ;;		_i2c_setBuffer
  5476 ;;		_i2c_setDataCompleteCallback
  5477 ;; This function is called by:
  5478 ;;		_i2c_read2ByteRegister
  5479 ;;		_do_I2C_DO_ADDRESS_NACK
  5480 ;;		_do_I2C_TX
  5481 ;;		_do_I2C_RX
  5482 ;;		_do_I2C_TX_EMPTY
  5483 ;;		i2_do_I2C_DO_ADDRESS_NACK
  5484 ;;		i2_do_I2C_TX
  5485 ;;		i2_do_I2C_RX
  5486 ;;		i2_do_I2C_TX_EMPTY
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text42
  5491  000E10                     __ptext42:
  5492                           	opt stack 0
  5493  000E10                     _rd2RegCompleteHandler:
  5494                           	opt stack 0
  5495                           
  5496                           ;Skip over the trampoline to the duplicate function for level 2
  5497  000E10  B247               	btfsc	btemp,1,c
  5498  000E12  EFBE  F007         	goto	i2_rd2RegCompleteHandler
  5499  000E16                     _rd2RegCompleteHandler$intlevel0:
  5500                           	opt stack 13
  5501                           
  5502                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  5503                           
  5504                           ;incstack = 0
  5505  000E16  C021  F016         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
  5506  000E1A  C022  F017         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  5507  000E1E  0E00               	movlw	0
  5508  000E20  6E19               	movwf	i2c_setBuffer@bufferSize+1,c
  5509  000E22  0E02               	movlw	2
  5510  000E24  6E18               	movwf	i2c_setBuffer@bufferSize,c
  5511  000E26  EC86  F008         	call	_i2c_setBuffer	;wreg free
  5512                           
  5513                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  5514  000E2A  0E00               	movlw	0
  5515  000E2C  6E1C               	movwf	i2c_setDataCompleteCallback@cb,c
  5516  000E2E  0E00               	movlw	0
  5517  000E30  6E1D               	movwf	i2c_setDataCompleteCallback@cb+1,c
  5518  000E32  0E00               	movlw	0
  5519  000E34  6E1E               	movwf	i2c_setDataCompleteCallback@cb+2,c
  5520  000E36  0E00               	movlw	0
  5521  000E38  6E1F               	movwf	i2c_setDataCompleteCallback@p,c
  5522  000E3A  0E00               	movlw	0
  5523  000E3C  6E20               	movwf	i2c_setDataCompleteCallback@p+1,c
  5524  000E3E  EC4F  F008         	call	_i2c_setDataCompleteCallback	;wreg free
  5525                           
  5526                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  5527  000E42  0E02               	movlw	2
  5528  000E44  0012               	return	
  5529  000E46                     __end_of_rd2RegCompleteHandler:
  5530                           	opt stack 0
  5531                           tosu	equ	0xFFF
  5532                           tosh	equ	0xFFE
  5533                           tosl	equ	0xFFD
  5534                           pclath	equ	0xFFA
  5535                           tblptru	equ	0xFF8
  5536                           tblptrh	equ	0xFF7
  5537                           tblptrl	equ	0xFF6
  5538                           tablat	equ	0xFF5
  5539                           prodh	equ	0xFF4
  5540                           prodl	equ	0xFF3
  5541                           intcon	equ	0xFF2
  5542                           postinc0	equ	0xFEE
  5543                           wreg	equ	0xFE8
  5544                           indf1	equ	0xFE7
  5545                           postdec1	equ	0xFE5
  5546                           plusw1	equ	0xFE3
  5547                           fsr1h	equ	0xFE2
  5548                           fsr1l	equ	0xFE1
  5549                           indf2	equ	0xFDF
  5550                           postinc2	equ	0xFDE
  5551                           postdec2	equ	0xFDD
  5552                           plusw2	equ	0xFDB
  5553                           fsr2h	equ	0xFDA
  5554                           fsr2l	equ	0xFD9
  5555                           status	equ	0xFD8
  5556                           
  5557 ;; *************** function _rd1RegCompleteHandler *****************
  5558 ;; Defined at:
  5559 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  p               2   32[COMRAM] PTR void 
  5562 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5563 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  1    wreg      enum E97
  5568 ;; Registers used:
  5569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5579 ;;Total ram usage:        2 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:    8
  5582 ;; This function calls:
  5583 ;;		_i2c_setBuffer
  5584 ;;		_i2c_setDataCompleteCallback
  5585 ;; This function is called by:
  5586 ;;		_i2c_read1ByteRegister
  5587 ;;		_do_I2C_DO_ADDRESS_NACK
  5588 ;;		_do_I2C_TX
  5589 ;;		_do_I2C_RX
  5590 ;;		_do_I2C_TX_EMPTY
  5591 ;;		i2_do_I2C_DO_ADDRESS_NACK
  5592 ;;		i2_do_I2C_TX
  5593 ;;		i2_do_I2C_RX
  5594 ;;		i2_do_I2C_TX_EMPTY
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text43
  5599  000E46                     __ptext43:
  5600                           	opt stack 0
  5601  000E46                     _rd1RegCompleteHandler:
  5602                           	opt stack 0
  5603                           
  5604                           ;Skip over the trampoline to the duplicate function for level 2
  5605  000E46  B247               	btfsc	btemp,1,c
  5606  000E48  EFD6  F007         	goto	i2_rd1RegCompleteHandler
  5607  000E4C                     _rd1RegCompleteHandler$intlevel0:
  5608                           	opt stack 13
  5609                           
  5610                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  5611                           
  5612                           ;incstack = 0
  5613  000E4C  C021  F016         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
  5614  000E50  C022  F017         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  5615  000E54  0E00               	movlw	0
  5616  000E56  6E19               	movwf	i2c_setBuffer@bufferSize+1,c
  5617  000E58  0E01               	movlw	1
  5618  000E5A  6E18               	movwf	i2c_setBuffer@bufferSize,c
  5619  000E5C  EC86  F008         	call	_i2c_setBuffer	;wreg free
  5620                           
  5621                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  5622  000E60  0E00               	movlw	0
  5623  000E62  6E1C               	movwf	i2c_setDataCompleteCallback@cb,c
  5624  000E64  0E00               	movlw	0
  5625  000E66  6E1D               	movwf	i2c_setDataCompleteCallback@cb+1,c
  5626  000E68  0E00               	movlw	0
  5627  000E6A  6E1E               	movwf	i2c_setDataCompleteCallback@cb+2,c
  5628  000E6C  0E00               	movlw	0
  5629  000E6E  6E1F               	movwf	i2c_setDataCompleteCallback@p,c
  5630  000E70  0E00               	movlw	0
  5631  000E72  6E20               	movwf	i2c_setDataCompleteCallback@p+1,c
  5632  000E74  EC4F  F008         	call	_i2c_setDataCompleteCallback	;wreg free
  5633                           
  5634                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  5635  000E78  0E02               	movlw	2
  5636  000E7A  0012               	return	
  5637  000E7C                     __end_of_rd1RegCompleteHandler:
  5638                           	opt stack 0
  5639                           tosu	equ	0xFFF
  5640                           tosh	equ	0xFFE
  5641                           tosl	equ	0xFFD
  5642                           pclath	equ	0xFFA
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           prodh	equ	0xFF4
  5648                           prodl	equ	0xFF3
  5649                           intcon	equ	0xFF2
  5650                           postinc0	equ	0xFEE
  5651                           wreg	equ	0xFE8
  5652                           indf1	equ	0xFE7
  5653                           postdec1	equ	0xFE5
  5654                           plusw1	equ	0xFE3
  5655                           fsr1h	equ	0xFE2
  5656                           fsr1l	equ	0xFE1
  5657                           indf2	equ	0xFDF
  5658                           postinc2	equ	0xFDE
  5659                           postdec2	equ	0xFDD
  5660                           plusw2	equ	0xFDB
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8
  5664                           
  5665 ;; *************** function _wr1RegCompleteHandler *****************
  5666 ;; Defined at:
  5667 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  p               2   32[COMRAM] PTR void 
  5670 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5671 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      enum E97
  5676 ;; Registers used:
  5677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5687 ;;Total ram usage:        2 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    8
  5690 ;; This function calls:
  5691 ;;		_i2c_setBuffer
  5692 ;;		_i2c_setDataCompleteCallback
  5693 ;; This function is called by:
  5694 ;;		_i2c_write1ByteRegister
  5695 ;;		_do_I2C_DO_ADDRESS_NACK
  5696 ;;		_do_I2C_TX
  5697 ;;		_do_I2C_RX
  5698 ;;		_do_I2C_TX_EMPTY
  5699 ;;		i2_do_I2C_DO_ADDRESS_NACK
  5700 ;;		i2_do_I2C_TX
  5701 ;;		i2_do_I2C_RX
  5702 ;;		i2_do_I2C_TX_EMPTY
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text44
  5707  000E7C                     __ptext44:
  5708                           	opt stack 0
  5709  000E7C                     _wr1RegCompleteHandler:
  5710                           	opt stack 0
  5711                           
  5712                           ;Skip over the trampoline to the duplicate function for level 2
  5713  000E7C  B247               	btfsc	btemp,1,c
  5714  000E7E  EFEE  F007         	goto	i2_wr1RegCompleteHandler
  5715  000E82                     _wr1RegCompleteHandler$intlevel0:
  5716                           	opt stack 13
  5717                           
  5718                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  5719                           
  5720                           ;incstack = 0
  5721  000E82  C021  F016         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
  5722  000E86  C022  F017         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  5723  000E8A  0E00               	movlw	0
  5724  000E8C  6E19               	movwf	i2c_setBuffer@bufferSize+1,c
  5725  000E8E  0E01               	movlw	1
  5726  000E90  6E18               	movwf	i2c_setBuffer@bufferSize,c
  5727  000E92  EC86  F008         	call	_i2c_setBuffer	;wreg free
  5728                           
  5729                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  5730  000E96  0E00               	movlw	0
  5731  000E98  6E1C               	movwf	i2c_setDataCompleteCallback@cb,c
  5732  000E9A  0E00               	movlw	0
  5733  000E9C  6E1D               	movwf	i2c_setDataCompleteCallback@cb+1,c
  5734  000E9E  0E00               	movlw	0
  5735  000EA0  6E1E               	movwf	i2c_setDataCompleteCallback@cb+2,c
  5736  000EA2  0E00               	movlw	0
  5737  000EA4  6E1F               	movwf	i2c_setDataCompleteCallback@p,c
  5738  000EA6  0E00               	movlw	0
  5739  000EA8  6E20               	movwf	i2c_setDataCompleteCallback@p+1,c
  5740  000EAA  EC4F  F008         	call	_i2c_setDataCompleteCallback	;wreg free
  5741                           
  5742                           ;i2c_simple_master.c: 35: return i2c_continue;
  5743  000EAE  0E04               	movlw	4
  5744  000EB0  0012               	return	
  5745  000EB2                     __end_of_wr1RegCompleteHandler:
  5746                           	opt stack 0
  5747                           tosu	equ	0xFFF
  5748                           tosh	equ	0xFFE
  5749                           tosl	equ	0xFFD
  5750                           pclath	equ	0xFFA
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           intcon	equ	0xFF2
  5758                           postinc0	equ	0xFEE
  5759                           wreg	equ	0xFE8
  5760                           indf1	equ	0xFE7
  5761                           postdec1	equ	0xFE5
  5762                           plusw1	equ	0xFE3
  5763                           fsr1h	equ	0xFE2
  5764                           fsr1l	equ	0xFE1
  5765                           indf2	equ	0xFDF
  5766                           postinc2	equ	0xFDE
  5767                           postdec2	equ	0xFDD
  5768                           plusw2	equ	0xFDB
  5769                           fsr2h	equ	0xFDA
  5770                           fsr2l	equ	0xFD9
  5771                           status	equ	0xFD8
  5772                           
  5773 ;; *************** function _i2c_restartWrite *****************
  5774 ;; Defined at:
  5775 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  p               2   32[COMRAM] PTR void 
  5778 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5779 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      enum E96
  5784 ;; Registers used:
  5785 ;;		wreg
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5795 ;;Total ram usage:        2 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    6
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_i2c_writeNBytes
  5802 ;;		_i2c_write1ByteRegister
  5803 ;;		_i2c_read1ByteRegister
  5804 ;;		_i2c_read2ByteRegister
  5805 ;;		_i2c_write2ByteRegister
  5806 ;;		_i2c_readDataBlock
  5807 ;;		_do_I2C_DO_ADDRESS_NACK
  5808 ;;		_do_I2C_TX
  5809 ;;		_do_I2C_RX
  5810 ;;		_do_I2C_TX_EMPTY
  5811 ;;		i2_do_I2C_DO_ADDRESS_NACK
  5812 ;;		i2_do_I2C_TX
  5813 ;;		i2_do_I2C_RX
  5814 ;;		i2_do_I2C_TX_EMPTY
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           	psect	text45
  5819  001372                     __ptext45:
  5820                           	opt stack 0
  5821  001372                     _i2c_restartWrite:
  5822                           	opt stack 0
  5823                           
  5824                           ;Skip over the trampoline to the duplicate function for level 2
  5825  001372  B247               	btfsc	btemp,1,c
  5826  001374  EF25  F00A         	goto	i2_i2c_restartWrite
  5827  001378                     _i2c_restartWrite$intlevel0:
  5828                           	opt stack 15
  5829                           
  5830                           ;i2c_types.c: 37: return i2c_restart_write;
  5831                           
  5832                           ;incstack = 0
  5833  001378  0E03               	movlw	3
  5834  00137A  0012               	return	
  5835  00137C                     __end_of_i2c_restartWrite:
  5836                           	opt stack 0
  5837                           tosu	equ	0xFFF
  5838                           tosh	equ	0xFFE
  5839                           tosl	equ	0xFFD
  5840                           pclath	equ	0xFFA
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodh	equ	0xFF4
  5846                           prodl	equ	0xFF3
  5847                           intcon	equ	0xFF2
  5848                           postinc0	equ	0xFEE
  5849                           wreg	equ	0xFE8
  5850                           indf1	equ	0xFE7
  5851                           postdec1	equ	0xFE5
  5852                           plusw1	equ	0xFE3
  5853                           fsr1h	equ	0xFE2
  5854                           fsr1l	equ	0xFE1
  5855                           indf2	equ	0xFDF
  5856                           postinc2	equ	0xFDE
  5857                           postdec2	equ	0xFDD
  5858                           plusw2	equ	0xFDB
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8
  5862                           
  5863 ;; *************** function _returnReset *****************
  5864 ;; Defined at:
  5865 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;  p               2   32[COMRAM] PTR void 
  5868 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5869 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      enum E11790
  5874 ;; Registers used:
  5875 ;;		wreg
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5885 ;;Total ram usage:        2 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    6
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_i2c_open
  5892 ;;		_do_I2C_DO_ADDRESS_NACK
  5893 ;;		_do_I2C_TX
  5894 ;;		_do_I2C_RX
  5895 ;;		_do_I2C_TX_EMPTY
  5896 ;;		i2_do_I2C_DO_ADDRESS_NACK
  5897 ;;		i2_do_I2C_TX
  5898 ;;		i2_do_I2C_RX
  5899 ;;		i2_do_I2C_TX_EMPTY
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text46
  5904  00137C                     __ptext46:
  5905                           	opt stack 0
  5906  00137C                     _returnReset:
  5907                           	opt stack 0
  5908                           
  5909                           ;Skip over the trampoline to the duplicate function for level 2
  5910  00137C  B247               	btfsc	btemp,1,c
  5911  00137E  EF27  F00A         	goto	i2_returnReset
  5912  001382                     _returnReset$intlevel0:
  5913                           	opt stack 15
  5914                           
  5915                           ;i2c_master.c: 450: return i2c_reset_link;
  5916                           
  5917                           ;incstack = 0
  5918  001382  0E05               	movlw	5
  5919  001384  0012               	return	
  5920  001386                     __end_of_returnReset:
  5921                           	opt stack 0
  5922                           tosu	equ	0xFFF
  5923                           tosh	equ	0xFFE
  5924                           tosl	equ	0xFFD
  5925                           pclath	equ	0xFFA
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           prodh	equ	0xFF4
  5931                           prodl	equ	0xFF3
  5932                           intcon	equ	0xFF2
  5933                           postinc0	equ	0xFEE
  5934                           wreg	equ	0xFE8
  5935                           indf1	equ	0xFE7
  5936                           postdec1	equ	0xFE5
  5937                           plusw1	equ	0xFE3
  5938                           fsr1h	equ	0xFE2
  5939                           fsr1l	equ	0xFE1
  5940                           indf2	equ	0xFDF
  5941                           postinc2	equ	0xFDE
  5942                           postdec2	equ	0xFDD
  5943                           plusw2	equ	0xFDB
  5944                           fsr2h	equ	0xFDA
  5945                           fsr2l	equ	0xFD9
  5946                           status	equ	0xFD8
  5947                           
  5948 ;; *************** function _returnStop *****************
  5949 ;; Defined at:
  5950 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  p               2   32[COMRAM] PTR void 
  5953 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  5954 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;		None
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  1    wreg      enum E11790
  5959 ;; Registers used:
  5960 ;;		wreg
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5970 ;;Total ram usage:        2 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    6
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_i2c_open
  5977 ;;		_setCallBack
  5978 ;;		_do_I2C_DO_ADDRESS_NACK
  5979 ;;		_do_I2C_TX
  5980 ;;		_do_I2C_RX
  5981 ;;		_do_I2C_TX_EMPTY
  5982 ;;		i2_do_I2C_DO_ADDRESS_NACK
  5983 ;;		i2_do_I2C_TX
  5984 ;;		i2_do_I2C_RX
  5985 ;;		i2_do_I2C_TX_EMPTY
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text47
  5990  001386                     __ptext47:
  5991                           	opt stack 0
  5992  001386                     _returnStop:
  5993                           	opt stack 0
  5994                           
  5995                           ;Skip over the trampoline to the duplicate function for level 2
  5996  001386  B247               	btfsc	btemp,1,c
  5997  001388  EF29  F00A         	goto	i2_returnStop
  5998  00138C                     _returnStop$intlevel0:
  5999                           	opt stack 15
  6000                           
  6001                           ;i2c_master.c: 445: return i2c_stop;
  6002                           
  6003                           ;incstack = 0
  6004  00138C  0E01               	movlw	1
  6005  00138E  0012               	return	
  6006  001390                     __end_of_returnStop:
  6007                           	opt stack 0
  6008                           tosu	equ	0xFFF
  6009                           tosh	equ	0xFFE
  6010                           tosl	equ	0xFFD
  6011                           pclath	equ	0xFFA
  6012                           tblptru	equ	0xFF8
  6013                           tblptrh	equ	0xFF7
  6014                           tblptrl	equ	0xFF6
  6015                           tablat	equ	0xFF5
  6016                           prodh	equ	0xFF4
  6017                           prodl	equ	0xFF3
  6018                           intcon	equ	0xFF2
  6019                           postinc0	equ	0xFEE
  6020                           wreg	equ	0xFE8
  6021                           indf1	equ	0xFE7
  6022                           postdec1	equ	0xFE5
  6023                           plusw1	equ	0xFE3
  6024                           fsr1h	equ	0xFE2
  6025                           fsr1l	equ	0xFE1
  6026                           indf2	equ	0xFDF
  6027                           postinc2	equ	0xFDE
  6028                           postdec2	equ	0xFDD
  6029                           plusw2	equ	0xFDB
  6030                           fsr2h	equ	0xFDA
  6031                           fsr2l	equ	0xFD9
  6032                           status	equ	0xFD8
  6033                           
  6034 ;; *************** function _wr2RegCompleteHandler *****************
  6035 ;; Defined at:
  6036 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  p               2   32[COMRAM] PTR void 
  6039 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  6040 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      enum E97
  6045 ;; Registers used:
  6046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6055 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6056 ;;Total ram usage:        2 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    8
  6059 ;; This function calls:
  6060 ;;		_i2c_setBuffer
  6061 ;;		_i2c_setDataCompleteCallback
  6062 ;; This function is called by:
  6063 ;;		_i2c_write2ByteRegister
  6064 ;;		_do_I2C_DO_ADDRESS_NACK
  6065 ;;		_do_I2C_TX
  6066 ;;		_do_I2C_RX
  6067 ;;		_do_I2C_TX_EMPTY
  6068 ;;		i2_do_I2C_DO_ADDRESS_NACK
  6069 ;;		i2_do_I2C_TX
  6070 ;;		i2_do_I2C_RX
  6071 ;;		i2_do_I2C_TX_EMPTY
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text48
  6076  000EB2                     __ptext48:
  6077                           	opt stack 0
  6078  000EB2                     _wr2RegCompleteHandler:
  6079                           	opt stack 0
  6080                           
  6081                           ;Skip over the trampoline to the duplicate function for level 2
  6082  000EB2  B247               	btfsc	btemp,1,c
  6083  000EB4  EF06  F008         	goto	i2_wr2RegCompleteHandler
  6084  000EB8                     _wr2RegCompleteHandler$intlevel0:
  6085                           	opt stack 13
  6086                           
  6087                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  6088                           
  6089                           ;incstack = 0
  6090  000EB8  C021  F016         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
  6091  000EBC  C022  F017         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  6092  000EC0  0E00               	movlw	0
  6093  000EC2  6E19               	movwf	i2c_setBuffer@bufferSize+1,c
  6094  000EC4  0E02               	movlw	2
  6095  000EC6  6E18               	movwf	i2c_setBuffer@bufferSize,c
  6096  000EC8  EC86  F008         	call	_i2c_setBuffer	;wreg free
  6097                           
  6098                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  6099  000ECC  0E00               	movlw	0
  6100  000ECE  6E1C               	movwf	i2c_setDataCompleteCallback@cb,c
  6101  000ED0  0E00               	movlw	0
  6102  000ED2  6E1D               	movwf	i2c_setDataCompleteCallback@cb+1,c
  6103  000ED4  0E00               	movlw	0
  6104  000ED6  6E1E               	movwf	i2c_setDataCompleteCallback@cb+2,c
  6105  000ED8  0E00               	movlw	0
  6106  000EDA  6E1F               	movwf	i2c_setDataCompleteCallback@p,c
  6107  000EDC  0E00               	movlw	0
  6108  000EDE  6E20               	movwf	i2c_setDataCompleteCallback@p+1,c
  6109  000EE0  EC4F  F008         	call	_i2c_setDataCompleteCallback	;wreg free
  6110                           
  6111                           ;i2c_simple_master.c: 114: return i2c_continue;
  6112  000EE4  0E04               	movlw	4
  6113  000EE6  0012               	return	
  6114  000EE8                     __end_of_wr2RegCompleteHandler:
  6115                           	opt stack 0
  6116                           tosu	equ	0xFFF
  6117                           tosh	equ	0xFFE
  6118                           tosl	equ	0xFFD
  6119                           pclath	equ	0xFFA
  6120                           tblptru	equ	0xFF8
  6121                           tblptrh	equ	0xFF7
  6122                           tblptrl	equ	0xFF6
  6123                           tablat	equ	0xFF5
  6124                           prodh	equ	0xFF4
  6125                           prodl	equ	0xFF3
  6126                           intcon	equ	0xFF2
  6127                           postinc0	equ	0xFEE
  6128                           wreg	equ	0xFE8
  6129                           indf1	equ	0xFE7
  6130                           postdec1	equ	0xFE5
  6131                           plusw1	equ	0xFE3
  6132                           fsr1h	equ	0xFE2
  6133                           fsr1l	equ	0xFE1
  6134                           indf2	equ	0xFDF
  6135                           postinc2	equ	0xFDE
  6136                           postdec2	equ	0xFDD
  6137                           plusw2	equ	0xFDB
  6138                           fsr2h	equ	0xFDA
  6139                           fsr2l	equ	0xFD9
  6140                           status	equ	0xFD8
  6141                           
  6142 ;; *************** function _i2c_setDataCompleteCallback *****************
  6143 ;; Defined at:
  6144 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  cb              3   27[COMRAM] PTR FTN(PTR void ,)enum 
  6147 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6148 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  6149 ;;  p               2   30[COMRAM] PTR void 
  6150 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  6151 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6163 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6166 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6167 ;;Total ram usage:        5 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    7
  6170 ;; This function calls:
  6171 ;;		_setCallBack
  6172 ;; This function is called by:
  6173 ;;		_wr1RegCompleteHandler
  6174 ;;		_rd1RegCompleteHandler
  6175 ;;		_rd2RegCompleteHandler
  6176 ;;		_wr2RegCompleteHandler
  6177 ;;		_rdBlkRegCompleteHandler
  6178 ;;		_i2c_write1ByteRegister
  6179 ;;		_i2c_read1ByteRegister
  6180 ;;		_i2c_read2ByteRegister
  6181 ;;		_i2c_write2ByteRegister
  6182 ;;		_i2c_readDataBlock
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text49
  6187  00109E                     __ptext49:
  6188                           	opt stack 0
  6189  00109E                     _i2c_setDataCompleteCallback:
  6190                           	opt stack 13
  6191                           
  6192                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  6193                           
  6194                           ;incstack = 0
  6195  00109E  C01C  F016         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
  6196  0010A2  C01D  F017         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
  6197  0010A6  C01E  F018         	movff	i2c_setDataCompleteCallback@cb+2,setCallBack@cb+2
  6198  0010AA  C01F  F019         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
  6199  0010AE  C020  F01A         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
  6200  0010B2  0E00               	movlw	0
  6201  0010B4  ECD8  F004         	call	_setCallBack
  6202  0010B8  0012               	return		;funcret
  6203  0010BA                     __end_of_i2c_setDataCompleteCallback:
  6204                           	opt stack 0
  6205                           tosu	equ	0xFFF
  6206                           tosh	equ	0xFFE
  6207                           tosl	equ	0xFFD
  6208                           pclath	equ	0xFFA
  6209                           tblptru	equ	0xFF8
  6210                           tblptrh	equ	0xFF7
  6211                           tblptrl	equ	0xFF6
  6212                           tablat	equ	0xFF5
  6213                           prodh	equ	0xFF4
  6214                           prodl	equ	0xFF3
  6215                           intcon	equ	0xFF2
  6216                           postinc0	equ	0xFEE
  6217                           wreg	equ	0xFE8
  6218                           indf1	equ	0xFE7
  6219                           postdec1	equ	0xFE5
  6220                           plusw1	equ	0xFE3
  6221                           fsr1h	equ	0xFE2
  6222                           fsr1l	equ	0xFE1
  6223                           indf2	equ	0xFDF
  6224                           postinc2	equ	0xFDE
  6225                           postdec2	equ	0xFDD
  6226                           plusw2	equ	0xFDB
  6227                           fsr2h	equ	0xFDA
  6228                           fsr2l	equ	0xFD9
  6229                           status	equ	0xFD8
  6230                           
  6231 ;; *************** function _setCallBack *****************
  6232 ;; Defined at:
  6233 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  idx             1    wreg     enum E11974
  6236 ;;  cb              3   21[COMRAM] PTR FTN(PTR void ,)enum 
  6237 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  6238 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  6239 ;;  p               2   24[COMRAM] PTR void 
  6240 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  6241 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  idx             1   26[COMRAM] enum E11974
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      void 
  6246 ;; Registers used:
  6247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6253 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6257 ;;Total ram usage:        6 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:    6
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_i2c_setDataCompleteCallback
  6264 ;;		_i2c_setAddressNACKCallback
  6265 ;;		_i2c_setWriteCollisionCallback
  6266 ;;		_i2c_setDataNACKCallback
  6267 ;;		_i2c_setTimeOutCallback
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text50
  6272  0009B0                     __ptext50:
  6273                           	opt stack 0
  6274  0009B0                     _setCallBack:
  6275                           	opt stack 19
  6276                           
  6277                           ;incstack = 0
  6278                           ;setCallBack@idx stored from wreg
  6279  0009B0  6E1B               	movwf	setCallBack@idx,c
  6280                           
  6281                           ;i2c_master.c: 455: if(cb)
  6282  0009B2  5016               	movf	setCallBack@cb,w,c
  6283  0009B4  1017               	iorwf	setCallBack@cb+1,w,c
  6284  0009B6  1018               	iorwf	setCallBack@cb+2,w,c
  6285  0009B8  B4D8               	btfsc	status,2,c
  6286  0009BA  D01B               	goto	l496
  6287                           
  6288                           ;i2c_master.c: 456: {
  6289                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  6290  0009BC  501B               	movf	setCallBack@idx,w,c
  6291  0009BE  0D03               	mullw	3
  6292  0009C0  0E6C               	movlw	low (_i2c_status+12)
  6293  0009C2  24F3               	addwf	prodl,w,c
  6294  0009C4  6ED9               	movwf	fsr2l,c
  6295  0009C6  0E00               	movlw	high (_i2c_status+12)
  6296  0009C8  20F4               	addwfc	prodh,w,c
  6297  0009CA  6EDA               	movwf	fsr2h,c
  6298  0009CC  C016  FFDE         	movff	setCallBack@cb,postinc2
  6299  0009D0  C017  FFDE         	movff	setCallBack@cb+1,postinc2
  6300  0009D4  C018  FFDE         	movff	setCallBack@cb+2,postinc2
  6301                           
  6302                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  6303  0009D8  501B               	movf	setCallBack@idx,w,c
  6304  0009DA  0D02               	mullw	2
  6305  0009DC  0E7E               	movlw	low (_i2c_status+30)
  6306  0009DE  24F3               	addwf	prodl,w,c
  6307  0009E0  6ED9               	movwf	fsr2l,c
  6308  0009E2  0E00               	movlw	high (_i2c_status+30)
  6309  0009E4  20F4               	addwfc	prodh,w,c
  6310  0009E6  6EDA               	movwf	fsr2h,c
  6311  0009E8  C019  FFDE         	movff	setCallBack@p,postinc2
  6312  0009EC  C01A  FFDD         	movff	setCallBack@p+1,postdec2
  6313                           
  6314                           ;i2c_master.c: 459: }
  6315  0009F0  0012               	return	
  6316  0009F2                     l496:
  6317                           
  6318                           ;i2c_master.c: 460: else
  6319                           ;i2c_master.c: 461: {
  6320                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  6321  0009F2  501B               	movf	setCallBack@idx,w,c
  6322  0009F4  0D03               	mullw	3
  6323  0009F6  0E6C               	movlw	low (_i2c_status+12)
  6324  0009F8  24F3               	addwf	prodl,w,c
  6325  0009FA  6ED9               	movwf	fsr2l,c
  6326  0009FC  0E00               	movlw	high (_i2c_status+12)
  6327  0009FE  20F4               	addwfc	prodh,w,c
  6328  000A00  6EDA               	movwf	fsr2h,c
  6329  000A02  0E86               	movlw	low _returnStop
  6330  000A04  6EDE               	movwf	postinc2,c
  6331  000A06  0E13               	movlw	high _returnStop
  6332  000A08  6EDE               	movwf	postinc2,c
  6333  000A0A  0E00               	movlw	low (_returnStop shr (0+16))
  6334  000A0C  6EDE               	movwf	postinc2,c
  6335                           
  6336                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  6337  000A0E  501B               	movf	setCallBack@idx,w,c
  6338  000A10  0D02               	mullw	2
  6339  000A12  0E7E               	movlw	low (_i2c_status+30)
  6340  000A14  24F3               	addwf	prodl,w,c
  6341  000A16  6ED9               	movwf	fsr2l,c
  6342  000A18  0E00               	movlw	high (_i2c_status+30)
  6343  000A1A  20F4               	addwfc	prodh,w,c
  6344  000A1C  6EDA               	movwf	fsr2h,c
  6345  000A1E  0E00               	movlw	0
  6346  000A20  6EDE               	movwf	postinc2,c
  6347  000A22  0E00               	movlw	0
  6348  000A24  6EDD               	movwf	postdec2,c
  6349  000A26  0012               	return	
  6350  000A28                     __end_of_setCallBack:
  6351                           	opt stack 0
  6352                           tosu	equ	0xFFF
  6353                           tosh	equ	0xFFE
  6354                           tosl	equ	0xFFD
  6355                           pclath	equ	0xFFA
  6356                           tblptru	equ	0xFF8
  6357                           tblptrh	equ	0xFF7
  6358                           tblptrl	equ	0xFF6
  6359                           tablat	equ	0xFF5
  6360                           prodh	equ	0xFF4
  6361                           prodl	equ	0xFF3
  6362                           intcon	equ	0xFF2
  6363                           postinc0	equ	0xFEE
  6364                           wreg	equ	0xFE8
  6365                           indf1	equ	0xFE7
  6366                           postdec1	equ	0xFE5
  6367                           plusw1	equ	0xFE3
  6368                           fsr1h	equ	0xFE2
  6369                           fsr1l	equ	0xFE1
  6370                           indf2	equ	0xFDF
  6371                           postinc2	equ	0xFDE
  6372                           postdec2	equ	0xFDD
  6373                           plusw2	equ	0xFDB
  6374                           fsr2h	equ	0xFDA
  6375                           fsr2l	equ	0xFD9
  6376                           status	equ	0xFD8
  6377                           
  6378 ;; *************** function _i2c_setBuffer *****************
  6379 ;; Defined at:
  6380 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  buffer          2   21[COMRAM] PTR void 
  6383 ;;		 -> readIoExpander@rec(1), readIoExpander@data(2), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), 
  6384 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
  6385 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
  6386 ;;		 -> NULL(0), 
  6387 ;;  bufferSize      2   23[COMRAM] unsigned int 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6402 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6403 ;;Total ram usage:        4 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    6
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_wr1RegCompleteHandler
  6410 ;;		_i2c_writeNBytes
  6411 ;;		_rd1RegCompleteHandler
  6412 ;;		_rd2RegCompleteHandler
  6413 ;;		_wr2RegCompleteHandler
  6414 ;;		_rdBlkRegCompleteHandler
  6415 ;;		_i2c_readNBytes
  6416 ;;		_i2c_write1ByteRegister
  6417 ;;		_i2c_read1ByteRegister
  6418 ;;		_i2c_read2ByteRegister
  6419 ;;		_i2c_write2ByteRegister
  6420 ;;		_i2c_readDataBlock
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           	psect	text51
  6425  00110C                     __ptext51:
  6426                           	opt stack 0
  6427  00110C                     _i2c_setBuffer:
  6428                           	opt stack 20
  6429                           
  6430                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  6431                           
  6432                           ;incstack = 0
  6433  00110C  0100               	movlb	0	; () banked
  6434  00110E  A560               	btfss	_i2c_status& (0+255),2,b
  6435  001110  0012               	return	
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;i2c_master.c: 187: {
  6439                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  6440  001112  C016  F062         	movff	i2c_setBuffer@buffer,_i2c_status+2
  6441  001116  C017  F063         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  6445  00111A  C018  F064         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
  6446  00111E  C019  F065         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  6450  001122  9560               	bcf	_i2c_status& (0+255),2,b
  6451  001124  0012               	return	
  6452  001126                     __end_of_i2c_setBuffer:
  6453                           	opt stack 0
  6454                           tosu	equ	0xFFF
  6455                           tosh	equ	0xFFE
  6456                           tosl	equ	0xFFD
  6457                           pclath	equ	0xFFA
  6458                           tblptru	equ	0xFF8
  6459                           tblptrh	equ	0xFF7
  6460                           tblptrl	equ	0xFF6
  6461                           tablat	equ	0xFF5
  6462                           prodh	equ	0xFF4
  6463                           prodl	equ	0xFF3
  6464                           intcon	equ	0xFF2
  6465                           postinc0	equ	0xFEE
  6466                           wreg	equ	0xFE8
  6467                           indf1	equ	0xFE7
  6468                           postdec1	equ	0xFE5
  6469                           plusw1	equ	0xFE3
  6470                           fsr1h	equ	0xFE2
  6471                           fsr1l	equ	0xFE1
  6472                           indf2	equ	0xFDF
  6473                           postinc2	equ	0xFDE
  6474                           postdec2	equ	0xFDD
  6475                           plusw2	equ	0xFDB
  6476                           fsr2h	equ	0xFDA
  6477                           fsr2l	equ	0xFD9
  6478                           status	equ	0xFD8
  6479                           
  6480 ;; *************** function _i2c1_driver_stop *****************
  6481 ;; Defined at:
  6482 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		None
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:    6
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_do_I2C_SEND_STOP
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text52
  6511  001432                     __ptext52:
  6512                           	opt stack 0
  6513  001432                     _i2c1_driver_stop:
  6514                           	opt stack 14
  6515                           
  6516                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;incstack = 0
  6520  001432  8497               	bsf	3991,2,c	;volatile
  6521  001434  0012               	return		;funcret
  6522  001436                     __end_of_i2c1_driver_stop:
  6523                           	opt stack 0
  6524                           tosu	equ	0xFFF
  6525                           tosh	equ	0xFFE
  6526                           tosl	equ	0xFFD
  6527                           pclath	equ	0xFFA
  6528                           tblptru	equ	0xFF8
  6529                           tblptrh	equ	0xFF7
  6530                           tblptrl	equ	0xFF6
  6531                           tablat	equ	0xFF5
  6532                           prodh	equ	0xFF4
  6533                           prodl	equ	0xFF3
  6534                           intcon	equ	0xFF2
  6535                           postinc0	equ	0xFEE
  6536                           wreg	equ	0xFE8
  6537                           indf1	equ	0xFE7
  6538                           postdec1	equ	0xFE5
  6539                           plusw1	equ	0xFE3
  6540                           fsr1h	equ	0xFE2
  6541                           fsr1l	equ	0xFE1
  6542                           indf2	equ	0xFDF
  6543                           postinc2	equ	0xFDE
  6544                           postdec2	equ	0xFDD
  6545                           plusw2	equ	0xFDB
  6546                           fsr2h	equ	0xFDA
  6547                           fsr2l	equ	0xFD9
  6548                           status	equ	0xFD8
  6549                           
  6550 ;; *************** function _i2c1_driver_restart *****************
  6551 ;; Defined at:
  6552 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;		None
  6555 ;; Auto vars:     Size  Location     Type
  6556 ;;		None
  6557 ;; Return value:  Size  Location     Type
  6558 ;;                  1    wreg      void 
  6559 ;; Registers used:
  6560 ;;		None
  6561 ;; Tracked objects:
  6562 ;;		On entry : 0/0
  6563 ;;		On exit  : 0/0
  6564 ;;		Unchanged: 0/0
  6565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6570 ;;Total ram usage:        0 bytes
  6571 ;; Hardware stack levels used:    1
  6572 ;; Hardware stack levels required when called:    6
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_do_I2C_SEND_RESTART_READ
  6577 ;;		_do_I2C_SEND_RESTART_WRITE
  6578 ;;		_do_I2C_SEND_RESTART
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text53
  6583  001436                     __ptext53:
  6584                           	opt stack 0
  6585  001436                     _i2c1_driver_restart:
  6586                           	opt stack 14
  6587                           
  6588                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  6589                           
  6590                           ;incstack = 0
  6591  001436  8297               	bsf	3991,1,c	;volatile
  6592  001438  0012               	return		;funcret
  6593  00143A                     __end_of_i2c1_driver_restart:
  6594                           	opt stack 0
  6595                           tosu	equ	0xFFF
  6596                           tosh	equ	0xFFE
  6597                           tosl	equ	0xFFD
  6598                           pclath	equ	0xFFA
  6599                           tblptru	equ	0xFF8
  6600                           tblptrh	equ	0xFF7
  6601                           tblptrl	equ	0xFF6
  6602                           tablat	equ	0xFF5
  6603                           prodh	equ	0xFF4
  6604                           prodl	equ	0xFF3
  6605                           intcon	equ	0xFF2
  6606                           postinc0	equ	0xFEE
  6607                           wreg	equ	0xFE8
  6608                           indf1	equ	0xFE7
  6609                           postdec1	equ	0xFE5
  6610                           plusw1	equ	0xFE3
  6611                           fsr1h	equ	0xFE2
  6612                           fsr1l	equ	0xFE1
  6613                           indf2	equ	0xFDF
  6614                           postinc2	equ	0xFDE
  6615                           postdec2	equ	0xFDD
  6616                           plusw2	equ	0xFDB
  6617                           fsr2h	equ	0xFDA
  6618                           fsr2l	equ	0xFD9
  6619                           status	equ	0xFD8
  6620                           
  6621 ;; *************** function _i2c1_driver_sendACK *****************
  6622 ;; Defined at:
  6623 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      void 
  6630 ;; Registers used:
  6631 ;;		None
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;Total ram usage:        0 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    6
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_do_I2C_DO_ACK
  6648 ;;		_do_I2C_RX
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text54
  6653  0013F4                     __ptext54:
  6654                           	opt stack 0
  6655  0013F4                     _i2c1_driver_sendACK:
  6656                           	opt stack 15
  6657                           
  6658                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  6659                           
  6660                           ;incstack = 0
  6661  0013F4  9A97               	bcf	3991,5,c	;volatile
  6662                           
  6663                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  6664  0013F6  8897               	bsf	3991,4,c	;volatile
  6665  0013F8  0012               	return		;funcret
  6666  0013FA                     __end_of_i2c1_driver_sendACK:
  6667                           	opt stack 0
  6668                           tosu	equ	0xFFF
  6669                           tosh	equ	0xFFE
  6670                           tosl	equ	0xFFD
  6671                           pclath	equ	0xFFA
  6672                           tblptru	equ	0xFF8
  6673                           tblptrh	equ	0xFF7
  6674                           tblptrl	equ	0xFF6
  6675                           tablat	equ	0xFF5
  6676                           prodh	equ	0xFF4
  6677                           prodl	equ	0xFF3
  6678                           intcon	equ	0xFF2
  6679                           postinc0	equ	0xFEE
  6680                           wreg	equ	0xFE8
  6681                           indf1	equ	0xFE7
  6682                           postdec1	equ	0xFE5
  6683                           plusw1	equ	0xFE3
  6684                           fsr1h	equ	0xFE2
  6685                           fsr1l	equ	0xFE1
  6686                           indf2	equ	0xFDF
  6687                           postinc2	equ	0xFDE
  6688                           postdec2	equ	0xFDD
  6689                           plusw2	equ	0xFDB
  6690                           fsr2h	equ	0xFDA
  6691                           fsr2l	equ	0xFD9
  6692                           status	equ	0xFD8
  6693                           
  6694 ;; *************** function _i2c1_driver_start *****************
  6695 ;; Defined at:
  6696 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		None
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6714 ;;Total ram usage:        0 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    6
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_i2c_masterOperation
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text55
  6725  00143A                     __ptext55:
  6726                           	opt stack 0
  6727  00143A                     _i2c1_driver_start:
  6728                           	opt stack 18
  6729                           
  6730                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
  6731                           
  6732                           ;incstack = 0
  6733  00143A  8097               	bsf	3991,0,c	;volatile
  6734  00143C  0012               	return		;funcret
  6735  00143E                     __end_of_i2c1_driver_start:
  6736                           	opt stack 0
  6737                           tosu	equ	0xFFF
  6738                           tosh	equ	0xFFE
  6739                           tosl	equ	0xFFD
  6740                           pclath	equ	0xFFA
  6741                           tblptru	equ	0xFF8
  6742                           tblptrh	equ	0xFF7
  6743                           tblptrl	equ	0xFF6
  6744                           tablat	equ	0xFF5
  6745                           prodh	equ	0xFF4
  6746                           prodl	equ	0xFF3
  6747                           intcon	equ	0xFF2
  6748                           postinc0	equ	0xFEE
  6749                           wreg	equ	0xFE8
  6750                           indf1	equ	0xFE7
  6751                           postdec1	equ	0xFE5
  6752                           plusw1	equ	0xFE3
  6753                           fsr1h	equ	0xFE2
  6754                           fsr1l	equ	0xFE1
  6755                           indf2	equ	0xFDF
  6756                           postinc2	equ	0xFDE
  6757                           postdec2	equ	0xFDD
  6758                           plusw2	equ	0xFDB
  6759                           fsr2h	equ	0xFDA
  6760                           fsr2l	equ	0xFD9
  6761                           status	equ	0xFD8
  6762                           
  6763 ;; *************** function _i2c_close *****************
  6764 ;; Defined at:
  6765 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;		None
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  ret             1   21[COMRAM] enum E11785
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  1    wreg      enum E11785
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, cstack
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6783 ;;Total ram usage:        1 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    7
  6786 ;; This function calls:
  6787 ;;		_mssp1_clearIRQ
  6788 ;;		_mssp1_disableIRQ
  6789 ;; This function is called by:
  6790 ;;		_i2c_writeNBytes
  6791 ;;		_i2c_readNBytes
  6792 ;;		_i2c_write1ByteRegister
  6793 ;;		_i2c_read1ByteRegister
  6794 ;;		_i2c_read2ByteRegister
  6795 ;;		_i2c_write2ByteRegister
  6796 ;;		_i2c_readDataBlock
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text56
  6801  001064                     __ptext56:
  6802                           	opt stack 0
  6803  001064                     _i2c_close:
  6804                           	opt stack 19
  6805                           
  6806                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
  6807                           
  6808                           ;incstack = 0
  6809  001064  0E01               	movlw	1
  6810  001066  6E16               	movwf	i2c_close@ret,c
  6811                           
  6812                           ;i2c_master.c: 165: if(!i2c_status.busy)
  6813  001068  0100               	movlb	0	; () banked
  6814  00106A  B160               	btfsc	_i2c_status& (0+255),0,b
  6815  00106C  D008               	goto	l369
  6816                           
  6817                           ; BSR set to: 0
  6818                           ;i2c_master.c: 166: {
  6819                           ;i2c_master.c: 167: i2c_status.inUse = 0;
  6820  00106E  9360               	bcf	_i2c_status& (0+255),1,b
  6821                           
  6822                           ;i2c_master.c: 169: i2c_status.address = 0xff;
  6823  001070  6961               	setf	(_i2c_status+1)& (0+255),b
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;i2c_master.c: 170: mssp1_clearIRQ();
  6827  001072  EC00  F00A         	call	_mssp1_clearIRQ	;wreg free
  6828                           
  6829                           ;i2c_master.c: 171: mssp1_disableIRQ();
  6830  001076  ECFD  F009         	call	_mssp1_disableIRQ	;wreg free
  6831                           
  6832                           ;i2c_master.c: 172: ret = i2c_status.error;
  6833  00107A  C06B  F016         	movff	_i2c_status+11,i2c_close@ret
  6834  00107E                     l369:
  6835                           
  6836                           ;i2c_master.c: 173: }
  6837                           ;i2c_master.c: 174: return ret;
  6838  00107E  5016               	movf	i2c_close@ret,w,c
  6839  001080  0012               	return	
  6840  001082                     __end_of_i2c_close:
  6841                           	opt stack 0
  6842                           tosu	equ	0xFFF
  6843                           tosh	equ	0xFFE
  6844                           tosl	equ	0xFFD
  6845                           pclath	equ	0xFFA
  6846                           tblptru	equ	0xFF8
  6847                           tblptrh	equ	0xFF7
  6848                           tblptrl	equ	0xFF6
  6849                           tablat	equ	0xFF5
  6850                           prodh	equ	0xFF4
  6851                           prodl	equ	0xFF3
  6852                           intcon	equ	0xFF2
  6853                           postinc0	equ	0xFEE
  6854                           wreg	equ	0xFE8
  6855                           indf1	equ	0xFE7
  6856                           postdec1	equ	0xFE5
  6857                           plusw1	equ	0xFE3
  6858                           fsr1h	equ	0xFE2
  6859                           fsr1l	equ	0xFE1
  6860                           indf2	equ	0xFDF
  6861                           postinc2	equ	0xFDE
  6862                           postdec2	equ	0xFDD
  6863                           plusw2	equ	0xFDB
  6864                           fsr2h	equ	0xFDA
  6865                           fsr2l	equ	0xFD9
  6866                           status	equ	0xFD8
  6867                           
  6868 ;; *************** function _mssp1_disableIRQ *****************
  6869 ;; Defined at:
  6870 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;		None
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;		None
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  1    wreg      void 
  6877 ;; Registers used:
  6878 ;;		None
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6888 ;;Total ram usage:        0 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    6
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_i2c_close
  6895 ;;		_i2c_setTimeOut
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text57
  6900  0013FA                     __ptext57:
  6901                           	opt stack 0
  6902  0013FA                     _mssp1_disableIRQ:
  6903                           	opt stack 19
  6904                           
  6905                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
  6906                           
  6907                           ;incstack = 0
  6908  0013FA  010E               	movlb	14	; () banked
  6909  0013FC  91C5               	bcf	197,0,b	;volatile
  6910                           
  6911                           ; BSR set to: 14
  6912  0013FE  0012               	return		;funcret
  6913  001400                     __end_of_mssp1_disableIRQ:
  6914                           	opt stack 0
  6915                           tosu	equ	0xFFF
  6916                           tosh	equ	0xFFE
  6917                           tosl	equ	0xFFD
  6918                           pclath	equ	0xFFA
  6919                           tblptru	equ	0xFF8
  6920                           tblptrh	equ	0xFF7
  6921                           tblptrl	equ	0xFF6
  6922                           tablat	equ	0xFF5
  6923                           prodh	equ	0xFF4
  6924                           prodl	equ	0xFF3
  6925                           intcon	equ	0xFF2
  6926                           postinc0	equ	0xFEE
  6927                           wreg	equ	0xFE8
  6928                           indf1	equ	0xFE7
  6929                           postdec1	equ	0xFE5
  6930                           plusw1	equ	0xFE3
  6931                           fsr1h	equ	0xFE2
  6932                           fsr1l	equ	0xFE1
  6933                           indf2	equ	0xFDF
  6934                           postinc2	equ	0xFDE
  6935                           postdec2	equ	0xFDD
  6936                           plusw2	equ	0xFDB
  6937                           fsr2h	equ	0xFDA
  6938                           fsr2l	equ	0xFD9
  6939                           status	equ	0xFD8
  6940                           
  6941 ;; *************** function _mssp1_clearIRQ *****************
  6942 ;; Defined at:
  6943 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;		None
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		None
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6961 ;;Total ram usage:        0 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:    6
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_i2c_open
  6968 ;;		_i2c_close
  6969 ;;		_i2c_ISR
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text58
  6974  001400                     __ptext58:
  6975                           	opt stack 0
  6976  001400                     _mssp1_clearIRQ:
  6977                           	opt stack 19
  6978                           
  6979                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  6980                           
  6981                           ; BSR set to: 14
  6982                           ;incstack = 0
  6983  001400  010E               	movlb	14	; () banked
  6984  001402  91CD               	bcf	205,0,b	;volatile
  6985                           
  6986                           ; BSR set to: 14
  6987  001404  0012               	return		;funcret
  6988  001406                     __end_of_mssp1_clearIRQ:
  6989                           	opt stack 0
  6990                           tosu	equ	0xFFF
  6991                           tosh	equ	0xFFE
  6992                           tosl	equ	0xFFD
  6993                           pclath	equ	0xFFA
  6994                           tblptru	equ	0xFF8
  6995                           tblptrh	equ	0xFF7
  6996                           tblptrl	equ	0xFF6
  6997                           tablat	equ	0xFF5
  6998                           prodh	equ	0xFF4
  6999                           prodl	equ	0xFF3
  7000                           intcon	equ	0xFF2
  7001                           postinc0	equ	0xFEE
  7002                           wreg	equ	0xFE8
  7003                           indf1	equ	0xFE7
  7004                           postdec1	equ	0xFE5
  7005                           plusw1	equ	0xFE3
  7006                           fsr1h	equ	0xFE2
  7007                           fsr1l	equ	0xFE1
  7008                           indf2	equ	0xFDF
  7009                           postinc2	equ	0xFDE
  7010                           postdec2	equ	0xFDD
  7011                           plusw2	equ	0xFDB
  7012                           fsr2h	equ	0xFDA
  7013                           fsr2l	equ	0xFD9
  7014                           status	equ	0xFD8
  7015                           
  7016 ;; *************** function _abs *****************
  7017 ;; Defined at:
  7018 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\abs.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  a               2   21[COMRAM] int 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  2   21[COMRAM] int 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7035 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7036 ;;Total ram usage:        4 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    6
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_main
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text59
  7047  00103C                     __ptext59:
  7048                           	opt stack 0
  7049  00103C                     _abs:
  7050                           	opt stack 24
  7051                           
  7052                           ; BSR set to: 14
  7053                           ;incstack = 0
  7054  00103C  AE17               	btfss	abs@a+1,7,c
  7055  00103E  D00D               	goto	l846
  7056  001040  C016  F018         	movff	abs@a,??_abs
  7057  001044  C017  F019         	movff	abs@a+1,??_abs+1
  7058  001048  1E18               	comf	??_abs,f,c
  7059  00104A  1E19               	comf	??_abs+1,f,c
  7060  00104C  4A18               	infsnz	??_abs,f,c
  7061  00104E  2A19               	incf	??_abs+1,f,c
  7062  001050  C018  F016         	movff	??_abs,?_abs
  7063  001054  C019  F017         	movff	??_abs+1,?_abs+1
  7064  001058  0012               	return	
  7065  00105A                     l846:
  7066  00105A  C016  F016         	movff	abs@a,?_abs
  7067  00105E  C017  F017         	movff	abs@a+1,?_abs+1
  7068  001062  0012               	return		;funcret
  7069  001064                     __end_of_abs:
  7070                           	opt stack 0
  7071                           tosu	equ	0xFFF
  7072                           tosh	equ	0xFFE
  7073                           tosl	equ	0xFFD
  7074                           pclath	equ	0xFFA
  7075                           tblptru	equ	0xFF8
  7076                           tblptrh	equ	0xFF7
  7077                           tblptrl	equ	0xFF6
  7078                           tablat	equ	0xFF5
  7079                           prodh	equ	0xFF4
  7080                           prodl	equ	0xFF3
  7081                           intcon	equ	0xFF2
  7082                           postinc0	equ	0xFEE
  7083                           wreg	equ	0xFE8
  7084                           indf1	equ	0xFE7
  7085                           postdec1	equ	0xFE5
  7086                           plusw1	equ	0xFE3
  7087                           fsr1h	equ	0xFE2
  7088                           fsr1l	equ	0xFE1
  7089                           indf2	equ	0xFDF
  7090                           postinc2	equ	0xFDE
  7091                           postdec2	equ	0xFDD
  7092                           plusw2	equ	0xFDB
  7093                           fsr2h	equ	0xFDA
  7094                           fsr2l	equ	0xFD9
  7095                           status	equ	0xFD8
  7096                           
  7097 ;; *************** function ___aldiv *****************
  7098 ;; Defined at:
  7099 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  dividend        4   21[COMRAM] long 
  7102 ;;  divisor         4   25[COMRAM] long 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  quotient        4   31[COMRAM] long 
  7105 ;;  sign            1   30[COMRAM] unsigned char 
  7106 ;;  counter         1   29[COMRAM] unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  4   21[COMRAM] long 
  7109 ;; Registers used:
  7110 ;;		wreg, status,2, status,0
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7116 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7117 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7119 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;Total ram usage:       14 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    6
  7123 ;; This function calls:
  7124 ;;		Nothing
  7125 ;; This function is called by:
  7126 ;;		_main
  7127 ;; This function uses a non-reentrant model
  7128 ;;
  7129                           
  7130                           	psect	text60
  7131  000558                     __ptext60:
  7132                           	opt stack 0
  7133  000558                     ___aldiv:
  7134                           	opt stack 24
  7135                           
  7136                           ;incstack = 0
  7137  000558  0E00               	movlw	0
  7138  00055A  6E1F               	movwf	___aldiv@sign,c
  7139  00055C  AE1D               	btfss	___aldiv@divisor+3,7,c
  7140  00055E  D00A               	goto	l856
  7141  000560  1E1D               	comf	___aldiv@divisor+3,f,c
  7142  000562  1E1C               	comf	___aldiv@divisor+2,f,c
  7143  000564  1E1B               	comf	___aldiv@divisor+1,f,c
  7144  000566  6C1A               	negf	___aldiv@divisor,c
  7145  000568  0E00               	movlw	0
  7146  00056A  221B               	addwfc	___aldiv@divisor+1,f,c
  7147  00056C  221C               	addwfc	___aldiv@divisor+2,f,c
  7148  00056E  221D               	addwfc	___aldiv@divisor+3,f,c
  7149  000570  0E01               	movlw	1
  7150  000572  6E1F               	movwf	___aldiv@sign,c
  7151  000574                     l856:
  7152  000574  AE19               	btfss	___aldiv@dividend+3,7,c
  7153  000576  D00A               	goto	l857
  7154  000578  1E19               	comf	___aldiv@dividend+3,f,c
  7155  00057A  1E18               	comf	___aldiv@dividend+2,f,c
  7156  00057C  1E17               	comf	___aldiv@dividend+1,f,c
  7157  00057E  6C16               	negf	___aldiv@dividend,c
  7158  000580  0E00               	movlw	0
  7159  000582  2217               	addwfc	___aldiv@dividend+1,f,c
  7160  000584  2218               	addwfc	___aldiv@dividend+2,f,c
  7161  000586  2219               	addwfc	___aldiv@dividend+3,f,c
  7162  000588  0E01               	movlw	1
  7163  00058A  1A1F               	xorwf	___aldiv@sign,f,c
  7164  00058C                     l857:
  7165  00058C  0E00               	movlw	0
  7166  00058E  6E20               	movwf	___aldiv@quotient,c
  7167  000590  0E00               	movlw	0
  7168  000592  6E21               	movwf	___aldiv@quotient+1,c
  7169  000594  0E00               	movlw	0
  7170  000596  6E22               	movwf	___aldiv@quotient+2,c
  7171  000598  0E00               	movlw	0
  7172  00059A  6E23               	movwf	___aldiv@quotient+3,c
  7173  00059C  501A               	movf	___aldiv@divisor,w,c
  7174  00059E  101B               	iorwf	___aldiv@divisor+1,w,c
  7175  0005A0  101C               	iorwf	___aldiv@divisor+2,w,c
  7176  0005A2  101D               	iorwf	___aldiv@divisor+3,w,c
  7177  0005A4  B4D8               	btfsc	status,2,c
  7178  0005A6  D02A               	goto	l864
  7179  0005A8  0E01               	movlw	1
  7180  0005AA  6E1E               	movwf	___aldiv@counter,c
  7181  0005AC  D006               	goto	l859
  7182  0005AE  90D8               	bcf	status,0,c
  7183  0005B0  361A               	rlcf	___aldiv@divisor,f,c
  7184  0005B2  361B               	rlcf	___aldiv@divisor+1,f,c
  7185  0005B4  361C               	rlcf	___aldiv@divisor+2,f,c
  7186  0005B6  361D               	rlcf	___aldiv@divisor+3,f,c
  7187  0005B8  2A1E               	incf	___aldiv@counter,f,c
  7188  0005BA                     l859:
  7189  0005BA  AE1D               	btfss	___aldiv@divisor+3,7,c
  7190  0005BC  D7F8               	goto	l860
  7191  0005BE                     u1590:
  7192  0005BE  90D8               	bcf	status,0,c
  7193  0005C0  3620               	rlcf	___aldiv@quotient,f,c
  7194  0005C2  3621               	rlcf	___aldiv@quotient+1,f,c
  7195  0005C4  3622               	rlcf	___aldiv@quotient+2,f,c
  7196  0005C6  3623               	rlcf	___aldiv@quotient+3,f,c
  7197  0005C8  501A               	movf	___aldiv@divisor,w,c
  7198  0005CA  5C16               	subwf	___aldiv@dividend,w,c
  7199  0005CC  501B               	movf	___aldiv@divisor+1,w,c
  7200  0005CE  5817               	subwfb	___aldiv@dividend+1,w,c
  7201  0005D0  501C               	movf	___aldiv@divisor+2,w,c
  7202  0005D2  5818               	subwfb	___aldiv@dividend+2,w,c
  7203  0005D4  501D               	movf	___aldiv@divisor+3,w,c
  7204  0005D6  5819               	subwfb	___aldiv@dividend+3,w,c
  7205  0005D8  A0D8               	btfss	status,0,c
  7206  0005DA  D009               	goto	l863
  7207  0005DC  501A               	movf	___aldiv@divisor,w,c
  7208  0005DE  5E16               	subwf	___aldiv@dividend,f,c
  7209  0005E0  501B               	movf	___aldiv@divisor+1,w,c
  7210  0005E2  5A17               	subwfb	___aldiv@dividend+1,f,c
  7211  0005E4  501C               	movf	___aldiv@divisor+2,w,c
  7212  0005E6  5A18               	subwfb	___aldiv@dividend+2,f,c
  7213  0005E8  501D               	movf	___aldiv@divisor+3,w,c
  7214  0005EA  5A19               	subwfb	___aldiv@dividend+3,f,c
  7215  0005EC  8020               	bsf	___aldiv@quotient,0,c
  7216  0005EE                     l863:
  7217  0005EE  90D8               	bcf	status,0,c
  7218  0005F0  321D               	rrcf	___aldiv@divisor+3,f,c
  7219  0005F2  321C               	rrcf	___aldiv@divisor+2,f,c
  7220  0005F4  321B               	rrcf	___aldiv@divisor+1,f,c
  7221  0005F6  321A               	rrcf	___aldiv@divisor,f,c
  7222  0005F8  2E1E               	decfsz	___aldiv@counter,f,c
  7223  0005FA  D7E1               	goto	u1590
  7224  0005FC                     l864:
  7225  0005FC  501F               	movf	___aldiv@sign,w,c
  7226  0005FE  B4D8               	btfsc	status,2,c
  7227  000600  D008               	goto	l865
  7228  000602  1E23               	comf	___aldiv@quotient+3,f,c
  7229  000604  1E22               	comf	___aldiv@quotient+2,f,c
  7230  000606  1E21               	comf	___aldiv@quotient+1,f,c
  7231  000608  6C20               	negf	___aldiv@quotient,c
  7232  00060A  0E00               	movlw	0
  7233  00060C  2221               	addwfc	___aldiv@quotient+1,f,c
  7234  00060E  2222               	addwfc	___aldiv@quotient+2,f,c
  7235  000610  2223               	addwfc	___aldiv@quotient+3,f,c
  7236  000612                     l865:
  7237  000612  C020  F016         	movff	___aldiv@quotient,?___aldiv
  7238  000616  C021  F017         	movff	___aldiv@quotient+1,?___aldiv+1
  7239  00061A  C022  F018         	movff	___aldiv@quotient+2,?___aldiv+2
  7240  00061E  C023  F019         	movff	___aldiv@quotient+3,?___aldiv+3
  7241  000622  0012               	return	
  7242  000624                     __end_of___aldiv:
  7243                           	opt stack 0
  7244                           tosu	equ	0xFFF
  7245                           tosh	equ	0xFFE
  7246                           tosl	equ	0xFFD
  7247                           pclath	equ	0xFFA
  7248                           tblptru	equ	0xFF8
  7249                           tblptrh	equ	0xFF7
  7250                           tblptrl	equ	0xFF6
  7251                           tablat	equ	0xFF5
  7252                           prodh	equ	0xFF4
  7253                           prodl	equ	0xFF3
  7254                           intcon	equ	0xFF2
  7255                           postinc0	equ	0xFEE
  7256                           wreg	equ	0xFE8
  7257                           indf1	equ	0xFE7
  7258                           postdec1	equ	0xFE5
  7259                           plusw1	equ	0xFE3
  7260                           fsr1h	equ	0xFE2
  7261                           fsr1l	equ	0xFE1
  7262                           indf2	equ	0xFDF
  7263                           postinc2	equ	0xFDE
  7264                           postdec2	equ	0xFDD
  7265                           plusw2	equ	0xFDB
  7266                           fsr2h	equ	0xFDA
  7267                           fsr2l	equ	0xFD9
  7268                           status	equ	0xFD8
  7269                           
  7270 ;; *************** function _SYSTEM_Initialize *****************
  7271 ;; Defined at:
  7272 ;;		line 116 in file "mcc_generated_files/mcc.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;		None
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;		None
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  1    wreg      void 
  7279 ;; Registers used:
  7280 ;;		wreg, status,2, cstack
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;Total ram usage:        0 bytes
  7291 ;; Hardware stack levels used:    1
  7292 ;; Hardware stack levels required when called:    7
  7293 ;; This function calls:
  7294 ;;		_EUSART1_Initialize
  7295 ;;		_EUSART2_Initialize
  7296 ;;		_INTERRUPT_Initialize
  7297 ;;		_OSCILLATOR_Initialize
  7298 ;;		_PIN_MANAGER_Initialize
  7299 ;;		_PMD_Initialize
  7300 ;; This function is called by:
  7301 ;;		_main
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text61
  7306  001126                     __ptext61:
  7307                           	opt stack 0
  7308  001126                     _SYSTEM_Initialize:
  7309                           	opt stack 23
  7310                           
  7311                           ;mcc.c: 118: INTERRUPT_Initialize();
  7312                           
  7313                           ;incstack = 0
  7314  001126  EC1F  F00A         	call	_INTERRUPT_Initialize	;wreg free
  7315                           
  7316                           ;mcc.c: 119: PMD_Initialize();
  7317  00112A  EC5D  F008         	call	_PMD_Initialize	;wreg free
  7318                           
  7319                           ;mcc.c: 120: PIN_MANAGER_Initialize();
  7320  00112E  EC6A  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  7321                           
  7322                           ;mcc.c: 121: OSCILLATOR_Initialize();
  7323  001132  ECAD  F008         	call	_OSCILLATOR_Initialize	;wreg free
  7324                           
  7325                           ;mcc.c: 122: EUSART1_Initialize();
  7326  001136  EC07  F009         	call	_EUSART1_Initialize	;wreg free
  7327                           
  7328                           ;mcc.c: 123: EUSART2_Initialize();
  7329  00113A  ECB9  F008         	call	_EUSART2_Initialize	;wreg free
  7330  00113E  0012               	return		;funcret
  7331  001140                     __end_of_SYSTEM_Initialize:
  7332                           	opt stack 0
  7333                           tosu	equ	0xFFF
  7334                           tosh	equ	0xFFE
  7335                           tosl	equ	0xFFD
  7336                           pclath	equ	0xFFA
  7337                           tblptru	equ	0xFF8
  7338                           tblptrh	equ	0xFF7
  7339                           tblptrl	equ	0xFF6
  7340                           tablat	equ	0xFF5
  7341                           prodh	equ	0xFF4
  7342                           prodl	equ	0xFF3
  7343                           intcon	equ	0xFF2
  7344                           postinc0	equ	0xFEE
  7345                           wreg	equ	0xFE8
  7346                           indf1	equ	0xFE7
  7347                           postdec1	equ	0xFE5
  7348                           plusw1	equ	0xFE3
  7349                           fsr1h	equ	0xFE2
  7350                           fsr1l	equ	0xFE1
  7351                           indf2	equ	0xFDF
  7352                           postinc2	equ	0xFDE
  7353                           postdec2	equ	0xFDD
  7354                           plusw2	equ	0xFDB
  7355                           fsr2h	equ	0xFDA
  7356                           fsr2l	equ	0xFD9
  7357                           status	equ	0xFD8
  7358                           
  7359 ;; *************** function _PMD_Initialize *****************
  7360 ;; Defined at:
  7361 ;;		line 140 in file "mcc_generated_files/mcc.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;		None
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;		None
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  1    wreg      void 
  7368 ;; Registers used:
  7369 ;;		wreg, status,2
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;Total ram usage:        0 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:    6
  7382 ;; This function calls:
  7383 ;;		Nothing
  7384 ;; This function is called by:
  7385 ;;		_SYSTEM_Initialize
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           	psect	text62
  7390  0010BA                     __ptext62:
  7391                           	opt stack 0
  7392  0010BA                     _PMD_Initialize:
  7393                           	opt stack 23
  7394                           
  7395                           ;mcc.c: 143: PMD0 = 0x00;
  7396                           
  7397                           ;incstack = 0
  7398  0010BA  0E00               	movlw	0
  7399  0010BC  010E               	movlb	14	; () banked
  7400  0010BE  6FE1               	movwf	225,b	;volatile
  7401                           
  7402                           ;mcc.c: 145: PMD1 = 0x00;
  7403  0010C0  0E00               	movlw	0
  7404  0010C2  6FE2               	movwf	226,b	;volatile
  7405                           
  7406                           ;mcc.c: 147: PMD2 = 0x00;
  7407  0010C4  0E00               	movlw	0
  7408  0010C6  6FE3               	movwf	227,b	;volatile
  7409                           
  7410                           ;mcc.c: 149: PMD3 = 0x00;
  7411  0010C8  0E00               	movlw	0
  7412  0010CA  6FE4               	movwf	228,b	;volatile
  7413                           
  7414                           ;mcc.c: 151: PMD4 = 0x00;
  7415  0010CC  0E00               	movlw	0
  7416  0010CE  6FE5               	movwf	229,b	;volatile
  7417                           
  7418                           ;mcc.c: 153: PMD5 = 0x00;
  7419  0010D0  0E00               	movlw	0
  7420  0010D2  6FE6               	movwf	230,b	;volatile
  7421                           
  7422                           ; BSR set to: 14
  7423  0010D4  0012               	return		;funcret
  7424  0010D6                     __end_of_PMD_Initialize:
  7425                           	opt stack 0
  7426                           tosu	equ	0xFFF
  7427                           tosh	equ	0xFFE
  7428                           tosl	equ	0xFFD
  7429                           pclath	equ	0xFFA
  7430                           tblptru	equ	0xFF8
  7431                           tblptrh	equ	0xFF7
  7432                           tblptrl	equ	0xFF6
  7433                           tablat	equ	0xFF5
  7434                           prodh	equ	0xFF4
  7435                           prodl	equ	0xFF3
  7436                           intcon	equ	0xFF2
  7437                           postinc0	equ	0xFEE
  7438                           wreg	equ	0xFE8
  7439                           indf1	equ	0xFE7
  7440                           postdec1	equ	0xFE5
  7441                           plusw1	equ	0xFE3
  7442                           fsr1h	equ	0xFE2
  7443                           fsr1l	equ	0xFE1
  7444                           indf2	equ	0xFDF
  7445                           postinc2	equ	0xFDE
  7446                           postdec2	equ	0xFDD
  7447                           plusw2	equ	0xFDB
  7448                           fsr2h	equ	0xFDA
  7449                           fsr2l	equ	0xFD9
  7450                           status	equ	0xFD8
  7451                           
  7452 ;; *************** function _PIN_MANAGER_Initialize *****************
  7453 ;; Defined at:
  7454 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7472 ;;Total ram usage:        0 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    6
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_SYSTEM_Initialize
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text63
  7483  0006D4                     __ptext63:
  7484                           	opt stack 0
  7485  0006D4                     _PIN_MANAGER_Initialize:
  7486                           	opt stack 23
  7487                           
  7488                           ;pin_manager.c: 57: LATE = 0x00;
  7489                           
  7490                           ; BSR set to: 14
  7491                           ;incstack = 0
  7492  0006D4  0E00               	movlw	0
  7493  0006D6  6E87               	movwf	3975,c	;volatile
  7494                           
  7495                           ;pin_manager.c: 58: LATD = 0x00;
  7496  0006D8  0E00               	movlw	0
  7497  0006DA  6E86               	movwf	3974,c	;volatile
  7498                           
  7499                           ;pin_manager.c: 59: LATA = 0x0C;
  7500  0006DC  0E0C               	movlw	12
  7501  0006DE  6E83               	movwf	3971,c	;volatile
  7502                           
  7503                           ;pin_manager.c: 60: LATB = 0x00;
  7504  0006E0  0E00               	movlw	0
  7505  0006E2  6E84               	movwf	3972,c	;volatile
  7506                           
  7507                           ;pin_manager.c: 61: LATC = 0x00;
  7508  0006E4  0E00               	movlw	0
  7509  0006E6  6E85               	movwf	3973,c	;volatile
  7510                           
  7511                           ;pin_manager.c: 66: TRISE = 0x07;
  7512  0006E8  0E07               	movlw	7
  7513  0006EA  6E8C               	movwf	3980,c	;volatile
  7514                           
  7515                           ;pin_manager.c: 67: TRISA = 0xEB;
  7516  0006EC  0EEB               	movlw	235
  7517  0006EE  6E88               	movwf	3976,c	;volatile
  7518                           
  7519                           ;pin_manager.c: 68: TRISB = 0xFF;
  7520  0006F0  6889               	setf	3977,c	;volatile
  7521                           
  7522                           ;pin_manager.c: 69: TRISC = 0xBF;
  7523  0006F2  0EBF               	movlw	191
  7524  0006F4  6E8A               	movwf	3978,c	;volatile
  7525                           
  7526                           ;pin_manager.c: 70: TRISD = 0x7E;
  7527  0006F6  0E7E               	movlw	126
  7528  0006F8  6E8B               	movwf	3979,c	;volatile
  7529                           
  7530                           ;pin_manager.c: 75: ANSELC = 0xC7;
  7531  0006FA  0EC7               	movlw	199
  7532  0006FC  010F               	movlb	15	; () banked
  7533  0006FE  6F21               	movwf	33,b	;volatile
  7534                           
  7535                           ; BSR set to: 15
  7536                           ;pin_manager.c: 76: ANSELB = 0xFF;
  7537  000700  6919               	setf	25,b	;volatile
  7538                           
  7539                           ;pin_manager.c: 77: ANSELD = 0xF7;
  7540  000702  0EF7               	movlw	247
  7541  000704  6F26               	movwf	38,b	;volatile
  7542                           
  7543                           ;pin_manager.c: 78: ANSELE = 0x07;
  7544  000706  0E07               	movlw	7
  7545  000708  6F2E               	movwf	46,b	;volatile
  7546                           
  7547                           ; BSR set to: 15
  7548                           ;pin_manager.c: 79: ANSELA = 0xFF;
  7549  00070A  6911               	setf	17,b	;volatile
  7550                           
  7551                           ;pin_manager.c: 84: WPUD = 0x88;
  7552  00070C  0E88               	movlw	136
  7553  00070E  6F25               	movwf	37,b	;volatile
  7554                           
  7555                           ;pin_manager.c: 85: WPUE = 0x00;
  7556  000710  0E00               	movlw	0
  7557  000712  6F2D               	movwf	45,b	;volatile
  7558                           
  7559                           ;pin_manager.c: 86: WPUB = 0x02;
  7560  000714  0E02               	movlw	2
  7561  000716  6F18               	movwf	24,b	;volatile
  7562                           
  7563                           ;pin_manager.c: 87: WPUA = 0x00;
  7564  000718  0E00               	movlw	0
  7565  00071A  6F10               	movwf	16,b	;volatile
  7566                           
  7567                           ;pin_manager.c: 88: WPUC = 0x18;
  7568  00071C  0E18               	movlw	24
  7569  00071E  6F20               	movwf	32,b	;volatile
  7570                           
  7571                           ;pin_manager.c: 93: ODCONE = 0x00;
  7572  000720  0E00               	movlw	0
  7573  000722  6F2C               	movwf	44,b	;volatile
  7574                           
  7575                           ;pin_manager.c: 94: ODCONA = 0x00;
  7576  000724  0E00               	movlw	0
  7577  000726  6F0F               	movwf	15,b	;volatile
  7578                           
  7579                           ;pin_manager.c: 95: ODCONB = 0x00;
  7580  000728  0E00               	movlw	0
  7581  00072A  6F17               	movwf	23,b	;volatile
  7582                           
  7583                           ;pin_manager.c: 96: ODCONC = 0x00;
  7584  00072C  0E00               	movlw	0
  7585  00072E  6F1F               	movwf	31,b	;volatile
  7586                           
  7587                           ;pin_manager.c: 97: ODCOND = 0x00;
  7588  000730  0E00               	movlw	0
  7589  000732  6F24               	movwf	36,b	;volatile
  7590                           
  7591                           ;pin_manager.c: 104: RC3PPS = 0x0F;
  7592  000734  0E0F               	movlw	15
  7593  000736  010E               	movlb	14	; () banked
  7594  000738  6FFA               	movwf	250,b	;volatile
  7595                           
  7596                           ;pin_manager.c: 105: RC4PPS = 0x10;
  7597  00073A  0E10               	movlw	16
  7598  00073C  6FFB               	movwf	251,b	;volatile
  7599                           
  7600                           ;pin_manager.c: 106: RD0PPS = 0x0B;
  7601  00073E  0E0B               	movlw	11
  7602  000740  6FFF               	movwf	255,b	;volatile
  7603                           
  7604                           ; BSR set to: 14
  7605                           ;pin_manager.c: 107: RX1PPSbits.RXPPS = 0x15;
  7606  000742  81B5               	bsf	181,0,b	;volatile
  7607  000744  93B5               	bcf	181,1,b	;volatile
  7608  000746  85B5               	bsf	181,2,b	;volatile
  7609  000748  97B5               	bcf	181,3,b	;volatile
  7610  00074A  89B5               	bsf	181,4,b	;volatile
  7611                           
  7612                           ;pin_manager.c: 108: RC6PPS = 0x09;
  7613  00074C  0E09               	movlw	9
  7614  00074E  6FFD               	movwf	253,b	;volatile
  7615                           
  7616                           ; BSR set to: 14
  7617                           ;pin_manager.c: 109: SSP1CLKPPSbits.SSPCLKPPS = 0x13;
  7618  000750  81B7               	bsf	183,0,b	;volatile
  7619  000752  83B7               	bsf	183,1,b	;volatile
  7620  000754  95B7               	bcf	183,2,b	;volatile
  7621  000756  97B7               	bcf	183,3,b	;volatile
  7622  000758  89B7               	bsf	183,4,b	;volatile
  7623                           
  7624                           ;pin_manager.c: 110: RD7PPS = 0x0B;
  7625  00075A  0E0B               	movlw	11
  7626  00075C  010F               	movlb	15	; () banked
  7627  00075E  6F06               	movwf	6,b	;volatile
  7628                           
  7629                           ; BSR set to: 15
  7630                           ;pin_manager.c: 111: RX2PPSbits.RXPPS = 0x1B;
  7631  000760  010E               	movlb	14	; () banked
  7632  000762  818D               	bsf	141,0,b	;volatile
  7633  000764  838D               	bsf	141,1,b	;volatile
  7634  000766  958D               	bcf	141,2,b	;volatile
  7635  000768  878D               	bsf	141,3,b	;volatile
  7636  00076A  898D               	bsf	141,4,b	;volatile
  7637                           
  7638                           ; BSR set to: 14
  7639                           ;pin_manager.c: 112: SSP1DATPPSbits.SSPDATPPS = 0x14;
  7640  00076C  91B8               	bcf	184,0,b	;volatile
  7641  00076E  93B8               	bcf	184,1,b	;volatile
  7642  000770  85B8               	bsf	184,2,b	;volatile
  7643  000772  97B8               	bcf	184,3,b	;volatile
  7644  000774  89B8               	bsf	184,4,b	;volatile
  7645                           
  7646                           ; BSR set to: 14
  7647  000776  0012               	return		;funcret
  7648  000778                     __end_of_PIN_MANAGER_Initialize:
  7649                           	opt stack 0
  7650                           tosu	equ	0xFFF
  7651                           tosh	equ	0xFFE
  7652                           tosl	equ	0xFFD
  7653                           pclath	equ	0xFFA
  7654                           tblptru	equ	0xFF8
  7655                           tblptrh	equ	0xFF7
  7656                           tblptrl	equ	0xFF6
  7657                           tablat	equ	0xFF5
  7658                           prodh	equ	0xFF4
  7659                           prodl	equ	0xFF3
  7660                           intcon	equ	0xFF2
  7661                           postinc0	equ	0xFEE
  7662                           wreg	equ	0xFE8
  7663                           indf1	equ	0xFE7
  7664                           postdec1	equ	0xFE5
  7665                           plusw1	equ	0xFE3
  7666                           fsr1h	equ	0xFE2
  7667                           fsr1l	equ	0xFE1
  7668                           indf2	equ	0xFDF
  7669                           postinc2	equ	0xFDE
  7670                           postdec2	equ	0xFDD
  7671                           plusw2	equ	0xFDB
  7672                           fsr2h	equ	0xFDA
  7673                           fsr2l	equ	0xFD9
  7674                           status	equ	0xFD8
  7675                           
  7676 ;; *************** function _OSCILLATOR_Initialize *****************
  7677 ;; Defined at:
  7678 ;;		line 126 in file "mcc_generated_files/mcc.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;		None
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;		None
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      void 
  7685 ;; Registers used:
  7686 ;;		wreg, status,2
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7696 ;;Total ram usage:        0 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    6
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_SYSTEM_Initialize
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text64
  7707  00115A                     __ptext64:
  7708                           	opt stack 0
  7709  00115A                     _OSCILLATOR_Initialize:
  7710                           	opt stack 23
  7711                           
  7712                           ;mcc.c: 129: OSCCON1 = 0x62;
  7713                           
  7714                           ; BSR set to: 14
  7715                           ;incstack = 0
  7716  00115A  0E62               	movlw	98
  7717  00115C  010E               	movlb	14	; () banked
  7718  00115E  6FD8               	movwf	216,b	;volatile
  7719                           
  7720                           ;mcc.c: 131: OSCCON3 = 0x00;
  7721  001160  0E00               	movlw	0
  7722  001162  6FDA               	movwf	218,b	;volatile
  7723                           
  7724                           ;mcc.c: 133: OSCEN = 0x00;
  7725  001164  0E00               	movlw	0
  7726  001166  6FDC               	movwf	220,b	;volatile
  7727                           
  7728                           ;mcc.c: 135: OSCFRQ = 0x03;
  7729  001168  0E03               	movlw	3
  7730  00116A  6FDE               	movwf	222,b	;volatile
  7731                           
  7732                           ;mcc.c: 137: OSCTUNE = 0x20;
  7733  00116C  0E20               	movlw	32
  7734  00116E  6FDD               	movwf	221,b	;volatile
  7735                           
  7736                           ; BSR set to: 14
  7737  001170  0012               	return		;funcret
  7738  001172                     __end_of_OSCILLATOR_Initialize:
  7739                           	opt stack 0
  7740                           tosu	equ	0xFFF
  7741                           tosh	equ	0xFFE
  7742                           tosl	equ	0xFFD
  7743                           pclath	equ	0xFFA
  7744                           tblptru	equ	0xFF8
  7745                           tblptrh	equ	0xFF7
  7746                           tblptrl	equ	0xFF6
  7747                           tablat	equ	0xFF5
  7748                           prodh	equ	0xFF4
  7749                           prodl	equ	0xFF3
  7750                           intcon	equ	0xFF2
  7751                           postinc0	equ	0xFEE
  7752                           wreg	equ	0xFE8
  7753                           indf1	equ	0xFE7
  7754                           postdec1	equ	0xFE5
  7755                           plusw1	equ	0xFE3
  7756                           fsr1h	equ	0xFE2
  7757                           fsr1l	equ	0xFE1
  7758                           indf2	equ	0xFDF
  7759                           postinc2	equ	0xFDE
  7760                           postdec2	equ	0xFDD
  7761                           plusw2	equ	0xFDB
  7762                           fsr2h	equ	0xFDA
  7763                           fsr2l	equ	0xFD9
  7764                           status	equ	0xFD8
  7765                           
  7766 ;; *************** function _INTERRUPT_Initialize *****************
  7767 ;; Defined at:
  7768 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		None
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7786 ;;Total ram usage:        0 bytes
  7787 ;; Hardware stack levels used:    1
  7788 ;; Hardware stack levels required when called:    6
  7789 ;; This function calls:
  7790 ;;		Nothing
  7791 ;; This function is called by:
  7792 ;;		_SYSTEM_Initialize
  7793 ;; This function uses a non-reentrant model
  7794 ;;
  7795                           
  7796                           	psect	text65
  7797  00143E                     __ptext65:
  7798                           	opt stack 0
  7799  00143E                     _INTERRUPT_Initialize:
  7800                           	opt stack 23
  7801                           
  7802                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  7803                           
  7804                           ; BSR set to: 14
  7805                           ;incstack = 0
  7806  00143E  9AF2               	bcf	intcon,5,c	;volatile
  7807  001440  0012               	return		;funcret
  7808  001442                     __end_of_INTERRUPT_Initialize:
  7809                           	opt stack 0
  7810                           tosu	equ	0xFFF
  7811                           tosh	equ	0xFFE
  7812                           tosl	equ	0xFFD
  7813                           pclath	equ	0xFFA
  7814                           tblptru	equ	0xFF8
  7815                           tblptrh	equ	0xFF7
  7816                           tblptrl	equ	0xFF6
  7817                           tablat	equ	0xFF5
  7818                           prodh	equ	0xFF4
  7819                           prodl	equ	0xFF3
  7820                           intcon	equ	0xFF2
  7821                           postinc0	equ	0xFEE
  7822                           wreg	equ	0xFE8
  7823                           indf1	equ	0xFE7
  7824                           postdec1	equ	0xFE5
  7825                           plusw1	equ	0xFE3
  7826                           fsr1h	equ	0xFE2
  7827                           fsr1l	equ	0xFE1
  7828                           indf2	equ	0xFDF
  7829                           postinc2	equ	0xFDE
  7830                           postdec2	equ	0xFDD
  7831                           plusw2	equ	0xFDB
  7832                           fsr2h	equ	0xFDA
  7833                           fsr2l	equ	0xFD9
  7834                           status	equ	0xFD8
  7835                           
  7836 ;; *************** function _EUSART2_Initialize *****************
  7837 ;; Defined at:
  7838 ;;		line 55 in file "mcc_generated_files/eusart2.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      void 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;Total ram usage:        0 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    6
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_SYSTEM_Initialize
  7863 ;;		_main
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           	psect	text66
  7868  001172                     __ptext66:
  7869                           	opt stack 0
  7870  001172                     _EUSART2_Initialize:
  7871                           	opt stack 23
  7872                           
  7873                           ;eusart2.c: 60: BAUD2CON = 0x08;
  7874                           
  7875                           ;incstack = 0
  7876  001172  0E08               	movlw	8
  7877  001174  010E               	movlb	14	; () banked
  7878  001176  6F9F               	movwf	159,b	;volatile
  7879                           
  7880                           ;eusart2.c: 63: RC2STA = 0x90;
  7881  001178  0E90               	movlw	144
  7882  00117A  6F9D               	movwf	157,b	;volatile
  7883                           
  7884                           ;eusart2.c: 66: TX2STA = 0x24;
  7885  00117C  0E24               	movlw	36
  7886  00117E  6F9E               	movwf	158,b	;volatile
  7887                           
  7888                           ;eusart2.c: 69: SP2BRGL = 0x33;
  7889  001180  0E33               	movlw	51
  7890  001182  6F9B               	movwf	155,b	;volatile
  7891                           
  7892                           ;eusart2.c: 72: SP2BRGH = 0x00;
  7893  001184  0E00               	movlw	0
  7894  001186  6F9C               	movwf	156,b	;volatile
  7895                           
  7896                           ; BSR set to: 14
  7897  001188  0012               	return		;funcret
  7898  00118A                     __end_of_EUSART2_Initialize:
  7899                           	opt stack 0
  7900                           tosu	equ	0xFFF
  7901                           tosh	equ	0xFFE
  7902                           tosl	equ	0xFFD
  7903                           pclath	equ	0xFFA
  7904                           tblptru	equ	0xFF8
  7905                           tblptrh	equ	0xFF7
  7906                           tblptrl	equ	0xFF6
  7907                           tablat	equ	0xFF5
  7908                           prodh	equ	0xFF4
  7909                           prodl	equ	0xFF3
  7910                           intcon	equ	0xFF2
  7911                           postinc0	equ	0xFEE
  7912                           wreg	equ	0xFE8
  7913                           indf1	equ	0xFE7
  7914                           postdec1	equ	0xFE5
  7915                           plusw1	equ	0xFE3
  7916                           fsr1h	equ	0xFE2
  7917                           fsr1l	equ	0xFE1
  7918                           indf2	equ	0xFDF
  7919                           postinc2	equ	0xFDE
  7920                           postdec2	equ	0xFDD
  7921                           plusw2	equ	0xFDB
  7922                           fsr2h	equ	0xFDA
  7923                           fsr2l	equ	0xFD9
  7924                           status	equ	0xFD8
  7925                           
  7926 ;; *************** function _EUSART1_Initialize *****************
  7927 ;; Defined at:
  7928 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;		None
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;		None
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  1    wreg      void 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;Total ram usage:        0 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    6
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_SYSTEM_Initialize
  7953 ;;		_main
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text67
  7958  00120E                     __ptext67:
  7959                           	opt stack 0
  7960  00120E                     _EUSART1_Initialize:
  7961                           	opt stack 23
  7962                           
  7963                           ;eusart1.c: 60: BAUD1CON = 0x08;
  7964                           
  7965                           ; BSR set to: 14
  7966                           ;incstack = 0
  7967  00120E  0E08               	movlw	8
  7968  001210  6E9F               	movwf	3999,c	;volatile
  7969                           
  7970                           ;eusart1.c: 63: RC1STA = 0x90;
  7971  001212  0E90               	movlw	144
  7972  001214  6E9D               	movwf	3997,c	;volatile
  7973                           
  7974                           ;eusart1.c: 66: TX1STA = 0x24;
  7975  001216  0E24               	movlw	36
  7976  001218  6E9E               	movwf	3998,c	;volatile
  7977                           
  7978                           ;eusart1.c: 69: SP1BRGL = 0x33;
  7979  00121A  0E33               	movlw	51
  7980  00121C  6E9B               	movwf	3995,c	;volatile
  7981                           
  7982                           ;eusart1.c: 72: SP1BRGH = 0x00;
  7983  00121E  0E00               	movlw	0
  7984  001220  6E9C               	movwf	3996,c	;volatile
  7985  001222  0012               	return		;funcret
  7986  001224                     __end_of_EUSART1_Initialize:
  7987                           	opt stack 0
  7988                           tosu	equ	0xFFF
  7989                           tosh	equ	0xFFE
  7990                           tosl	equ	0xFFD
  7991                           pclath	equ	0xFFA
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           intcon	equ	0xFF2
  7999                           postinc0	equ	0xFEE
  8000                           wreg	equ	0xFE8
  8001                           indf1	equ	0xFE7
  8002                           postdec1	equ	0xFE5
  8003                           plusw1	equ	0xFE3
  8004                           fsr1h	equ	0xFE2
  8005                           fsr1l	equ	0xFE1
  8006                           indf2	equ	0xFDF
  8007                           postinc2	equ	0xFDE
  8008                           postdec2	equ	0xFDD
  8009                           plusw2	equ	0xFDB
  8010                           fsr2h	equ	0xFDA
  8011                           fsr2l	equ	0xFD9
  8012                           status	equ	0xFD8
  8013                           
  8014 ;; *************** function _EUSART2_is_rx_ready *****************
  8015 ;; Defined at:
  8016 ;;		line 82 in file "mcc_generated_files/eusart2.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;		None
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;		None
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  1    wreg      unsigned char 
  8023 ;; Registers used:
  8024 ;;		wreg
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8034 ;;Total ram usage:        0 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    6
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_main
  8041 ;;		_readAllBytes
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           	psect	text68
  8046  001330                     __ptext68:
  8047                           	opt stack 0
  8048  001330                     _EUSART2_is_rx_ready:
  8049                           	opt stack 24
  8050                           
  8051                           ;eusart2.c: 84: return PIR3bits.RC2IF;
  8052                           
  8053                           ;incstack = 0
  8054  001330  010E               	movlb	14	; () banked
  8055  001332  AFCD               	btfss	205,7,b	;volatile
  8056  001334  D002               	goto	u1460
  8057  001336  0E01               	movlw	1
  8058  001338  0012               	return	
  8059  00133A                     u1460:
  8060  00133A  0E00               	movlw	0
  8061  00133C  0012               	return	
  8062  00133E                     __end_of_EUSART2_is_rx_ready:
  8063                           	opt stack 0
  8064                           tosu	equ	0xFFF
  8065                           tosh	equ	0xFFE
  8066                           tosl	equ	0xFFD
  8067                           pclath	equ	0xFFA
  8068                           tblptru	equ	0xFF8
  8069                           tblptrh	equ	0xFF7
  8070                           tblptrl	equ	0xFF6
  8071                           tablat	equ	0xFF5
  8072                           prodh	equ	0xFF4
  8073                           prodl	equ	0xFF3
  8074                           intcon	equ	0xFF2
  8075                           postinc0	equ	0xFEE
  8076                           wreg	equ	0xFE8
  8077                           indf1	equ	0xFE7
  8078                           postdec1	equ	0xFE5
  8079                           plusw1	equ	0xFE3
  8080                           fsr1h	equ	0xFE2
  8081                           fsr1l	equ	0xFE1
  8082                           indf2	equ	0xFDF
  8083                           postinc2	equ	0xFDE
  8084                           postdec2	equ	0xFDD
  8085                           plusw2	equ	0xFDB
  8086                           fsr2h	equ	0xFDA
  8087                           fsr2l	equ	0xFD9
  8088                           status	equ	0xFD8
  8089                           
  8090 ;; *************** function _EUSART2_Write *****************
  8091 ;; Defined at:
  8092 ;;		line 111 in file "mcc_generated_files/eusart2.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  txData          1    wreg     unsigned char 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;  txData          1   21[COMRAM] unsigned char 
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		wreg
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;Total ram usage:        1 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:    6
  8113 ;; This function calls:
  8114 ;;		Nothing
  8115 ;; This function is called by:
  8116 ;;		_main
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text69
  8121  00133E                     __ptext69:
  8122                           	opt stack 0
  8123  00133E                     _EUSART2_Write:
  8124                           	opt stack 24
  8125                           
  8126                           ; BSR set to: 14
  8127                           ;incstack = 0
  8128                           ;EUSART2_Write@txData stored from wreg
  8129  00133E  6E16               	movwf	EUSART2_Write@txData,c
  8130  001340                     
  8131                           ;eusart2.c: 114: {
  8132                           
  8133                           ;eusart2.c: 113: while(0 == PIR3bits.TX2IF)
  8134  001340  010E               	movlb	14	; () banked
  8135  001342  ADCD               	btfss	205,6,b	;volatile
  8136  001344  D7FD               	goto	l3484
  8137                           
  8138                           ; BSR set to: 14
  8139                           ;eusart2.c: 115: }
  8140                           ;eusart2.c: 117: TX2REG = txData;
  8141                           
  8142                           ; BSR set to: 14
  8143  001346  C016  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  8144                           
  8145                           ; BSR set to: 14
  8146  00134A  0012               	return		;funcret
  8147  00134C                     __end_of_EUSART2_Write:
  8148                           	opt stack 0
  8149                           tosu	equ	0xFFF
  8150                           tosh	equ	0xFFE
  8151                           tosl	equ	0xFFD
  8152                           pclath	equ	0xFFA
  8153                           tblptru	equ	0xFF8
  8154                           tblptrh	equ	0xFF7
  8155                           tblptrl	equ	0xFF6
  8156                           tablat	equ	0xFF5
  8157                           prodh	equ	0xFF4
  8158                           prodl	equ	0xFF3
  8159                           intcon	equ	0xFF2
  8160                           postinc0	equ	0xFEE
  8161                           wreg	equ	0xFE8
  8162                           indf1	equ	0xFE7
  8163                           postdec1	equ	0xFE5
  8164                           plusw1	equ	0xFE3
  8165                           fsr1h	equ	0xFE2
  8166                           fsr1l	equ	0xFE1
  8167                           indf2	equ	0xFDF
  8168                           postinc2	equ	0xFDE
  8169                           postdec2	equ	0xFDD
  8170                           plusw2	equ	0xFDB
  8171                           fsr2h	equ	0xFDA
  8172                           fsr2l	equ	0xFD9
  8173                           status	equ	0xFD8
  8174                           
  8175 ;; *************** function _EUSART2_Read *****************
  8176 ;; Defined at:
  8177 ;;		line 92 in file "mcc_generated_files/eusart2.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;		None
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;		None
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      unsigned char 
  8184 ;; Registers used:
  8185 ;;		wreg, status,2
  8186 ;; Tracked objects:
  8187 ;;		On entry : 0/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8195 ;;Total ram usage:        0 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:    6
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_main
  8202 ;;		_readAllBytes
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text70
  8207  001270                     __ptext70:
  8208                           	opt stack 0
  8209  001270                     _EUSART2_Read:
  8210                           	opt stack 24
  8211                           
  8212                           ;eusart2.c: 96: {
  8213                           
  8214                           ;eusart2.c: 95: while(!PIR3bits.RC2IF)
  8215                           
  8216                           ; BSR set to: 14
  8217                           ;incstack = 0
  8218  001270  010E               	movlb	14	; () banked
  8219  001272  AFCD               	btfss	205,7,b	;volatile
  8220  001274  D7FD               	goto	_EUSART2_Read
  8221                           
  8222                           ; BSR set to: 14
  8223                           ;eusart2.c: 97: }
  8224                           ;eusart2.c: 100: if(1 == RC2STAbits.OERR)
  8225  001276  A39D               	btfss	157,1,b	;volatile
  8226  001278  D002               	goto	l647
  8227                           
  8228                           ; BSR set to: 14
  8229                           ;eusart2.c: 101: {
  8230                           ;eusart2.c: 104: RC2STAbits.SPEN = 0;
  8231  00127A  9F9D               	bcf	157,7,b	;volatile
  8232                           
  8233                           ;eusart2.c: 105: RC2STAbits.SPEN = 1;
  8234  00127C  8F9D               	bsf	157,7,b	;volatile
  8235  00127E                     l647:
  8236                           
  8237                           ; BSR set to: 14
  8238                           ;eusart2.c: 106: }
  8239                           ;eusart2.c: 108: return RC2REG;
  8240                           
  8241                           ; BSR set to: 14
  8242  00127E  5199               	movf	153,w,b	;volatile
  8243  001280  0012               	return	
  8244  001282                     __end_of_EUSART2_Read:
  8245                           	opt stack 0
  8246                           tosu	equ	0xFFF
  8247                           tosh	equ	0xFFE
  8248                           tosl	equ	0xFFD
  8249                           pclath	equ	0xFFA
  8250                           tblptru	equ	0xFF8
  8251                           tblptrh	equ	0xFF7
  8252                           tblptrl	equ	0xFF6
  8253                           tablat	equ	0xFF5
  8254                           prodh	equ	0xFF4
  8255                           prodl	equ	0xFF3
  8256                           intcon	equ	0xFF2
  8257                           postinc0	equ	0xFEE
  8258                           wreg	equ	0xFE8
  8259                           indf1	equ	0xFE7
  8260                           postdec1	equ	0xFE5
  8261                           plusw1	equ	0xFE3
  8262                           fsr1h	equ	0xFE2
  8263                           fsr1l	equ	0xFE1
  8264                           indf2	equ	0xFDF
  8265                           postinc2	equ	0xFDE
  8266                           postdec2	equ	0xFDD
  8267                           plusw2	equ	0xFDB
  8268                           fsr2h	equ	0xFDA
  8269                           fsr2l	equ	0xFD9
  8270                           status	equ	0xFD8
  8271                           
  8272 ;; *************** function _EUSART1_Write *****************
  8273 ;; Defined at:
  8274 ;;		line 111 in file "mcc_generated_files/eusart1.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  txData          1    wreg     unsigned char 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  txData          1   21[COMRAM] unsigned char 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;Total ram usage:        1 bytes
  8293 ;; Hardware stack levels used:    1
  8294 ;; Hardware stack levels required when called:    6
  8295 ;; This function calls:
  8296 ;;		Nothing
  8297 ;; This function is called by:
  8298 ;;		_main
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text71
  8303  00134C                     __ptext71:
  8304                           	opt stack 0
  8305  00134C                     _EUSART1_Write:
  8306                           	opt stack 24
  8307                           
  8308                           ; BSR set to: 14
  8309                           ;incstack = 0
  8310                           ;EUSART1_Write@txData stored from wreg
  8311  00134C  6E16               	movwf	EUSART1_Write@txData,c
  8312  00134E                     
  8313                           ;eusart1.c: 114: {
  8314                           
  8315                           ;eusart1.c: 113: while(0 == PIR3bits.TX1IF)
  8316  00134E  010E               	movlb	14	; () banked
  8317  001350  A9CD               	btfss	205,4,b	;volatile
  8318  001352  D7FD               	goto	l3528
  8319                           
  8320                           ; BSR set to: 14
  8321                           ;eusart1.c: 115: }
  8322                           ;eusart1.c: 117: TX1REG = txData;
  8323                           
  8324                           ; BSR set to: 14
  8325  001354  C016  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  8326                           
  8327                           ; BSR set to: 14
  8328  001358  0012               	return		;funcret
  8329  00135A                     __end_of_EUSART1_Write:
  8330                           	opt stack 0
  8331                           tosu	equ	0xFFF
  8332                           tosh	equ	0xFFE
  8333                           tosl	equ	0xFFD
  8334                           pclath	equ	0xFFA
  8335                           tblptru	equ	0xFF8
  8336                           tblptrh	equ	0xFF7
  8337                           tblptrl	equ	0xFF6
  8338                           tablat	equ	0xFF5
  8339                           prodh	equ	0xFF4
  8340                           prodl	equ	0xFF3
  8341                           intcon	equ	0xFF2
  8342                           postinc0	equ	0xFEE
  8343                           wreg	equ	0xFE8
  8344                           indf1	equ	0xFE7
  8345                           postdec1	equ	0xFE5
  8346                           plusw1	equ	0xFE3
  8347                           fsr1h	equ	0xFE2
  8348                           fsr1l	equ	0xFE1
  8349                           indf2	equ	0xFDF
  8350                           postinc2	equ	0xFDE
  8351                           postdec2	equ	0xFDD
  8352                           plusw2	equ	0xFDB
  8353                           fsr2h	equ	0xFDA
  8354                           fsr2l	equ	0xFD9
  8355                           status	equ	0xFD8
  8356                           
  8357 ;; *************** function _INTERRUPT_InterruptManager *****************
  8358 ;; Defined at:
  8359 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;		None
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;		None
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  1    wreg      void 
  8366 ;; Registers used:
  8367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8375 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8376 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8377 ;;Total ram usage:       18 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    5
  8380 ;; This function calls:
  8381 ;;		Absolute function
  8382 ;;		_i2c_busCollisionISR
  8383 ;;		i2_i2c_ISR
  8384 ;; This function is called by:
  8385 ;;		Interrupt level 2
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	intcode
  8390  000008                     __pintcode:
  8391                           	opt stack 0
  8392  000008                     _INTERRUPT_InterruptManager:
  8393                           	opt stack 13
  8394                           
  8395                           ; BSR set to: 14
  8396                           ;incstack = 0
  8397  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8398  00000A  CFFA F004          	movff	pclath,??_INTERRUPT_InterruptManager
  8399  00000E  CFFB F005          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8400  000012  CFE9 F006          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  8401  000016  CFEA F007          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  8402  00001A  CFE1 F008          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  8403  00001E  CFE2 F009          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  8404  000022  CFD9 F00A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  8405  000026  CFDA F00B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  8406  00002A  CFF3 F00C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  8407  00002E  CFF4 F00D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  8408  000032  CFF6 F00E          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  8409  000036  CFF7 F00F          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  8410  00003A  CFF8 F010          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  8411  00003E  CFF5 F011          	movff	tablat,??_INTERRUPT_InterruptManager+13
  8412  000042  C047  F012         	movff	btemp,??_INTERRUPT_InterruptManager+14
  8413  000046  C048  F013         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  8414  00004A  C049  F014         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  8415  00004E  C04A  F015         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  8416                           
  8417                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  8418  000052  ACF2               	btfss	intcon,6,c	;volatile
  8419  000054  D01D               	goto	i2u250_49
  8420                           
  8421                           ;interrupt_manager.c: 61: {
  8422                           ;interrupt_manager.c: 62: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  8423  000056  010E               	movlb	14	; () banked
  8424  000058  B3C5               	btfsc	197,1,b	;volatile
  8425                           
  8426                           ; BSR set to: 14
  8427  00005A  A3CD               	btfss	205,1,b	;volatile
  8428  00005C  D00A               	goto	i2l281
  8429                           
  8430                           ; BSR set to: 14
  8431                           ;interrupt_manager.c: 63: {
  8432                           ;interrupt_manager.c: 64: i2c1_driver_busCollisionISR();
  8433  00005E  D801               	call	i2u247_48
  8434  000060  D017               	goto	i2u250_49
  8435  000062                     i2u247_48:
  8436  000062  0005               	push	
  8437  000064  6EFA               	movwf	pclath,c
  8438  000066  5044               	movf	_i2c1_driver_busCollisionISR,w,c
  8439  000068  6EFD               	movwf	tosl,c
  8440  00006A  5045               	movf	_i2c1_driver_busCollisionISR+1,w,c
  8441  00006C  6EFE               	movwf	tosh,c
  8442  00006E  5046               	movf	_i2c1_driver_busCollisionISR+2,w,c
  8443  000070  D00C               	goto	L5
  8444  000072                     i2l281:
  8445                           
  8446                           ; BSR set to: 14
  8447                           ;interrupt_manager.c: 66: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  8448  000072  B1C5               	btfsc	197,0,b	;volatile
  8449                           
  8450                           ; BSR set to: 14
  8451  000074  A1CD               	btfss	205,0,b	;volatile
  8452  000076  D00C               	goto	i2u250_49
  8453                           
  8454                           ; BSR set to: 14
  8455                           ;interrupt_manager.c: 67: {
  8456                           ;interrupt_manager.c: 68: i2c1_driver_i2cISR();
  8457  000078  D801               	call	i2u250_48
  8458  00007A  D00A               	goto	i2u250_49
  8459  00007C                     i2u250_48:
  8460  00007C  0005               	push	
  8461  00007E  6EFA               	movwf	pclath,c
  8462  000080  5041               	movf	_i2c1_driver_i2cISR,w,c
  8463  000082  6EFD               	movwf	tosl,c
  8464  000084  5042               	movf	_i2c1_driver_i2cISR+1,w,c
  8465  000086  6EFE               	movwf	tosh,c
  8466  000088  5043               	movf	_i2c1_driver_i2cISR+2,w,c
  8467  00008A                     L5:
  8468  00008A  6EFF               	movwf	tosu,c
  8469  00008C  50FA               	movf	pclath,w,c
  8470  00008E  0012               	return		;indir
  8471  000090                     i2u250_49:
  8472                           
  8473                           ;interrupt_manager.c: 75: else
  8474                           ;interrupt_manager.c: 76: {
  8475                           
  8476                           ;interrupt_manager.c: 73: }
  8477                           ;interrupt_manager.c: 74: }
  8478                           
  8479                           ;interrupt_manager.c: 70: else
  8480                           ;interrupt_manager.c: 71: {
  8481                           
  8482                           ;interrupt_manager.c: 69: }
  8483  000090  C015  F04A         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  8484  000094  C014  F049         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  8485  000098  C013  F048         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  8486  00009C  C012  F047         	movff	??_INTERRUPT_InterruptManager+14,btemp
  8487  0000A0  C011  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  8488  0000A4  C010  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  8489  0000A8  C00F  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  8490  0000AC  C00E  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  8491  0000B0  C00D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  8492  0000B4  C00C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  8493  0000B8  C00B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  8494  0000BC  C00A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  8495  0000C0  C009  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  8496  0000C4  C008  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  8497  0000C8  C007  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  8498  0000CC  C006  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  8499  0000D0  C005  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8500  0000D4  C004  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8501  0000D8  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8502  0000DA  0011               	retfie		f
  8503  0000DC                     __end_of_INTERRUPT_InterruptManager:
  8504                           	opt stack 0
  8505                           tosu	equ	0xFFF
  8506                           tosh	equ	0xFFE
  8507                           tosl	equ	0xFFD
  8508                           pclatu	equ	0xFFB
  8509                           pclath	equ	0xFFA
  8510                           tblptru	equ	0xFF8
  8511                           tblptrh	equ	0xFF7
  8512                           tblptrl	equ	0xFF6
  8513                           tablat	equ	0xFF5
  8514                           prodh	equ	0xFF4
  8515                           prodl	equ	0xFF3
  8516                           intcon	equ	0xFF2
  8517                           postinc0	equ	0xFEE
  8518                           fsr0h	equ	0xFEA
  8519                           fsr0l	equ	0xFE9
  8520                           wreg	equ	0xFE8
  8521                           indf1	equ	0xFE7
  8522                           postdec1	equ	0xFE5
  8523                           plusw1	equ	0xFE3
  8524                           fsr1h	equ	0xFE2
  8525                           fsr1l	equ	0xFE1
  8526                           indf2	equ	0xFDF
  8527                           postinc2	equ	0xFDE
  8528                           postdec2	equ	0xFDD
  8529                           plusw2	equ	0xFDB
  8530                           fsr2h	equ	0xFDA
  8531                           fsr2l	equ	0xFD9
  8532                           status	equ	0xFD8
  8533                           
  8534 ;; *************** function i2_i2c_ISR *****************
  8535 ;; Defined at:
  8536 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;		None
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;                  1    wreg      void 
  8543 ;; Registers used:
  8544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8554 ;;Total ram usage:        0 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; Hardware stack levels required when called:    4
  8557 ;; This function calls:
  8558 ;;		i2_do_I2C_DO_ACK
  8559 ;;		i2_do_I2C_DO_ADDRESS_NACK
  8560 ;;		i2_do_I2C_DO_NACK_RESTART
  8561 ;;		i2_do_I2C_DO_NACK_STOP
  8562 ;;		i2_do_I2C_IDLE
  8563 ;;		i2_do_I2C_RCEN
  8564 ;;		i2_do_I2C_RESET
  8565 ;;		i2_do_I2C_RX
  8566 ;;		i2_do_I2C_SEND_ADR_READ
  8567 ;;		i2_do_I2C_SEND_ADR_WRITE
  8568 ;;		i2_do_I2C_SEND_RESTART
  8569 ;;		i2_do_I2C_SEND_RESTART_READ
  8570 ;;		i2_do_I2C_SEND_RESTART_WRITE
  8571 ;;		i2_do_I2C_SEND_STOP
  8572 ;;		i2_do_I2C_TX
  8573 ;;		i2_do_I2C_TX_EMPTY
  8574 ;;		i2_i2c1_driver_isNACK
  8575 ;;		i2_mssp1_clearIRQ
  8576 ;; This function is called by:
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text73
  8581  000CFA                     __ptext73:
  8582                           	opt stack 0
  8583  000CFA                     i2_i2c_ISR:
  8584                           	opt stack 13
  8585                           
  8586                           ;i2c_master.c: 421: mssp1_clearIRQ();
  8587                           
  8588                           ;incstack = 0
  8589  000CFA  EC03  F00A         	call	i2_mssp1_clearIRQ	;wreg free
  8590                           
  8591                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  8592  000CFE  0100               	movlb	0	; () banked
  8593  000D00  A760               	btfss	_i2c_status& (0+255),3,b
  8594  000D02  D007               	goto	i2l483
  8595                           
  8596                           ; BSR set to: 0
  8597  000D04  EC12  F009         	call	i2_i2c1_driver_isNACK	;wreg free
  8598  000D08  A0D8               	btfss	status,0,c
  8599  000D0A  D003               	goto	i2l483
  8600                           
  8601                           ;i2c_master.c: 428: {
  8602                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  8603  000D0C  0E0F               	movlw	15
  8604  000D0E  0100               	movlb	0	; () banked
  8605  000D10  6F6A               	movwf	(_i2c_status+10)& (0+255),b
  8606  000D12                     i2l483:
  8607                           
  8608                           ;i2c_master.c: 430: }
  8609                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  8610                           
  8611                           ; BSR set to: 0
  8612  000D12  0100               	movlb	0	; () banked
  8613  000D14  516A               	movf	(_i2c_status+10)& (0+255),w,b
  8614  000D16  0D03               	mullw	3
  8615  000D18  0EC7               	movlw	low _fsmStateTable
  8616  000D1A  24F3               	addwf	prodl,w,c
  8617  000D1C  6ED9               	movwf	fsr2l,c
  8618  000D1E  0E00               	movlw	high _fsmStateTable
  8619  000D20  20F4               	addwfc	prodh,w,c
  8620  000D22  6EDA               	movwf	fsr2h,c
  8621  000D24  D801               	call	i2u243_48
  8622  000D26  D00A               	goto	i2u243_49
  8623  000D28                     i2u243_48:
  8624  000D28  0005               	push	
  8625  000D2A  6EFA               	movwf	pclath,c
  8626  000D2C  50DE               	movf	postinc2,w,c
  8627  000D2E  6EFD               	movwf	tosl,c
  8628  000D30  50DE               	movf	postinc2,w,c
  8629  000D32  6EFE               	movwf	tosh,c
  8630  000D34  50DE               	movf	postinc2,w,c
  8631  000D36  6EFF               	movwf	tosu,c
  8632  000D38  50FA               	movf	pclath,w,c
  8633  000D3A  0012               	return		;indir
  8634  000D3C                     i2u243_49:
  8635  000D3C  0100               	movlb	0	; () banked
  8636  000D3E  6F6A               	movwf	(_i2c_status+10)& (0+255),b
  8637                           
  8638                           ; BSR set to: 0
  8639  000D40  0012               	return		;funcret
  8640  000D42                     __end_ofi2_i2c_ISR:
  8641                           	opt stack 0
  8642                           tosu	equ	0xFFF
  8643                           tosh	equ	0xFFE
  8644                           tosl	equ	0xFFD
  8645                           pclatu	equ	0xFFB
  8646                           pclath	equ	0xFFA
  8647                           tblptru	equ	0xFF8
  8648                           tblptrh	equ	0xFF7
  8649                           tblptrl	equ	0xFF6
  8650                           tablat	equ	0xFF5
  8651                           prodh	equ	0xFF4
  8652                           prodl	equ	0xFF3
  8653                           intcon	equ	0xFF2
  8654                           postinc0	equ	0xFEE
  8655                           fsr0h	equ	0xFEA
  8656                           fsr0l	equ	0xFE9
  8657                           wreg	equ	0xFE8
  8658                           indf1	equ	0xFE7
  8659                           postdec1	equ	0xFE5
  8660                           plusw1	equ	0xFE3
  8661                           fsr1h	equ	0xFE2
  8662                           fsr1l	equ	0xFE1
  8663                           indf2	equ	0xFDF
  8664                           postinc2	equ	0xFDE
  8665                           postdec2	equ	0xFDD
  8666                           plusw2	equ	0xFDB
  8667                           fsr2h	equ	0xFDA
  8668                           fsr2l	equ	0xFD9
  8669                           status	equ	0xFD8
  8670                           
  8671 ;; *************** function i2_mssp1_clearIRQ *****************
  8672 ;; Defined at:
  8673 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;		None
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		None
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8691 ;;Total ram usage:        0 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		i2_i2c_ISR
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text74
  8701  001406                     __ptext74:
  8702                           	opt stack 0
  8703  001406                     i2_mssp1_clearIRQ:
  8704                           	opt stack 16
  8705                           
  8706                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;incstack = 0
  8710  001406  010E               	movlb	14	; () banked
  8711  001408  91CD               	bcf	205,0,b	;volatile
  8712                           
  8713                           ; BSR set to: 14
  8714  00140A  0012               	return		;funcret
  8715  00140C                     __end_ofi2_mssp1_clearIRQ:
  8716                           	opt stack 0
  8717                           tosu	equ	0xFFF
  8718                           tosh	equ	0xFFE
  8719                           tosl	equ	0xFFD
  8720                           pclatu	equ	0xFFB
  8721                           pclath	equ	0xFFA
  8722                           tblptru	equ	0xFF8
  8723                           tblptrh	equ	0xFF7
  8724                           tblptrl	equ	0xFF6
  8725                           tablat	equ	0xFF5
  8726                           prodh	equ	0xFF4
  8727                           prodl	equ	0xFF3
  8728                           intcon	equ	0xFF2
  8729                           postinc0	equ	0xFEE
  8730                           fsr0h	equ	0xFEA
  8731                           fsr0l	equ	0xFE9
  8732                           wreg	equ	0xFE8
  8733                           indf1	equ	0xFE7
  8734                           postdec1	equ	0xFE5
  8735                           plusw1	equ	0xFE3
  8736                           fsr1h	equ	0xFE2
  8737                           fsr1l	equ	0xFE1
  8738                           indf2	equ	0xFDF
  8739                           postinc2	equ	0xFDE
  8740                           postdec2	equ	0xFDD
  8741                           plusw2	equ	0xFDB
  8742                           fsr2h	equ	0xFDA
  8743                           fsr2l	equ	0xFD9
  8744                           status	equ	0xFD8
  8745                           
  8746 ;; *************** function i2_do_I2C_RX *****************
  8747 ;; Defined at:
  8748 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;		None
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;		None
  8753 ;; Return value:  Size  Location     Type
  8754 ;;                  1    wreg      enum E11956
  8755 ;; Registers used:
  8756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 0/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8766 ;;Total ram usage:        0 bytes
  8767 ;; Hardware stack levels used:    1
  8768 ;; Hardware stack levels required when called:    3
  8769 ;; This function calls:
  8770 ;;		Absolute function
  8771 ;;		i2_do_I2C_DO_NACK_RESTART
  8772 ;;		i2_do_I2C_DO_NACK_STOP
  8773 ;;		i2_i2c1_driver_getRXData
  8774 ;;		i2_i2c1_driver_sendACK
  8775 ;;		i2_i2c_restartWrite
  8776 ;;		i2_rd1RegCompleteHandler
  8777 ;;		i2_rd2RegCompleteHandler
  8778 ;;		i2_rdBlkRegCompleteHandler
  8779 ;;		i2_returnReset
  8780 ;;		i2_returnStop
  8781 ;;		i2_wr1RegCompleteHandler
  8782 ;;		i2_wr2RegCompleteHandler
  8783 ;; This function is called by:
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text75
  8788  000AA0                     __ptext75:
  8789                           	opt stack 0
  8790  000AA0                     i2_do_I2C_RX:
  8791                           	opt stack 13
  8792                           
  8793                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  8794                           
  8795                           ; BSR set to: 14
  8796                           ;incstack = 0
  8797  000AA0  EC21  F00A         	call	i2_i2c1_driver_getRXData	;wreg free
  8798  000AA4  C062  FFD9         	movff	_i2c_status+2,fsr2l
  8799  000AA8  C063  FFDA         	movff	_i2c_status+3,fsr2h
  8800  000AAC  6EDF               	movwf	indf2,c
  8801  000AAE  0100               	movlb	0	; () banked
  8802  000AB0  4B62               	infsnz	(_i2c_status+2)& (0+255),f,b
  8803  000AB2  2B63               	incf	(_i2c_status+3)& (0+255),f,b
  8804                           
  8805                           ; BSR set to: 0
  8806                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  8807  000AB4  0764               	decf	(_i2c_status+4)& (0+255),f,b
  8808  000AB6  A0D8               	btfss	status,0,c
  8809  000AB8  0765               	decf	(_i2c_status+5)& (0+255),f,b
  8810  000ABA  5164               	movf	(_i2c_status+4)& (0+255),w,b
  8811  000ABC  1165               	iorwf	(_i2c_status+5)& (0+255),w,b
  8812  000ABE  B4D8               	btfsc	status,2,c
  8813  000AC0  D004               	goto	i2l459
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;i2c_master.c: 361: {
  8817                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  8818  000AC2  EC0C  F00A         	call	i2_i2c1_driver_sendACK	;wreg free
  8819                           
  8820                           ;i2c_master.c: 363: return I2C_RCEN;
  8821  000AC6  0E05               	movlw	5
  8822                           
  8823                           ;i2c_master.c: 364: }
  8824  000AC8  0012               	return	
  8825  000ACA                     i2l459:
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;i2c_master.c: 365: else
  8829                           ;i2c_master.c: 366: {
  8830                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  8831  000ACA  8560               	bsf	_i2c_status& (0+255),2,b
  8832                           
  8833                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  8834  000ACC  D006               	goto	i2l462
  8835  000ACE                     
  8836                           ;i2c_master.c: 371: case i2c_restart_read:
  8837                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  8838                           
  8839                           ; BSR set to: 0
  8840                           
  8841                           ; BSR set to: 0
  8842  000ACE  ECD4  F009         	call	i2_do_I2C_DO_NACK_RESTART	;wreg free
  8843  000AD2  0012               	return	
  8844  000AD4                     
  8845                           ;i2c_master.c: 375: case i2c_stop:
  8846                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  8847                           
  8848                           ;i2c_master.c: 374: case i2c_continue:
  8849  000AD4  ECD8  F009         	call	i2_do_I2C_DO_NACK_STOP	;wreg free
  8850                           
  8851                           ;i2c_master.c: 377: }
  8852  000AD8  0012               	return	
  8853  000ADA                     i2l462:
  8854  000ADA  C07E  F00C         	movff	_i2c_status+30,i2returnStop@p
  8855  000ADE  C07F  F00D         	movff	_i2c_status+31,i2returnStop@p+1
  8856  000AE2  EE20  F06C         	lfsr	2,_i2c_status+12
  8857  000AE6  D801               	call	i2u235_48
  8858  000AE8  D00A               	goto	i2u235_49
  8859  000AEA                     i2u235_48:
  8860  000AEA  0005               	push	
  8861  000AEC  6EFA               	movwf	pclath,c
  8862  000AEE  50DE               	movf	postinc2,w,c
  8863  000AF0  6EFD               	movwf	tosl,c
  8864  000AF2  50DE               	movf	postinc2,w,c
  8865  000AF4  6EFE               	movwf	tosh,c
  8866  000AF6  50DE               	movf	postinc2,w,c
  8867  000AF8  6EFF               	movwf	tosu,c
  8868  000AFA  50FA               	movf	pclath,w,c
  8869  000AFC  0012               	return		;indir
  8870  000AFE                     i2u235_49:
  8871                           
  8872                           ; Switch size 1, requested type "space"
  8873                           ; Number of cases is 4, Range of values is 1 to 4
  8874                           ; switch strategies available:
  8875                           ; Name         Instructions Cycles
  8876                           ; simple_byte           13     7 (average)
  8877                           ;	Chosen strategy is simple_byte
  8878  000AFE  0A01               	xorlw	1	; case 1
  8879  000B00  B4D8               	btfsc	status,2,c
  8880  000B02  D7E8               	goto	i2l465
  8881  000B04  0A03               	xorlw	3	; case 2
  8882  000B06  B4D8               	btfsc	status,2,c
  8883  000B08  D7E2               	goto	i2l463
  8884  000B0A  0A01               	xorlw	1	; case 3
  8885  000B0C  B4D8               	btfsc	status,2,c
  8886  000B0E  D7DF               	goto	i2l463
  8887  000B10  0A07               	xorlw	7	; case 4
  8888  000B12  D7E0               	goto	i2l465
  8889  000B14                     __end_ofi2_do_I2C_RX:
  8890                           	opt stack 0
  8891                           tosu	equ	0xFFF
  8892                           tosh	equ	0xFFE
  8893                           tosl	equ	0xFFD
  8894                           pclatu	equ	0xFFB
  8895                           pclath	equ	0xFFA
  8896                           tblptru	equ	0xFF8
  8897                           tblptrh	equ	0xFF7
  8898                           tblptrl	equ	0xFF6
  8899                           tablat	equ	0xFF5
  8900                           prodh	equ	0xFF4
  8901                           prodl	equ	0xFF3
  8902                           intcon	equ	0xFF2
  8903                           postinc0	equ	0xFEE
  8904                           fsr0h	equ	0xFEA
  8905                           fsr0l	equ	0xFE9
  8906                           wreg	equ	0xFE8
  8907                           indf1	equ	0xFE7
  8908                           postdec1	equ	0xFE5
  8909                           plusw1	equ	0xFE3
  8910                           fsr1h	equ	0xFE2
  8911                           fsr1l	equ	0xFE1
  8912                           indf2	equ	0xFDF
  8913                           postinc2	equ	0xFDE
  8914                           postdec2	equ	0xFDD
  8915                           plusw2	equ	0xFDB
  8916                           fsr2h	equ	0xFDA
  8917                           fsr2l	equ	0xFD9
  8918                           status	equ	0xFD8
  8919                           
  8920 ;; *************** function i2_do_I2C_TX *****************
  8921 ;; Defined at:
  8922 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;		None
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;		None
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  1    wreg      enum E11956
  8929 ;; Registers used:
  8930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/0
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8940 ;;Total ram usage:        2 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:    3
  8943 ;; This function calls:
  8944 ;;		Absolute function
  8945 ;;		i2_do_I2C_SEND_RESTART_READ
  8946 ;;		i2_do_I2C_SEND_RESTART_WRITE
  8947 ;;		i2_do_I2C_SEND_STOP
  8948 ;;		i2_i2c1_driver_TXData
  8949 ;;		i2_i2c1_driver_isNACK
  8950 ;;		i2_i2c_restartWrite
  8951 ;;		i2_rd1RegCompleteHandler
  8952 ;;		i2_rd2RegCompleteHandler
  8953 ;;		i2_rdBlkRegCompleteHandler
  8954 ;;		i2_returnReset
  8955 ;;		i2_returnStop
  8956 ;;		i2_wr1RegCompleteHandler
  8957 ;;		i2_wr2RegCompleteHandler
  8958 ;; This function is called by:
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           	psect	text76
  8963  0008A6                     __ptext76:
  8964                           	opt stack 0
  8965  0008A6                     i2_do_I2C_TX:
  8966                           	opt stack 13
  8967                           
  8968                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  8969                           
  8970                           ;incstack = 0
  8971  0008A6  EC12  F009         	call	i2_i2c1_driver_isNACK	;wreg free
  8972  0008AA  B0D8               	btfsc	status,0,c
  8973  0008AC  D00A               	goto	i2l444
  8974  0008AE  D026               	goto	i2l443
  8975  0008B0                     
  8976                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  8977  0008B0  ECEC  F009         	call	i2_do_I2C_SEND_RESTART_READ	;wreg free
  8978  0008B4  0012               	return	
  8979  0008B6                     
  8980                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  8981  0008B6  ECE8  F009         	call	i2_do_I2C_SEND_RESTART_WRITE	;wreg free
  8982  0008BA  0012               	return	
  8983  0008BC                     
  8984                           ;i2c_master.c: 345: case i2c_stop:
  8985                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  8986                           
  8987                           ;i2c_master.c: 344: case i2c_continue:
  8988  0008BC  ECE0  F009         	call	i2_do_I2C_SEND_STOP	;wreg free
  8989                           
  8990                           ;i2c_master.c: 347: }
  8991  0008C0  0012               	return	
  8992  0008C2                     i2l444:
  8993  0008C2  C084  F00C         	movff	_i2c_status+36,i2returnStop@p
  8994  0008C6  C085  F00D         	movff	_i2c_status+37,i2returnStop@p+1
  8995  0008CA  EE20  F075         	lfsr	2,_i2c_status+21
  8996  0008CE  D801               	call	i2u232_48
  8997  0008D0  D00A               	goto	i2u232_49
  8998  0008D2                     i2u232_48:
  8999  0008D2  0005               	push	
  9000  0008D4  6EFA               	movwf	pclath,c
  9001  0008D6  50DE               	movf	postinc2,w,c
  9002  0008D8  6EFD               	movwf	tosl,c
  9003  0008DA  50DE               	movf	postinc2,w,c
  9004  0008DC  6EFE               	movwf	tosh,c
  9005  0008DE  50DE               	movf	postinc2,w,c
  9006  0008E0  6EFF               	movwf	tosu,c
  9007  0008E2  50FA               	movf	pclath,w,c
  9008  0008E4  0012               	return		;indir
  9009  0008E6                     i2u232_49:
  9010                           
  9011                           ; Switch size 1, requested type "space"
  9012                           ; Number of cases is 4, Range of values is 1 to 4
  9013                           ; switch strategies available:
  9014                           ; Name         Instructions Cycles
  9015                           ; simple_byte           13     7 (average)
  9016                           ;	Chosen strategy is simple_byte
  9017  0008E6  0A01               	xorlw	1	; case 1
  9018  0008E8  B4D8               	btfsc	status,2,c
  9019  0008EA  D7E8               	goto	i2l448
  9020  0008EC  0A03               	xorlw	3	; case 2
  9021  0008EE  B4D8               	btfsc	status,2,c
  9022  0008F0  D7DF               	goto	i2l445
  9023  0008F2  0A01               	xorlw	1	; case 3
  9024  0008F4  B4D8               	btfsc	status,2,c
  9025  0008F6  D7DF               	goto	i2l447
  9026  0008F8  0A07               	xorlw	7	; case 4
  9027  0008FA  D7E0               	goto	i2l448
  9028  0008FC                     i2l443:
  9029                           
  9030                           ;i2c_master.c: 349: else
  9031                           ;i2c_master.c: 350: {
  9032                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  9033  0008FC  0100               	movlb	0	; () banked
  9034  0008FE  9760               	bcf	_i2c_status& (0+255),3,b
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  9038  000900  C062  FFD9         	movff	_i2c_status+2,fsr2l
  9039  000904  C063  FFDA         	movff	_i2c_status+3,fsr2h
  9040  000908  4B62               	infsnz	(_i2c_status+2)& (0+255),f,b
  9041  00090A  2B63               	incf	(_i2c_status+3)& (0+255),f,b
  9042  00090C  50DF               	movf	indf2,w,c
  9043  00090E  ECF0  F009         	call	i2_i2c1_driver_TXData
  9044                           
  9045                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  9046  000912  0100               	movlb	0	; () banked
  9047  000914  0764               	decf	(_i2c_status+4)& (0+255),f,b
  9048  000916  A0D8               	btfss	status,0,c
  9049  000918  0765               	decf	(_i2c_status+5)& (0+255),f,b
  9050  00091A  5164               	movf	(_i2c_status+4)& (0+255),w,b
  9051  00091C  1165               	iorwf	(_i2c_status+5)& (0+255),w,b
  9052  00091E  A4D8               	btfss	status,2,c
  9053  000920  D004               	goto	i2l454
  9054                           
  9055                           ; BSR set to: 0
  9056  000922  0E00               	movlw	0
  9057  000924  6E03               	movwf	i2_do_I2C_TX$1050+1,c
  9058  000926  0E06               	movlw	6
  9059  000928  D003               	goto	L6
  9060  00092A                     i2l454:
  9061                           
  9062                           ; BSR set to: 0
  9063                           
  9064                           ; BSR set to: 0
  9065  00092A  0E00               	movlw	0
  9066  00092C  6E03               	movwf	i2_do_I2C_TX$1050+1,c
  9067  00092E  0E03               	movlw	3
  9068  000930                     L6:
  9069  000930  6E02               	movwf	i2_do_I2C_TX$1050,c
  9070                           
  9071                           ; BSR set to: 0
  9072  000932  5002               	movf	i2_do_I2C_TX$1050,w,c
  9073                           
  9074                           ; BSR set to: 0
  9075  000934  0012               	return	
  9076  000936                     __end_ofi2_do_I2C_TX:
  9077                           	opt stack 0
  9078                           tosu	equ	0xFFF
  9079                           tosh	equ	0xFFE
  9080                           tosl	equ	0xFFD
  9081                           pclatu	equ	0xFFB
  9082                           pclath	equ	0xFFA
  9083                           tblptru	equ	0xFF8
  9084                           tblptrh	equ	0xFF7
  9085                           tblptrl	equ	0xFF6
  9086                           tablat	equ	0xFF5
  9087                           prodh	equ	0xFF4
  9088                           prodl	equ	0xFF3
  9089                           intcon	equ	0xFF2
  9090                           postinc0	equ	0xFEE
  9091                           fsr0h	equ	0xFEA
  9092                           fsr0l	equ	0xFE9
  9093                           wreg	equ	0xFE8
  9094                           indf1	equ	0xFE7
  9095                           postdec1	equ	0xFE5
  9096                           plusw1	equ	0xFE3
  9097                           fsr1h	equ	0xFE2
  9098                           fsr1l	equ	0xFE1
  9099                           indf2	equ	0xFDF
  9100                           postinc2	equ	0xFDE
  9101                           postdec2	equ	0xFDD
  9102                           plusw2	equ	0xFDB
  9103                           fsr2h	equ	0xFDA
  9104                           fsr2l	equ	0xFD9
  9105                           status	equ	0xFD8
  9106                           
  9107 ;; *************** function i2_do_I2C_DO_ADDRESS_NACK *****************
  9108 ;; Defined at:
  9109 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      enum E11956
  9116 ;; Registers used:
  9117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    3
  9130 ;; This function calls:
  9131 ;;		Absolute function
  9132 ;;		i2_do_I2C_SEND_RESTART
  9133 ;;		i2_do_I2C_SEND_STOP
  9134 ;;		i2_i2c_restartWrite
  9135 ;;		i2_rd1RegCompleteHandler
  9136 ;;		i2_rd2RegCompleteHandler
  9137 ;;		i2_rdBlkRegCompleteHandler
  9138 ;;		i2_returnReset
  9139 ;;		i2_returnStop
  9140 ;;		i2_wr1RegCompleteHandler
  9141 ;;		i2_wr2RegCompleteHandler
  9142 ;; This function is called by:
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text77
  9147  000D42                     __ptext77:
  9148                           	opt stack 0
  9149  000D42                     i2_do_I2C_DO_ADDRESS_NACK:
  9150                           	opt stack 13
  9151                           
  9152                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  9153                           
  9154                           ;incstack = 0
  9155  000D42  0100               	movlb	0	; () banked
  9156  000D44  9760               	bcf	_i2c_status& (0+255),3,b
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  9160  000D46  0E02               	movlw	2
  9161  000D48  6F6B               	movwf	(_i2c_status+11)& (0+255),b
  9162                           
  9163                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  9164  000D4A  D006               	goto	i2l435
  9165  000D4C                     
  9166                           ;i2c_master.c: 326: case i2c_restart_write:
  9167                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  9168                           
  9169                           ; BSR set to: 0
  9170                           
  9171                           ; BSR set to: 0
  9172  000D4C  ECE4  F009         	call	i2_do_I2C_SEND_RESTART	;wreg free
  9173  000D50  0012               	return	
  9174  000D52                     
  9175                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  9176  000D52  ECE0  F009         	call	i2_do_I2C_SEND_STOP	;wreg free
  9177                           
  9178                           ;i2c_master.c: 330: }
  9179  000D56  0012               	return	
  9180  000D58                     i2l435:
  9181  000D58  C082  F00C         	movff	_i2c_status+34,i2returnStop@p
  9182  000D5C  C083  F00D         	movff	_i2c_status+35,i2returnStop@p+1
  9183  000D60  EE20  F072         	lfsr	2,_i2c_status+18
  9184  000D64  D801               	call	i2u230_48
  9185  000D66  D00A               	goto	i2u230_49
  9186  000D68                     i2u230_48:
  9187  000D68  0005               	push	
  9188  000D6A  6EFA               	movwf	pclath,c
  9189  000D6C  50DE               	movf	postinc2,w,c
  9190  000D6E  6EFD               	movwf	tosl,c
  9191  000D70  50DE               	movf	postinc2,w,c
  9192  000D72  6EFE               	movwf	tosh,c
  9193  000D74  50DE               	movf	postinc2,w,c
  9194  000D76  6EFF               	movwf	tosu,c
  9195  000D78  50FA               	movf	pclath,w,c
  9196  000D7A  0012               	return		;indir
  9197  000D7C                     i2u230_49:
  9198                           
  9199                           ; Switch size 1, requested type "space"
  9200                           ; Number of cases is 2, Range of values is 2 to 3
  9201                           ; switch strategies available:
  9202                           ; Name         Instructions Cycles
  9203                           ; simple_byte            7     4 (average)
  9204                           ;	Chosen strategy is simple_byte
  9205  000D7C  0A02               	xorlw	2	; case 2
  9206  000D7E  B4D8               	btfsc	status,2,c
  9207  000D80  D7E5               	goto	i2l436
  9208  000D82  0A01               	xorlw	1	; case 3
  9209  000D84  B4D8               	btfsc	status,2,c
  9210  000D86  D7E2               	goto	i2l436
  9211  000D88  D7E4               	goto	i2l439
  9212  000D8A                     __end_ofi2_do_I2C_DO_ADDRESS_NACK:
  9213                           	opt stack 0
  9214                           tosu	equ	0xFFF
  9215                           tosh	equ	0xFFE
  9216                           tosl	equ	0xFFD
  9217                           pclatu	equ	0xFFB
  9218                           pclath	equ	0xFFA
  9219                           tblptru	equ	0xFF8
  9220                           tblptrh	equ	0xFF7
  9221                           tblptrl	equ	0xFF6
  9222                           tablat	equ	0xFF5
  9223                           prodh	equ	0xFF4
  9224                           prodl	equ	0xFF3
  9225                           intcon	equ	0xFF2
  9226                           postinc0	equ	0xFEE
  9227                           fsr0h	equ	0xFEA
  9228                           fsr0l	equ	0xFE9
  9229                           wreg	equ	0xFE8
  9230                           indf1	equ	0xFE7
  9231                           postdec1	equ	0xFE5
  9232                           plusw1	equ	0xFE3
  9233                           fsr1h	equ	0xFE2
  9234                           fsr1l	equ	0xFE1
  9235                           indf2	equ	0xFDF
  9236                           postinc2	equ	0xFDE
  9237                           postdec2	equ	0xFDD
  9238                           plusw2	equ	0xFDB
  9239                           fsr2h	equ	0xFDA
  9240                           fsr2l	equ	0xFD9
  9241                           status	equ	0xFD8
  9242                           
  9243 ;; *************** function i2_do_I2C_DO_NACK_RESTART *****************
  9244 ;; Defined at:
  9245 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;		None
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;		None
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  1    wreg      enum E11956
  9252 ;; Registers used:
  9253 ;;		wreg, cstack
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9263 ;;Total ram usage:        0 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:    1
  9266 ;; This function calls:
  9267 ;;		i2_i2c1_driver_sendNACK
  9268 ;; This function is called by:
  9269 ;;		i2_do_I2C_RX
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           	psect	text78
  9274  0013A8                     __ptext78:
  9275                           	opt stack 0
  9276  0013A8                     i2_do_I2C_DO_NACK_RESTART:
  9277                           	opt stack 14
  9278                           
  9279                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  9280                           
  9281                           ;incstack = 0
  9282  0013A8  EC09  F00A         	call	i2_i2c1_driver_sendNACK	;wreg free
  9283                           
  9284                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  9285  0013AC  0E09               	movlw	9
  9286  0013AE  0012               	return	
  9287  0013B0                     __end_ofi2_do_I2C_DO_NACK_RESTART:
  9288                           	opt stack 0
  9289                           tosu	equ	0xFFF
  9290                           tosh	equ	0xFFE
  9291                           tosl	equ	0xFFD
  9292                           pclatu	equ	0xFFB
  9293                           pclath	equ	0xFFA
  9294                           tblptru	equ	0xFF8
  9295                           tblptrh	equ	0xFF7
  9296                           tblptrl	equ	0xFF6
  9297                           tablat	equ	0xFF5
  9298                           prodh	equ	0xFF4
  9299                           prodl	equ	0xFF3
  9300                           intcon	equ	0xFF2
  9301                           postinc0	equ	0xFEE
  9302                           fsr0h	equ	0xFEA
  9303                           fsr0l	equ	0xFE9
  9304                           wreg	equ	0xFE8
  9305                           indf1	equ	0xFE7
  9306                           postdec1	equ	0xFE5
  9307                           plusw1	equ	0xFE3
  9308                           fsr1h	equ	0xFE2
  9309                           fsr1l	equ	0xFE1
  9310                           indf2	equ	0xFDF
  9311                           postinc2	equ	0xFDE
  9312                           postdec2	equ	0xFDD
  9313                           plusw2	equ	0xFDB
  9314                           fsr2h	equ	0xFDA
  9315                           fsr2l	equ	0xFD9
  9316                           status	equ	0xFD8
  9317                           
  9318 ;; *************** function i2_do_I2C_DO_NACK_STOP *****************
  9319 ;; Defined at:
  9320 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;		None
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;		None
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      enum E11956
  9327 ;; Registers used:
  9328 ;;		wreg, cstack
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9338 ;;Total ram usage:        0 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    1
  9341 ;; This function calls:
  9342 ;;		i2_i2c1_driver_sendNACK
  9343 ;; This function is called by:
  9344 ;;		i2_do_I2C_RX
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           	psect	text79
  9349  0013B0                     __ptext79:
  9350                           	opt stack 0
  9351  0013B0                     i2_do_I2C_DO_NACK_STOP:
  9352                           	opt stack 14
  9353                           
  9354                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  9355                           
  9356                           ;incstack = 0
  9357  0013B0  EC09  F00A         	call	i2_i2c1_driver_sendNACK	;wreg free
  9358                           
  9359                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  9360  0013B4  0E0A               	movlw	10
  9361  0013B6  0012               	return	
  9362  0013B8                     __end_ofi2_do_I2C_DO_NACK_STOP:
  9363                           	opt stack 0
  9364                           tosu	equ	0xFFF
  9365                           tosh	equ	0xFFE
  9366                           tosl	equ	0xFFD
  9367                           pclatu	equ	0xFFB
  9368                           pclath	equ	0xFFA
  9369                           tblptru	equ	0xFF8
  9370                           tblptrh	equ	0xFF7
  9371                           tblptrl	equ	0xFF6
  9372                           tablat	equ	0xFF5
  9373                           prodh	equ	0xFF4
  9374                           prodl	equ	0xFF3
  9375                           intcon	equ	0xFF2
  9376                           postinc0	equ	0xFEE
  9377                           fsr0h	equ	0xFEA
  9378                           fsr0l	equ	0xFE9
  9379                           wreg	equ	0xFE8
  9380                           indf1	equ	0xFE7
  9381                           postdec1	equ	0xFE5
  9382                           plusw1	equ	0xFE3
  9383                           fsr1h	equ	0xFE2
  9384                           fsr1l	equ	0xFE1
  9385                           indf2	equ	0xFDF
  9386                           postinc2	equ	0xFDE
  9387                           postdec2	equ	0xFDD
  9388                           plusw2	equ	0xFDB
  9389                           fsr2h	equ	0xFDA
  9390                           fsr2l	equ	0xFD9
  9391                           status	equ	0xFD8
  9392                           
  9393 ;; *************** function i2_do_I2C_DO_ACK *****************
  9394 ;; Defined at:
  9395 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  9396 ;; Parameters:    Size  Location     Type
  9397 ;;		None
  9398 ;; Auto vars:     Size  Location     Type
  9399 ;;		None
  9400 ;; Return value:  Size  Location     Type
  9401 ;;                  1    wreg      enum E11956
  9402 ;; Registers used:
  9403 ;;		wreg, cstack
  9404 ;; Tracked objects:
  9405 ;;		On entry : 0/0
  9406 ;;		On exit  : 0/0
  9407 ;;		Unchanged: 0/0
  9408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9413 ;;Total ram usage:        0 bytes
  9414 ;; Hardware stack levels used:    1
  9415 ;; Hardware stack levels required when called:    1
  9416 ;; This function calls:
  9417 ;;		i2_i2c1_driver_sendACK
  9418 ;; This function is called by:
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           	psect	text80
  9423  0013B8                     __ptext80:
  9424                           	opt stack 0
  9425  0013B8                     i2_do_I2C_DO_ACK:
  9426                           	opt stack 15
  9427                           
  9428                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  9429                           
  9430                           ;incstack = 0
  9431  0013B8  EC0C  F00A         	call	i2_i2c1_driver_sendACK	;wreg free
  9432                           
  9433                           ;i2c_master.c: 302: return I2C_RCEN;
  9434  0013BC  0E05               	movlw	5
  9435  0013BE  0012               	return	
  9436  0013C0                     __end_ofi2_do_I2C_DO_ACK:
  9437                           	opt stack 0
  9438                           tosu	equ	0xFFF
  9439                           tosh	equ	0xFFE
  9440                           tosl	equ	0xFFD
  9441                           pclatu	equ	0xFFB
  9442                           pclath	equ	0xFFA
  9443                           tblptru	equ	0xFF8
  9444                           tblptrh	equ	0xFF7
  9445                           tblptrl	equ	0xFF6
  9446                           tablat	equ	0xFF5
  9447                           prodh	equ	0xFF4
  9448                           prodl	equ	0xFF3
  9449                           intcon	equ	0xFF2
  9450                           postinc0	equ	0xFEE
  9451                           fsr0h	equ	0xFEA
  9452                           fsr0l	equ	0xFE9
  9453                           wreg	equ	0xFE8
  9454                           indf1	equ	0xFE7
  9455                           postdec1	equ	0xFE5
  9456                           plusw1	equ	0xFE3
  9457                           fsr1h	equ	0xFE2
  9458                           fsr1l	equ	0xFE1
  9459                           indf2	equ	0xFDF
  9460                           postinc2	equ	0xFDE
  9461                           postdec2	equ	0xFDD
  9462                           plusw2	equ	0xFDB
  9463                           fsr2h	equ	0xFDA
  9464                           fsr2l	equ	0xFD9
  9465                           status	equ	0xFD8
  9466                           
  9467 ;; *************** function i2_do_I2C_RCEN *****************
  9468 ;; Defined at:
  9469 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  9470 ;; Parameters:    Size  Location     Type
  9471 ;;		None
  9472 ;; Auto vars:     Size  Location     Type
  9473 ;;		None
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  1    wreg      enum E11956
  9476 ;; Registers used:
  9477 ;;		wreg, cstack
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9487 ;;Total ram usage:        0 bytes
  9488 ;; Hardware stack levels used:    1
  9489 ;; Hardware stack levels required when called:    1
  9490 ;; This function calls:
  9491 ;;		i2_i2c1_driver_startRX
  9492 ;; This function is called by:
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text81
  9497  00135A                     __ptext81:
  9498                           	opt stack 0
  9499  00135A                     i2_do_I2C_RCEN:
  9500                           	opt stack 15
  9501                           
  9502                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  9503                           
  9504                           ;incstack = 0
  9505  00135A  0100               	movlb	0	; () banked
  9506  00135C  9760               	bcf	_i2c_status& (0+255),3,b
  9507                           
  9508                           ; BSR set to: 0
  9509                           ;i2c_master.c: 295: i2c1_driver_startRX();
  9510  00135E  EC23  F00A         	call	i2_i2c1_driver_startRX	;wreg free
  9511                           
  9512                           ;i2c_master.c: 296: return I2C_RX;
  9513  001362  0E04               	movlw	4
  9514  001364  0012               	return	
  9515  001366                     __end_ofi2_do_I2C_RCEN:
  9516                           	opt stack 0
  9517                           tosu	equ	0xFFF
  9518                           tosh	equ	0xFFE
  9519                           tosl	equ	0xFFD
  9520                           pclatu	equ	0xFFB
  9521                           pclath	equ	0xFFA
  9522                           tblptru	equ	0xFF8
  9523                           tblptrh	equ	0xFF7
  9524                           tblptrl	equ	0xFF6
  9525                           tablat	equ	0xFF5
  9526                           prodh	equ	0xFF4
  9527                           prodl	equ	0xFF3
  9528                           intcon	equ	0xFF2
  9529                           postinc0	equ	0xFEE
  9530                           fsr0h	equ	0xFEA
  9531                           fsr0l	equ	0xFE9
  9532                           wreg	equ	0xFE8
  9533                           indf1	equ	0xFE7
  9534                           postdec1	equ	0xFE5
  9535                           plusw1	equ	0xFE3
  9536                           fsr1h	equ	0xFE2
  9537                           fsr1l	equ	0xFE1
  9538                           indf2	equ	0xFDF
  9539                           postinc2	equ	0xFDE
  9540                           postdec2	equ	0xFDD
  9541                           plusw2	equ	0xFDB
  9542                           fsr2h	equ	0xFDA
  9543                           fsr2l	equ	0xFD9
  9544                           status	equ	0xFD8
  9545                           
  9546 ;; *************** function i2_do_I2C_SEND_ADR_WRITE *****************
  9547 ;; Defined at:
  9548 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;		None
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      enum E11956
  9555 ;; Registers used:
  9556 ;;		wreg, status,2, status,0, cstack
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;Total ram usage:        0 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:    1
  9569 ;; This function calls:
  9570 ;;		i2_i2c1_driver_TXData
  9571 ;; This function is called by:
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           	psect	text82
  9576  001282                     __ptext82:
  9577                           	opt stack 0
  9578  001282                     i2_do_I2C_SEND_ADR_WRITE:
  9579                           	opt stack 15
  9580                           
  9581                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  9582                           
  9583                           ;incstack = 0
  9584  001282  0100               	movlb	0	; () banked
  9585  001284  8760               	bsf	_i2c_status& (0+255),3,b
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  9589  001286  5161               	movf	(_i2c_status+1)& (0+255),w,b
  9590  001288  2561               	addwf	(_i2c_status+1)& (0+255),w,b
  9591  00128A  ECF0  F009         	call	i2_i2c1_driver_TXData
  9592                           
  9593                           ;i2c_master.c: 289: return I2C_TX;
  9594  00128E  0E03               	movlw	3
  9595  001290  0012               	return	
  9596  001292                     __end_ofi2_do_I2C_SEND_ADR_WRITE:
  9597                           	opt stack 0
  9598                           tosu	equ	0xFFF
  9599                           tosh	equ	0xFFE
  9600                           tosl	equ	0xFFD
  9601                           pclatu	equ	0xFFB
  9602                           pclath	equ	0xFFA
  9603                           tblptru	equ	0xFF8
  9604                           tblptrh	equ	0xFF7
  9605                           tblptrl	equ	0xFF6
  9606                           tablat	equ	0xFF5
  9607                           prodh	equ	0xFF4
  9608                           prodl	equ	0xFF3
  9609                           intcon	equ	0xFF2
  9610                           postinc0	equ	0xFEE
  9611                           fsr0h	equ	0xFEA
  9612                           fsr0l	equ	0xFE9
  9613                           wreg	equ	0xFE8
  9614                           indf1	equ	0xFE7
  9615                           postdec1	equ	0xFE5
  9616                           plusw1	equ	0xFE3
  9617                           fsr1h	equ	0xFE2
  9618                           fsr1l	equ	0xFE1
  9619                           indf2	equ	0xFDF
  9620                           postinc2	equ	0xFDE
  9621                           postdec2	equ	0xFDD
  9622                           plusw2	equ	0xFDB
  9623                           fsr2h	equ	0xFDA
  9624                           fsr2l	equ	0xFD9
  9625                           status	equ	0xFD8
  9626                           
  9627 ;; *************** function i2_do_I2C_SEND_ADR_READ *****************
  9628 ;; Defined at:
  9629 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;		None
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      enum E11956
  9636 ;; Registers used:
  9637 ;;		wreg, status,0, cstack
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9647 ;;Total ram usage:        0 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:    1
  9650 ;; This function calls:
  9651 ;;		i2_i2c1_driver_TXData
  9652 ;; This function is called by:
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656                           	psect	text83
  9657  001292                     __ptext83:
  9658                           	opt stack 0
  9659  001292                     i2_do_I2C_SEND_ADR_READ:
  9660                           	opt stack 15
  9661                           
  9662                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  9663                           
  9664                           ;incstack = 0
  9665  001292  0100               	movlb	0	; () banked
  9666  001294  8760               	bsf	_i2c_status& (0+255),3,b
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  9670  001296  80D8               	bsf	status,0,c
  9671  001298  3561               	rlcf	(_i2c_status+1)& (0+255),w,b
  9672  00129A  ECF0  F009         	call	i2_i2c1_driver_TXData
  9673                           
  9674                           ;i2c_master.c: 282: return I2C_RCEN;
  9675  00129E  0E05               	movlw	5
  9676  0012A0  0012               	return	
  9677  0012A2                     __end_ofi2_do_I2C_SEND_ADR_READ:
  9678                           	opt stack 0
  9679                           tosu	equ	0xFFF
  9680                           tosh	equ	0xFFE
  9681                           tosl	equ	0xFFD
  9682                           pclatu	equ	0xFFB
  9683                           pclath	equ	0xFFA
  9684                           tblptru	equ	0xFF8
  9685                           tblptrh	equ	0xFF7
  9686                           tblptrl	equ	0xFF6
  9687                           tablat	equ	0xFF5
  9688                           prodh	equ	0xFF4
  9689                           prodl	equ	0xFF3
  9690                           intcon	equ	0xFF2
  9691                           postinc0	equ	0xFEE
  9692                           fsr0h	equ	0xFEA
  9693                           fsr0l	equ	0xFE9
  9694                           wreg	equ	0xFE8
  9695                           indf1	equ	0xFE7
  9696                           postdec1	equ	0xFE5
  9697                           plusw1	equ	0xFE3
  9698                           fsr1h	equ	0xFE2
  9699                           fsr1l	equ	0xFE1
  9700                           indf2	equ	0xFDF
  9701                           postinc2	equ	0xFDE
  9702                           postdec2	equ	0xFDD
  9703                           plusw2	equ	0xFDB
  9704                           fsr2h	equ	0xFDA
  9705                           fsr2l	equ	0xFD9
  9706                           status	equ	0xFD8
  9707                           
  9708 ;; *************** function i2_do_I2C_SEND_STOP *****************
  9709 ;; Defined at:
  9710 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      enum E11956
  9717 ;; Registers used:
  9718 ;;		wreg, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9728 ;;Total ram usage:        0 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:    1
  9731 ;; This function calls:
  9732 ;;		i2_i2c1_driver_stop
  9733 ;; This function is called by:
  9734 ;;		i2_do_I2C_DO_ADDRESS_NACK
  9735 ;;		i2_do_I2C_TX
  9736 ;;		i2_do_I2C_TX_EMPTY
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           	psect	text84
  9741  0013C0                     __ptext84:
  9742                           	opt stack 0
  9743  0013C0                     i2_do_I2C_SEND_STOP:
  9744                           	opt stack 14
  9745                           
  9746                           ;i2c_master.c: 274: i2c1_driver_stop();
  9747                           
  9748                           ;incstack = 0
  9749  0013C0  EC2B  F00A         	call	i2_i2c1_driver_stop	;wreg free
  9750                           
  9751                           ;i2c_master.c: 275: return I2C_IDLE;
  9752  0013C4  0E00               	movlw	0
  9753  0013C6  0012               	return	
  9754  0013C8                     __end_ofi2_do_I2C_SEND_STOP:
  9755                           	opt stack 0
  9756                           tosu	equ	0xFFF
  9757                           tosh	equ	0xFFE
  9758                           tosl	equ	0xFFD
  9759                           pclatu	equ	0xFFB
  9760                           pclath	equ	0xFFA
  9761                           tblptru	equ	0xFF8
  9762                           tblptrh	equ	0xFF7
  9763                           tblptrl	equ	0xFF6
  9764                           tablat	equ	0xFF5
  9765                           prodh	equ	0xFF4
  9766                           prodl	equ	0xFF3
  9767                           intcon	equ	0xFF2
  9768                           postinc0	equ	0xFEE
  9769                           fsr0h	equ	0xFEA
  9770                           fsr0l	equ	0xFE9
  9771                           wreg	equ	0xFE8
  9772                           indf1	equ	0xFE7
  9773                           postdec1	equ	0xFE5
  9774                           plusw1	equ	0xFE3
  9775                           fsr1h	equ	0xFE2
  9776                           fsr1l	equ	0xFE1
  9777                           indf2	equ	0xFDF
  9778                           postinc2	equ	0xFDE
  9779                           postdec2	equ	0xFDD
  9780                           plusw2	equ	0xFDB
  9781                           fsr2h	equ	0xFDA
  9782                           fsr2l	equ	0xFD9
  9783                           status	equ	0xFD8
  9784                           
  9785 ;; *************** function i2_do_I2C_SEND_RESTART *****************
  9786 ;; Defined at:
  9787 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;		None
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;		None
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      enum E11956
  9794 ;; Registers used:
  9795 ;;		wreg, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9805 ;;Total ram usage:        0 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    1
  9808 ;; This function calls:
  9809 ;;		i2_i2c1_driver_restart
  9810 ;; This function is called by:
  9811 ;;		i2_do_I2C_DO_ADDRESS_NACK
  9812 ;;		i2_do_I2C_TX_EMPTY
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text85
  9817  0013C8                     __ptext85:
  9818                           	opt stack 0
  9819  0013C8                     i2_do_I2C_SEND_RESTART:
  9820                           	opt stack 14
  9821                           
  9822                           ;i2c_master.c: 268: i2c1_driver_restart();
  9823                           
  9824                           ;incstack = 0
  9825  0013C8  EC2D  F00A         	call	i2_i2c1_driver_restart	;wreg free
  9826                           
  9827                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  9828  0013CC  0E01               	movlw	1
  9829  0013CE  0012               	return	
  9830  0013D0                     __end_ofi2_do_I2C_SEND_RESTART:
  9831                           	opt stack 0
  9832                           tosu	equ	0xFFF
  9833                           tosh	equ	0xFFE
  9834                           tosl	equ	0xFFD
  9835                           pclatu	equ	0xFFB
  9836                           pclath	equ	0xFFA
  9837                           tblptru	equ	0xFF8
  9838                           tblptrh	equ	0xFF7
  9839                           tblptrl	equ	0xFF6
  9840                           tablat	equ	0xFF5
  9841                           prodh	equ	0xFF4
  9842                           prodl	equ	0xFF3
  9843                           intcon	equ	0xFF2
  9844                           postinc0	equ	0xFEE
  9845                           fsr0h	equ	0xFEA
  9846                           fsr0l	equ	0xFE9
  9847                           wreg	equ	0xFE8
  9848                           indf1	equ	0xFE7
  9849                           postdec1	equ	0xFE5
  9850                           plusw1	equ	0xFE3
  9851                           fsr1h	equ	0xFE2
  9852                           fsr1l	equ	0xFE1
  9853                           indf2	equ	0xFDF
  9854                           postinc2	equ	0xFDE
  9855                           postdec2	equ	0xFDD
  9856                           plusw2	equ	0xFDB
  9857                           fsr2h	equ	0xFDA
  9858                           fsr2l	equ	0xFD9
  9859                           status	equ	0xFD8
  9860                           
  9861 ;; *************** function i2_do_I2C_SEND_RESTART_WRITE *****************
  9862 ;; Defined at:
  9863 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;		None
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;		None
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      enum E11956
  9870 ;; Registers used:
  9871 ;;		wreg, cstack
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9881 ;;Total ram usage:        0 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    1
  9884 ;; This function calls:
  9885 ;;		i2_i2c1_driver_restart
  9886 ;; This function is called by:
  9887 ;;		i2_do_I2C_TX
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text86
  9892  0013D0                     __ptext86:
  9893                           	opt stack 0
  9894  0013D0                     i2_do_I2C_SEND_RESTART_WRITE:
  9895                           	opt stack 14
  9896                           
  9897                           ;i2c_master.c: 262: i2c1_driver_restart();
  9898                           
  9899                           ;incstack = 0
  9900  0013D0  EC2D  F00A         	call	i2_i2c1_driver_restart	;wreg free
  9901                           
  9902                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  9903  0013D4  0E02               	movlw	2
  9904  0013D6  0012               	return	
  9905  0013D8                     __end_ofi2_do_I2C_SEND_RESTART_WRITE:
  9906                           	opt stack 0
  9907                           tosu	equ	0xFFF
  9908                           tosh	equ	0xFFE
  9909                           tosl	equ	0xFFD
  9910                           pclatu	equ	0xFFB
  9911                           pclath	equ	0xFFA
  9912                           tblptru	equ	0xFF8
  9913                           tblptrh	equ	0xFF7
  9914                           tblptrl	equ	0xFF6
  9915                           tablat	equ	0xFF5
  9916                           prodh	equ	0xFF4
  9917                           prodl	equ	0xFF3
  9918                           intcon	equ	0xFF2
  9919                           postinc0	equ	0xFEE
  9920                           fsr0h	equ	0xFEA
  9921                           fsr0l	equ	0xFE9
  9922                           wreg	equ	0xFE8
  9923                           indf1	equ	0xFE7
  9924                           postdec1	equ	0xFE5
  9925                           plusw1	equ	0xFE3
  9926                           fsr1h	equ	0xFE2
  9927                           fsr1l	equ	0xFE1
  9928                           indf2	equ	0xFDF
  9929                           postinc2	equ	0xFDE
  9930                           postdec2	equ	0xFDD
  9931                           plusw2	equ	0xFDB
  9932                           fsr2h	equ	0xFDA
  9933                           fsr2l	equ	0xFD9
  9934                           status	equ	0xFD8
  9935                           
  9936 ;; *************** function i2_do_I2C_SEND_RESTART_READ *****************
  9937 ;; Defined at:
  9938 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  9939 ;; Parameters:    Size  Location     Type
  9940 ;;		None
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;		None
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1    wreg      enum E11956
  9945 ;; Registers used:
  9946 ;;		wreg, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9956 ;;Total ram usage:        0 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:    1
  9959 ;; This function calls:
  9960 ;;		i2_i2c1_driver_restart
  9961 ;; This function is called by:
  9962 ;;		i2_do_I2C_TX
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           	psect	text87
  9967  0013D8                     __ptext87:
  9968                           	opt stack 0
  9969  0013D8                     i2_do_I2C_SEND_RESTART_READ:
  9970                           	opt stack 14
  9971                           
  9972                           ;i2c_master.c: 256: i2c1_driver_restart();
  9973                           
  9974                           ;incstack = 0
  9975  0013D8  EC2D  F00A         	call	i2_i2c1_driver_restart	;wreg free
  9976                           
  9977                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  9978  0013DC  0E01               	movlw	1
  9979  0013DE  0012               	return	
  9980  0013E0                     __end_ofi2_do_I2C_SEND_RESTART_READ:
  9981                           	opt stack 0
  9982                           tosu	equ	0xFFF
  9983                           tosh	equ	0xFFE
  9984                           tosl	equ	0xFFD
  9985                           pclatu	equ	0xFFB
  9986                           pclath	equ	0xFFA
  9987                           tblptru	equ	0xFF8
  9988                           tblptrh	equ	0xFF7
  9989                           tblptrl	equ	0xFF6
  9990                           tablat	equ	0xFF5
  9991                           prodh	equ	0xFF4
  9992                           prodl	equ	0xFF3
  9993                           intcon	equ	0xFF2
  9994                           postinc0	equ	0xFEE
  9995                           fsr0h	equ	0xFEA
  9996                           fsr0l	equ	0xFE9
  9997                           wreg	equ	0xFE8
  9998                           indf1	equ	0xFE7
  9999                           postdec1	equ	0xFE5
 10000                           plusw1	equ	0xFE3
 10001                           fsr1h	equ	0xFE2
 10002                           fsr1l	equ	0xFE1
 10003                           indf2	equ	0xFDF
 10004                           postinc2	equ	0xFDE
 10005                           postdec2	equ	0xFDD
 10006                           plusw2	equ	0xFDB
 10007                           fsr2h	equ	0xFDA
 10008                           fsr2l	equ	0xFD9
 10009                           status	equ	0xFD8
 10010                           
 10011 ;; *************** function i2_do_I2C_IDLE *****************
 10012 ;; Defined at:
 10013 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;		None
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;		None
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      enum E11956
 10020 ;; Registers used:
 10021 ;;		wreg, status,2
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10031 ;;Total ram usage:        0 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; This function calls:
 10034 ;;		Nothing
 10035 ;; This function is called by:
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           	psect	text88
 10040  001366                     __ptext88:
 10041                           	opt stack 0
 10042  001366                     i2_do_I2C_IDLE:
 10043                           	opt stack 16
 10044                           
 10045                           ;i2c_master.c: 249: i2c_status.busy = 0;
 10046                           
 10047                           ;incstack = 0
 10048  001366  0100               	movlb	0	; () banked
 10049  001368  9160               	bcf	_i2c_status& (0+255),0,b
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
 10053  00136A  0E00               	movlw	0
 10054  00136C  6F6B               	movwf	(_i2c_status+11)& (0+255),b
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;i2c_master.c: 251: return I2C_RESET;
 10058  00136E  0E0E               	movlw	14
 10059  001370  0012               	return	
 10060  001372                     __end_ofi2_do_I2C_IDLE:
 10061                           	opt stack 0
 10062                           tosu	equ	0xFFF
 10063                           tosh	equ	0xFFE
 10064                           tosl	equ	0xFFD
 10065                           pclatu	equ	0xFFB
 10066                           pclath	equ	0xFFA
 10067                           tblptru	equ	0xFF8
 10068                           tblptrh	equ	0xFF7
 10069                           tblptrl	equ	0xFF6
 10070                           tablat	equ	0xFF5
 10071                           prodh	equ	0xFF4
 10072                           prodl	equ	0xFF3
 10073                           intcon	equ	0xFF2
 10074                           postinc0	equ	0xFEE
 10075                           fsr0h	equ	0xFEA
 10076                           fsr0l	equ	0xFE9
 10077                           wreg	equ	0xFE8
 10078                           indf1	equ	0xFE7
 10079                           postdec1	equ	0xFE5
 10080                           plusw1	equ	0xFE3
 10081                           fsr1h	equ	0xFE2
 10082                           fsr1l	equ	0xFE1
 10083                           indf2	equ	0xFDF
 10084                           postinc2	equ	0xFDE
 10085                           postdec2	equ	0xFDD
 10086                           plusw2	equ	0xFDB
 10087                           fsr2h	equ	0xFDA
 10088                           fsr2l	equ	0xFD9
 10089                           status	equ	0xFD8
 10090                           
 10091 ;; *************** function i2_do_I2C_RESET *****************
 10092 ;; Defined at:
 10093 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;		None
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;		None
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      enum E11956
 10100 ;; Registers used:
 10101 ;;		wreg, status,2, cstack
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10111 ;;Total ram usage:        0 bytes
 10112 ;; Hardware stack levels used:    1
 10113 ;; Hardware stack levels required when called:    1
 10114 ;; This function calls:
 10115 ;;		i2_i2c1_driver_resetBus
 10116 ;; This function is called by:
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           	psect	text89
 10121  0012A2                     __ptext89:
 10122                           	opt stack 0
 10123  0012A2                     i2_do_I2C_RESET:
 10124                           	opt stack 15
 10125                           
 10126                           ;i2c_master.c: 241: i2c1_driver_resetBus();
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;incstack = 0
 10130  0012A2  EC30  F00A         	call	i2_i2c1_driver_resetBus	;wreg free
 10131                           
 10132                           ;i2c_master.c: 242: i2c_status.busy = 0;
 10133  0012A6  0100               	movlb	0	; () banked
 10134  0012A8  9160               	bcf	_i2c_status& (0+255),0,b
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
 10138  0012AA  0E00               	movlw	0
 10139  0012AC  6F6B               	movwf	(_i2c_status+11)& (0+255),b
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;i2c_master.c: 244: return I2C_RESET;
 10143  0012AE  0E0E               	movlw	14
 10144  0012B0  0012               	return	
 10145  0012B2                     __end_ofi2_do_I2C_RESET:
 10146                           	opt stack 0
 10147                           tosu	equ	0xFFF
 10148                           tosh	equ	0xFFE
 10149                           tosl	equ	0xFFD
 10150                           pclatu	equ	0xFFB
 10151                           pclath	equ	0xFFA
 10152                           tblptru	equ	0xFF8
 10153                           tblptrh	equ	0xFF7
 10154                           tblptrl	equ	0xFF6
 10155                           tablat	equ	0xFF5
 10156                           prodh	equ	0xFF4
 10157                           prodl	equ	0xFF3
 10158                           intcon	equ	0xFF2
 10159                           postinc0	equ	0xFEE
 10160                           fsr0h	equ	0xFEA
 10161                           fsr0l	equ	0xFE9
 10162                           wreg	equ	0xFE8
 10163                           indf1	equ	0xFE7
 10164                           postdec1	equ	0xFE5
 10165                           plusw1	equ	0xFE3
 10166                           fsr1h	equ	0xFE2
 10167                           fsr1l	equ	0xFE1
 10168                           indf2	equ	0xFDF
 10169                           postinc2	equ	0xFDE
 10170                           postdec2	equ	0xFDD
 10171                           plusw2	equ	0xFDB
 10172                           fsr2h	equ	0xFDA
 10173                           fsr2l	equ	0xFD9
 10174                           status	equ	0xFD8
 10175                           
 10176 ;; *************** function i2_do_I2C_TX_EMPTY *****************
 10177 ;; Defined at:
 10178 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;		None
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;		None
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  1    wreg      enum E11956
 10185 ;; Registers used:
 10186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10196 ;;Total ram usage:        0 bytes
 10197 ;; Hardware stack levels used:    1
 10198 ;; Hardware stack levels required when called:    3
 10199 ;; This function calls:
 10200 ;;		Absolute function
 10201 ;;		i2_do_I2C_SEND_RESTART
 10202 ;;		i2_do_I2C_SEND_STOP
 10203 ;;		i2_i2c_restartWrite
 10204 ;;		i2_mssp1_setIRQ
 10205 ;;		i2_rd1RegCompleteHandler
 10206 ;;		i2_rd2RegCompleteHandler
 10207 ;;		i2_rdBlkRegCompleteHandler
 10208 ;;		i2_returnReset
 10209 ;;		i2_returnStop
 10210 ;;		i2_wr1RegCompleteHandler
 10211 ;;		i2_wr2RegCompleteHandler
 10212 ;; This function is called by:
 10213 ;; This function uses a non-reentrant model
 10214 ;;
 10215                           
 10216                           	psect	text90
 10217  000B72                     __ptext90:
 10218                           	opt stack 0
 10219  000B72                     i2_do_I2C_TX_EMPTY:
 10220                           	opt stack 13
 10221                           
 10222                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;incstack = 0
 10226  000B72  0100               	movlb	0	; () banked
 10227  000B74  8560               	bsf	_i2c_status& (0+255),2,b
 10228                           
 10229                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
 10230  000B76  D00A               	goto	i2l471
 10231  000B78                     
 10232                           ;i2c_master.c: 388: case i2c_restart_write:
 10233                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
 10234                           
 10235                           ; BSR set to: 0
 10236                           
 10237                           ; BSR set to: 0
 10238  000B78  ECE4  F009         	call	i2_do_I2C_SEND_RESTART	;wreg free
 10239  000B7C  0012               	return	
 10240  000B7E                     
 10241                           ;i2c_master.c: 391: mssp1_setIRQ();
 10242  000B7E  EC06  F00A         	call	i2_mssp1_setIRQ	;wreg free
 10243                           
 10244                           ;i2c_master.c: 392: return I2C_TX;
 10245  000B82  0E03               	movlw	3
 10246  000B84  0012               	return	
 10247  000B86                     
 10248                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
 10249                           
 10250                           ;i2c_master.c: 394: case i2c_stop:
 10251  000B86  ECE0  F009         	call	i2_do_I2C_SEND_STOP	;wreg free
 10252                           
 10253                           ;i2c_master.c: 396: }
 10254  000B8A  0012               	return	
 10255  000B8C                     i2l471:
 10256  000B8C  C07E  F00C         	movff	_i2c_status+30,i2returnStop@p
 10257  000B90  C07F  F00D         	movff	_i2c_status+31,i2returnStop@p+1
 10258  000B94  EE20  F06C         	lfsr	2,_i2c_status+12
 10259  000B98  D801               	call	i2u236_48
 10260  000B9A  D00A               	goto	i2u236_49
 10261  000B9C                     i2u236_48:
 10262  000B9C  0005               	push	
 10263  000B9E  6EFA               	movwf	pclath,c
 10264  000BA0  50DE               	movf	postinc2,w,c
 10265  000BA2  6EFD               	movwf	tosl,c
 10266  000BA4  50DE               	movf	postinc2,w,c
 10267  000BA6  6EFE               	movwf	tosh,c
 10268  000BA8  50DE               	movf	postinc2,w,c
 10269  000BAA  6EFF               	movwf	tosu,c
 10270  000BAC  50FA               	movf	pclath,w,c
 10271  000BAE  0012               	return		;indir
 10272  000BB0                     i2u236_49:
 10273                           
 10274                           ; Switch size 1, requested type "space"
 10275                           ; Number of cases is 4, Range of values is 1 to 4
 10276                           ; switch strategies available:
 10277                           ; Name         Instructions Cycles
 10278                           ; simple_byte           13     7 (average)
 10279                           ;	Chosen strategy is simple_byte
 10280  000BB0  0A01               	xorlw	1	; case 1
 10281  000BB2  B4D8               	btfsc	status,2,c
 10282  000BB4  D7E8               	goto	i2l476
 10283  000BB6  0A03               	xorlw	3	; case 2
 10284  000BB8  B4D8               	btfsc	status,2,c
 10285  000BBA  D7DE               	goto	i2l472
 10286  000BBC  0A01               	xorlw	1	; case 3
 10287  000BBE  B4D8               	btfsc	status,2,c
 10288  000BC0  D7DB               	goto	i2l472
 10289  000BC2  0A07               	xorlw	7	; case 4
 10290  000BC4  B4D8               	btfsc	status,2,c
 10291  000BC6  D7DB               	goto	i2l475
 10292  000BC8  D7DE               	goto	i2l476
 10293  000BCA                     __end_ofi2_do_I2C_TX_EMPTY:
 10294                           	opt stack 0
 10295                           tosu	equ	0xFFF
 10296                           tosh	equ	0xFFE
 10297                           tosl	equ	0xFFD
 10298                           pclatu	equ	0xFFB
 10299                           pclath	equ	0xFFA
 10300                           tblptru	equ	0xFF8
 10301                           tblptrh	equ	0xFF7
 10302                           tblptrl	equ	0xFF6
 10303                           tablat	equ	0xFF5
 10304                           prodh	equ	0xFF4
 10305                           prodl	equ	0xFF3
 10306                           intcon	equ	0xFF2
 10307                           postinc0	equ	0xFEE
 10308                           fsr0h	equ	0xFEA
 10309                           fsr0l	equ	0xFE9
 10310                           wreg	equ	0xFE8
 10311                           indf1	equ	0xFE7
 10312                           postdec1	equ	0xFE5
 10313                           plusw1	equ	0xFE3
 10314                           fsr1h	equ	0xFE2
 10315                           fsr1l	equ	0xFE1
 10316                           indf2	equ	0xFDF
 10317                           postinc2	equ	0xFDE
 10318                           postdec2	equ	0xFDD
 10319                           plusw2	equ	0xFDB
 10320                           fsr2h	equ	0xFDA
 10321                           fsr2l	equ	0xFD9
 10322                           status	equ	0xFD8
 10323                           
 10324 ;; *************** function i2_mssp1_setIRQ *****************
 10325 ;; Defined at:
 10326 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;		None
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;		None
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      void 
 10333 ;; Registers used:
 10334 ;;		None
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10344 ;;Total ram usage:        0 bytes
 10345 ;; Hardware stack levels used:    1
 10346 ;; This function calls:
 10347 ;;		Nothing
 10348 ;; This function is called by:
 10349 ;;		i2_do_I2C_TX_EMPTY
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353                           	psect	text91
 10354  00140C                     __ptext91:
 10355                           	opt stack 0
 10356  00140C                     i2_mssp1_setIRQ:
 10357                           	opt stack 15
 10358                           
 10359                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
 10360                           
 10361                           ;incstack = 0
 10362  00140C  010E               	movlb	14	; () banked
 10363  00140E  81CD               	bsf	205,0,b	;volatile
 10364                           
 10365                           ; BSR set to: 14
 10366  001410  0012               	return		;funcret
 10367  001412                     __end_ofi2_mssp1_setIRQ:
 10368                           	opt stack 0
 10369                           tosu	equ	0xFFF
 10370                           tosh	equ	0xFFE
 10371                           tosl	equ	0xFFD
 10372                           pclatu	equ	0xFFB
 10373                           pclath	equ	0xFFA
 10374                           tblptru	equ	0xFF8
 10375                           tblptrh	equ	0xFF7
 10376                           tblptrl	equ	0xFF6
 10377                           tablat	equ	0xFF5
 10378                           prodh	equ	0xFF4
 10379                           prodl	equ	0xFF3
 10380                           intcon	equ	0xFF2
 10381                           postinc0	equ	0xFEE
 10382                           fsr0h	equ	0xFEA
 10383                           fsr0l	equ	0xFE9
 10384                           wreg	equ	0xFE8
 10385                           indf1	equ	0xFE7
 10386                           postdec1	equ	0xFE5
 10387                           plusw1	equ	0xFE3
 10388                           fsr1h	equ	0xFE2
 10389                           fsr1l	equ	0xFE1
 10390                           indf2	equ	0xFDF
 10391                           postinc2	equ	0xFDE
 10392                           postdec2	equ	0xFDD
 10393                           plusw2	equ	0xFDB
 10394                           fsr2h	equ	0xFDA
 10395                           fsr2l	equ	0xFD9
 10396                           status	equ	0xFD8
 10397                           
 10398 ;; *************** function i2_i2c1_driver_isNACK *****************
 10399 ;; Defined at:
 10400 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;		None
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;		None
 10405 ;; Return value:  Size  Location     Type
 10406 ;;		None               void
 10407 ;; Registers used:
 10408 ;;		wreg, status,2, status,0
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/0
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10418 ;;Total ram usage:        1 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; This function calls:
 10421 ;;		Nothing
 10422 ;; This function is called by:
 10423 ;;		i2_do_I2C_TX
 10424 ;;		i2_i2c_ISR
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428                           	psect	text92
 10429  001224                     __ptext92:
 10430                           	opt stack 0
 10431  001224                     i2_i2c1_driver_isNACK:
 10432                           	opt stack 16
 10433                           
 10434                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
 10435                           
 10436                           ; BSR set to: 14
 10437                           ;incstack = 0
 10438  001224  5097               	movf	3991,w,c	;volatile
 10439  001226  0BBF               	andlw	-65
 10440  001228  0940               	iorlw	64
 10441  00122A  6E97               	movwf	3991,c	;volatile
 10442  00122C  3897               	swapf	3991,w,c	;volatile
 10443  00122E  32E8               	rrcf	wreg,f,c
 10444  001230  32E8               	rrcf	wreg,f,c
 10445  001232  0B01               	andlw	1
 10446  001234  6E01               	movwf	??i2_i2c1_driver_isNACK& (0+255),c
 10447  001236  3001               	rrcf	??i2_i2c1_driver_isNACK,w,c
 10448  001238  0012               	return	
 10449  00123A                     __end_ofi2_i2c1_driver_isNACK:
 10450                           	opt stack 0
 10451                           tosu	equ	0xFFF
 10452                           tosh	equ	0xFFE
 10453                           tosl	equ	0xFFD
 10454                           pclatu	equ	0xFFB
 10455                           pclath	equ	0xFFA
 10456                           tblptru	equ	0xFF8
 10457                           tblptrh	equ	0xFF7
 10458                           tblptrl	equ	0xFF6
 10459                           tablat	equ	0xFF5
 10460                           prodh	equ	0xFF4
 10461                           prodl	equ	0xFF3
 10462                           intcon	equ	0xFF2
 10463                           postinc0	equ	0xFEE
 10464                           fsr0h	equ	0xFEA
 10465                           fsr0l	equ	0xFE9
 10466                           wreg	equ	0xFE8
 10467                           indf1	equ	0xFE7
 10468                           postdec1	equ	0xFE5
 10469                           plusw1	equ	0xFE3
 10470                           fsr1h	equ	0xFE2
 10471                           fsr1l	equ	0xFE1
 10472                           indf2	equ	0xFDF
 10473                           postinc2	equ	0xFDE
 10474                           postdec2	equ	0xFDD
 10475                           plusw2	equ	0xFDB
 10476                           fsr2h	equ	0xFDA
 10477                           fsr2l	equ	0xFD9
 10478                           status	equ	0xFD8
 10479                           
 10480 ;; *************** function i2_i2c1_driver_TXData *****************
 10481 ;; Defined at:
 10482 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
 10483 ;; Parameters:    Size  Location     Type
 10484 ;;  d               1    wreg     unsigned char 
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;  d               1    0[COMRAM] unsigned char 
 10487 ;; Return value:  Size  Location     Type
 10488 ;;                  1    wreg      void 
 10489 ;; Registers used:
 10490 ;;		wreg
 10491 ;; Tracked objects:
 10492 ;;		On entry : 0/0
 10493 ;;		On exit  : 0/0
 10494 ;;		Unchanged: 0/0
 10495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10500 ;;Total ram usage:        1 bytes
 10501 ;; Hardware stack levels used:    1
 10502 ;; This function calls:
 10503 ;;		Nothing
 10504 ;; This function is called by:
 10505 ;;		i2_do_I2C_SEND_ADR_READ
 10506 ;;		i2_do_I2C_SEND_ADR_WRITE
 10507 ;;		i2_do_I2C_TX
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text93
 10512  0013E0                     __ptext93:
 10513                           	opt stack 0
 10514  0013E0                     i2_i2c1_driver_TXData:
 10515                           	opt stack 15
 10516                           
 10517                           ;incstack = 0
 10518                           ;i2i2c1_driver_TXData@d stored from wreg
 10519  0013E0  6E01               	movwf	i2i2c1_driver_TXData@d,c
 10520                           
 10521                           ;i2c1_driver.c: 188: SSP1BUF = d;
 10522  0013E2  C001  FF92         	movff	i2i2c1_driver_TXData@d,3986	;volatile
 10523  0013E6  0012               	return		;funcret
 10524  0013E8                     __end_ofi2_i2c1_driver_TXData:
 10525                           	opt stack 0
 10526                           tosu	equ	0xFFF
 10527                           tosh	equ	0xFFE
 10528                           tosl	equ	0xFFD
 10529                           pclatu	equ	0xFFB
 10530                           pclath	equ	0xFFA
 10531                           tblptru	equ	0xFF8
 10532                           tblptrh	equ	0xFF7
 10533                           tblptrl	equ	0xFF6
 10534                           tablat	equ	0xFF5
 10535                           prodh	equ	0xFF4
 10536                           prodl	equ	0xFF3
 10537                           intcon	equ	0xFF2
 10538                           postinc0	equ	0xFEE
 10539                           fsr0h	equ	0xFEA
 10540                           fsr0l	equ	0xFE9
 10541                           wreg	equ	0xFE8
 10542                           indf1	equ	0xFE7
 10543                           postdec1	equ	0xFE5
 10544                           plusw1	equ	0xFE3
 10545                           fsr1h	equ	0xFE2
 10546                           fsr1l	equ	0xFE1
 10547                           indf2	equ	0xFDF
 10548                           postinc2	equ	0xFDE
 10549                           postdec2	equ	0xFDD
 10550                           plusw2	equ	0xFDB
 10551                           fsr2h	equ	0xFDA
 10552                           fsr2l	equ	0xFD9
 10553                           status	equ	0xFD8
 10554                           
 10555 ;; *************** function i2_i2c1_driver_getRXData *****************
 10556 ;; Defined at:
 10557 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;		None
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;		None
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      unsigned char 
 10564 ;; Registers used:
 10565 ;;		wreg, status,2
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10575 ;;Total ram usage:        0 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; This function calls:
 10578 ;;		Nothing
 10579 ;; This function is called by:
 10580 ;;		i2_do_I2C_RX
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           
 10584                           	psect	text94
 10585  001442                     __ptext94:
 10586                           	opt stack 0
 10587  001442                     i2_i2c1_driver_getRXData:
 10588                           	opt stack 15
 10589                           
 10590                           ;i2c1_driver.c: 173: return SSP1BUF;
 10591                           
 10592                           ;incstack = 0
 10593  001442  5092               	movf	3986,w,c	;volatile
 10594  001444  0012               	return	
 10595  001446                     __end_ofi2_i2c1_driver_getRXData:
 10596                           	opt stack 0
 10597                           tosu	equ	0xFFF
 10598                           tosh	equ	0xFFE
 10599                           tosl	equ	0xFFD
 10600                           pclatu	equ	0xFFB
 10601                           pclath	equ	0xFFA
 10602                           tblptru	equ	0xFF8
 10603                           tblptrh	equ	0xFF7
 10604                           tblptrl	equ	0xFF6
 10605                           tablat	equ	0xFF5
 10606                           prodh	equ	0xFF4
 10607                           prodl	equ	0xFF3
 10608                           intcon	equ	0xFF2
 10609                           postinc0	equ	0xFEE
 10610                           fsr0h	equ	0xFEA
 10611                           fsr0l	equ	0xFE9
 10612                           wreg	equ	0xFE8
 10613                           indf1	equ	0xFE7
 10614                           postdec1	equ	0xFE5
 10615                           plusw1	equ	0xFE3
 10616                           fsr1h	equ	0xFE2
 10617                           fsr1l	equ	0xFE1
 10618                           indf2	equ	0xFDF
 10619                           postinc2	equ	0xFDE
 10620                           postdec2	equ	0xFDD
 10621                           plusw2	equ	0xFDB
 10622                           fsr2h	equ	0xFDA
 10623                           fsr2l	equ	0xFD9
 10624                           status	equ	0xFD8
 10625                           
 10626 ;; *************** function i2_i2c1_driver_sendNACK *****************
 10627 ;; Defined at:
 10628 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;		None
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;		None
 10633 ;; Return value:  Size  Location     Type
 10634 ;;                  1    wreg      void 
 10635 ;; Registers used:
 10636 ;;		None
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10646 ;;Total ram usage:        0 bytes
 10647 ;; Hardware stack levels used:    1
 10648 ;; This function calls:
 10649 ;;		Nothing
 10650 ;; This function is called by:
 10651 ;;		i2_do_I2C_DO_NACK_STOP
 10652 ;;		i2_do_I2C_DO_NACK_RESTART
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text95
 10657  001412                     __ptext95:
 10658                           	opt stack 0
 10659  001412                     i2_i2c1_driver_sendNACK:
 10660                           	opt stack 14
 10661                           
 10662                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
 10663                           
 10664                           ;incstack = 0
 10665  001412  8A97               	bsf	3991,5,c	;volatile
 10666                           
 10667                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
 10668  001414  8897               	bsf	3991,4,c	;volatile
 10669  001416  0012               	return		;funcret
 10670  001418                     __end_ofi2_i2c1_driver_sendNACK:
 10671                           	opt stack 0
 10672                           tosu	equ	0xFFF
 10673                           tosh	equ	0xFFE
 10674                           tosl	equ	0xFFD
 10675                           pclatu	equ	0xFFB
 10676                           pclath	equ	0xFFA
 10677                           tblptru	equ	0xFF8
 10678                           tblptrh	equ	0xFF7
 10679                           tblptrl	equ	0xFF6
 10680                           tablat	equ	0xFF5
 10681                           prodh	equ	0xFF4
 10682                           prodl	equ	0xFF3
 10683                           intcon	equ	0xFF2
 10684                           postinc0	equ	0xFEE
 10685                           fsr0h	equ	0xFEA
 10686                           fsr0l	equ	0xFE9
 10687                           wreg	equ	0xFE8
 10688                           indf1	equ	0xFE7
 10689                           postdec1	equ	0xFE5
 10690                           plusw1	equ	0xFE3
 10691                           fsr1h	equ	0xFE2
 10692                           fsr1l	equ	0xFE1
 10693                           indf2	equ	0xFDF
 10694                           postinc2	equ	0xFDE
 10695                           postdec2	equ	0xFDD
 10696                           plusw2	equ	0xFDB
 10697                           fsr2h	equ	0xFDA
 10698                           fsr2l	equ	0xFD9
 10699                           status	equ	0xFD8
 10700                           
 10701 ;; *************** function i2_i2c1_driver_resetBus *****************
 10702 ;; Defined at:
 10703 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;		None
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;		None
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		None
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10721 ;;Total ram usage:        0 bytes
 10722 ;; Hardware stack levels used:    1
 10723 ;; This function calls:
 10724 ;;		Nothing
 10725 ;; This function is called by:
 10726 ;;		i2_do_I2C_RESET
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text96
 10731  001460                     __ptext96:
 10732                           	opt stack 0
 10733  001460                     i2_i2c1_driver_resetBus:
 10734                           	opt stack 15
 10735                           
 10736                           ;incstack = 0
 10737  001460  0012               	return		;funcret
 10738  001462                     __end_ofi2_i2c1_driver_resetBus:
 10739                           	opt stack 0
 10740                           tosu	equ	0xFFF
 10741                           tosh	equ	0xFFE
 10742                           tosl	equ	0xFFD
 10743                           pclatu	equ	0xFFB
 10744                           pclath	equ	0xFFA
 10745                           tblptru	equ	0xFF8
 10746                           tblptrh	equ	0xFF7
 10747                           tblptrl	equ	0xFF6
 10748                           tablat	equ	0xFF5
 10749                           prodh	equ	0xFF4
 10750                           prodl	equ	0xFF3
 10751                           intcon	equ	0xFF2
 10752                           postinc0	equ	0xFEE
 10753                           fsr0h	equ	0xFEA
 10754                           fsr0l	equ	0xFE9
 10755                           wreg	equ	0xFE8
 10756                           indf1	equ	0xFE7
 10757                           postdec1	equ	0xFE5
 10758                           plusw1	equ	0xFE3
 10759                           fsr1h	equ	0xFE2
 10760                           fsr1l	equ	0xFE1
 10761                           indf2	equ	0xFDF
 10762                           postinc2	equ	0xFDE
 10763                           postdec2	equ	0xFDD
 10764                           plusw2	equ	0xFDB
 10765                           fsr2h	equ	0xFDA
 10766                           fsr2l	equ	0xFD9
 10767                           status	equ	0xFD8
 10768                           
 10769 ;; *************** function i2_i2c1_driver_startRX *****************
 10770 ;; Defined at:
 10771 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;		None
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;		None
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      void 
 10778 ;; Registers used:
 10779 ;;		None
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10789 ;;Total ram usage:        0 bytes
 10790 ;; Hardware stack levels used:    1
 10791 ;; This function calls:
 10792 ;;		Nothing
 10793 ;; This function is called by:
 10794 ;;		i2_do_I2C_RCEN
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text97
 10799  001446                     __ptext97:
 10800                           	opt stack 0
 10801  001446                     i2_i2c1_driver_startRX:
 10802                           	opt stack 15
 10803                           
 10804                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
 10805                           
 10806                           ;incstack = 0
 10807  001446  8697               	bsf	3991,3,c	;volatile
 10808  001448  0012               	return		;funcret
 10809  00144A                     __end_ofi2_i2c1_driver_startRX:
 10810                           	opt stack 0
 10811                           tosu	equ	0xFFF
 10812                           tosh	equ	0xFFE
 10813                           tosl	equ	0xFFD
 10814                           pclatu	equ	0xFFB
 10815                           pclath	equ	0xFFA
 10816                           tblptru	equ	0xFF8
 10817                           tblptrh	equ	0xFF7
 10818                           tblptrl	equ	0xFF6
 10819                           tablat	equ	0xFF5
 10820                           prodh	equ	0xFF4
 10821                           prodl	equ	0xFF3
 10822                           intcon	equ	0xFF2
 10823                           postinc0	equ	0xFEE
 10824                           fsr0h	equ	0xFEA
 10825                           fsr0l	equ	0xFE9
 10826                           wreg	equ	0xFE8
 10827                           indf1	equ	0xFE7
 10828                           postdec1	equ	0xFE5
 10829                           plusw1	equ	0xFE3
 10830                           fsr1h	equ	0xFE2
 10831                           fsr1l	equ	0xFE1
 10832                           indf2	equ	0xFDF
 10833                           postinc2	equ	0xFDE
 10834                           postdec2	equ	0xFDD
 10835                           plusw2	equ	0xFDB
 10836                           fsr2h	equ	0xFDA
 10837                           fsr2l	equ	0xFD9
 10838                           status	equ	0xFD8
 10839                           
 10840 ;; *************** function i2_rdBlkRegCompleteHandler *****************
 10841 ;; Defined at:
 10842 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;  p               2   11[COMRAM] PTR void 
 10845 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10846 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10847 ;; Auto vars:     Size  Location     Type
 10848 ;;		None
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  1    wreg      enum E97
 10851 ;; Registers used:
 10852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10853 ;; Tracked objects:
 10854 ;;		On entry : 0/0
 10855 ;;		On exit  : 0/0
 10856 ;;		Unchanged: 0/0
 10857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10862 ;;Total ram usage:        2 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; Hardware stack levels required when called:    2
 10865 ;; This function calls:
 10866 ;;		i2_i2c_setBuffer
 10867 ;;		i2_i2c_setDataCompleteCallback
 10868 ;; This function is called by:
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           	psect	text98
 10873  000D8A                     __ptext98:
 10874                           	opt stack 0
 10875  000D8A                     i2_rdBlkRegCompleteHandler:
 10876                           	opt stack 13
 10877                           
 10878                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
 10879                           
 10880                           ;incstack = 0
 10881  000D8A  EE20 F002          	lfsr	2,2
 10882  000D8E  500C               	movf	i2rdBlkRegCompleteHandler@p,w,c
 10883  000D90  26D9               	addwf	fsr2l,f,c
 10884  000D92  500D               	movf	i2rdBlkRegCompleteHandler@p+1,w,c
 10885  000D94  22DA               	addwfc	fsr2h,f,c
 10886  000D96  CFDE F001          	movff	postinc2,i2i2c_setBuffer@buffer
 10887  000D9A  CFDD F002          	movff	postdec2,i2i2c_setBuffer@buffer+1
 10888  000D9E  C00C  FFD9         	movff	i2rdBlkRegCompleteHandler@p,fsr2l
 10889  000DA2  C00D  FFDA         	movff	i2rdBlkRegCompleteHandler@p+1,fsr2h
 10890  000DA6  CFDE F003          	movff	postinc2,i2i2c_setBuffer@bufferSize
 10891  000DAA  CFDD F004          	movff	postdec2,i2i2c_setBuffer@bufferSize+1
 10892  000DAE  ECA0  F008         	call	i2_i2c_setBuffer	;wreg free
 10893                           
 10894                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
 10895  000DB2  0E00               	movlw	0
 10896  000DB4  6E07               	movwf	i2i2c_setDataCompleteCallback@cb,c
 10897  000DB6  0E00               	movlw	0
 10898  000DB8  6E08               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
 10899  000DBA  0E00               	movlw	0
 10900  000DBC  6E09               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
 10901  000DBE  0E00               	movlw	0
 10902  000DC0  6E0A               	movwf	i2i2c_setDataCompleteCallback@p,c
 10903  000DC2  0E00               	movlw	0
 10904  000DC4  6E0B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
 10905  000DC6  EC6B  F008         	call	i2_i2c_setDataCompleteCallback	;wreg free
 10906                           
 10907                           ;i2c_simple_master.c: 138: return i2c_restart_read;
 10908  000DCA  0E02               	movlw	2
 10909  000DCC  0012               	return	
 10910  000DCE                     __end_ofi2_rdBlkRegCompleteHandler:
 10911                           	opt stack 0
 10912                           tosu	equ	0xFFF
 10913                           tosh	equ	0xFFE
 10914                           tosl	equ	0xFFD
 10915                           pclatu	equ	0xFFB
 10916                           pclath	equ	0xFFA
 10917                           tblptru	equ	0xFF8
 10918                           tblptrh	equ	0xFF7
 10919                           tblptrl	equ	0xFF6
 10920                           tablat	equ	0xFF5
 10921                           prodh	equ	0xFF4
 10922                           prodl	equ	0xFF3
 10923                           intcon	equ	0xFF2
 10924                           postinc0	equ	0xFEE
 10925                           fsr0h	equ	0xFEA
 10926                           fsr0l	equ	0xFE9
 10927                           wreg	equ	0xFE8
 10928                           indf1	equ	0xFE7
 10929                           postdec1	equ	0xFE5
 10930                           plusw1	equ	0xFE3
 10931                           fsr1h	equ	0xFE2
 10932                           fsr1l	equ	0xFE1
 10933                           indf2	equ	0xFDF
 10934                           postinc2	equ	0xFDE
 10935                           postdec2	equ	0xFDD
 10936                           plusw2	equ	0xFDB
 10937                           fsr2h	equ	0xFDA
 10938                           fsr2l	equ	0xFD9
 10939                           status	equ	0xFD8
 10940                           
 10941 ;; *************** function i2_rd2RegCompleteHandler *****************
 10942 ;; Defined at:
 10943 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;  p               2   11[COMRAM] PTR void 
 10946 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 10947 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      enum E97
 10952 ;; Registers used:
 10953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;Total ram usage:        2 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    2
 10966 ;; This function calls:
 10967 ;;		i2_i2c_setBuffer
 10968 ;;		i2_i2c_setDataCompleteCallback
 10969 ;; This function is called by:
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text99
 10974  000F7C                     __ptext99:
 10975                           	opt stack 0
 10976  000F7C                     i2_rd2RegCompleteHandler:
 10977                           	opt stack 13
 10978                           
 10979                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
 10980                           
 10981                           ;incstack = 0
 10982  000F7C  C00C  F001         	movff	i2rd2RegCompleteHandler@p,i2i2c_setBuffer@buffer
 10983  000F80  C00D  F002         	movff	i2rd2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
 10984  000F84  0E00               	movlw	0
 10985  000F86  6E04               	movwf	i2i2c_setBuffer@bufferSize+1,c
 10986  000F88  0E02               	movlw	2
 10987  000F8A  6E03               	movwf	i2i2c_setBuffer@bufferSize,c
 10988  000F8C  ECA0  F008         	call	i2_i2c_setBuffer	;wreg free
 10989                           
 10990                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
 10991  000F90  0E00               	movlw	0
 10992  000F92  6E07               	movwf	i2i2c_setDataCompleteCallback@cb,c
 10993  000F94  0E00               	movlw	0
 10994  000F96  6E08               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
 10995  000F98  0E00               	movlw	0
 10996  000F9A  6E09               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
 10997  000F9C  0E00               	movlw	0
 10998  000F9E  6E0A               	movwf	i2i2c_setDataCompleteCallback@p,c
 10999  000FA0  0E00               	movlw	0
 11000  000FA2  6E0B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
 11001  000FA4  EC6B  F008         	call	i2_i2c_setDataCompleteCallback	;wreg free
 11002                           
 11003                           ;i2c_simple_master.c: 91: return i2c_restart_read;
 11004  000FA8  0E02               	movlw	2
 11005  000FAA  0012               	return	
 11006  000FAC                     __end_ofi2_rd2RegCompleteHandler:
 11007                           	opt stack 0
 11008                           tosu	equ	0xFFF
 11009                           tosh	equ	0xFFE
 11010                           tosl	equ	0xFFD
 11011                           pclatu	equ	0xFFB
 11012                           pclath	equ	0xFFA
 11013                           tblptru	equ	0xFF8
 11014                           tblptrh	equ	0xFF7
 11015                           tblptrl	equ	0xFF6
 11016                           tablat	equ	0xFF5
 11017                           prodh	equ	0xFF4
 11018                           prodl	equ	0xFF3
 11019                           intcon	equ	0xFF2
 11020                           postinc0	equ	0xFEE
 11021                           fsr0h	equ	0xFEA
 11022                           fsr0l	equ	0xFE9
 11023                           wreg	equ	0xFE8
 11024                           indf1	equ	0xFE7
 11025                           postdec1	equ	0xFE5
 11026                           plusw1	equ	0xFE3
 11027                           fsr1h	equ	0xFE2
 11028                           fsr1l	equ	0xFE1
 11029                           indf2	equ	0xFDF
 11030                           postinc2	equ	0xFDE
 11031                           postdec2	equ	0xFDD
 11032                           plusw2	equ	0xFDB
 11033                           fsr2h	equ	0xFDA
 11034                           fsr2l	equ	0xFD9
 11035                           status	equ	0xFD8
 11036                           
 11037 ;; *************** function i2_rd1RegCompleteHandler *****************
 11038 ;; Defined at:
 11039 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;  p               2   11[COMRAM] PTR void 
 11042 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11043 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;                  1    wreg      enum E97
 11048 ;; Registers used:
 11049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11059 ;;Total ram usage:        2 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:    2
 11062 ;; This function calls:
 11063 ;;		i2_i2c_setBuffer
 11064 ;;		i2_i2c_setDataCompleteCallback
 11065 ;; This function is called by:
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	text100
 11070  000FAC                     __ptext100:
 11071                           	opt stack 0
 11072  000FAC                     i2_rd1RegCompleteHandler:
 11073                           	opt stack 13
 11074                           
 11075                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
 11076                           
 11077                           ;incstack = 0
 11078  000FAC  C00C  F001         	movff	i2rd1RegCompleteHandler@p,i2i2c_setBuffer@buffer
 11079  000FB0  C00D  F002         	movff	i2rd1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
 11080  000FB4  0E00               	movlw	0
 11081  000FB6  6E04               	movwf	i2i2c_setBuffer@bufferSize+1,c
 11082  000FB8  0E01               	movlw	1
 11083  000FBA  6E03               	movwf	i2i2c_setBuffer@bufferSize,c
 11084  000FBC  ECA0  F008         	call	i2_i2c_setBuffer	;wreg free
 11085                           
 11086                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
 11087  000FC0  0E00               	movlw	0
 11088  000FC2  6E07               	movwf	i2i2c_setDataCompleteCallback@cb,c
 11089  000FC4  0E00               	movlw	0
 11090  000FC6  6E08               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
 11091  000FC8  0E00               	movlw	0
 11092  000FCA  6E09               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
 11093  000FCC  0E00               	movlw	0
 11094  000FCE  6E0A               	movwf	i2i2c_setDataCompleteCallback@p,c
 11095  000FD0  0E00               	movlw	0
 11096  000FD2  6E0B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
 11097  000FD4  EC6B  F008         	call	i2_i2c_setDataCompleteCallback	;wreg free
 11098                           
 11099                           ;i2c_simple_master.c: 62: return i2c_restart_read;
 11100  000FD8  0E02               	movlw	2
 11101  000FDA  0012               	return	
 11102  000FDC                     __end_ofi2_rd1RegCompleteHandler:
 11103                           	opt stack 0
 11104                           tosu	equ	0xFFF
 11105                           tosh	equ	0xFFE
 11106                           tosl	equ	0xFFD
 11107                           pclatu	equ	0xFFB
 11108                           pclath	equ	0xFFA
 11109                           tblptru	equ	0xFF8
 11110                           tblptrh	equ	0xFF7
 11111                           tblptrl	equ	0xFF6
 11112                           tablat	equ	0xFF5
 11113                           prodh	equ	0xFF4
 11114                           prodl	equ	0xFF3
 11115                           intcon	equ	0xFF2
 11116                           postinc0	equ	0xFEE
 11117                           fsr0h	equ	0xFEA
 11118                           fsr0l	equ	0xFE9
 11119                           wreg	equ	0xFE8
 11120                           indf1	equ	0xFE7
 11121                           postdec1	equ	0xFE5
 11122                           plusw1	equ	0xFE3
 11123                           fsr1h	equ	0xFE2
 11124                           fsr1l	equ	0xFE1
 11125                           indf2	equ	0xFDF
 11126                           postinc2	equ	0xFDE
 11127                           postdec2	equ	0xFDD
 11128                           plusw2	equ	0xFDB
 11129                           fsr2h	equ	0xFDA
 11130                           fsr2l	equ	0xFD9
 11131                           status	equ	0xFD8
 11132                           
 11133 ;; *************** function i2_wr1RegCompleteHandler *****************
 11134 ;; Defined at:
 11135 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;  p               2   11[COMRAM] PTR void 
 11138 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11139 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;		None
 11142 ;; Return value:  Size  Location     Type
 11143 ;;                  1    wreg      enum E97
 11144 ;; Registers used:
 11145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11155 ;;Total ram usage:        2 bytes
 11156 ;; Hardware stack levels used:    1
 11157 ;; Hardware stack levels required when called:    2
 11158 ;; This function calls:
 11159 ;;		i2_i2c_setBuffer
 11160 ;;		i2_i2c_setDataCompleteCallback
 11161 ;; This function is called by:
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text101
 11166  000FDC                     __ptext101:
 11167                           	opt stack 0
 11168  000FDC                     i2_wr1RegCompleteHandler:
 11169                           	opt stack 13
 11170                           
 11171                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
 11172                           
 11173                           ;incstack = 0
 11174  000FDC  C00C  F001         	movff	i2wr1RegCompleteHandler@p,i2i2c_setBuffer@buffer
 11175  000FE0  C00D  F002         	movff	i2wr1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
 11176  000FE4  0E00               	movlw	0
 11177  000FE6  6E04               	movwf	i2i2c_setBuffer@bufferSize+1,c
 11178  000FE8  0E01               	movlw	1
 11179  000FEA  6E03               	movwf	i2i2c_setBuffer@bufferSize,c
 11180  000FEC  ECA0  F008         	call	i2_i2c_setBuffer	;wreg free
 11181                           
 11182                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
 11183  000FF0  0E00               	movlw	0
 11184  000FF2  6E07               	movwf	i2i2c_setDataCompleteCallback@cb,c
 11185  000FF4  0E00               	movlw	0
 11186  000FF6  6E08               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
 11187  000FF8  0E00               	movlw	0
 11188  000FFA  6E09               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
 11189  000FFC  0E00               	movlw	0
 11190  000FFE  6E0A               	movwf	i2i2c_setDataCompleteCallback@p,c
 11191  001000  0E00               	movlw	0
 11192  001002  6E0B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
 11193  001004  EC6B  F008         	call	i2_i2c_setDataCompleteCallback	;wreg free
 11194                           
 11195                           ;i2c_simple_master.c: 35: return i2c_continue;
 11196  001008  0E04               	movlw	4
 11197  00100A  0012               	return	
 11198  00100C                     __end_ofi2_wr1RegCompleteHandler:
 11199                           	opt stack 0
 11200                           tosu	equ	0xFFF
 11201                           tosh	equ	0xFFE
 11202                           tosl	equ	0xFFD
 11203                           pclatu	equ	0xFFB
 11204                           pclath	equ	0xFFA
 11205                           tblptru	equ	0xFF8
 11206                           tblptrh	equ	0xFF7
 11207                           tblptrl	equ	0xFF6
 11208                           tablat	equ	0xFF5
 11209                           prodh	equ	0xFF4
 11210                           prodl	equ	0xFF3
 11211                           intcon	equ	0xFF2
 11212                           postinc0	equ	0xFEE
 11213                           fsr0h	equ	0xFEA
 11214                           fsr0l	equ	0xFE9
 11215                           wreg	equ	0xFE8
 11216                           indf1	equ	0xFE7
 11217                           postdec1	equ	0xFE5
 11218                           plusw1	equ	0xFE3
 11219                           fsr1h	equ	0xFE2
 11220                           fsr1l	equ	0xFE1
 11221                           indf2	equ	0xFDF
 11222                           postinc2	equ	0xFDE
 11223                           postdec2	equ	0xFDD
 11224                           plusw2	equ	0xFDB
 11225                           fsr2h	equ	0xFDA
 11226                           fsr2l	equ	0xFD9
 11227                           status	equ	0xFD8
 11228                           
 11229 ;; *************** function i2_i2c_restartWrite *****************
 11230 ;; Defined at:
 11231 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 11232 ;; Parameters:    Size  Location     Type
 11233 ;;  p               2   11[COMRAM] PTR void 
 11234 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11235 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;		None
 11238 ;; Return value:  Size  Location     Type
 11239 ;;                  1    wreg      enum E96
 11240 ;; Registers used:
 11241 ;;		wreg
 11242 ;; Tracked objects:
 11243 ;;		On entry : 0/0
 11244 ;;		On exit  : 0/0
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11251 ;;Total ram usage:        2 bytes
 11252 ;; Hardware stack levels used:    1
 11253 ;; This function calls:
 11254 ;;		Nothing
 11255 ;; This function is called by:
 11256 ;; This function uses a non-reentrant model
 11257 ;;
 11258                           
 11259                           	psect	text102
 11260  00144A                     __ptext102:
 11261                           	opt stack 0
 11262  00144A                     i2_i2c_restartWrite:
 11263                           	opt stack 15
 11264                           
 11265                           ;i2c_types.c: 37: return i2c_restart_write;
 11266                           
 11267                           ;incstack = 0
 11268  00144A  0E03               	movlw	3
 11269  00144C  0012               	return	
 11270  00144E                     __end_ofi2_i2c_restartWrite:
 11271                           	opt stack 0
 11272                           tosu	equ	0xFFF
 11273                           tosh	equ	0xFFE
 11274                           tosl	equ	0xFFD
 11275                           pclatu	equ	0xFFB
 11276                           pclath	equ	0xFFA
 11277                           tblptru	equ	0xFF8
 11278                           tblptrh	equ	0xFF7
 11279                           tblptrl	equ	0xFF6
 11280                           tablat	equ	0xFF5
 11281                           prodh	equ	0xFF4
 11282                           prodl	equ	0xFF3
 11283                           intcon	equ	0xFF2
 11284                           postinc0	equ	0xFEE
 11285                           fsr0h	equ	0xFEA
 11286                           fsr0l	equ	0xFE9
 11287                           wreg	equ	0xFE8
 11288                           indf1	equ	0xFE7
 11289                           postdec1	equ	0xFE5
 11290                           plusw1	equ	0xFE3
 11291                           fsr1h	equ	0xFE2
 11292                           fsr1l	equ	0xFE1
 11293                           indf2	equ	0xFDF
 11294                           postinc2	equ	0xFDE
 11295                           postdec2	equ	0xFDD
 11296                           plusw2	equ	0xFDB
 11297                           fsr2h	equ	0xFDA
 11298                           fsr2l	equ	0xFD9
 11299                           status	equ	0xFD8
 11300                           
 11301 ;; *************** function i2_returnReset *****************
 11302 ;; Defined at:
 11303 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  p               2   11[COMRAM] PTR void 
 11306 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11307 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;		None
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1    wreg      enum E11790
 11312 ;; Registers used:
 11313 ;;		wreg
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11323 ;;Total ram usage:        2 bytes
 11324 ;; Hardware stack levels used:    1
 11325 ;; This function calls:
 11326 ;;		Nothing
 11327 ;; This function is called by:
 11328 ;; This function uses a non-reentrant model
 11329 ;;
 11330                           
 11331                           	psect	text103
 11332  00144E                     __ptext103:
 11333                           	opt stack 0
 11334  00144E                     i2_returnReset:
 11335                           	opt stack 15
 11336                           
 11337                           ;i2c_master.c: 450: return i2c_reset_link;
 11338                           
 11339                           ;incstack = 0
 11340  00144E  0E05               	movlw	5
 11341  001450  0012               	return	
 11342  001452                     __end_ofi2_returnReset:
 11343                           	opt stack 0
 11344                           tosu	equ	0xFFF
 11345                           tosh	equ	0xFFE
 11346                           tosl	equ	0xFFD
 11347                           pclatu	equ	0xFFB
 11348                           pclath	equ	0xFFA
 11349                           tblptru	equ	0xFF8
 11350                           tblptrh	equ	0xFF7
 11351                           tblptrl	equ	0xFF6
 11352                           tablat	equ	0xFF5
 11353                           prodh	equ	0xFF4
 11354                           prodl	equ	0xFF3
 11355                           intcon	equ	0xFF2
 11356                           postinc0	equ	0xFEE
 11357                           fsr0h	equ	0xFEA
 11358                           fsr0l	equ	0xFE9
 11359                           wreg	equ	0xFE8
 11360                           indf1	equ	0xFE7
 11361                           postdec1	equ	0xFE5
 11362                           plusw1	equ	0xFE3
 11363                           fsr1h	equ	0xFE2
 11364                           fsr1l	equ	0xFE1
 11365                           indf2	equ	0xFDF
 11366                           postinc2	equ	0xFDE
 11367                           postdec2	equ	0xFDD
 11368                           plusw2	equ	0xFDB
 11369                           fsr2h	equ	0xFDA
 11370                           fsr2l	equ	0xFD9
 11371                           status	equ	0xFD8
 11372                           
 11373 ;; *************** function i2_returnStop *****************
 11374 ;; Defined at:
 11375 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  p               2   11[COMRAM] PTR void 
 11378 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11379 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;		None
 11382 ;; Return value:  Size  Location     Type
 11383 ;;                  1    wreg      enum E11790
 11384 ;; Registers used:
 11385 ;;		wreg
 11386 ;; Tracked objects:
 11387 ;;		On entry : 0/0
 11388 ;;		On exit  : 0/0
 11389 ;;		Unchanged: 0/0
 11390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11395 ;;Total ram usage:        2 bytes
 11396 ;; Hardware stack levels used:    1
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		i2_setCallBack
 11401 ;;		_do_I2C_DO_ADDRESS_NACK
 11402 ;;		_do_I2C_TX
 11403 ;;		_do_I2C_RX
 11404 ;;		_do_I2C_TX_EMPTY
 11405 ;;		i2_do_I2C_DO_ADDRESS_NACK
 11406 ;;		i2_do_I2C_TX
 11407 ;;		i2_do_I2C_RX
 11408 ;;		i2_do_I2C_TX_EMPTY
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text104
 11413  001452                     __ptext104:
 11414                           	opt stack 0
 11415  001452                     i2_returnStop:
 11416                           	opt stack 15
 11417                           
 11418                           ;i2c_master.c: 445: return i2c_stop;
 11419                           
 11420                           ;incstack = 0
 11421  001452  0E01               	movlw	1
 11422  001454  0012               	return	
 11423  001456                     __end_ofi2_returnStop:
 11424                           	opt stack 0
 11425                           tosu	equ	0xFFF
 11426                           tosh	equ	0xFFE
 11427                           tosl	equ	0xFFD
 11428                           pclatu	equ	0xFFB
 11429                           pclath	equ	0xFFA
 11430                           tblptru	equ	0xFF8
 11431                           tblptrh	equ	0xFF7
 11432                           tblptrl	equ	0xFF6
 11433                           tablat	equ	0xFF5
 11434                           prodh	equ	0xFF4
 11435                           prodl	equ	0xFF3
 11436                           intcon	equ	0xFF2
 11437                           postinc0	equ	0xFEE
 11438                           fsr0h	equ	0xFEA
 11439                           fsr0l	equ	0xFE9
 11440                           wreg	equ	0xFE8
 11441                           indf1	equ	0xFE7
 11442                           postdec1	equ	0xFE5
 11443                           plusw1	equ	0xFE3
 11444                           fsr1h	equ	0xFE2
 11445                           fsr1l	equ	0xFE1
 11446                           indf2	equ	0xFDF
 11447                           postinc2	equ	0xFDE
 11448                           postdec2	equ	0xFDD
 11449                           plusw2	equ	0xFDB
 11450                           fsr2h	equ	0xFDA
 11451                           fsr2l	equ	0xFD9
 11452                           status	equ	0xFD8
 11453                           
 11454 ;; *************** function i2_wr2RegCompleteHandler *****************
 11455 ;; Defined at:
 11456 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;  p               2   11[COMRAM] PTR void 
 11459 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11460 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;		None
 11463 ;; Return value:  Size  Location     Type
 11464 ;;                  1    wreg      enum E97
 11465 ;; Registers used:
 11466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11467 ;; Tracked objects:
 11468 ;;		On entry : 0/0
 11469 ;;		On exit  : 0/0
 11470 ;;		Unchanged: 0/0
 11471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11476 ;;Total ram usage:        2 bytes
 11477 ;; Hardware stack levels used:    1
 11478 ;; Hardware stack levels required when called:    2
 11479 ;; This function calls:
 11480 ;;		i2_i2c_setBuffer
 11481 ;;		i2_i2c_setDataCompleteCallback
 11482 ;; This function is called by:
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           	psect	text105
 11487  00100C                     __ptext105:
 11488                           	opt stack 0
 11489  00100C                     i2_wr2RegCompleteHandler:
 11490                           	opt stack 13
 11491                           
 11492                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
 11493                           
 11494                           ;incstack = 0
 11495  00100C  C00C  F001         	movff	i2wr2RegCompleteHandler@p,i2i2c_setBuffer@buffer
 11496  001010  C00D  F002         	movff	i2wr2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
 11497  001014  0E00               	movlw	0
 11498  001016  6E04               	movwf	i2i2c_setBuffer@bufferSize+1,c
 11499  001018  0E02               	movlw	2
 11500  00101A  6E03               	movwf	i2i2c_setBuffer@bufferSize,c
 11501  00101C  ECA0  F008         	call	i2_i2c_setBuffer	;wreg free
 11502                           
 11503                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
 11504  001020  0E00               	movlw	0
 11505  001022  6E07               	movwf	i2i2c_setDataCompleteCallback@cb,c
 11506  001024  0E00               	movlw	0
 11507  001026  6E08               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
 11508  001028  0E00               	movlw	0
 11509  00102A  6E09               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
 11510  00102C  0E00               	movlw	0
 11511  00102E  6E0A               	movwf	i2i2c_setDataCompleteCallback@p,c
 11512  001030  0E00               	movlw	0
 11513  001032  6E0B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
 11514  001034  EC6B  F008         	call	i2_i2c_setDataCompleteCallback	;wreg free
 11515                           
 11516                           ;i2c_simple_master.c: 114: return i2c_continue;
 11517  001038  0E04               	movlw	4
 11518  00103A  0012               	return	
 11519  00103C                     __end_ofi2_wr2RegCompleteHandler:
 11520                           	opt stack 0
 11521                           tosu	equ	0xFFF
 11522                           tosh	equ	0xFFE
 11523                           tosl	equ	0xFFD
 11524                           pclatu	equ	0xFFB
 11525                           pclath	equ	0xFFA
 11526                           tblptru	equ	0xFF8
 11527                           tblptrh	equ	0xFF7
 11528                           tblptrl	equ	0xFF6
 11529                           tablat	equ	0xFF5
 11530                           prodh	equ	0xFF4
 11531                           prodl	equ	0xFF3
 11532                           intcon	equ	0xFF2
 11533                           postinc0	equ	0xFEE
 11534                           fsr0h	equ	0xFEA
 11535                           fsr0l	equ	0xFE9
 11536                           wreg	equ	0xFE8
 11537                           indf1	equ	0xFE7
 11538                           postdec1	equ	0xFE5
 11539                           plusw1	equ	0xFE3
 11540                           fsr1h	equ	0xFE2
 11541                           fsr1l	equ	0xFE1
 11542                           indf2	equ	0xFDF
 11543                           postinc2	equ	0xFDE
 11544                           postdec2	equ	0xFDD
 11545                           plusw2	equ	0xFDB
 11546                           fsr2h	equ	0xFDA
 11547                           fsr2l	equ	0xFD9
 11548                           status	equ	0xFD8
 11549                           
 11550 ;; *************** function i2_i2c_setDataCompleteCallback *****************
 11551 ;; Defined at:
 11552 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;  cb              3    6[COMRAM] PTR FTN(PTR void ,)enum 
 11555 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11556 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 11557 ;;  p               2    9[COMRAM] PTR void 
 11558 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11559 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;		None
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1    wreg      void 
 11564 ;; Registers used:
 11565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11566 ;; Tracked objects:
 11567 ;;		On entry : 0/0
 11568 ;;		On exit  : 0/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11571 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11574 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11575 ;;Total ram usage:        5 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:    1
 11578 ;; This function calls:
 11579 ;;		i2_setCallBack
 11580 ;; This function is called by:
 11581 ;;		i2_wr1RegCompleteHandler
 11582 ;;		i2_rd1RegCompleteHandler
 11583 ;;		i2_rd2RegCompleteHandler
 11584 ;;		i2_wr2RegCompleteHandler
 11585 ;;		i2_rdBlkRegCompleteHandler
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           	psect	text106
 11590  0010D6                     __ptext106:
 11591                           	opt stack 0
 11592  0010D6                     i2_i2c_setDataCompleteCallback:
 11593                           	opt stack 13
 11594                           
 11595                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
 11596                           
 11597                           ;incstack = 0
 11598  0010D6  C007  F001         	movff	i2i2c_setDataCompleteCallback@cb,i2setCallBack@cb
 11599  0010DA  C008  F002         	movff	i2i2c_setDataCompleteCallback@cb+1,i2setCallBack@cb+1
 11600  0010DE  C009  F003         	movff	i2i2c_setDataCompleteCallback@cb+2,i2setCallBack@cb+2
 11601  0010E2  C00A  F004         	movff	i2i2c_setDataCompleteCallback@p,i2setCallBack@p
 11602  0010E6  C00B  F005         	movff	i2i2c_setDataCompleteCallback@p+1,i2setCallBack@p+1
 11603  0010EA  0E00               	movlw	0
 11604  0010EC  EC14  F005         	call	i2_setCallBack
 11605  0010F0  0012               	return		;funcret
 11606  0010F2                     __end_ofi2_i2c_setDataCompleteCallback:
 11607                           	opt stack 0
 11608                           tosu	equ	0xFFF
 11609                           tosh	equ	0xFFE
 11610                           tosl	equ	0xFFD
 11611                           pclatu	equ	0xFFB
 11612                           pclath	equ	0xFFA
 11613                           tblptru	equ	0xFF8
 11614                           tblptrh	equ	0xFF7
 11615                           tblptrl	equ	0xFF6
 11616                           tablat	equ	0xFF5
 11617                           prodh	equ	0xFF4
 11618                           prodl	equ	0xFF3
 11619                           intcon	equ	0xFF2
 11620                           postinc0	equ	0xFEE
 11621                           fsr0h	equ	0xFEA
 11622                           fsr0l	equ	0xFE9
 11623                           wreg	equ	0xFE8
 11624                           indf1	equ	0xFE7
 11625                           postdec1	equ	0xFE5
 11626                           plusw1	equ	0xFE3
 11627                           fsr1h	equ	0xFE2
 11628                           fsr1l	equ	0xFE1
 11629                           indf2	equ	0xFDF
 11630                           postinc2	equ	0xFDE
 11631                           postdec2	equ	0xFDD
 11632                           plusw2	equ	0xFDB
 11633                           fsr2h	equ	0xFDA
 11634                           fsr2l	equ	0xFD9
 11635                           status	equ	0xFD8
 11636                           
 11637 ;; *************** function i2_setCallBack *****************
 11638 ;; Defined at:
 11639 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;  idx             1    wreg     enum E11974
 11642 ;;  cb              3    0[COMRAM] PTR FTN(PTR void ,)enum 
 11643 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11644 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
 11645 ;;  p               2    3[COMRAM] PTR void 
 11646 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 11647 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;  idx             1    5[COMRAM] enum E11974
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  1    wreg      void 
 11652 ;; Registers used:
 11653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11654 ;; Tracked objects:
 11655 ;;		On entry : 0/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11659 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11662 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11663 ;;Total ram usage:        6 bytes
 11664 ;; Hardware stack levels used:    1
 11665 ;; This function calls:
 11666 ;;		Nothing
 11667 ;; This function is called by:
 11668 ;;		i2_i2c_setDataCompleteCallback
 11669 ;; This function uses a non-reentrant model
 11670 ;;
 11671                           
 11672                           	psect	text107
 11673  000A28                     __ptext107:
 11674                           	opt stack 0
 11675  000A28                     i2_setCallBack:
 11676                           	opt stack 13
 11677                           
 11678                           ;incstack = 0
 11679                           ;i2setCallBack@idx stored from wreg
 11680  000A28  6E06               	movwf	i2setCallBack@idx,c
 11681                           
 11682                           ;i2c_master.c: 455: if(cb)
 11683  000A2A  5001               	movf	i2setCallBack@cb,w,c
 11684  000A2C  1002               	iorwf	i2setCallBack@cb+1,w,c
 11685  000A2E  1003               	iorwf	i2setCallBack@cb+2,w,c
 11686  000A30  B4D8               	btfsc	status,2,c
 11687  000A32  D01B               	goto	i2l496
 11688                           
 11689                           ;i2c_master.c: 456: {
 11690                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
 11691  000A34  5006               	movf	i2setCallBack@idx,w,c
 11692  000A36  0D03               	mullw	3
 11693  000A38  0E6C               	movlw	low (_i2c_status+12)
 11694  000A3A  24F3               	addwf	prodl,w,c
 11695  000A3C  6ED9               	movwf	fsr2l,c
 11696  000A3E  0E00               	movlw	high (_i2c_status+12)
 11697  000A40  20F4               	addwfc	prodh,w,c
 11698  000A42  6EDA               	movwf	fsr2h,c
 11699  000A44  C001  FFDE         	movff	i2setCallBack@cb,postinc2
 11700  000A48  C002  FFDE         	movff	i2setCallBack@cb+1,postinc2
 11701  000A4C  C003  FFDE         	movff	i2setCallBack@cb+2,postinc2
 11702                           
 11703                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
 11704  000A50  5006               	movf	i2setCallBack@idx,w,c
 11705  000A52  0D02               	mullw	2
 11706  000A54  0E7E               	movlw	low (_i2c_status+30)
 11707  000A56  24F3               	addwf	prodl,w,c
 11708  000A58  6ED9               	movwf	fsr2l,c
 11709  000A5A  0E00               	movlw	high (_i2c_status+30)
 11710  000A5C  20F4               	addwfc	prodh,w,c
 11711  000A5E  6EDA               	movwf	fsr2h,c
 11712  000A60  C004  FFDE         	movff	i2setCallBack@p,postinc2
 11713  000A64  C005  FFDD         	movff	i2setCallBack@p+1,postdec2
 11714                           
 11715                           ;i2c_master.c: 459: }
 11716  000A68  0012               	return	
 11717  000A6A                     i2l496:
 11718                           
 11719                           ;i2c_master.c: 460: else
 11720                           ;i2c_master.c: 461: {
 11721                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
 11722  000A6A  5006               	movf	i2setCallBack@idx,w,c
 11723  000A6C  0D03               	mullw	3
 11724  000A6E  0E6C               	movlw	low (_i2c_status+12)
 11725  000A70  24F3               	addwf	prodl,w,c
 11726  000A72  6ED9               	movwf	fsr2l,c
 11727  000A74  0E00               	movlw	high (_i2c_status+12)
 11728  000A76  20F4               	addwfc	prodh,w,c
 11729  000A78  6EDA               	movwf	fsr2h,c
 11730  000A7A  0E52               	movlw	low i2_returnStop
 11731  000A7C  6EDE               	movwf	postinc2,c
 11732  000A7E  0E14               	movlw	high i2_returnStop
 11733  000A80  6EDE               	movwf	postinc2,c
 11734  000A82  0E00               	movlw	low (i2_returnStop shr (0+16))
 11735  000A84  6EDE               	movwf	postinc2,c
 11736                           
 11737                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
 11738  000A86  5006               	movf	i2setCallBack@idx,w,c
 11739  000A88  0D02               	mullw	2
 11740  000A8A  0E7E               	movlw	low (_i2c_status+30)
 11741  000A8C  24F3               	addwf	prodl,w,c
 11742  000A8E  6ED9               	movwf	fsr2l,c
 11743  000A90  0E00               	movlw	high (_i2c_status+30)
 11744  000A92  20F4               	addwfc	prodh,w,c
 11745  000A94  6EDA               	movwf	fsr2h,c
 11746  000A96  0E00               	movlw	0
 11747  000A98  6EDE               	movwf	postinc2,c
 11748  000A9A  0E00               	movlw	0
 11749  000A9C  6EDD               	movwf	postdec2,c
 11750  000A9E  0012               	return	
 11751  000AA0                     __end_ofi2_setCallBack:
 11752                           	opt stack 0
 11753                           tosu	equ	0xFFF
 11754                           tosh	equ	0xFFE
 11755                           tosl	equ	0xFFD
 11756                           pclatu	equ	0xFFB
 11757                           pclath	equ	0xFFA
 11758                           tblptru	equ	0xFF8
 11759                           tblptrh	equ	0xFF7
 11760                           tblptrl	equ	0xFF6
 11761                           tablat	equ	0xFF5
 11762                           prodh	equ	0xFF4
 11763                           prodl	equ	0xFF3
 11764                           intcon	equ	0xFF2
 11765                           postinc0	equ	0xFEE
 11766                           fsr0h	equ	0xFEA
 11767                           fsr0l	equ	0xFE9
 11768                           wreg	equ	0xFE8
 11769                           indf1	equ	0xFE7
 11770                           postdec1	equ	0xFE5
 11771                           plusw1	equ	0xFE3
 11772                           fsr1h	equ	0xFE2
 11773                           fsr1l	equ	0xFE1
 11774                           indf2	equ	0xFDF
 11775                           postinc2	equ	0xFDE
 11776                           postdec2	equ	0xFDD
 11777                           plusw2	equ	0xFDB
 11778                           fsr2h	equ	0xFDA
 11779                           fsr2l	equ	0xFD9
 11780                           status	equ	0xFD8
 11781                           
 11782 ;; *************** function i2_i2c_setBuffer *****************
 11783 ;; Defined at:
 11784 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  buffer          2    0[COMRAM] PTR void 
 11787 ;;		 -> readIoExpander@rec(1), readIoExpander@data(2), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), 
 11788 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 11789 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 11790 ;;		 -> NULL(0), 
 11791 ;;  bufferSize      2    2[COMRAM] unsigned int 
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;		None
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  1    wreg      void 
 11796 ;; Registers used:
 11797 ;;		wreg, status,2, status,0
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11807 ;;Total ram usage:        4 bytes
 11808 ;; Hardware stack levels used:    1
 11809 ;; This function calls:
 11810 ;;		Nothing
 11811 ;; This function is called by:
 11812 ;;		i2_wr1RegCompleteHandler
 11813 ;;		i2_rd1RegCompleteHandler
 11814 ;;		i2_rd2RegCompleteHandler
 11815 ;;		i2_wr2RegCompleteHandler
 11816 ;;		i2_rdBlkRegCompleteHandler
 11817 ;; This function uses a non-reentrant model
 11818 ;;
 11819                           
 11820                           	psect	text108
 11821  001140                     __ptext108:
 11822                           	opt stack 0
 11823  001140                     i2_i2c_setBuffer:
 11824                           	opt stack 14
 11825                           
 11826                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
 11827                           
 11828                           ;incstack = 0
 11829  001140  0100               	movlb	0	; () banked
 11830  001142  A560               	btfss	_i2c_status& (0+255),2,b
 11831  001144  0012               	return	
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;i2c_master.c: 187: {
 11835                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
 11836  001146  C001  F062         	movff	i2i2c_setBuffer@buffer,_i2c_status+2
 11837  00114A  C002  F063         	movff	i2i2c_setBuffer@buffer+1,_i2c_status+3
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
 11841  00114E  C003  F064         	movff	i2i2c_setBuffer@bufferSize,_i2c_status+4
 11842  001152  C004  F065         	movff	i2i2c_setBuffer@bufferSize+1,_i2c_status+5
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
 11846  001156  9560               	bcf	_i2c_status& (0+255),2,b
 11847  001158  0012               	return	
 11848  00115A                     __end_ofi2_i2c_setBuffer:
 11849                           	opt stack 0
 11850                           tosu	equ	0xFFF
 11851                           tosh	equ	0xFFE
 11852                           tosl	equ	0xFFD
 11853                           pclatu	equ	0xFFB
 11854                           pclath	equ	0xFFA
 11855                           tblptru	equ	0xFF8
 11856                           tblptrh	equ	0xFF7
 11857                           tblptrl	equ	0xFF6
 11858                           tablat	equ	0xFF5
 11859                           prodh	equ	0xFF4
 11860                           prodl	equ	0xFF3
 11861                           intcon	equ	0xFF2
 11862                           postinc0	equ	0xFEE
 11863                           fsr0h	equ	0xFEA
 11864                           fsr0l	equ	0xFE9
 11865                           wreg	equ	0xFE8
 11866                           indf1	equ	0xFE7
 11867                           postdec1	equ	0xFE5
 11868                           plusw1	equ	0xFE3
 11869                           fsr1h	equ	0xFE2
 11870                           fsr1l	equ	0xFE1
 11871                           indf2	equ	0xFDF
 11872                           postinc2	equ	0xFDE
 11873                           postdec2	equ	0xFDD
 11874                           plusw2	equ	0xFDB
 11875                           fsr2h	equ	0xFDA
 11876                           fsr2l	equ	0xFD9
 11877                           status	equ	0xFD8
 11878                           
 11879 ;; *************** function i2_i2c1_driver_stop *****************
 11880 ;; Defined at:
 11881 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;		None
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;		None
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      void 
 11888 ;; Registers used:
 11889 ;;		None
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11899 ;;Total ram usage:        0 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; This function calls:
 11902 ;;		Nothing
 11903 ;; This function is called by:
 11904 ;;		i2_do_I2C_SEND_STOP
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text109
 11909  001456                     __ptext109:
 11910                           	opt stack 0
 11911  001456                     i2_i2c1_driver_stop:
 11912                           	opt stack 14
 11913                           
 11914                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
 11915                           
 11916                           ; BSR set to: 0
 11917                           ;incstack = 0
 11918  001456  8497               	bsf	3991,2,c	;volatile
 11919  001458  0012               	return		;funcret
 11920  00145A                     __end_ofi2_i2c1_driver_stop:
 11921                           	opt stack 0
 11922                           tosu	equ	0xFFF
 11923                           tosh	equ	0xFFE
 11924                           tosl	equ	0xFFD
 11925                           pclatu	equ	0xFFB
 11926                           pclath	equ	0xFFA
 11927                           tblptru	equ	0xFF8
 11928                           tblptrh	equ	0xFF7
 11929                           tblptrl	equ	0xFF6
 11930                           tablat	equ	0xFF5
 11931                           prodh	equ	0xFF4
 11932                           prodl	equ	0xFF3
 11933                           intcon	equ	0xFF2
 11934                           postinc0	equ	0xFEE
 11935                           fsr0h	equ	0xFEA
 11936                           fsr0l	equ	0xFE9
 11937                           wreg	equ	0xFE8
 11938                           indf1	equ	0xFE7
 11939                           postdec1	equ	0xFE5
 11940                           plusw1	equ	0xFE3
 11941                           fsr1h	equ	0xFE2
 11942                           fsr1l	equ	0xFE1
 11943                           indf2	equ	0xFDF
 11944                           postinc2	equ	0xFDE
 11945                           postdec2	equ	0xFDD
 11946                           plusw2	equ	0xFDB
 11947                           fsr2h	equ	0xFDA
 11948                           fsr2l	equ	0xFD9
 11949                           status	equ	0xFD8
 11950                           
 11951 ;; *************** function i2_i2c1_driver_restart *****************
 11952 ;; Defined at:
 11953 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;		None
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;		None
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  1    wreg      void 
 11960 ;; Registers used:
 11961 ;;		None
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11971 ;;Total ram usage:        0 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; This function calls:
 11974 ;;		Nothing
 11975 ;; This function is called by:
 11976 ;;		i2_do_I2C_SEND_RESTART_READ
 11977 ;;		i2_do_I2C_SEND_RESTART_WRITE
 11978 ;;		i2_do_I2C_SEND_RESTART
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           	psect	text110
 11983  00145A                     __ptext110:
 11984                           	opt stack 0
 11985  00145A                     i2_i2c1_driver_restart:
 11986                           	opt stack 14
 11987                           
 11988                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
 11989                           
 11990                           ;incstack = 0
 11991  00145A  8297               	bsf	3991,1,c	;volatile
 11992  00145C  0012               	return		;funcret
 11993  00145E                     __end_ofi2_i2c1_driver_restart:
 11994                           	opt stack 0
 11995                           tosu	equ	0xFFF
 11996                           tosh	equ	0xFFE
 11997                           tosl	equ	0xFFD
 11998                           pclatu	equ	0xFFB
 11999                           pclath	equ	0xFFA
 12000                           tblptru	equ	0xFF8
 12001                           tblptrh	equ	0xFF7
 12002                           tblptrl	equ	0xFF6
 12003                           tablat	equ	0xFF5
 12004                           prodh	equ	0xFF4
 12005                           prodl	equ	0xFF3
 12006                           intcon	equ	0xFF2
 12007                           postinc0	equ	0xFEE
 12008                           fsr0h	equ	0xFEA
 12009                           fsr0l	equ	0xFE9
 12010                           wreg	equ	0xFE8
 12011                           indf1	equ	0xFE7
 12012                           postdec1	equ	0xFE5
 12013                           plusw1	equ	0xFE3
 12014                           fsr1h	equ	0xFE2
 12015                           fsr1l	equ	0xFE1
 12016                           indf2	equ	0xFDF
 12017                           postinc2	equ	0xFDE
 12018                           postdec2	equ	0xFDD
 12019                           plusw2	equ	0xFDB
 12020                           fsr2h	equ	0xFDA
 12021                           fsr2l	equ	0xFD9
 12022                           status	equ	0xFD8
 12023                           
 12024 ;; *************** function i2_i2c1_driver_sendACK *****************
 12025 ;; Defined at:
 12026 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 12027 ;; Parameters:    Size  Location     Type
 12028 ;;		None
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;		None
 12031 ;; Return value:  Size  Location     Type
 12032 ;;                  1    wreg      void 
 12033 ;; Registers used:
 12034 ;;		None
 12035 ;; Tracked objects:
 12036 ;;		On entry : 0/0
 12037 ;;		On exit  : 0/0
 12038 ;;		Unchanged: 0/0
 12039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12044 ;;Total ram usage:        0 bytes
 12045 ;; Hardware stack levels used:    1
 12046 ;; This function calls:
 12047 ;;		Nothing
 12048 ;; This function is called by:
 12049 ;;		i2_do_I2C_DO_ACK
 12050 ;;		i2_do_I2C_RX
 12051 ;; This function uses a non-reentrant model
 12052 ;;
 12053                           
 12054                           	psect	text111
 12055  001418                     __ptext111:
 12056                           	opt stack 0
 12057  001418                     i2_i2c1_driver_sendACK:
 12058                           	opt stack 15
 12059                           
 12060                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 12061                           
 12062                           ;incstack = 0
 12063  001418  9A97               	bcf	3991,5,c	;volatile
 12064                           
 12065                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 12066  00141A  8897               	bsf	3991,4,c	;volatile
 12067  00141C  0012               	return		;funcret
 12068  00141E                     __end_ofi2_i2c1_driver_sendACK:
 12069                           	opt stack 0
 12070                           tosu	equ	0xFFF
 12071                           tosh	equ	0xFFE
 12072                           tosl	equ	0xFFD
 12073                           pclatu	equ	0xFFB
 12074                           pclath	equ	0xFFA
 12075                           tblptru	equ	0xFF8
 12076                           tblptrh	equ	0xFF7
 12077                           tblptrl	equ	0xFF6
 12078                           tablat	equ	0xFF5
 12079                           prodh	equ	0xFF4
 12080                           prodl	equ	0xFF3
 12081                           intcon	equ	0xFF2
 12082                           postinc0	equ	0xFEE
 12083                           fsr0h	equ	0xFEA
 12084                           fsr0l	equ	0xFE9
 12085                           wreg	equ	0xFE8
 12086                           indf1	equ	0xFE7
 12087                           postdec1	equ	0xFE5
 12088                           plusw1	equ	0xFE3
 12089                           fsr1h	equ	0xFE2
 12090                           fsr1l	equ	0xFE1
 12091                           indf2	equ	0xFDF
 12092                           postinc2	equ	0xFDE
 12093                           postdec2	equ	0xFDD
 12094                           plusw2	equ	0xFDB
 12095                           fsr2h	equ	0xFDA
 12096                           fsr2l	equ	0xFD9
 12097                           status	equ	0xFD8
 12098                           
 12099 ;; *************** function _i2c_busCollisionISR *****************
 12100 ;; Defined at:
 12101 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 12102 ;; Parameters:    Size  Location     Type
 12103 ;;		None
 12104 ;; Auto vars:     Size  Location     Type
 12105 ;;		None
 12106 ;; Return value:  Size  Location     Type
 12107 ;;                  1    wreg      void 
 12108 ;; Registers used:
 12109 ;;		cstack
 12110 ;; Tracked objects:
 12111 ;;		On entry : 0/0
 12112 ;;		On exit  : 0/0
 12113 ;;		Unchanged: 0/0
 12114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12119 ;;Total ram usage:        0 bytes
 12120 ;; Hardware stack levels used:    1
 12121 ;; Hardware stack levels required when called:    1
 12122 ;; This function calls:
 12123 ;;		_i2c1_driver_clearBusCollision
 12124 ;; This function is called by:
 12125 ;;		_i2c_open
 12126 ;;		_INTERRUPT_InterruptManager
 12127 ;; This function uses a non-reentrant model
 12128 ;;
 12129                           
 12130                           	psect	text112
 12131  00141E                     __ptext112:
 12132                           	opt stack 0
 12133  00141E                     _i2c_busCollisionISR:
 12134                           	opt stack 16
 12135                           
 12136                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 12137                           
 12138                           ;incstack = 0
 12139  00141E  EC12  F00A         	call	_i2c1_driver_clearBusCollision	;wreg free
 12140  001422  0012               	return		;funcret
 12141  001424                     __end_of_i2c_busCollisionISR:
 12142                           	opt stack 0
 12143                           tosu	equ	0xFFF
 12144                           tosh	equ	0xFFE
 12145                           tosl	equ	0xFFD
 12146                           pclatu	equ	0xFFB
 12147                           pclath	equ	0xFFA
 12148                           tblptru	equ	0xFF8
 12149                           tblptrh	equ	0xFF7
 12150                           tblptrl	equ	0xFF6
 12151                           tablat	equ	0xFF5
 12152                           prodh	equ	0xFF4
 12153                           prodl	equ	0xFF3
 12154                           intcon	equ	0xFF2
 12155                           postinc0	equ	0xFEE
 12156                           fsr0h	equ	0xFEA
 12157                           fsr0l	equ	0xFE9
 12158                           wreg	equ	0xFE8
 12159                           indf1	equ	0xFE7
 12160                           postdec1	equ	0xFE5
 12161                           plusw1	equ	0xFE3
 12162                           fsr1h	equ	0xFE2
 12163                           fsr1l	equ	0xFE1
 12164                           indf2	equ	0xFDF
 12165                           postinc2	equ	0xFDE
 12166                           postdec2	equ	0xFDD
 12167                           plusw2	equ	0xFDB
 12168                           fsr2h	equ	0xFDA
 12169                           fsr2l	equ	0xFD9
 12170                           status	equ	0xFD8
 12171                           
 12172 ;; *************** function _i2c1_driver_clearBusCollision *****************
 12173 ;; Defined at:
 12174 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 12175 ;; Parameters:    Size  Location     Type
 12176 ;;		None
 12177 ;; Auto vars:     Size  Location     Type
 12178 ;;		None
 12179 ;; Return value:  Size  Location     Type
 12180 ;;                  1    wreg      void 
 12181 ;; Registers used:
 12182 ;;		None
 12183 ;; Tracked objects:
 12184 ;;		On entry : 0/0
 12185 ;;		On exit  : 0/0
 12186 ;;		Unchanged: 0/0
 12187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12192 ;;Total ram usage:        0 bytes
 12193 ;; Hardware stack levels used:    1
 12194 ;; This function calls:
 12195 ;;		Nothing
 12196 ;; This function is called by:
 12197 ;;		_i2c_busCollisionISR
 12198 ;; This function uses a non-reentrant model
 12199 ;;
 12200                           
 12201                           	psect	text113
 12202  001424                     __ptext113:
 12203                           	opt stack 0
 12204  001424                     _i2c1_driver_clearBusCollision:
 12205                           	opt stack 16
 12206                           
 12207                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
 12208                           
 12209                           ;incstack = 0
 12210  001424  010E               	movlb	14	; () banked
 12211  001426  93CD               	bcf	205,1,b	;volatile
 12212                           
 12213                           ; BSR set to: 14
 12214  001428  0012               	return		;funcret
 12215  00142A                     __end_of_i2c1_driver_clearBusCollision:
 12216                           	opt stack 0
 12217  0000                     tosu	equ	0xFFF
 12218                           tosh	equ	0xFFE
 12219                           tosl	equ	0xFFD
 12220                           pclatu	equ	0xFFB
 12221                           pclath	equ	0xFFA
 12222                           tblptru	equ	0xFF8
 12223                           tblptrh	equ	0xFF7
 12224                           tblptrl	equ	0xFF6
 12225                           tablat	equ	0xFF5
 12226                           prodh	equ	0xFF4
 12227                           prodl	equ	0xFF3
 12228                           intcon	equ	0xFF2
 12229                           postinc0	equ	0xFEE
 12230                           fsr0h	equ	0xFEA
 12231                           fsr0l	equ	0xFE9
 12232                           wreg	equ	0xFE8
 12233                           indf1	equ	0xFE7
 12234                           postdec1	equ	0xFE5
 12235                           plusw1	equ	0xFE3
 12236                           fsr1h	equ	0xFE2
 12237                           fsr1l	equ	0xFE1
 12238                           indf2	equ	0xFDF
 12239                           postinc2	equ	0xFDE
 12240                           postdec2	equ	0xFDD
 12241                           plusw2	equ	0xFDB
 12242                           fsr2h	equ	0xFDA
 12243                           fsr2l	equ	0xFD9
 12244                           status	equ	0xFD8
 12245                           tosu	equ	0xFFF
 12246                           tosh	equ	0xFFE
 12247                           tosl	equ	0xFFD
 12248                           pclatu	equ	0xFFB
 12249                           pclath	equ	0xFFA
 12250                           tblptru	equ	0xFF8
 12251                           tblptrh	equ	0xFF7
 12252                           tblptrl	equ	0xFF6
 12253                           tablat	equ	0xFF5
 12254                           prodh	equ	0xFF4
 12255                           prodl	equ	0xFF3
 12256                           intcon	equ	0xFF2
 12257                           postinc0	equ	0xFEE
 12258                           fsr0h	equ	0xFEA
 12259                           fsr0l	equ	0xFE9
 12260                           wreg	equ	0xFE8
 12261                           indf1	equ	0xFE7
 12262                           postdec1	equ	0xFE5
 12263                           plusw1	equ	0xFE3
 12264                           fsr1h	equ	0xFE2
 12265                           fsr1l	equ	0xFE1
 12266                           indf2	equ	0xFDF
 12267                           postinc2	equ	0xFDE
 12268                           postdec2	equ	0xFDD
 12269                           plusw2	equ	0xFDB
 12270                           fsr2h	equ	0xFDA
 12271                           fsr2l	equ	0xFD9
 12272                           status	equ	0xFD8
 12273                           
 12274                           	psect	text114
 12275  000000                     __ptext114:
 12276                           	opt stack 0
 12277                           tosu	equ	0xFFF
 12278                           tosh	equ	0xFFE
 12279                           tosl	equ	0xFFD
 12280                           pclatu	equ	0xFFB
 12281                           pclath	equ	0xFFA
 12282                           tblptru	equ	0xFF8
 12283                           tblptrh	equ	0xFF7
 12284                           tblptrl	equ	0xFF6
 12285                           tablat	equ	0xFF5
 12286                           prodh	equ	0xFF4
 12287                           prodl	equ	0xFF3
 12288                           intcon	equ	0xFF2
 12289                           postinc0	equ	0xFEE
 12290                           fsr0h	equ	0xFEA
 12291                           fsr0l	equ	0xFE9
 12292                           wreg	equ	0xFE8
 12293                           indf1	equ	0xFE7
 12294                           postdec1	equ	0xFE5
 12295                           plusw1	equ	0xFE3
 12296                           fsr1h	equ	0xFE2
 12297                           fsr1l	equ	0xFE1
 12298                           indf2	equ	0xFDF
 12299                           postinc2	equ	0xFDE
 12300                           postdec2	equ	0xFDD
 12301                           plusw2	equ	0xFDB
 12302                           fsr2h	equ	0xFDA
 12303                           fsr2l	equ	0xFD9
 12304                           status	equ	0xFD8
 12305                           
 12306                           	psect	rparam
 12307  0000                     tosu	equ	0xFFF
 12308                           tosh	equ	0xFFE
 12309                           tosl	equ	0xFFD
 12310                           pclatu	equ	0xFFB
 12311                           pclath	equ	0xFFA
 12312                           tblptru	equ	0xFF8
 12313                           tblptrh	equ	0xFF7
 12314                           tblptrl	equ	0xFF6
 12315                           tablat	equ	0xFF5
 12316                           prodh	equ	0xFF4
 12317                           prodl	equ	0xFF3
 12318                           intcon	equ	0xFF2
 12319                           postinc0	equ	0xFEE
 12320                           fsr0h	equ	0xFEA
 12321                           fsr0l	equ	0xFE9
 12322                           wreg	equ	0xFE8
 12323                           indf1	equ	0xFE7
 12324                           postdec1	equ	0xFE5
 12325                           plusw1	equ	0xFE3
 12326                           fsr1h	equ	0xFE2
 12327                           fsr1l	equ	0xFE1
 12328                           indf2	equ	0xFDF
 12329                           postinc2	equ	0xFDE
 12330                           postdec2	equ	0xFDD
 12331                           plusw2	equ	0xFDB
 12332                           fsr2h	equ	0xFDA
 12333                           fsr2l	equ	0xFD9
 12334                           status	equ	0xFD8
 12335                           
 12336                           	psect	temp
 12337  000047                     btemp:
 12338                           	opt stack 0
 12339  000047                     	ds	1
 12340  0000                     int$flags	set	btemp
 12341  0000                     wtemp6	set	btemp+1
 12342                           tosu	equ	0xFFF
 12343                           tosh	equ	0xFFE
 12344                           tosl	equ	0xFFD
 12345                           pclatu	equ	0xFFB
 12346                           pclath	equ	0xFFA
 12347                           tblptru	equ	0xFF8
 12348                           tblptrh	equ	0xFF7
 12349                           tblptrl	equ	0xFF6
 12350                           tablat	equ	0xFF5
 12351                           prodh	equ	0xFF4
 12352                           prodl	equ	0xFF3
 12353                           intcon	equ	0xFF2
 12354                           postinc0	equ	0xFEE
 12355                           fsr0h	equ	0xFEA
 12356                           fsr0l	equ	0xFE9
 12357                           wreg	equ	0xFE8
 12358                           indf1	equ	0xFE7
 12359                           postdec1	equ	0xFE5
 12360                           plusw1	equ	0xFE3
 12361                           fsr1h	equ	0xFE2
 12362                           fsr1l	equ	0xFE1
 12363                           indf2	equ	0xFDF
 12364                           postinc2	equ	0xFDE
 12365                           postdec2	equ	0xFDD
 12366                           plusw2	equ	0xFDB
 12367                           fsr2h	equ	0xFDA
 12368                           fsr2l	equ	0xFD9
 12369                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      70
    BANK0           160     51     151
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    do_I2C_TX$2344$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2350$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2356$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_ISR$2362	PTR const FTN()enum E11956 size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$2361	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2356	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$2355	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2350	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$2349	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX$2344	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S847$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_readNBytes@data	PTR void  size(2) Largest target is 1
		 -> readIoExpander@rec(COMRAM[1]), 

    d.data	PTR unsigned char  size(2) Largest target is 0

    S1112$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(2) Largest target is 2
		 -> readIoExpander@data(COMRAM[2]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E11956[16] size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> readIoExpander@rec(COMRAM[1]), readIoExpander@data(COMRAM[2]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S847$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S847$callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> i2_returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> returnReset(), returnStop(), 

    S847$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> readIoExpander@rec(COMRAM[1]), readIoExpander@data(COMRAM[2]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> readIoExpander@rec(COMRAM[1]), readIoExpander@data(COMRAM[2]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMRAM

    _main->_getSpaces
    _getSpaces->_updateExpanders
    _updateExpanders->_readIoExpander
    _readIoExpander->_i2c_writeNBytes
    _i2c_writeNBytes->_i2c_setAddressNACKCallback
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_readNBytes->_i2c_open
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_masterRead->_i2c_masterOperation
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    i2_i2c_ISR->i2_do_I2C_TX
    i2_do_I2C_TX->i2_i2c1_driver_TXData
    i2_do_I2C_TX->i2_i2c1_driver_isNACK
    i2_do_I2C_SEND_ADR_WRITE->i2_i2c1_driver_TXData
    i2_do_I2C_SEND_ADR_READ->i2_i2c1_driver_TXData
    i2_wr2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_wr1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rdBlkRegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_i2c_setDataCompleteCallback->i2_setCallBack

Critical Paths under _main in BANK0

    _main->_getSpaces
    _getSpaces->_updateExpanders

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0  224187
                                             14 BANK0     37    37      0
                 _EUSART1_Initialize
                      _EUSART1_Write
                 _EUSART2_Initialize
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
                            ___aldiv
                                _abs
                          _getSpaces
 ---------------------------------------------------------------------------------
 (1) _getSpaces                                            6     6      0  222768
                                             62 COMRAM     2     2      0
                                             10 BANK0      4     4      0
                    _updateExpanders
 ---------------------------------------------------------------------------------
 (2) _updateExpanders                                     16    12      4  222493
                                             56 COMRAM     6     2      4
                                              0 BANK0     10    10      0
                     _readIoExpander
 ---------------------------------------------------------------------------------
 (3) _readIoExpander                                      19    17      2  222237
                                             37 COMRAM    19    17      2
                     _i2c_readNBytes
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (4) _i2c_writeNBytes                                      5     1      4  111193
                                             32 COMRAM     5     1      4
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (5) _i2c_setAddressNACKCallback                           5     0      5    2259
                                             27 COMRAM     5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (5) _i2c_masterWrite                                      0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (4) _i2c_readNBytes                                       5     1      4  108934
                                             26 COMRAM     5     1      4
                          _i2c_close
                     _i2c_masterRead
                           _i2c_open
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (5) _i2c_open                                             2     2      0     310
                                             24 COMRAM     2     2      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setI2cISR                                3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_setBusCollisionISR                       3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_masterRead                                       0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (6) _i2c_masterOperation                                  2     2      0  106092
                                             24 COMRAM     2     2      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (7) _mssp1_IRQisEnabled                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _i2c_poller                                           0     0      0  106024
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (8) _mssp1_waitForEvent                                   2     0      2      90
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              0     0      0  105934
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            2     2      0   26519
                                             22 COMRAM     2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            0     0      0   26451
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2    5232
                                             32 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2    5232
                                             32 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          2     0      2     108
                                             32 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         2     0      2       0
                                             32 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             2     0      2    5415
                                             32 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2    5232
                                             32 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2    5232
                                             32 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _i2c_setDataCompleteCallback                         5     0      5    2979
                                             27 COMRAM     5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (6) _setCallBack                                          6     1      5    1117
                                             21 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (5) _i2c_setBuffer                                        4     0      4    2222
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    2     0      2       0
                                             32 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2c_close                                            1     1      0      37
                                             21 COMRAM     1     1      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (6) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     218
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             21 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Write                                        1     1      0      22
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      22
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                         18    18      0   17327
                                              3 COMRAM    18    18      0
                   Absolute function *
                _i2c_busCollisionISR *
                          i2_i2c_ISR *
 ---------------------------------------------------------------------------------
 (14) i2_i2c_ISR                                           0     0      0   17327
                    i2_do_I2C_DO_ACK *
           i2_do_I2C_DO_ADDRESS_NACK *
           i2_do_I2C_DO_NACK_RESTART *
              i2_do_I2C_DO_NACK_STOP *
                      i2_do_I2C_IDLE *
                      i2_do_I2C_RCEN *
                     i2_do_I2C_RESET *
                        i2_do_I2C_RX *
             i2_do_I2C_SEND_ADR_READ *
            i2_do_I2C_SEND_ADR_WRITE *
              i2_do_I2C_SEND_RESTART *
         i2_do_I2C_SEND_RESTART_READ *
        i2_do_I2C_SEND_RESTART_WRITE *
                 i2_do_I2C_SEND_STOP *
                        i2_do_I2C_TX *
                  i2_do_I2C_TX_EMPTY *
               i2_i2c1_driver_isNACK
                   i2_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (15) i2_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_TX_EMPTY                                   0     0      0    4306
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
                     i2_mssp1_setIRQ
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i2_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_TX                                         2     2      0    4365
                                              1 COMRAM     2     2      0
                   Absolute function *
         i2_do_I2C_SEND_RESTART_READ
        i2_do_I2C_SEND_RESTART_WRITE
                 i2_do_I2C_SEND_STOP
               i2_i2c1_driver_TXData
               i2_i2c1_driver_isNACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (15) i2_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (16) i2_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_SEND_ADR_WRITE                             0     0      0      22
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_SEND_ADR_READ                              0     0      0      22
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (16) i2_i2c1_driver_TXData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_RX                                         0     0      0    4306
                   Absolute function *
           i2_do_I2C_DO_NACK_RESTART
              i2_do_I2C_DO_NACK_STOP
            i2_i2c1_driver_getRXData
              i2_i2c1_driver_sendACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i2_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_do_I2C_DO_NACK_STOP                               0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (16) i2_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (17) i2_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_RESET                                      0     0      0       0
             i2_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (16) i2_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_RCEN                                       0     0      0       0
              i2_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (16) i2_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_DO_ADDRESS_NACK                            0     0      0    4306
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (16) i2_wr2RegCompleteHandler                             2     0      2     836
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_wr1RegCompleteHandler                             2     0      2     836
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_returnStop                                        2     0      2      76
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) i2_returnReset                                       2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) i2_rdBlkRegCompleteHandler                           2     0      2     886
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_rd2RegCompleteHandler                             2     0      2     836
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_rd1RegCompleteHandler                             2     0      2     836
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (17) i2_i2c_setDataCompleteCallback                       5     0      5     510
                                              6 COMRAM     5     0      5
                      i2_setCallBack
 ---------------------------------------------------------------------------------
 (18) i2_setCallBack                                       6     1      5     206
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (17) i2_i2c_setBuffer                                     4     0      4     304
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (16) i2_i2c_restartWrite                                  2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) i2_do_I2C_SEND_STOP                                  0     0      0       0
                 i2_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (17) i2_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_do_I2C_SEND_RESTART                               0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (17) i2_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (15) i2_do_I2C_DO_ACK                                     0     0      0       0
              i2_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (16) i2_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (15) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Initialize
   _EUSART1_Write
   _EUSART2_Initialize
   _EUSART2_Read
   _EUSART2_Write
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   ___aldiv
   _abs
   _getSpaces
     _updateExpanders
       _readIoExpander
         _i2c_readNBytes
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterRead
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setBuffer
         _i2c_writeNBytes
           _i2c_close
             _mssp1_clearIRQ
             _mssp1_disableIRQ
           _i2c_masterWrite
             _i2c_masterOperation
               _i2c1_driver_start
               _i2c_poller
                 _i2c_ISR
                   _do_I2C_DO_ACK *
                     _i2c1_driver_sendACK
                   _do_I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_DO_NACK_RESTART *
                     _i2c1_driver_sendNACK
                   _do_I2C_DO_NACK_STOP *
                     _i2c1_driver_sendNACK
                   _do_I2C_IDLE *
                   _do_I2C_RCEN *
                     _i2c1_driver_startRX
                   _do_I2C_RESET *
                     _i2c1_driver_resetBus
                   _do_I2C_RX *
                     Absolute function(Fake) *
                     _do_I2C_DO_NACK_RESTART *
                       _i2c1_driver_sendNACK
                     _do_I2C_DO_NACK_STOP *
                       _i2c1_driver_sendNACK
                     _i2c1_driver_getRXData *
                     _i2c1_driver_sendACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_SEND_ADR_READ *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_ADR_WRITE *
                     _i2c1_driver_TXData
                   _do_I2C_SEND_RESTART *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_READ *
                     _i2c1_driver_restart
                   _do_I2C_SEND_RESTART_WRITE *
                     _i2c1_driver_restart
                   _do_I2C_SEND_STOP *
                     _i2c1_driver_stop
                   _do_I2C_TX *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART_READ *
                       _i2c1_driver_restart
                     _do_I2C_SEND_RESTART_WRITE *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c1_driver_TXData *
                     _i2c1_driver_isNACK *
                     _i2c_restartWrite *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _do_I2C_TX_EMPTY *
                     Absolute function(Fake) *
                     _do_I2C_SEND_RESTART *
                       _i2c1_driver_restart
                     _do_I2C_SEND_STOP *
                       _i2c1_driver_stop
                     _i2c_restartWrite *
                     _mssp1_setIRQ *
                     _rd1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rd2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _rdBlkRegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _returnReset *
                     _returnStop *
                     _wr1RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                     _wr2RegCompleteHandler *
                       _i2c_setBuffer
                       _i2c_setDataCompleteCallback
                         _setCallBack
                   _i2c1_driver_isNACK *
                   _mssp1_clearIRQ *
                 _mssp1_waitForEvent
               _mssp1_IRQisEnabled
           _i2c_open
             _i2c1_driver_open
             _i2c1_driver_setBusCollisionISR
             _i2c1_driver_setI2cISR
             _mssp1_clearIRQ
           _i2c_setAddressNACKCallback
             _setCallBack
           _i2c_setBuffer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i2_i2c_ISR *
     i2_do_I2C_DO_ACK *
       i2_i2c1_driver_sendACK
     i2_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_DO_NACK_RESTART *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_DO_NACK_STOP *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_IDLE *
     i2_do_I2C_RCEN *
       i2_i2c1_driver_startRX
     i2_do_I2C_RESET *
       i2_i2c1_driver_resetBus
     i2_do_I2C_RX *
       Absolute function(Fake) *
       i2_do_I2C_DO_NACK_RESTART *
         i2_i2c1_driver_sendNACK
       i2_do_I2C_DO_NACK_STOP *
         i2_i2c1_driver_sendNACK
       i2_i2c1_driver_getRXData *
       i2_i2c1_driver_sendACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_SEND_ADR_READ *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_ADR_WRITE *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_RESTART *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_READ *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_WRITE *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_STOP *
       i2_i2c1_driver_stop
     i2_do_I2C_TX *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART_READ *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_RESTART_WRITE *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c1_driver_TXData *
       i2_i2c1_driver_isNACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_mssp1_setIRQ *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_i2c1_driver_isNACK *
     i2_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     33      97       5       94.4%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     40      46       1       74.5%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DD       6        0.0%
DATA                 0      0      DD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 23 22:43:33 2018

                ??i2_i2c1_driver_startRX 0001                             returnReset@p 0021  
                      updateExpanders@lL 0098                        updateExpanders@mL 009A  
                      updateExpanders@lR 0099                        updateExpanders@mR 009B  
                      updateExpanders@rL 009C                        updateExpanders@rR 009D  
          _do_I2C_SEND_RESTART$intlevel0 130C                              __CFG_CP$OFF 000000  
                   __size_of_do_I2C_IDLE 0012                      _do_I2C_SEND_RESTART 1306  
                   __size_of_do_I2C_RCEN 0012                     readIoExpander@spaces 0034  
                    ?i2_i2c_restartWrite 000C                              __CFG_LVP$ON 000000  
                                    l362 06D0                                      l435 0C34  
                                    l443 086C                                      l436 0C28  
                                    l444 0832                                      l700 0794  
                                    l445 0820                                      l381 0F36  
                                    l605 0F0E                                      l454 089A  
                                    l462 0976                                      l702 07D6  
                                    l471 0B34                                      l439 0C2E  
                                    l447 0826                                      l463 096A  
                                    l383 0F48                                      l472 0B20  
                                    l448 082C                                      l704 07F0  
                                    l369 107E                                      l465 0970  
                                    l393 1104                                      l545 0CA4  
                                    l394 10F4                                      l475 0B26  
                                    l459 0966                                      l483 0BE8  
                                    l476 0B2E                                      l740 030C  
                                    l734 011A                                      l647 127E  
                                    l735 0282                                      l496 09F2  
                                    l744 0338                                      l736 02B2  
                                    l745 036E                                      l737 02DA  
                                    l691 0406                                      l739 031E  
                                    l860 05AE                                      l846 105A  
                                    l863 05EE                                      l687 03B8  
                                    l864 05FC                                      l856 0574  
                                    l865 0612                                      l857 058C  
                                    l859 05BA                                      l699 07B4  
                           __CFG_CPD$OFF 000000          __end_ofi2_i2c1_driver_getRXData 1446  
                                    _abs 103C             __size_of_i2c_masterOperation 0032  
                   _returnStop$intlevel0 138C            i2c_setDataCompleteCallback@cb 001C  
        i2i2c_setDataCompleteCallback@cb 0007                  __size_of_PMD_Initialize 001C  
                  __size_of_do_I2C_RESET 0016                                      prod 000FF3  
                                    tosl 000FFD                                      wreg 000FE8  
               ?i2_rd1RegCompleteHandler 000C          i2c1_driver_setBusCollisionISR@f 0016  
                            i2_do_I2C_RX 0AA0                              i2_do_I2C_TX 08A6  
               ?i2_wr1RegCompleteHandler 000C                             __CFG_ZCD$OFF 000000  
                                   ?_abs 0016                  ??_rd2RegCompleteHandler 0023  
                                   l4230 03F6                                     l4244 047C  
                                   l3528 134E                                     l4186 0C68  
                                   l3484 1340                                     l4198 0EEA  
                                   l4374 07C6                                     l4392 080C  
                         i2_mssp1_setIRQ 140C                   __size_ofi2_do_I2C_IDLE 000C  
                                   u2100 1246                                     u2008 0842  
                                   u2009 0856                   __size_ofi2_do_I2C_RCEN 000C  
                                   u2050 11A6                                     u2108 1248  
                                   _LATA 000F83                                     u2038 0986  
                                   _LATB 000F84                                     u2039 099A  
                                   _LATC 000F85                                     u2048 0B44  
                                   u2400 080C                                     _LATD 000F86  
                                   u2049 0B58                                     _LATE 000F87  
                                   u2250 03B4                                     u1460 133A  
                                   u2098 0BFE                                     u2290 047C  
                                   u2274 0422                                     u2099 0C12  
                                   u2275 041E                                     u2284 0454  
                                   u2700 036C                                     u2285 0450  
                                   u1590 05BE                                     u2710 0390  
                                   u2641 0112                                     u2650 020C  
                                   u2727 0314                                     u2737 0376  
                                   u2747 07A8                                     _PMD0 000EE1  
                                   u2757 07FA                                     _PMD1 000EE2  
                                   _PMD2 000EE3                                     u2767 11AE  
                                   _PMD3 000EE4                                     _PMD4 000EE5  
                                   _PMD5 000EE6                                     u1988 0C44  
                                   u1989 0C58                     ?_do_I2C_SEND_RESTART 0001  
                                   _WPUA 000F10                                     _WPUB 000F18  
                                   _WPUC 000F20                                     _WPUD 000F25  
                                   _WPUE 000F2D                     ??i2_i2c_restartWrite 000E  
                ??_wr2RegCompleteHandler 0023                            _EUSART1_Write 134C  
                          __CFG_FCMEN$ON 000000                            _EUSART2_Write 133E  
      __size_of_do_I2C_SEND_RESTART_READ 000E                                     abs@a 0016  
                   __end_ofi2_returnStop 1456                ?_do_I2C_SEND_RESTART_READ 0001  
                                   _main 00E0                __size_of_do_I2C_SEND_STOP 000E  
                 __size_of_do_I2C_DO_ACK 000E                            ?_EUSART2_Read 0001  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf1 000FE7                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 0047                    ?_do_I2C_SEND_ADR_READ 0001  
                                   prodh 000FF4                                     prodl 000FF3  
        ??_i2c1_driver_clearBusCollision 0001                 __size_of_i2c_writeNBytes 004A  
                                   start 00DC                            _i2c_setBuffer 110C  
                          __CFG_CSWEN$ON 000000                          __end_of_i2c_ISR 0C18  
                           ___param_bank 000000         __size_of_rdBlkRegCompleteHandler 004A  
                          __CFG_SCANE$ON 000000                 ??_do_I2C_DO_NACK_RESTART 0016  
              __size_of_mssp1_disableIRQ 0006                                    ??_abs 0018  
                __end_of_updateExpanders 0558                             _do_I2C_RESET 11E2  
         __size_of_OSCILLATOR_Initialize 0018              i2c_setAddressNACKCallback@p 001F  
          __end_of_OSCILLATOR_Initialize 1172                          __end_of___aldiv 0624  
               __end_of_i2c1_driver_open 11A0                                    ?_main 0001  
                         _i2c_readNBytes 0EE8                 __size_ofi2_i2c_setBuffer 001A  
               __end_of_i2c1_driver_stop 1436                            __CFG_WDTE$OFF 000000  
             __end_of_i2c1_driver_TXData 13A8                           __CFG_DEBUG$OFF 000000  
                __size_ofi2_do_I2C_RESET 0010                                    i2l281 0072  
                                  i2l435 0D58                                    i2l443 08FC  
                                  i2l436 0D4C                                    i2l444 08C2  
                                  i2l445 08B0                                    i2l454 092A  
                                  i2l462 0ADA                                    i2l471 0B8C  
                                  i2l439 0D52                                    i2l447 08B6  
                                  i2l463 0ACE                                    i2l472 0B78  
                                  i2l448 08BC                                    i2l465 0AD4  
                                  i2l475 0B7E                                    i2l459 0ACA  
                                  i2l483 0D12                                    i2l476 0B86  
                                  i2l496 0A6A                                    _OSCEN 000EDC  
                                  _TRISA 000F88                                    _TRISB 000F89  
                                  _TRISC 000F8A                                    _TRISD 000F8B  
                                  _TRISE 000F8C                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                          __CFG_WRT5$OFF 000000                            __CFG_WRT6$OFF 000000  
                          __CFG_WRT7$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                              i2c_open@ret 001A  
                         __CFG_EBTR4$OFF 000000                           __CFG_EBTR5$OFF 000000  
                         __CFG_EBTR6$OFF 000000                           __CFG_EBTR7$OFF 000000  
                  updateExpanders@spaces 0094                           _i2c_masterRead 1398  
                          __CFG_WRTB$OFF 000000                    __end_ofi2_returnReset 1452  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                 __end_ofi2_mssp1_setIRQ 1412                           __CFG_EBTRB$OFF 000000  
             __end_of_i2c1_driver_isNACK 120E                       __size_ofi2_i2c_ISR 0048  
             ?_do_I2C_SEND_RESTART_WRITE 0001                       __CFG_MCLRE$EXTMCLR 000000  
                  ??_do_I2C_SEND_RESTART 0016                                    main@i 00BB  
                          i2returnStop@p 000C   __end_of_i2c1_driver_setBusCollisionISR 12CE  
__size_of_i2c1_driver_setBusCollisionISR 000E           _i2c1_driver_setBusCollisionISR 12C0  
                         ?_EUSART1_Write 0001                           ?_EUSART2_Write 0001  
                                  pclath 000FFA                                    tablat 000FF5  
                __size_of_mssp1_clearIRQ 0006                                    plusw1 000FE3  
                                  plusw2 000FDB                           ??_EUSART2_Read 0016  
                 ?_do_I2C_SEND_ADR_WRITE 0001                                    status 000FD8  
                                  wtemp6 0048          __size_ofi2_i2c1_driver_sendNACK 0006  
                         ?_i2c_setBuffer 0016                             ?_setCallBack 0016  
        __size_ofi2_i2c1_driver_resetBus 0002                            _fsmStateTable 00C7  
                        __initialization 0DCE                               _i2c_poller 10F2  
                             _i2c_status 0060               __end_of_EUSART1_Initialize 1224  
                           __end_of_main 0392                            i2_do_I2C_IDLE 1366  
                       i2setCallBack@idx 0006                            i2_do_I2C_RCEN 135A  
                       i2_do_I2C_TX$1050 0002                         __end_of_i2c_open 06D4  
                 __end_of_i2c_readNBytes 0F1A              ?_INTERRUPT_InterruptManager 0001  
                  i2i2c_setBuffer@buffer 0001                         i2_mssp1_clearIRQ 1406  
       __end_ofi2_do_I2C_DO_ADDRESS_NACK 0D8A          __end_ofi2_rd1RegCompleteHandler 0FDC  
                          setCallBack@cb 0016                            _do_I2C_DO_ACK 12EA  
                                 ??_main 00A2                        ?_i2c_restartWrite 0021  
          __size_of_i2c1_driver_sendNACK 0006                            __activetblptr 000003  
        __end_ofi2_wr1RegCompleteHandler 100C                             i2c_close@ret 0016  
                 __end_of_i2c_masterRead 13A0                       ??_i2c_restartWrite 0023  
          __size_of_i2c1_driver_resetBus 0002                  ?_do_I2C_DO_ADDRESS_NACK 0001  
                      main@receivedScore 00B1                          ?i2_mssp1_setIRQ 0001  
     __end_ofi2_do_I2C_SEND_RESTART_READ 13E0               i2_do_I2C_SEND_RESTART_READ 13D8  
             __end_of_EUSART2_Initialize 118A                                   _ANSELA 000F11  
                                 _ANSELB 000F19                                   _ANSELC 000F21  
                                 _ANSELD 000F26                                   _ANSELE 000F2E  
               __size_ofi2_do_I2C_DO_ACK 0008                                   _RC1REG 000F99  
                                 _RC2REG 000E99                                   _RC1STA 000F9D  
                                 _RD0PPS 000EFF                                   _RC2STA 000E9D  
                                 _RC3PPS 000EFA                                   _RC4PPS 000EFB  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _RC6PPS 000EFD  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
                                 _RD7PPS 000F06                           __CFG_WDTCCS$SC 000000  
                     __size_of_i2c_close 001E                                   _OSCFRQ 000EDE  
                i2_do_I2C_SEND_ADR_WRITE 1282                   ??_do_I2C_SEND_ADR_READ 0017  
                                 _TX1REG 000F9A                                   _TX2REG 000E9A  
                                 _TX1STA 000F9E                                   _TX2STA 000E9E  
               rdBlkRegCompleteHandler@p 0021                                ??_i2c_ISR 0019  
                         __CFG_PWRTE$OFF 000000                  ??i2_do_I2C_SEND_RESTART 0001  
                         __CFG_XINST$OFF 000000         __size_ofi2_i2c1_driver_getRXData 0004  
                  _i2c1_driver_getRXData 142A                __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                     i2_i2c1_driver_stop 1456                      _do_I2C_RX$intlevel0 093C  
            __end_of_do_I2C_DO_NACK_STOP 12EA      __end_of_i2c_setDataCompleteCallback 10BA  
         ?i2_i2c_setDataCompleteCallback 0007              _i2c_setDataCompleteCallback 109E  
                              ??___aldiv 001E                           ?i2_do_I2C_IDLE 0001  
                        _i2c_masterWrite 1390                           ?i2_do_I2C_RCEN 0001  
  __end_of_i2c1_driver_clearBusCollision 142A   __size_of_i2c1_driver_clearBusCollision 0006  
          _i2c1_driver_clearBusCollision 1424                           __CFG_STVREN$ON 000000  
                      __end_ofi2_i2c_ISR 0D42          __size_of_do_I2C_DO_NACK_RESTART 000E  
                      ??_i2c_writeNBytes 0025                         ?_updateExpanders 0039  
                        ?_i2c_readNBytes 001B                           i2returnReset@p 000C  
                                 clear_0 0DF4                           ?_do_I2C_DO_ACK 0001  
                    ?i2_i2c1_driver_stop 0001           i2i2c_setDataCompleteCallback@p 000A  
                 i2_i2c1_driver_sendNACK 1412                   i2c1_driver_setI2cISR@f 0016  
            __end_of_i2c1_driver_sendACK 13FA                           _PMD_Initialize 10BA  
         __end_of_do_I2C_DO_ADDRESS_NACK 0C66                          ?_i2c_masterRead 0001  
                 i2_i2c1_driver_resetBus 1460              ?_i2c_setAddressNACKCallback 001C  
   __size_ofi2_do_I2C_SEND_RESTART_WRITE 0008              __end_of_i2c1_driver_restart 143A  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                             ?_returnReset 0021  
          _do_I2C_DO_NACK_STOP$intlevel0 12E2                    _i2c1_driver_setI2cISR 12B2  
            __end_of_i2c1_driver_startRX 1432                          ??_EUSART1_Write 0016  
                  __size_ofi2_returnStop 0004                        ??i2_i2c_setBuffer 0005  
                        ??_EUSART2_Write 0016           __size_ofi2_do_I2C_DO_NACK_STOP 0008  
          __size_of_INTERRUPT_Initialize 0004            __end_ofi2_do_I2C_DO_NACK_STOP 13B8  
           __size_of_EUSART2_is_rx_ready 000E                        _SYSTEM_Initialize 1126  
                             __accesstop 0060                     ??i2_i2c1_driver_stop 0001  
                     readIoExpander@addr 0035                  __end_of__initialization 0E06  
                     readIoExpander@bank 0026                       readIoExpander@data 0032  
                        ??_i2c_setBuffer 001A           _do_I2C_SEND_ADR_READ$intlevel0 11D2  
                       _do_I2C_SEND_STOP 12F8                       __size_of_do_I2C_RX 007A  
                     __size_of_do_I2C_TX 0096                       ?_SYSTEM_Initialize 0001  
                          ___rparam_used 000001               __end_of_mssp1_IRQisEnabled 124C  
      _rdBlkRegCompleteHandler$intlevel0 0CB6                  __size_of_readIoExpander 00EE  
                    _i2c_masterOperation 0F1A                 __size_of_do_I2C_TX_EMPTY 005E  
             ?i2_rdBlkRegCompleteHandler 000C                  _rdBlkRegCompleteHandler 0CB0  
         __size_ofi2_i2c1_driver_sendACK 0006               __end_of_mssp1_waitForEvent 11B6  
          __end_ofi2_i2c1_driver_sendACK 141E                              ?_i2c_poller 0001  
                         __pcstackCOMRAM 0001                      _do_I2C_TX$intlevel0 0816  
                           __pidataBANK0 0F4C                      ??_SYSTEM_Initialize 0016  
         __size_ofi2_i2c1_driver_restart 0004            __end_ofi2_i2c1_driver_restart 145E  
                       _mssp1_disableIRQ 13FA           __size_ofi2_i2c1_driver_startRX 0004  
          __end_ofi2_i2c1_driver_startRX 144A                   __end_of_PMD_Initialize 10D6  
                      __end_of_i2c_close 1082                             i2_returnStop 1452  
                   __end_of_EUSART2_Read 1282                           i2_do_I2C_RESET 12A2  
                   ?_i2c_masterOperation 0001                       __size_of_getSpaces 0098  
               i2_do_I2C_DO_ADDRESS_NACK 0D42                             ?i2_do_I2C_RX 0001  
                           ?i2_do_I2C_TX 0001                           main@gamerScore 00B8  
      __size_ofi2_do_I2C_DO_NACK_RESTART 0008                 i2rd2RegCompleteHandler@p 000C  
                         setCallBack@idx 001B                ?i2_do_I2C_DO_NACK_RESTART 0001  
                 _do_I2C_DO_NACK_RESTART 12CE                           _do_I2C_TX$1050 0017  
              __end_of_SYSTEM_Initialize 1140                ??i2_do_I2C_SEND_ADR_WRITE 0002  
             __end_ofi2_do_I2C_SEND_STOP 13C8                           _mssp1_clearIRQ 1400  
                             __pbssBANK0 0060            __size_ofi2_i2c1_driver_TXData 0008  
         __size_of_rd2RegCompleteHandler 0036                                ?_i2c_open 0001  
          __end_of_rd2RegCompleteHandler 0E46           __size_of_wr2RegCompleteHandler 0036  
          __end_of_wr2RegCompleteHandler 0EE8                  __end_of_i2c_masterWrite 1398  
       __size_ofi2_rd1RegCompleteHandler 0030                    _rd1RegCompleteHandler 0E46  
                 ?_i2c1_driver_getRXData 0001                        ??i2_do_I2C_DO_ACK 0001  
               i2wr2RegCompleteHandler@p 000C            __size_ofi2_i2c1_driver_isNACK 0016  
                  _do_I2C_IDLE$intlevel0 1264                        i2_do_I2C_TX_EMPTY 0B72  
       __size_ofi2_wr1RegCompleteHandler 0030                          ??i2_do_I2C_IDLE 0001  
                  _wr1RegCompleteHandler 0E7C                           _SSP1DATPPSbits 000EB8  
           __size_of_i2c_busCollisionISR 0006                          ??i2_do_I2C_RCEN 0001  
        _wr1RegCompleteHandler$intlevel0 0E82          _rd1RegCompleteHandler$intlevel0 0E4C  
                          ??_do_I2C_IDLE 0016                     __size_of_setCallBack 0078  
                          ??_do_I2C_RCEN 0016        __end_ofi2_rdBlkRegCompleteHandler 0DCE  
                  i2c_readNBytes@address 001F                       ?i2_do_I2C_TX_EMPTY 0001  
                        __CFG_PPS1WAY$ON 000000                          ??_do_I2C_DO_ACK 0016  
                 __end_ofi2_do_I2C_RESET 12B2                      i2c_setBuffer@buffer 0016  
                         _SSP1CLKPPSbits 000EB7                          ?_PMD_Initialize 0001  
         ?_i2c1_driver_clearBusCollision 0001                      ??i2_do_I2C_TX_EMPTY 0001  
                  ??_i2c_masterOperation 0019                        ?_i2c1_driver_open 0001  
                      __end_of_do_I2C_RX 09B0                        __end_of_do_I2C_TX 08A6  
               ??i2_do_I2C_SEND_ADR_READ 0002                        ?_i2c1_driver_stop 0001  
                                _SP1BRGH 000F9C                                  _SP1BRGL 000F9B  
                 ?_i2c1_driver_setI2cISR 0016                                  _SP2BRGH 000E9C  
                                _SP2BRGL 000E9B                       ??_i2c1_driver_open 0016  
               ?i2_rd2RegCompleteHandler 000C                       ??_i2c1_driver_stop 0016  
                                _OSCCON1 000ED8                                  _OSCCON3 000EDA  
                          ?_mssp1_setIRQ 0001                   __size_ofi2_setCallBack 0078  
                                _OSCTUNE 000EDD                                  _SSP1ADD 000F93  
               ?i2_wr2RegCompleteHandler 000C                                  _SSP1BUF 000F92  
                 __end_of_mssp1_clearIRQ 1406                                  _SSP1MSK 000F94  
                    __size_of_i2c_poller 001A                  ??_do_I2C_SEND_ADR_WRITE 0017  
    _do_I2C_SEND_RESTART_WRITE$intlevel0 131A              ??_do_I2C_SEND_RESTART_WRITE 0016  
                     _i2c1_driver_TXData 13A0                               ??_i2c_open 0019  
            __size_ofi2_i2c_restartWrite 0004                 __end_ofi2_mssp1_clearIRQ 140C  
                     _i2c1_driver_i2cISR 0041                                  _i2c_ISR 0BCA  
              ??_rdBlkRegCompleteHandler 0023                __end_ofi2_do_I2C_TX_EMPTY 0BCA  
                i2_i2c1_driver_getRXData 1442                                  __Hparam 0000  
                  _returnReset$intlevel0 1382                        __end_of_getSpaces 0810  
                  _do_I2C_RCEN$intlevel0 1252                       _i2c1_driver_isNACK 11F8  
                    ?_i2c1_driver_TXData 0001                                  __Lparam 0000  
       _do_I2C_DO_ADDRESS_NACK$intlevel0 0C1E      __size_of_i2c_setAddressNACKCallback 001C  
                                ___aldiv 0558                        ??_do_I2C_TX_EMPTY 0016  
                    ?_i2c1_driver_isNACK 0001                          ?i2_do_I2C_RESET 0001  
                                __pcinit 0DCE                                  __ramtop 0F00  
                 i2c_writeNBytes@address 0025                       i2c_readNBytes@data 001B  
                                __ptext0 00E0                                  __ptext1 0778  
                                __ptext2 0480                                  __ptext3 0392  
                                __ptext4 0C66                                  __ptext5 1082  
                                __ptext6 1390                                  __ptext7 0EE8  
                                __ptext8 0624                                  __ptext9 12B2  
                    __end_of_do_I2C_IDLE 1270                      __end_of_do_I2C_RCEN 125E  
                       ??i2_mssp1_setIRQ 0001                    _OSCILLATOR_Initialize 115A  
                           __size_of_abs 0028              __end_of_do_I2C_SEND_RESTART 1314  
                         ??_mssp1_setIRQ 0016                         ___aldiv@dividend 0016  
                   ??_i2c1_driver_TXData 0016                       _EUSART1_Initialize 120E  
               ??_PIN_MANAGER_Initialize 0016                   i2c_masterOperation@ret 001A  
                        ?_mssp1_clearIRQ 0001               _do_I2C_SEND_STOP$intlevel0 12FE  
            ?i2_do_I2C_SEND_RESTART_READ 0001                 _do_I2C_SEND_RESTART_READ 1322  
             __size_of_SYSTEM_Initialize 001A                        main@photonAddress 00BA  
                   __size_of_returnReset 000A                     end_of_initialization 0E06  
                   ??_i2c1_driver_isNACK 0016                      ?_EUSART1_Initialize 0001  
              __size_of_i2c_restartWrite 000A             __end_of_i2c1_driver_sendNACK 13F4  
                 ?_rd1RegCompleteHandler 0021                          _i2c_writeNBytes 0C66  
                         _readIoExpander 0392                         ?_i2c_masterWrite 0001  
                 ?_wr1RegCompleteHandler 0021             __end_of_i2c1_driver_resetBus 1460  
                     _EUSART2_Initialize 1172                         ??_i2c_readNBytes 001F  
                          i2_setCallBack 0A28           __size_ofi2_do_I2C_SEND_RESTART 0008  
          __end_ofi2_do_I2C_SEND_RESTART 13D0                         ___aldiv@quotient 0020  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
                  __size_of_EUSART2_Read 0012                   __size_ofi2_returnReset 0004  
           ?i2_do_I2C_SEND_RESTART_WRITE 0001                _do_I2C_SEND_RESTART_WRITE 1314  
                             main@F12062 0092                               main@F12066 008A  
                ?i2_i2c1_driver_sendNACK 0001                     ??_EUSART1_Initialize 0016  
                       ??_i2c_masterRead 001B                    __CFG_WDTCPS$WDTCPS_31 000000  
                    ?_EUSART2_Initialize 0001                      _EUSART2_is_rx_ready 1330  
                        i2_i2c_setBuffer 1140                  ?i2_i2c1_driver_resetBus 0001  
        __end_ofi2_rd2RegCompleteHandler 0FAC                               _returnStop 1386  
        __end_of_rdBlkRegCompleteHandler 0CFA                 __end_of_do_I2C_SEND_STOP 1306  
                             getSpaces@i 009F                                i2_i2c_ISR 0CFA  
        __end_ofi2_wr2RegCompleteHandler 103C          __size_ofi2_do_I2C_SEND_ADR_READ 0010  
   __size_of_i2c_setDataCompleteCallback 001C          ??i2_i2c_setDataCompleteCallback 000C  
                    readIoExpander@index 0027                              returnStop@p 0021  
                    EUSART1_Write@txData 0016                         __CFG_FEXTOSC$OFF 000000  
               __end_of_mssp1_disableIRQ 1400                      readIoExpander@spots 002A  
                   __size_ofi2_do_I2C_RX 0074                     __size_ofi2_do_I2C_TX 0090  
                   ??_EUSART2_Initialize 0016                     ?_EUSART2_is_rx_ready 0001  
           i2c_setDataCompleteCallback@p 001F                   __end_of_readIoExpander 0480  
              ??i2_i2c1_driver_getRXData 0001                  i2_rd1RegCompleteHandler 0FAC  
             __size_ofi2_do_I2C_TX_EMPTY 0058                             _EUSART2_Read 1270  
                i2_wr1RegCompleteHandler 0FDC                               main@player 00C5  
          __size_of_do_I2C_SEND_ADR_READ 0016                           ?i2_setCallBack 0001  
                           ??_i2c_poller 0019              ??i2_rdBlkRegCompleteHandler 000E  
         __end_ofi2_i2c1_driver_sendNACK 1418                              _do_I2C_IDLE 125E  
                            _do_I2C_RCEN 124C             __end_of_INTERRUPT_Initialize 1442  
         __end_ofi2_i2c1_driver_resetBus 1462               ??i2_do_I2C_DO_ADDRESS_NACK 0001  
       __end_ofi2_do_I2C_DO_NACK_RESTART 13B0            ??i2_do_I2C_SEND_RESTART_WRITE 0001  
                     _mssp1_IRQisEnabled 123A                   ?_OSCILLATOR_Initialize 0001  
                             ?i2_i2c_ISR 0001             __size_of_do_I2C_DO_NACK_STOP 000E  
                     _mssp1_waitForEvent 11A0                  ?_do_I2C_DO_NACK_RESTART 0001  
                    start_initialization 0DCE                                _i2c_close 1064  
                    _i2c_busCollisionISR 141E                 __size_of_updateExpanders 00D8  
        __size_of_PIN_MANAGER_Initialize 00A4                      ?_mssp1_IRQisEnabled 0001  
                            __end_of_abs 1064                          i2setCallBack@cb 0001  
                __end_of_i2c_writeNBytes 0CB0                          i2_do_I2C_DO_ACK 13B8  
                          i2_returnReset 144E                      ?_mssp1_waitForEvent 0016  
                           setCallBack@p 0019                       __end_of_i2c_poller 110C  
                  ??_EUSART2_is_rx_ready 0016             __size_of_i2c1_driver_sendACK 0006  
                  __end_of_EUSART1_Write 135A                          i2c_open@address 0019  
                  __end_of_EUSART2_Write 134C                  i2c_setBuffer@bufferSize 0018  
                ??_i2c1_driver_getRXData 0016                          ?_readIoExpander 0026  
                 rd1RegCompleteHandler@p 0021             __size_of_i2c1_driver_restart 0004  
            __size_ofi2_i2c1_driver_stop 0004             __size_of_i2c1_driver_startRX 0004  
                  i2_do_I2C_DO_NACK_STOP 13B0                   i2_do_I2C_SEND_ADR_READ 1292  
                  __end_of_i2c_setBuffer 1126                        __size_of_i2c_open 00B0  
                   ?_i2c_busCollisionISR 0001                         __CFG_LPBOREN$OFF 000000  
                   __end_of_mssp1_setIRQ 13EE                  __end_ofi2_i2c_setBuffer 115A  
                   ??_mssp1_IRQisEnabled 0016                       i2_do_I2C_SEND_STOP 13C0  
                       ??_PMD_Initialize 0016                     ??_mssp1_waitForEvent 0018  
                 wr1RegCompleteHandler@p 0021                    i2_i2c1_driver_sendACK 1418  
                          ?_do_I2C_RESET 0001             __end_ofi2_i2c1_driver_TXData 13E8  
                            __pdataBANK0 00C7                    i2i2c1_driver_TXData@d 0001  
              _do_I2C_TX_EMPTY$intlevel0 0B1A      __size_ofi2_do_I2C_SEND_RESTART_READ 0008  
                  i2_i2c1_driver_restart 145A                              ?_returnStop 0021  
                    ?i2_do_I2C_SEND_STOP 0001                  ??_i2c1_driver_setI2cISR 0019  
                  i2_i2c1_driver_startRX 1446                      i2i2c_restartWrite@p 000C  
         __end_of_do_I2C_DO_NACK_RESTART 12DC                     _i2c1_driver_sendNACK 13EE  
           __end_ofi2_i2c1_driver_isNACK 123A                        readIoExpander@rec 0036  
                            __pbssCOMRAM 0041                               ?_i2c_close 0001  
                   _i2c1_driver_resetBus 145E                i2_rdBlkRegCompleteHandler 0D8A  
                          __pcstackBANK0 0094                           ?i2_returnReset 000C  
                              _do_I2C_RX 0936                                _do_I2C_TX 0810  
                    EUSART2_Write@txData 0016                ??i2_rd1RegCompleteHandler 000E  
         __size_of_do_I2C_SEND_ADR_WRITE 0016    __end_ofi2_i2c_setDataCompleteCallback 10F2  
 __size_ofi2_i2c_setDataCompleteCallback 001C            i2_i2c_setDataCompleteCallback 10D6  
          __end_of_do_I2C_SEND_ADR_WRITE 11CC                ??i2_wr1RegCompleteHandler 000E  
                       _i2c_restartWrite 1372                     ??i2_do_I2C_SEND_STOP 0001  
             _i2c_restartWrite$intlevel0 1378                __size_of_i2c1_driver_open 0016  
                      ?i2_mssp1_clearIRQ 0001                __size_of_i2c1_driver_stop 0004  
                        ??i2_setCallBack 0006                                 ?_i2c_ISR 0001  
        _do_I2C_SEND_ADR_WRITE$intlevel0 11BC                          _do_I2C_TX_EMPTY 0B14  
                          ??_setCallBack 001B         __size_ofi2_rd2RegCompleteHandler 0030  
                  _rd2RegCompleteHandler 0E10                       ??i2_mssp1_clearIRQ 0001  
                  ??_i2c_busCollisionISR 0001         __size_ofi2_wr2RegCompleteHandler 0030  
                 _PIN_MANAGER_Initialize 06D4                    _wr2RegCompleteHandler 0EB2  
                       ??i2_do_I2C_RESET 0001                                __pintcode 0008  
                  __end_ofi2_do_I2C_IDLE 1372                                 ?___aldiv 0016  
                  __end_ofi2_do_I2C_RCEN 1366                           ??_do_I2C_RESET 0016  
                              __ptext100 0FAC                                __ptext101 0FDC  
                              __ptext110 145A                                __ptext102 144A  
                              __ptext111 1418                                __ptext103 144E  
                              __ptext112 141E                                __ptext104 1452  
                              __ptext113 1424                                __ptext105 100C  
                              __ptext114 0000                                __ptext106 10D6  
                              __ptext107 0A28                                __ptext108 1140  
                              __ptext109 1456              __end_of_i2c_masterOperation 0F4C  
                              _getSpaces 0778                 ??_do_I2C_DO_ADDRESS_NACK 0016  
            _i2c1_driver_busCollisionISR 0044                    __end_of_do_I2C_DO_ACK 12F8  
           ??_INTERRUPT_InterruptManager 0004               ??_do_I2C_SEND_RESTART_READ 0016  
                  ?_i2c1_driver_sendNACK 0001                              ??i2_i2c_ISR 0004  
                __end_ofi2_do_I2C_DO_ACK 13C0                         ??_mssp1_clearIRQ 0016  
                               _BAUD1CON 000F9F                                 _BAUD2CON 000E9F  
               i2_do_I2C_DO_NACK_RESTART 13A8                    ?_i2c1_driver_resetBus 0001  
     __size_of_do_I2C_SEND_RESTART_WRITE 000E                 ?i2_do_I2C_SEND_ADR_WRITE 0001  
                             ?_do_I2C_RX 0001                               ?_do_I2C_TX 0001  
                      _i2c1_driver_start 143A                         ?_i2c_writeNBytes 0021  
             __end_ofi2_i2c_restartWrite 144E                  ??_rd1RegCompleteHandler 0023  
                      i2c_readNBytes@len 001D                     _INTERRUPT_Initialize 143E  
                      _i2c_ISR$intlevel0 0BD0                       ?_i2c1_driver_start 0001  
                ??_wr1RegCompleteHandler 0023                   ?i2_do_I2C_DO_NACK_STOP 0001  
                        ___aldiv@divisor 001A                        ??_updateExpanders 003D  
                        ___aldiv@counter 001E                                 _LATAbits 000F83  
                    __size_of_returnStop 000A                                 _PIE3bits 000EC5  
                    __CFG_BORV$VBOR_2P45 000000                      ??_i2c1_driver_start 0016  
                               i2u230_48 0D68                                 i2u230_49 0D7C  
    __size_of_INTERRUPT_InterruptManager 00D4                                 i2u232_48 08D2  
                               i2u232_49 08E6                                 i2u250_48 007C  
                               i2u250_49 0090                                 i2u235_48 0AEA  
                               i2u243_48 0D28                                 i2u235_49 0AFE  
                               i2u243_49 0D3C                                 i2u236_48 0B9C  
                               i2u236_49 0BB0                                 i2u247_48 0062  
                               _PIR3bits 000ECD                         ?i2_i2c_setBuffer 0001  
                 ?i2_i2c1_driver_sendACK 0001                                 _SSP1CON1 000F96  
                               _SSP1CON2 000F97             ?_i2c_setDataCompleteCallback 001C  
                               _SSP1STAT 000F95                               ?_getSpaces 0001  
                    __end_of_setCallBack 0A28                   ?i2_i2c1_driver_restart 0001  
                 ?i2_i2c1_driver_startRX 0001             i2c_setAddressNACKCallback@cb 001C  
                      ?_do_I2C_SEND_STOP 0001                          ??i2_returnReset 000E  
                            ??_i2c_close 0016                __end_of_i2c1_driver_start 143E  
                          ??_returnReset 0023                       ??_do_I2C_SEND_STOP 0016  
            __size_of_i2c1_driver_TXData 0008             ??_i2c_setAddressNACKCallback 0021  
      __end_of_do_I2C_SEND_RESTART_WRITE 1322                  __end_of_do_I2C_TX_EMPTY 0B72  
                              copy_data0 0DE2                    ?_INTERRUPT_Initialize 0001  
               ?_rdBlkRegCompleteHandler 0021                        ?_mssp1_disableIRQ 0001  
           __size_of_do_I2C_SEND_RESTART 000E              __size_of_i2c1_driver_isNACK 0016  
                   i2_i2c1_driver_TXData 13E0                  _do_I2C_DO_ACK$intlevel0 12F0  
                               _i2c_open 0624                    __size_of_mssp1_setIRQ 0006  
                         i2setCallBack@p 0004                       ??_mssp1_disableIRQ 0016  
                 ?_rd2RegCompleteHandler 0021                      _do_I2C_DO_NACK_STOP 12DC  
                       __size_of_i2c_ISR 004E                   ?_wr2RegCompleteHandler 0021  
        _wr2RegCompleteHandler$intlevel0 0EB8          _rd2RegCompleteHandler$intlevel0 0E16  
                               __Hrparam 0000                     i2_i2c1_driver_isNACK 1224  
                               __Lrparam 0000                           getSpaces@space 00A1  
                     __CFG_BOREN$SBORDIS 000000                      i2c_writeNBytes@data 0021  
                           ?_do_I2C_IDLE 0001                             ?_do_I2C_RCEN 0001  
                ??_OSCILLATOR_Initialize 0016                         __size_of___aldiv 00CC  
                    _i2c1_driver_sendACK 13F4                 __size_of_i2c_masterWrite 0008  
                  i2_do_I2C_SEND_RESTART 13C8          __size_of_do_I2C_DO_ADDRESS_NACK 004E  
                    i2c1_driver_TXData@d 0016              __size_of_EUSART1_Initialize 0016  
                 ??_i2c1_driver_sendNACK 0016            ??_i2c_setDataCompleteCallback 0021  
        __end_ofi2_do_I2C_SEND_ADR_WRITE 1292         ??_i2c1_driver_setBusCollisionISR 0019  
        ?_i2c1_driver_setBusCollisionISR 0016       _do_I2C_SEND_RESTART_READ$intlevel0 1328  
                    _i2c1_driver_restart 1436                            ?i2_returnStop 000C  
                   ?_do_I2C_DO_NACK_STOP 0001                      _i2c1_driver_startRX 142E  
           __end_of_do_I2C_SEND_ADR_READ 11E2                   ??_i2c1_driver_resetBus 0016  
                       ?i2_do_I2C_DO_ACK 0001                       getSpaces@spaceLast 009E  
                          ??i2_do_I2C_RX 0001                            ??i2_do_I2C_TX 0002  
                           _mssp1_setIRQ 13E8                              ??_do_I2C_RX 0016  
                       ??_readIoExpander 0028                              ??_do_I2C_TX 0017  
                               __ptext10 12C0                                 __ptext11 118A  
                               __ptext20 0C18                                 __ptext12 1398  
                               __ptext21 12CE                                 __ptext13 0F1A  
                               __ptext30 1322                                 __ptext22 12DC  
                               __ptext14 123A                                 __ptext31 125E  
                               __ptext23 12EA                                 __ptext15 10F2  
                               __ptext40 142E                                 __ptext32 11E2  
                               __ptext24 124C                                 __ptext16 11A0  
                               __ptext41 0CB0                                 __ptext33 0B14  
                               __ptext25 11B6                                 __ptext17 0BCA  
                               __ptext50 09B0                                 __ptext42 0E10  
                               __ptext34 13E8                                 __ptext26 11CC  
                               __ptext18 0936                                 __ptext51 110C  
                               __ptext43 0E46                                 __ptext35 11F8  
                               __ptext27 12F8                                 __ptext19 0810  
                               __ptext60 0558                                 __ptext52 1432  
                               __ptext44 0E7C                                 __ptext36 13A0  
                               __ptext28 1306                                 __ptext61 1126  
                               __ptext53 1436                                 __ptext45 1372  
                               __ptext37 142A                                 __ptext29 1314  
                               __ptext70 1270                                 __ptext62 10BA  
                               __ptext54 13F4                                 __ptext46 137C  
                               __ptext38 13EE                                 __ptext71 134C  
                               __ptext63 06D4                                 __ptext55 143A  
                               __ptext47 1386                                 __ptext39 145E  
                               __ptext80 13B8                                 __ptext64 115A  
                               __ptext56 1064                                 __ptext48 0EB2  
                               __ptext81 135A                                 __ptext73 0CFA  
                               __ptext65 143E                                 __ptext57 13FA  
                               __ptext49 109E                                 __ptext90 0B72  
                               __ptext82 1282                                 __ptext74 1406  
                               __ptext66 1172                                 __ptext58 1400  
                               __ptext91 140C                                 __ptext83 1292  
                               __ptext75 0AA0                                 __ptext67 120E  
                               __ptext59 103C                                 __ptext92 1224  
                               __ptext84 13C0                                 __ptext76 08A6  
                               __ptext68 1330                                 __ptext93 13E0  
                               __ptext85 13C8                                 __ptext77 0D42  
                               __ptext69 133E                                 __ptext94 1442  
                               __ptext86 13D0                                 __ptext78 13A8  
                               __ptext95 1412                                 __ptext87 13D8  
                               __ptext79 13B0                                 __ptext96 1460  
                               __ptext88 1366                                 __ptext97 1446  
                               __ptext89 12A2                                 __ptext98 0D8A  
                               __ptext99 0F7C                             _SSP1CON1bits 000F96  
                           _SSP1CON2bits 000F97                     ?_i2c1_driver_sendACK 0001  
                   __end_of_do_I2C_RESET 11F8                    ?i2_i2c1_driver_TXData 0001  
                ?i2_do_I2C_SEND_ADR_READ 0001                  __size_ofi2_mssp1_setIRQ 0006  
            __size_of_EUSART2_Initialize 0018                     ?_i2c1_driver_restart 0001  
                    __end_of_returnReset 1386                         _i2c1_driver_open 118A  
     __size_ofi2_rdBlkRegCompleteHandler 0044                  i2_rd2RegCompleteHandler 0F7C  
                       _i2c1_driver_stop 1432                            __size_of_main 02B2  
                   ?_i2c1_driver_startRX 0001           __size_of_i2c1_driver_getRXData 0004  
          __end_of_i2c1_driver_getRXData 142E                  i2_wr2RegCompleteHandler 100C  
                   __CFG_WDTCWS$WDTCWS_7 000000                              _setCallBack 09B0  
                  ?i2_i2c1_driver_isNACK 0001                  i2c_masterOperation@read 0019  
                             _RC1STAbits 000F9D                               _RC2STAbits 000E9D  
                               int$flags 0047                              ??_getSpaces 003F  
     __end_of_INTERRUPT_InterruptManager 00DC               _INTERRUPT_InterruptManager 0008  
                           _SSP1STATbits 000F95                           ??i2_returnStop 000E  
                               main@spot 00BD         __end_of_do_I2C_SEND_RESTART_READ 1330  
                           ??_returnStop 0023                 __end_of_i2c_restartWrite 137C  
                  ??_do_I2C_DO_NACK_STOP 0016                  __size_of_i2c_readNBytes 0032  
              mssp1_waitForEvent@timeout 0016           __size_of_i2c1_driver_setI2cISR 000E  
          __end_of_i2c1_driver_setI2cISR 12C0                               _INTCONbits 000FF2  
            __end_of_EUSART2_is_rx_ready 133E               __size_of_i2c1_driver_start 0004  
                     i2c_writeNBytes@len 0023                   ??_INTERRUPT_Initialize 0016  
               ?i2_i2c1_driver_getRXData 0001                  __size_of_i2c_masterRead 0008  
         __end_ofi2_do_I2C_SEND_ADR_READ 12A2                          readIoExpander@i 0037  
                  ??_i2c1_driver_sendACK 0016                         ?_do_I2C_TX_EMPTY 0001  
      __size_ofi2_do_I2C_DO_ADDRESS_NACK 0048               __end_ofi2_i2c1_driver_stop 145A  
              ?i2_do_I2C_DO_ADDRESS_NACK 0001                   _do_I2C_DO_ADDRESS_NACK 0C18  
                               intlevel2 0000                   _do_I2C_RESET$intlevel0 11E8  
                  ??_i2c1_driver_restart 0016                   rd2RegCompleteHandler@p 0021  
                  ??_i2c1_driver_startRX 0016               i2rdBlkRegCompleteHandler@p 000C  
                    __end_ofi2_do_I2C_RX 0B14                      __end_ofi2_do_I2C_TX 0936  
                ?_PIN_MANAGER_Initialize 0001                        i2c_restartWrite@p 0021  
                      __CFG_CLKOUTEN$OFF 000000                       __end_of_returnStop 1390  
            __size_of_mssp1_IRQisEnabled 0012      __end_ofi2_do_I2C_SEND_RESTART_WRITE 13D8  
            i2_do_I2C_SEND_RESTART_WRITE 13D0                   ?i2_do_I2C_SEND_RESTART 0001  
             ??i2_do_I2C_DO_NACK_RESTART 0001                   wr2RegCompleteHandler@p 0021  
            __size_of_mssp1_waitForEvent 0016                i2i2c_setBuffer@bufferSize 0003  
              __size_ofi2_mssp1_clearIRQ 0006                   __size_of_EUSART1_Write 000E  
                 __size_of_EUSART2_Write 000E                               _RX1PPSbits 000EB5  
                             _RX2PPSbits 000E8D                          _updateExpanders 0480  
                      ??_i2c_masterWrite 001B       __end_of_i2c_setAddressNACKCallback 109E  
             _i2c_setAddressNACKCallback 1082                   __size_of_i2c_setBuffer 001A  
                           ___aldiv@sign 001F                              _returnReset 137C  
       _do_I2C_DO_NACK_RESTART$intlevel0 12D4                 i2rd1RegCompleteHandler@p 000C  
                ??i2_do_I2C_DO_NACK_STOP 0001                               _TX1STAbits 000F9E  
                 ??i2_i2c1_driver_TXData 0001                               _TX2STAbits 000E9E  
              ??i2_rd2RegCompleteHandler 000E             ??i2_do_I2C_SEND_RESTART_READ 0001  
         __end_of_PIN_MANAGER_Initialize 0778              __end_of_i2c_busCollisionISR 1424  
         __size_of_rd1RegCompleteHandler 0036                ??i2_wr2RegCompleteHandler 000E  
          __end_of_rd1RegCompleteHandler 0E7C              __size_ofi2_do_I2C_SEND_STOP 0008  
               ??i2_i2c1_driver_sendNACK 0001           __size_of_wr1RegCompleteHandler 0036  
                 ??i2_i2c1_driver_isNACK 0001            __end_of_wr1RegCompleteHandler 0EB2  
       __size_ofi2_do_I2C_SEND_ADR_WRITE 0010                    _do_I2C_SEND_ADR_WRITE 11B6  
                ??i2_i2c1_driver_sendACK 0001                     _do_I2C_SEND_ADR_READ 11CC  
                  __end_ofi2_setCallBack 0AA0                 ??i2_i2c1_driver_resetBus 0001  
               i2wr1RegCompleteHandler@p 000C                  ??i2_i2c1_driver_restart 0001  
                     i2_i2c_restartWrite 144A  
