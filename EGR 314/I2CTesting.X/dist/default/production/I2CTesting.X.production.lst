

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 19 16:41:18 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66  0000                     
    67                           ; Version 1.45
    68                           ; Generated 16/11/2017 GMT
    69                           ; 
    70                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F47K40 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102                           	psect	idataBANK0
   103  00137E                     __pidataBANK0:
   104                           	opt stack 0
   105                           
   106                           ;initializer for _fsmStateTable
   107  00137E  44                 	db	low _do_I2C_IDLE
   108  00137F  15                 	db	high _do_I2C_IDLE
   109  001380  00                 	db	low (_do_I2C_IDLE shr (0+16))
   110  001381  1E                 	db	low _do_I2C_SEND_ADR_READ
   111  001382  15                 	db	high _do_I2C_SEND_ADR_READ
   112  001383  00                 	db	low (_do_I2C_SEND_ADR_READ shr (0+16))
   113  001384  10                 	db	low _do_I2C_SEND_ADR_WRITE
   114  001385  15                 	db	high _do_I2C_SEND_ADR_WRITE
   115  001386  00                 	db	low (_do_I2C_SEND_ADR_WRITE shr (0+16))
   116  001387  3C                 	db	low _do_I2C_TX
   117  001388  10                 	db	high _do_I2C_TX
   118  001389  00                 	db	low (_do_I2C_TX shr (0+16))
   119  00138A  B6                 	db	low _do_I2C_RX
   120  00138B  11                 	db	high _do_I2C_RX
   121  00138C  00                 	db	low (_do_I2C_RX shr (0+16))
   122  00138D  3A                 	db	low _do_I2C_RCEN
   123  00138E  15                 	db	high _do_I2C_RCEN
   124  00138F  00                 	db	low (_do_I2C_RCEN shr (0+16))
   125  001390  28                 	db	low _do_I2C_TX_EMPTY
   126  001391  12                 	db	high _do_I2C_TX_EMPTY
   127  001392  00                 	db	low (_do_I2C_TX_EMPTY shr (0+16))
   128  001393  7E                 	db	low _do_I2C_SEND_RESTART_READ
   129  001394  15                 	db	high _do_I2C_SEND_RESTART_READ
   130  001395  00                 	db	low (_do_I2C_SEND_RESTART_READ shr (0+16))
   131  001396  76                 	db	low _do_I2C_SEND_RESTART_WRITE
   132  001397  15                 	db	high _do_I2C_SEND_RESTART_WRITE
   133  001398  00                 	db	low (_do_I2C_SEND_RESTART_WRITE shr (0+16))
   134  001399  6E                 	db	low _do_I2C_SEND_RESTART
   135  00139A  15                 	db	high _do_I2C_SEND_RESTART
   136  00139B  00                 	db	low (_do_I2C_SEND_RESTART shr (0+16))
   137  00139C  66                 	db	low _do_I2C_SEND_STOP
   138  00139D  15                 	db	high _do_I2C_SEND_STOP
   139  00139E  00                 	db	low (_do_I2C_SEND_STOP shr (0+16))
   140  00139F  5E                 	db	low _do_I2C_DO_ACK
   141  0013A0  15                 	db	high _do_I2C_DO_ACK
   142  0013A1  00                 	db	low (_do_I2C_DO_ACK shr (0+16))
   143  0013A2  56                 	db	low _do_I2C_DO_NACK_STOP
   144  0013A3  15                 	db	high _do_I2C_DO_NACK_STOP
   145  0013A4  00                 	db	low (_do_I2C_DO_NACK_STOP shr (0+16))
   146  0013A5  4E                 	db	low _do_I2C_DO_NACK_RESTART
   147  0013A6  15                 	db	high _do_I2C_DO_NACK_RESTART
   148  0013A7  00                 	db	low (_do_I2C_DO_NACK_RESTART shr (0+16))
   149  0013A8  2C                 	db	low _do_I2C_RESET
   150  0013A9  15                 	db	high _do_I2C_RESET
   151  0013AA  00                 	db	low (_do_I2C_RESET shr (0+16))
   152  0013AB  7E                 	db	low _do_I2C_DO_ADDRESS_NACK
   153  0013AC  12                 	db	high _do_I2C_DO_ADDRESS_NACK
   154  0013AD  00                 	db	low (_do_I2C_DO_ADDRESS_NACK shr (0+16))
   155                           
   156                           	psect	smallconst
   157  000F00                     __psmallconst:
   158                           	opt stack 0
   159  000F00  00                 	db	0
   160  000F01                     _spi2_configuration:
   161                           	opt stack 0
   162  000F01  10                 	db	16
   163  000F02  00                 	db	0
   164  000F03  04                 	db	4
   165  000F04                     __end_of_spi2_configuration:
   166                           	opt stack 0
   167  0000                     _SSP2BUF	set	3730
   168  0000                     _SSP2ADD	set	3731
   169  0000                     _SSP2CON2	set	3735
   170  0000                     _SSP2CON1	set	3734
   171  0000                     _SSP2STAT	set	3733
   172  0000                     _SSP2CON1bits	set	3734
   173  0000                     _SSP1DATPPSbits	set	3768
   174  0000                     _SSP1CLKPPSbits	set	3767
   175  0000                     _RC4PPS	set	3835
   176  0000                     _SSP2DATPPSbits	set	3728
   177  0000                     _SSP2CLKPPSbits	set	3727
   178  0000                     _RC3PPS	set	3834
   179  0000                     _RB1PPS	set	3824
   180  0000                     _PIR3bits	set	3789
   181  0000                     _PIE3bits	set	3781
   182  0000                     _PMD5	set	3814
   183  0000                     _PMD4	set	3813
   184  0000                     _PMD3	set	3812
   185  0000                     _PMD2	set	3811
   186  0000                     _PMD1	set	3810
   187  0000                     _PMD0	set	3809
   188  0000                     _OSCTUNE	set	3805
   189  0000                     _OSCFRQ	set	3806
   190  0000                     _OSCEN	set	3804
   191  0000                     _OSCCON3	set	3802
   192  0000                     _OSCCON1	set	3800
   193  0000                     _RD3PPS	set	3842
   194  0000                     _ODCOND	set	3876
   195  0000                     _ODCONC	set	3871
   196  0000                     _ODCONB	set	3863
   197  0000                     _ODCONA	set	3855
   198  0000                     _ODCONE	set	3884
   199  0000                     _WPUC	set	3872
   200  0000                     _WPUA	set	3856
   201  0000                     _WPUB	set	3864
   202  0000                     _WPUE	set	3885
   203  0000                     _WPUD	set	3877
   204  0000                     _ANSELA	set	3857
   205  0000                     _ANSELE	set	3886
   206  0000                     _ANSELD	set	3878
   207  0000                     _ANSELB	set	3865
   208  0000                     _ANSELC	set	3873
   209  0000                     _LATAbits	set	3971
   210  0000                     _LATCbits	set	3973
   211  0000                     _TRISBbits	set	3977
   212  0000                     _INTCONbits	set	4082
   213  0000                     _TRISD	set	3979
   214  0000                     _TRISC	set	3978
   215  0000                     _TRISB	set	3977
   216  0000                     _TRISA	set	3976
   217  0000                     _TRISE	set	3980
   218  0000                     _LATC	set	3973
   219  0000                     _LATB	set	3972
   220  0000                     _LATA	set	3971
   221  0000                     _LATD	set	3974
   222  0000                     _LATE	set	3975
   223  0000                     _SSP1STATbits	set	3989
   224  0000                     _SSP1MSK	set	3988
   225  0000                     _SSP1BUF	set	3986
   226  0000                     _SSP1CON2bits	set	3991
   227  0000                     _SSP1ADD	set	3987
   228  0000                     _SSP1CON2	set	3991
   229  0000                     _SSP1CON1	set	3990
   230  0000                     _SSP1STAT	set	3989
   231  0000                     _SSP1CON1bits	set	3990
   232                           
   233                           ; #config settings
   234  000F04  00                 	db	0	; dummy byte at the end
   235  0000                     
   236                           	psect	cinit
   237  001348                     __pcinit:
   238                           	opt stack 0
   239  001348                     start_initialization:
   240                           	opt stack 0
   241  001348                     __initialization:
   242                           	opt stack 0
   243                           
   244                           ; Initialize objects allocated to BANK0 (48 bytes)
   245                           ; load TBLPTR registers with __pidataBANK0
   246  001348  0E7E               	movlw	low __pidataBANK0
   247  00134A  6EF6               	movwf	tblptrl,c
   248  00134C  0E13               	movlw	high __pidataBANK0
   249  00134E  6EF7               	movwf	tblptrh,c
   250  001350  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   251  001352  6EF8               	movwf	tblptru,c
   252  001354  EE00  F060         	lfsr	0,__pdataBANK0
   253  001358  EE10 F030          	lfsr	1,48
   254  00135C                     copy_data0:
   255  00135C  0009               	tblrd		*+
   256  00135E  CFF5 FFEE          	movff	tablat,postinc0
   257  001362  50E5               	movf	postdec1,w,c
   258  001364  50E1               	movf	fsr1l,w,c
   259  001366  E1FA               	bnz	copy_data0
   260                           
   261                           ; Clear objects allocated to COMRAM (48 bytes)
   262  001368  EE00  F001         	lfsr	0,__pbssCOMRAM
   263  00136C  0E30               	movlw	48
   264  00136E                     clear_0:
   265  00136E  6AEE               	clrf	postinc0,c
   266  001370  06E8               	decf	wreg,f,c
   267  001372  E1FD               	bnz	clear_0
   268  001374                     end_of_initialization:
   269                           	opt stack 0
   270  001374                     __end_of__initialization:
   271                           	opt stack 0
   272  001374  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273  001376  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274  001378  0100               	movlb	0
   275  00137A  EFD5  F007         	goto	_main	;jump to C main() function
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           postdec1	equ	0xFE5
   283                           fsr1l	equ	0xFE1
   284                           
   285                           	psect	bssCOMRAM
   286  000001                     __pbssCOMRAM:
   287                           	opt stack 0
   288  000001                     _i2c_status:
   289                           	opt stack 0
   290  000001                     	ds	42
   291  00002B                     _i2c1_driver_i2cISR:
   292                           	opt stack 0
   293  00002B                     	ds	3
   294  00002E                     _i2c1_driver_busCollisionISR:
   295                           	opt stack 0
   296  00002E                     	ds	3
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           tblptrl	equ	0xFF6
   300                           tablat	equ	0xFF5
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           postdec1	equ	0xFE5
   304                           fsr1l	equ	0xFE1
   305                           
   306                           	psect	dataBANK0
   307  000060                     __pdataBANK0:
   308                           	opt stack 0
   309  000060                     _fsmStateTable:
   310                           	opt stack 0
   311  000060                     	ds	48
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           
   321                           	psect	cstackBANK0
   322  000090                     __pcstackBANK0:
   323                           	opt stack 0
   324  000090                     main@addr:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x0
   328  000090                     	ds	1
   329  000091                     main@gamerScore:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x1
   333  000091                     	ds	1
   334  000092                     main@photonAddress:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x2
   338  000092                     	ds	1
   339  000093                     main@res:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x3
   343  000093                     	ds	1
   344  000094                     main@i:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x4
   348  000094                     	ds	2
   349  000096                     main@i_1438:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x6
   353  000096                     	ds	2
   354                           tblptru	equ	0xFF8
   355                           tblptrh	equ	0xFF7
   356                           tblptrl	equ	0xFF6
   357                           tablat	equ	0xFF5
   358                           postinc0	equ	0xFEE
   359                           wreg	equ	0xFE8
   360                           postdec1	equ	0xFE5
   361                           fsr1l	equ	0xFE1
   362                           
   363                           	psect	cstackCOMRAM
   364  000031                     __pcstackCOMRAM:
   365                           	opt stack 0
   366  000031                     ??_i2c1_driver_isNACK:
   367  000031                     i2c1_driver_TXData@d:
   368                           	opt stack 0
   369  000031                     i2c_setBuffer@buffer:
   370                           	opt stack 0
   371  000031                     setCallBack@cb:
   372                           	opt stack 0
   373                           
   374                           ; 3 bytes @ 0x0
   375  000031                     	ds	1
   376  000032                     _do_I2C_TX$1041:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x1
   380  000032                     	ds	1
   381  000033                     i2c_setBuffer@bufferSize:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x2
   385  000033                     	ds	1
   386  000034                     ??_INTERRUPT_InterruptManager:
   387  000034                     setCallBack@p:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x3
   391  000034                     	ds	1
   392  000035                     
   393                           ; 1 bytes @ 0x4
   394  000035                     	ds	1
   395  000036                     setCallBack@idx:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x5
   399  000036                     	ds	1
   400  000037                     i2c_setDataCompleteCallback@cb:
   401                           	opt stack 0
   402                           
   403                           ; 3 bytes @ 0x6
   404  000037                     	ds	3
   405  00003A                     i2c_setDataCompleteCallback@p:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x9
   409  00003A                     	ds	2
   410  00003C                     wr1RegCompleteHandler@p:
   411                           	opt stack 0
   412  00003C                     rd1RegCompleteHandler@p:
   413                           	opt stack 0
   414  00003C                     rd2RegCompleteHandler@p:
   415                           	opt stack 0
   416  00003C                     wr2RegCompleteHandler@p:
   417                           	opt stack 0
   418  00003C                     rdBlkRegCompleteHandler@p:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0xB
   422  00003C                     	ds	2
   423  00003E                     
   424                           ; 1 bytes @ 0xD
   425  00003E                     	ds	8
   426  000046                     spi2_master_open@spiUniqueConfiguration:
   427                           	opt stack 0
   428  000046                     spi2_exchangeByte@b:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x15
   432  000046                     	ds	1
   433  000047                     ??_main:
   434                           
   435                           ; 1 bytes @ 0x16
   436  000047                     	ds	1
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 48 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  i               2    6[BANK0 ] int 
   456 ;;  i               2    4[BANK0 ] int 
   457 ;;  data            2    0        unsigned char [2]
   458 ;;  res             1    3[BANK0 ] unsigned char 
   459 ;;  photonAddres    1    2[BANK0 ] unsigned char 
   460 ;;  gamerScore      1    1[BANK0 ] unsigned char 
   461 ;;  addr            1    0[BANK0 ] unsigned char 
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   472 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   473 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   474 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   475 ;;Total ram usage:        9 bytes
   476 ;; Hardware stack levels required when called:    8
   477 ;; This function calls:
   478 ;;		_SYSTEM_Initialize
   479 ;;		_spi2_exchangeByte
   480 ;;		_spi2_master_open
   481 ;; This function is called by:
   482 ;;		Startup code after reset
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text0
   487  000FAA                     __ptext0:
   488                           	opt stack 0
   489  000FAA                     _main:
   490                           	opt stack 23
   491                           
   492                           ;main.c: 51: SYSTEM_Initialize();
   493                           
   494                           ;incstack = 0
   495  000FAA  EC7F  F00A         	call	_SYSTEM_Initialize	;wreg free
   496                           
   497                           ;main.c: 58: (INTCONbits.GIE = 1);
   498  000FAE  8EF2               	bsf	intcon,7,c	;volatile
   499                           
   500                           ;main.c: 64: (INTCONbits.PEIE = 1);
   501  000FB0  8CF2               	bsf	intcon,6,c	;volatile
   502                           
   503                           ;main.c: 70: uint8_t data[2];
   504                           ;main.c: 71: uint8_t addr = 0x22;
   505  000FB2  0E22               	movlw	34
   506  000FB4  0100               	movlb	0	; () banked
   507  000FB6  6F90               	movwf	main@addr& (0+255),b
   508                           
   509                           ; BSR set to: 0
   510                           ;main.c: 72: uint8_t gamerScore = 0x17;
   511  000FB8  0E17               	movlw	23
   512  000FBA  6F91               	movwf	main@gamerScore& (0+255),b
   513                           
   514                           ; BSR set to: 0
   515                           ;main.c: 73: uint8_t photonAddress = 0x30;
   516  000FBC  0E30               	movlw	48
   517  000FBE  6F92               	movwf	main@photonAddress& (0+255),b
   518                           
   519                           ; BSR set to: 0
   520                           ;main.c: 82: spi2_master_open(CUSTOM1);
   521  000FC0  0E00               	movlw	0
   522  000FC2  ECA0  F008         	call	_spi2_master_open
   523                           
   524                           ;main.c: 99: do { LATCbits.LATC5 = 0; } while(0);
   525  000FC6  9A85               	bcf	3973,5,c	;volatile
   526                           
   527                           ;main.c: 100: for(int i=0; i<80; i++)
   528  000FC8  0E00               	movlw	0
   529  000FCA  0100               	movlb	0	; () banked
   530  000FCC  6F95               	movwf	(main@i+1)& (0+255),b
   531  000FCE  0E00               	movlw	0
   532  000FD0  6F94               	movwf	main@i& (0+255),b
   533  000FD2                     l2671:
   534                           
   535                           ; BSR set to: 0
   536  000FD2  BF95               	btfsc	(main@i+1)& (0+255),7,b
   537  000FD4  D006               	goto	l687
   538  000FD6  5195               	movf	(main@i+1)& (0+255),w,b
   539  000FD8  E110               	bnz	l689
   540  000FDA  0E50               	movlw	80
   541  000FDC  5D94               	subwf	main@i& (0+255),w,b
   542  000FDE  B0D8               	btfsc	status,0,c
   543  000FE0  D00C               	goto	u1070
   544  000FE2                     l687:
   545                           
   546                           ; BSR set to: 0
   547                           ;main.c: 101: _delay((unsigned long)((50)*(2000000/4000.0)));
   548                           
   549                           ; BSR set to: 0
   550  000FE2  0E21               	movlw	33
   551  000FE4  6E47               	movwf	??_main& (0+255),c
   552  000FE6  0E76               	movlw	118
   553  000FE8                     u1117:
   554  000FE8  2EE8               	decfsz	wreg,f,c
   555  000FEA  D7FE               	bra	u1117
   556  000FEC  2E47               	decfsz	??_main& (0+255),f,c
   557  000FEE  D7FC               	bra	u1117
   558  000FF0  D000               	nop2	
   559  000FF2  0100               	movlb	0	; () banked
   560  000FF4  4B94               	infsnz	main@i& (0+255),f,b
   561  000FF6  2B95               	incf	(main@i+1)& (0+255),f,b
   562  000FF8  D7EC               	goto	l2671
   563  000FFA                     u1070:
   564  000FFA                     l689:
   565                           
   566                           ; BSR set to: 0
   567  000FFA  8A85               	bsf	3973,5,c	;volatile
   568                           
   569                           ; BSR set to: 0
   570                           ;main.c: 105: uint8_t res = spi2_exchangeByte(1);
   571                           
   572                           ; BSR set to: 0
   573  000FFC  0E01               	movlw	1
   574  000FFE  EC76  F00A         	call	_spi2_exchangeByte
   575  001002  0100               	movlb	0	; () banked
   576  001004  6F93               	movwf	main@res& (0+255),b
   577  001006                     l2681:
   578                           
   579                           ; BSR set to: 0
   580                           ;main.c: 108: {
   581                           ;main.c: 125: if( res == 1 ){
   582  001006  0593               	decf	main@res& (0+255),w,b
   583  001008  B4D8               	btfsc	status,2,c
   584                           
   585                           ; BSR set to: 0
   586                           
   587                           ;main.c: 126: do { LATAbits.LATA2 = 0; } while(0);
   588  00100A  9483               	bcf	3971,2,c	;volatile
   589                           
   590                           ; BSR set to: 0
   591                           ;main.c: 127: }
   592                           ;main.c: 128: for(int i=0; i<20; i++)
   593                           
   594                           ; BSR set to: 0
   595                           
   596                           ; BSR set to: 0
   597  00100C  0E00               	movlw	0
   598  00100E  6F97               	movwf	(main@i_1438+1)& (0+255),b
   599  001010  0E00               	movlw	0
   600  001012  6F96               	movwf	main@i_1438& (0+255),b
   601  001014                     l2685:
   602                           
   603                           ; BSR set to: 0
   604  001014  BF97               	btfsc	(main@i_1438+1)& (0+255),7,b
   605  001016  D006               	goto	l695
   606  001018  5197               	movf	(main@i_1438+1)& (0+255),w,b
   607  00101A  E1F5               	bnz	l2681
   608  00101C  0E14               	movlw	20
   609  00101E  5D96               	subwf	main@i_1438& (0+255),w,b
   610  001020  B0D8               	btfsc	status,0,c
   611  001022  D7F1               	goto	l691
   612  001024                     l695:
   613                           
   614                           ; BSR set to: 0
   615                           ;main.c: 129: _delay((unsigned long)((50)*(2000000/4000.0)));
   616                           
   617                           ; BSR set to: 0
   618  001024  0E21               	movlw	33
   619  001026  6E47               	movwf	??_main& (0+255),c
   620  001028  0E76               	movlw	118
   621  00102A                     u1127:
   622  00102A  2EE8               	decfsz	wreg,f,c
   623  00102C  D7FE               	bra	u1127
   624  00102E  2E47               	decfsz	??_main& (0+255),f,c
   625  001030  D7FC               	bra	u1127
   626  001032  D000               	nop2	
   627  001034  0100               	movlb	0	; () banked
   628  001036  4B96               	infsnz	main@i_1438& (0+255),f,b
   629  001038  2B97               	incf	(main@i_1438+1)& (0+255),f,b
   630  00103A  D7EC               	goto	l2685
   631  00103C                     __end_of_main:
   632                           	opt stack 0
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           intcon	equ	0xFF2
   638                           postinc0	equ	0xFEE
   639                           wreg	equ	0xFE8
   640                           postdec1	equ	0xFE5
   641                           fsr1l	equ	0xFE1
   642                           status	equ	0xFD8
   643                           
   644 ;; *************** function _spi2_master_open *****************
   645 ;; Defined at:
   646 ;;		line 44 in file "mcc_generated_files/spi2_driver.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  spiUniqueCon    1    wreg     enum E11675
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  spiUniqueCon    1   21[COMRAM] enum E11675
   651 ;; Return value:  Size  Location     Type
   652 ;;		None               void
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   664 ;;Total ram usage:        1 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    6
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text1
   675  001140                     __ptext1:
   676                           	opt stack 0
   677  001140                     _spi2_master_open:
   678                           	opt stack 24
   679                           
   680                           ; BSR set to: 0
   681                           ;incstack = 0
   682                           ;spi2_master_open@spiUniqueConfiguration stored from wreg
   683  001140  6E46               	movwf	spi2_master_open@spiUniqueConfiguration,c
   684                           
   685                           ;spi2_driver.c: 46: if(!SSP2CON1bits.SSPEN)
   686  001142  010E               	movlb	14	; () banked
   687  001144  BB96               	btfsc	150,5,b	;volatile
   688  001146  0012               	return	
   689                           
   690                           ; BSR set to: 14
   691                           ;spi2_driver.c: 47: {
   692                           ;spi2_driver.c: 48: SSP2STAT = spi2_configuration[spiUniqueConfiguration].stat;
   693  001148  5046               	movf	spi2_master_open@spiUniqueConfiguration,w,c
   694  00114A  0D03               	mullw	3
   695  00114C  0E01               	movlw	1
   696  00114E  26F3               	addwf	prodl,f,c
   697  001150  0E00               	movlw	0
   698  001152  22F4               	addwfc	prodh,f,c
   699  001154  0E01               	movlw	low _spi2_configuration
   700  001156  24F3               	addwf	prodl,w,c
   701  001158  6EF6               	movwf	tblptrl,c
   702  00115A  0E0F               	movlw	high _spi2_configuration
   703  00115C  20F4               	addwfc	prodh,w,c
   704  00115E  6EF7               	movwf	tblptrh,c
   705  001160                     	if	1	;There are 3 active tblptr bytes
   706  001160  6AF8               	clrf	tblptru,c
   707  001162  0E00               	movlw	low (__mediumconst shr (0+16))
   708  001164  22F8               	addwfc	tblptru,f,c
   709  001166                     	endif
   710  001166  0008               	tblrd		*
   711  001168  CFF5 FE95          	movff	tablat,3733	;volatile
   712                           
   713                           ;spi2_driver.c: 49: SSP2CON1 |= spi2_configuration[spiUniqueConfiguration].con1 | 0x2A;
   714  00116C  5046               	movf	spi2_master_open@spiUniqueConfiguration,w,c
   715  00116E  0D03               	mullw	3
   716  001170  0E01               	movlw	low _spi2_configuration
   717  001172  24F3               	addwf	prodl,w,c
   718  001174  6EF6               	movwf	tblptrl,c
   719  001176  0E0F               	movlw	high _spi2_configuration
   720  001178  20F4               	addwfc	prodh,w,c
   721  00117A  6EF7               	movwf	tblptrh,c
   722  00117C                     	if	1	;There are 3 active tblptr bytes
   723  00117C  6AF8               	clrf	tblptru,c
   724  00117E  0E00               	movlw	low (__mediumconst shr (0+16))
   725  001180  22F8               	addwfc	tblptru,f,c
   726  001182                     	endif
   727  001182  0008               	tblrd		*
   728  001184  50F5               	movf	tablat,w,c
   729  001186  092A               	iorlw	42
   730  001188  1396               	iorwf	150,f,b	;volatile
   731                           
   732                           ; BSR set to: 14
   733                           ;spi2_driver.c: 50: SSP2CON2 = 0x00;
   734  00118A  0E00               	movlw	0
   735  00118C  6F97               	movwf	151,b	;volatile
   736                           
   737                           ; BSR set to: 14
   738                           ;spi2_driver.c: 51: SSP2ADD = spi2_configuration[spiUniqueConfiguration].add | 0;
   739  00118E  5046               	movf	spi2_master_open@spiUniqueConfiguration,w,c
   740  001190  0D03               	mullw	3
   741  001192  0E02               	movlw	2
   742  001194  26F3               	addwf	prodl,f,c
   743  001196  0E00               	movlw	0
   744  001198  22F4               	addwfc	prodh,f,c
   745  00119A  0E01               	movlw	low _spi2_configuration
   746  00119C  24F3               	addwf	prodl,w,c
   747  00119E  6EF6               	movwf	tblptrl,c
   748  0011A0  0E0F               	movlw	high _spi2_configuration
   749  0011A2  20F4               	addwfc	prodh,w,c
   750  0011A4  6EF7               	movwf	tblptrh,c
   751  0011A6                     	if	1	;There are 3 active tblptr bytes
   752  0011A6  6AF8               	clrf	tblptru,c
   753  0011A8  0E00               	movlw	low (__mediumconst shr (0+16))
   754  0011AA  22F8               	addwfc	tblptru,f,c
   755  0011AC                     	endif
   756  0011AC  0008               	tblrd		*
   757  0011AE  CFF5 FE93          	movff	tablat,3731	;volatile
   758                           
   759                           ; BSR set to: 14
   760                           
   761                           ; BSR set to: 14
   762                           
   763                           ;spi2_driver.c: 53: do { TRISBbits.TRISB1 = 0; } while(0);
   764  0011B2  9289               	bcf	3977,1,c	;volatile
   765                           
   766                           ; BSR set to: 14
   767                           ;spi2_driver.c: 54: return 1;
   768                           ;	Return value of _spi2_master_open is never used
   769                           
   770                           ; BSR set to: 14
   771  0011B4  0012               	return	
   772  0011B6                     __end_of_spi2_master_open:
   773                           	opt stack 0
   774                           tblptru	equ	0xFF8
   775                           tblptrh	equ	0xFF7
   776                           tblptrl	equ	0xFF6
   777                           tablat	equ	0xFF5
   778                           prodh	equ	0xFF4
   779                           prodl	equ	0xFF3
   780                           intcon	equ	0xFF2
   781                           postinc0	equ	0xFEE
   782                           wreg	equ	0xFE8
   783                           postdec1	equ	0xFE5
   784                           fsr1l	equ	0xFE1
   785                           status	equ	0xFD8
   786                           
   787 ;; *************** function _spi2_exchangeByte *****************
   788 ;; Defined at:
   789 ;;		line 76 in file "mcc_generated_files/spi2_driver.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  b               1    wreg     unsigned char 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  b               1   21[COMRAM] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      unsigned char 
   796 ;; Registers used:
   797 ;;		wreg, status,2
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   807 ;;Total ram usage:        1 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    6
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;;		_spi2_exchangeBlock
   815 ;;		_spi2_writeBlock
   816 ;;		_spi2_readBlock
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text2
   821  0014EC                     __ptext2:
   822                           	opt stack 0
   823  0014EC                     _spi2_exchangeByte:
   824                           	opt stack 24
   825                           
   826                           ; BSR set to: 14
   827                           ;incstack = 0
   828                           ;spi2_exchangeByte@b stored from wreg
   829  0014EC  6E46               	movwf	spi2_exchangeByte@b,c
   830                           
   831                           ;spi2_driver.c: 78: SSP2BUF = b;
   832  0014EE  C046  FE92         	movff	spi2_exchangeByte@b,3730	;volatile
   833  0014F2  010E               	movlb	14	; () banked
   834  0014F4  A5CD               	btfss	205,2,b	;volatile
   835  0014F6  D7FD               	goto	l642
   836                           
   837                           ; BSR set to: 14
   838                           ;spi2_driver.c: 80: PIR3bits.SSP2IF = 0;
   839  0014F8  95CD               	bcf	205,2,b	;volatile
   840                           
   841                           ;spi2_driver.c: 81: return SSP2BUF;
   842  0014FA  5192               	movf	146,w,b	;volatile
   843                           
   844                           ; BSR set to: 14
   845  0014FC  0012               	return		;funcret
   846  0014FE                     __end_of_spi2_exchangeByte:
   847                           	opt stack 0
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           prodh	equ	0xFF4
   853                           prodl	equ	0xFF3
   854                           intcon	equ	0xFF2
   855                           postinc0	equ	0xFEE
   856                           wreg	equ	0xFE8
   857                           postdec1	equ	0xFE5
   858                           fsr1l	equ	0xFE1
   859                           status	equ	0xFD8
   860                           
   861 ;; *************** function _SYSTEM_Initialize *****************
   862 ;; Defined at:
   863 ;;		line 116 in file "mcc_generated_files/mcc.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    7
   884 ;; This function calls:
   885 ;;		_INTERRUPT_Initialize
   886 ;;		_OSCILLATOR_Initialize
   887 ;;		_PIN_MANAGER_Initialize
   888 ;;		_PMD_Initialize
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text3
   895  0014FE                     __ptext3:
   896                           	opt stack 0
   897  0014FE                     _SYSTEM_Initialize:
   898                           	opt stack 23
   899                           
   900                           ;mcc.c: 118: INTERRUPT_Initialize();
   901                           
   902                           ; BSR set to: 14
   903                           ;incstack = 0
   904  0014FE  ECD9  F00A         	call	_INTERRUPT_Initialize	;wreg free
   905                           
   906                           ;mcc.c: 119: PMD_Initialize();
   907  001502  EC37  F00A         	call	_PMD_Initialize	;wreg free
   908                           
   909                           ;mcc.c: 120: PIN_MANAGER_Initialize();
   910  001506  EC83  F007         	call	_PIN_MANAGER_Initialize	;wreg free
   911                           
   912                           ;mcc.c: 121: OSCILLATOR_Initialize();
   913  00150A  EC53  F00A         	call	_OSCILLATOR_Initialize	;wreg free
   914  00150E  0012               	return		;funcret
   915  001510                     __end_of_SYSTEM_Initialize:
   916                           	opt stack 0
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           prodh	equ	0xFF4
   922                           prodl	equ	0xFF3
   923                           intcon	equ	0xFF2
   924                           postinc0	equ	0xFEE
   925                           wreg	equ	0xFE8
   926                           postdec1	equ	0xFE5
   927                           fsr1l	equ	0xFE1
   928                           status	equ	0xFD8
   929                           
   930 ;; *************** function _PMD_Initialize *****************
   931 ;; Defined at:
   932 ;;		line 138 in file "mcc_generated_files/mcc.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, status,2
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    6
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_SYSTEM_Initialize
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text4
   961  00146E                     __ptext4:
   962                           	opt stack 0
   963  00146E                     _PMD_Initialize:
   964                           	opt stack 23
   965                           
   966                           ;mcc.c: 141: PMD0 = 0x00;
   967                           
   968                           ;incstack = 0
   969  00146E  0E00               	movlw	0
   970  001470  010E               	movlb	14	; () banked
   971  001472  6FE1               	movwf	225,b	;volatile
   972                           
   973                           ;mcc.c: 143: PMD1 = 0x00;
   974  001474  0E00               	movlw	0
   975  001476  6FE2               	movwf	226,b	;volatile
   976                           
   977                           ;mcc.c: 145: PMD2 = 0x00;
   978  001478  0E00               	movlw	0
   979  00147A  6FE3               	movwf	227,b	;volatile
   980                           
   981                           ;mcc.c: 147: PMD3 = 0x00;
   982  00147C  0E00               	movlw	0
   983  00147E  6FE4               	movwf	228,b	;volatile
   984                           
   985                           ;mcc.c: 149: PMD4 = 0x00;
   986  001480  0E00               	movlw	0
   987  001482  6FE5               	movwf	229,b	;volatile
   988                           
   989                           ;mcc.c: 151: PMD5 = 0x00;
   990  001484  0E00               	movlw	0
   991  001486  6FE6               	movwf	230,b	;volatile
   992                           
   993                           ; BSR set to: 14
   994  001488  0012               	return		;funcret
   995  00148A                     __end_of_PMD_Initialize:
   996                           	opt stack 0
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           prodh	equ	0xFF4
  1002                           prodl	equ	0xFF3
  1003                           intcon	equ	0xFF2
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           postdec1	equ	0xFE5
  1007                           fsr1l	equ	0xFE1
  1008                           status	equ	0xFD8
  1009                           
  1010 ;; *************** function _PIN_MANAGER_Initialize *****************
  1011 ;; Defined at:
  1012 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    6
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_SYSTEM_Initialize
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text5
  1041  000F06                     __ptext5:
  1042                           	opt stack 0
  1043  000F06                     _PIN_MANAGER_Initialize:
  1044                           	opt stack 23
  1045                           
  1046                           ;pin_manager.c: 57: LATE = 0x00;
  1047                           
  1048                           ; BSR set to: 14
  1049                           ;incstack = 0
  1050  000F06  0E00               	movlw	0
  1051  000F08  6E87               	movwf	3975,c	;volatile
  1052                           
  1053                           ;pin_manager.c: 58: LATD = 0x00;
  1054  000F0A  0E00               	movlw	0
  1055  000F0C  6E86               	movwf	3974,c	;volatile
  1056                           
  1057                           ;pin_manager.c: 59: LATA = 0x0C;
  1058  000F0E  0E0C               	movlw	12
  1059  000F10  6E83               	movwf	3971,c	;volatile
  1060                           
  1061                           ;pin_manager.c: 60: LATB = 0x00;
  1062  000F12  0E00               	movlw	0
  1063  000F14  6E84               	movwf	3972,c	;volatile
  1064                           
  1065                           ;pin_manager.c: 61: LATC = 0x00;
  1066  000F16  0E00               	movlw	0
  1067  000F18  6E85               	movwf	3973,c	;volatile
  1068                           
  1069                           ;pin_manager.c: 66: TRISE = 0x07;
  1070  000F1A  0E07               	movlw	7
  1071  000F1C  6E8C               	movwf	3980,c	;volatile
  1072                           
  1073                           ;pin_manager.c: 67: TRISA = 0xEB;
  1074  000F1E  0EEB               	movlw	235
  1075  000F20  6E88               	movwf	3976,c	;volatile
  1076                           
  1077                           ;pin_manager.c: 68: TRISB = 0xFD;
  1078  000F22  0EFD               	movlw	253
  1079  000F24  6E89               	movwf	3977,c	;volatile
  1080                           
  1081                           ;pin_manager.c: 69: TRISC = 0xDF;
  1082  000F26  0EDF               	movlw	223
  1083  000F28  6E8A               	movwf	3978,c	;volatile
  1084                           
  1085                           ;pin_manager.c: 70: TRISD = 0xF7;
  1086  000F2A  0EF7               	movlw	247
  1087  000F2C  6E8B               	movwf	3979,c	;volatile
  1088                           
  1089                           ;pin_manager.c: 75: ANSELC = 0xE7;
  1090  000F2E  0EE7               	movlw	231
  1091  000F30  010F               	movlb	15	; () banked
  1092  000F32  6F21               	movwf	33,b	;volatile
  1093                           
  1094                           ;pin_manager.c: 76: ANSELB = 0xFD;
  1095  000F34  0EFD               	movlw	253
  1096  000F36  6F19               	movwf	25,b	;volatile
  1097                           
  1098                           ;pin_manager.c: 77: ANSELD = 0x7F;
  1099  000F38  0E7F               	movlw	127
  1100  000F3A  6F26               	movwf	38,b	;volatile
  1101                           
  1102                           ;pin_manager.c: 78: ANSELE = 0x07;
  1103  000F3C  0E07               	movlw	7
  1104  000F3E  6F2E               	movwf	46,b	;volatile
  1105                           
  1106                           ; BSR set to: 15
  1107                           ;pin_manager.c: 79: ANSELA = 0xFF;
  1108  000F40  6911               	setf	17,b	;volatile
  1109                           
  1110                           ;pin_manager.c: 84: WPUD = 0x88;
  1111  000F42  0E88               	movlw	136
  1112  000F44  6F25               	movwf	37,b	;volatile
  1113                           
  1114                           ;pin_manager.c: 85: WPUE = 0x00;
  1115  000F46  0E00               	movlw	0
  1116  000F48  6F2D               	movwf	45,b	;volatile
  1117                           
  1118                           ;pin_manager.c: 86: WPUB = 0x02;
  1119  000F4A  0E02               	movlw	2
  1120  000F4C  6F18               	movwf	24,b	;volatile
  1121                           
  1122                           ;pin_manager.c: 87: WPUA = 0x00;
  1123  000F4E  0E00               	movlw	0
  1124  000F50  6F10               	movwf	16,b	;volatile
  1125                           
  1126                           ;pin_manager.c: 88: WPUC = 0x18;
  1127  000F52  0E18               	movlw	24
  1128  000F54  6F20               	movwf	32,b	;volatile
  1129                           
  1130                           ;pin_manager.c: 93: ODCONE = 0x00;
  1131  000F56  0E00               	movlw	0
  1132  000F58  6F2C               	movwf	44,b	;volatile
  1133                           
  1134                           ;pin_manager.c: 94: ODCONA = 0x00;
  1135  000F5A  0E00               	movlw	0
  1136  000F5C  6F0F               	movwf	15,b	;volatile
  1137                           
  1138                           ;pin_manager.c: 95: ODCONB = 0x00;
  1139  000F5E  0E00               	movlw	0
  1140  000F60  6F17               	movwf	23,b	;volatile
  1141                           
  1142                           ;pin_manager.c: 96: ODCONC = 0x00;
  1143  000F62  0E00               	movlw	0
  1144  000F64  6F1F               	movwf	31,b	;volatile
  1145                           
  1146                           ;pin_manager.c: 97: ODCOND = 0x00;
  1147  000F66  0E00               	movlw	0
  1148  000F68  6F24               	movwf	36,b	;volatile
  1149                           
  1150                           ;pin_manager.c: 104: RB1PPS = 0x11;
  1151  000F6A  0E11               	movlw	17
  1152  000F6C  010E               	movlb	14	; () banked
  1153  000F6E  6FF0               	movwf	240,b	;volatile
  1154                           
  1155                           ;pin_manager.c: 105: RC3PPS = 0x0F;
  1156  000F70  0E0F               	movlw	15
  1157  000F72  6FFA               	movwf	250,b	;volatile
  1158                           
  1159                           ; BSR set to: 14
  1160                           ;pin_manager.c: 106: SSP2CLKPPSbits.SSPCLKPPS = 0x09;
  1161  000F74  818F               	bsf	143,0,b	;volatile
  1162  000F76  938F               	bcf	143,1,b	;volatile
  1163  000F78  958F               	bcf	143,2,b	;volatile
  1164  000F7A  878F               	bsf	143,3,b	;volatile
  1165  000F7C  998F               	bcf	143,4,b	;volatile
  1166                           
  1167                           ; BSR set to: 14
  1168                           ;pin_manager.c: 107: SSP2DATPPSbits.SSPDATPPS = 0x1F;
  1169  000F7E  8190               	bsf	144,0,b	;volatile
  1170  000F80  8390               	bsf	144,1,b	;volatile
  1171  000F82  8590               	bsf	144,2,b	;volatile
  1172  000F84  8790               	bsf	144,3,b	;volatile
  1173  000F86  8990               	bsf	144,4,b	;volatile
  1174                           
  1175                           ;pin_manager.c: 108: RC4PPS = 0x10;
  1176  000F88  0E10               	movlw	16
  1177  000F8A  6FFB               	movwf	251,b	;volatile
  1178                           
  1179                           ;pin_manager.c: 109: RD3PPS = 0x12;
  1180  000F8C  0E12               	movlw	18
  1181  000F8E  010F               	movlb	15	; () banked
  1182  000F90  6F02               	movwf	2,b	;volatile
  1183                           
  1184                           ; BSR set to: 15
  1185                           ;pin_manager.c: 110: SSP1CLKPPSbits.SSPCLKPPS = 0x13;
  1186  000F92  010E               	movlb	14	; () banked
  1187  000F94  81B7               	bsf	183,0,b	;volatile
  1188  000F96  83B7               	bsf	183,1,b	;volatile
  1189  000F98  95B7               	bcf	183,2,b	;volatile
  1190  000F9A  97B7               	bcf	183,3,b	;volatile
  1191  000F9C  89B7               	bsf	183,4,b	;volatile
  1192                           
  1193                           ; BSR set to: 14
  1194                           ;pin_manager.c: 111: SSP1DATPPSbits.SSPDATPPS = 0x14;
  1195  000F9E  91B8               	bcf	184,0,b	;volatile
  1196  000FA0  93B8               	bcf	184,1,b	;volatile
  1197  000FA2  85B8               	bsf	184,2,b	;volatile
  1198  000FA4  97B8               	bcf	184,3,b	;volatile
  1199  000FA6  89B8               	bsf	184,4,b	;volatile
  1200                           
  1201                           ; BSR set to: 14
  1202  000FA8  0012               	return		;funcret
  1203  000FAA                     __end_of_PIN_MANAGER_Initialize:
  1204                           	opt stack 0
  1205                           tblptru	equ	0xFF8
  1206                           tblptrh	equ	0xFF7
  1207                           tblptrl	equ	0xFF6
  1208                           tablat	equ	0xFF5
  1209                           prodh	equ	0xFF4
  1210                           prodl	equ	0xFF3
  1211                           intcon	equ	0xFF2
  1212                           postinc0	equ	0xFEE
  1213                           wreg	equ	0xFE8
  1214                           postdec1	equ	0xFE5
  1215                           fsr1l	equ	0xFE1
  1216                           status	equ	0xFD8
  1217                           
  1218 ;; *************** function _OSCILLATOR_Initialize *****************
  1219 ;; Defined at:
  1220 ;;		line 124 in file "mcc_generated_files/mcc.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    6
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_SYSTEM_Initialize
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text6
  1249  0014A6                     __ptext6:
  1250                           	opt stack 0
  1251  0014A6                     _OSCILLATOR_Initialize:
  1252                           	opt stack 23
  1253                           
  1254                           ;mcc.c: 127: OSCCON1 = 0x62;
  1255                           
  1256                           ; BSR set to: 14
  1257                           ;incstack = 0
  1258  0014A6  0E62               	movlw	98
  1259  0014A8  010E               	movlb	14	; () banked
  1260  0014AA  6FD8               	movwf	216,b	;volatile
  1261                           
  1262                           ;mcc.c: 129: OSCCON3 = 0x00;
  1263  0014AC  0E00               	movlw	0
  1264  0014AE  6FDA               	movwf	218,b	;volatile
  1265                           
  1266                           ;mcc.c: 131: OSCEN = 0x00;
  1267  0014B0  0E00               	movlw	0
  1268  0014B2  6FDC               	movwf	220,b	;volatile
  1269                           
  1270                           ;mcc.c: 133: OSCFRQ = 0x03;
  1271  0014B4  0E03               	movlw	3
  1272  0014B6  6FDE               	movwf	222,b	;volatile
  1273                           
  1274                           ;mcc.c: 135: OSCTUNE = 0x20;
  1275  0014B8  0E20               	movlw	32
  1276  0014BA  6FDD               	movwf	221,b	;volatile
  1277                           
  1278                           ; BSR set to: 14
  1279  0014BC  0012               	return		;funcret
  1280  0014BE                     __end_of_OSCILLATOR_Initialize:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           prodh	equ	0xFF4
  1287                           prodl	equ	0xFF3
  1288                           intcon	equ	0xFF2
  1289                           postinc0	equ	0xFEE
  1290                           wreg	equ	0xFE8
  1291                           postdec1	equ	0xFE5
  1292                           fsr1l	equ	0xFE1
  1293                           status	equ	0xFD8
  1294                           
  1295 ;; *************** function _INTERRUPT_Initialize *****************
  1296 ;; Defined at:
  1297 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		None
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1315 ;;Total ram usage:        0 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    6
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_SYSTEM_Initialize
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text7
  1326  0015B2                     __ptext7:
  1327                           	opt stack 0
  1328  0015B2                     _INTERRUPT_Initialize:
  1329                           	opt stack 23
  1330                           
  1331                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  1332                           
  1333                           ; BSR set to: 14
  1334                           ;incstack = 0
  1335  0015B2  9AF2               	bcf	intcon,5,c	;volatile
  1336  0015B4  0012               	return		;funcret
  1337  0015B6                     __end_of_INTERRUPT_Initialize:
  1338                           	opt stack 0
  1339                           tblptru	equ	0xFF8
  1340                           tblptrh	equ	0xFF7
  1341                           tblptrl	equ	0xFF6
  1342                           tablat	equ	0xFF5
  1343                           prodh	equ	0xFF4
  1344                           prodl	equ	0xFF3
  1345                           intcon	equ	0xFF2
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           postdec1	equ	0xFE5
  1349                           fsr1l	equ	0xFE1
  1350                           status	equ	0xFD8
  1351                           
  1352 ;; *************** function _INTERRUPT_InterruptManager *****************
  1353 ;; Defined at:
  1354 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;Total ram usage:       18 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    5
  1375 ;; This function calls:
  1376 ;;		Absolute function
  1377 ;;		_i2c_ISR
  1378 ;;		_i2c_busCollisionISR
  1379 ;; This function is called by:
  1380 ;;		Interrupt level 2
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	intcode
  1385  000008                     __pintcode:
  1386                           	opt stack 0
  1387  000008                     _INTERRUPT_InterruptManager:
  1388                           	opt stack 23
  1389                           
  1390                           ;incstack = 0
  1391  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1392  00000A  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  1393  00000E  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1394  000012  CFE9 F036          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1395  000016  CFEA F037          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1396  00001A  CFE1 F038          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1397  00001E  CFE2 F039          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1398  000022  CFD9 F03A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1399  000026  CFDA F03B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1400  00002A  CFF3 F03C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1401  00002E  CFF4 F03D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1402  000032  CFF6 F03E          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1403  000036  CFF7 F03F          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1404  00003A  CFF8 F040          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1405  00003E  CFF5 F041          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1406  000042  C048  F042         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1407  000046  C049  F043         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1408  00004A  C04A  F044         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1409  00004E  C04B  F045         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1410                           
  1411                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  1412  000052  ACF2               	btfss	intcon,6,c	;volatile
  1413  000054  D01D               	goto	i2u83_49
  1414                           
  1415                           ;interrupt_manager.c: 61: {
  1416                           ;interrupt_manager.c: 62: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  1417  000056  010E               	movlb	14	; () banked
  1418  000058  B3C5               	btfsc	197,1,b	;volatile
  1419                           
  1420                           ; BSR set to: 14
  1421  00005A  A3CD               	btfss	205,1,b	;volatile
  1422  00005C  D00A               	goto	i2l275
  1423                           
  1424                           ; BSR set to: 14
  1425                           ;interrupt_manager.c: 63: {
  1426                           ;interrupt_manager.c: 64: i2c1_driver_busCollisionISR();
  1427  00005E  D801               	call	i2u80_48
  1428  000060  D017               	goto	i2u83_49
  1429  000062                     i2u80_48:
  1430  000062  0005               	push	
  1431  000064  6EFA               	movwf	pclath,c
  1432  000066  502E               	movf	_i2c1_driver_busCollisionISR,w,c
  1433  000068  6EFD               	movwf	tosl,c
  1434  00006A  502F               	movf	_i2c1_driver_busCollisionISR+1,w,c
  1435  00006C  6EFE               	movwf	tosh,c
  1436  00006E  5030               	movf	_i2c1_driver_busCollisionISR+2,w,c
  1437  000070  D00C               	goto	L1
  1438  000072                     i2l275:
  1439                           
  1440                           ; BSR set to: 14
  1441                           ;interrupt_manager.c: 66: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  1442  000072  B1C5               	btfsc	197,0,b	;volatile
  1443                           
  1444                           ; BSR set to: 14
  1445  000074  A1CD               	btfss	205,0,b	;volatile
  1446  000076  D00C               	goto	i2u83_49
  1447                           
  1448                           ; BSR set to: 14
  1449                           ;interrupt_manager.c: 67: {
  1450                           ;interrupt_manager.c: 68: i2c1_driver_i2cISR();
  1451  000078  D801               	call	i2u83_48
  1452  00007A  D00A               	goto	i2u83_49
  1453  00007C                     i2u83_48:
  1454  00007C  0005               	push	
  1455  00007E  6EFA               	movwf	pclath,c
  1456  000080  502B               	movf	_i2c1_driver_i2cISR,w,c
  1457  000082  6EFD               	movwf	tosl,c
  1458  000084  502C               	movf	_i2c1_driver_i2cISR+1,w,c
  1459  000086  6EFE               	movwf	tosh,c
  1460  000088  502D               	movf	_i2c1_driver_i2cISR+2,w,c
  1461  00008A                     L1:
  1462  00008A  6EFF               	movwf	tosu,c
  1463  00008C  50FA               	movf	pclath,w,c
  1464  00008E  0012               	return		;indir
  1465  000090                     i2u83_49:
  1466                           
  1467                           ;interrupt_manager.c: 75: else
  1468                           ;interrupt_manager.c: 76: {
  1469                           
  1470                           ;interrupt_manager.c: 73: }
  1471                           ;interrupt_manager.c: 74: }
  1472                           
  1473                           ;interrupt_manager.c: 70: else
  1474                           ;interrupt_manager.c: 71: {
  1475                           
  1476                           ;interrupt_manager.c: 69: }
  1477  000090  C045  F04B         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1478  000094  C044  F04A         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1479  000098  C043  F049         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1480  00009C  C042  F048         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1481  0000A0  C041  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1482  0000A4  C040  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1483  0000A8  C03F  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1484  0000AC  C03E  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1485  0000B0  C03D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1486  0000B4  C03C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1487  0000B8  C03B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1488  0000BC  C03A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1489  0000C0  C039  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1490  0000C4  C038  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1491  0000C8  C037  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1492  0000CC  C036  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1493  0000D0  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1494  0000D4  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1495  0000D8  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1496  0000DA  0011               	retfie		f
  1497  0000DC                     __end_of_INTERRUPT_InterruptManager:
  1498                           	opt stack 0
  1499                           tosu	equ	0xFFF
  1500                           tosh	equ	0xFFE
  1501                           tosl	equ	0xFFD
  1502                           pclatu	equ	0xFFB
  1503                           pclath	equ	0xFFA
  1504                           tblptru	equ	0xFF8
  1505                           tblptrh	equ	0xFF7
  1506                           tblptrl	equ	0xFF6
  1507                           tablat	equ	0xFF5
  1508                           prodh	equ	0xFF4
  1509                           prodl	equ	0xFF3
  1510                           intcon	equ	0xFF2
  1511                           postinc0	equ	0xFEE
  1512                           fsr0h	equ	0xFEA
  1513                           fsr0l	equ	0xFE9
  1514                           wreg	equ	0xFE8
  1515                           postdec1	equ	0xFE5
  1516                           fsr1h	equ	0xFE2
  1517                           fsr1l	equ	0xFE1
  1518                           fsr2h	equ	0xFDA
  1519                           fsr2l	equ	0xFD9
  1520                           status	equ	0xFD8
  1521                           
  1522 ;; *************** function _i2c_busCollisionISR *****************
  1523 ;; Defined at:
  1524 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    1
  1545 ;; This function calls:
  1546 ;;		_i2c1_driver_clearBusCollision
  1547 ;; This function is called by:
  1548 ;;		_i2c_open
  1549 ;;		_INTERRUPT_InterruptManager
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text9
  1554  00158E                     __ptext9:
  1555                           	opt stack 0
  1556  00158E                     _i2c_busCollisionISR:
  1557                           	opt stack 26
  1558                           
  1559                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
  1560                           
  1561                           ;incstack = 0
  1562  00158E  ECCA  F00A         	call	_i2c1_driver_clearBusCollision	;wreg free
  1563  001592  0012               	return		;funcret
  1564  001594                     __end_of_i2c_busCollisionISR:
  1565                           	opt stack 0
  1566                           tosu	equ	0xFFF
  1567                           tosh	equ	0xFFE
  1568                           tosl	equ	0xFFD
  1569                           pclatu	equ	0xFFB
  1570                           pclath	equ	0xFFA
  1571                           tblptru	equ	0xFF8
  1572                           tblptrh	equ	0xFF7
  1573                           tblptrl	equ	0xFF6
  1574                           tablat	equ	0xFF5
  1575                           prodh	equ	0xFF4
  1576                           prodl	equ	0xFF3
  1577                           intcon	equ	0xFF2
  1578                           postinc0	equ	0xFEE
  1579                           fsr0h	equ	0xFEA
  1580                           fsr0l	equ	0xFE9
  1581                           wreg	equ	0xFE8
  1582                           postdec1	equ	0xFE5
  1583                           fsr1h	equ	0xFE2
  1584                           fsr1l	equ	0xFE1
  1585                           fsr2h	equ	0xFDA
  1586                           fsr2l	equ	0xFD9
  1587                           status	equ	0xFD8
  1588                           
  1589 ;; *************** function _i2c1_driver_clearBusCollision *****************
  1590 ;; Defined at:
  1591 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		None
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1609 ;;Total ram usage:        0 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_i2c_busCollisionISR
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text10
  1619  001594                     __ptext10:
  1620                           	opt stack 0
  1621  001594                     _i2c1_driver_clearBusCollision:
  1622                           	opt stack 26
  1623                           
  1624                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
  1625                           
  1626                           ;incstack = 0
  1627  001594  010E               	movlb	14	; () banked
  1628  001596  93CD               	bcf	205,1,b	;volatile
  1629                           
  1630                           ; BSR set to: 14
  1631  001598  0012               	return		;funcret
  1632  00159A                     __end_of_i2c1_driver_clearBusCollision:
  1633                           	opt stack 0
  1634                           tosu	equ	0xFFF
  1635                           tosh	equ	0xFFE
  1636                           tosl	equ	0xFFD
  1637                           pclatu	equ	0xFFB
  1638                           pclath	equ	0xFFA
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           prodh	equ	0xFF4
  1644                           prodl	equ	0xFF3
  1645                           intcon	equ	0xFF2
  1646                           postinc0	equ	0xFEE
  1647                           fsr0h	equ	0xFEA
  1648                           fsr0l	equ	0xFE9
  1649                           wreg	equ	0xFE8
  1650                           postdec1	equ	0xFE5
  1651                           fsr1h	equ	0xFE2
  1652                           fsr1l	equ	0xFE1
  1653                           fsr2h	equ	0xFDA
  1654                           fsr2l	equ	0xFD9
  1655                           status	equ	0xFD8
  1656                           
  1657 ;; *************** function _i2c_ISR *****************
  1658 ;; Defined at:
  1659 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    4
  1680 ;; This function calls:
  1681 ;;		_do_I2C_DO_ACK
  1682 ;;		_do_I2C_DO_ADDRESS_NACK
  1683 ;;		_do_I2C_DO_NACK_RESTART
  1684 ;;		_do_I2C_DO_NACK_STOP
  1685 ;;		_do_I2C_IDLE
  1686 ;;		_do_I2C_RCEN
  1687 ;;		_do_I2C_RESET
  1688 ;;		_do_I2C_RX
  1689 ;;		_do_I2C_SEND_ADR_READ
  1690 ;;		_do_I2C_SEND_ADR_WRITE
  1691 ;;		_do_I2C_SEND_RESTART
  1692 ;;		_do_I2C_SEND_RESTART_READ
  1693 ;;		_do_I2C_SEND_RESTART_WRITE
  1694 ;;		_do_I2C_SEND_STOP
  1695 ;;		_do_I2C_TX
  1696 ;;		_do_I2C_TX_EMPTY
  1697 ;;		_i2c1_driver_isNACK
  1698 ;;		_mssp1_clearIRQ
  1699 ;; This function is called by:
  1700 ;;		_i2c_open
  1701 ;;		_i2c_poller
  1702 ;;		_INTERRUPT_InterruptManager
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text11
  1707  001308                     __ptext11:
  1708                           	opt stack 0
  1709  001308                     _i2c_ISR:
  1710                           	opt stack 23
  1711                           
  1712                           ;i2c_master.c: 421: mssp1_clearIRQ();
  1713                           
  1714                           ; BSR set to: 14
  1715                           ;incstack = 0
  1716  001308  ECCD  F00A         	call	_mssp1_clearIRQ	;wreg free
  1717                           
  1718                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  1719  00130C  A601               	btfss	_i2c_status,3,c
  1720  00130E  D006               	goto	i2l477
  1721  001310  EC6B  F00A         	call	_i2c1_driver_isNACK	;wreg free
  1722  001314  A0D8               	btfss	status,0,c
  1723  001316  D002               	goto	i2l477
  1724                           
  1725                           ;i2c_master.c: 428: {
  1726                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  1727  001318  0E0F               	movlw	15
  1728  00131A  6E0B               	movwf	_i2c_status+10,c
  1729  00131C                     i2l477:
  1730                           
  1731                           ;i2c_master.c: 430: }
  1732                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  1733  00131C  500B               	movf	_i2c_status+10,w,c
  1734  00131E  0D03               	mullw	3
  1735  001320  0E60               	movlw	low _fsmStateTable
  1736  001322  24F3               	addwf	prodl,w,c
  1737  001324  6ED9               	movwf	fsr2l,c
  1738  001326  0E00               	movlw	high _fsmStateTable
  1739  001328  20F4               	addwfc	prodh,w,c
  1740  00132A  6EDA               	movwf	fsr2h,c
  1741  00132C  D801               	call	i2u76_48
  1742  00132E  D00A               	goto	i2u76_49
  1743  001330                     i2u76_48:
  1744  001330  0005               	push	
  1745  001332  6EFA               	movwf	pclath,c
  1746  001334  50DE               	movf	postinc2,w,c
  1747  001336  6EFD               	movwf	tosl,c
  1748  001338  50DE               	movf	postinc2,w,c
  1749  00133A  6EFE               	movwf	tosh,c
  1750  00133C  50DE               	movf	postinc2,w,c
  1751  00133E  6EFF               	movwf	tosu,c
  1752  001340  50FA               	movf	pclath,w,c
  1753  001342  0012               	return		;indir
  1754  001344                     i2u76_49:
  1755  001344  6E0B               	movwf	_i2c_status+10,c
  1756  001346  0012               	return		;funcret
  1757  001348                     __end_of_i2c_ISR:
  1758                           	opt stack 0
  1759                           tosu	equ	0xFFF
  1760                           tosh	equ	0xFFE
  1761                           tosl	equ	0xFFD
  1762                           pclatu	equ	0xFFB
  1763                           pclath	equ	0xFFA
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           prodh	equ	0xFF4
  1769                           prodl	equ	0xFF3
  1770                           intcon	equ	0xFF2
  1771                           postinc0	equ	0xFEE
  1772                           fsr0h	equ	0xFEA
  1773                           fsr0l	equ	0xFE9
  1774                           wreg	equ	0xFE8
  1775                           postdec1	equ	0xFE5
  1776                           fsr1h	equ	0xFE2
  1777                           fsr1l	equ	0xFE1
  1778                           postinc2	equ	0xFDE
  1779                           fsr2h	equ	0xFDA
  1780                           fsr2l	equ	0xFD9
  1781                           status	equ	0xFD8
  1782                           
  1783 ;; *************** function _mssp1_clearIRQ *****************
  1784 ;; Defined at:
  1785 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		None
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1803 ;;Total ram usage:        0 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_i2c_ISR
  1809 ;;		_i2c_open
  1810 ;;		_i2c_close
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text12
  1815  00159A                     __ptext12:
  1816                           	opt stack 0
  1817  00159A                     _mssp1_clearIRQ:
  1818                           	opt stack 26
  1819                           
  1820                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  1821                           
  1822                           ;incstack = 0
  1823  00159A  010E               	movlb	14	; () banked
  1824  00159C  91CD               	bcf	205,0,b	;volatile
  1825                           
  1826                           ; BSR set to: 14
  1827  00159E  0012               	return		;funcret
  1828  0015A0                     __end_of_mssp1_clearIRQ:
  1829                           	opt stack 0
  1830                           tosu	equ	0xFFF
  1831                           tosh	equ	0xFFE
  1832                           tosl	equ	0xFFD
  1833                           pclatu	equ	0xFFB
  1834                           pclath	equ	0xFFA
  1835                           tblptru	equ	0xFF8
  1836                           tblptrh	equ	0xFF7
  1837                           tblptrl	equ	0xFF6
  1838                           tablat	equ	0xFF5
  1839                           prodh	equ	0xFF4
  1840                           prodl	equ	0xFF3
  1841                           intcon	equ	0xFF2
  1842                           postinc0	equ	0xFEE
  1843                           fsr0h	equ	0xFEA
  1844                           fsr0l	equ	0xFE9
  1845                           wreg	equ	0xFE8
  1846                           postdec1	equ	0xFE5
  1847                           fsr1h	equ	0xFE2
  1848                           fsr1l	equ	0xFE1
  1849                           postinc2	equ	0xFDE
  1850                           fsr2h	equ	0xFDA
  1851                           fsr2l	equ	0xFD9
  1852                           status	equ	0xFD8
  1853                           
  1854 ;; *************** function _do_I2C_RX *****************
  1855 ;; Defined at:
  1856 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      enum E11956
  1863 ;; Registers used:
  1864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    3
  1877 ;; This function calls:
  1878 ;;		Absolute function
  1879 ;;		_do_I2C_DO_NACK_RESTART
  1880 ;;		_do_I2C_DO_NACK_STOP
  1881 ;;		_i2c1_driver_getRXData
  1882 ;;		_i2c1_driver_sendACK
  1883 ;;		_i2c_restartWrite
  1884 ;;		_rd1RegCompleteHandler
  1885 ;;		_rd2RegCompleteHandler
  1886 ;;		_rdBlkRegCompleteHandler
  1887 ;;		_returnReset
  1888 ;;		_returnStop
  1889 ;;		_wr1RegCompleteHandler
  1890 ;;		_wr2RegCompleteHandler
  1891 ;; This function is called by:
  1892 ;;		_i2c_ISR
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text13
  1897  0011B6                     __ptext13:
  1898                           	opt stack 0
  1899  0011B6                     _do_I2C_RX:
  1900                           	opt stack 23
  1901                           
  1902                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  1903                           
  1904                           ; BSR set to: 14
  1905                           ;incstack = 0
  1906  0011B6  ECDB  F00A         	call	_i2c1_driver_getRXData	;wreg free
  1907  0011BA  C003  FFD9         	movff	_i2c_status+2,fsr2l
  1908  0011BE  C004  FFDA         	movff	_i2c_status+3,fsr2h
  1909  0011C2  6EDF               	movwf	indf2,c
  1910  0011C4  4A03               	infsnz	_i2c_status+2,f,c
  1911  0011C6  2A04               	incf	_i2c_status+3,f,c
  1912                           
  1913                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  1914  0011C8  0605               	decf	_i2c_status+4,f,c
  1915  0011CA  A0D8               	btfss	status,0,c
  1916  0011CC  0606               	decf	_i2c_status+5,f,c
  1917  0011CE  5005               	movf	_i2c_status+4,w,c
  1918  0011D0  1006               	iorwf	_i2c_status+5,w,c
  1919  0011D2  B4D8               	btfsc	status,2,c
  1920  0011D4  D004               	goto	i2l453
  1921                           
  1922                           ;i2c_master.c: 361: {
  1923                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  1924  0011D6  ECD6  F00A         	call	_i2c1_driver_sendACK	;wreg free
  1925                           
  1926                           ;i2c_master.c: 363: return I2C_RCEN;
  1927  0011DA  0E05               	movlw	5
  1928                           
  1929                           ;i2c_master.c: 364: }
  1930  0011DC  0012               	return	
  1931  0011DE                     i2l453:
  1932                           
  1933                           ;i2c_master.c: 365: else
  1934                           ;i2c_master.c: 366: {
  1935                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  1936  0011DE  8401               	bsf	_i2c_status,2,c
  1937                           
  1938                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  1939  0011E0  D006               	goto	i2l456
  1940  0011E2                     
  1941                           ;i2c_master.c: 371: case i2c_restart_read:
  1942                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  1943  0011E2  ECA7  F00A         	call	_do_I2C_DO_NACK_RESTART	;wreg free
  1944  0011E6  0012               	return	
  1945  0011E8                     
  1946                           ;i2c_master.c: 375: case i2c_stop:
  1947                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  1948                           
  1949                           ;i2c_master.c: 374: case i2c_continue:
  1950  0011E8  ECAB  F00A         	call	_do_I2C_DO_NACK_STOP	;wreg free
  1951                           
  1952                           ;i2c_master.c: 377: }
  1953  0011EC  0012               	return	
  1954  0011EE                     i2l456:
  1955  0011EE  C01F  F03C         	movff	_i2c_status+30,rdBlkRegCompleteHandler@p
  1956  0011F2  C020  F03D         	movff	_i2c_status+31,rdBlkRegCompleteHandler@p+1
  1957  0011F6  EE20  F00D         	lfsr	2,_i2c_status+12
  1958  0011FA  D801               	call	i2u70_48
  1959  0011FC  D00A               	goto	i2u70_49
  1960  0011FE                     i2u70_48:
  1961  0011FE  0005               	push	
  1962  001200  6EFA               	movwf	pclath,c
  1963  001202  50DE               	movf	postinc2,w,c
  1964  001204  6EFD               	movwf	tosl,c
  1965  001206  50DE               	movf	postinc2,w,c
  1966  001208  6EFE               	movwf	tosh,c
  1967  00120A  50DE               	movf	postinc2,w,c
  1968  00120C  6EFF               	movwf	tosu,c
  1969  00120E  50FA               	movf	pclath,w,c
  1970  001210  0012               	return		;indir
  1971  001212                     i2u70_49:
  1972                           
  1973                           ; Switch size 1, requested type "space"
  1974                           ; Number of cases is 4, Range of values is 1 to 4
  1975                           ; switch strategies available:
  1976                           ; Name         Instructions Cycles
  1977                           ; simple_byte           13     7 (average)
  1978                           ;	Chosen strategy is simple_byte
  1979  001212  0A01               	xorlw	1	; case 1
  1980  001214  B4D8               	btfsc	status,2,c
  1981  001216  D7E8               	goto	i2l459
  1982  001218  0A03               	xorlw	3	; case 2
  1983  00121A  B4D8               	btfsc	status,2,c
  1984  00121C  D7E2               	goto	i2l457
  1985  00121E  0A01               	xorlw	1	; case 3
  1986  001220  B4D8               	btfsc	status,2,c
  1987  001222  D7DF               	goto	i2l457
  1988  001224  0A07               	xorlw	7	; case 4
  1989  001226  D7E0               	goto	i2l459
  1990  001228                     __end_of_do_I2C_RX:
  1991                           	opt stack 0
  1992                           tosu	equ	0xFFF
  1993                           tosh	equ	0xFFE
  1994                           tosl	equ	0xFFD
  1995                           pclatu	equ	0xFFB
  1996                           pclath	equ	0xFFA
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           prodh	equ	0xFF4
  2002                           prodl	equ	0xFF3
  2003                           intcon	equ	0xFF2
  2004                           postinc0	equ	0xFEE
  2005                           fsr0h	equ	0xFEA
  2006                           fsr0l	equ	0xFE9
  2007                           wreg	equ	0xFE8
  2008                           postdec1	equ	0xFE5
  2009                           fsr1h	equ	0xFE2
  2010                           fsr1l	equ	0xFE1
  2011                           indf2	equ	0xFDF
  2012                           postinc2	equ	0xFDE
  2013                           fsr2h	equ	0xFDA
  2014                           fsr2l	equ	0xFD9
  2015                           status	equ	0xFD8
  2016                           
  2017 ;; *************** function _do_I2C_TX *****************
  2018 ;; Defined at:
  2019 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      enum E11956
  2026 ;; Registers used:
  2027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2037 ;;Total ram usage:        2 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    3
  2040 ;; This function calls:
  2041 ;;		Absolute function
  2042 ;;		_do_I2C_SEND_RESTART_READ
  2043 ;;		_do_I2C_SEND_RESTART_WRITE
  2044 ;;		_do_I2C_SEND_STOP
  2045 ;;		_i2c1_driver_TXData
  2046 ;;		_i2c1_driver_isNACK
  2047 ;;		_i2c_restartWrite
  2048 ;;		_rd1RegCompleteHandler
  2049 ;;		_rd2RegCompleteHandler
  2050 ;;		_rdBlkRegCompleteHandler
  2051 ;;		_returnReset
  2052 ;;		_returnStop
  2053 ;;		_wr1RegCompleteHandler
  2054 ;;		_wr2RegCompleteHandler
  2055 ;; This function is called by:
  2056 ;;		_i2c_ISR
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text14
  2061  00103C                     __ptext14:
  2062                           	opt stack 0
  2063  00103C                     _do_I2C_TX:
  2064                           	opt stack 23
  2065                           
  2066                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  2067                           
  2068                           ;incstack = 0
  2069  00103C  EC6B  F00A         	call	_i2c1_driver_isNACK	;wreg free
  2070  001040  B0D8               	btfsc	status,0,c
  2071  001042  D00A               	goto	i2l438
  2072  001044  D026               	goto	i2l437
  2073  001046                     
  2074                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  2075  001046  ECBF  F00A         	call	_do_I2C_SEND_RESTART_READ	;wreg free
  2076  00104A  0012               	return	
  2077  00104C                     
  2078                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  2079  00104C  ECBB  F00A         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
  2080  001050  0012               	return	
  2081  001052                     
  2082                           ;i2c_master.c: 345: case i2c_stop:
  2083                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  2084                           
  2085                           ;i2c_master.c: 344: case i2c_continue:
  2086  001052  ECB3  F00A         	call	_do_I2C_SEND_STOP	;wreg free
  2087                           
  2088                           ;i2c_master.c: 347: }
  2089  001056  0012               	return	
  2090  001058                     i2l438:
  2091  001058  C025  F03C         	movff	_i2c_status+36,rdBlkRegCompleteHandler@p
  2092  00105C  C026  F03D         	movff	_i2c_status+37,rdBlkRegCompleteHandler@p+1
  2093  001060  EE20  F016         	lfsr	2,_i2c_status+21
  2094  001064  D801               	call	i2u67_48
  2095  001066  D00A               	goto	i2u67_49
  2096  001068                     i2u67_48:
  2097  001068  0005               	push	
  2098  00106A  6EFA               	movwf	pclath,c
  2099  00106C  50DE               	movf	postinc2,w,c
  2100  00106E  6EFD               	movwf	tosl,c
  2101  001070  50DE               	movf	postinc2,w,c
  2102  001072  6EFE               	movwf	tosh,c
  2103  001074  50DE               	movf	postinc2,w,c
  2104  001076  6EFF               	movwf	tosu,c
  2105  001078  50FA               	movf	pclath,w,c
  2106  00107A  0012               	return		;indir
  2107  00107C                     i2u67_49:
  2108                           
  2109                           ; Switch size 1, requested type "space"
  2110                           ; Number of cases is 4, Range of values is 1 to 4
  2111                           ; switch strategies available:
  2112                           ; Name         Instructions Cycles
  2113                           ; simple_byte           13     7 (average)
  2114                           ;	Chosen strategy is simple_byte
  2115  00107C  0A01               	xorlw	1	; case 1
  2116  00107E  B4D8               	btfsc	status,2,c
  2117  001080  D7E8               	goto	i2l442
  2118  001082  0A03               	xorlw	3	; case 2
  2119  001084  B4D8               	btfsc	status,2,c
  2120  001086  D7DF               	goto	i2l439
  2121  001088  0A01               	xorlw	1	; case 3
  2122  00108A  B4D8               	btfsc	status,2,c
  2123  00108C  D7DF               	goto	i2l441
  2124  00108E  0A07               	xorlw	7	; case 4
  2125  001090  D7E0               	goto	i2l442
  2126  001092                     i2l437:
  2127                           
  2128                           ;i2c_master.c: 349: else
  2129                           ;i2c_master.c: 350: {
  2130                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  2131  001092  9601               	bcf	_i2c_status,3,c
  2132                           
  2133                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  2134  001094  C003  FFD9         	movff	_i2c_status+2,fsr2l
  2135  001098  C004  FFDA         	movff	_i2c_status+3,fsr2h
  2136  00109C  4A03               	infsnz	_i2c_status+2,f,c
  2137  00109E  2A04               	incf	_i2c_status+3,f,c
  2138  0010A0  50DF               	movf	indf2,w,c
  2139  0010A2  ECC3  F00A         	call	_i2c1_driver_TXData
  2140                           
  2141                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  2142  0010A6  0605               	decf	_i2c_status+4,f,c
  2143  0010A8  A0D8               	btfss	status,0,c
  2144  0010AA  0606               	decf	_i2c_status+5,f,c
  2145  0010AC  5005               	movf	_i2c_status+4,w,c
  2146  0010AE  1006               	iorwf	_i2c_status+5,w,c
  2147  0010B0  A4D8               	btfss	status,2,c
  2148  0010B2  D004               	goto	i2l448
  2149  0010B4  0E00               	movlw	0
  2150  0010B6  6E33               	movwf	_do_I2C_TX$1041+1,c
  2151  0010B8  0E06               	movlw	6
  2152  0010BA  D003               	goto	L2
  2153  0010BC                     i2l448:
  2154  0010BC  0E00               	movlw	0
  2155  0010BE  6E33               	movwf	_do_I2C_TX$1041+1,c
  2156  0010C0  0E03               	movlw	3
  2157  0010C2                     L2:
  2158  0010C2  6E32               	movwf	_do_I2C_TX$1041,c
  2159  0010C4  5032               	movf	_do_I2C_TX$1041,w,c
  2160  0010C6  0012               	return	
  2161  0010C8                     __end_of_do_I2C_TX:
  2162                           	opt stack 0
  2163                           tosu	equ	0xFFF
  2164                           tosh	equ	0xFFE
  2165                           tosl	equ	0xFFD
  2166                           pclatu	equ	0xFFB
  2167                           pclath	equ	0xFFA
  2168                           tblptru	equ	0xFF8
  2169                           tblptrh	equ	0xFF7
  2170                           tblptrl	equ	0xFF6
  2171                           tablat	equ	0xFF5
  2172                           prodh	equ	0xFF4
  2173                           prodl	equ	0xFF3
  2174                           intcon	equ	0xFF2
  2175                           postinc0	equ	0xFEE
  2176                           fsr0h	equ	0xFEA
  2177                           fsr0l	equ	0xFE9
  2178                           wreg	equ	0xFE8
  2179                           postdec1	equ	0xFE5
  2180                           fsr1h	equ	0xFE2
  2181                           fsr1l	equ	0xFE1
  2182                           indf2	equ	0xFDF
  2183                           postinc2	equ	0xFDE
  2184                           fsr2h	equ	0xFDA
  2185                           fsr2l	equ	0xFD9
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  2189 ;; Defined at:
  2190 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;		None
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      enum E11956
  2197 ;; Registers used:
  2198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;Total ram usage:        0 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    3
  2211 ;; This function calls:
  2212 ;;		Absolute function
  2213 ;;		_do_I2C_SEND_RESTART
  2214 ;;		_do_I2C_SEND_STOP
  2215 ;;		_i2c_restartWrite
  2216 ;;		_rd1RegCompleteHandler
  2217 ;;		_rd2RegCompleteHandler
  2218 ;;		_rdBlkRegCompleteHandler
  2219 ;;		_returnReset
  2220 ;;		_returnStop
  2221 ;;		_wr1RegCompleteHandler
  2222 ;;		_wr2RegCompleteHandler
  2223 ;; This function is called by:
  2224 ;;		_i2c_ISR
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text15
  2229  00127E                     __ptext15:
  2230                           	opt stack 0
  2231  00127E                     _do_I2C_DO_ADDRESS_NACK:
  2232                           	opt stack 23
  2233                           
  2234                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  2235                           
  2236                           ;incstack = 0
  2237  00127E  9601               	bcf	_i2c_status,3,c
  2238                           
  2239                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  2240  001280  0E02               	movlw	2
  2241  001282  6E0C               	movwf	_i2c_status+11,c
  2242                           
  2243                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  2244  001284  D006               	goto	i2l429
  2245  001286                     
  2246                           ;i2c_master.c: 326: case i2c_restart_write:
  2247                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  2248  001286  ECB7  F00A         	call	_do_I2C_SEND_RESTART	;wreg free
  2249  00128A  0012               	return	
  2250  00128C                     
  2251                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  2252  00128C  ECB3  F00A         	call	_do_I2C_SEND_STOP	;wreg free
  2253                           
  2254                           ;i2c_master.c: 330: }
  2255  001290  0012               	return	
  2256  001292                     i2l429:
  2257  001292  C023  F03C         	movff	_i2c_status+34,rdBlkRegCompleteHandler@p
  2258  001296  C024  F03D         	movff	_i2c_status+35,rdBlkRegCompleteHandler@p+1
  2259  00129A  EE20  F013         	lfsr	2,_i2c_status+18
  2260  00129E  D801               	call	i2u65_48
  2261  0012A0  D00A               	goto	i2u65_49
  2262  0012A2                     i2u65_48:
  2263  0012A2  0005               	push	
  2264  0012A4  6EFA               	movwf	pclath,c
  2265  0012A6  50DE               	movf	postinc2,w,c
  2266  0012A8  6EFD               	movwf	tosl,c
  2267  0012AA  50DE               	movf	postinc2,w,c
  2268  0012AC  6EFE               	movwf	tosh,c
  2269  0012AE  50DE               	movf	postinc2,w,c
  2270  0012B0  6EFF               	movwf	tosu,c
  2271  0012B2  50FA               	movf	pclath,w,c
  2272  0012B4  0012               	return		;indir
  2273  0012B6                     i2u65_49:
  2274                           
  2275                           ; Switch size 1, requested type "space"
  2276                           ; Number of cases is 2, Range of values is 2 to 3
  2277                           ; switch strategies available:
  2278                           ; Name         Instructions Cycles
  2279                           ; simple_byte            7     4 (average)
  2280                           ;	Chosen strategy is simple_byte
  2281  0012B6  0A02               	xorlw	2	; case 2
  2282  0012B8  B4D8               	btfsc	status,2,c
  2283  0012BA  D7E5               	goto	i2l430
  2284  0012BC  0A01               	xorlw	1	; case 3
  2285  0012BE  B4D8               	btfsc	status,2,c
  2286  0012C0  D7E2               	goto	i2l430
  2287  0012C2  D7E4               	goto	i2l433
  2288  0012C4                     __end_of_do_I2C_DO_ADDRESS_NACK:
  2289                           	opt stack 0
  2290                           tosu	equ	0xFFF
  2291                           tosh	equ	0xFFE
  2292                           tosl	equ	0xFFD
  2293                           pclatu	equ	0xFFB
  2294                           pclath	equ	0xFFA
  2295                           tblptru	equ	0xFF8
  2296                           tblptrh	equ	0xFF7
  2297                           tblptrl	equ	0xFF6
  2298                           tablat	equ	0xFF5
  2299                           prodh	equ	0xFF4
  2300                           prodl	equ	0xFF3
  2301                           intcon	equ	0xFF2
  2302                           postinc0	equ	0xFEE
  2303                           fsr0h	equ	0xFEA
  2304                           fsr0l	equ	0xFE9
  2305                           wreg	equ	0xFE8
  2306                           postdec1	equ	0xFE5
  2307                           fsr1h	equ	0xFE2
  2308                           fsr1l	equ	0xFE1
  2309                           indf2	equ	0xFDF
  2310                           postinc2	equ	0xFDE
  2311                           fsr2h	equ	0xFDA
  2312                           fsr2l	equ	0xFD9
  2313                           status	equ	0xFD8
  2314                           
  2315 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  2316 ;; Defined at:
  2317 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      enum E11956
  2324 ;; Registers used:
  2325 ;;		wreg, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;Total ram usage:        0 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    1
  2338 ;; This function calls:
  2339 ;;		_i2c1_driver_sendNACK
  2340 ;; This function is called by:
  2341 ;;		_do_I2C_RX
  2342 ;;		_i2c_ISR
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text16
  2347  00154E                     __ptext16:
  2348                           	opt stack 0
  2349  00154E                     _do_I2C_DO_NACK_RESTART:
  2350                           	opt stack 24
  2351                           
  2352                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  2353                           
  2354                           ;incstack = 0
  2355  00154E  ECD3  F00A         	call	_i2c1_driver_sendNACK	;wreg free
  2356                           
  2357                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  2358  001552  0E09               	movlw	9
  2359  001554  0012               	return	
  2360  001556                     __end_of_do_I2C_DO_NACK_RESTART:
  2361                           	opt stack 0
  2362                           tosu	equ	0xFFF
  2363                           tosh	equ	0xFFE
  2364                           tosl	equ	0xFFD
  2365                           pclatu	equ	0xFFB
  2366                           pclath	equ	0xFFA
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           prodh	equ	0xFF4
  2372                           prodl	equ	0xFF3
  2373                           intcon	equ	0xFF2
  2374                           postinc0	equ	0xFEE
  2375                           fsr0h	equ	0xFEA
  2376                           fsr0l	equ	0xFE9
  2377                           wreg	equ	0xFE8
  2378                           postdec1	equ	0xFE5
  2379                           fsr1h	equ	0xFE2
  2380                           fsr1l	equ	0xFE1
  2381                           indf2	equ	0xFDF
  2382                           postinc2	equ	0xFDE
  2383                           fsr2h	equ	0xFDA
  2384                           fsr2l	equ	0xFD9
  2385                           status	equ	0xFD8
  2386                           
  2387 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  2388 ;; Defined at:
  2389 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      enum E11956
  2396 ;; Registers used:
  2397 ;;		wreg, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    1
  2410 ;; This function calls:
  2411 ;;		_i2c1_driver_sendNACK
  2412 ;; This function is called by:
  2413 ;;		_do_I2C_RX
  2414 ;;		_i2c_ISR
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text17
  2419  001556                     __ptext17:
  2420                           	opt stack 0
  2421  001556                     _do_I2C_DO_NACK_STOP:
  2422                           	opt stack 24
  2423                           
  2424                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  2425                           
  2426                           ;incstack = 0
  2427  001556  ECD3  F00A         	call	_i2c1_driver_sendNACK	;wreg free
  2428                           
  2429                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  2430  00155A  0E0A               	movlw	10
  2431  00155C  0012               	return	
  2432  00155E                     __end_of_do_I2C_DO_NACK_STOP:
  2433                           	opt stack 0
  2434                           tosu	equ	0xFFF
  2435                           tosh	equ	0xFFE
  2436                           tosl	equ	0xFFD
  2437                           pclatu	equ	0xFFB
  2438                           pclath	equ	0xFFA
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           intcon	equ	0xFF2
  2446                           postinc0	equ	0xFEE
  2447                           fsr0h	equ	0xFEA
  2448                           fsr0l	equ	0xFE9
  2449                           wreg	equ	0xFE8
  2450                           postdec1	equ	0xFE5
  2451                           fsr1h	equ	0xFE2
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           postinc2	equ	0xFDE
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _do_I2C_DO_ACK *****************
  2460 ;; Defined at:
  2461 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      enum E11956
  2468 ;; Registers used:
  2469 ;;		wreg, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    1
  2482 ;; This function calls:
  2483 ;;		_i2c1_driver_sendACK
  2484 ;; This function is called by:
  2485 ;;		_i2c_ISR
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text18
  2490  00155E                     __ptext18:
  2491                           	opt stack 0
  2492  00155E                     _do_I2C_DO_ACK:
  2493                           	opt stack 25
  2494                           
  2495                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  2496                           
  2497                           ;incstack = 0
  2498  00155E  ECD6  F00A         	call	_i2c1_driver_sendACK	;wreg free
  2499                           
  2500                           ;i2c_master.c: 302: return I2C_RCEN;
  2501  001562  0E05               	movlw	5
  2502  001564  0012               	return	
  2503  001566                     __end_of_do_I2C_DO_ACK:
  2504                           	opt stack 0
  2505                           tosu	equ	0xFFF
  2506                           tosh	equ	0xFFE
  2507                           tosl	equ	0xFFD
  2508                           pclatu	equ	0xFFB
  2509                           pclath	equ	0xFFA
  2510                           tblptru	equ	0xFF8
  2511                           tblptrh	equ	0xFF7
  2512                           tblptrl	equ	0xFF6
  2513                           tablat	equ	0xFF5
  2514                           prodh	equ	0xFF4
  2515                           prodl	equ	0xFF3
  2516                           intcon	equ	0xFF2
  2517                           postinc0	equ	0xFEE
  2518                           fsr0h	equ	0xFEA
  2519                           fsr0l	equ	0xFE9
  2520                           wreg	equ	0xFE8
  2521                           postdec1	equ	0xFE5
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _do_I2C_RCEN *****************
  2531 ;; Defined at:
  2532 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      enum E11956
  2539 ;; Registers used:
  2540 ;;		wreg, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    1
  2553 ;; This function calls:
  2554 ;;		_i2c1_driver_startRX
  2555 ;; This function is called by:
  2556 ;;		_i2c_ISR
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text19
  2561  00153A                     __ptext19:
  2562                           	opt stack 0
  2563  00153A                     _do_I2C_RCEN:
  2564                           	opt stack 25
  2565                           
  2566                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  2567                           
  2568                           ;incstack = 0
  2569  00153A  9601               	bcf	_i2c_status,3,c
  2570                           
  2571                           ;i2c_master.c: 295: i2c1_driver_startRX();
  2572  00153C  ECDD  F00A         	call	_i2c1_driver_startRX	;wreg free
  2573                           
  2574                           ;i2c_master.c: 296: return I2C_RX;
  2575  001540  0E04               	movlw	4
  2576  001542  0012               	return	
  2577  001544                     __end_of_do_I2C_RCEN:
  2578                           	opt stack 0
  2579                           tosu	equ	0xFFF
  2580                           tosh	equ	0xFFE
  2581                           tosl	equ	0xFFD
  2582                           pclatu	equ	0xFFB
  2583                           pclath	equ	0xFFA
  2584                           tblptru	equ	0xFF8
  2585                           tblptrh	equ	0xFF7
  2586                           tblptrl	equ	0xFF6
  2587                           tablat	equ	0xFF5
  2588                           prodh	equ	0xFF4
  2589                           prodl	equ	0xFF3
  2590                           intcon	equ	0xFF2
  2591                           postinc0	equ	0xFEE
  2592                           fsr0h	equ	0xFEA
  2593                           fsr0l	equ	0xFE9
  2594                           wreg	equ	0xFE8
  2595                           postdec1	equ	0xFE5
  2596                           fsr1h	equ	0xFE2
  2597                           fsr1l	equ	0xFE1
  2598                           indf2	equ	0xFDF
  2599                           postinc2	equ	0xFDE
  2600                           fsr2h	equ	0xFDA
  2601                           fsr2l	equ	0xFD9
  2602                           status	equ	0xFD8
  2603                           
  2604 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  2605 ;; Defined at:
  2606 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      enum E11956
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    1
  2627 ;; This function calls:
  2628 ;;		_i2c1_driver_TXData
  2629 ;; This function is called by:
  2630 ;;		_i2c_ISR
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text20
  2635  001510                     __ptext20:
  2636                           	opt stack 0
  2637  001510                     _do_I2C_SEND_ADR_WRITE:
  2638                           	opt stack 25
  2639                           
  2640                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  2641                           
  2642                           ;incstack = 0
  2643  001510  8601               	bsf	_i2c_status,3,c
  2644                           
  2645                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  2646  001512  5002               	movf	_i2c_status+1,w,c
  2647  001514  2402               	addwf	_i2c_status+1,w,c
  2648  001516  ECC3  F00A         	call	_i2c1_driver_TXData
  2649                           
  2650                           ;i2c_master.c: 289: return I2C_TX;
  2651  00151A  0E03               	movlw	3
  2652  00151C  0012               	return	
  2653  00151E                     __end_of_do_I2C_SEND_ADR_WRITE:
  2654                           	opt stack 0
  2655                           tosu	equ	0xFFF
  2656                           tosh	equ	0xFFE
  2657                           tosl	equ	0xFFD
  2658                           pclatu	equ	0xFFB
  2659                           pclath	equ	0xFFA
  2660                           tblptru	equ	0xFF8
  2661                           tblptrh	equ	0xFF7
  2662                           tblptrl	equ	0xFF6
  2663                           tablat	equ	0xFF5
  2664                           prodh	equ	0xFF4
  2665                           prodl	equ	0xFF3
  2666                           intcon	equ	0xFF2
  2667                           postinc0	equ	0xFEE
  2668                           fsr0h	equ	0xFEA
  2669                           fsr0l	equ	0xFE9
  2670                           wreg	equ	0xFE8
  2671                           postdec1	equ	0xFE5
  2672                           fsr1h	equ	0xFE2
  2673                           fsr1l	equ	0xFE1
  2674                           indf2	equ	0xFDF
  2675                           postinc2	equ	0xFDE
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  2681 ;; Defined at:
  2682 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      enum E11956
  2689 ;; Registers used:
  2690 ;;		wreg, status,0, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		_i2c1_driver_TXData
  2705 ;; This function is called by:
  2706 ;;		_i2c_ISR
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text21
  2711  00151E                     __ptext21:
  2712                           	opt stack 0
  2713  00151E                     _do_I2C_SEND_ADR_READ:
  2714                           	opt stack 25
  2715                           
  2716                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  2717                           
  2718                           ;incstack = 0
  2719  00151E  8601               	bsf	_i2c_status,3,c
  2720                           
  2721                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  2722  001520  80D8               	bsf	status,0,c
  2723  001522  3402               	rlcf	_i2c_status+1,w,c
  2724  001524  ECC3  F00A         	call	_i2c1_driver_TXData
  2725                           
  2726                           ;i2c_master.c: 282: return I2C_RCEN;
  2727  001528  0E05               	movlw	5
  2728  00152A  0012               	return	
  2729  00152C                     __end_of_do_I2C_SEND_ADR_READ:
  2730                           	opt stack 0
  2731                           tosu	equ	0xFFF
  2732                           tosh	equ	0xFFE
  2733                           tosl	equ	0xFFD
  2734                           pclatu	equ	0xFFB
  2735                           pclath	equ	0xFFA
  2736                           tblptru	equ	0xFF8
  2737                           tblptrh	equ	0xFF7
  2738                           tblptrl	equ	0xFF6
  2739                           tablat	equ	0xFF5
  2740                           prodh	equ	0xFF4
  2741                           prodl	equ	0xFF3
  2742                           intcon	equ	0xFF2
  2743                           postinc0	equ	0xFEE
  2744                           fsr0h	equ	0xFEA
  2745                           fsr0l	equ	0xFE9
  2746                           wreg	equ	0xFE8
  2747                           postdec1	equ	0xFE5
  2748                           fsr1h	equ	0xFE2
  2749                           fsr1l	equ	0xFE1
  2750                           indf2	equ	0xFDF
  2751                           postinc2	equ	0xFDE
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           status	equ	0xFD8
  2755                           
  2756 ;; *************** function _do_I2C_SEND_STOP *****************
  2757 ;; Defined at:
  2758 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      enum E11956
  2765 ;; Registers used:
  2766 ;;		wreg, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;Total ram usage:        0 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    1
  2779 ;; This function calls:
  2780 ;;		_i2c1_driver_stop
  2781 ;; This function is called by:
  2782 ;;		_do_I2C_DO_ADDRESS_NACK
  2783 ;;		_do_I2C_TX
  2784 ;;		_do_I2C_TX_EMPTY
  2785 ;;		_i2c_ISR
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text22
  2790  001566                     __ptext22:
  2791                           	opt stack 0
  2792  001566                     _do_I2C_SEND_STOP:
  2793                           	opt stack 24
  2794                           
  2795                           ;i2c_master.c: 274: i2c1_driver_stop();
  2796                           
  2797                           ;incstack = 0
  2798  001566  ECE5  F00A         	call	_i2c1_driver_stop	;wreg free
  2799                           
  2800                           ;i2c_master.c: 275: return I2C_IDLE;
  2801  00156A  0E00               	movlw	0
  2802  00156C  0012               	return	
  2803  00156E                     __end_of_do_I2C_SEND_STOP:
  2804                           	opt stack 0
  2805                           tosu	equ	0xFFF
  2806                           tosh	equ	0xFFE
  2807                           tosl	equ	0xFFD
  2808                           pclatu	equ	0xFFB
  2809                           pclath	equ	0xFFA
  2810                           tblptru	equ	0xFF8
  2811                           tblptrh	equ	0xFF7
  2812                           tblptrl	equ	0xFF6
  2813                           tablat	equ	0xFF5
  2814                           prodh	equ	0xFF4
  2815                           prodl	equ	0xFF3
  2816                           intcon	equ	0xFF2
  2817                           postinc0	equ	0xFEE
  2818                           fsr0h	equ	0xFEA
  2819                           fsr0l	equ	0xFE9
  2820                           wreg	equ	0xFE8
  2821                           postdec1	equ	0xFE5
  2822                           fsr1h	equ	0xFE2
  2823                           fsr1l	equ	0xFE1
  2824                           indf2	equ	0xFDF
  2825                           postinc2	equ	0xFDE
  2826                           fsr2h	equ	0xFDA
  2827                           fsr2l	equ	0xFD9
  2828                           status	equ	0xFD8
  2829                           
  2830 ;; *************** function _do_I2C_SEND_RESTART *****************
  2831 ;; Defined at:
  2832 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      enum E11956
  2839 ;; Registers used:
  2840 ;;		wreg, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    1
  2853 ;; This function calls:
  2854 ;;		_i2c1_driver_restart
  2855 ;; This function is called by:
  2856 ;;		_do_I2C_DO_ADDRESS_NACK
  2857 ;;		_do_I2C_TX_EMPTY
  2858 ;;		_i2c_ISR
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text23
  2863  00156E                     __ptext23:
  2864                           	opt stack 0
  2865  00156E                     _do_I2C_SEND_RESTART:
  2866                           	opt stack 24
  2867                           
  2868                           ;i2c_master.c: 268: i2c1_driver_restart();
  2869                           
  2870                           ;incstack = 0
  2871  00156E  ECE7  F00A         	call	_i2c1_driver_restart	;wreg free
  2872                           
  2873                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  2874  001572  0E01               	movlw	1
  2875  001574  0012               	return	
  2876  001576                     __end_of_do_I2C_SEND_RESTART:
  2877                           	opt stack 0
  2878                           tosu	equ	0xFFF
  2879                           tosh	equ	0xFFE
  2880                           tosl	equ	0xFFD
  2881                           pclatu	equ	0xFFB
  2882                           pclath	equ	0xFFA
  2883                           tblptru	equ	0xFF8
  2884                           tblptrh	equ	0xFF7
  2885                           tblptrl	equ	0xFF6
  2886                           tablat	equ	0xFF5
  2887                           prodh	equ	0xFF4
  2888                           prodl	equ	0xFF3
  2889                           intcon	equ	0xFF2
  2890                           postinc0	equ	0xFEE
  2891                           fsr0h	equ	0xFEA
  2892                           fsr0l	equ	0xFE9
  2893                           wreg	equ	0xFE8
  2894                           postdec1	equ	0xFE5
  2895                           fsr1h	equ	0xFE2
  2896                           fsr1l	equ	0xFE1
  2897                           indf2	equ	0xFDF
  2898                           postinc2	equ	0xFDE
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  2904 ;; Defined at:
  2905 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      enum E11956
  2912 ;; Registers used:
  2913 ;;		wreg, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    1
  2926 ;; This function calls:
  2927 ;;		_i2c1_driver_restart
  2928 ;; This function is called by:
  2929 ;;		_do_I2C_TX
  2930 ;;		_i2c_ISR
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text24
  2935  001576                     __ptext24:
  2936                           	opt stack 0
  2937  001576                     _do_I2C_SEND_RESTART_WRITE:
  2938                           	opt stack 24
  2939                           
  2940                           ;i2c_master.c: 262: i2c1_driver_restart();
  2941                           
  2942                           ;incstack = 0
  2943  001576  ECE7  F00A         	call	_i2c1_driver_restart	;wreg free
  2944                           
  2945                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  2946  00157A  0E02               	movlw	2
  2947  00157C  0012               	return	
  2948  00157E                     __end_of_do_I2C_SEND_RESTART_WRITE:
  2949                           	opt stack 0
  2950                           tosu	equ	0xFFF
  2951                           tosh	equ	0xFFE
  2952                           tosl	equ	0xFFD
  2953                           pclatu	equ	0xFFB
  2954                           pclath	equ	0xFFA
  2955                           tblptru	equ	0xFF8
  2956                           tblptrh	equ	0xFF7
  2957                           tblptrl	equ	0xFF6
  2958                           tablat	equ	0xFF5
  2959                           prodh	equ	0xFF4
  2960                           prodl	equ	0xFF3
  2961                           intcon	equ	0xFF2
  2962                           postinc0	equ	0xFEE
  2963                           fsr0h	equ	0xFEA
  2964                           fsr0l	equ	0xFE9
  2965                           wreg	equ	0xFE8
  2966                           postdec1	equ	0xFE5
  2967                           fsr1h	equ	0xFE2
  2968                           fsr1l	equ	0xFE1
  2969                           indf2	equ	0xFDF
  2970                           postinc2	equ	0xFDE
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  2976 ;; Defined at:
  2977 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      enum E11956
  2984 ;; Registers used:
  2985 ;;		wreg, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    1
  2998 ;; This function calls:
  2999 ;;		_i2c1_driver_restart
  3000 ;; This function is called by:
  3001 ;;		_do_I2C_TX
  3002 ;;		_i2c_ISR
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text25
  3007  00157E                     __ptext25:
  3008                           	opt stack 0
  3009  00157E                     _do_I2C_SEND_RESTART_READ:
  3010                           	opt stack 24
  3011                           
  3012                           ;i2c_master.c: 256: i2c1_driver_restart();
  3013                           
  3014                           ;incstack = 0
  3015  00157E  ECE7  F00A         	call	_i2c1_driver_restart	;wreg free
  3016                           
  3017                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  3018  001582  0E01               	movlw	1
  3019  001584  0012               	return	
  3020  001586                     __end_of_do_I2C_SEND_RESTART_READ:
  3021                           	opt stack 0
  3022                           tosu	equ	0xFFF
  3023                           tosh	equ	0xFFE
  3024                           tosl	equ	0xFFD
  3025                           pclatu	equ	0xFFB
  3026                           pclath	equ	0xFFA
  3027                           tblptru	equ	0xFF8
  3028                           tblptrh	equ	0xFF7
  3029                           tblptrl	equ	0xFF6
  3030                           tablat	equ	0xFF5
  3031                           prodh	equ	0xFF4
  3032                           prodl	equ	0xFF3
  3033                           intcon	equ	0xFF2
  3034                           postinc0	equ	0xFEE
  3035                           fsr0h	equ	0xFEA
  3036                           fsr0l	equ	0xFE9
  3037                           wreg	equ	0xFE8
  3038                           postdec1	equ	0xFE5
  3039                           fsr1h	equ	0xFE2
  3040                           fsr1l	equ	0xFE1
  3041                           indf2	equ	0xFDF
  3042                           postinc2	equ	0xFDE
  3043                           fsr2h	equ	0xFDA
  3044                           fsr2l	equ	0xFD9
  3045                           status	equ	0xFD8
  3046                           
  3047 ;; *************** function _do_I2C_IDLE *****************
  3048 ;; Defined at:
  3049 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      enum E11956
  3056 ;; Registers used:
  3057 ;;		wreg, status,2
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_i2c_ISR
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text26
  3077  001544                     __ptext26:
  3078                           	opt stack 0
  3079  001544                     _do_I2C_IDLE:
  3080                           	opt stack 26
  3081                           
  3082                           ;i2c_master.c: 249: i2c_status.busy = 0;
  3083                           
  3084                           ;incstack = 0
  3085  001544  9001               	bcf	_i2c_status,0,c
  3086                           
  3087                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  3088  001546  0E00               	movlw	0
  3089  001548  6E0C               	movwf	_i2c_status+11,c
  3090                           
  3091                           ;i2c_master.c: 251: return I2C_RESET;
  3092  00154A  0E0E               	movlw	14
  3093  00154C  0012               	return	
  3094  00154E                     __end_of_do_I2C_IDLE:
  3095                           	opt stack 0
  3096                           tosu	equ	0xFFF
  3097                           tosh	equ	0xFFE
  3098                           tosl	equ	0xFFD
  3099                           pclatu	equ	0xFFB
  3100                           pclath	equ	0xFFA
  3101                           tblptru	equ	0xFF8
  3102                           tblptrh	equ	0xFF7
  3103                           tblptrl	equ	0xFF6
  3104                           tablat	equ	0xFF5
  3105                           prodh	equ	0xFF4
  3106                           prodl	equ	0xFF3
  3107                           intcon	equ	0xFF2
  3108                           postinc0	equ	0xFEE
  3109                           fsr0h	equ	0xFEA
  3110                           fsr0l	equ	0xFE9
  3111                           wreg	equ	0xFE8
  3112                           postdec1	equ	0xFE5
  3113                           fsr1h	equ	0xFE2
  3114                           fsr1l	equ	0xFE1
  3115                           indf2	equ	0xFDF
  3116                           postinc2	equ	0xFDE
  3117                           fsr2h	equ	0xFDA
  3118                           fsr2l	equ	0xFD9
  3119                           status	equ	0xFD8
  3120                           
  3121 ;; *************** function _do_I2C_RESET *****************
  3122 ;; Defined at:
  3123 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      enum E11956
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3141 ;;Total ram usage:        0 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    1
  3144 ;; This function calls:
  3145 ;;		_i2c1_driver_resetBus
  3146 ;; This function is called by:
  3147 ;;		_i2c_ISR
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text27
  3152  00152C                     __ptext27:
  3153                           	opt stack 0
  3154  00152C                     _do_I2C_RESET:
  3155                           	opt stack 25
  3156                           
  3157                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  3158                           
  3159                           ;incstack = 0
  3160  00152C  ECE9  F00A         	call	_i2c1_driver_resetBus	;wreg free
  3161                           
  3162                           ;i2c_master.c: 242: i2c_status.busy = 0;
  3163  001530  9001               	bcf	_i2c_status,0,c
  3164                           
  3165                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  3166  001532  0E00               	movlw	0
  3167  001534  6E0C               	movwf	_i2c_status+11,c
  3168                           
  3169                           ;i2c_master.c: 244: return I2C_RESET;
  3170  001536  0E0E               	movlw	14
  3171  001538  0012               	return	
  3172  00153A                     __end_of_do_I2C_RESET:
  3173                           	opt stack 0
  3174                           tosu	equ	0xFFF
  3175                           tosh	equ	0xFFE
  3176                           tosl	equ	0xFFD
  3177                           pclatu	equ	0xFFB
  3178                           pclath	equ	0xFFA
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           prodh	equ	0xFF4
  3184                           prodl	equ	0xFF3
  3185                           intcon	equ	0xFF2
  3186                           postinc0	equ	0xFEE
  3187                           fsr0h	equ	0xFEA
  3188                           fsr0l	equ	0xFE9
  3189                           wreg	equ	0xFE8
  3190                           postdec1	equ	0xFE5
  3191                           fsr1h	equ	0xFE2
  3192                           fsr1l	equ	0xFE1
  3193                           indf2	equ	0xFDF
  3194                           postinc2	equ	0xFDE
  3195                           fsr2h	equ	0xFDA
  3196                           fsr2l	equ	0xFD9
  3197                           status	equ	0xFD8
  3198                           
  3199 ;; *************** function _do_I2C_TX_EMPTY *****************
  3200 ;; Defined at:
  3201 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      enum E11956
  3208 ;; Registers used:
  3209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    3
  3222 ;; This function calls:
  3223 ;;		Absolute function
  3224 ;;		_do_I2C_SEND_RESTART
  3225 ;;		_do_I2C_SEND_STOP
  3226 ;;		_i2c_restartWrite
  3227 ;;		_mssp1_setIRQ
  3228 ;;		_rd1RegCompleteHandler
  3229 ;;		_rd2RegCompleteHandler
  3230 ;;		_rdBlkRegCompleteHandler
  3231 ;;		_returnReset
  3232 ;;		_returnStop
  3233 ;;		_wr1RegCompleteHandler
  3234 ;;		_wr2RegCompleteHandler
  3235 ;; This function is called by:
  3236 ;;		_i2c_ISR
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text28
  3241  001228                     __ptext28:
  3242                           	opt stack 0
  3243  001228                     _do_I2C_TX_EMPTY:
  3244                           	opt stack 23
  3245                           
  3246                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  3247                           
  3248                           ;incstack = 0
  3249  001228  8401               	bsf	_i2c_status,2,c
  3250                           
  3251                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  3252  00122A  D00A               	goto	i2l465
  3253  00122C                     
  3254                           ;i2c_master.c: 388: case i2c_restart_write:
  3255                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  3256  00122C  ECB7  F00A         	call	_do_I2C_SEND_RESTART	;wreg free
  3257  001230  0012               	return	
  3258  001232                     
  3259                           ;i2c_master.c: 391: mssp1_setIRQ();
  3260  001232  ECD0  F00A         	call	_mssp1_setIRQ	;wreg free
  3261                           
  3262                           ;i2c_master.c: 392: return I2C_TX;
  3263  001236  0E03               	movlw	3
  3264  001238  0012               	return	
  3265  00123A                     
  3266                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  3267                           
  3268                           ;i2c_master.c: 394: case i2c_stop:
  3269  00123A  ECB3  F00A         	call	_do_I2C_SEND_STOP	;wreg free
  3270                           
  3271                           ;i2c_master.c: 396: }
  3272  00123E  0012               	return	
  3273  001240                     i2l465:
  3274  001240  C01F  F03C         	movff	_i2c_status+30,rdBlkRegCompleteHandler@p
  3275  001244  C020  F03D         	movff	_i2c_status+31,rdBlkRegCompleteHandler@p+1
  3276  001248  EE20  F00D         	lfsr	2,_i2c_status+12
  3277  00124C  D801               	call	i2u71_48
  3278  00124E  D00A               	goto	i2u71_49
  3279  001250                     i2u71_48:
  3280  001250  0005               	push	
  3281  001252  6EFA               	movwf	pclath,c
  3282  001254  50DE               	movf	postinc2,w,c
  3283  001256  6EFD               	movwf	tosl,c
  3284  001258  50DE               	movf	postinc2,w,c
  3285  00125A  6EFE               	movwf	tosh,c
  3286  00125C  50DE               	movf	postinc2,w,c
  3287  00125E  6EFF               	movwf	tosu,c
  3288  001260  50FA               	movf	pclath,w,c
  3289  001262  0012               	return		;indir
  3290  001264                     i2u71_49:
  3291                           
  3292                           ; Switch size 1, requested type "space"
  3293                           ; Number of cases is 4, Range of values is 1 to 4
  3294                           ; switch strategies available:
  3295                           ; Name         Instructions Cycles
  3296                           ; simple_byte           13     7 (average)
  3297                           ;	Chosen strategy is simple_byte
  3298  001264  0A01               	xorlw	1	; case 1
  3299  001266  B4D8               	btfsc	status,2,c
  3300  001268  D7E8               	goto	i2l470
  3301  00126A  0A03               	xorlw	3	; case 2
  3302  00126C  B4D8               	btfsc	status,2,c
  3303  00126E  D7DE               	goto	i2l466
  3304  001270  0A01               	xorlw	1	; case 3
  3305  001272  B4D8               	btfsc	status,2,c
  3306  001274  D7DB               	goto	i2l466
  3307  001276  0A07               	xorlw	7	; case 4
  3308  001278  B4D8               	btfsc	status,2,c
  3309  00127A  D7DB               	goto	i2l469
  3310  00127C  D7DE               	goto	i2l470
  3311  00127E                     __end_of_do_I2C_TX_EMPTY:
  3312                           	opt stack 0
  3313                           tosu	equ	0xFFF
  3314                           tosh	equ	0xFFE
  3315                           tosl	equ	0xFFD
  3316                           pclatu	equ	0xFFB
  3317                           pclath	equ	0xFFA
  3318                           tblptru	equ	0xFF8
  3319                           tblptrh	equ	0xFF7
  3320                           tblptrl	equ	0xFF6
  3321                           tablat	equ	0xFF5
  3322                           prodh	equ	0xFF4
  3323                           prodl	equ	0xFF3
  3324                           intcon	equ	0xFF2
  3325                           postinc0	equ	0xFEE
  3326                           fsr0h	equ	0xFEA
  3327                           fsr0l	equ	0xFE9
  3328                           wreg	equ	0xFE8
  3329                           postdec1	equ	0xFE5
  3330                           fsr1h	equ	0xFE2
  3331                           fsr1l	equ	0xFE1
  3332                           indf2	equ	0xFDF
  3333                           postinc2	equ	0xFDE
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function _mssp1_setIRQ *****************
  3339 ;; Defined at:
  3340 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;		None
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;		None
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		None
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3358 ;;Total ram usage:        0 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_do_I2C_TX_EMPTY
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text29
  3368  0015A0                     __ptext29:
  3369                           	opt stack 0
  3370  0015A0                     _mssp1_setIRQ:
  3371                           	opt stack 25
  3372                           
  3373                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  3374                           
  3375                           ;incstack = 0
  3376  0015A0  010E               	movlb	14	; () banked
  3377  0015A2  81CD               	bsf	205,0,b	;volatile
  3378                           
  3379                           ; BSR set to: 14
  3380  0015A4  0012               	return		;funcret
  3381  0015A6                     __end_of_mssp1_setIRQ:
  3382                           	opt stack 0
  3383                           tosu	equ	0xFFF
  3384                           tosh	equ	0xFFE
  3385                           tosl	equ	0xFFD
  3386                           pclatu	equ	0xFFB
  3387                           pclath	equ	0xFFA
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           prodh	equ	0xFF4
  3393                           prodl	equ	0xFF3
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           fsr0h	equ	0xFEA
  3397                           fsr0l	equ	0xFE9
  3398                           wreg	equ	0xFE8
  3399                           postdec1	equ	0xFE5
  3400                           fsr1h	equ	0xFE2
  3401                           fsr1l	equ	0xFE1
  3402                           indf2	equ	0xFDF
  3403                           postinc2	equ	0xFDE
  3404                           fsr2h	equ	0xFDA
  3405                           fsr2l	equ	0xFD9
  3406                           status	equ	0xFD8
  3407                           
  3408 ;; *************** function _i2c1_driver_isNACK *****************
  3409 ;; Defined at:
  3410 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;		None               void
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3428 ;;Total ram usage:        1 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_do_I2C_TX
  3434 ;;		_i2c_ISR
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text30
  3439  0014D6                     __ptext30:
  3440                           	opt stack 0
  3441  0014D6                     _i2c1_driver_isNACK:
  3442                           	opt stack 26
  3443                           
  3444                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  3445                           
  3446                           ; BSR set to: 14
  3447                           ;incstack = 0
  3448  0014D6  5097               	movf	3991,w,c	;volatile
  3449  0014D8  0BBF               	andlw	-65
  3450  0014DA  0940               	iorlw	64
  3451  0014DC  6E97               	movwf	3991,c	;volatile
  3452  0014DE  3897               	swapf	3991,w,c	;volatile
  3453  0014E0  32E8               	rrcf	wreg,f,c
  3454  0014E2  32E8               	rrcf	wreg,f,c
  3455  0014E4  0B01               	andlw	1
  3456  0014E6  6E31               	movwf	??_i2c1_driver_isNACK& (0+255),c
  3457  0014E8  3031               	rrcf	??_i2c1_driver_isNACK,w,c
  3458  0014EA  0012               	return	
  3459  0014EC                     __end_of_i2c1_driver_isNACK:
  3460                           	opt stack 0
  3461                           tosu	equ	0xFFF
  3462                           tosh	equ	0xFFE
  3463                           tosl	equ	0xFFD
  3464                           pclatu	equ	0xFFB
  3465                           pclath	equ	0xFFA
  3466                           tblptru	equ	0xFF8
  3467                           tblptrh	equ	0xFF7
  3468                           tblptrl	equ	0xFF6
  3469                           tablat	equ	0xFF5
  3470                           prodh	equ	0xFF4
  3471                           prodl	equ	0xFF3
  3472                           intcon	equ	0xFF2
  3473                           postinc0	equ	0xFEE
  3474                           fsr0h	equ	0xFEA
  3475                           fsr0l	equ	0xFE9
  3476                           wreg	equ	0xFE8
  3477                           postdec1	equ	0xFE5
  3478                           fsr1h	equ	0xFE2
  3479                           fsr1l	equ	0xFE1
  3480                           indf2	equ	0xFDF
  3481                           postinc2	equ	0xFDE
  3482                           fsr2h	equ	0xFDA
  3483                           fsr2l	equ	0xFD9
  3484                           status	equ	0xFD8
  3485                           
  3486 ;; *************** function _i2c1_driver_TXData *****************
  3487 ;; Defined at:
  3488 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  d               1    wreg     unsigned char 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  d               1    0[COMRAM] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3505 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3506 ;;Total ram usage:        1 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_do_I2C_SEND_ADR_READ
  3512 ;;		_do_I2C_SEND_ADR_WRITE
  3513 ;;		_do_I2C_TX
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text31
  3518  001586                     __ptext31:
  3519                           	opt stack 0
  3520  001586                     _i2c1_driver_TXData:
  3521                           	opt stack 25
  3522                           
  3523                           ;incstack = 0
  3524                           ;i2c1_driver_TXData@d stored from wreg
  3525  001586  6E31               	movwf	i2c1_driver_TXData@d,c
  3526                           
  3527                           ;i2c1_driver.c: 188: SSP1BUF = d;
  3528  001588  C031  FF92         	movff	i2c1_driver_TXData@d,3986	;volatile
  3529  00158C  0012               	return		;funcret
  3530  00158E                     __end_of_i2c1_driver_TXData:
  3531                           	opt stack 0
  3532                           tosu	equ	0xFFF
  3533                           tosh	equ	0xFFE
  3534                           tosl	equ	0xFFD
  3535                           pclatu	equ	0xFFB
  3536                           pclath	equ	0xFFA
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           prodh	equ	0xFF4
  3542                           prodl	equ	0xFF3
  3543                           intcon	equ	0xFF2
  3544                           postinc0	equ	0xFEE
  3545                           fsr0h	equ	0xFEA
  3546                           fsr0l	equ	0xFE9
  3547                           wreg	equ	0xFE8
  3548                           postdec1	equ	0xFE5
  3549                           fsr1h	equ	0xFE2
  3550                           fsr1l	equ	0xFE1
  3551                           indf2	equ	0xFDF
  3552                           postinc2	equ	0xFDE
  3553                           fsr2h	equ	0xFDA
  3554                           fsr2l	equ	0xFD9
  3555                           status	equ	0xFD8
  3556                           
  3557 ;; *************** function _i2c1_driver_getRXData *****************
  3558 ;; Defined at:
  3559 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;		None
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      unsigned char 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3577 ;;Total ram usage:        0 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_do_I2C_RX
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text32
  3587  0015B6                     __ptext32:
  3588                           	opt stack 0
  3589  0015B6                     _i2c1_driver_getRXData:
  3590                           	opt stack 25
  3591                           
  3592                           ;i2c1_driver.c: 173: return SSP1BUF;
  3593                           
  3594                           ;incstack = 0
  3595  0015B6  5092               	movf	3986,w,c	;volatile
  3596  0015B8  0012               	return	
  3597  0015BA                     __end_of_i2c1_driver_getRXData:
  3598                           	opt stack 0
  3599                           tosu	equ	0xFFF
  3600                           tosh	equ	0xFFE
  3601                           tosl	equ	0xFFD
  3602                           pclatu	equ	0xFFB
  3603                           pclath	equ	0xFFA
  3604                           tblptru	equ	0xFF8
  3605                           tblptrh	equ	0xFF7
  3606                           tblptrl	equ	0xFF6
  3607                           tablat	equ	0xFF5
  3608                           prodh	equ	0xFF4
  3609                           prodl	equ	0xFF3
  3610                           intcon	equ	0xFF2
  3611                           postinc0	equ	0xFEE
  3612                           fsr0h	equ	0xFEA
  3613                           fsr0l	equ	0xFE9
  3614                           wreg	equ	0xFE8
  3615                           postdec1	equ	0xFE5
  3616                           fsr1h	equ	0xFE2
  3617                           fsr1l	equ	0xFE1
  3618                           indf2	equ	0xFDF
  3619                           postinc2	equ	0xFDE
  3620                           fsr2h	equ	0xFDA
  3621                           fsr2l	equ	0xFD9
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function _i2c1_driver_sendNACK *****************
  3625 ;; Defined at:
  3626 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		None
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_do_I2C_DO_NACK_STOP
  3650 ;;		_do_I2C_DO_NACK_RESTART
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text33
  3655  0015A6                     __ptext33:
  3656                           	opt stack 0
  3657  0015A6                     _i2c1_driver_sendNACK:
  3658                           	opt stack 24
  3659                           
  3660                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  3661                           
  3662                           ;incstack = 0
  3663  0015A6  8A97               	bsf	3991,5,c	;volatile
  3664                           
  3665                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  3666  0015A8  8897               	bsf	3991,4,c	;volatile
  3667  0015AA  0012               	return		;funcret
  3668  0015AC                     __end_of_i2c1_driver_sendNACK:
  3669                           	opt stack 0
  3670                           tosu	equ	0xFFF
  3671                           tosh	equ	0xFFE
  3672                           tosl	equ	0xFFD
  3673                           pclatu	equ	0xFFB
  3674                           pclath	equ	0xFFA
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           prodh	equ	0xFF4
  3680                           prodl	equ	0xFF3
  3681                           intcon	equ	0xFF2
  3682                           postinc0	equ	0xFEE
  3683                           fsr0h	equ	0xFEA
  3684                           fsr0l	equ	0xFE9
  3685                           wreg	equ	0xFE8
  3686                           postdec1	equ	0xFE5
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           indf2	equ	0xFDF
  3690                           postinc2	equ	0xFDE
  3691                           fsr2h	equ	0xFDA
  3692                           fsr2l	equ	0xFD9
  3693                           status	equ	0xFD8
  3694                           
  3695 ;; *************** function _i2c1_driver_resetBus *****************
  3696 ;; Defined at:
  3697 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		None
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3715 ;;Total ram usage:        0 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_do_I2C_RESET
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text34
  3725  0015D2                     __ptext34:
  3726                           	opt stack 0
  3727  0015D2                     _i2c1_driver_resetBus:
  3728                           	opt stack 25
  3729                           
  3730                           ;incstack = 0
  3731  0015D2  0012               	return		;funcret
  3732  0015D4                     __end_of_i2c1_driver_resetBus:
  3733                           	opt stack 0
  3734                           tosu	equ	0xFFF
  3735                           tosh	equ	0xFFE
  3736                           tosl	equ	0xFFD
  3737                           pclatu	equ	0xFFB
  3738                           pclath	equ	0xFFA
  3739                           tblptru	equ	0xFF8
  3740                           tblptrh	equ	0xFF7
  3741                           tblptrl	equ	0xFF6
  3742                           tablat	equ	0xFF5
  3743                           prodh	equ	0xFF4
  3744                           prodl	equ	0xFF3
  3745                           intcon	equ	0xFF2
  3746                           postinc0	equ	0xFEE
  3747                           fsr0h	equ	0xFEA
  3748                           fsr0l	equ	0xFE9
  3749                           wreg	equ	0xFE8
  3750                           postdec1	equ	0xFE5
  3751                           fsr1h	equ	0xFE2
  3752                           fsr1l	equ	0xFE1
  3753                           indf2	equ	0xFDF
  3754                           postinc2	equ	0xFDE
  3755                           fsr2h	equ	0xFDA
  3756                           fsr2l	equ	0xFD9
  3757                           status	equ	0xFD8
  3758                           
  3759 ;; *************** function _i2c1_driver_startRX *****************
  3760 ;; Defined at:
  3761 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		None
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;Total ram usage:        0 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_do_I2C_RCEN
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text35
  3789  0015BA                     __ptext35:
  3790                           	opt stack 0
  3791  0015BA                     _i2c1_driver_startRX:
  3792                           	opt stack 25
  3793                           
  3794                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  3795                           
  3796                           ;incstack = 0
  3797  0015BA  8697               	bsf	3991,3,c	;volatile
  3798  0015BC  0012               	return		;funcret
  3799  0015BE                     __end_of_i2c1_driver_startRX:
  3800                           	opt stack 0
  3801                           tosu	equ	0xFFF
  3802                           tosh	equ	0xFFE
  3803                           tosl	equ	0xFFD
  3804                           pclatu	equ	0xFFB
  3805                           pclath	equ	0xFFA
  3806                           tblptru	equ	0xFF8
  3807                           tblptrh	equ	0xFF7
  3808                           tblptrl	equ	0xFF6
  3809                           tablat	equ	0xFF5
  3810                           prodh	equ	0xFF4
  3811                           prodl	equ	0xFF3
  3812                           intcon	equ	0xFF2
  3813                           postinc0	equ	0xFEE
  3814                           fsr0h	equ	0xFEA
  3815                           fsr0l	equ	0xFE9
  3816                           wreg	equ	0xFE8
  3817                           postdec1	equ	0xFE5
  3818                           fsr1h	equ	0xFE2
  3819                           fsr1l	equ	0xFE1
  3820                           indf2	equ	0xFDF
  3821                           postinc2	equ	0xFDE
  3822                           fsr2h	equ	0xFDA
  3823                           fsr2l	equ	0xFD9
  3824                           status	equ	0xFD8
  3825                           
  3826 ;; *************** function _rdBlkRegCompleteHandler *****************
  3827 ;; Defined at:
  3828 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  p               2   11[COMRAM] PTR void 
  3831 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3832 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      enum E97
  3837 ;; Registers used:
  3838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    2
  3851 ;; This function calls:
  3852 ;;		_i2c_setBuffer
  3853 ;;		_i2c_setDataCompleteCallback
  3854 ;; This function is called by:
  3855 ;;		_i2c_readDataBlock
  3856 ;;		_do_I2C_DO_ADDRESS_NACK
  3857 ;;		_do_I2C_TX
  3858 ;;		_do_I2C_RX
  3859 ;;		_do_I2C_TX_EMPTY
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text36
  3864  0012C4                     __ptext36:
  3865                           	opt stack 0
  3866  0012C4                     _rdBlkRegCompleteHandler:
  3867                           	opt stack 23
  3868                           
  3869                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  3870                           
  3871                           ;incstack = 0
  3872  0012C4  EE20 F002          	lfsr	2,2
  3873  0012C8  503C               	movf	rdBlkRegCompleteHandler@p,w,c
  3874  0012CA  26D9               	addwf	fsr2l,f,c
  3875  0012CC  503D               	movf	rdBlkRegCompleteHandler@p+1,w,c
  3876  0012CE  22DA               	addwfc	fsr2h,f,c
  3877  0012D0  CFDE F031          	movff	postinc2,i2c_setBuffer@buffer
  3878  0012D4  CFDD F032          	movff	postdec2,i2c_setBuffer@buffer+1
  3879  0012D8  C03C  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
  3880  0012DC  C03D  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
  3881  0012E0  CFDE F033          	movff	postinc2,i2c_setBuffer@bufferSize
  3882  0012E4  CFDD F034          	movff	postdec2,i2c_setBuffer@bufferSize+1
  3883  0012E8  EC5F  F00A         	call	_i2c_setBuffer	;wreg free
  3884                           
  3885                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  3886  0012EC  0E00               	movlw	0
  3887  0012EE  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  3888  0012F0  0E00               	movlw	0
  3889  0012F2  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  3890  0012F4  0E00               	movlw	0
  3891  0012F6  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  3892  0012F8  0E00               	movlw	0
  3893  0012FA  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  3894  0012FC  0E00               	movlw	0
  3895  0012FE  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  3896  001300  EC45  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3897                           
  3898                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  3899  001304  0E02               	movlw	2
  3900  001306  0012               	return	
  3901  001308                     __end_of_rdBlkRegCompleteHandler:
  3902                           	opt stack 0
  3903                           tosu	equ	0xFFF
  3904                           tosh	equ	0xFFE
  3905                           tosl	equ	0xFFD
  3906                           pclatu	equ	0xFFB
  3907                           pclath	equ	0xFFA
  3908                           tblptru	equ	0xFF8
  3909                           tblptrh	equ	0xFF7
  3910                           tblptrl	equ	0xFF6
  3911                           tablat	equ	0xFF5
  3912                           prodh	equ	0xFF4
  3913                           prodl	equ	0xFF3
  3914                           intcon	equ	0xFF2
  3915                           postinc0	equ	0xFEE
  3916                           fsr0h	equ	0xFEA
  3917                           fsr0l	equ	0xFE9
  3918                           wreg	equ	0xFE8
  3919                           postdec1	equ	0xFE5
  3920                           fsr1h	equ	0xFE2
  3921                           fsr1l	equ	0xFE1
  3922                           indf2	equ	0xFDF
  3923                           postinc2	equ	0xFDE
  3924                           postdec2	equ	0xFDD
  3925                           fsr2h	equ	0xFDA
  3926                           fsr2l	equ	0xFD9
  3927                           status	equ	0xFD8
  3928                           
  3929 ;; *************** function _rd2RegCompleteHandler *****************
  3930 ;; Defined at:
  3931 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  p               2   11[COMRAM] PTR void 
  3934 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3935 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      enum E97
  3940 ;; Registers used:
  3941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3951 ;;Total ram usage:        2 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    2
  3954 ;; This function calls:
  3955 ;;		_i2c_setBuffer
  3956 ;;		_i2c_setDataCompleteCallback
  3957 ;; This function is called by:
  3958 ;;		_i2c_read2ByteRegister
  3959 ;;		_do_I2C_DO_ADDRESS_NACK
  3960 ;;		_do_I2C_TX
  3961 ;;		_do_I2C_RX
  3962 ;;		_do_I2C_TX_EMPTY
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text37
  3967  0013AE                     __ptext37:
  3968                           	opt stack 0
  3969  0013AE                     _rd2RegCompleteHandler:
  3970                           	opt stack 23
  3971                           
  3972                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  3973                           
  3974                           ;incstack = 0
  3975  0013AE  C03C  F031         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
  3976  0013B2  C03D  F032         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  3977  0013B6  0E00               	movlw	0
  3978  0013B8  6E34               	movwf	i2c_setBuffer@bufferSize+1,c
  3979  0013BA  0E02               	movlw	2
  3980  0013BC  6E33               	movwf	i2c_setBuffer@bufferSize,c
  3981  0013BE  EC5F  F00A         	call	_i2c_setBuffer	;wreg free
  3982                           
  3983                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  3984  0013C2  0E00               	movlw	0
  3985  0013C4  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  3986  0013C6  0E00               	movlw	0
  3987  0013C8  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  3988  0013CA  0E00               	movlw	0
  3989  0013CC  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  3990  0013CE  0E00               	movlw	0
  3991  0013D0  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  3992  0013D2  0E00               	movlw	0
  3993  0013D4  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  3994  0013D6  EC45  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3995                           
  3996                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  3997  0013DA  0E02               	movlw	2
  3998  0013DC  0012               	return	
  3999  0013DE                     __end_of_rd2RegCompleteHandler:
  4000                           	opt stack 0
  4001                           tosu	equ	0xFFF
  4002                           tosh	equ	0xFFE
  4003                           tosl	equ	0xFFD
  4004                           pclatu	equ	0xFFB
  4005                           pclath	equ	0xFFA
  4006                           tblptru	equ	0xFF8
  4007                           tblptrh	equ	0xFF7
  4008                           tblptrl	equ	0xFF6
  4009                           tablat	equ	0xFF5
  4010                           prodh	equ	0xFF4
  4011                           prodl	equ	0xFF3
  4012                           intcon	equ	0xFF2
  4013                           postinc0	equ	0xFEE
  4014                           fsr0h	equ	0xFEA
  4015                           fsr0l	equ	0xFE9
  4016                           wreg	equ	0xFE8
  4017                           postdec1	equ	0xFE5
  4018                           fsr1h	equ	0xFE2
  4019                           fsr1l	equ	0xFE1
  4020                           indf2	equ	0xFDF
  4021                           postinc2	equ	0xFDE
  4022                           postdec2	equ	0xFDD
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           status	equ	0xFD8
  4026                           
  4027 ;; *************** function _rd1RegCompleteHandler *****************
  4028 ;; Defined at:
  4029 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  p               2   11[COMRAM] PTR void 
  4032 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4033 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;		None
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      enum E97
  4038 ;; Registers used:
  4039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4049 ;;Total ram usage:        2 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    2
  4052 ;; This function calls:
  4053 ;;		_i2c_setBuffer
  4054 ;;		_i2c_setDataCompleteCallback
  4055 ;; This function is called by:
  4056 ;;		_i2c_read1ByteRegister
  4057 ;;		_do_I2C_DO_ADDRESS_NACK
  4058 ;;		_do_I2C_TX
  4059 ;;		_do_I2C_RX
  4060 ;;		_do_I2C_TX_EMPTY
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text38
  4065  0013DE                     __ptext38:
  4066                           	opt stack 0
  4067  0013DE                     _rd1RegCompleteHandler:
  4068                           	opt stack 23
  4069                           
  4070                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  4071                           
  4072                           ;incstack = 0
  4073  0013DE  C03C  F031         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
  4074  0013E2  C03D  F032         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4075  0013E6  0E00               	movlw	0
  4076  0013E8  6E34               	movwf	i2c_setBuffer@bufferSize+1,c
  4077  0013EA  0E01               	movlw	1
  4078  0013EC  6E33               	movwf	i2c_setBuffer@bufferSize,c
  4079  0013EE  EC5F  F00A         	call	_i2c_setBuffer	;wreg free
  4080                           
  4081                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  4082  0013F2  0E00               	movlw	0
  4083  0013F4  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  4084  0013F6  0E00               	movlw	0
  4085  0013F8  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  4086  0013FA  0E00               	movlw	0
  4087  0013FC  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  4088  0013FE  0E00               	movlw	0
  4089  001400  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  4090  001402  0E00               	movlw	0
  4091  001404  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  4092  001406  EC45  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  4093                           
  4094                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  4095  00140A  0E02               	movlw	2
  4096  00140C  0012               	return	
  4097  00140E                     __end_of_rd1RegCompleteHandler:
  4098                           	opt stack 0
  4099                           tosu	equ	0xFFF
  4100                           tosh	equ	0xFFE
  4101                           tosl	equ	0xFFD
  4102                           pclatu	equ	0xFFB
  4103                           pclath	equ	0xFFA
  4104                           tblptru	equ	0xFF8
  4105                           tblptrh	equ	0xFF7
  4106                           tblptrl	equ	0xFF6
  4107                           tablat	equ	0xFF5
  4108                           prodh	equ	0xFF4
  4109                           prodl	equ	0xFF3
  4110                           intcon	equ	0xFF2
  4111                           postinc0	equ	0xFEE
  4112                           fsr0h	equ	0xFEA
  4113                           fsr0l	equ	0xFE9
  4114                           wreg	equ	0xFE8
  4115                           postdec1	equ	0xFE5
  4116                           fsr1h	equ	0xFE2
  4117                           fsr1l	equ	0xFE1
  4118                           indf2	equ	0xFDF
  4119                           postinc2	equ	0xFDE
  4120                           postdec2	equ	0xFDD
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8
  4124                           
  4125 ;; *************** function _wr1RegCompleteHandler *****************
  4126 ;; Defined at:
  4127 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  p               2   11[COMRAM] PTR void 
  4130 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4131 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      enum E97
  4136 ;; Registers used:
  4137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4147 ;;Total ram usage:        2 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    2
  4150 ;; This function calls:
  4151 ;;		_i2c_setBuffer
  4152 ;;		_i2c_setDataCompleteCallback
  4153 ;; This function is called by:
  4154 ;;		_i2c_write1ByteRegister
  4155 ;;		_do_I2C_DO_ADDRESS_NACK
  4156 ;;		_do_I2C_TX
  4157 ;;		_do_I2C_RX
  4158 ;;		_do_I2C_TX_EMPTY
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text39
  4163  00140E                     __ptext39:
  4164                           	opt stack 0
  4165  00140E                     _wr1RegCompleteHandler:
  4166                           	opt stack 23
  4167                           
  4168                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  4169                           
  4170                           ;incstack = 0
  4171  00140E  C03C  F031         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
  4172  001412  C03D  F032         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4173  001416  0E00               	movlw	0
  4174  001418  6E34               	movwf	i2c_setBuffer@bufferSize+1,c
  4175  00141A  0E01               	movlw	1
  4176  00141C  6E33               	movwf	i2c_setBuffer@bufferSize,c
  4177  00141E  EC5F  F00A         	call	_i2c_setBuffer	;wreg free
  4178                           
  4179                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  4180  001422  0E00               	movlw	0
  4181  001424  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  4182  001426  0E00               	movlw	0
  4183  001428  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  4184  00142A  0E00               	movlw	0
  4185  00142C  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  4186  00142E  0E00               	movlw	0
  4187  001430  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  4188  001432  0E00               	movlw	0
  4189  001434  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  4190  001436  EC45  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  4191                           
  4192                           ;i2c_simple_master.c: 35: return i2c_continue;
  4193  00143A  0E04               	movlw	4
  4194  00143C  0012               	return	
  4195  00143E                     __end_of_wr1RegCompleteHandler:
  4196                           	opt stack 0
  4197                           tosu	equ	0xFFF
  4198                           tosh	equ	0xFFE
  4199                           tosl	equ	0xFFD
  4200                           pclatu	equ	0xFFB
  4201                           pclath	equ	0xFFA
  4202                           tblptru	equ	0xFF8
  4203                           tblptrh	equ	0xFF7
  4204                           tblptrl	equ	0xFF6
  4205                           tablat	equ	0xFF5
  4206                           prodh	equ	0xFF4
  4207                           prodl	equ	0xFF3
  4208                           intcon	equ	0xFF2
  4209                           postinc0	equ	0xFEE
  4210                           fsr0h	equ	0xFEA
  4211                           fsr0l	equ	0xFE9
  4212                           wreg	equ	0xFE8
  4213                           postdec1	equ	0xFE5
  4214                           fsr1h	equ	0xFE2
  4215                           fsr1l	equ	0xFE1
  4216                           indf2	equ	0xFDF
  4217                           postinc2	equ	0xFDE
  4218                           postdec2	equ	0xFDD
  4219                           fsr2h	equ	0xFDA
  4220                           fsr2l	equ	0xFD9
  4221                           status	equ	0xFD8
  4222                           
  4223 ;; *************** function _i2c_restartWrite *****************
  4224 ;; Defined at:
  4225 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  p               2   11[COMRAM] PTR void 
  4228 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4229 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      enum E96
  4234 ;; Registers used:
  4235 ;;		wreg
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4245 ;;Total ram usage:        2 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_i2c_write1ByteRegister
  4251 ;;		_i2c_writeNBytes
  4252 ;;		_i2c_read1ByteRegister
  4253 ;;		_i2c_read2ByteRegister
  4254 ;;		_i2c_write2ByteRegister
  4255 ;;		_i2c_readDataBlock
  4256 ;;		_do_I2C_DO_ADDRESS_NACK
  4257 ;;		_do_I2C_TX
  4258 ;;		_do_I2C_RX
  4259 ;;		_do_I2C_TX_EMPTY
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text40
  4264  0015BE                     __ptext40:
  4265                           	opt stack 0
  4266  0015BE                     _i2c_restartWrite:
  4267                           	opt stack 25
  4268                           
  4269                           ;i2c_types.c: 37: return i2c_restart_write;
  4270                           
  4271                           ;incstack = 0
  4272  0015BE  0E03               	movlw	3
  4273  0015C0  0012               	return	
  4274  0015C2                     __end_of_i2c_restartWrite:
  4275                           	opt stack 0
  4276                           tosu	equ	0xFFF
  4277                           tosh	equ	0xFFE
  4278                           tosl	equ	0xFFD
  4279                           pclatu	equ	0xFFB
  4280                           pclath	equ	0xFFA
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           intcon	equ	0xFF2
  4288                           postinc0	equ	0xFEE
  4289                           fsr0h	equ	0xFEA
  4290                           fsr0l	equ	0xFE9
  4291                           wreg	equ	0xFE8
  4292                           postdec1	equ	0xFE5
  4293                           fsr1h	equ	0xFE2
  4294                           fsr1l	equ	0xFE1
  4295                           indf2	equ	0xFDF
  4296                           postinc2	equ	0xFDE
  4297                           postdec2	equ	0xFDD
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8
  4301                           
  4302 ;; *************** function _returnReset *****************
  4303 ;; Defined at:
  4304 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  p               2   11[COMRAM] PTR void 
  4307 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4308 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      enum E11790
  4313 ;; Registers used:
  4314 ;;		wreg
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4324 ;;Total ram usage:        2 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; This function calls:
  4327 ;;		Nothing
  4328 ;; This function is called by:
  4329 ;;		_i2c_open
  4330 ;;		_do_I2C_DO_ADDRESS_NACK
  4331 ;;		_do_I2C_TX
  4332 ;;		_do_I2C_RX
  4333 ;;		_do_I2C_TX_EMPTY
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text41
  4338  0015C2                     __ptext41:
  4339                           	opt stack 0
  4340  0015C2                     _returnReset:
  4341                           	opt stack 25
  4342                           
  4343                           ;i2c_master.c: 450: return i2c_reset_link;
  4344                           
  4345                           ;incstack = 0
  4346  0015C2  0E05               	movlw	5
  4347  0015C4  0012               	return	
  4348  0015C6                     __end_of_returnReset:
  4349                           	opt stack 0
  4350                           tosu	equ	0xFFF
  4351                           tosh	equ	0xFFE
  4352                           tosl	equ	0xFFD
  4353                           pclatu	equ	0xFFB
  4354                           pclath	equ	0xFFA
  4355                           tblptru	equ	0xFF8
  4356                           tblptrh	equ	0xFF7
  4357                           tblptrl	equ	0xFF6
  4358                           tablat	equ	0xFF5
  4359                           prodh	equ	0xFF4
  4360                           prodl	equ	0xFF3
  4361                           intcon	equ	0xFF2
  4362                           postinc0	equ	0xFEE
  4363                           fsr0h	equ	0xFEA
  4364                           fsr0l	equ	0xFE9
  4365                           wreg	equ	0xFE8
  4366                           postdec1	equ	0xFE5
  4367                           fsr1h	equ	0xFE2
  4368                           fsr1l	equ	0xFE1
  4369                           indf2	equ	0xFDF
  4370                           postinc2	equ	0xFDE
  4371                           postdec2	equ	0xFDD
  4372                           fsr2h	equ	0xFDA
  4373                           fsr2l	equ	0xFD9
  4374                           status	equ	0xFD8
  4375                           
  4376 ;; *************** function _returnStop *****************
  4377 ;; Defined at:
  4378 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  p               2   11[COMRAM] PTR void 
  4381 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4382 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      enum E11790
  4387 ;; Registers used:
  4388 ;;		wreg
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4398 ;;Total ram usage:        2 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_setCallBack
  4404 ;;		_i2c_open
  4405 ;;		_do_I2C_DO_ADDRESS_NACK
  4406 ;;		_do_I2C_TX
  4407 ;;		_do_I2C_RX
  4408 ;;		_do_I2C_TX_EMPTY
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text42
  4413  0015C6                     __ptext42:
  4414                           	opt stack 0
  4415  0015C6                     _returnStop:
  4416                           	opt stack 25
  4417                           
  4418                           ;i2c_master.c: 445: return i2c_stop;
  4419                           
  4420                           ;incstack = 0
  4421  0015C6  0E01               	movlw	1
  4422  0015C8  0012               	return	
  4423  0015CA                     __end_of_returnStop:
  4424                           	opt stack 0
  4425                           tosu	equ	0xFFF
  4426                           tosh	equ	0xFFE
  4427                           tosl	equ	0xFFD
  4428                           pclatu	equ	0xFFB
  4429                           pclath	equ	0xFFA
  4430                           tblptru	equ	0xFF8
  4431                           tblptrh	equ	0xFF7
  4432                           tblptrl	equ	0xFF6
  4433                           tablat	equ	0xFF5
  4434                           prodh	equ	0xFF4
  4435                           prodl	equ	0xFF3
  4436                           intcon	equ	0xFF2
  4437                           postinc0	equ	0xFEE
  4438                           fsr0h	equ	0xFEA
  4439                           fsr0l	equ	0xFE9
  4440                           wreg	equ	0xFE8
  4441                           postdec1	equ	0xFE5
  4442                           fsr1h	equ	0xFE2
  4443                           fsr1l	equ	0xFE1
  4444                           indf2	equ	0xFDF
  4445                           postinc2	equ	0xFDE
  4446                           postdec2	equ	0xFDD
  4447                           fsr2h	equ	0xFDA
  4448                           fsr2l	equ	0xFD9
  4449                           status	equ	0xFD8
  4450                           
  4451 ;; *************** function _wr2RegCompleteHandler *****************
  4452 ;; Defined at:
  4453 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  p               2   11[COMRAM] PTR void 
  4456 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4457 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      enum E97
  4462 ;; Registers used:
  4463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;Total ram usage:        2 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    2
  4476 ;; This function calls:
  4477 ;;		_i2c_setBuffer
  4478 ;;		_i2c_setDataCompleteCallback
  4479 ;; This function is called by:
  4480 ;;		_i2c_write2ByteRegister
  4481 ;;		_do_I2C_DO_ADDRESS_NACK
  4482 ;;		_do_I2C_TX
  4483 ;;		_do_I2C_RX
  4484 ;;		_do_I2C_TX_EMPTY
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text43
  4489  00143E                     __ptext43:
  4490                           	opt stack 0
  4491  00143E                     _wr2RegCompleteHandler:
  4492                           	opt stack 23
  4493                           
  4494                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  4495                           
  4496                           ;incstack = 0
  4497  00143E  C03C  F031         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
  4498  001442  C03D  F032         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4499  001446  0E00               	movlw	0
  4500  001448  6E34               	movwf	i2c_setBuffer@bufferSize+1,c
  4501  00144A  0E02               	movlw	2
  4502  00144C  6E33               	movwf	i2c_setBuffer@bufferSize,c
  4503  00144E  EC5F  F00A         	call	_i2c_setBuffer	;wreg free
  4504                           
  4505                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  4506  001452  0E00               	movlw	0
  4507  001454  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  4508  001456  0E00               	movlw	0
  4509  001458  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  4510  00145A  0E00               	movlw	0
  4511  00145C  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  4512  00145E  0E00               	movlw	0
  4513  001460  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  4514  001462  0E00               	movlw	0
  4515  001464  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  4516  001466  EC45  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  4517                           
  4518                           ;i2c_simple_master.c: 114: return i2c_continue;
  4519  00146A  0E04               	movlw	4
  4520  00146C  0012               	return	
  4521  00146E                     __end_of_wr2RegCompleteHandler:
  4522                           	opt stack 0
  4523                           tosu	equ	0xFFF
  4524                           tosh	equ	0xFFE
  4525                           tosl	equ	0xFFD
  4526                           pclatu	equ	0xFFB
  4527                           pclath	equ	0xFFA
  4528                           tblptru	equ	0xFF8
  4529                           tblptrh	equ	0xFF7
  4530                           tblptrl	equ	0xFF6
  4531                           tablat	equ	0xFF5
  4532                           prodh	equ	0xFF4
  4533                           prodl	equ	0xFF3
  4534                           intcon	equ	0xFF2
  4535                           postinc0	equ	0xFEE
  4536                           fsr0h	equ	0xFEA
  4537                           fsr0l	equ	0xFE9
  4538                           wreg	equ	0xFE8
  4539                           postdec1	equ	0xFE5
  4540                           fsr1h	equ	0xFE2
  4541                           fsr1l	equ	0xFE1
  4542                           indf2	equ	0xFDF
  4543                           postinc2	equ	0xFDE
  4544                           postdec2	equ	0xFDD
  4545                           fsr2h	equ	0xFDA
  4546                           fsr2l	equ	0xFD9
  4547                           status	equ	0xFD8
  4548                           
  4549 ;; *************** function _i2c_setDataCompleteCallback *****************
  4550 ;; Defined at:
  4551 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  cb              3    6[COMRAM] PTR FTN(PTR void ,)enum 
  4554 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4555 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  4556 ;;  p               2    9[COMRAM] PTR void 
  4557 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4558 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4570 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4573 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4574 ;;Total ram usage:        5 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    1
  4577 ;; This function calls:
  4578 ;;		_setCallBack
  4579 ;; This function is called by:
  4580 ;;		_wr1RegCompleteHandler
  4581 ;;		_rd1RegCompleteHandler
  4582 ;;		_rd2RegCompleteHandler
  4583 ;;		_wr2RegCompleteHandler
  4584 ;;		_rdBlkRegCompleteHandler
  4585 ;;		_i2c_write1ByteRegister
  4586 ;;		_i2c_read1ByteRegister
  4587 ;;		_i2c_read2ByteRegister
  4588 ;;		_i2c_write2ByteRegister
  4589 ;;		_i2c_readDataBlock
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text44
  4594  00148A                     __ptext44:
  4595                           	opt stack 0
  4596  00148A                     _i2c_setDataCompleteCallback:
  4597                           	opt stack 23
  4598                           
  4599                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  4600                           
  4601                           ;incstack = 0
  4602  00148A  C037  F031         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
  4603  00148E  C038  F032         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
  4604  001492  C039  F033         	movff	i2c_setDataCompleteCallback@cb+2,setCallBack@cb+2
  4605  001496  C03A  F034         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
  4606  00149A  C03B  F035         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
  4607  00149E  0E00               	movlw	0
  4608  0014A0  EC64  F008         	call	_setCallBack
  4609  0014A4  0012               	return		;funcret
  4610  0014A6                     __end_of_i2c_setDataCompleteCallback:
  4611                           	opt stack 0
  4612                           tosu	equ	0xFFF
  4613                           tosh	equ	0xFFE
  4614                           tosl	equ	0xFFD
  4615                           pclatu	equ	0xFFB
  4616                           pclath	equ	0xFFA
  4617                           tblptru	equ	0xFF8
  4618                           tblptrh	equ	0xFF7
  4619                           tblptrl	equ	0xFF6
  4620                           tablat	equ	0xFF5
  4621                           prodh	equ	0xFF4
  4622                           prodl	equ	0xFF3
  4623                           intcon	equ	0xFF2
  4624                           postinc0	equ	0xFEE
  4625                           fsr0h	equ	0xFEA
  4626                           fsr0l	equ	0xFE9
  4627                           wreg	equ	0xFE8
  4628                           postdec1	equ	0xFE5
  4629                           fsr1h	equ	0xFE2
  4630                           fsr1l	equ	0xFE1
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638 ;; *************** function _setCallBack *****************
  4639 ;; Defined at:
  4640 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  idx             1    wreg     enum E11974
  4643 ;;  cb              3    0[COMRAM] PTR FTN(PTR void ,)enum 
  4644 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4645 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  4646 ;;  p               2    3[COMRAM] PTR void 
  4647 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4648 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  idx             1    5[COMRAM] enum E11974
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4660 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4664 ;;Total ram usage:        6 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_i2c_setDataCompleteCallback
  4670 ;;		_i2c_setWriteCollisionCallback
  4671 ;;		_i2c_setAddressNACKCallback
  4672 ;;		_i2c_setDataNACKCallback
  4673 ;;		_i2c_setTimeOutCallback
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text45
  4678  0010C8                     __ptext45:
  4679                           	opt stack 0
  4680  0010C8                     _setCallBack:
  4681                           	opt stack 23
  4682                           
  4683                           ;incstack = 0
  4684                           ;setCallBack@idx stored from wreg
  4685  0010C8  6E36               	movwf	setCallBack@idx,c
  4686                           
  4687                           ;i2c_master.c: 455: if(cb)
  4688  0010CA  5031               	movf	setCallBack@cb,w,c
  4689  0010CC  1032               	iorwf	setCallBack@cb+1,w,c
  4690  0010CE  1033               	iorwf	setCallBack@cb+2,w,c
  4691  0010D0  B4D8               	btfsc	status,2,c
  4692  0010D2  D01B               	goto	i2l490
  4693                           
  4694                           ;i2c_master.c: 456: {
  4695                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  4696  0010D4  5036               	movf	setCallBack@idx,w,c
  4697  0010D6  0D03               	mullw	3
  4698  0010D8  0E0D               	movlw	low (_i2c_status+12)
  4699  0010DA  24F3               	addwf	prodl,w,c
  4700  0010DC  6ED9               	movwf	fsr2l,c
  4701  0010DE  0E00               	movlw	high (_i2c_status+12)
  4702  0010E0  20F4               	addwfc	prodh,w,c
  4703  0010E2  6EDA               	movwf	fsr2h,c
  4704  0010E4  C031  FFDE         	movff	setCallBack@cb,postinc2
  4705  0010E8  C032  FFDE         	movff	setCallBack@cb+1,postinc2
  4706  0010EC  C033  FFDE         	movff	setCallBack@cb+2,postinc2
  4707                           
  4708                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  4709  0010F0  5036               	movf	setCallBack@idx,w,c
  4710  0010F2  0D02               	mullw	2
  4711  0010F4  0E1F               	movlw	low (_i2c_status+30)
  4712  0010F6  24F3               	addwf	prodl,w,c
  4713  0010F8  6ED9               	movwf	fsr2l,c
  4714  0010FA  0E00               	movlw	high (_i2c_status+30)
  4715  0010FC  20F4               	addwfc	prodh,w,c
  4716  0010FE  6EDA               	movwf	fsr2h,c
  4717  001100  C034  FFDE         	movff	setCallBack@p,postinc2
  4718  001104  C035  FFDD         	movff	setCallBack@p+1,postdec2
  4719                           
  4720                           ;i2c_master.c: 459: }
  4721  001108  0012               	return	
  4722  00110A                     i2l490:
  4723                           
  4724                           ;i2c_master.c: 460: else
  4725                           ;i2c_master.c: 461: {
  4726                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  4727  00110A  5036               	movf	setCallBack@idx,w,c
  4728  00110C  0D03               	mullw	3
  4729  00110E  0E0D               	movlw	low (_i2c_status+12)
  4730  001110  24F3               	addwf	prodl,w,c
  4731  001112  6ED9               	movwf	fsr2l,c
  4732  001114  0E00               	movlw	high (_i2c_status+12)
  4733  001116  20F4               	addwfc	prodh,w,c
  4734  001118  6EDA               	movwf	fsr2h,c
  4735  00111A  0EC6               	movlw	low _returnStop
  4736  00111C  6EDE               	movwf	postinc2,c
  4737  00111E  0E15               	movlw	high _returnStop
  4738  001120  6EDE               	movwf	postinc2,c
  4739  001122  0E00               	movlw	low (_returnStop shr (0+16))
  4740  001124  6EDE               	movwf	postinc2,c
  4741                           
  4742                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  4743  001126  5036               	movf	setCallBack@idx,w,c
  4744  001128  0D02               	mullw	2
  4745  00112A  0E1F               	movlw	low (_i2c_status+30)
  4746  00112C  24F3               	addwf	prodl,w,c
  4747  00112E  6ED9               	movwf	fsr2l,c
  4748  001130  0E00               	movlw	high (_i2c_status+30)
  4749  001132  20F4               	addwfc	prodh,w,c
  4750  001134  6EDA               	movwf	fsr2h,c
  4751  001136  0E00               	movlw	0
  4752  001138  6EDE               	movwf	postinc2,c
  4753  00113A  0E00               	movlw	0
  4754  00113C  6EDD               	movwf	postdec2,c
  4755  00113E  0012               	return	
  4756  001140                     __end_of_setCallBack:
  4757                           	opt stack 0
  4758                           tosu	equ	0xFFF
  4759                           tosh	equ	0xFFE
  4760                           tosl	equ	0xFFD
  4761                           pclatu	equ	0xFFB
  4762                           pclath	equ	0xFFA
  4763                           tblptru	equ	0xFF8
  4764                           tblptrh	equ	0xFF7
  4765                           tblptrl	equ	0xFF6
  4766                           tablat	equ	0xFF5
  4767                           prodh	equ	0xFF4
  4768                           prodl	equ	0xFF3
  4769                           intcon	equ	0xFF2
  4770                           postinc0	equ	0xFEE
  4771                           fsr0h	equ	0xFEA
  4772                           fsr0l	equ	0xFE9
  4773                           wreg	equ	0xFE8
  4774                           postdec1	equ	0xFE5
  4775                           fsr1h	equ	0xFE2
  4776                           fsr1l	equ	0xFE1
  4777                           indf2	equ	0xFDF
  4778                           postinc2	equ	0xFDE
  4779                           postdec2	equ	0xFDD
  4780                           fsr2h	equ	0xFDA
  4781                           fsr2l	equ	0xFD9
  4782                           status	equ	0xFD8
  4783                           
  4784 ;; *************** function _i2c_setBuffer *****************
  4785 ;; Defined at:
  4786 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  buffer          2    0[COMRAM] PTR void 
  4789 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
  4790 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
  4791 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  4792 ;;  bufferSize      2    2[COMRAM] unsigned int 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4808 ;;Total ram usage:        4 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_wr1RegCompleteHandler
  4814 ;;		_rd1RegCompleteHandler
  4815 ;;		_rd2RegCompleteHandler
  4816 ;;		_wr2RegCompleteHandler
  4817 ;;		_rdBlkRegCompleteHandler
  4818 ;;		_i2c_write1ByteRegister
  4819 ;;		_i2c_writeNBytes
  4820 ;;		_i2c_read1ByteRegister
  4821 ;;		_i2c_read2ByteRegister
  4822 ;;		_i2c_write2ByteRegister
  4823 ;;		_i2c_readDataBlock
  4824 ;;		_i2c_readNBytes
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text46
  4829  0014BE                     __ptext46:
  4830                           	opt stack 0
  4831  0014BE                     _i2c_setBuffer:
  4832                           	opt stack 24
  4833                           
  4834                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  4835                           
  4836                           ;incstack = 0
  4837  0014BE  A401               	btfss	_i2c_status,2,c
  4838  0014C0  0012               	return	
  4839                           
  4840                           ;i2c_master.c: 187: {
  4841                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  4842  0014C2  C031  F003         	movff	i2c_setBuffer@buffer,_i2c_status+2
  4843  0014C6  C032  F004         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
  4844                           
  4845                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  4846  0014CA  C033  F005         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
  4847  0014CE  C034  F006         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
  4848                           
  4849                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  4850  0014D2  9401               	bcf	_i2c_status,2,c
  4851  0014D4  0012               	return	
  4852  0014D6                     __end_of_i2c_setBuffer:
  4853                           	opt stack 0
  4854                           tosu	equ	0xFFF
  4855                           tosh	equ	0xFFE
  4856                           tosl	equ	0xFFD
  4857                           pclatu	equ	0xFFB
  4858                           pclath	equ	0xFFA
  4859                           tblptru	equ	0xFF8
  4860                           tblptrh	equ	0xFF7
  4861                           tblptrl	equ	0xFF6
  4862                           tablat	equ	0xFF5
  4863                           prodh	equ	0xFF4
  4864                           prodl	equ	0xFF3
  4865                           intcon	equ	0xFF2
  4866                           postinc0	equ	0xFEE
  4867                           fsr0h	equ	0xFEA
  4868                           fsr0l	equ	0xFE9
  4869                           wreg	equ	0xFE8
  4870                           postdec1	equ	0xFE5
  4871                           fsr1h	equ	0xFE2
  4872                           fsr1l	equ	0xFE1
  4873                           indf2	equ	0xFDF
  4874                           postinc2	equ	0xFDE
  4875                           postdec2	equ	0xFDD
  4876                           fsr2h	equ	0xFDA
  4877                           fsr2l	equ	0xFD9
  4878                           status	equ	0xFD8
  4879                           
  4880 ;; *************** function _i2c1_driver_stop *****************
  4881 ;; Defined at:
  4882 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		None
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_do_I2C_SEND_STOP
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text47
  4910  0015CA                     __ptext47:
  4911                           	opt stack 0
  4912  0015CA                     _i2c1_driver_stop:
  4913                           	opt stack 24
  4914                           
  4915                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  4916                           
  4917                           ;incstack = 0
  4918  0015CA  8497               	bsf	3991,2,c	;volatile
  4919  0015CC  0012               	return		;funcret
  4920  0015CE                     __end_of_i2c1_driver_stop:
  4921                           	opt stack 0
  4922                           tosu	equ	0xFFF
  4923                           tosh	equ	0xFFE
  4924                           tosl	equ	0xFFD
  4925                           pclatu	equ	0xFFB
  4926                           pclath	equ	0xFFA
  4927                           tblptru	equ	0xFF8
  4928                           tblptrh	equ	0xFF7
  4929                           tblptrl	equ	0xFF6
  4930                           tablat	equ	0xFF5
  4931                           prodh	equ	0xFF4
  4932                           prodl	equ	0xFF3
  4933                           intcon	equ	0xFF2
  4934                           postinc0	equ	0xFEE
  4935                           fsr0h	equ	0xFEA
  4936                           fsr0l	equ	0xFE9
  4937                           wreg	equ	0xFE8
  4938                           postdec1	equ	0xFE5
  4939                           fsr1h	equ	0xFE2
  4940                           fsr1l	equ	0xFE1
  4941                           indf2	equ	0xFDF
  4942                           postinc2	equ	0xFDE
  4943                           postdec2	equ	0xFDD
  4944                           fsr2h	equ	0xFDA
  4945                           fsr2l	equ	0xFD9
  4946                           status	equ	0xFD8
  4947                           
  4948 ;; *************** function _i2c1_driver_restart *****************
  4949 ;; Defined at:
  4950 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		None
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_do_I2C_SEND_RESTART_READ
  4974 ;;		_do_I2C_SEND_RESTART_WRITE
  4975 ;;		_do_I2C_SEND_RESTART
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text48
  4980  0015CE                     __ptext48:
  4981                           	opt stack 0
  4982  0015CE                     _i2c1_driver_restart:
  4983                           	opt stack 24
  4984                           
  4985                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  4986                           
  4987                           ;incstack = 0
  4988  0015CE  8297               	bsf	3991,1,c	;volatile
  4989  0015D0  0012               	return		;funcret
  4990  0015D2                     __end_of_i2c1_driver_restart:
  4991                           	opt stack 0
  4992                           tosu	equ	0xFFF
  4993                           tosh	equ	0xFFE
  4994                           tosl	equ	0xFFD
  4995                           pclatu	equ	0xFFB
  4996                           pclath	equ	0xFFA
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           prodh	equ	0xFF4
  5002                           prodl	equ	0xFF3
  5003                           intcon	equ	0xFF2
  5004                           postinc0	equ	0xFEE
  5005                           fsr0h	equ	0xFEA
  5006                           fsr0l	equ	0xFE9
  5007                           wreg	equ	0xFE8
  5008                           postdec1	equ	0xFE5
  5009                           fsr1h	equ	0xFE2
  5010                           fsr1l	equ	0xFE1
  5011                           indf2	equ	0xFDF
  5012                           postinc2	equ	0xFDE
  5013                           postdec2	equ	0xFDD
  5014                           fsr2h	equ	0xFDA
  5015                           fsr2l	equ	0xFD9
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function _i2c1_driver_sendACK *****************
  5019 ;; Defined at:
  5020 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		None
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_do_I2C_DO_ACK
  5044 ;;		_do_I2C_RX
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text49
  5049  0015AC                     __ptext49:
  5050                           	opt stack 0
  5051  0015AC                     _i2c1_driver_sendACK:
  5052                           	opt stack 25
  5053                           
  5054                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  5055                           
  5056                           ;incstack = 0
  5057  0015AC  9A97               	bcf	3991,5,c	;volatile
  5058                           
  5059                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  5060  0015AE  8897               	bsf	3991,4,c	;volatile
  5061  0015B0  0012               	return		;funcret
  5062  0015B2                     __end_of_i2c1_driver_sendACK:
  5063                           	opt stack 0
  5064                           tosu	equ	0xFFF
  5065                           tosh	equ	0xFFE
  5066                           tosl	equ	0xFFD
  5067                           pclatu	equ	0xFFB
  5068                           pclath	equ	0xFFA
  5069                           tblptru	equ	0xFF8
  5070                           tblptrh	equ	0xFF7
  5071                           tblptrl	equ	0xFF6
  5072                           tablat	equ	0xFF5
  5073                           prodh	equ	0xFF4
  5074                           prodl	equ	0xFF3
  5075                           intcon	equ	0xFF2
  5076                           postinc0	equ	0xFEE
  5077                           fsr0h	equ	0xFEA
  5078                           fsr0l	equ	0xFE9
  5079                           wreg	equ	0xFE8
  5080                           postdec1	equ	0xFE5
  5081                           fsr1h	equ	0xFE2
  5082                           fsr1l	equ	0xFE1
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           postdec2	equ	0xFDD
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           tosu	equ	0xFFF
  5090                           tosh	equ	0xFFE
  5091                           tosl	equ	0xFFD
  5092                           pclatu	equ	0xFFB
  5093                           pclath	equ	0xFFA
  5094                           tblptru	equ	0xFF8
  5095                           tblptrh	equ	0xFF7
  5096                           tblptrl	equ	0xFF6
  5097                           tablat	equ	0xFF5
  5098                           prodh	equ	0xFF4
  5099                           prodl	equ	0xFF3
  5100                           intcon	equ	0xFF2
  5101                           postinc0	equ	0xFEE
  5102                           fsr0h	equ	0xFEA
  5103                           fsr0l	equ	0xFE9
  5104                           wreg	equ	0xFE8
  5105                           postdec1	equ	0xFE5
  5106                           fsr1h	equ	0xFE2
  5107                           fsr1l	equ	0xFE1
  5108                           indf2	equ	0xFDF
  5109                           postinc2	equ	0xFDE
  5110                           postdec2	equ	0xFDD
  5111                           fsr2h	equ	0xFDA
  5112                           fsr2l	equ	0xFD9
  5113                           status	equ	0xFD8
  5114                           
  5115                           	psect	text50
  5116  000000                     __ptext50:
  5117                           	opt stack 0
  5118                           tosu	equ	0xFFF
  5119                           tosh	equ	0xFFE
  5120                           tosl	equ	0xFFD
  5121                           pclatu	equ	0xFFB
  5122                           pclath	equ	0xFFA
  5123                           tblptru	equ	0xFF8
  5124                           tblptrh	equ	0xFF7
  5125                           tblptrl	equ	0xFF6
  5126                           tablat	equ	0xFF5
  5127                           prodh	equ	0xFF4
  5128                           prodl	equ	0xFF3
  5129                           intcon	equ	0xFF2
  5130                           postinc0	equ	0xFEE
  5131                           fsr0h	equ	0xFEA
  5132                           fsr0l	equ	0xFE9
  5133                           wreg	equ	0xFE8
  5134                           postdec1	equ	0xFE5
  5135                           fsr1h	equ	0xFE2
  5136                           fsr1l	equ	0xFE1
  5137                           indf2	equ	0xFDF
  5138                           postinc2	equ	0xFDE
  5139                           postdec2	equ	0xFDD
  5140                           fsr2h	equ	0xFDA
  5141                           fsr2l	equ	0xFD9
  5142                           status	equ	0xFD8
  5143                           
  5144                           	psect	rparam
  5145  0000                     tosu	equ	0xFFF
  5146                           tosh	equ	0xFFE
  5147                           tosl	equ	0xFFD
  5148                           pclatu	equ	0xFFB
  5149                           pclath	equ	0xFFA
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           prodh	equ	0xFF4
  5155                           prodl	equ	0xFF3
  5156                           intcon	equ	0xFF2
  5157                           postinc0	equ	0xFEE
  5158                           fsr0h	equ	0xFEA
  5159                           fsr0l	equ	0xFE9
  5160                           wreg	equ	0xFE8
  5161                           postdec1	equ	0xFE5
  5162                           fsr1h	equ	0xFE2
  5163                           fsr1l	equ	0xFE1
  5164                           indf2	equ	0xFDF
  5165                           postinc2	equ	0xFDE
  5166                           postdec2	equ	0xFDD
  5167                           fsr2h	equ	0xFDA
  5168                           fsr2l	equ	0xFD9
  5169                           status	equ	0xFD8
  5170                           
  5171                           	psect	temp
  5172  000048                     btemp:
  5173                           	opt stack 0
  5174  000048                     	ds	1
  5175  0000                     int$flags	set	btemp
  5176  0000                     wtemp6	set	btemp+1
  5177                           tosu	equ	0xFFF
  5178                           tosh	equ	0xFFE
  5179                           tosl	equ	0xFFD
  5180                           pclatu	equ	0xFFB
  5181                           pclath	equ	0xFFA
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           intcon	equ	0xFF2
  5189                           postinc0	equ	0xFEE
  5190                           fsr0h	equ	0xFEA
  5191                           fsr0l	equ	0xFE9
  5192                           wreg	equ	0xFE8
  5193                           postdec1	equ	0xFE5
  5194                           fsr1h	equ	0xFE2
  5195                           fsr1l	equ	0xFE1
  5196                           indf2	equ	0xFDF
  5197                           postinc2	equ	0xFDE
  5198                           postdec2	equ	0xFDD
  5199                           fsr2h	equ	0xFDA
  5200                           fsr2l	equ	0xFD9
  5201                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    3
    Data        48
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      71
    BANK0           160      8      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    do_I2C_TX$2203$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2209$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2215$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_ISR$2221	PTR const FTN()enum E11956 size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$2220	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2215	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$2214	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2209	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$2208	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX$2203	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S838$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    d.data	PTR unsigned char  size(2) Largest target is 0

    S1103$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E11956[16] size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), 
		 -> i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S838$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S838$callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S838$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), 
		 -> i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), 
		 -> i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMRAM

    _main->_spi2_exchangeByte
    _main->_spi2_master_open

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     206
                                             22 COMRAM     1     1      0
                                              0 BANK0      8     8      0
                  _SYSTEM_Initialize
                  _spi2_exchangeByte
                   _spi2_master_open
 ---------------------------------------------------------------------------------
 (1) _spi2_master_open                                     1     1      0      66
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spi2_exchangeByte                                    1     1      0      22
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                          18    18      0   88386
                                              3 COMRAM    18    18      0
                   Absolute function *
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (4) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_ISR                                              0     0      0   88386
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (5) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_TX_EMPTY                                      0     0      0   22074
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_TX                                            2     2      0   22120
                                              1 COMRAM     2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (5) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (5) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_RX                                            0     0      0   22074
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_DO_ADDRESS_NACK                               0     0      0   22074
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _wr2RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _wr1RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _returnStop                                           2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _returnReset                                          2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _rdBlkRegCompleteHandler                              2     0      2    4602
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _rd2RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _rd1RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _i2c_setDataCompleteCallback                          5     0      5    2478
                                              6 COMRAM     5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (8) _setCallBack                                          6     1      5     914
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (7) _i2c_setBuffer                                        4     0      4    1868
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _i2c_restartWrite                                     2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _spi2_exchangeByte
   _spi2_master_open

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      38       5       35.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      47       1       75.5%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7F       6        0.0%
DATA                 0      0      7F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 19 16:41:18 2018

                          returnReset@p 003C                             __CFG_CP$OFF 000000  
                  __size_of_do_I2C_IDLE 000A                     _do_I2C_SEND_RESTART 156E  
                  __size_of_do_I2C_RCEN 000A                             __CFG_LVP$ON 000000  
                                   l642 14F2                                     l691 1006  
                                   l695 1024                                     l687 0FE2  
                                   l689 0FFA                            __CFG_CPD$OFF 000000  
         i2c_setDataCompleteCallback@cb 0037                 __size_of_PMD_Initialize 001C  
                 __size_of_do_I2C_RESET 000E                                     prod 000FF3  
                                   tosl 000FFD                                     wreg 000FE8  
                          __CFG_ZCD$OFF 000000                 ??_rd2RegCompleteHandler 003E  
                                  l2671 0FD2                                    l2681 1006  
                                  l2685 1014                                    u1117 0FE8  
                                  u1070 0FFA                                    u1127 102A  
                                  _LATA 000F83                                    _LATB 000F84  
                                  _LATC 000F85                                    _LATD 000F86  
                                  _LATE 000F87                                    _PMD0 000EE1  
                                  _PMD1 000EE2                                    _PMD2 000EE3  
                                  _PMD3 000EE4                                    _PMD4 000EE5  
                                  _PMD5 000EE6                    ?_do_I2C_SEND_RESTART 0031  
                                  _WPUA 000F10                                    _WPUB 000F18  
                                  _WPUC 000F20                                    _WPUD 000F25  
                                  _WPUE 000F2D                 ??_wr2RegCompleteHandler 003E  
                         __CFG_FCMEN$ON 000000       __size_of_do_I2C_SEND_RESTART_READ 0008  
             ?_do_I2C_SEND_RESTART_READ 0031                                    _main 0FAA  
             __size_of_do_I2C_SEND_STOP 0008                  __size_of_do_I2C_DO_ACK 0008  
                                  fsr0h 000FEA                                    fsr1h 000FE2  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 0048  
                 ?_do_I2C_SEND_ADR_READ 0031                                    prodh 000FF4  
                                  prodl 000FF3         ??_i2c1_driver_clearBusCollision 0031  
                                  start 00DC                           _i2c_setBuffer 14BE  
                         __CFG_CSWEN$ON 000000                         __end_of_i2c_ISR 1348  
                          ___param_bank 000000        __size_of_rdBlkRegCompleteHandler 0044  
                         __CFG_SCANE$ON 000000                ??_do_I2C_DO_NACK_RESTART 0031  
                          _do_I2C_RESET 152C          __size_of_OSCILLATOR_Initialize 0018  
         __end_of_OSCILLATOR_Initialize 14BE              __size_of_spi2_exchangeByte 0012  
                                 ?_main 0031                __end_of_i2c1_driver_stop 15CE  
                         __CFG_WDTE$OFF 000000              __end_of_i2c1_driver_TXData 158E  
                        __CFG_DEBUG$OFF 000000                                   i2l430 1286  
                                 i2l433 128C                                   i2l441 104C  
                                 i2l442 1052                                   i2l275 0072  
                                 i2l429 1292                                   i2l437 1092  
                                 i2l453 11DE                                   i2l470 123A  
                                 i2l438 1058                                   i2l439 1046  
                                 i2l448 10BC                                   i2l456 11EE  
                                 i2l465 1240                                   i2l457 11E2  
                                 i2l490 110A                                   i2l466 122C  
                                 i2l459 11E8                                   i2l469 1232  
                                 i2l477 131C                                   _OSCEN 000EDC  
                                 _TRISA 000F88                                   _TRISB 000F89  
                                 _TRISC 000F8A                                   _TRISD 000F8B  
                                 _TRISE 000F8C                           __CFG_WRT0$OFF 000000  
                         __CFG_WRT1$OFF 000000                           __CFG_WRT2$OFF 000000  
                         __CFG_WRT3$OFF 000000                           __CFG_WRT4$OFF 000000  
                         __CFG_WRT5$OFF 000000                           __CFG_WRT6$OFF 000000  
                         __CFG_WRT7$OFF 000000                          __CFG_EBTR0$OFF 000000  
                        __CFG_EBTR1$OFF 000000                          __CFG_EBTR2$OFF 000000  
                        __CFG_EBTR3$OFF 000000                          __CFG_EBTR4$OFF 000000  
                        __CFG_EBTR5$OFF 000000                          __CFG_EBTR6$OFF 000000  
                        __CFG_EBTR7$OFF 000000                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                        __CFG_EBTRB$OFF 000000              __end_of_i2c1_driver_isNACK 14EC  
            ?_do_I2C_SEND_RESTART_WRITE 0031                      __CFG_MCLRE$EXTMCLR 000000  
                 ??_do_I2C_SEND_RESTART 0031                                   main@i 0094  
                                 pclath 000FFA                                   tablat 000FF5  
               __size_of_mssp1_clearIRQ 0006                  ?_do_I2C_SEND_ADR_WRITE 0031  
                                 status 000FD8                                   wtemp6 0049  
                        ?_i2c_setBuffer 0031                            ?_setCallBack 0031  
                         _fsmStateTable 0060                         __initialization 1348  
                            _i2c_status 0001                            __end_of_main 103C  
           ?_INTERRUPT_InterruptManager 0031                           setCallBack@cb 0031  
                         _do_I2C_DO_ACK 155E                                  ??_main 0047  
                     ?_i2c_restartWrite 003C           __size_of_i2c1_driver_sendNACK 0006  
                         __activetblptr 000003                      ??_i2c_restartWrite 003E  
         __size_of_i2c1_driver_resetBus 0002                 ?_do_I2C_DO_ADDRESS_NACK 0031  
                                _ANSELA 000F11                                  _ANSELB 000F19  
                                _ANSELC 000F21                                  _ANSELD 000F26  
                                _ANSELE 000F2E                                  _RB1PPS 000EF0  
                                _RC3PPS 000EFA                                  _RC4PPS 000EFB  
                                _RD3PPS 000F02                                  _ODCONA 000F0F  
                                _ODCONB 000F17                                  _ODCONC 000F1F  
                                _ODCOND 000F24                                  _ODCONE 000F2C  
                        __CFG_WDTCCS$SC 000000                                  _OSCFRQ 000EDE  
                ??_do_I2C_SEND_ADR_READ 0032                rdBlkRegCompleteHandler@p 003C  
                             ??_i2c_ISR 0034                          __CFG_PWRTE$OFF 000000  
                        __CFG_XINST$OFF 000000                   _i2c1_driver_getRXData 15B6  
             __CFG_RSTOSC$HFINTOSC_1MHZ 000000             __end_of_do_I2C_DO_NACK_STOP 155E  
   __end_of_i2c_setDataCompleteCallback 14A6             _i2c_setDataCompleteCallback 148A  
 __end_of_i2c1_driver_clearBusCollision 159A  __size_of_i2c1_driver_clearBusCollision 0006  
         _i2c1_driver_clearBusCollision 1594                          __CFG_STVREN$ON 000000  
       __size_of_do_I2C_DO_NACK_RESTART 0008                      spi2_exchangeByte@b 0046  
                                clear_0 136E                          ?_do_I2C_DO_ACK 0031  
              __end_of_spi2_master_open 11B6             __end_of_i2c1_driver_sendACK 15B2  
                        _PMD_Initialize 146E          __end_of_do_I2C_DO_ADDRESS_NACK 12C4  
                          __mediumconst 0000             __end_of_i2c1_driver_restart 15D2  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                            ?_returnReset 003C  
           __end_of_i2c1_driver_startRX 15BE           __size_of_INTERRUPT_Initialize 0004  
                     _SYSTEM_Initialize 14FE                              __accesstop 0060  
               __end_of__initialization 1374                         ??_i2c_setBuffer 0035  
                      _do_I2C_SEND_STOP 1566                      __size_of_do_I2C_RX 0072  
                    __size_of_do_I2C_TX 008C                      ?_SYSTEM_Initialize 0031  
                         ___rparam_used 000001                __size_of_do_I2C_TX_EMPTY 0056  
               _rdBlkRegCompleteHandler 12C4              __end_of_spi2_configuration 0F04  
                        __pcstackCOMRAM 0031                            __pidataBANK0 137E  
                   ??_SYSTEM_Initialize 0046                  __end_of_PMD_Initialize 148A  
                        main@gamerScore 0091                          setCallBack@idx 0036  
                _do_I2C_DO_NACK_RESTART 154E                          _do_I2C_TX$1041 0032  
             __end_of_SYSTEM_Initialize 1510                          _mssp1_clearIRQ 159A  
        __size_of_rd2RegCompleteHandler 0030           __end_of_rd2RegCompleteHandler 13DE  
        __size_of_wr2RegCompleteHandler 0030           __end_of_wr2RegCompleteHandler 146E  
                 _rd1RegCompleteHandler 13DE                  ?_i2c1_driver_getRXData 0031  
                 _wr1RegCompleteHandler 140E                          _SSP1DATPPSbits 000EB8  
          __size_of_i2c_busCollisionISR 0006                           ??_do_I2C_IDLE 0031  
                  __size_of_setCallBack 0078                           ??_do_I2C_RCEN 0031  
                       __CFG_PPS1WAY$ON 000000                         ??_do_I2C_DO_ACK 0031  
                   i2c_setBuffer@buffer 0031                          _SSP2DATPPSbits 000E90  
                        _SSP1CLKPPSbits 000EB7                         ?_PMD_Initialize 0031  
        ?_i2c1_driver_clearBusCollision 0031                       __end_of_do_I2C_RX 1228  
                     __end_of_do_I2C_TX 10C8                       ?_i2c1_driver_stop 0031  
                    ??_i2c1_driver_stop 0031                                 _OSCCON1 000ED8  
                               _OSCCON3 000EDA                           ?_mssp1_setIRQ 0031  
                        _SSP2CLKPPSbits 000E8F                                 _OSCTUNE 000EDD  
                               i2u70_48 11FE                                 i2u70_49 1212  
                               i2u71_48 1250                                 i2u71_49 1264  
                               i2u80_48 0062                                 i2u65_48 12A2  
                               i2u65_49 12B6                                 i2u67_48 1068  
                               i2u83_48 007C                                 i2u67_49 107C  
                               i2u83_49 0090                                 i2u76_48 1330  
                               i2u76_49 1344                                 _SSP1ADD 000F93  
                               _SSP2ADD 000E93                                 _SSP1BUF 000F92  
                __end_of_mssp1_clearIRQ 15A0                                 _SSP2BUF 000E92  
                               _SSP1MSK 000F94                 ??_do_I2C_SEND_ADR_WRITE 0032  
           ??_do_I2C_SEND_RESTART_WRITE 0031                      _i2c1_driver_TXData 1586  
                    _i2c1_driver_i2cISR 002B                                 _i2c_ISR 1308  
             ??_rdBlkRegCompleteHandler 003E                                 __Hparam 0000  
                    _i2c1_driver_isNACK 14D6                     ?_i2c1_driver_TXData 0031  
                               __Lparam 0000                            __psmallconst 0F00  
                     ??_do_I2C_TX_EMPTY 0031                     ?_i2c1_driver_isNACK 0031  
                               __pcinit 1348                                 __ramtop 0F00  
                               __ptext0 0FAA                                 __ptext1 1140  
                               __ptext2 14EC                                 __ptext3 14FE  
                               __ptext4 146E                                 __ptext5 0F06  
                               __ptext6 14A6                                 __ptext7 15B2  
                               __ptext9 158E                     __end_of_do_I2C_IDLE 154E  
                   __end_of_do_I2C_RCEN 1544                   _OSCILLATOR_Initialize 14A6  
           __end_of_do_I2C_SEND_RESTART 1576                          ??_mssp1_setIRQ 0031  
                  ??_i2c1_driver_TXData 0031                ??_PIN_MANAGER_Initialize 0046  
                       ?_mssp1_clearIRQ 0031                _do_I2C_SEND_RESTART_READ 157E  
            __size_of_SYSTEM_Initialize 0012                                 main@res 0093  
                     main@photonAddress 0092                    __size_of_returnReset 0004  
                  end_of_initialization 1374                    ??_i2c1_driver_isNACK 0031  
             __size_of_i2c_restartWrite 0004            __end_of_i2c1_driver_sendNACK 15AC  
                ?_rd1RegCompleteHandler 003C                  ?_wr1RegCompleteHandler 003C  
          __end_of_i2c1_driver_resetBus 15D4                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc2 000FDE               _do_I2C_SEND_RESTART_WRITE 1576  
                 __CFG_WDTCPS$WDTCPS_31 000000                              _returnStop 15C6  
       __end_of_rdBlkRegCompleteHandler 1308                __end_of_do_I2C_SEND_STOP 156E  
                     ?_spi2_master_open 0031                               _TRISBbits 000F89  
  __size_of_i2c_setDataCompleteCallback 001C                      ??_spi2_master_open 0046  
                            main@i_1438 0096                             returnStop@p 003C  
                      __CFG_FEXTOSC$OFF 000000            i2c_setDataCompleteCallback@p 003A  
         __size_of_do_I2C_SEND_ADR_READ 000E                             _do_I2C_IDLE 1544  
                           _do_I2C_RCEN 153A            __end_of_INTERRUPT_Initialize 15B6  
                ?_OSCILLATOR_Initialize 0031            __size_of_do_I2C_DO_NACK_STOP 0008  
                    _spi2_configuration 0F01                 ?_do_I2C_DO_NACK_RESTART 0031  
                   start_initialization 1348                     _i2c_busCollisionISR 158E  
       __size_of_PIN_MANAGER_Initialize 00A4                            setCallBack@p 0034  
          __size_of_i2c1_driver_sendACK 0006                 i2c_setBuffer@bufferSize 0033  
               ??_i2c1_driver_getRXData 0031                  rd1RegCompleteHandler@p 003C  
          __size_of_i2c1_driver_restart 0004            __size_of_i2c1_driver_startRX 0004  
                 __end_of_i2c_setBuffer 14D6                    ?_i2c_busCollisionISR 0031  
                      __CFG_LPBOREN$OFF 000000                    __end_of_mssp1_setIRQ 15A6  
                      ??_PMD_Initialize 0046                  wr1RegCompleteHandler@p 003C  
                         ?_do_I2C_RESET 0031                             __pdataBANK0 0060  
                           ?_returnStop 003C          __end_of_do_I2C_DO_NACK_RESTART 1556  
                  _i2c1_driver_sendNACK 15A6                             __pbssCOMRAM 0001  
                  _i2c1_driver_resetBus 15D2                           __pcstackBANK0 0090  
                             _do_I2C_RX 11B6                               _do_I2C_TX 103C  
        __size_of_do_I2C_SEND_ADR_WRITE 000E           __end_of_do_I2C_SEND_ADR_WRITE 151E  
                      _i2c_restartWrite 15BE               __size_of_i2c1_driver_stop 0004  
                              ?_i2c_ISR 0031                         _do_I2C_TX_EMPTY 1228  
                         ??_setCallBack 0036                   _rd2RegCompleteHandler 13AE  
                 ??_i2c_busCollisionISR 0031                  _PIN_MANAGER_Initialize 0F06  
                 _wr2RegCompleteHandler 143E                               __pintcode 0008  
                        ??_do_I2C_RESET 0031                ??_do_I2C_DO_ADDRESS_NACK 0031  
           _i2c1_driver_busCollisionISR 002E                   __end_of_do_I2C_DO_ACK 1566  
          ??_INTERRUPT_InterruptManager 0034              ??_do_I2C_SEND_RESTART_READ 0031  
                 ?_i2c1_driver_sendNACK 0031                        ??_mssp1_clearIRQ 0031  
                           __smallconst 0F00                   ?_i2c1_driver_resetBus 0031  
    __size_of_do_I2C_SEND_RESTART_WRITE 0008                              ?_do_I2C_RX 0031  
                            ?_do_I2C_TX 0031                 ??_rd1RegCompleteHandler 003E  
                  _INTERRUPT_Initialize 15B2                 ??_wr1RegCompleteHandler 003E  
                              _LATAbits 000F83                                _LATCbits 000F85  
                   __size_of_returnStop 0004                                _PIE3bits 000EC5  
                   __CFG_BORV$VBOR_2P45 000000     __size_of_INTERRUPT_InterruptManager 00D4  
                              _PIR3bits 000ECD                                _SSP1CON1 000F96  
                              _SSP1CON2 000F97                                _SSP2CON1 000E96  
                              _SSP2CON2 000E97            ?_i2c_setDataCompleteCallback 0037  
                              _SSP1STAT 000F95                                _SSP2STAT 000E95  
                   __end_of_setCallBack 1140                       ?_do_I2C_SEND_STOP 0031  
                         ??_returnReset 003E                      ??_do_I2C_SEND_STOP 0031  
           __size_of_i2c1_driver_TXData 0008       __end_of_do_I2C_SEND_RESTART_WRITE 157E  
               __end_of_do_I2C_TX_EMPTY 127E                               copy_data0 135C  
                 ?_INTERRUPT_Initialize 0031                ?_rdBlkRegCompleteHandler 003C  
          __size_of_do_I2C_SEND_RESTART 0008             __size_of_i2c1_driver_isNACK 0016  
                 __size_of_mssp1_setIRQ 0006                  ?_rd2RegCompleteHandler 003C  
             __size_of_spi2_master_open 0076                     _do_I2C_DO_NACK_STOP 1556  
                      __size_of_i2c_ISR 0040                  ?_wr2RegCompleteHandler 003C  
                              __Hrparam 0000                                __Lrparam 0000  
                    __CFG_BOREN$SBORDIS 000000                            ?_do_I2C_IDLE 0031  
                          ?_do_I2C_RCEN 0031                 ??_OSCILLATOR_Initialize 0046  
                   _i2c1_driver_sendACK 15AC         __size_of_do_I2C_DO_ADDRESS_NACK 0046  
                   i2c1_driver_TXData@d 0031                  ??_i2c1_driver_sendNACK 0031  
         ??_i2c_setDataCompleteCallback 003C                     _i2c1_driver_restart 15CE  
                  ?_do_I2C_DO_NACK_STOP 0031                     _i2c1_driver_startRX 15BA  
          __end_of_do_I2C_SEND_ADR_READ 152C                  ??_i2c1_driver_resetBus 0031  
                          _mssp1_setIRQ 15A0                             ??_do_I2C_RX 0031  
                           ??_do_I2C_TX 0032                                __ptext10 1594  
                              __ptext11 1308                                __ptext20 1510  
                              __ptext12 159A                                __ptext21 151E  
                              __ptext13 11B6                                __ptext30 14D6  
                              __ptext22 1566                                __ptext14 103C  
                              __ptext31 1586                                __ptext23 156E  
                              __ptext15 127E                                __ptext40 15BE  
                              __ptext32 15B6                                __ptext24 1576  
                              __ptext16 154E                                __ptext41 15C2  
                              __ptext33 15A6                                __ptext25 157E  
                              __ptext17 1556                                __ptext50 0000  
                              __ptext42 15C6                                __ptext34 15D2  
                              __ptext26 1544                                __ptext18 155E  
                              __ptext43 143E                                __ptext35 15BA  
                              __ptext27 152C                                __ptext19 153A  
                              __ptext44 148A                                __ptext36 12C4  
                              __ptext28 1228                                __ptext45 10C8  
                              __ptext37 13AE                                __ptext29 15A0  
                              __ptext46 14BE                                __ptext38 13DE  
                              __ptext47 15CA                                __ptext39 140E  
                              __ptext48 15CE                                __ptext49 15AC  
                          _SSP1CON1bits 000F96                            _SSP1CON2bits 000F97  
spi2_master_open@spiUniqueConfiguration 0046                            _SSP2CON1bits 000E96  
                  ?_i2c1_driver_sendACK 0031                    __end_of_do_I2C_RESET 153A  
                  ?_i2c1_driver_restart 0031                     __end_of_returnReset 15C6  
                      _i2c1_driver_stop 15CA                           __size_of_main 0092  
                  ?_i2c1_driver_startRX 0031          __size_of_i2c1_driver_getRXData 0004  
         __end_of_i2c1_driver_getRXData 15BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                           _setCallBack 10C8                                int$flags 0048  
    __end_of_INTERRUPT_InterruptManager 00DC              _INTERRUPT_InterruptManager 0008  
                              main@addr 0090                            _SSP1STATbits 000F95  
      __end_of_do_I2C_SEND_RESTART_READ 1586                            ??_returnStop 003E  
              __end_of_i2c_restartWrite 15C2                   ??_do_I2C_DO_NACK_STOP 0031  
                     _spi2_exchangeByte 14EC                              _INTCONbits 000FF2  
                    ?_spi2_exchangeByte 0031                  ??_INTERRUPT_Initialize 0046  
                 ??_i2c1_driver_sendACK 0031                        ?_do_I2C_TX_EMPTY 0031  
                _do_I2C_DO_ADDRESS_NACK 127E                                intlevel2 0000  
                 ??_i2c1_driver_restart 0031                     ??_spi2_exchangeByte 0046  
                rd2RegCompleteHandler@p 003C                   ??_i2c1_driver_startRX 0031  
               ?_PIN_MANAGER_Initialize 0031                       i2c_restartWrite@p 003C  
                     __CFG_CLKOUTEN$OFF 000000                      __end_of_returnStop 15CA  
                wr2RegCompleteHandler@p 003C               __end_of_spi2_exchangeByte 14FE  
                __size_of_i2c_setBuffer 0018                             _returnReset 15C2  
        __end_of_PIN_MANAGER_Initialize 0FAA             __end_of_i2c_busCollisionISR 1594  
        __size_of_rd1RegCompleteHandler 0030           __end_of_rd1RegCompleteHandler 140E  
                      _spi2_master_open 1140          __size_of_wr1RegCompleteHandler 0030  
         __end_of_wr1RegCompleteHandler 143E                   _do_I2C_SEND_ADR_WRITE 1510  
                  _do_I2C_SEND_ADR_READ 151E  
