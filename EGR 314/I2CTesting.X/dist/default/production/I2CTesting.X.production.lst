

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr 10 15:16:36 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1
    69                           	psect	text58,global,reloc=2,class=CODE,delta=1
    70                           	psect	text59,global,reloc=2,class=CODE,delta=1
    71                           	psect	text60,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	text62,global,reloc=2,class=CODE,delta=1
    74                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text64,global,reloc=2,class=CODE,delta=1
    76                           	psect	text65,global,reloc=2,class=CODE,delta=1
    77                           	psect	text66,global,reloc=2,class=CODE,delta=1
    78                           	psect	text67,global,reloc=2,class=CODE,delta=1
    79                           	psect	text68,global,reloc=2,class=CODE,delta=1
    80                           	psect	text69,global,reloc=2,class=CODE,delta=1
    81                           	psect	text70,global,reloc=2,class=CODE,delta=1
    82                           	psect	text71,global,reloc=2,class=CODE,delta=1
    83                           	psect	text72,global,reloc=2,class=CODE,delta=1
    84                           	psect	text73,global,reloc=2,class=CODE,delta=1
    85                           	psect	text74,global,reloc=2,class=CODE,delta=1
    86                           	psect	text75,global,reloc=2,class=CODE,delta=1
    87                           	psect	text76,global,reloc=2,class=CODE,delta=1
    88                           	psect	text77,global,reloc=2,class=CODE,delta=1
    89                           	psect	text78,global,reloc=2,class=CODE,delta=1
    90                           	psect	text79,global,reloc=2,class=CODE,delta=1
    91                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text87,global,reloc=2,class=CODE,delta=1
    99                           	psect	text88,global,reloc=2,class=CODE,delta=1
   100                           	psect	text89,global,reloc=2,class=CODE,delta=1
   101                           	psect	text90,global,reloc=2,class=CODE,delta=1
   102                           	psect	text91,global,reloc=2,class=CODE,delta=1
   103                           	psect	text92,global,reloc=2,class=CODE,delta=1
   104                           	psect	text93,global,reloc=2,class=CODE,delta=1
   105                           	psect	text94,global,reloc=2,class=CODE,delta=1
   106                           	psect	text95,global,reloc=2,class=CODE,delta=1
   107                           	psect	text96,global,reloc=2,class=CODE,delta=1
   108                           	psect	text97,global,reloc=2,class=CODE,delta=1
   109                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text101,global,reloc=2,class=CODE,delta=1
   113                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   115                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   117                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   118  0000                     
   119                           ; Version 1.45
   120                           ; Generated 16/11/2017 GMT
   121                           ; 
   122                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC18F47K40 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153  0000                     
   154                           	psect	idataBANK0
   155  0009B8                     __pidataBANK0:
   156                           	opt stack 0
   157                           
   158                           ;initializer for _fsmStateTable
   159  0009B8  5C                 	db	low _do_I2C_IDLE
   160  0009B9  0C                 	db	high _do_I2C_IDLE
   161  0009BA  00                 	db	low (_do_I2C_IDLE shr (0+16))
   162  0009BB  00                 	db	low _do_I2C_SEND_ADR_READ
   163  0009BC  0C                 	db	high _do_I2C_SEND_ADR_READ
   164  0009BD  00                 	db	low (_do_I2C_SEND_ADR_READ shr (0+16))
   165  0009BE  EC                 	db	low _do_I2C_SEND_ADR_WRITE
   166  0009BF  0B                 	db	high _do_I2C_SEND_ADR_WRITE
   167  0009C0  00                 	db	low (_do_I2C_SEND_ADR_WRITE shr (0+16))
   168  0009C1  94                 	db	low _do_I2C_TX
   169  0009C2  01                 	db	high _do_I2C_TX
   170  0009C3  00                 	db	low (_do_I2C_TX shr (0+16))
   171  0009C4  28                 	db	low _do_I2C_RX
   172  0009C5  04                 	db	high _do_I2C_RX
   173  0009C6  00                 	db	low (_do_I2C_RX shr (0+16))
   174  0009C7  4C                 	db	low _do_I2C_RCEN
   175  0009C8  0C                 	db	high _do_I2C_RCEN
   176  0009C9  00                 	db	low (_do_I2C_RCEN shr (0+16))
   177  0009CA  8A                 	db	low _do_I2C_TX_EMPTY
   178  0009CB  05                 	db	high _do_I2C_TX_EMPTY
   179  0009CC  00                 	db	low (_do_I2C_TX_EMPTY shr (0+16))
   180  0009CD  DC                 	db	low _do_I2C_SEND_RESTART_READ
   181  0009CE  0C                 	db	high _do_I2C_SEND_RESTART_READ
   182  0009CF  00                 	db	low (_do_I2C_SEND_RESTART_READ shr (0+16))
   183  0009D0  CE                 	db	low _do_I2C_SEND_RESTART_WRITE
   184  0009D1  0C                 	db	high _do_I2C_SEND_RESTART_WRITE
   185  0009D2  00                 	db	low (_do_I2C_SEND_RESTART_WRITE shr (0+16))
   186  0009D3  C0                 	db	low _do_I2C_SEND_RESTART
   187  0009D4  0C                 	db	high _do_I2C_SEND_RESTART
   188  0009D5  00                 	db	low (_do_I2C_SEND_RESTART shr (0+16))
   189  0009D6  B2                 	db	low _do_I2C_SEND_STOP
   190  0009D7  0C                 	db	high _do_I2C_SEND_STOP
   191  0009D8  00                 	db	low (_do_I2C_SEND_STOP shr (0+16))
   192  0009D9  A4                 	db	low _do_I2C_DO_ACK
   193  0009DA  0C                 	db	high _do_I2C_DO_ACK
   194  0009DB  00                 	db	low (_do_I2C_DO_ACK shr (0+16))
   195  0009DC  96                 	db	low _do_I2C_DO_NACK_STOP
   196  0009DD  0C                 	db	high _do_I2C_DO_NACK_STOP
   197  0009DE  00                 	db	low (_do_I2C_DO_NACK_STOP shr (0+16))
   198  0009DF  88                 	db	low _do_I2C_DO_NACK_RESTART
   199  0009E0  0C                 	db	high _do_I2C_DO_NACK_RESTART
   200  0009E1  00                 	db	low (_do_I2C_DO_NACK_RESTART shr (0+16))
   201  0009E2  14                 	db	low _do_I2C_RESET
   202  0009E3  0C                 	db	high _do_I2C_RESET
   203  0009E4  00                 	db	low (_do_I2C_RESET shr (0+16))
   204  0009E5  DA                 	db	low _do_I2C_DO_ADDRESS_NACK
   205  0009E6  06                 	db	high _do_I2C_DO_ADDRESS_NACK
   206  0009E7  00                 	db	low (_do_I2C_DO_ADDRESS_NACK shr (0+16))
   207  0000                     _SSP1DATPPSbits	set	3768
   208  0000                     _RC4PPS	set	3835
   209  0000                     _RC3PPS	set	3834
   210  0000                     _SSP1CLKPPSbits	set	3767
   211  0000                     _PIR3bits	set	3789
   212  0000                     _PIE3bits	set	3781
   213  0000                     _PMD5	set	3814
   214  0000                     _PMD4	set	3813
   215  0000                     _PMD3	set	3812
   216  0000                     _PMD2	set	3811
   217  0000                     _PMD1	set	3810
   218  0000                     _PMD0	set	3809
   219  0000                     _OSCTUNE	set	3805
   220  0000                     _OSCFRQ	set	3806
   221  0000                     _OSCEN	set	3804
   222  0000                     _OSCCON3	set	3802
   223  0000                     _OSCCON1	set	3800
   224  0000                     _ODCOND	set	3876
   225  0000                     _ODCONC	set	3871
   226  0000                     _ODCONB	set	3863
   227  0000                     _ODCONA	set	3855
   228  0000                     _ODCONE	set	3884
   229  0000                     _WPUC	set	3872
   230  0000                     _WPUA	set	3856
   231  0000                     _WPUB	set	3864
   232  0000                     _WPUE	set	3885
   233  0000                     _WPUD	set	3877
   234  0000                     _ANSELA	set	3857
   235  0000                     _ANSELE	set	3886
   236  0000                     _ANSELD	set	3878
   237  0000                     _ANSELB	set	3865
   238  0000                     _ANSELC	set	3873
   239  0000                     _INTCONbits	set	4082
   240  0000                     _TRISD	set	3979
   241  0000                     _TRISC	set	3978
   242  0000                     _TRISB	set	3977
   243  0000                     _TRISA	set	3976
   244  0000                     _TRISE	set	3980
   245  0000                     _LATC	set	3973
   246  0000                     _LATB	set	3972
   247  0000                     _LATA	set	3971
   248  0000                     _LATD	set	3974
   249  0000                     _LATE	set	3975
   250  0000                     _SSP1STATbits	set	3989
   251  0000                     _SSP1MSK	set	3988
   252  0000                     _SSP1BUF	set	3986
   253  0000                     _SSP1CON2bits	set	3991
   254  0000                     _SSP1ADD	set	3987
   255  0000                     _SSP1CON2	set	3991
   256  0000                     _SSP1CON1	set	3990
   257  0000                     _SSP1STAT	set	3989
   258  0000                     _SSP1CON1bits	set	3990
   259                           
   260                           ; #config settings
   261  0000                     
   262                           	psect	cinit
   263  000916                     __pcinit:
   264                           	opt stack 0
   265  000916                     start_initialization:
   266                           	opt stack 0
   267  000916                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Initialize objects allocated to BANK0 (48 bytes)
   271                           ; load TBLPTR registers with __pidataBANK0
   272  000916  0EB8               	movlw	low __pidataBANK0
   273  000918  6EF6               	movwf	tblptrl,c
   274  00091A  0E09               	movlw	high __pidataBANK0
   275  00091C  6EF7               	movwf	tblptrh,c
   276  00091E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   277  000920  6EF8               	movwf	tblptru,c
   278  000922  EE00  F060         	lfsr	0,__pdataBANK0
   279  000926  EE10 F030          	lfsr	1,48
   280  00092A                     copy_data0:
   281  00092A  0009               	tblrd		*+
   282  00092C  CFF5 FFEE          	movff	tablat,postinc0
   283  000930  50E5               	movf	postdec1,w,c
   284  000932  50E1               	movf	fsr1l,w,c
   285  000934  E1FA               	bnz	copy_data0
   286                           
   287                           ; Clear objects allocated to COMRAM (48 bytes)
   288  000936  EE00  F001         	lfsr	0,__pbssCOMRAM
   289  00093A  0E30               	movlw	48
   290  00093C                     clear_0:
   291  00093C  6AEE               	clrf	postinc0,c
   292  00093E  06E8               	decf	wreg,f,c
   293  000940  E1FD               	bnz	clear_0
   294  000942                     end_of_initialization:
   295                           	opt stack 0
   296  000942                     __end_of__initialization:
   297                           	opt stack 0
   298  000942  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   299  000944  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   300  000946  0100               	movlb	0
   301  000948  EF59  F001         	goto	_main	;jump to C main() function
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           postdec1	equ	0xFE5
   309                           fsr1l	equ	0xFE1
   310                           
   311                           	psect	bssCOMRAM
   312  000001                     __pbssCOMRAM:
   313                           	opt stack 0
   314  000001                     _i2c_status:
   315                           	opt stack 0
   316  000001                     	ds	42
   317  00002B                     _i2c1_driver_i2cISR:
   318                           	opt stack 0
   319  00002B                     	ds	3
   320  00002E                     _i2c1_driver_busCollisionISR:
   321                           	opt stack 0
   322  00002E                     	ds	3
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	dataBANK0
   333  000060                     __pdataBANK0:
   334                           	opt stack 0
   335  000060                     _fsmStateTable:
   336                           	opt stack 0
   337  000060                     	ds	48
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	cstackBANK0
   348  000090                     __pcstackBANK0:
   349                           	opt stack 0
   350  000090                     i2c_open@address:
   351                           	opt stack 0
   352  000090                     i2c_masterOperation@read:
   353                           	opt stack 0
   354  000090                     setCallBack@cb:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0x0
   358  000090                     	ds	1
   359  000091                     i2c_open@ret:
   360                           	opt stack 0
   361  000091                     i2c_masterOperation@ret:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x1
   365  000091                     	ds	1
   366  000092                     i2c_readNBytes@data:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x2
   370  000092                     	ds	1
   371  000093                     setCallBack@p:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0x3
   375  000093                     	ds	1
   376  000094                     i2c_readNBytes@len:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x4
   380  000094                     	ds	1
   381  000095                     i2c_setDataCompleteCallback@cb:
   382                           	opt stack 0
   383  000095                     i2c_setAddressNACKCallback@cb:
   384                           	opt stack 0
   385                           
   386                           ; 3 bytes @ 0x5
   387  000095                     	ds	1
   388  000096                     i2c_readNBytes@address:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x6
   392  000096                     	ds	2
   393  000098                     i2c_setDataCompleteCallback@p:
   394                           	opt stack 0
   395  000098                     i2c_setAddressNACKCallback@p:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x8
   399  000098                     	ds	2
   400  00009A                     returnStop@p:
   401                           	opt stack 0
   402  00009A                     wr1RegCompleteHandler@p:
   403                           	opt stack 0
   404  00009A                     i2c_writeNBytes@data:
   405                           	opt stack 0
   406  00009A                     rd1RegCompleteHandler@p:
   407                           	opt stack 0
   408  00009A                     rd2RegCompleteHandler@p:
   409                           	opt stack 0
   410  00009A                     wr2RegCompleteHandler@p:
   411                           	opt stack 0
   412  00009A                     rdBlkRegCompleteHandler@p:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0xA
   416  00009A                     	ds	2
   417  00009C                     i2c_writeNBytes@len:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0xC
   421  00009C                     	ds	2
   422  00009E                     i2c_writeNBytes@address:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0xE
   426  00009E                     	ds	1
   427  00009F                     main@rec:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0xF
   431  00009F                     	ds	1
   432  0000A0                     main@data:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x10
   436  0000A0                     	ds	2
   437  0000A2                     main@addr:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x12
   441  0000A2                     	ds	1
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	cstackCOMRAM
   452  000031                     __pcstackCOMRAM:
   453                           	opt stack 0
   454  000031                     ??i2_i2c1_driver_isNACK:
   455  000031                     i2i2c1_driver_TXData@d:
   456                           	opt stack 0
   457  000031                     i2i2c_setBuffer@buffer:
   458                           	opt stack 0
   459  000031                     i2setCallBack@cb:
   460                           	opt stack 0
   461                           
   462                           ; 3 bytes @ 0x0
   463  000031                     	ds	1
   464  000032                     i2_do_I2C_TX$1023:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x1
   468  000032                     	ds	1
   469  000033                     i2i2c_setBuffer@bufferSize:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x2
   473  000033                     	ds	1
   474  000034                     ??_INTERRUPT_InterruptManager:
   475  000034                     i2setCallBack@p:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x3
   479  000034                     	ds	1
   480  000035                     
   481                           ; 1 bytes @ 0x4
   482  000035                     	ds	1
   483  000036                     i2setCallBack@idx:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x5
   487  000036                     	ds	1
   488  000037                     i2i2c_setDataCompleteCallback@cb:
   489                           	opt stack 0
   490                           
   491                           ; 3 bytes @ 0x6
   492  000037                     	ds	3
   493  00003A                     i2i2c_setDataCompleteCallback@p:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x9
   497  00003A                     	ds	2
   498  00003C                     i2returnStop@p:
   499                           	opt stack 0
   500  00003C                     i2wr1RegCompleteHandler@p:
   501                           	opt stack 0
   502  00003C                     i2rd1RegCompleteHandler@p:
   503                           	opt stack 0
   504  00003C                     i2rd2RegCompleteHandler@p:
   505                           	opt stack 0
   506  00003C                     i2wr2RegCompleteHandler@p:
   507                           	opt stack 0
   508  00003C                     i2rdBlkRegCompleteHandler@p:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0xB
   512  00003C                     	ds	2
   513  00003E                     
   514                           ; 1 bytes @ 0xD
   515  00003E                     	ds	8
   516  000046                     ??_mssp1_IRQisEnabled:
   517  000046                     ??_i2c1_driver_isNACK:
   518  000046                     i2c1_driver_TXData@d:
   519                           	opt stack 0
   520  000046                     i2c_close@ret:
   521                           	opt stack 0
   522  000046                     setCallBack@idx:
   523                           	opt stack 0
   524  000046                     mssp1_waitForEvent@timeout:
   525                           	opt stack 0
   526  000046                     i2c_setBuffer@buffer:
   527                           	opt stack 0
   528  000046                     i2c1_driver_setBusCollisionISR@f:
   529                           	opt stack 0
   530  000046                     i2c1_driver_setI2cISR@f:
   531                           	opt stack 0
   532                           
   533                           ; 3 bytes @ 0x15
   534  000046                     	ds	1
   535  000047                     _do_I2C_TX$1023:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x16
   539  000047                     	ds	1
   540  000048                     i2c_setBuffer@bufferSize:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x17
   544  000048                     	ds	1
   545  000049                     
   546                           ; 1 bytes @ 0x18
   547  000049                     	ds	1
   548  00004A                     tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           ; 1 bytes @ 0x19
   558 ;;
   559 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   560 ;;
   561 ;; *************** function _main *****************
   562 ;; Defined at:
   563 ;;		line 48 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  data            2   16[BANK0 ] unsigned char [2]
   568 ;;  addr            1   18[BANK0 ] unsigned char 
   569 ;;  rec             1   15[BANK0 ] unsigned char 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   582 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   583 ;;Total ram usage:        4 bytes
   584 ;; Hardware stack levels required when called:   15
   585 ;; This function calls:
   586 ;;		_SYSTEM_Initialize
   587 ;;		_i2c_readNBytes
   588 ;;		_i2c_writeNBytes
   589 ;; This function is called by:
   590 ;;		Startup code after reset
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text0
   595  0002B2                     __ptext0:
   596                           	opt stack 0
   597  0002B2                     _main:
   598                           	opt stack 16
   599                           
   600                           ;main.c: 51: SYSTEM_Initialize();
   601                           
   602                           ;incstack = 0
   603  0002B2  EC1D  F006         	call	_SYSTEM_Initialize	;wreg free
   604                           
   605                           ;main.c: 58: (INTCONbits.GIE = 1);
   606  0002B6  8EF2               	bsf	intcon,7,c	;volatile
   607                           
   608                           ;main.c: 64: (INTCONbits.PEIE = 1);
   609  0002B8  8CF2               	bsf	intcon,6,c	;volatile
   610                           
   611                           ;main.c: 70: uint8_t data[2];
   612                           ;main.c: 71: uint8_t addr = 0x20;
   613  0002BA  0E20               	movlw	32
   614  0002BC  0100               	movlb	0	; () banked
   615  0002BE  6FA2               	movwf	main@addr& (0+255),b
   616                           
   617                           ; BSR set to: 0
   618                           ;main.c: 74: data[0] = 0x00;
   619  0002C0  0E00               	movlw	0
   620  0002C2  6FA0               	movwf	main@data& (0+255),b
   621                           
   622                           ; BSR set to: 0
   623                           ;main.c: 75: data[1] = 0x00;
   624  0002C4  0E00               	movlw	0
   625  0002C6  6FA1               	movwf	(main@data+1)& (0+255),b
   626                           
   627                           ; BSR set to: 0
   628                           ;main.c: 76: i2c_writeNBytes(addr, data, 2);
   629  0002C8  0EA0               	movlw	low main@data
   630  0002CA  6F9A               	movwf	i2c_writeNBytes@data& (0+255),b
   631  0002CC  0E00               	movlw	high main@data
   632  0002CE  6F9B               	movwf	(i2c_writeNBytes@data+1)& (0+255),b
   633  0002D0  0E00               	movlw	0
   634  0002D2  6F9D               	movwf	(i2c_writeNBytes@len+1)& (0+255),b
   635  0002D4  0E02               	movlw	2
   636  0002D6  6F9C               	movwf	i2c_writeNBytes@len& (0+255),b
   637  0002D8  51A2               	movf	main@addr& (0+255),w,b
   638  0002DA  EC1E  F003         	call	_i2c_writeNBytes
   639                           
   640                           ;main.c: 81: data[0]=0x13;
   641  0002DE  0E13               	movlw	19
   642  0002E0  0100               	movlb	0	; () banked
   643  0002E2  6FA0               	movwf	main@data& (0+255),b
   644                           
   645                           ; BSR set to: 0
   646                           ;main.c: 82: i2c_writeNBytes(addr, &data[0], 1);
   647  0002E4  0EA0               	movlw	low main@data
   648  0002E6  6F9A               	movwf	i2c_writeNBytes@data& (0+255),b
   649  0002E8  0E00               	movlw	high main@data
   650  0002EA  6F9B               	movwf	(i2c_writeNBytes@data+1)& (0+255),b
   651  0002EC  0E00               	movlw	0
   652  0002EE  6F9D               	movwf	(i2c_writeNBytes@len+1)& (0+255),b
   653  0002F0  0E01               	movlw	1
   654  0002F2  6F9C               	movwf	i2c_writeNBytes@len& (0+255),b
   655  0002F4  51A2               	movf	main@addr& (0+255),w,b
   656  0002F6  EC1E  F003         	call	_i2c_writeNBytes
   657                           
   658                           ;main.c: 83: uint8_t rec;
   659                           ;main.c: 84: i2c_readNBytes(addr, &rec, 1);
   660  0002FA  0E9F               	movlw	low main@rec
   661  0002FC  0100               	movlb	0	; () banked
   662  0002FE  6F92               	movwf	i2c_readNBytes@data& (0+255),b
   663  000300  0E00               	movlw	high main@rec
   664  000302  6F93               	movwf	(i2c_readNBytes@data+1)& (0+255),b
   665  000304  0E00               	movlw	0
   666  000306  6F95               	movwf	(i2c_readNBytes@len+1)& (0+255),b
   667  000308  0E01               	movlw	1
   668  00030A  6F94               	movwf	i2c_readNBytes@len& (0+255),b
   669  00030C  51A2               	movf	main@addr& (0+255),w,b
   670  00030E  ECA6  F004         	call	_i2c_readNBytes
   671                           
   672                           ;main.c: 88: data[0]=0x12;
   673  000312  0E12               	movlw	18
   674  000314  0100               	movlb	0	; () banked
   675  000316  6FA0               	movwf	main@data& (0+255),b
   676                           
   677                           ; BSR set to: 0
   678                           ;main.c: 89: data[1]=rec;
   679  000318  C09F  F0A1         	movff	main@rec,main@data+1
   680                           
   681                           ; BSR set to: 0
   682                           ;main.c: 90: i2c_writeNBytes(addr, data, 2);
   683  00031C  0EA0               	movlw	low main@data
   684  00031E  6F9A               	movwf	i2c_writeNBytes@data& (0+255),b
   685  000320  0E00               	movlw	high main@data
   686  000322  6F9B               	movwf	(i2c_writeNBytes@data+1)& (0+255),b
   687  000324  0E00               	movlw	0
   688  000326  6F9D               	movwf	(i2c_writeNBytes@len+1)& (0+255),b
   689  000328  0E02               	movlw	2
   690  00032A  6F9C               	movwf	i2c_writeNBytes@len& (0+255),b
   691  00032C  51A2               	movf	main@addr& (0+255),w,b
   692  00032E  EC1E  F003         	call	_i2c_writeNBytes
   693  000332                     l610:
   694                           
   695                           ;main.c: 93: {
   696  000332  D7FF               	goto	l610
   697  000334                     __end_of_main:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           intcon	equ	0xFF2
   704                           postinc0	equ	0xFEE
   705                           wreg	equ	0xFE8
   706                           postdec1	equ	0xFE5
   707                           fsr1l	equ	0xFE1
   708                           
   709 ;; *************** function _i2c_writeNBytes *****************
   710 ;; Defined at:
   711 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  address         1    wreg     unsigned char 
   714 ;;  data            2   10[BANK0 ] PTR void 
   715 ;;		 -> main@data(2), 
   716 ;;  len             2   12[BANK0 ] unsigned int 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  address         1   14[BANK0 ] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   728 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   731 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   732 ;;Total ram usage:        5 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:   14
   735 ;; This function calls:
   736 ;;		_i2c_close
   737 ;;		_i2c_masterWrite
   738 ;;		_i2c_open
   739 ;;		_i2c_setAddressNACKCallback
   740 ;;		_i2c_setBuffer
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text1
   747  00063C                     __ptext1:
   748                           	opt stack 0
   749  00063C                     _i2c_writeNBytes:
   750                           	opt stack 16
   751                           
   752                           ;incstack = 0
   753                           ;i2c_writeNBytes@address stored from wreg
   754  00063C  0100               	movlb	0	; () banked
   755  00063E  6F9E               	movwf	i2c_writeNBytes@address& (0+255),b
   756  000640                     
   757                           ;i2c_simple_master.c: 50: while(!i2c_open(address));
   758  000640  0100               	movlb	0	; () banked
   759  000642  519E               	movf	i2c_writeNBytes@address& (0+255),w,b
   760  000644  EC70  F000         	call	_i2c_open
   761  000648  0900               	iorlw	0
   762  00064A  B4D8               	btfsc	status,2,c
   763  00064C  D7F9               	goto	l3715
   764                           
   765                           ;i2c_simple_master.c: 51: i2c_setBuffer(data,len);
   766  00064E  C09A  F046         	movff	i2c_writeNBytes@data,i2c_setBuffer@buffer
   767  000652  C09B  F047         	movff	i2c_writeNBytes@data+1,i2c_setBuffer@buffer+1
   768  000656  C09C  F048         	movff	i2c_writeNBytes@len,i2c_setBuffer@bufferSize
   769  00065A  C09D  F049         	movff	i2c_writeNBytes@len+1,i2c_setBuffer@bufferSize+1
   770  00065E  ECA6  F005         	call	_i2c_setBuffer	;wreg free
   771                           
   772                           ;i2c_simple_master.c: 52: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
   773  000662  0E14               	movlw	low _i2c_restartWrite
   774  000664  0100               	movlb	0	; () banked
   775  000666  6F95               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
   776  000668  0E0D               	movlw	high _i2c_restartWrite
   777  00066A  6F96               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
   778  00066C  0E00               	movlw	low (_i2c_restartWrite shr (0+16))
   779  00066E  6F97               	movwf	(i2c_setAddressNACKCallback@cb+2)& (0+255),b
   780  000670  0E00               	movlw	0
   781  000672  6F98               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
   782  000674  0E00               	movlw	0
   783  000676  6F99               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
   784  000678  EC54  F005         	call	_i2c_setAddressNACKCallback	;wreg free
   785                           
   786                           ;i2c_simple_master.c: 53: i2c_masterWrite();
   787  00067C  ECA3  F006         	call	_i2c_masterWrite	;wreg free
   788  000680  EC70  F005         	call	_i2c_close	;wreg free
   789  000684  06E8               	decf	wreg,f,c
   790  000686  A4D8               	btfss	status,2,c
   791  000688  0012               	return	
   792  00068A  D7FA               	goto	l531
   793  00068C                     __end_of_i2c_writeNBytes:
   794                           	opt stack 0
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           intcon	equ	0xFF2
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           postdec1	equ	0xFE5
   803                           fsr1l	equ	0xFE1
   804                           status	equ	0xFD8
   805                           
   806 ;; *************** function _i2c_setAddressNACKCallback *****************
   807 ;; Defined at:
   808 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  cb              3    5[BANK0 ] PTR FTN(PTR void ,)enum 
   811 ;;		 -> i2c_restartWrite(1), 
   812 ;;  p               2    8[BANK0 ] PTR void 
   813 ;;		 -> NULL(0), 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   825 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   828 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   829 ;;Total ram usage:        5 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    7
   832 ;; This function calls:
   833 ;;		_setCallBack
   834 ;; This function is called by:
   835 ;;		_i2c_writeNBytes
   836 ;;		_i2c_write1ByteRegister
   837 ;;		_i2c_read1ByteRegister
   838 ;;		_i2c_read2ByteRegister
   839 ;;		_i2c_write2ByteRegister
   840 ;;		_i2c_readDataBlock
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text2
   845  000AA8                     __ptext2:
   846                           	opt stack 0
   847  000AA8                     _i2c_setAddressNACKCallback:
   848                           	opt stack 22
   849                           
   850                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
   851                           
   852                           ;incstack = 0
   853  000AA8  C095  F090         	movff	i2c_setAddressNACKCallback@cb,setCallBack@cb
   854  000AAC  C096  F091         	movff	i2c_setAddressNACKCallback@cb+1,setCallBack@cb+1
   855  000AB0  C097  F092         	movff	i2c_setAddressNACKCallback@cb+2,setCallBack@cb+2
   856  000AB4  C098  F093         	movff	i2c_setAddressNACKCallback@p,setCallBack@p
   857  000AB8  C099  F094         	movff	i2c_setAddressNACKCallback@p+1,setCallBack@p+1
   858  000ABC  0E02               	movlw	2
   859  000ABE  EC9A  F001         	call	_setCallBack
   860  000AC2  0012               	return		;funcret
   861  000AC4                     __end_of_i2c_setAddressNACKCallback:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           intcon	equ	0xFF2
   868                           postinc0	equ	0xFEE
   869                           wreg	equ	0xFE8
   870                           postdec1	equ	0xFE5
   871                           fsr1l	equ	0xFE1
   872                           status	equ	0xFD8
   873                           
   874 ;; *************** function _i2c_masterWrite *****************
   875 ;; Defined at:
   876 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      enum E11785
   883 ;; Registers used:
   884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   894 ;;Total ram usage:        0 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:   13
   897 ;; This function calls:
   898 ;;		_i2c_masterOperation
   899 ;; This function is called by:
   900 ;;		_i2c_writeNBytes
   901 ;;		_i2c_write1ByteRegister
   902 ;;		_i2c_read1ByteRegister
   903 ;;		_i2c_read2ByteRegister
   904 ;;		_i2c_write2ByteRegister
   905 ;;		_i2c_readDataBlock
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text3
   910  000D46                     __ptext3:
   911                           	opt stack 0
   912  000D46                     _i2c_masterWrite:
   913                           	opt stack 16
   914                           
   915                           ;i2c_master.c: 224: return i2c_masterOperation(0);
   916                           ;	Return value of _i2c_masterWrite is never used
   917                           
   918                           ;incstack = 0
   919  000D46  0E00               	movlw	0
   920  000D48  ECC1  F004         	call	_i2c_masterOperation
   921  000D4C  0012               	return	
   922  000D4E                     __end_of_i2c_masterWrite:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           tblptrh	equ	0xFF7
   926                           tblptrl	equ	0xFF6
   927                           tablat	equ	0xFF5
   928                           intcon	equ	0xFF2
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           postdec1	equ	0xFE5
   932                           fsr1l	equ	0xFE1
   933                           status	equ	0xFD8
   934                           
   935 ;; *************** function _i2c_readNBytes *****************
   936 ;; Defined at:
   937 ;;		line 156 in file "mcc_generated_files/drivers/i2c_simple_master.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  address         1    wreg     unsigned char 
   940 ;;  data            2    2[BANK0 ] PTR void 
   941 ;;		 -> main@rec(1), 
   942 ;;  len             2    4[BANK0 ] unsigned int 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  address         1    6[BANK0 ] unsigned char 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   957 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   958 ;;Total ram usage:        5 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:   14
   961 ;; This function calls:
   962 ;;		_i2c_close
   963 ;;		_i2c_masterRead
   964 ;;		_i2c_open
   965 ;;		_i2c_setBuffer
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text4
   972  00094C                     __ptext4:
   973                           	opt stack 0
   974  00094C                     _i2c_readNBytes:
   975                           	opt stack 16
   976                           
   977                           ;incstack = 0
   978                           ;i2c_readNBytes@address stored from wreg
   979  00094C  0100               	movlb	0	; () banked
   980  00094E  6F96               	movwf	i2c_readNBytes@address& (0+255),b
   981  000950                     
   982                           ;i2c_simple_master.c: 158: while(!i2c_open(address));
   983  000950  0100               	movlb	0	; () banked
   984  000952  5196               	movf	i2c_readNBytes@address& (0+255),w,b
   985  000954  EC70  F000         	call	_i2c_open
   986  000958  0900               	iorlw	0
   987  00095A  B4D8               	btfsc	status,2,c
   988  00095C  D7F9               	goto	l3727
   989                           
   990                           ;i2c_simple_master.c: 159: i2c_setBuffer(data,len);
   991  00095E  C092  F046         	movff	i2c_readNBytes@data,i2c_setBuffer@buffer
   992  000962  C093  F047         	movff	i2c_readNBytes@data+1,i2c_setBuffer@buffer+1
   993  000966  C094  F048         	movff	i2c_readNBytes@len,i2c_setBuffer@bufferSize
   994  00096A  C095  F049         	movff	i2c_readNBytes@len+1,i2c_setBuffer@bufferSize+1
   995  00096E  ECA6  F005         	call	_i2c_setBuffer	;wreg free
   996                           
   997                           ;i2c_simple_master.c: 160: i2c_masterRead();
   998  000972  ECA7  F006         	call	_i2c_masterRead	;wreg free
   999  000976  EC70  F005         	call	_i2c_close	;wreg free
  1000  00097A  06E8               	decf	wreg,f,c
  1001  00097C  A4D8               	btfss	status,2,c
  1002  00097E  0012               	return	
  1003  000980  D7FA               	goto	l591
  1004  000982                     __end_of_i2c_readNBytes:
  1005                           	opt stack 0
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           intcon	equ	0xFF2
  1011                           postinc0	equ	0xFEE
  1012                           wreg	equ	0xFE8
  1013                           postdec1	equ	0xFE5
  1014                           fsr1l	equ	0xFE1
  1015                           status	equ	0xFD8
  1016                           
  1017 ;; *************** function _i2c_open *****************
  1018 ;; Defined at:
  1019 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  address         1    wreg     unsigned char 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  address         1    0[BANK0 ] unsigned char 
  1024 ;;  ret             1    1[BANK0 ] enum E11785
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      enum E11785
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1038 ;;Total ram usage:        2 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    7
  1041 ;; This function calls:
  1042 ;;		_i2c1_driver_open
  1043 ;;		_i2c1_driver_setBusCollisionISR
  1044 ;;		_i2c1_driver_setI2cISR
  1045 ;;		_mssp1_clearIRQ
  1046 ;; This function is called by:
  1047 ;;		_i2c_writeNBytes
  1048 ;;		_i2c_readNBytes
  1049 ;;		_i2c_write1ByteRegister
  1050 ;;		_i2c_read1ByteRegister
  1051 ;;		_i2c_read2ByteRegister
  1052 ;;		_i2c_write2ByteRegister
  1053 ;;		_i2c_readDataBlock
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text5
  1058  0000E0                     __ptext5:
  1059                           	opt stack 0
  1060  0000E0                     _i2c_open:
  1061                           	opt stack 22
  1062                           
  1063                           ;incstack = 0
  1064                           ;i2c_open@address stored from wreg
  1065  0000E0  0100               	movlb	0	; () banked
  1066  0000E2  6F90               	movwf	i2c_open@address& (0+255),b
  1067                           
  1068                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
  1069  0000E4  0E01               	movlw	1
  1070  0000E6  0100               	movlb	0	; () banked
  1071  0000E8  6F91               	movwf	i2c_open@ret& (0+255),b
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;i2c_master.c: 120: if(!i2c_status.inUse)
  1075  0000EA  B201               	btfsc	_i2c_status,1,c
  1076  0000EC  D051               	goto	l348
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;i2c_master.c: 121: {
  1080                           ;i2c_master.c: 122: i2c_status.address = address;
  1081  0000EE  C090  F002         	movff	i2c_open@address,_i2c_status+1
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;i2c_master.c: 123: i2c_status.busy = 0;
  1085  0000F2  9001               	bcf	_i2c_status,0,c
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;i2c_master.c: 124: i2c_status.inUse = 1;
  1089  0000F4  8201               	bsf	_i2c_status,1,c
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
  1093  0000F6  9601               	bcf	_i2c_status,3,c
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
  1097  0000F8  0E0E               	movlw	14
  1098  0000FA  6E0B               	movwf	_i2c_status+10,c
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
  1102  0000FC  0E01               	movlw	1
  1103  0000FE  6E0A               	movwf	_i2c_status+9,c
  1104  000100  0EF4               	movlw	244
  1105  000102  6E09               	movwf	_i2c_status+8,c
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
  1109  000104  8401               	bsf	_i2c_status,2,c
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
  1113  000106  0E28               	movlw	low _returnStop
  1114  000108  6E0D               	movwf	_i2c_status+12,c
  1115  00010A  0E0D               	movlw	high _returnStop
  1116  00010C  6E0E               	movwf	_i2c_status+13,c
  1117  00010E  0E00               	movlw	low (_returnStop shr (0+16))
  1118  000110  6E0F               	movwf	_i2c_status+14,c
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
  1122  000112  0E00               	movlw	0
  1123  000114  6E1F               	movwf	_i2c_status+30,c
  1124  000116  0E00               	movlw	0
  1125  000118  6E20               	movwf	_i2c_status+31,c
  1126                           
  1127                           ; BSR set to: 0
  1128                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
  1129  00011A  0E28               	movlw	low _returnStop
  1130  00011C  6E10               	movwf	_i2c_status+15,c
  1131  00011E  0E0D               	movlw	high _returnStop
  1132  000120  6E11               	movwf	_i2c_status+16,c
  1133  000122  0E00               	movlw	low (_returnStop shr (0+16))
  1134  000124  6E12               	movwf	_i2c_status+17,c
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
  1138  000126  0E00               	movlw	0
  1139  000128  6E21               	movwf	_i2c_status+32,c
  1140  00012A  0E00               	movlw	0
  1141  00012C  6E22               	movwf	_i2c_status+33,c
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
  1145  00012E  0E28               	movlw	low _returnStop
  1146  000130  6E13               	movwf	_i2c_status+18,c
  1147  000132  0E0D               	movlw	high _returnStop
  1148  000134  6E14               	movwf	_i2c_status+19,c
  1149  000136  0E00               	movlw	low (_returnStop shr (0+16))
  1150  000138  6E15               	movwf	_i2c_status+20,c
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
  1154  00013A  0E00               	movlw	0
  1155  00013C  6E23               	movwf	_i2c_status+34,c
  1156  00013E  0E00               	movlw	0
  1157  000140  6E24               	movwf	_i2c_status+35,c
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
  1161  000142  0E28               	movlw	low _returnStop
  1162  000144  6E16               	movwf	_i2c_status+21,c
  1163  000146  0E0D               	movlw	high _returnStop
  1164  000148  6E17               	movwf	_i2c_status+22,c
  1165  00014A  0E00               	movlw	low (_returnStop shr (0+16))
  1166  00014C  6E18               	movwf	_i2c_status+23,c
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
  1170  00014E  0E00               	movlw	0
  1171  000150  6E25               	movwf	_i2c_status+36,c
  1172  000152  0E00               	movlw	0
  1173  000154  6E26               	movwf	_i2c_status+37,c
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
  1177  000156  0E1E               	movlw	low _returnReset
  1178  000158  6E19               	movwf	_i2c_status+24,c
  1179  00015A  0E0D               	movlw	high _returnReset
  1180  00015C  6E1A               	movwf	_i2c_status+25,c
  1181  00015E  0E00               	movlw	low (_returnReset shr (0+16))
  1182  000160  6E1B               	movwf	_i2c_status+26,c
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
  1186  000162  0E00               	movlw	0
  1187  000164  6E27               	movwf	_i2c_status+38,c
  1188  000166  0E00               	movlw	0
  1189  000168  6E28               	movwf	_i2c_status+39,c
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;i2c_master.c: 142: i2c1_driver_open();
  1193  00016A  ECCA  F005         	call	_i2c1_driver_open	;wreg free
  1194                           
  1195                           ;i2c_master.c: 143: mssp1_clearIRQ();
  1196  00016E  ECDB  F006         	call	_mssp1_clearIRQ	;wreg free
  1197                           
  1198                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
  1199  000172  0ED4               	movlw	low _i2c_busCollisionISR
  1200  000174  6E46               	movwf	i2c1_driver_setBusCollisionISR@f,c
  1201  000176  0E0D               	movlw	high _i2c_busCollisionISR
  1202  000178  6E47               	movwf	i2c1_driver_setBusCollisionISR@f+1,c
  1203  00017A  EC3D  F006         	call	_i2c1_driver_setBusCollisionISR	;wreg free
  1204                           
  1205                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
  1206  00017E  0E26               	movlw	low _i2c_ISR
  1207  000180  6E46               	movwf	i2c1_driver_setI2cISR@f,c
  1208  000182  0E07               	movlw	high _i2c_ISR
  1209  000184  6E47               	movwf	i2c1_driver_setI2cISR@f+1,c
  1210  000186  EC36  F006         	call	_i2c1_driver_setI2cISR	;wreg free
  1211                           
  1212                           ;i2c_master.c: 151: ret = I2C_NOERR;
  1213  00018A  0E00               	movlw	0
  1214  00018C  0100               	movlb	0	; () banked
  1215  00018E  6F91               	movwf	i2c_open@ret& (0+255),b
  1216  000190                     l348:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;i2c_master.c: 152: }
  1220                           ;i2c_master.c: 153: return ret;
  1221                           
  1222                           ; BSR set to: 0
  1223  000190  5191               	movf	i2c_open@ret& (0+255),w,b
  1224  000192  0012               	return	
  1225  000194                     __end_of_i2c_open:
  1226                           	opt stack 0
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           intcon	equ	0xFF2
  1232                           postinc0	equ	0xFEE
  1233                           wreg	equ	0xFE8
  1234                           postdec1	equ	0xFE5
  1235                           fsr1l	equ	0xFE1
  1236                           status	equ	0xFD8
  1237                           
  1238 ;; *************** function _i2c1_driver_setI2cISR *****************
  1239 ;; Defined at:
  1240 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  f               3   21[COMRAM] PTR void 
  1243 ;;		 -> i2c_ISR(1), 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1255 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1259 ;;Total ram usage:        3 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    6
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_i2c_open
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text6
  1270  000C6C                     __ptext6:
  1271                           	opt stack 0
  1272  000C6C                     _i2c1_driver_setI2cISR:
  1273                           	opt stack 22
  1274                           
  1275                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;incstack = 0
  1279  000C6C  C046  F02B         	movff	i2c1_driver_setI2cISR@f,_i2c1_driver_i2cISR
  1280  000C70  C047  F02C         	movff	i2c1_driver_setI2cISR@f+1,_i2c1_driver_i2cISR+1
  1281  000C74  C048  F02D         	movff	i2c1_driver_setI2cISR@f+2,_i2c1_driver_i2cISR+2
  1282  000C78  0012               	return		;funcret
  1283  000C7A                     __end_of_i2c1_driver_setI2cISR:
  1284                           	opt stack 0
  1285                           tblptru	equ	0xFF8
  1286                           tblptrh	equ	0xFF7
  1287                           tblptrl	equ	0xFF6
  1288                           tablat	equ	0xFF5
  1289                           intcon	equ	0xFF2
  1290                           postinc0	equ	0xFEE
  1291                           wreg	equ	0xFE8
  1292                           postdec1	equ	0xFE5
  1293                           fsr1l	equ	0xFE1
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
  1297 ;; Defined at:
  1298 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  f               3   21[COMRAM] PTR void 
  1301 ;;		 -> i2c_busCollisionISR(1), 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1313 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1317 ;;Total ram usage:        3 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    6
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_i2c_open
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text7
  1328  000C7A                     __ptext7:
  1329                           	opt stack 0
  1330  000C7A                     _i2c1_driver_setBusCollisionISR:
  1331                           	opt stack 22
  1332                           
  1333                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
  1334                           
  1335                           ;incstack = 0
  1336  000C7A  C046  F02E         	movff	i2c1_driver_setBusCollisionISR@f,_i2c1_driver_busCollisionISR
  1337  000C7E  C047  F02F         	movff	i2c1_driver_setBusCollisionISR@f+1,_i2c1_driver_busCollisionISR+1
  1338  000C82  C048  F030         	movff	i2c1_driver_setBusCollisionISR@f+2,_i2c1_driver_busCollisionISR+2
  1339  000C86  0012               	return		;funcret
  1340  000C88                     __end_of_i2c1_driver_setBusCollisionISR:
  1341                           	opt stack 0
  1342                           tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           postdec1	equ	0xFE5
  1350                           fsr1l	equ	0xFE1
  1351                           status	equ	0xFD8
  1352                           
  1353 ;; *************** function _i2c1_driver_open *****************
  1354 ;; Defined at:
  1355 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;		None               void
  1362 ;; Registers used:
  1363 ;;		wreg, status,2
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    6
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_i2c_open
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text8
  1384  000B94                     __ptext8:
  1385                           	opt stack 0
  1386  000B94                     _i2c1_driver_open:
  1387                           	opt stack 22
  1388                           
  1389                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  1390                           
  1391                           ;incstack = 0
  1392  000B94  BA96               	btfsc	3990,5,c	;volatile
  1393  000B96  0012               	return	
  1394                           
  1395                           ;i2c1_driver.c: 86: {
  1396                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
  1397  000B98  0E00               	movlw	0
  1398  000B9A  6E95               	movwf	3989,c	;volatile
  1399                           
  1400                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  1401  000B9C  0E28               	movlw	40
  1402  000B9E  6E96               	movwf	3990,c	;volatile
  1403                           
  1404                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  1405  000BA0  0E00               	movlw	0
  1406  000BA2  6E97               	movwf	3991,c	;volatile
  1407                           
  1408                           ;i2c1_driver.c: 90: SSP1ADD = 0x4;
  1409  000BA4  0E04               	movlw	4
  1410  000BA6  6E93               	movwf	3987,c	;volatile
  1411                           
  1412                           ;i2c1_driver.c: 93: else
  1413                           ;i2c1_driver.c: 94: return 0;
  1414                           ;	Return value of _i2c1_driver_open is never used
  1415                           
  1416                           ;i2c1_driver.c: 92: }
  1417                           
  1418                           ;i2c1_driver.c: 91: return 1;
  1419                           ;	Return value of _i2c1_driver_open is never used
  1420  000BA8  0012               	return	
  1421  000BAA                     __end_of_i2c1_driver_open:
  1422                           	opt stack 0
  1423                           tblptru	equ	0xFF8
  1424                           tblptrh	equ	0xFF7
  1425                           tblptrl	equ	0xFF6
  1426                           tablat	equ	0xFF5
  1427                           intcon	equ	0xFF2
  1428                           postinc0	equ	0xFEE
  1429                           wreg	equ	0xFE8
  1430                           postdec1	equ	0xFE5
  1431                           fsr1l	equ	0xFE1
  1432                           status	equ	0xFD8
  1433                           
  1434 ;; *************** function _i2c_masterRead *****************
  1435 ;; Defined at:
  1436 ;;		line 217 in file "mcc_generated_files/drivers/i2c_master.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      enum E11785
  1443 ;; Registers used:
  1444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:   13
  1457 ;; This function calls:
  1458 ;;		_i2c_masterOperation
  1459 ;; This function is called by:
  1460 ;;		_i2c_readNBytes
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text9
  1465  000D4E                     __ptext9:
  1466                           	opt stack 0
  1467  000D4E                     _i2c_masterRead:
  1468                           	opt stack 16
  1469                           
  1470                           ;i2c_master.c: 219: return i2c_masterOperation(1);
  1471                           ;	Return value of _i2c_masterRead is never used
  1472                           
  1473                           ;incstack = 0
  1474  000D4E  0E01               	movlw	1
  1475  000D50  ECC1  F004         	call	_i2c_masterOperation
  1476  000D54  0012               	return	
  1477  000D56                     __end_of_i2c_masterRead:
  1478                           	opt stack 0
  1479                           tblptru	equ	0xFF8
  1480                           tblptrh	equ	0xFF7
  1481                           tblptrl	equ	0xFF6
  1482                           tablat	equ	0xFF5
  1483                           intcon	equ	0xFF2
  1484                           postinc0	equ	0xFEE
  1485                           wreg	equ	0xFE8
  1486                           postdec1	equ	0xFE5
  1487                           fsr1l	equ	0xFE1
  1488                           status	equ	0xFD8
  1489                           
  1490 ;; *************** function _i2c_masterOperation *****************
  1491 ;; Defined at:
  1492 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  read            1    wreg     unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  read            1    0[BANK0 ] unsigned char 
  1497 ;;  ret             1    1[BANK0 ] enum E11785
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      enum E11785
  1500 ;; Registers used:
  1501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1511 ;;Total ram usage:        2 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:   12
  1514 ;; This function calls:
  1515 ;;		_i2c1_driver_start
  1516 ;;		_i2c_poller
  1517 ;;		_mssp1_IRQisEnabled
  1518 ;; This function is called by:
  1519 ;;		_i2c_masterRead
  1520 ;;		_i2c_masterWrite
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text10
  1525  000982                     __ptext10:
  1526                           	opt stack 0
  1527  000982                     _i2c_masterOperation:
  1528                           	opt stack 16
  1529                           
  1530                           ;incstack = 0
  1531                           ;i2c_masterOperation@read stored from wreg
  1532  000982  0100               	movlb	0	; () banked
  1533  000984  6F90               	movwf	i2c_masterOperation@read& (0+255),b
  1534                           
  1535                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
  1536  000986  0E01               	movlw	1
  1537  000988  0100               	movlb	0	; () banked
  1538  00098A  6F91               	movwf	i2c_masterOperation@ret& (0+255),b
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;i2c_master.c: 196: if(!i2c_status.busy)
  1542  00098C  B001               	btfsc	_i2c_status,0,c
  1543  00098E  D011               	goto	l369
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;i2c_master.c: 197: {
  1547                           ;i2c_master.c: 198: i2c_status.busy = 1;
  1548  000990  8001               	bsf	_i2c_status,0,c
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;i2c_master.c: 199: ret = I2C_NOERR;
  1552  000992  0E00               	movlw	0
  1553  000994  6F91               	movwf	i2c_masterOperation@ret& (0+255),b
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;i2c_master.c: 201: if(read)
  1557  000996  5190               	movf	i2c_masterOperation@read& (0+255),w,b
  1558  000998  B4D8               	btfsc	status,2,c
  1559  00099A  D002               	goto	l367
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;i2c_master.c: 202: {
  1563                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
  1564  00099C  0E01               	movlw	1
  1565  00099E  D001               	goto	L1
  1566  0009A0                     l367:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;i2c_master.c: 205: else
  1570                           ;i2c_master.c: 206: {
  1571                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
  1572                           
  1573                           ; BSR set to: 0
  1574  0009A0  0E02               	movlw	2
  1575  0009A2                     L1:
  1576  0009A2  6E0B               	movwf	_i2c_status+10,c
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;i2c_master.c: 208: }
  1580                           ;i2c_master.c: 209: i2c1_driver_start();
  1581                           
  1582                           ; BSR set to: 0
  1583  0009A4  ECF8  F006         	call	_i2c1_driver_start	;wreg free
  1584                           
  1585                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
  1586  0009A8  EC14  F006         	call	_mssp1_IRQisEnabled	;wreg free
  1587  0009AC  A0D8               	btfss	status,0,c
  1588                           
  1589                           ;i2c_master.c: 212: i2c_poller();
  1590  0009AE  EC9A  F005         	call	_i2c_poller	;wreg free
  1591  0009B2                     l369:
  1592                           
  1593                           ;i2c_master.c: 213: }
  1594                           ;i2c_master.c: 214: return ret;
  1595  0009B2  0100               	movlb	0	; () banked
  1596  0009B4  5191               	movf	i2c_masterOperation@ret& (0+255),w,b
  1597  0009B6  0012               	return	
  1598  0009B8                     __end_of_i2c_masterOperation:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           intcon	equ	0xFF2
  1605                           postinc0	equ	0xFEE
  1606                           wreg	equ	0xFE8
  1607                           postdec1	equ	0xFE5
  1608                           fsr1l	equ	0xFE1
  1609                           status	equ	0xFD8
  1610                           
  1611 ;; *************** function _mssp1_IRQisEnabled *****************
  1612 ;; Defined at:
  1613 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;		None               void
  1620 ;; Registers used:
  1621 ;;		wreg, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1631 ;;Total ram usage:        1 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    6
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_i2c_masterOperation
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text11
  1642  000C28                     __ptext11:
  1643                           	opt stack 0
  1644  000C28                     _mssp1_IRQisEnabled:
  1645                           	opt stack 21
  1646                           
  1647                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;incstack = 0
  1651  000C28  010E               	movlb	14	; () banked
  1652  000C2A  A1C5               	btfss	197,0,b	;volatile
  1653  000C2C  D003               	goto	u1310
  1654  000C2E  6A46               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  1655  000C30  2A46               	incf	??_mssp1_IRQisEnabled& (0+255),f,c
  1656  000C32  D001               	goto	u1318
  1657  000C34                     u1310:
  1658  000C34  6A46               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  1659  000C36                     u1318:
  1660  000C36  3046               	rrcf	??_mssp1_IRQisEnabled,w,c
  1661  000C38  0012               	return	
  1662  000C3A                     __end_of_mssp1_IRQisEnabled:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           tblptrh	equ	0xFF7
  1666                           tblptrl	equ	0xFF6
  1667                           tablat	equ	0xFF5
  1668                           intcon	equ	0xFF2
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           postdec1	equ	0xFE5
  1672                           fsr1l	equ	0xFE1
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function _i2c_poller *****************
  1676 ;; Defined at:
  1677 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:   11
  1698 ;; This function calls:
  1699 ;;		_i2c_ISR
  1700 ;;		_mssp1_waitForEvent
  1701 ;; This function is called by:
  1702 ;;		_i2c_masterOperation
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text12
  1707  000B34                     __ptext12:
  1708                           	opt stack 0
  1709  000B34                     _i2c_poller:
  1710                           	opt stack 16
  1711                           
  1712                           ;i2c_master.c: 232: while(i2c_status.busy)
  1713                           
  1714                           ;incstack = 0
  1715  000B34  D008               	goto	l379
  1716  000B36                     
  1717                           ;i2c_master.c: 233: {
  1718                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
  1719  000B36  0E00               	movlw	0
  1720  000B38  6E46               	movwf	mssp1_waitForEvent@timeout,c
  1721  000B3A  0E00               	movlw	0
  1722  000B3C  6E47               	movwf	mssp1_waitForEvent@timeout+1,c
  1723  000B3E  ECD5  F005         	call	_mssp1_waitForEvent	;wreg free
  1724                           
  1725                           ;i2c_master.c: 235: i2c_ISR();
  1726  000B42  EC93  F003         	call	_i2c_ISR	;wreg free
  1727  000B46                     l379:
  1728  000B46  A001               	btfss	_i2c_status,0,c
  1729  000B48  0012               	return	
  1730  000B4A  D7F5               	goto	l380
  1731  000B4C                     __end_of_i2c_poller:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           intcon	equ	0xFF2
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           postdec1	equ	0xFE5
  1741                           fsr1l	equ	0xFE1
  1742                           status	equ	0xFD8
  1743                           
  1744 ;; *************** function _mssp1_waitForEvent *****************
  1745 ;; Defined at:
  1746 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  timeout         2   21[COMRAM] PTR unsigned int 
  1749 ;;		 -> NULL(0), 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1765 ;;Total ram usage:        2 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    6
  1768 ;; This function calls:
  1769 ;;		Nothing
  1770 ;; This function is called by:
  1771 ;;		_i2c_poller
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text13
  1776  000BAA                     __ptext13:
  1777                           	opt stack 0
  1778  000BAA                     _mssp1_waitForEvent:
  1779                           	opt stack 20
  1780                           
  1781                           ;i2c1_driver.c: 73: if(PIR3bits.SSP1IF == 0)
  1782                           
  1783                           ;incstack = 0
  1784  000BAA  010E               	movlb	14	; () banked
  1785  000BAC  B1CD               	btfsc	205,0,b	;volatile
  1786  000BAE  0012               	return	
  1787  000BB0                     u1250:
  1788                           
  1789                           ;i2c1_driver.c: 76: {
  1790                           ;i2c1_driver.c: 77: if(PIR3bits.SSP1IF) break;
  1791                           
  1792                           ;i2c1_driver.c: 74: {
  1793                           ;i2c1_driver.c: 75: while(1)
  1794  000BB0  010E               	movlb	14	; () banked
  1795  000BB2  B1CD               	btfsc	205,0,b	;volatile
  1796  000BB4  0012               	return	
  1797                           
  1798                           ; BSR set to: 14
  1799                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(2000000/4000000.0)));
  1800                           
  1801                           ; BSR set to: 14
  1802                           
  1803                           ; BSR set to: 14
  1804  000BB6  0E10               	movlw	16
  1805  000BB8                     u1747:
  1806  000BB8  2EE8               	decfsz	wreg,f,c
  1807  000BBA  D7FE               	bra	u1747
  1808  000BBC  D000               	nop2	
  1809  000BBE  D7F8               	goto	u1250
  1810  000BC0                     __end_of_mssp1_waitForEvent:
  1811                           	opt stack 0
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           intcon	equ	0xFF2
  1817                           postinc0	equ	0xFEE
  1818                           wreg	equ	0xFE8
  1819                           postdec1	equ	0xFE5
  1820                           fsr1l	equ	0xFE1
  1821                           status	equ	0xFD8
  1822                           
  1823 ;; *************** function _i2c_ISR *****************
  1824 ;; Defined at:
  1825 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1843 ;;Total ram usage:        0 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:   10
  1846 ;; This function calls:
  1847 ;;		_do_I2C_DO_ACK
  1848 ;;		_do_I2C_DO_ADDRESS_NACK
  1849 ;;		_do_I2C_DO_NACK_RESTART
  1850 ;;		_do_I2C_DO_NACK_STOP
  1851 ;;		_do_I2C_IDLE
  1852 ;;		_do_I2C_RCEN
  1853 ;;		_do_I2C_RESET
  1854 ;;		_do_I2C_RX
  1855 ;;		_do_I2C_SEND_ADR_READ
  1856 ;;		_do_I2C_SEND_ADR_WRITE
  1857 ;;		_do_I2C_SEND_RESTART
  1858 ;;		_do_I2C_SEND_RESTART_READ
  1859 ;;		_do_I2C_SEND_RESTART_WRITE
  1860 ;;		_do_I2C_SEND_STOP
  1861 ;;		_do_I2C_TX
  1862 ;;		_do_I2C_TX_EMPTY
  1863 ;;		_i2c1_driver_isNACK
  1864 ;;		_mssp1_clearIRQ
  1865 ;; This function is called by:
  1866 ;;		_i2c_open
  1867 ;;		_i2c_poller
  1868 ;;		_INTERRUPT_InterruptManager
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text14
  1873  000726                     __ptext14:
  1874                           	opt stack 0
  1875  000726                     _i2c_ISR:
  1876                           	opt stack 0
  1877                           
  1878                           ;Skip over the trampoline to the duplicate function for level 2
  1879  000726  B24A               	btfsc	btemp,1,c
  1880  000728  EFFB  F003         	goto	i2_i2c_ISR
  1881  00072C                     _i2c_ISR$intlevel0:
  1882                           	opt stack 16
  1883                           
  1884                           ;i2c_master.c: 421: mssp1_clearIRQ();
  1885                           
  1886                           ;incstack = 0
  1887  00072C  ECDB  F006         	call	_mssp1_clearIRQ	;wreg free
  1888                           
  1889                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  1890  000730  A601               	btfss	_i2c_status,3,c
  1891  000732  D006               	goto	l469
  1892  000734  ECE0  F005         	call	_i2c1_driver_isNACK	;wreg free
  1893  000738  A0D8               	btfss	status,0,c
  1894  00073A  D002               	goto	l469
  1895                           
  1896                           ;i2c_master.c: 428: {
  1897                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  1898  00073C  0E0F               	movlw	15
  1899  00073E  6E0B               	movwf	_i2c_status+10,c
  1900  000740                     l469:
  1901                           
  1902                           ;i2c_master.c: 430: }
  1903                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  1904  000740  500B               	movf	_i2c_status+10,w,c
  1905  000742  0D03               	mullw	3
  1906  000744  0E60               	movlw	low _fsmStateTable
  1907  000746  24F3               	addwf	prodl,w,c
  1908  000748  6ED9               	movwf	fsr2l,c
  1909  00074A  0E00               	movlw	high _fsmStateTable
  1910  00074C  20F4               	addwfc	prodh,w,c
  1911  00074E  6EDA               	movwf	fsr2h,c
  1912  000750  D801               	call	u1298
  1913  000752  D00A               	goto	u1299
  1914  000754                     u1298:
  1915  000754  0005               	push	
  1916  000756  6EFA               	movwf	pclath,c
  1917  000758  50DE               	movf	postinc2,w,c
  1918  00075A  6EFD               	movwf	tosl,c
  1919  00075C  50DE               	movf	postinc2,w,c
  1920  00075E  6EFE               	movwf	tosh,c
  1921  000760  50DE               	movf	postinc2,w,c
  1922  000762  6EFF               	movwf	tosu,c
  1923  000764  50FA               	movf	pclath,w,c
  1924  000766  0012               	return		;indir
  1925  000768                     u1299:
  1926  000768  6E0B               	movwf	_i2c_status+10,c
  1927  00076A  0012               	return		;funcret
  1928  00076C                     __end_of_i2c_ISR:
  1929                           	opt stack 0
  1930                           tosu	equ	0xFFF
  1931                           tosh	equ	0xFFE
  1932                           tosl	equ	0xFFD
  1933                           pclath	equ	0xFFA
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           prodh	equ	0xFF4
  1939                           prodl	equ	0xFF3
  1940                           intcon	equ	0xFF2
  1941                           postinc0	equ	0xFEE
  1942                           wreg	equ	0xFE8
  1943                           postdec1	equ	0xFE5
  1944                           fsr1l	equ	0xFE1
  1945                           postinc2	equ	0xFDE
  1946                           fsr2h	equ	0xFDA
  1947                           fsr2l	equ	0xFD9
  1948                           status	equ	0xFD8
  1949                           
  1950 ;; *************** function _do_I2C_RX *****************
  1951 ;; Defined at:
  1952 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;		None
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      enum E11956
  1959 ;; Registers used:
  1960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1970 ;;Total ram usage:        0 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    9
  1973 ;; This function calls:
  1974 ;;		Absolute function
  1975 ;;		_do_I2C_DO_NACK_RESTART
  1976 ;;		_do_I2C_DO_NACK_STOP
  1977 ;;		_i2c1_driver_getRXData
  1978 ;;		_i2c1_driver_sendACK
  1979 ;;		_i2c_restartWrite
  1980 ;;		_rd1RegCompleteHandler
  1981 ;;		_rd2RegCompleteHandler
  1982 ;;		_rdBlkRegCompleteHandler
  1983 ;;		_returnReset
  1984 ;;		_returnStop
  1985 ;;		_wr1RegCompleteHandler
  1986 ;;		_wr2RegCompleteHandler
  1987 ;; This function is called by:
  1988 ;;		_i2c_ISR
  1989 ;;		i2_i2c_ISR
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text15
  1994  000428                     __ptext15:
  1995                           	opt stack 0
  1996  000428                     _do_I2C_RX:
  1997                           	opt stack 0
  1998                           
  1999                           ;Skip over the trampoline to the duplicate function for level 2
  2000  000428  B24A               	btfsc	btemp,1,c
  2001  00042A  EF8C  F002         	goto	i2_do_I2C_RX
  2002  00042E                     _do_I2C_RX$intlevel0:
  2003                           	opt stack 16
  2004                           
  2005                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  2006                           
  2007                           ;incstack = 0
  2008  00042E  ECF0  F006         	call	_i2c1_driver_getRXData	;wreg free
  2009  000432  C003  FFD9         	movff	_i2c_status+2,fsr2l
  2010  000436  C004  FFDA         	movff	_i2c_status+3,fsr2h
  2011  00043A  6EDF               	movwf	indf2,c
  2012  00043C  4A03               	infsnz	_i2c_status+2,f,c
  2013  00043E  2A04               	incf	_i2c_status+3,f,c
  2014                           
  2015                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  2016  000440  0605               	decf	_i2c_status+4,f,c
  2017  000442  A0D8               	btfss	status,0,c
  2018  000444  0606               	decf	_i2c_status+5,f,c
  2019  000446  5005               	movf	_i2c_status+4,w,c
  2020  000448  1006               	iorwf	_i2c_status+5,w,c
  2021  00044A  B4D8               	btfsc	status,2,c
  2022  00044C  D004               	goto	l445
  2023                           
  2024                           ;i2c_master.c: 361: {
  2025                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  2026  00044E  ECD5  F006         	call	_i2c1_driver_sendACK	;wreg free
  2027                           
  2028                           ;i2c_master.c: 363: return I2C_RCEN;
  2029  000452  0E05               	movlw	5
  2030                           
  2031                           ;i2c_master.c: 364: }
  2032  000454  0012               	return	
  2033  000456                     l445:
  2034                           
  2035                           ;i2c_master.c: 365: else
  2036                           ;i2c_master.c: 366: {
  2037                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  2038  000456  8401               	bsf	_i2c_status,2,c
  2039                           
  2040                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  2041  000458  D006               	goto	l448
  2042  00045A                     
  2043                           ;i2c_master.c: 371: case i2c_restart_read:
  2044                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  2045  00045A  EC44  F006         	call	_do_I2C_DO_NACK_RESTART	;wreg free
  2046  00045E  0012               	return	
  2047  000460                     
  2048                           ;i2c_master.c: 375: case i2c_stop:
  2049                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  2050                           
  2051                           ;i2c_master.c: 374: case i2c_continue:
  2052  000460  EC4B  F006         	call	_do_I2C_DO_NACK_STOP	;wreg free
  2053                           
  2054                           ;i2c_master.c: 377: }
  2055  000464  0012               	return	
  2056  000466                     l448:
  2057  000466  C01F  F09A         	movff	_i2c_status+30,returnStop@p
  2058  00046A  C020  F09B         	movff	_i2c_status+31,returnStop@p+1
  2059  00046E  EE20  F00D         	lfsr	2,_i2c_status+12
  2060  000472  D801               	call	u1238
  2061  000474  D00A               	goto	u1239
  2062  000476                     u1238:
  2063  000476  0005               	push	
  2064  000478  6EFA               	movwf	pclath,c
  2065  00047A  50DE               	movf	postinc2,w,c
  2066  00047C  6EFD               	movwf	tosl,c
  2067  00047E  50DE               	movf	postinc2,w,c
  2068  000480  6EFE               	movwf	tosh,c
  2069  000482  50DE               	movf	postinc2,w,c
  2070  000484  6EFF               	movwf	tosu,c
  2071  000486  50FA               	movf	pclath,w,c
  2072  000488  0012               	return		;indir
  2073  00048A                     u1239:
  2074                           
  2075                           ; Switch size 1, requested type "space"
  2076                           ; Number of cases is 4, Range of values is 1 to 4
  2077                           ; switch strategies available:
  2078                           ; Name         Instructions Cycles
  2079                           ; simple_byte           13     7 (average)
  2080                           ;	Chosen strategy is simple_byte
  2081  00048A  0A01               	xorlw	1	; case 1
  2082  00048C  B4D8               	btfsc	status,2,c
  2083  00048E  D7E8               	goto	l451
  2084  000490  0A03               	xorlw	3	; case 2
  2085  000492  B4D8               	btfsc	status,2,c
  2086  000494  D7E2               	goto	l449
  2087  000496  0A01               	xorlw	1	; case 3
  2088  000498  B4D8               	btfsc	status,2,c
  2089  00049A  D7DF               	goto	l449
  2090  00049C  0A07               	xorlw	7	; case 4
  2091  00049E  D7E0               	goto	l451
  2092  0004A0                     __end_of_do_I2C_RX:
  2093                           	opt stack 0
  2094                           tosu	equ	0xFFF
  2095                           tosh	equ	0xFFE
  2096                           tosl	equ	0xFFD
  2097                           pclath	equ	0xFFA
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           prodh	equ	0xFF4
  2103                           prodl	equ	0xFF3
  2104                           intcon	equ	0xFF2
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           postdec1	equ	0xFE5
  2108                           fsr1l	equ	0xFE1
  2109                           indf2	equ	0xFDF
  2110                           postinc2	equ	0xFDE
  2111                           fsr2h	equ	0xFDA
  2112                           fsr2l	equ	0xFD9
  2113                           status	equ	0xFD8
  2114                           
  2115 ;; *************** function _do_I2C_TX *****************
  2116 ;; Defined at:
  2117 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;		None
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      enum E11956
  2124 ;; Registers used:
  2125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2135 ;;Total ram usage:        2 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    9
  2138 ;; This function calls:
  2139 ;;		Absolute function
  2140 ;;		_do_I2C_SEND_RESTART_READ
  2141 ;;		_do_I2C_SEND_RESTART_WRITE
  2142 ;;		_do_I2C_SEND_STOP
  2143 ;;		_i2c1_driver_TXData
  2144 ;;		_i2c1_driver_isNACK
  2145 ;;		_i2c_restartWrite
  2146 ;;		_rd1RegCompleteHandler
  2147 ;;		_rd2RegCompleteHandler
  2148 ;;		_rdBlkRegCompleteHandler
  2149 ;;		_returnReset
  2150 ;;		_returnStop
  2151 ;;		_wr1RegCompleteHandler
  2152 ;;		_wr2RegCompleteHandler
  2153 ;; This function is called by:
  2154 ;;		_i2c_ISR
  2155 ;;		i2_i2c_ISR
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text16
  2160  000194                     __ptext16:
  2161                           	opt stack 0
  2162  000194                     _do_I2C_TX:
  2163                           	opt stack 0
  2164                           
  2165                           ;Skip over the trampoline to the duplicate function for level 2
  2166  000194  B24A               	btfsc	btemp,1,c
  2167  000196  EF13  F001         	goto	i2_do_I2C_TX
  2168  00019A                     _do_I2C_TX$intlevel0:
  2169                           	opt stack 16
  2170                           
  2171                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  2172                           
  2173                           ;incstack = 0
  2174  00019A  ECE0  F005         	call	_i2c1_driver_isNACK	;wreg free
  2175  00019E  B0D8               	btfsc	status,0,c
  2176  0001A0  D00A               	goto	l430
  2177  0001A2  D026               	goto	l429
  2178  0001A4                     
  2179                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  2180  0001A4  EC6E  F006         	call	_do_I2C_SEND_RESTART_READ	;wreg free
  2181  0001A8  0012               	return	
  2182  0001AA                     
  2183                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  2184  0001AA  EC67  F006         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
  2185  0001AE  0012               	return	
  2186  0001B0                     
  2187                           ;i2c_master.c: 345: case i2c_stop:
  2188                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  2189                           
  2190                           ;i2c_master.c: 344: case i2c_continue:
  2191  0001B0  EC59  F006         	call	_do_I2C_SEND_STOP	;wreg free
  2192                           
  2193                           ;i2c_master.c: 347: }
  2194  0001B4  0012               	return	
  2195  0001B6                     l430:
  2196  0001B6  C025  F09A         	movff	_i2c_status+36,returnStop@p
  2197  0001BA  C026  F09B         	movff	_i2c_status+37,returnStop@p+1
  2198  0001BE  EE20  F016         	lfsr	2,_i2c_status+21
  2199  0001C2  D801               	call	u1208
  2200  0001C4  D00A               	goto	u1209
  2201  0001C6                     u1208:
  2202  0001C6  0005               	push	
  2203  0001C8  6EFA               	movwf	pclath,c
  2204  0001CA  50DE               	movf	postinc2,w,c
  2205  0001CC  6EFD               	movwf	tosl,c
  2206  0001CE  50DE               	movf	postinc2,w,c
  2207  0001D0  6EFE               	movwf	tosh,c
  2208  0001D2  50DE               	movf	postinc2,w,c
  2209  0001D4  6EFF               	movwf	tosu,c
  2210  0001D6  50FA               	movf	pclath,w,c
  2211  0001D8  0012               	return		;indir
  2212  0001DA                     u1209:
  2213                           
  2214                           ; Switch size 1, requested type "space"
  2215                           ; Number of cases is 4, Range of values is 1 to 4
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte           13     7 (average)
  2219                           ;	Chosen strategy is simple_byte
  2220  0001DA  0A01               	xorlw	1	; case 1
  2221  0001DC  B4D8               	btfsc	status,2,c
  2222  0001DE  D7E8               	goto	l434
  2223  0001E0  0A03               	xorlw	3	; case 2
  2224  0001E2  B4D8               	btfsc	status,2,c
  2225  0001E4  D7DF               	goto	l431
  2226  0001E6  0A01               	xorlw	1	; case 3
  2227  0001E8  B4D8               	btfsc	status,2,c
  2228  0001EA  D7DF               	goto	l433
  2229  0001EC  0A07               	xorlw	7	; case 4
  2230  0001EE  D7E0               	goto	l434
  2231  0001F0                     l429:
  2232                           
  2233                           ;i2c_master.c: 349: else
  2234                           ;i2c_master.c: 350: {
  2235                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  2236  0001F0  9601               	bcf	_i2c_status,3,c
  2237                           
  2238                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  2239  0001F2  C003  FFD9         	movff	_i2c_status+2,fsr2l
  2240  0001F6  C004  FFDA         	movff	_i2c_status+3,fsr2h
  2241  0001FA  4A03               	infsnz	_i2c_status+2,f,c
  2242  0001FC  2A04               	incf	_i2c_status+3,f,c
  2243  0001FE  50DF               	movf	indf2,w,c
  2244  000200  ECAB  F006         	call	_i2c1_driver_TXData
  2245                           
  2246                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  2247  000204  0605               	decf	_i2c_status+4,f,c
  2248  000206  A0D8               	btfss	status,0,c
  2249  000208  0606               	decf	_i2c_status+5,f,c
  2250  00020A  5005               	movf	_i2c_status+4,w,c
  2251  00020C  1006               	iorwf	_i2c_status+5,w,c
  2252  00020E  A4D8               	btfss	status,2,c
  2253  000210  D004               	goto	l440
  2254  000212  0E00               	movlw	0
  2255  000214  6E48               	movwf	_do_I2C_TX$1023+1,c
  2256  000216  0E06               	movlw	6
  2257  000218  D003               	goto	L2
  2258  00021A                     l440:
  2259  00021A  0E00               	movlw	0
  2260  00021C  6E48               	movwf	_do_I2C_TX$1023+1,c
  2261  00021E  0E03               	movlw	3
  2262  000220                     L2:
  2263  000220  6E47               	movwf	_do_I2C_TX$1023,c
  2264  000222  5047               	movf	_do_I2C_TX$1023,w,c
  2265  000224  0012               	return	
  2266  000226                     __end_of_do_I2C_TX:
  2267                           	opt stack 0
  2268                           tosu	equ	0xFFF
  2269                           tosh	equ	0xFFE
  2270                           tosl	equ	0xFFD
  2271                           pclath	equ	0xFFA
  2272                           tblptru	equ	0xFF8
  2273                           tblptrh	equ	0xFF7
  2274                           tblptrl	equ	0xFF6
  2275                           tablat	equ	0xFF5
  2276                           prodh	equ	0xFF4
  2277                           prodl	equ	0xFF3
  2278                           intcon	equ	0xFF2
  2279                           postinc0	equ	0xFEE
  2280                           wreg	equ	0xFE8
  2281                           postdec1	equ	0xFE5
  2282                           fsr1l	equ	0xFE1
  2283                           indf2	equ	0xFDF
  2284                           postinc2	equ	0xFDE
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  2290 ;; Defined at:
  2291 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;		None
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      enum E11956
  2298 ;; Registers used:
  2299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2309 ;;Total ram usage:        0 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    9
  2312 ;; This function calls:
  2313 ;;		Absolute function
  2314 ;;		_do_I2C_SEND_RESTART
  2315 ;;		_do_I2C_SEND_STOP
  2316 ;;		_i2c_restartWrite
  2317 ;;		_rd1RegCompleteHandler
  2318 ;;		_rd2RegCompleteHandler
  2319 ;;		_rdBlkRegCompleteHandler
  2320 ;;		_returnReset
  2321 ;;		_returnStop
  2322 ;;		_wr1RegCompleteHandler
  2323 ;;		_wr2RegCompleteHandler
  2324 ;; This function is called by:
  2325 ;;		_i2c_ISR
  2326 ;;		i2_i2c_ISR
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text17
  2331  0006DA                     __ptext17:
  2332                           	opt stack 0
  2333  0006DA                     _do_I2C_DO_ADDRESS_NACK:
  2334                           	opt stack 0
  2335                           
  2336                           ;Skip over the trampoline to the duplicate function for level 2
  2337  0006DA  B24A               	btfsc	btemp,1,c
  2338  0006DC  EFB6  F003         	goto	i2_do_I2C_DO_ADDRESS_NACK
  2339  0006E0                     _do_I2C_DO_ADDRESS_NACK$intlevel0:
  2340                           	opt stack 16
  2341                           
  2342                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  2343                           
  2344                           ;incstack = 0
  2345  0006E0  9601               	bcf	_i2c_status,3,c
  2346                           
  2347                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  2348  0006E2  0E02               	movlw	2
  2349  0006E4  6E0C               	movwf	_i2c_status+11,c
  2350                           
  2351                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  2352  0006E6  D006               	goto	l421
  2353  0006E8                     
  2354                           ;i2c_master.c: 326: case i2c_restart_write:
  2355                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  2356  0006E8  EC60  F006         	call	_do_I2C_SEND_RESTART	;wreg free
  2357  0006EC  0012               	return	
  2358  0006EE                     
  2359                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  2360  0006EE  EC59  F006         	call	_do_I2C_SEND_STOP	;wreg free
  2361                           
  2362                           ;i2c_master.c: 330: }
  2363  0006F2  0012               	return	
  2364  0006F4                     l421:
  2365  0006F4  C023  F09A         	movff	_i2c_status+34,returnStop@p
  2366  0006F8  C024  F09B         	movff	_i2c_status+35,returnStop@p+1
  2367  0006FC  EE20  F013         	lfsr	2,_i2c_status+18
  2368  000700  D801               	call	u1188
  2369  000702  D00A               	goto	u1189
  2370  000704                     u1188:
  2371  000704  0005               	push	
  2372  000706  6EFA               	movwf	pclath,c
  2373  000708  50DE               	movf	postinc2,w,c
  2374  00070A  6EFD               	movwf	tosl,c
  2375  00070C  50DE               	movf	postinc2,w,c
  2376  00070E  6EFE               	movwf	tosh,c
  2377  000710  50DE               	movf	postinc2,w,c
  2378  000712  6EFF               	movwf	tosu,c
  2379  000714  50FA               	movf	pclath,w,c
  2380  000716  0012               	return		;indir
  2381  000718                     u1189:
  2382                           
  2383                           ; Switch size 1, requested type "space"
  2384                           ; Number of cases is 2, Range of values is 2 to 3
  2385                           ; switch strategies available:
  2386                           ; Name         Instructions Cycles
  2387                           ; simple_byte            7     4 (average)
  2388                           ;	Chosen strategy is simple_byte
  2389  000718  0A02               	xorlw	2	; case 2
  2390  00071A  B4D8               	btfsc	status,2,c
  2391  00071C  D7E5               	goto	l422
  2392  00071E  0A01               	xorlw	1	; case 3
  2393  000720  B4D8               	btfsc	status,2,c
  2394  000722  D7E2               	goto	l422
  2395  000724  D7E4               	goto	l425
  2396  000726                     __end_of_do_I2C_DO_ADDRESS_NACK:
  2397                           	opt stack 0
  2398                           tosu	equ	0xFFF
  2399                           tosh	equ	0xFFE
  2400                           tosl	equ	0xFFD
  2401                           pclath	equ	0xFFA
  2402                           tblptru	equ	0xFF8
  2403                           tblptrh	equ	0xFF7
  2404                           tblptrl	equ	0xFF6
  2405                           tablat	equ	0xFF5
  2406                           prodh	equ	0xFF4
  2407                           prodl	equ	0xFF3
  2408                           intcon	equ	0xFF2
  2409                           postinc0	equ	0xFEE
  2410                           wreg	equ	0xFE8
  2411                           postdec1	equ	0xFE5
  2412                           fsr1l	equ	0xFE1
  2413                           indf2	equ	0xFDF
  2414                           postinc2	equ	0xFDE
  2415                           fsr2h	equ	0xFDA
  2416                           fsr2l	equ	0xFD9
  2417                           status	equ	0xFD8
  2418                           
  2419 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  2420 ;; Defined at:
  2421 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;		None
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      enum E11956
  2428 ;; Registers used:
  2429 ;;		wreg, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;Total ram usage:        0 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    7
  2442 ;; This function calls:
  2443 ;;		_i2c1_driver_sendNACK
  2444 ;; This function is called by:
  2445 ;;		_do_I2C_RX
  2446 ;;		_i2c_ISR
  2447 ;;		i2_i2c_ISR
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text18
  2452  000C88                     __ptext18:
  2453                           	opt stack 0
  2454  000C88                     _do_I2C_DO_NACK_RESTART:
  2455                           	opt stack 0
  2456                           
  2457                           ;Skip over the trampoline to the duplicate function for level 2
  2458  000C88  B24A               	btfsc	btemp,1,c
  2459  000C8A  EFAF  F006         	goto	i2_do_I2C_DO_NACK_RESTART
  2460  000C8E                     _do_I2C_DO_NACK_RESTART$intlevel0:
  2461                           	opt stack 17
  2462                           
  2463                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  2464                           
  2465                           ;incstack = 0
  2466  000C8E  ECD2  F006         	call	_i2c1_driver_sendNACK	;wreg free
  2467                           
  2468                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  2469  000C92  0E09               	movlw	9
  2470  000C94  0012               	return	
  2471  000C96                     __end_of_do_I2C_DO_NACK_RESTART:
  2472                           	opt stack 0
  2473                           tosu	equ	0xFFF
  2474                           tosh	equ	0xFFE
  2475                           tosl	equ	0xFFD
  2476                           pclath	equ	0xFFA
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           prodh	equ	0xFF4
  2482                           prodl	equ	0xFF3
  2483                           intcon	equ	0xFF2
  2484                           postinc0	equ	0xFEE
  2485                           wreg	equ	0xFE8
  2486                           postdec1	equ	0xFE5
  2487                           fsr1l	equ	0xFE1
  2488                           indf2	equ	0xFDF
  2489                           postinc2	equ	0xFDE
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  2495 ;; Defined at:
  2496 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      enum E11956
  2503 ;; Registers used:
  2504 ;;		wreg, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    7
  2517 ;; This function calls:
  2518 ;;		_i2c1_driver_sendNACK
  2519 ;; This function is called by:
  2520 ;;		_do_I2C_RX
  2521 ;;		_i2c_ISR
  2522 ;;		i2_i2c_ISR
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text19
  2527  000C96                     __ptext19:
  2528                           	opt stack 0
  2529  000C96                     _do_I2C_DO_NACK_STOP:
  2530                           	opt stack 0
  2531                           
  2532                           ;Skip over the trampoline to the duplicate function for level 2
  2533  000C96  B24A               	btfsc	btemp,1,c
  2534  000C98  EFB3  F006         	goto	i2_do_I2C_DO_NACK_STOP
  2535  000C9C                     _do_I2C_DO_NACK_STOP$intlevel0:
  2536                           	opt stack 17
  2537                           
  2538                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  2539                           
  2540                           ;incstack = 0
  2541  000C9C  ECD2  F006         	call	_i2c1_driver_sendNACK	;wreg free
  2542                           
  2543                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  2544  000CA0  0E0A               	movlw	10
  2545  000CA2  0012               	return	
  2546  000CA4                     __end_of_do_I2C_DO_NACK_STOP:
  2547                           	opt stack 0
  2548                           tosu	equ	0xFFF
  2549                           tosh	equ	0xFFE
  2550                           tosl	equ	0xFFD
  2551                           pclath	equ	0xFFA
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           prodh	equ	0xFF4
  2557                           prodl	equ	0xFF3
  2558                           intcon	equ	0xFF2
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           postdec1	equ	0xFE5
  2562                           fsr1l	equ	0xFE1
  2563                           indf2	equ	0xFDF
  2564                           postinc2	equ	0xFDE
  2565                           fsr2h	equ	0xFDA
  2566                           fsr2l	equ	0xFD9
  2567                           status	equ	0xFD8
  2568                           
  2569 ;; *************** function _do_I2C_DO_ACK *****************
  2570 ;; Defined at:
  2571 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      enum E11956
  2578 ;; Registers used:
  2579 ;;		wreg, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2589 ;;Total ram usage:        0 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    7
  2592 ;; This function calls:
  2593 ;;		_i2c1_driver_sendACK
  2594 ;; This function is called by:
  2595 ;;		_i2c_ISR
  2596 ;;		i2_i2c_ISR
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text20
  2601  000CA4                     __ptext20:
  2602                           	opt stack 0
  2603  000CA4                     _do_I2C_DO_ACK:
  2604                           	opt stack 0
  2605                           
  2606                           ;Skip over the trampoline to the duplicate function for level 2
  2607  000CA4  B24A               	btfsc	btemp,1,c
  2608  000CA6  EFB7  F006         	goto	i2_do_I2C_DO_ACK
  2609  000CAA                     _do_I2C_DO_ACK$intlevel0:
  2610                           	opt stack 18
  2611                           
  2612                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  2613                           
  2614                           ;incstack = 0
  2615  000CAA  ECD5  F006         	call	_i2c1_driver_sendACK	;wreg free
  2616                           
  2617                           ;i2c_master.c: 302: return I2C_RCEN;
  2618  000CAE  0E05               	movlw	5
  2619  000CB0  0012               	return	
  2620  000CB2                     __end_of_do_I2C_DO_ACK:
  2621                           	opt stack 0
  2622                           tosu	equ	0xFFF
  2623                           tosh	equ	0xFFE
  2624                           tosl	equ	0xFFD
  2625                           pclath	equ	0xFFA
  2626                           tblptru	equ	0xFF8
  2627                           tblptrh	equ	0xFF7
  2628                           tblptrl	equ	0xFF6
  2629                           tablat	equ	0xFF5
  2630                           prodh	equ	0xFF4
  2631                           prodl	equ	0xFF3
  2632                           intcon	equ	0xFF2
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           postdec1	equ	0xFE5
  2636                           fsr1l	equ	0xFE1
  2637                           indf2	equ	0xFDF
  2638                           postinc2	equ	0xFDE
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function _do_I2C_RCEN *****************
  2644 ;; Defined at:
  2645 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      enum E11956
  2652 ;; Registers used:
  2653 ;;		wreg, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2663 ;;Total ram usage:        0 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    7
  2666 ;; This function calls:
  2667 ;;		_i2c1_driver_startRX
  2668 ;; This function is called by:
  2669 ;;		_i2c_ISR
  2670 ;;		i2_i2c_ISR
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text21
  2675  000C4C                     __ptext21:
  2676                           	opt stack 0
  2677  000C4C                     _do_I2C_RCEN:
  2678                           	opt stack 0
  2679                           
  2680                           ;Skip over the trampoline to the duplicate function for level 2
  2681  000C4C  B24A               	btfsc	btemp,1,c
  2682  000C4E  EF99  F006         	goto	i2_do_I2C_RCEN
  2683  000C52                     _do_I2C_RCEN$intlevel0:
  2684                           	opt stack 18
  2685                           
  2686                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  2687                           
  2688                           ;incstack = 0
  2689  000C52  9601               	bcf	_i2c_status,3,c
  2690                           
  2691                           ;i2c_master.c: 295: i2c1_driver_startRX();
  2692  000C54  ECF2  F006         	call	_i2c1_driver_startRX	;wreg free
  2693                           
  2694                           ;i2c_master.c: 296: return I2C_RX;
  2695  000C58  0E04               	movlw	4
  2696  000C5A  0012               	return	
  2697  000C5C                     __end_of_do_I2C_RCEN:
  2698                           	opt stack 0
  2699                           tosu	equ	0xFFF
  2700                           tosh	equ	0xFFE
  2701                           tosl	equ	0xFFD
  2702                           pclath	equ	0xFFA
  2703                           tblptru	equ	0xFF8
  2704                           tblptrh	equ	0xFF7
  2705                           tblptrl	equ	0xFF6
  2706                           tablat	equ	0xFF5
  2707                           prodh	equ	0xFF4
  2708                           prodl	equ	0xFF3
  2709                           intcon	equ	0xFF2
  2710                           postinc0	equ	0xFEE
  2711                           wreg	equ	0xFE8
  2712                           postdec1	equ	0xFE5
  2713                           fsr1l	equ	0xFE1
  2714                           indf2	equ	0xFDF
  2715                           postinc2	equ	0xFDE
  2716                           fsr2h	equ	0xFDA
  2717                           fsr2l	equ	0xFD9
  2718                           status	equ	0xFD8
  2719                           
  2720 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  2721 ;; Defined at:
  2722 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      enum E11956
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;Total ram usage:        0 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    7
  2743 ;; This function calls:
  2744 ;;		_i2c1_driver_TXData
  2745 ;; This function is called by:
  2746 ;;		_i2c_ISR
  2747 ;;		i2_i2c_ISR
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text22
  2752  000BEC                     __ptext22:
  2753                           	opt stack 0
  2754  000BEC                     _do_I2C_SEND_ADR_WRITE:
  2755                           	opt stack 0
  2756                           
  2757                           ;Skip over the trampoline to the duplicate function for level 2
  2758  000BEC  B24A               	btfsc	btemp,1,c
  2759  000BEE  EF75  F006         	goto	i2_do_I2C_SEND_ADR_WRITE
  2760  000BF2                     _do_I2C_SEND_ADR_WRITE$intlevel0:
  2761                           	opt stack 18
  2762                           
  2763                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  2764                           
  2765                           ;incstack = 0
  2766  000BF2  8601               	bsf	_i2c_status,3,c
  2767                           
  2768                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  2769  000BF4  5002               	movf	_i2c_status+1,w,c
  2770  000BF6  2402               	addwf	_i2c_status+1,w,c
  2771  000BF8  ECAB  F006         	call	_i2c1_driver_TXData
  2772                           
  2773                           ;i2c_master.c: 289: return I2C_TX;
  2774  000BFC  0E03               	movlw	3
  2775  000BFE  0012               	return	
  2776  000C00                     __end_of_do_I2C_SEND_ADR_WRITE:
  2777                           	opt stack 0
  2778                           tosu	equ	0xFFF
  2779                           tosh	equ	0xFFE
  2780                           tosl	equ	0xFFD
  2781                           pclath	equ	0xFFA
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           intcon	equ	0xFF2
  2789                           postinc0	equ	0xFEE
  2790                           wreg	equ	0xFE8
  2791                           postdec1	equ	0xFE5
  2792                           fsr1l	equ	0xFE1
  2793                           indf2	equ	0xFDF
  2794                           postinc2	equ	0xFDE
  2795                           fsr2h	equ	0xFDA
  2796                           fsr2l	equ	0xFD9
  2797                           status	equ	0xFD8
  2798                           
  2799 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  2800 ;; Defined at:
  2801 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;		None
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      enum E11956
  2808 ;; Registers used:
  2809 ;;		wreg, status,0, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2819 ;;Total ram usage:        0 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    7
  2822 ;; This function calls:
  2823 ;;		_i2c1_driver_TXData
  2824 ;; This function is called by:
  2825 ;;		_i2c_ISR
  2826 ;;		i2_i2c_ISR
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text23
  2831  000C00                     __ptext23:
  2832                           	opt stack 0
  2833  000C00                     _do_I2C_SEND_ADR_READ:
  2834                           	opt stack 0
  2835                           
  2836                           ;Skip over the trampoline to the duplicate function for level 2
  2837  000C00  B24A               	btfsc	btemp,1,c
  2838  000C02  EF7C  F006         	goto	i2_do_I2C_SEND_ADR_READ
  2839  000C06                     _do_I2C_SEND_ADR_READ$intlevel0:
  2840                           	opt stack 18
  2841                           
  2842                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  2843                           
  2844                           ;incstack = 0
  2845  000C06  8601               	bsf	_i2c_status,3,c
  2846                           
  2847                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  2848  000C08  80D8               	bsf	status,0,c
  2849  000C0A  3402               	rlcf	_i2c_status+1,w,c
  2850  000C0C  ECAB  F006         	call	_i2c1_driver_TXData
  2851                           
  2852                           ;i2c_master.c: 282: return I2C_RCEN;
  2853  000C10  0E05               	movlw	5
  2854  000C12  0012               	return	
  2855  000C14                     __end_of_do_I2C_SEND_ADR_READ:
  2856                           	opt stack 0
  2857                           tosu	equ	0xFFF
  2858                           tosh	equ	0xFFE
  2859                           tosl	equ	0xFFD
  2860                           pclath	equ	0xFFA
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           prodh	equ	0xFF4
  2866                           prodl	equ	0xFF3
  2867                           intcon	equ	0xFF2
  2868                           postinc0	equ	0xFEE
  2869                           wreg	equ	0xFE8
  2870                           postdec1	equ	0xFE5
  2871                           fsr1l	equ	0xFE1
  2872                           indf2	equ	0xFDF
  2873                           postinc2	equ	0xFDE
  2874                           fsr2h	equ	0xFDA
  2875                           fsr2l	equ	0xFD9
  2876                           status	equ	0xFD8
  2877                           
  2878 ;; *************** function _do_I2C_SEND_STOP *****************
  2879 ;; Defined at:
  2880 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      enum E11956
  2887 ;; Registers used:
  2888 ;;		wreg, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    7
  2901 ;; This function calls:
  2902 ;;		_i2c1_driver_stop
  2903 ;; This function is called by:
  2904 ;;		_do_I2C_DO_ADDRESS_NACK
  2905 ;;		_do_I2C_TX
  2906 ;;		_do_I2C_TX_EMPTY
  2907 ;;		_i2c_ISR
  2908 ;;		i2_i2c_ISR
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text24
  2913  000CB2                     __ptext24:
  2914                           	opt stack 0
  2915  000CB2                     _do_I2C_SEND_STOP:
  2916                           	opt stack 0
  2917                           
  2918                           ;Skip over the trampoline to the duplicate function for level 2
  2919  000CB2  B24A               	btfsc	btemp,1,c
  2920  000CB4  EFBB  F006         	goto	i2_do_I2C_SEND_STOP
  2921  000CB8                     _do_I2C_SEND_STOP$intlevel0:
  2922                           	opt stack 17
  2923                           
  2924                           ;i2c_master.c: 274: i2c1_driver_stop();
  2925                           
  2926                           ;incstack = 0
  2927  000CB8  ECF4  F006         	call	_i2c1_driver_stop	;wreg free
  2928                           
  2929                           ;i2c_master.c: 275: return I2C_IDLE;
  2930  000CBC  0E00               	movlw	0
  2931  000CBE  0012               	return	
  2932  000CC0                     __end_of_do_I2C_SEND_STOP:
  2933                           	opt stack 0
  2934                           tosu	equ	0xFFF
  2935                           tosh	equ	0xFFE
  2936                           tosl	equ	0xFFD
  2937                           pclath	equ	0xFFA
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodh	equ	0xFF4
  2943                           prodl	equ	0xFF3
  2944                           intcon	equ	0xFF2
  2945                           postinc0	equ	0xFEE
  2946                           wreg	equ	0xFE8
  2947                           postdec1	equ	0xFE5
  2948                           fsr1l	equ	0xFE1
  2949                           indf2	equ	0xFDF
  2950                           postinc2	equ	0xFDE
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _do_I2C_SEND_RESTART *****************
  2956 ;; Defined at:
  2957 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      enum E11956
  2964 ;; Registers used:
  2965 ;;		wreg, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    7
  2978 ;; This function calls:
  2979 ;;		_i2c1_driver_restart
  2980 ;; This function is called by:
  2981 ;;		_do_I2C_DO_ADDRESS_NACK
  2982 ;;		_do_I2C_TX_EMPTY
  2983 ;;		_i2c_ISR
  2984 ;;		i2_i2c_ISR
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text25
  2989  000CC0                     __ptext25:
  2990                           	opt stack 0
  2991  000CC0                     _do_I2C_SEND_RESTART:
  2992                           	opt stack 0
  2993                           
  2994                           ;Skip over the trampoline to the duplicate function for level 2
  2995  000CC0  B24A               	btfsc	btemp,1,c
  2996  000CC2  EFBF  F006         	goto	i2_do_I2C_SEND_RESTART
  2997  000CC6                     _do_I2C_SEND_RESTART$intlevel0:
  2998                           	opt stack 17
  2999                           
  3000                           ;i2c_master.c: 268: i2c1_driver_restart();
  3001                           
  3002                           ;incstack = 0
  3003  000CC6  ECF6  F006         	call	_i2c1_driver_restart	;wreg free
  3004                           
  3005                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  3006  000CCA  0E01               	movlw	1
  3007  000CCC  0012               	return	
  3008  000CCE                     __end_of_do_I2C_SEND_RESTART:
  3009                           	opt stack 0
  3010                           tosu	equ	0xFFF
  3011                           tosh	equ	0xFFE
  3012                           tosl	equ	0xFFD
  3013                           pclath	equ	0xFFA
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           prodh	equ	0xFF4
  3019                           prodl	equ	0xFF3
  3020                           intcon	equ	0xFF2
  3021                           postinc0	equ	0xFEE
  3022                           wreg	equ	0xFE8
  3023                           postdec1	equ	0xFE5
  3024                           fsr1l	equ	0xFE1
  3025                           indf2	equ	0xFDF
  3026                           postinc2	equ	0xFDE
  3027                           fsr2h	equ	0xFDA
  3028                           fsr2l	equ	0xFD9
  3029                           status	equ	0xFD8
  3030                           
  3031 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  3032 ;; Defined at:
  3033 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      enum E11956
  3040 ;; Registers used:
  3041 ;;		wreg, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    7
  3054 ;; This function calls:
  3055 ;;		_i2c1_driver_restart
  3056 ;; This function is called by:
  3057 ;;		_do_I2C_TX
  3058 ;;		_i2c_ISR
  3059 ;;		i2_i2c_ISR
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text26
  3064  000CCE                     __ptext26:
  3065                           	opt stack 0
  3066  000CCE                     _do_I2C_SEND_RESTART_WRITE:
  3067                           	opt stack 0
  3068                           
  3069                           ;Skip over the trampoline to the duplicate function for level 2
  3070  000CCE  B24A               	btfsc	btemp,1,c
  3071  000CD0  EFC3  F006         	goto	i2_do_I2C_SEND_RESTART_WRITE
  3072  000CD4                     _do_I2C_SEND_RESTART_WRITE$intlevel0:
  3073                           	opt stack 17
  3074                           
  3075                           ;i2c_master.c: 262: i2c1_driver_restart();
  3076                           
  3077                           ;incstack = 0
  3078  000CD4  ECF6  F006         	call	_i2c1_driver_restart	;wreg free
  3079                           
  3080                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  3081  000CD8  0E02               	movlw	2
  3082  000CDA  0012               	return	
  3083  000CDC                     __end_of_do_I2C_SEND_RESTART_WRITE:
  3084                           	opt stack 0
  3085                           tosu	equ	0xFFF
  3086                           tosh	equ	0xFFE
  3087                           tosl	equ	0xFFD
  3088                           pclath	equ	0xFFA
  3089                           tblptru	equ	0xFF8
  3090                           tblptrh	equ	0xFF7
  3091                           tblptrl	equ	0xFF6
  3092                           tablat	equ	0xFF5
  3093                           prodh	equ	0xFF4
  3094                           prodl	equ	0xFF3
  3095                           intcon	equ	0xFF2
  3096                           postinc0	equ	0xFEE
  3097                           wreg	equ	0xFE8
  3098                           postdec1	equ	0xFE5
  3099                           fsr1l	equ	0xFE1
  3100                           indf2	equ	0xFDF
  3101                           postinc2	equ	0xFDE
  3102                           fsr2h	equ	0xFDA
  3103                           fsr2l	equ	0xFD9
  3104                           status	equ	0xFD8
  3105                           
  3106 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  3107 ;; Defined at:
  3108 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;		None
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  1    wreg      enum E11956
  3115 ;; Registers used:
  3116 ;;		wreg, cstack
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;Total ram usage:        0 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    7
  3129 ;; This function calls:
  3130 ;;		_i2c1_driver_restart
  3131 ;; This function is called by:
  3132 ;;		_do_I2C_TX
  3133 ;;		_i2c_ISR
  3134 ;;		i2_i2c_ISR
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text27
  3139  000CDC                     __ptext27:
  3140                           	opt stack 0
  3141  000CDC                     _do_I2C_SEND_RESTART_READ:
  3142                           	opt stack 0
  3143                           
  3144                           ;Skip over the trampoline to the duplicate function for level 2
  3145  000CDC  B24A               	btfsc	btemp,1,c
  3146  000CDE  EFC7  F006         	goto	i2_do_I2C_SEND_RESTART_READ
  3147  000CE2                     _do_I2C_SEND_RESTART_READ$intlevel0:
  3148                           	opt stack 17
  3149                           
  3150                           ;i2c_master.c: 256: i2c1_driver_restart();
  3151                           
  3152                           ;incstack = 0
  3153  000CE2  ECF6  F006         	call	_i2c1_driver_restart	;wreg free
  3154                           
  3155                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  3156  000CE6  0E01               	movlw	1
  3157  000CE8  0012               	return	
  3158  000CEA                     __end_of_do_I2C_SEND_RESTART_READ:
  3159                           	opt stack 0
  3160                           tosu	equ	0xFFF
  3161                           tosh	equ	0xFFE
  3162                           tosl	equ	0xFFD
  3163                           pclath	equ	0xFFA
  3164                           tblptru	equ	0xFF8
  3165                           tblptrh	equ	0xFF7
  3166                           tblptrl	equ	0xFF6
  3167                           tablat	equ	0xFF5
  3168                           prodh	equ	0xFF4
  3169                           prodl	equ	0xFF3
  3170                           intcon	equ	0xFF2
  3171                           postinc0	equ	0xFEE
  3172                           wreg	equ	0xFE8
  3173                           postdec1	equ	0xFE5
  3174                           fsr1l	equ	0xFE1
  3175                           indf2	equ	0xFDF
  3176                           postinc2	equ	0xFDE
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function _do_I2C_IDLE *****************
  3182 ;; Defined at:
  3183 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      enum E11956
  3190 ;; Registers used:
  3191 ;;		wreg, status,2
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    6
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_i2c_ISR
  3208 ;;		i2_i2c_ISR
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text28
  3213  000C5C                     __ptext28:
  3214                           	opt stack 0
  3215  000C5C                     _do_I2C_IDLE:
  3216                           	opt stack 0
  3217                           
  3218                           ;Skip over the trampoline to the duplicate function for level 2
  3219  000C5C  B24A               	btfsc	btemp,1,c
  3220  000C5E  EF9E  F006         	goto	i2_do_I2C_IDLE
  3221  000C62                     _do_I2C_IDLE$intlevel0:
  3222                           	opt stack 19
  3223                           
  3224                           ;i2c_master.c: 249: i2c_status.busy = 0;
  3225                           
  3226                           ;incstack = 0
  3227  000C62  9001               	bcf	_i2c_status,0,c
  3228                           
  3229                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  3230  000C64  0E00               	movlw	0
  3231  000C66  6E0C               	movwf	_i2c_status+11,c
  3232                           
  3233                           ;i2c_master.c: 251: return I2C_RESET;
  3234  000C68  0E0E               	movlw	14
  3235  000C6A  0012               	return	
  3236  000C6C                     __end_of_do_I2C_IDLE:
  3237                           	opt stack 0
  3238                           tosu	equ	0xFFF
  3239                           tosh	equ	0xFFE
  3240                           tosl	equ	0xFFD
  3241                           pclath	equ	0xFFA
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           postinc0	equ	0xFEE
  3250                           wreg	equ	0xFE8
  3251                           postdec1	equ	0xFE5
  3252                           fsr1l	equ	0xFE1
  3253                           indf2	equ	0xFDF
  3254                           postinc2	equ	0xFDE
  3255                           fsr2h	equ	0xFDA
  3256                           fsr2l	equ	0xFD9
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function _do_I2C_RESET *****************
  3260 ;; Defined at:
  3261 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      enum E11956
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    7
  3282 ;; This function calls:
  3283 ;;		_i2c1_driver_resetBus
  3284 ;; This function is called by:
  3285 ;;		_i2c_ISR
  3286 ;;		i2_i2c_ISR
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text29
  3291  000C14                     __ptext29:
  3292                           	opt stack 0
  3293  000C14                     _do_I2C_RESET:
  3294                           	opt stack 0
  3295                           
  3296                           ;Skip over the trampoline to the duplicate function for level 2
  3297  000C14  B24A               	btfsc	btemp,1,c
  3298  000C16  EF83  F006         	goto	i2_do_I2C_RESET
  3299  000C1A                     _do_I2C_RESET$intlevel0:
  3300                           	opt stack 18
  3301                           
  3302                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  3303                           
  3304                           ;incstack = 0
  3305  000C1A  EC0A  F007         	call	_i2c1_driver_resetBus	;wreg free
  3306                           
  3307                           ;i2c_master.c: 242: i2c_status.busy = 0;
  3308  000C1E  9001               	bcf	_i2c_status,0,c
  3309                           
  3310                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  3311  000C20  0E00               	movlw	0
  3312  000C22  6E0C               	movwf	_i2c_status+11,c
  3313                           
  3314                           ;i2c_master.c: 244: return I2C_RESET;
  3315  000C24  0E0E               	movlw	14
  3316  000C26  0012               	return	
  3317  000C28                     __end_of_do_I2C_RESET:
  3318                           	opt stack 0
  3319                           tosu	equ	0xFFF
  3320                           tosh	equ	0xFFE
  3321                           tosl	equ	0xFFD
  3322                           pclath	equ	0xFFA
  3323                           tblptru	equ	0xFF8
  3324                           tblptrh	equ	0xFF7
  3325                           tblptrl	equ	0xFF6
  3326                           tablat	equ	0xFF5
  3327                           prodh	equ	0xFF4
  3328                           prodl	equ	0xFF3
  3329                           intcon	equ	0xFF2
  3330                           postinc0	equ	0xFEE
  3331                           wreg	equ	0xFE8
  3332                           postdec1	equ	0xFE5
  3333                           fsr1l	equ	0xFE1
  3334                           indf2	equ	0xFDF
  3335                           postinc2	equ	0xFDE
  3336                           fsr2h	equ	0xFDA
  3337                           fsr2l	equ	0xFD9
  3338                           status	equ	0xFD8
  3339                           
  3340 ;; *************** function _do_I2C_TX_EMPTY *****************
  3341 ;; Defined at:
  3342 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      enum E11956
  3349 ;; Registers used:
  3350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3360 ;;Total ram usage:        0 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    9
  3363 ;; This function calls:
  3364 ;;		Absolute function
  3365 ;;		_do_I2C_SEND_RESTART
  3366 ;;		_do_I2C_SEND_STOP
  3367 ;;		_i2c_restartWrite
  3368 ;;		_mssp1_setIRQ
  3369 ;;		_rd1RegCompleteHandler
  3370 ;;		_rd2RegCompleteHandler
  3371 ;;		_rdBlkRegCompleteHandler
  3372 ;;		_returnReset
  3373 ;;		_returnStop
  3374 ;;		_wr1RegCompleteHandler
  3375 ;;		_wr2RegCompleteHandler
  3376 ;; This function is called by:
  3377 ;;		_i2c_ISR
  3378 ;;		i2_i2c_ISR
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text30
  3383  00058A                     __ptext30:
  3384                           	opt stack 0
  3385  00058A                     _do_I2C_TX_EMPTY:
  3386                           	opt stack 0
  3387                           
  3388                           ;Skip over the trampoline to the duplicate function for level 2
  3389  00058A  B24A               	btfsc	btemp,1,c
  3390  00058C  EFF3  F002         	goto	i2_do_I2C_TX_EMPTY
  3391  000590                     _do_I2C_TX_EMPTY$intlevel0:
  3392                           	opt stack 16
  3393                           
  3394                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  3395                           
  3396                           ;incstack = 0
  3397  000590  8401               	bsf	_i2c_status,2,c
  3398                           
  3399                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  3400  000592  D00A               	goto	l457
  3401  000594                     
  3402                           ;i2c_master.c: 388: case i2c_restart_write:
  3403                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  3404  000594  EC60  F006         	call	_do_I2C_SEND_RESTART	;wreg free
  3405  000598  0012               	return	
  3406  00059A                     
  3407                           ;i2c_master.c: 391: mssp1_setIRQ();
  3408  00059A  ECCF  F006         	call	_mssp1_setIRQ	;wreg free
  3409                           
  3410                           ;i2c_master.c: 392: return I2C_TX;
  3411  00059E  0E03               	movlw	3
  3412  0005A0  0012               	return	
  3413  0005A2                     
  3414                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  3415                           
  3416                           ;i2c_master.c: 394: case i2c_stop:
  3417  0005A2  EC59  F006         	call	_do_I2C_SEND_STOP	;wreg free
  3418                           
  3419                           ;i2c_master.c: 396: }
  3420  0005A6  0012               	return	
  3421  0005A8                     l457:
  3422  0005A8  C01F  F09A         	movff	_i2c_status+30,returnStop@p
  3423  0005AC  C020  F09B         	movff	_i2c_status+31,returnStop@p+1
  3424  0005B0  EE20  F00D         	lfsr	2,_i2c_status+12
  3425  0005B4  D801               	call	u1248
  3426  0005B6  D00A               	goto	u1249
  3427  0005B8                     u1248:
  3428  0005B8  0005               	push	
  3429  0005BA  6EFA               	movwf	pclath,c
  3430  0005BC  50DE               	movf	postinc2,w,c
  3431  0005BE  6EFD               	movwf	tosl,c
  3432  0005C0  50DE               	movf	postinc2,w,c
  3433  0005C2  6EFE               	movwf	tosh,c
  3434  0005C4  50DE               	movf	postinc2,w,c
  3435  0005C6  6EFF               	movwf	tosu,c
  3436  0005C8  50FA               	movf	pclath,w,c
  3437  0005CA  0012               	return		;indir
  3438  0005CC                     u1249:
  3439                           
  3440                           ; Switch size 1, requested type "space"
  3441                           ; Number of cases is 4, Range of values is 1 to 4
  3442                           ; switch strategies available:
  3443                           ; Name         Instructions Cycles
  3444                           ; simple_byte           13     7 (average)
  3445                           ;	Chosen strategy is simple_byte
  3446  0005CC  0A01               	xorlw	1	; case 1
  3447  0005CE  B4D8               	btfsc	status,2,c
  3448  0005D0  D7E8               	goto	l462
  3449  0005D2  0A03               	xorlw	3	; case 2
  3450  0005D4  B4D8               	btfsc	status,2,c
  3451  0005D6  D7DE               	goto	l458
  3452  0005D8  0A01               	xorlw	1	; case 3
  3453  0005DA  B4D8               	btfsc	status,2,c
  3454  0005DC  D7DB               	goto	l458
  3455  0005DE  0A07               	xorlw	7	; case 4
  3456  0005E0  B4D8               	btfsc	status,2,c
  3457  0005E2  D7DB               	goto	l461
  3458  0005E4  D7DE               	goto	l462
  3459  0005E6                     __end_of_do_I2C_TX_EMPTY:
  3460                           	opt stack 0
  3461                           tosu	equ	0xFFF
  3462                           tosh	equ	0xFFE
  3463                           tosl	equ	0xFFD
  3464                           pclath	equ	0xFFA
  3465                           tblptru	equ	0xFF8
  3466                           tblptrh	equ	0xFF7
  3467                           tblptrl	equ	0xFF6
  3468                           tablat	equ	0xFF5
  3469                           prodh	equ	0xFF4
  3470                           prodl	equ	0xFF3
  3471                           intcon	equ	0xFF2
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           postdec1	equ	0xFE5
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           postinc2	equ	0xFDE
  3478                           fsr2h	equ	0xFDA
  3479                           fsr2l	equ	0xFD9
  3480                           status	equ	0xFD8
  3481                           
  3482 ;; *************** function _mssp1_setIRQ *****************
  3483 ;; Defined at:
  3484 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		None
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;Total ram usage:        0 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    6
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_do_I2C_TX_EMPTY
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text31
  3513  000D9E                     __ptext31:
  3514                           	opt stack 0
  3515  000D9E                     _mssp1_setIRQ:
  3516                           	opt stack 18
  3517                           
  3518                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  3519                           
  3520                           ;incstack = 0
  3521  000D9E  010E               	movlb	14	; () banked
  3522  000DA0  81CD               	bsf	205,0,b	;volatile
  3523                           
  3524                           ; BSR set to: 14
  3525  000DA2  0012               	return		;funcret
  3526  000DA4                     __end_of_mssp1_setIRQ:
  3527                           	opt stack 0
  3528                           tosu	equ	0xFFF
  3529                           tosh	equ	0xFFE
  3530                           tosl	equ	0xFFD
  3531                           pclath	equ	0xFFA
  3532                           tblptru	equ	0xFF8
  3533                           tblptrh	equ	0xFF7
  3534                           tblptrl	equ	0xFF6
  3535                           tablat	equ	0xFF5
  3536                           prodh	equ	0xFF4
  3537                           prodl	equ	0xFF3
  3538                           intcon	equ	0xFF2
  3539                           postinc0	equ	0xFEE
  3540                           wreg	equ	0xFE8
  3541                           postdec1	equ	0xFE5
  3542                           fsr1l	equ	0xFE1
  3543                           indf2	equ	0xFDF
  3544                           postinc2	equ	0xFDE
  3545                           fsr2h	equ	0xFDA
  3546                           fsr2l	equ	0xFD9
  3547                           status	equ	0xFD8
  3548                           
  3549 ;; *************** function _i2c1_driver_isNACK *****************
  3550 ;; Defined at:
  3551 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;		None               void
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3569 ;;Total ram usage:        1 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    6
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_do_I2C_TX
  3576 ;;		_i2c_ISR
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text32
  3581  000BC0                     __ptext32:
  3582                           	opt stack 0
  3583  000BC0                     _i2c1_driver_isNACK:
  3584                           	opt stack 19
  3585                           
  3586                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  3587                           
  3588                           ; BSR set to: 14
  3589                           ;incstack = 0
  3590  000BC0  5097               	movf	3991,w,c	;volatile
  3591  000BC2  0BBF               	andlw	-65
  3592  000BC4  0940               	iorlw	64
  3593  000BC6  6E97               	movwf	3991,c	;volatile
  3594  000BC8  3897               	swapf	3991,w,c	;volatile
  3595  000BCA  32E8               	rrcf	wreg,f,c
  3596  000BCC  32E8               	rrcf	wreg,f,c
  3597  000BCE  0B01               	andlw	1
  3598  000BD0  6E46               	movwf	??_i2c1_driver_isNACK& (0+255),c
  3599  000BD2  3046               	rrcf	??_i2c1_driver_isNACK,w,c
  3600  000BD4  0012               	return	
  3601  000BD6                     __end_of_i2c1_driver_isNACK:
  3602                           	opt stack 0
  3603                           tosu	equ	0xFFF
  3604                           tosh	equ	0xFFE
  3605                           tosl	equ	0xFFD
  3606                           pclath	equ	0xFFA
  3607                           tblptru	equ	0xFF8
  3608                           tblptrh	equ	0xFF7
  3609                           tblptrl	equ	0xFF6
  3610                           tablat	equ	0xFF5
  3611                           prodh	equ	0xFF4
  3612                           prodl	equ	0xFF3
  3613                           intcon	equ	0xFF2
  3614                           postinc0	equ	0xFEE
  3615                           wreg	equ	0xFE8
  3616                           postdec1	equ	0xFE5
  3617                           fsr1l	equ	0xFE1
  3618                           indf2	equ	0xFDF
  3619                           postinc2	equ	0xFDE
  3620                           fsr2h	equ	0xFDA
  3621                           fsr2l	equ	0xFD9
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function _i2c1_driver_TXData *****************
  3625 ;; Defined at:
  3626 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  d               1    wreg     unsigned char 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  d               1   21[COMRAM] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3644 ;;Total ram usage:        1 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    6
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_do_I2C_SEND_ADR_READ
  3651 ;;		_do_I2C_SEND_ADR_WRITE
  3652 ;;		_do_I2C_TX
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text33
  3657  000D56                     __ptext33:
  3658                           	opt stack 0
  3659  000D56                     _i2c1_driver_TXData:
  3660                           	opt stack 18
  3661                           
  3662                           ;incstack = 0
  3663                           ;i2c1_driver_TXData@d stored from wreg
  3664  000D56  6E46               	movwf	i2c1_driver_TXData@d,c
  3665                           
  3666                           ;i2c1_driver.c: 188: SSP1BUF = d;
  3667  000D58  C046  FF92         	movff	i2c1_driver_TXData@d,3986	;volatile
  3668  000D5C  0012               	return		;funcret
  3669  000D5E                     __end_of_i2c1_driver_TXData:
  3670                           	opt stack 0
  3671                           tosu	equ	0xFFF
  3672                           tosh	equ	0xFFE
  3673                           tosl	equ	0xFFD
  3674                           pclath	equ	0xFFA
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           prodh	equ	0xFF4
  3680                           prodl	equ	0xFF3
  3681                           intcon	equ	0xFF2
  3682                           postinc0	equ	0xFEE
  3683                           wreg	equ	0xFE8
  3684                           postdec1	equ	0xFE5
  3685                           fsr1l	equ	0xFE1
  3686                           indf2	equ	0xFDF
  3687                           postinc2	equ	0xFDE
  3688                           fsr2h	equ	0xFDA
  3689                           fsr2l	equ	0xFD9
  3690                           status	equ	0xFD8
  3691                           
  3692 ;; *************** function _i2c1_driver_getRXData *****************
  3693 ;; Defined at:
  3694 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      unsigned char 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;Total ram usage:        0 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    6
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_do_I2C_RX
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text34
  3723  000DE0                     __ptext34:
  3724                           	opt stack 0
  3725  000DE0                     _i2c1_driver_getRXData:
  3726                           	opt stack 18
  3727                           
  3728                           ;i2c1_driver.c: 173: return SSP1BUF;
  3729                           
  3730                           ;incstack = 0
  3731  000DE0  5092               	movf	3986,w,c	;volatile
  3732  000DE2  0012               	return	
  3733  000DE4                     __end_of_i2c1_driver_getRXData:
  3734                           	opt stack 0
  3735                           tosu	equ	0xFFF
  3736                           tosh	equ	0xFFE
  3737                           tosl	equ	0xFFD
  3738                           pclath	equ	0xFFA
  3739                           tblptru	equ	0xFF8
  3740                           tblptrh	equ	0xFF7
  3741                           tblptrl	equ	0xFF6
  3742                           tablat	equ	0xFF5
  3743                           prodh	equ	0xFF4
  3744                           prodl	equ	0xFF3
  3745                           intcon	equ	0xFF2
  3746                           postinc0	equ	0xFEE
  3747                           wreg	equ	0xFE8
  3748                           postdec1	equ	0xFE5
  3749                           fsr1l	equ	0xFE1
  3750                           indf2	equ	0xFDF
  3751                           postinc2	equ	0xFDE
  3752                           fsr2h	equ	0xFDA
  3753                           fsr2l	equ	0xFD9
  3754                           status	equ	0xFD8
  3755                           
  3756 ;; *************** function _i2c1_driver_sendNACK *****************
  3757 ;; Defined at:
  3758 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		None
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    6
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_do_I2C_DO_NACK_STOP
  3783 ;;		_do_I2C_DO_NACK_RESTART
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text35
  3788  000DA4                     __ptext35:
  3789                           	opt stack 0
  3790  000DA4                     _i2c1_driver_sendNACK:
  3791                           	opt stack 17
  3792                           
  3793                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  3794                           
  3795                           ;incstack = 0
  3796  000DA4  8A97               	bsf	3991,5,c	;volatile
  3797                           
  3798                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  3799  000DA6  8897               	bsf	3991,4,c	;volatile
  3800  000DA8  0012               	return		;funcret
  3801  000DAA                     __end_of_i2c1_driver_sendNACK:
  3802                           	opt stack 0
  3803                           tosu	equ	0xFFF
  3804                           tosh	equ	0xFFE
  3805                           tosl	equ	0xFFD
  3806                           pclath	equ	0xFFA
  3807                           tblptru	equ	0xFF8
  3808                           tblptrh	equ	0xFF7
  3809                           tblptrl	equ	0xFF6
  3810                           tablat	equ	0xFF5
  3811                           prodh	equ	0xFF4
  3812                           prodl	equ	0xFF3
  3813                           intcon	equ	0xFF2
  3814                           postinc0	equ	0xFEE
  3815                           wreg	equ	0xFE8
  3816                           postdec1	equ	0xFE5
  3817                           fsr1l	equ	0xFE1
  3818                           indf2	equ	0xFDF
  3819                           postinc2	equ	0xFDE
  3820                           fsr2h	equ	0xFDA
  3821                           fsr2l	equ	0xFD9
  3822                           status	equ	0xFD8
  3823                           
  3824 ;; *************** function _i2c1_driver_resetBus *****************
  3825 ;; Defined at:
  3826 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;		None
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;		None
  3831 ;; Return value:  Size  Location     Type
  3832 ;;                  1    wreg      void 
  3833 ;; Registers used:
  3834 ;;		None
  3835 ;; Tracked objects:
  3836 ;;		On entry : 0/0
  3837 ;;		On exit  : 0/0
  3838 ;;		Unchanged: 0/0
  3839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3844 ;;Total ram usage:        0 bytes
  3845 ;; Hardware stack levels used:    1
  3846 ;; Hardware stack levels required when called:    6
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_do_I2C_RESET
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text36
  3855  000E14                     __ptext36:
  3856                           	opt stack 0
  3857  000E14                     _i2c1_driver_resetBus:
  3858                           	opt stack 18
  3859                           
  3860                           ;incstack = 0
  3861  000E14  0012               	return		;funcret
  3862  000E16                     __end_of_i2c1_driver_resetBus:
  3863                           	opt stack 0
  3864                           tosu	equ	0xFFF
  3865                           tosh	equ	0xFFE
  3866                           tosl	equ	0xFFD
  3867                           pclath	equ	0xFFA
  3868                           tblptru	equ	0xFF8
  3869                           tblptrh	equ	0xFF7
  3870                           tblptrl	equ	0xFF6
  3871                           tablat	equ	0xFF5
  3872                           prodh	equ	0xFF4
  3873                           prodl	equ	0xFF3
  3874                           intcon	equ	0xFF2
  3875                           postinc0	equ	0xFEE
  3876                           wreg	equ	0xFE8
  3877                           postdec1	equ	0xFE5
  3878                           fsr1l	equ	0xFE1
  3879                           indf2	equ	0xFDF
  3880                           postinc2	equ	0xFDE
  3881                           fsr2h	equ	0xFDA
  3882                           fsr2l	equ	0xFD9
  3883                           status	equ	0xFD8
  3884                           
  3885 ;; *************** function _i2c1_driver_startRX *****************
  3886 ;; Defined at:
  3887 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		None
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3905 ;;Total ram usage:        0 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    6
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_do_I2C_RCEN
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text37
  3916  000DE4                     __ptext37:
  3917                           	opt stack 0
  3918  000DE4                     _i2c1_driver_startRX:
  3919                           	opt stack 18
  3920                           
  3921                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  3922                           
  3923                           ;incstack = 0
  3924  000DE4  8697               	bsf	3991,3,c	;volatile
  3925  000DE6  0012               	return		;funcret
  3926  000DE8                     __end_of_i2c1_driver_startRX:
  3927                           	opt stack 0
  3928                           tosu	equ	0xFFF
  3929                           tosh	equ	0xFFE
  3930                           tosl	equ	0xFFD
  3931                           pclath	equ	0xFFA
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           prodh	equ	0xFF4
  3937                           prodl	equ	0xFF3
  3938                           intcon	equ	0xFF2
  3939                           postinc0	equ	0xFEE
  3940                           wreg	equ	0xFE8
  3941                           postdec1	equ	0xFE5
  3942                           fsr1l	equ	0xFE1
  3943                           indf2	equ	0xFDF
  3944                           postinc2	equ	0xFDE
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8
  3948                           
  3949 ;; *************** function _rdBlkRegCompleteHandler *****************
  3950 ;; Defined at:
  3951 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  p               2   10[BANK0 ] PTR void 
  3954 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3955 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;		None
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  1    wreg      enum E97
  3960 ;; Registers used:
  3961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;Total ram usage:        2 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    8
  3974 ;; This function calls:
  3975 ;;		_i2c_setBuffer
  3976 ;;		_i2c_setDataCompleteCallback
  3977 ;; This function is called by:
  3978 ;;		_i2c_readDataBlock
  3979 ;;		_do_I2C_DO_ADDRESS_NACK
  3980 ;;		_do_I2C_TX
  3981 ;;		_do_I2C_RX
  3982 ;;		_do_I2C_TX_EMPTY
  3983 ;;		i2_do_I2C_DO_ADDRESS_NACK
  3984 ;;		i2_do_I2C_TX
  3985 ;;		i2_do_I2C_RX
  3986 ;;		i2_do_I2C_TX_EMPTY
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text38
  3991  00068C                     __ptext38:
  3992                           	opt stack 0
  3993  00068C                     _rdBlkRegCompleteHandler:
  3994                           	opt stack 0
  3995                           
  3996                           ;Skip over the trampoline to the duplicate function for level 2
  3997  00068C  B24A               	btfsc	btemp,1,c
  3998  00068E  EFD9  F003         	goto	i2_rdBlkRegCompleteHandler
  3999  000692                     _rdBlkRegCompleteHandler$intlevel0:
  4000                           	opt stack 16
  4001                           
  4002                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  4003                           
  4004                           ;incstack = 0
  4005  000692  0100               	movlb	0	; () banked
  4006  000694  EE20 F002          	lfsr	2,2
  4007  000698  519A               	movf	rdBlkRegCompleteHandler@p& (0+255),w,b
  4008  00069A  26D9               	addwf	fsr2l,f,c
  4009  00069C  519B               	movf	(rdBlkRegCompleteHandler@p+1)& (0+255),w,b
  4010  00069E  22DA               	addwfc	fsr2h,f,c
  4011  0006A0  CFDE F046          	movff	postinc2,i2c_setBuffer@buffer
  4012  0006A4  CFDD F047          	movff	postdec2,i2c_setBuffer@buffer+1
  4013  0006A8  C09A  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
  4014  0006AC  C09B  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
  4015  0006B0  CFDE F048          	movff	postinc2,i2c_setBuffer@bufferSize
  4016  0006B4  CFDD F049          	movff	postdec2,i2c_setBuffer@bufferSize+1
  4017  0006B8  ECA6  F005         	call	_i2c_setBuffer	;wreg free
  4018                           
  4019                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  4020  0006BC  0E00               	movlw	0
  4021  0006BE  0100               	movlb	0	; () banked
  4022  0006C0  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4023  0006C2  0E00               	movlw	0
  4024  0006C4  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4025  0006C6  0E00               	movlw	0
  4026  0006C8  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4027  0006CA  0E00               	movlw	0
  4028  0006CC  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4029  0006CE  0E00               	movlw	0
  4030  0006D0  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4031  0006D2  EC62  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4032                           
  4033                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  4034  0006D6  0E02               	movlw	2
  4035  0006D8  0012               	return	
  4036  0006DA                     __end_of_rdBlkRegCompleteHandler:
  4037                           	opt stack 0
  4038                           tosu	equ	0xFFF
  4039                           tosh	equ	0xFFE
  4040                           tosl	equ	0xFFD
  4041                           pclath	equ	0xFFA
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           prodh	equ	0xFF4
  4047                           prodl	equ	0xFF3
  4048                           intcon	equ	0xFF2
  4049                           postinc0	equ	0xFEE
  4050                           wreg	equ	0xFE8
  4051                           postdec1	equ	0xFE5
  4052                           fsr1l	equ	0xFE1
  4053                           indf2	equ	0xFDF
  4054                           postinc2	equ	0xFDE
  4055                           postdec2	equ	0xFDD
  4056                           fsr2h	equ	0xFDA
  4057                           fsr2l	equ	0xFD9
  4058                           status	equ	0xFD8
  4059                           
  4060 ;; *************** function _rd2RegCompleteHandler *****************
  4061 ;; Defined at:
  4062 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  p               2   10[BANK0 ] PTR void 
  4065 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4066 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      enum E97
  4071 ;; Registers used:
  4072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;Total ram usage:        2 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    8
  4085 ;; This function calls:
  4086 ;;		_i2c_setBuffer
  4087 ;;		_i2c_setDataCompleteCallback
  4088 ;; This function is called by:
  4089 ;;		_i2c_read2ByteRegister
  4090 ;;		_do_I2C_DO_ADDRESS_NACK
  4091 ;;		_do_I2C_TX
  4092 ;;		_do_I2C_RX
  4093 ;;		_do_I2C_TX_EMPTY
  4094 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4095 ;;		i2_do_I2C_TX
  4096 ;;		i2_do_I2C_RX
  4097 ;;		i2_do_I2C_TX_EMPTY
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text39
  4102  000836                     __ptext39:
  4103                           	opt stack 0
  4104  000836                     _rd2RegCompleteHandler:
  4105                           	opt stack 0
  4106                           
  4107                           ;Skip over the trampoline to the duplicate function for level 2
  4108  000836  B24A               	btfsc	btemp,1,c
  4109  000838  EFF4  F004         	goto	i2_rd2RegCompleteHandler
  4110  00083C                     _rd2RegCompleteHandler$intlevel0:
  4111                           	opt stack 16
  4112                           
  4113                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  4114                           
  4115                           ;incstack = 0
  4116  00083C  C09A  F046         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
  4117  000840  C09B  F047         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4118  000844  0E00               	movlw	0
  4119  000846  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4120  000848  0E02               	movlw	2
  4121  00084A  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4122  00084C  ECA6  F005         	call	_i2c_setBuffer	;wreg free
  4123                           
  4124                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  4125  000850  0E00               	movlw	0
  4126  000852  0100               	movlb	0	; () banked
  4127  000854  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4128  000856  0E00               	movlw	0
  4129  000858  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4130  00085A  0E00               	movlw	0
  4131  00085C  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4132  00085E  0E00               	movlw	0
  4133  000860  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4134  000862  0E00               	movlw	0
  4135  000864  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4136  000866  EC62  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4137                           
  4138                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  4139  00086A  0E02               	movlw	2
  4140  00086C  0012               	return	
  4141  00086E                     __end_of_rd2RegCompleteHandler:
  4142                           	opt stack 0
  4143                           tosu	equ	0xFFF
  4144                           tosh	equ	0xFFE
  4145                           tosl	equ	0xFFD
  4146                           pclath	equ	0xFFA
  4147                           tblptru	equ	0xFF8
  4148                           tblptrh	equ	0xFF7
  4149                           tblptrl	equ	0xFF6
  4150                           tablat	equ	0xFF5
  4151                           prodh	equ	0xFF4
  4152                           prodl	equ	0xFF3
  4153                           intcon	equ	0xFF2
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           postdec1	equ	0xFE5
  4157                           fsr1l	equ	0xFE1
  4158                           indf2	equ	0xFDF
  4159                           postinc2	equ	0xFDE
  4160                           postdec2	equ	0xFDD
  4161                           fsr2h	equ	0xFDA
  4162                           fsr2l	equ	0xFD9
  4163                           status	equ	0xFD8
  4164                           
  4165 ;; *************** function _rd1RegCompleteHandler *****************
  4166 ;; Defined at:
  4167 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  p               2   10[BANK0 ] PTR void 
  4170 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4171 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      enum E97
  4176 ;; Registers used:
  4177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;Total ram usage:        2 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    8
  4190 ;; This function calls:
  4191 ;;		_i2c_setBuffer
  4192 ;;		_i2c_setDataCompleteCallback
  4193 ;; This function is called by:
  4194 ;;		_i2c_read1ByteRegister
  4195 ;;		_do_I2C_DO_ADDRESS_NACK
  4196 ;;		_do_I2C_TX
  4197 ;;		_do_I2C_RX
  4198 ;;		_do_I2C_TX_EMPTY
  4199 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4200 ;;		i2_do_I2C_TX
  4201 ;;		i2_do_I2C_RX
  4202 ;;		i2_do_I2C_TX_EMPTY
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text40
  4207  00086E                     __ptext40:
  4208                           	opt stack 0
  4209  00086E                     _rd1RegCompleteHandler:
  4210                           	opt stack 0
  4211                           
  4212                           ;Skip over the trampoline to the duplicate function for level 2
  4213  00086E  B24A               	btfsc	btemp,1,c
  4214  000870  EF0C  F005         	goto	i2_rd1RegCompleteHandler
  4215  000874                     _rd1RegCompleteHandler$intlevel0:
  4216                           	opt stack 16
  4217                           
  4218                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  4219                           
  4220                           ;incstack = 0
  4221  000874  C09A  F046         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
  4222  000878  C09B  F047         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4223  00087C  0E00               	movlw	0
  4224  00087E  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4225  000880  0E01               	movlw	1
  4226  000882  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4227  000884  ECA6  F005         	call	_i2c_setBuffer	;wreg free
  4228                           
  4229                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  4230  000888  0E00               	movlw	0
  4231  00088A  0100               	movlb	0	; () banked
  4232  00088C  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4233  00088E  0E00               	movlw	0
  4234  000890  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4235  000892  0E00               	movlw	0
  4236  000894  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4237  000896  0E00               	movlw	0
  4238  000898  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4239  00089A  0E00               	movlw	0
  4240  00089C  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4241  00089E  EC62  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4242                           
  4243                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  4244  0008A2  0E02               	movlw	2
  4245  0008A4  0012               	return	
  4246  0008A6                     __end_of_rd1RegCompleteHandler:
  4247                           	opt stack 0
  4248                           tosu	equ	0xFFF
  4249                           tosh	equ	0xFFE
  4250                           tosl	equ	0xFFD
  4251                           pclath	equ	0xFFA
  4252                           tblptru	equ	0xFF8
  4253                           tblptrh	equ	0xFF7
  4254                           tblptrl	equ	0xFF6
  4255                           tablat	equ	0xFF5
  4256                           prodh	equ	0xFF4
  4257                           prodl	equ	0xFF3
  4258                           intcon	equ	0xFF2
  4259                           postinc0	equ	0xFEE
  4260                           wreg	equ	0xFE8
  4261                           postdec1	equ	0xFE5
  4262                           fsr1l	equ	0xFE1
  4263                           indf2	equ	0xFDF
  4264                           postinc2	equ	0xFDE
  4265                           postdec2	equ	0xFDD
  4266                           fsr2h	equ	0xFDA
  4267                           fsr2l	equ	0xFD9
  4268                           status	equ	0xFD8
  4269                           
  4270 ;; *************** function _wr1RegCompleteHandler *****************
  4271 ;; Defined at:
  4272 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  p               2   10[BANK0 ] PTR void 
  4275 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4276 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      enum E97
  4281 ;; Registers used:
  4282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4292 ;;Total ram usage:        2 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    8
  4295 ;; This function calls:
  4296 ;;		_i2c_setBuffer
  4297 ;;		_i2c_setDataCompleteCallback
  4298 ;; This function is called by:
  4299 ;;		_i2c_write1ByteRegister
  4300 ;;		_do_I2C_DO_ADDRESS_NACK
  4301 ;;		_do_I2C_TX
  4302 ;;		_do_I2C_RX
  4303 ;;		_do_I2C_TX_EMPTY
  4304 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4305 ;;		i2_do_I2C_TX
  4306 ;;		i2_do_I2C_RX
  4307 ;;		i2_do_I2C_TX_EMPTY
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text41
  4312  0008A6                     __ptext41:
  4313                           	opt stack 0
  4314  0008A6                     _wr1RegCompleteHandler:
  4315                           	opt stack 0
  4316                           
  4317                           ;Skip over the trampoline to the duplicate function for level 2
  4318  0008A6  B24A               	btfsc	btemp,1,c
  4319  0008A8  EF24  F005         	goto	i2_wr1RegCompleteHandler
  4320  0008AC                     _wr1RegCompleteHandler$intlevel0:
  4321                           	opt stack 16
  4322                           
  4323                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  4324                           
  4325                           ;incstack = 0
  4326  0008AC  C09A  F046         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
  4327  0008B0  C09B  F047         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4328  0008B4  0E00               	movlw	0
  4329  0008B6  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4330  0008B8  0E01               	movlw	1
  4331  0008BA  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4332  0008BC  ECA6  F005         	call	_i2c_setBuffer	;wreg free
  4333                           
  4334                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  4335  0008C0  0E00               	movlw	0
  4336  0008C2  0100               	movlb	0	; () banked
  4337  0008C4  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4338  0008C6  0E00               	movlw	0
  4339  0008C8  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4340  0008CA  0E00               	movlw	0
  4341  0008CC  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4342  0008CE  0E00               	movlw	0
  4343  0008D0  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4344  0008D2  0E00               	movlw	0
  4345  0008D4  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4346  0008D6  EC62  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4347                           
  4348                           ;i2c_simple_master.c: 35: return i2c_continue;
  4349  0008DA  0E04               	movlw	4
  4350  0008DC  0012               	return	
  4351  0008DE                     __end_of_wr1RegCompleteHandler:
  4352                           	opt stack 0
  4353                           tosu	equ	0xFFF
  4354                           tosh	equ	0xFFE
  4355                           tosl	equ	0xFFD
  4356                           pclath	equ	0xFFA
  4357                           tblptru	equ	0xFF8
  4358                           tblptrh	equ	0xFF7
  4359                           tblptrl	equ	0xFF6
  4360                           tablat	equ	0xFF5
  4361                           prodh	equ	0xFF4
  4362                           prodl	equ	0xFF3
  4363                           intcon	equ	0xFF2
  4364                           postinc0	equ	0xFEE
  4365                           wreg	equ	0xFE8
  4366                           postdec1	equ	0xFE5
  4367                           fsr1l	equ	0xFE1
  4368                           indf2	equ	0xFDF
  4369                           postinc2	equ	0xFDE
  4370                           postdec2	equ	0xFDD
  4371                           fsr2h	equ	0xFDA
  4372                           fsr2l	equ	0xFD9
  4373                           status	equ	0xFD8
  4374                           
  4375 ;; *************** function _i2c_restartWrite *****************
  4376 ;; Defined at:
  4377 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  p               2   10[BANK0 ] PTR void 
  4380 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4381 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      enum E96
  4386 ;; Registers used:
  4387 ;;		wreg
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4393 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4396 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4397 ;;Total ram usage:        2 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    6
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_i2c_writeNBytes
  4404 ;;		_i2c_write1ByteRegister
  4405 ;;		_i2c_read1ByteRegister
  4406 ;;		_i2c_read2ByteRegister
  4407 ;;		_i2c_write2ByteRegister
  4408 ;;		_i2c_readDataBlock
  4409 ;;		_do_I2C_DO_ADDRESS_NACK
  4410 ;;		_do_I2C_TX
  4411 ;;		_do_I2C_RX
  4412 ;;		_do_I2C_TX_EMPTY
  4413 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4414 ;;		i2_do_I2C_TX
  4415 ;;		i2_do_I2C_RX
  4416 ;;		i2_do_I2C_TX_EMPTY
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text42
  4421  000D14                     __ptext42:
  4422                           	opt stack 0
  4423  000D14                     _i2c_restartWrite:
  4424                           	opt stack 0
  4425                           
  4426                           ;Skip over the trampoline to the duplicate function for level 2
  4427  000D14  B24A               	btfsc	btemp,1,c
  4428  000D16  EF00  F007         	goto	i2_i2c_restartWrite
  4429  000D1A                     _i2c_restartWrite$intlevel0:
  4430                           	opt stack 18
  4431                           
  4432                           ;i2c_types.c: 37: return i2c_restart_write;
  4433                           
  4434                           ;incstack = 0
  4435  000D1A  0E03               	movlw	3
  4436  000D1C  0012               	return	
  4437  000D1E                     __end_of_i2c_restartWrite:
  4438                           	opt stack 0
  4439                           tosu	equ	0xFFF
  4440                           tosh	equ	0xFFE
  4441                           tosl	equ	0xFFD
  4442                           pclath	equ	0xFFA
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           prodh	equ	0xFF4
  4448                           prodl	equ	0xFF3
  4449                           intcon	equ	0xFF2
  4450                           postinc0	equ	0xFEE
  4451                           wreg	equ	0xFE8
  4452                           postdec1	equ	0xFE5
  4453                           fsr1l	equ	0xFE1
  4454                           indf2	equ	0xFDF
  4455                           postinc2	equ	0xFDE
  4456                           postdec2	equ	0xFDD
  4457                           fsr2h	equ	0xFDA
  4458                           fsr2l	equ	0xFD9
  4459                           status	equ	0xFD8
  4460                           
  4461 ;; *************** function _returnReset *****************
  4462 ;; Defined at:
  4463 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  p               2   10[BANK0 ] PTR void 
  4466 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4467 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      enum E11790
  4472 ;; Registers used:
  4473 ;;		wreg
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4479 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4482 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4483 ;;Total ram usage:        2 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    6
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_i2c_open
  4490 ;;		_do_I2C_DO_ADDRESS_NACK
  4491 ;;		_do_I2C_TX
  4492 ;;		_do_I2C_RX
  4493 ;;		_do_I2C_TX_EMPTY
  4494 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4495 ;;		i2_do_I2C_TX
  4496 ;;		i2_do_I2C_RX
  4497 ;;		i2_do_I2C_TX_EMPTY
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text43
  4502  000D1E                     __ptext43:
  4503                           	opt stack 0
  4504  000D1E                     _returnReset:
  4505                           	opt stack 0
  4506                           
  4507                           ;Skip over the trampoline to the duplicate function for level 2
  4508  000D1E  B24A               	btfsc	btemp,1,c
  4509  000D20  EF02  F007         	goto	i2_returnReset
  4510  000D24                     _returnReset$intlevel0:
  4511                           	opt stack 18
  4512                           
  4513                           ;i2c_master.c: 450: return i2c_reset_link;
  4514                           
  4515                           ;incstack = 0
  4516  000D24  0E05               	movlw	5
  4517  000D26  0012               	return	
  4518  000D28                     __end_of_returnReset:
  4519                           	opt stack 0
  4520                           tosu	equ	0xFFF
  4521                           tosh	equ	0xFFE
  4522                           tosl	equ	0xFFD
  4523                           pclath	equ	0xFFA
  4524                           tblptru	equ	0xFF8
  4525                           tblptrh	equ	0xFF7
  4526                           tblptrl	equ	0xFF6
  4527                           tablat	equ	0xFF5
  4528                           prodh	equ	0xFF4
  4529                           prodl	equ	0xFF3
  4530                           intcon	equ	0xFF2
  4531                           postinc0	equ	0xFEE
  4532                           wreg	equ	0xFE8
  4533                           postdec1	equ	0xFE5
  4534                           fsr1l	equ	0xFE1
  4535                           indf2	equ	0xFDF
  4536                           postinc2	equ	0xFDE
  4537                           postdec2	equ	0xFDD
  4538                           fsr2h	equ	0xFDA
  4539                           fsr2l	equ	0xFD9
  4540                           status	equ	0xFD8
  4541                           
  4542 ;; *************** function _returnStop *****************
  4543 ;; Defined at:
  4544 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  p               2   10[BANK0 ] PTR void 
  4547 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4548 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      enum E11790
  4553 ;; Registers used:
  4554 ;;		wreg
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4560 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4563 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4564 ;;Total ram usage:        2 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    6
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_i2c_open
  4571 ;;		_setCallBack
  4572 ;;		_do_I2C_DO_ADDRESS_NACK
  4573 ;;		_do_I2C_TX
  4574 ;;		_do_I2C_RX
  4575 ;;		_do_I2C_TX_EMPTY
  4576 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4577 ;;		i2_do_I2C_TX
  4578 ;;		i2_do_I2C_RX
  4579 ;;		i2_do_I2C_TX_EMPTY
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text44
  4584  000D28                     __ptext44:
  4585                           	opt stack 0
  4586  000D28                     _returnStop:
  4587                           	opt stack 0
  4588                           
  4589                           ;Skip over the trampoline to the duplicate function for level 2
  4590  000D28  B24A               	btfsc	btemp,1,c
  4591  000D2A  EF04  F007         	goto	i2_returnStop
  4592  000D2E                     _returnStop$intlevel0:
  4593                           	opt stack 18
  4594                           
  4595                           ;i2c_master.c: 445: return i2c_stop;
  4596                           
  4597                           ;incstack = 0
  4598  000D2E  0E01               	movlw	1
  4599  000D30  0012               	return	
  4600  000D32                     __end_of_returnStop:
  4601                           	opt stack 0
  4602                           tosu	equ	0xFFF
  4603                           tosh	equ	0xFFE
  4604                           tosl	equ	0xFFD
  4605                           pclath	equ	0xFFA
  4606                           tblptru	equ	0xFF8
  4607                           tblptrh	equ	0xFF7
  4608                           tblptrl	equ	0xFF6
  4609                           tablat	equ	0xFF5
  4610                           prodh	equ	0xFF4
  4611                           prodl	equ	0xFF3
  4612                           intcon	equ	0xFF2
  4613                           postinc0	equ	0xFEE
  4614                           wreg	equ	0xFE8
  4615                           postdec1	equ	0xFE5
  4616                           fsr1l	equ	0xFE1
  4617                           indf2	equ	0xFDF
  4618                           postinc2	equ	0xFDE
  4619                           postdec2	equ	0xFDD
  4620                           fsr2h	equ	0xFDA
  4621                           fsr2l	equ	0xFD9
  4622                           status	equ	0xFD8
  4623                           
  4624 ;; *************** function _wr2RegCompleteHandler *****************
  4625 ;; Defined at:
  4626 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  p               2   10[BANK0 ] PTR void 
  4629 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4630 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      enum E97
  4635 ;; Registers used:
  4636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4645 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4646 ;;Total ram usage:        2 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    8
  4649 ;; This function calls:
  4650 ;;		_i2c_setBuffer
  4651 ;;		_i2c_setDataCompleteCallback
  4652 ;; This function is called by:
  4653 ;;		_i2c_write2ByteRegister
  4654 ;;		_do_I2C_DO_ADDRESS_NACK
  4655 ;;		_do_I2C_TX
  4656 ;;		_do_I2C_RX
  4657 ;;		_do_I2C_TX_EMPTY
  4658 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4659 ;;		i2_do_I2C_TX
  4660 ;;		i2_do_I2C_RX
  4661 ;;		i2_do_I2C_TX_EMPTY
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text45
  4666  0008DE                     __ptext45:
  4667                           	opt stack 0
  4668  0008DE                     _wr2RegCompleteHandler:
  4669                           	opt stack 0
  4670                           
  4671                           ;Skip over the trampoline to the duplicate function for level 2
  4672  0008DE  B24A               	btfsc	btemp,1,c
  4673  0008E0  EF3C  F005         	goto	i2_wr2RegCompleteHandler
  4674  0008E4                     _wr2RegCompleteHandler$intlevel0:
  4675                           	opt stack 16
  4676                           
  4677                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  4678                           
  4679                           ;incstack = 0
  4680  0008E4  C09A  F046         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
  4681  0008E8  C09B  F047         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4682  0008EC  0E00               	movlw	0
  4683  0008EE  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4684  0008F0  0E02               	movlw	2
  4685  0008F2  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4686  0008F4  ECA6  F005         	call	_i2c_setBuffer	;wreg free
  4687                           
  4688                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  4689  0008F8  0E00               	movlw	0
  4690  0008FA  0100               	movlb	0	; () banked
  4691  0008FC  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4692  0008FE  0E00               	movlw	0
  4693  000900  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4694  000902  0E00               	movlw	0
  4695  000904  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4696  000906  0E00               	movlw	0
  4697  000908  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4698  00090A  0E00               	movlw	0
  4699  00090C  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4700  00090E  EC62  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4701                           
  4702                           ;i2c_simple_master.c: 114: return i2c_continue;
  4703  000912  0E04               	movlw	4
  4704  000914  0012               	return	
  4705  000916                     __end_of_wr2RegCompleteHandler:
  4706                           	opt stack 0
  4707                           tosu	equ	0xFFF
  4708                           tosh	equ	0xFFE
  4709                           tosl	equ	0xFFD
  4710                           pclath	equ	0xFFA
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           prodh	equ	0xFF4
  4716                           prodl	equ	0xFF3
  4717                           intcon	equ	0xFF2
  4718                           postinc0	equ	0xFEE
  4719                           wreg	equ	0xFE8
  4720                           postdec1	equ	0xFE5
  4721                           fsr1l	equ	0xFE1
  4722                           indf2	equ	0xFDF
  4723                           postinc2	equ	0xFDE
  4724                           postdec2	equ	0xFDD
  4725                           fsr2h	equ	0xFDA
  4726                           fsr2l	equ	0xFD9
  4727                           status	equ	0xFD8
  4728                           
  4729 ;; *************** function _i2c_setDataCompleteCallback *****************
  4730 ;; Defined at:
  4731 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  cb              3    5[BANK0 ] PTR FTN(PTR void ,)enum 
  4734 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4735 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  4736 ;;  p               2    8[BANK0 ] PTR void 
  4737 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4738 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;		None
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  1    wreg      void 
  4743 ;; Registers used:
  4744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4750 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4753 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4754 ;;Total ram usage:        5 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    7
  4757 ;; This function calls:
  4758 ;;		_setCallBack
  4759 ;; This function is called by:
  4760 ;;		_wr1RegCompleteHandler
  4761 ;;		_rd1RegCompleteHandler
  4762 ;;		_rd2RegCompleteHandler
  4763 ;;		_wr2RegCompleteHandler
  4764 ;;		_rdBlkRegCompleteHandler
  4765 ;;		_i2c_write1ByteRegister
  4766 ;;		_i2c_read1ByteRegister
  4767 ;;		_i2c_read2ByteRegister
  4768 ;;		_i2c_write2ByteRegister
  4769 ;;		_i2c_readDataBlock
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text46
  4774  000AC4                     __ptext46:
  4775                           	opt stack 0
  4776  000AC4                     _i2c_setDataCompleteCallback:
  4777                           	opt stack 16
  4778                           
  4779                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  4780                           
  4781                           ;incstack = 0
  4782  000AC4  C095  F090         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
  4783  000AC8  C096  F091         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
  4784  000ACC  C097  F092         	movff	i2c_setDataCompleteCallback@cb+2,setCallBack@cb+2
  4785  000AD0  C098  F093         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
  4786  000AD4  C099  F094         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
  4787  000AD8  0E00               	movlw	0
  4788  000ADA  EC9A  F001         	call	_setCallBack
  4789  000ADE  0012               	return		;funcret
  4790  000AE0                     __end_of_i2c_setDataCompleteCallback:
  4791                           	opt stack 0
  4792                           tosu	equ	0xFFF
  4793                           tosh	equ	0xFFE
  4794                           tosl	equ	0xFFD
  4795                           pclath	equ	0xFFA
  4796                           tblptru	equ	0xFF8
  4797                           tblptrh	equ	0xFF7
  4798                           tblptrl	equ	0xFF6
  4799                           tablat	equ	0xFF5
  4800                           prodh	equ	0xFF4
  4801                           prodl	equ	0xFF3
  4802                           intcon	equ	0xFF2
  4803                           postinc0	equ	0xFEE
  4804                           wreg	equ	0xFE8
  4805                           postdec1	equ	0xFE5
  4806                           fsr1l	equ	0xFE1
  4807                           indf2	equ	0xFDF
  4808                           postinc2	equ	0xFDE
  4809                           postdec2	equ	0xFDD
  4810                           fsr2h	equ	0xFDA
  4811                           fsr2l	equ	0xFD9
  4812                           status	equ	0xFD8
  4813                           
  4814 ;; *************** function _setCallBack *****************
  4815 ;; Defined at:
  4816 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  idx             1    wreg     enum E11974
  4819 ;;  cb              3    0[BANK0 ] PTR FTN(PTR void ,)enum 
  4820 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4821 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  4822 ;;  p               2    3[BANK0 ] PTR void 
  4823 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4824 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  idx             1   21[COMRAM] enum E11974
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4836 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;Total ram usage:        6 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    6
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_i2c_setDataCompleteCallback
  4847 ;;		_i2c_setAddressNACKCallback
  4848 ;;		_i2c_setWriteCollisionCallback
  4849 ;;		_i2c_setDataNACKCallback
  4850 ;;		_i2c_setTimeOutCallback
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text47
  4855  000334                     __ptext47:
  4856                           	opt stack 0
  4857  000334                     _setCallBack:
  4858                           	opt stack 22
  4859                           
  4860                           ;incstack = 0
  4861                           ;setCallBack@idx stored from wreg
  4862  000334  6E46               	movwf	setCallBack@idx,c
  4863                           
  4864                           ;i2c_master.c: 455: if(cb)
  4865  000336  0100               	movlb	0	; () banked
  4866  000338  5190               	movf	setCallBack@cb& (0+255),w,b
  4867  00033A  1191               	iorwf	(setCallBack@cb+1)& (0+255),w,b
  4868  00033C  1192               	iorwf	(setCallBack@cb+2)& (0+255),w,b
  4869  00033E  B4D8               	btfsc	status,2,c
  4870  000340  D01B               	goto	l482
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;i2c_master.c: 456: {
  4874                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  4875  000342  5046               	movf	setCallBack@idx,w,c
  4876  000344  0D03               	mullw	3
  4877  000346  0E0D               	movlw	low (_i2c_status+12)
  4878  000348  24F3               	addwf	prodl,w,c
  4879  00034A  6ED9               	movwf	fsr2l,c
  4880  00034C  0E00               	movlw	high (_i2c_status+12)
  4881  00034E  20F4               	addwfc	prodh,w,c
  4882  000350  6EDA               	movwf	fsr2h,c
  4883  000352  C090  FFDE         	movff	setCallBack@cb,postinc2
  4884  000356  C091  FFDE         	movff	setCallBack@cb+1,postinc2
  4885  00035A  C092  FFDE         	movff	setCallBack@cb+2,postinc2
  4886                           
  4887                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  4888  00035E  5046               	movf	setCallBack@idx,w,c
  4889  000360  0D02               	mullw	2
  4890  000362  0E1F               	movlw	low (_i2c_status+30)
  4891  000364  24F3               	addwf	prodl,w,c
  4892  000366  6ED9               	movwf	fsr2l,c
  4893  000368  0E00               	movlw	high (_i2c_status+30)
  4894  00036A  20F4               	addwfc	prodh,w,c
  4895  00036C  6EDA               	movwf	fsr2h,c
  4896  00036E  C093  FFDE         	movff	setCallBack@p,postinc2
  4897  000372  C094  FFDD         	movff	setCallBack@p+1,postdec2
  4898                           
  4899                           ;i2c_master.c: 459: }
  4900  000376  0012               	return	
  4901  000378                     l482:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;i2c_master.c: 460: else
  4905                           ;i2c_master.c: 461: {
  4906                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  4907                           
  4908                           ; BSR set to: 0
  4909  000378  5046               	movf	setCallBack@idx,w,c
  4910  00037A  0D03               	mullw	3
  4911  00037C  0E0D               	movlw	low (_i2c_status+12)
  4912  00037E  24F3               	addwf	prodl,w,c
  4913  000380  6ED9               	movwf	fsr2l,c
  4914  000382  0E00               	movlw	high (_i2c_status+12)
  4915  000384  20F4               	addwfc	prodh,w,c
  4916  000386  6EDA               	movwf	fsr2h,c
  4917  000388  0E28               	movlw	low _returnStop
  4918  00038A  6EDE               	movwf	postinc2,c
  4919  00038C  0E0D               	movlw	high _returnStop
  4920  00038E  6EDE               	movwf	postinc2,c
  4921  000390  0E00               	movlw	low (_returnStop shr (0+16))
  4922  000392  6EDE               	movwf	postinc2,c
  4923                           
  4924                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  4925  000394  5046               	movf	setCallBack@idx,w,c
  4926  000396  0D02               	mullw	2
  4927  000398  0E1F               	movlw	low (_i2c_status+30)
  4928  00039A  24F3               	addwf	prodl,w,c
  4929  00039C  6ED9               	movwf	fsr2l,c
  4930  00039E  0E00               	movlw	high (_i2c_status+30)
  4931  0003A0  20F4               	addwfc	prodh,w,c
  4932  0003A2  6EDA               	movwf	fsr2h,c
  4933  0003A4  0E00               	movlw	0
  4934  0003A6  6EDE               	movwf	postinc2,c
  4935  0003A8  0E00               	movlw	0
  4936  0003AA  6EDD               	movwf	postdec2,c
  4937  0003AC  0012               	return	
  4938  0003AE                     __end_of_setCallBack:
  4939                           	opt stack 0
  4940                           tosu	equ	0xFFF
  4941                           tosh	equ	0xFFE
  4942                           tosl	equ	0xFFD
  4943                           pclath	equ	0xFFA
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           prodh	equ	0xFF4
  4949                           prodl	equ	0xFF3
  4950                           intcon	equ	0xFF2
  4951                           postinc0	equ	0xFEE
  4952                           wreg	equ	0xFE8
  4953                           postdec1	equ	0xFE5
  4954                           fsr1l	equ	0xFE1
  4955                           indf2	equ	0xFDF
  4956                           postinc2	equ	0xFDE
  4957                           postdec2	equ	0xFDD
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function _i2c_setBuffer *****************
  4963 ;; Defined at:
  4964 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  buffer          2   21[COMRAM] PTR void 
  4967 ;;		 -> main@rec(1), main@data(2), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), 
  4968 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
  4969 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
  4970 ;;		 -> NULL(0), 
  4971 ;;  bufferSize      2   23[COMRAM] unsigned int 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;		None
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;Total ram usage:        4 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    6
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_wr1RegCompleteHandler
  4994 ;;		_i2c_writeNBytes
  4995 ;;		_rd1RegCompleteHandler
  4996 ;;		_rd2RegCompleteHandler
  4997 ;;		_wr2RegCompleteHandler
  4998 ;;		_rdBlkRegCompleteHandler
  4999 ;;		_i2c_readNBytes
  5000 ;;		_i2c_write1ByteRegister
  5001 ;;		_i2c_read1ByteRegister
  5002 ;;		_i2c_read2ByteRegister
  5003 ;;		_i2c_write2ByteRegister
  5004 ;;		_i2c_readDataBlock
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text48
  5009  000B4C                     __ptext48:
  5010                           	opt stack 0
  5011  000B4C                     _i2c_setBuffer:
  5012                           	opt stack 23
  5013                           
  5014                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;incstack = 0
  5018  000B4C  A401               	btfss	_i2c_status,2,c
  5019  000B4E  0012               	return	
  5020                           
  5021                           ;i2c_master.c: 187: {
  5022                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  5023  000B50  C046  F003         	movff	i2c_setBuffer@buffer,_i2c_status+2
  5024  000B54  C047  F004         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
  5025                           
  5026                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  5027  000B58  C048  F005         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
  5028  000B5C  C049  F006         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
  5029                           
  5030                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  5031  000B60  9401               	bcf	_i2c_status,2,c
  5032  000B62  0012               	return	
  5033  000B64                     __end_of_i2c_setBuffer:
  5034                           	opt stack 0
  5035                           tosu	equ	0xFFF
  5036                           tosh	equ	0xFFE
  5037                           tosl	equ	0xFFD
  5038                           pclath	equ	0xFFA
  5039                           tblptru	equ	0xFF8
  5040                           tblptrh	equ	0xFF7
  5041                           tblptrl	equ	0xFF6
  5042                           tablat	equ	0xFF5
  5043                           prodh	equ	0xFF4
  5044                           prodl	equ	0xFF3
  5045                           intcon	equ	0xFF2
  5046                           postinc0	equ	0xFEE
  5047                           wreg	equ	0xFE8
  5048                           postdec1	equ	0xFE5
  5049                           fsr1l	equ	0xFE1
  5050                           indf2	equ	0xFDF
  5051                           postinc2	equ	0xFDE
  5052                           postdec2	equ	0xFDD
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _i2c1_driver_stop *****************
  5058 ;; Defined at:
  5059 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		None
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    6
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_do_I2C_SEND_STOP
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text49
  5088  000DE8                     __ptext49:
  5089                           	opt stack 0
  5090  000DE8                     _i2c1_driver_stop:
  5091                           	opt stack 17
  5092                           
  5093                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  5094                           
  5095                           ;incstack = 0
  5096  000DE8  8497               	bsf	3991,2,c	;volatile
  5097  000DEA  0012               	return		;funcret
  5098  000DEC                     __end_of_i2c1_driver_stop:
  5099                           	opt stack 0
  5100                           tosu	equ	0xFFF
  5101                           tosh	equ	0xFFE
  5102                           tosl	equ	0xFFD
  5103                           pclath	equ	0xFFA
  5104                           tblptru	equ	0xFF8
  5105                           tblptrh	equ	0xFF7
  5106                           tblptrl	equ	0xFF6
  5107                           tablat	equ	0xFF5
  5108                           prodh	equ	0xFF4
  5109                           prodl	equ	0xFF3
  5110                           intcon	equ	0xFF2
  5111                           postinc0	equ	0xFEE
  5112                           wreg	equ	0xFE8
  5113                           postdec1	equ	0xFE5
  5114                           fsr1l	equ	0xFE1
  5115                           indf2	equ	0xFDF
  5116                           postinc2	equ	0xFDE
  5117                           postdec2	equ	0xFDD
  5118                           fsr2h	equ	0xFDA
  5119                           fsr2l	equ	0xFD9
  5120                           status	equ	0xFD8
  5121                           
  5122 ;; *************** function _i2c1_driver_restart *****************
  5123 ;; Defined at:
  5124 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		None
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    6
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_do_I2C_SEND_RESTART_READ
  5149 ;;		_do_I2C_SEND_RESTART_WRITE
  5150 ;;		_do_I2C_SEND_RESTART
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text50
  5155  000DEC                     __ptext50:
  5156                           	opt stack 0
  5157  000DEC                     _i2c1_driver_restart:
  5158                           	opt stack 17
  5159                           
  5160                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  5161                           
  5162                           ;incstack = 0
  5163  000DEC  8297               	bsf	3991,1,c	;volatile
  5164  000DEE  0012               	return		;funcret
  5165  000DF0                     __end_of_i2c1_driver_restart:
  5166                           	opt stack 0
  5167                           tosu	equ	0xFFF
  5168                           tosh	equ	0xFFE
  5169                           tosl	equ	0xFFD
  5170                           pclath	equ	0xFFA
  5171                           tblptru	equ	0xFF8
  5172                           tblptrh	equ	0xFF7
  5173                           tblptrl	equ	0xFF6
  5174                           tablat	equ	0xFF5
  5175                           prodh	equ	0xFF4
  5176                           prodl	equ	0xFF3
  5177                           intcon	equ	0xFF2
  5178                           postinc0	equ	0xFEE
  5179                           wreg	equ	0xFE8
  5180                           postdec1	equ	0xFE5
  5181                           fsr1l	equ	0xFE1
  5182                           indf2	equ	0xFDF
  5183                           postinc2	equ	0xFDE
  5184                           postdec2	equ	0xFDD
  5185                           fsr2h	equ	0xFDA
  5186                           fsr2l	equ	0xFD9
  5187                           status	equ	0xFD8
  5188                           
  5189 ;; *************** function _i2c1_driver_sendACK *****************
  5190 ;; Defined at:
  5191 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;		None
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		None
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5209 ;;Total ram usage:        0 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:    6
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_do_I2C_DO_ACK
  5216 ;;		_do_I2C_RX
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text51
  5221  000DAA                     __ptext51:
  5222                           	opt stack 0
  5223  000DAA                     _i2c1_driver_sendACK:
  5224                           	opt stack 18
  5225                           
  5226                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  5227                           
  5228                           ;incstack = 0
  5229  000DAA  9A97               	bcf	3991,5,c	;volatile
  5230                           
  5231                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  5232  000DAC  8897               	bsf	3991,4,c	;volatile
  5233  000DAE  0012               	return		;funcret
  5234  000DB0                     __end_of_i2c1_driver_sendACK:
  5235                           	opt stack 0
  5236                           tosu	equ	0xFFF
  5237                           tosh	equ	0xFFE
  5238                           tosl	equ	0xFFD
  5239                           pclath	equ	0xFFA
  5240                           tblptru	equ	0xFF8
  5241                           tblptrh	equ	0xFF7
  5242                           tblptrl	equ	0xFF6
  5243                           tablat	equ	0xFF5
  5244                           prodh	equ	0xFF4
  5245                           prodl	equ	0xFF3
  5246                           intcon	equ	0xFF2
  5247                           postinc0	equ	0xFEE
  5248                           wreg	equ	0xFE8
  5249                           postdec1	equ	0xFE5
  5250                           fsr1l	equ	0xFE1
  5251                           indf2	equ	0xFDF
  5252                           postinc2	equ	0xFDE
  5253                           postdec2	equ	0xFDD
  5254                           fsr2h	equ	0xFDA
  5255                           fsr2l	equ	0xFD9
  5256                           status	equ	0xFD8
  5257                           
  5258 ;; *************** function _i2c1_driver_start *****************
  5259 ;; Defined at:
  5260 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		None
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5278 ;;Total ram usage:        0 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    6
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_i2c_masterOperation
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text52
  5289  000DF0                     __ptext52:
  5290                           	opt stack 0
  5291  000DF0                     _i2c1_driver_start:
  5292                           	opt stack 21
  5293                           
  5294                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
  5295                           
  5296                           ;incstack = 0
  5297  000DF0  8097               	bsf	3991,0,c	;volatile
  5298  000DF2  0012               	return		;funcret
  5299  000DF4                     __end_of_i2c1_driver_start:
  5300                           	opt stack 0
  5301                           tosu	equ	0xFFF
  5302                           tosh	equ	0xFFE
  5303                           tosl	equ	0xFFD
  5304                           pclath	equ	0xFFA
  5305                           tblptru	equ	0xFF8
  5306                           tblptrh	equ	0xFF7
  5307                           tblptrl	equ	0xFF6
  5308                           tablat	equ	0xFF5
  5309                           prodh	equ	0xFF4
  5310                           prodl	equ	0xFF3
  5311                           intcon	equ	0xFF2
  5312                           postinc0	equ	0xFEE
  5313                           wreg	equ	0xFE8
  5314                           postdec1	equ	0xFE5
  5315                           fsr1l	equ	0xFE1
  5316                           indf2	equ	0xFDF
  5317                           postinc2	equ	0xFDE
  5318                           postdec2	equ	0xFDD
  5319                           fsr2h	equ	0xFDA
  5320                           fsr2l	equ	0xFD9
  5321                           status	equ	0xFD8
  5322                           
  5323 ;; *************** function _i2c_close *****************
  5324 ;; Defined at:
  5325 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;		None
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;  ret             1   21[COMRAM] enum E11785
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  1    wreg      enum E11785
  5332 ;; Registers used:
  5333 ;;		wreg, status,2, cstack
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5342 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5343 ;;Total ram usage:        1 bytes
  5344 ;; Hardware stack levels used:    1
  5345 ;; Hardware stack levels required when called:    7
  5346 ;; This function calls:
  5347 ;;		_mssp1_clearIRQ
  5348 ;;		_mssp1_disableIRQ
  5349 ;; This function is called by:
  5350 ;;		_i2c_writeNBytes
  5351 ;;		_i2c_readNBytes
  5352 ;;		_i2c_write1ByteRegister
  5353 ;;		_i2c_read1ByteRegister
  5354 ;;		_i2c_read2ByteRegister
  5355 ;;		_i2c_write2ByteRegister
  5356 ;;		_i2c_readDataBlock
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text53
  5361  000AE0                     __ptext53:
  5362                           	opt stack 0
  5363  000AE0                     _i2c_close:
  5364                           	opt stack 22
  5365                           
  5366                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
  5367                           
  5368                           ;incstack = 0
  5369  000AE0  0E01               	movlw	1
  5370  000AE2  6E46               	movwf	i2c_close@ret,c
  5371                           
  5372                           ;i2c_master.c: 165: if(!i2c_status.busy)
  5373  000AE4  B001               	btfsc	_i2c_status,0,c
  5374  000AE6  D008               	goto	l355
  5375                           
  5376                           ;i2c_master.c: 166: {
  5377                           ;i2c_master.c: 167: i2c_status.inUse = 0;
  5378  000AE8  9201               	bcf	_i2c_status,1,c
  5379                           
  5380                           ;i2c_master.c: 169: i2c_status.address = 0xff;
  5381  000AEA  6802               	setf	_i2c_status+1,c
  5382                           
  5383                           ;i2c_master.c: 170: mssp1_clearIRQ();
  5384  000AEC  ECDB  F006         	call	_mssp1_clearIRQ	;wreg free
  5385                           
  5386                           ;i2c_master.c: 171: mssp1_disableIRQ();
  5387  000AF0  ECD8  F006         	call	_mssp1_disableIRQ	;wreg free
  5388                           
  5389                           ;i2c_master.c: 172: ret = i2c_status.error;
  5390  000AF4  C00C  F046         	movff	_i2c_status+11,i2c_close@ret
  5391  000AF8                     l355:
  5392                           
  5393                           ;i2c_master.c: 173: }
  5394                           ;i2c_master.c: 174: return ret;
  5395  000AF8  5046               	movf	i2c_close@ret,w,c
  5396  000AFA  0012               	return	
  5397  000AFC                     __end_of_i2c_close:
  5398                           	opt stack 0
  5399                           tosu	equ	0xFFF
  5400                           tosh	equ	0xFFE
  5401                           tosl	equ	0xFFD
  5402                           pclath	equ	0xFFA
  5403                           tblptru	equ	0xFF8
  5404                           tblptrh	equ	0xFF7
  5405                           tblptrl	equ	0xFF6
  5406                           tablat	equ	0xFF5
  5407                           prodh	equ	0xFF4
  5408                           prodl	equ	0xFF3
  5409                           intcon	equ	0xFF2
  5410                           postinc0	equ	0xFEE
  5411                           wreg	equ	0xFE8
  5412                           postdec1	equ	0xFE5
  5413                           fsr1l	equ	0xFE1
  5414                           indf2	equ	0xFDF
  5415                           postinc2	equ	0xFDE
  5416                           postdec2	equ	0xFDD
  5417                           fsr2h	equ	0xFDA
  5418                           fsr2l	equ	0xFD9
  5419                           status	equ	0xFD8
  5420                           
  5421 ;; *************** function _mssp1_disableIRQ *****************
  5422 ;; Defined at:
  5423 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		None
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    6
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_i2c_close
  5448 ;;		_i2c_setTimeOut
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           	psect	text54
  5453  000DB0                     __ptext54:
  5454                           	opt stack 0
  5455  000DB0                     _mssp1_disableIRQ:
  5456                           	opt stack 22
  5457                           
  5458                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
  5459                           
  5460                           ;incstack = 0
  5461  000DB0  010E               	movlb	14	; () banked
  5462  000DB2  91C5               	bcf	197,0,b	;volatile
  5463                           
  5464                           ; BSR set to: 14
  5465  000DB4  0012               	return		;funcret
  5466  000DB6                     __end_of_mssp1_disableIRQ:
  5467                           	opt stack 0
  5468                           tosu	equ	0xFFF
  5469                           tosh	equ	0xFFE
  5470                           tosl	equ	0xFFD
  5471                           pclath	equ	0xFFA
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           intcon	equ	0xFF2
  5479                           postinc0	equ	0xFEE
  5480                           wreg	equ	0xFE8
  5481                           postdec1	equ	0xFE5
  5482                           fsr1l	equ	0xFE1
  5483                           indf2	equ	0xFDF
  5484                           postinc2	equ	0xFDE
  5485                           postdec2	equ	0xFDD
  5486                           fsr2h	equ	0xFDA
  5487                           fsr2l	equ	0xFD9
  5488                           status	equ	0xFD8
  5489                           
  5490 ;; *************** function _mssp1_clearIRQ *****************
  5491 ;; Defined at:
  5492 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		None
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    6
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_i2c_open
  5517 ;;		_i2c_close
  5518 ;;		_i2c_ISR
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text55
  5523  000DB6                     __ptext55:
  5524                           	opt stack 0
  5525  000DB6                     _mssp1_clearIRQ:
  5526                           	opt stack 22
  5527                           
  5528                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  5529                           
  5530                           ; BSR set to: 14
  5531                           ;incstack = 0
  5532  000DB6  010E               	movlb	14	; () banked
  5533  000DB8  91CD               	bcf	205,0,b	;volatile
  5534                           
  5535                           ; BSR set to: 14
  5536  000DBA  0012               	return		;funcret
  5537  000DBC                     __end_of_mssp1_clearIRQ:
  5538                           	opt stack 0
  5539                           tosu	equ	0xFFF
  5540                           tosh	equ	0xFFE
  5541                           tosl	equ	0xFFD
  5542                           pclath	equ	0xFFA
  5543                           tblptru	equ	0xFF8
  5544                           tblptrh	equ	0xFF7
  5545                           tblptrl	equ	0xFF6
  5546                           tablat	equ	0xFF5
  5547                           prodh	equ	0xFF4
  5548                           prodl	equ	0xFF3
  5549                           intcon	equ	0xFF2
  5550                           postinc0	equ	0xFEE
  5551                           wreg	equ	0xFE8
  5552                           postdec1	equ	0xFE5
  5553                           fsr1l	equ	0xFE1
  5554                           indf2	equ	0xFDF
  5555                           postinc2	equ	0xFDE
  5556                           postdec2	equ	0xFDD
  5557                           fsr2h	equ	0xFDA
  5558                           fsr2l	equ	0xFD9
  5559                           status	equ	0xFD8
  5560                           
  5561 ;; *************** function _SYSTEM_Initialize *****************
  5562 ;; Defined at:
  5563 ;;		line 116 in file "mcc_generated_files/mcc.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5581 ;;Total ram usage:        0 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    7
  5584 ;; This function calls:
  5585 ;;		_INTERRUPT_Initialize
  5586 ;;		_OSCILLATOR_Initialize
  5587 ;;		_PIN_MANAGER_Initialize
  5588 ;;		_PMD_Initialize
  5589 ;; This function is called by:
  5590 ;;		_main
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text56
  5595  000C3A                     __ptext56:
  5596                           	opt stack 0
  5597  000C3A                     _SYSTEM_Initialize:
  5598                           	opt stack 23
  5599                           
  5600                           ;mcc.c: 118: INTERRUPT_Initialize();
  5601                           
  5602                           ; BSR set to: 14
  5603                           ;incstack = 0
  5604  000C3A  ECFA  F006         	call	_INTERRUPT_Initialize	;wreg free
  5605                           
  5606                           ;mcc.c: 119: PMD_Initialize();
  5607  000C3E  EC7E  F005         	call	_PMD_Initialize	;wreg free
  5608                           
  5609                           ;mcc.c: 120: PIN_MANAGER_Initialize();
  5610  000C42  ECD7  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  5611                           
  5612                           ;mcc.c: 121: OSCILLATOR_Initialize();
  5613  000C46  ECB2  F005         	call	_OSCILLATOR_Initialize	;wreg free
  5614  000C4A  0012               	return		;funcret
  5615  000C4C                     __end_of_SYSTEM_Initialize:
  5616                           	opt stack 0
  5617                           tosu	equ	0xFFF
  5618                           tosh	equ	0xFFE
  5619                           tosl	equ	0xFFD
  5620                           pclath	equ	0xFFA
  5621                           tblptru	equ	0xFF8
  5622                           tblptrh	equ	0xFF7
  5623                           tblptrl	equ	0xFF6
  5624                           tablat	equ	0xFF5
  5625                           prodh	equ	0xFF4
  5626                           prodl	equ	0xFF3
  5627                           intcon	equ	0xFF2
  5628                           postinc0	equ	0xFEE
  5629                           wreg	equ	0xFE8
  5630                           postdec1	equ	0xFE5
  5631                           fsr1l	equ	0xFE1
  5632                           indf2	equ	0xFDF
  5633                           postinc2	equ	0xFDE
  5634                           postdec2	equ	0xFDD
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function _PMD_Initialize *****************
  5640 ;; Defined at:
  5641 ;;		line 138 in file "mcc_generated_files/mcc.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;		None
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		wreg, status,2
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; Hardware stack levels required when called:    6
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_SYSTEM_Initialize
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text57
  5670  000AFC                     __ptext57:
  5671                           	opt stack 0
  5672  000AFC                     _PMD_Initialize:
  5673                           	opt stack 23
  5674                           
  5675                           ;mcc.c: 141: PMD0 = 0x00;
  5676                           
  5677                           ;incstack = 0
  5678  000AFC  0E00               	movlw	0
  5679  000AFE  010E               	movlb	14	; () banked
  5680  000B00  6FE1               	movwf	225,b	;volatile
  5681                           
  5682                           ;mcc.c: 143: PMD1 = 0x00;
  5683  000B02  0E00               	movlw	0
  5684  000B04  6FE2               	movwf	226,b	;volatile
  5685                           
  5686                           ;mcc.c: 145: PMD2 = 0x00;
  5687  000B06  0E00               	movlw	0
  5688  000B08  6FE3               	movwf	227,b	;volatile
  5689                           
  5690                           ;mcc.c: 147: PMD3 = 0x00;
  5691  000B0A  0E00               	movlw	0
  5692  000B0C  6FE4               	movwf	228,b	;volatile
  5693                           
  5694                           ;mcc.c: 149: PMD4 = 0x00;
  5695  000B0E  0E00               	movlw	0
  5696  000B10  6FE5               	movwf	229,b	;volatile
  5697                           
  5698                           ;mcc.c: 151: PMD5 = 0x00;
  5699  000B12  0E00               	movlw	0
  5700  000B14  6FE6               	movwf	230,b	;volatile
  5701                           
  5702                           ; BSR set to: 14
  5703  000B16  0012               	return		;funcret
  5704  000B18                     __end_of_PMD_Initialize:
  5705                           	opt stack 0
  5706                           tosu	equ	0xFFF
  5707                           tosh	equ	0xFFE
  5708                           tosl	equ	0xFFD
  5709                           pclath	equ	0xFFA
  5710                           tblptru	equ	0xFF8
  5711                           tblptrh	equ	0xFF7
  5712                           tblptrl	equ	0xFF6
  5713                           tablat	equ	0xFF5
  5714                           prodh	equ	0xFF4
  5715                           prodl	equ	0xFF3
  5716                           intcon	equ	0xFF2
  5717                           postinc0	equ	0xFEE
  5718                           wreg	equ	0xFE8
  5719                           postdec1	equ	0xFE5
  5720                           fsr1l	equ	0xFE1
  5721                           indf2	equ	0xFDF
  5722                           postinc2	equ	0xFDE
  5723                           postdec2	equ	0xFDD
  5724                           fsr2h	equ	0xFDA
  5725                           fsr2l	equ	0xFD9
  5726                           status	equ	0xFD8
  5727                           
  5728 ;; *************** function _PIN_MANAGER_Initialize *****************
  5729 ;; Defined at:
  5730 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;		None
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5748 ;;Total ram usage:        0 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    6
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_SYSTEM_Initialize
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text58
  5759  0003AE                     __ptext58:
  5760                           	opt stack 0
  5761  0003AE                     _PIN_MANAGER_Initialize:
  5762                           	opt stack 23
  5763                           
  5764                           ;pin_manager.c: 57: LATE = 0x00;
  5765                           
  5766                           ; BSR set to: 14
  5767                           ;incstack = 0
  5768  0003AE  0E00               	movlw	0
  5769  0003B0  6E87               	movwf	3975,c	;volatile
  5770                           
  5771                           ;pin_manager.c: 58: LATD = 0x00;
  5772  0003B2  0E00               	movlw	0
  5773  0003B4  6E86               	movwf	3974,c	;volatile
  5774                           
  5775                           ;pin_manager.c: 59: LATA = 0x08;
  5776  0003B6  0E08               	movlw	8
  5777  0003B8  6E83               	movwf	3971,c	;volatile
  5778                           
  5779                           ;pin_manager.c: 60: LATB = 0x00;
  5780  0003BA  0E00               	movlw	0
  5781  0003BC  6E84               	movwf	3972,c	;volatile
  5782                           
  5783                           ;pin_manager.c: 61: LATC = 0x00;
  5784  0003BE  0E00               	movlw	0
  5785  0003C0  6E85               	movwf	3973,c	;volatile
  5786                           
  5787                           ;pin_manager.c: 66: TRISE = 0x07;
  5788  0003C2  0E07               	movlw	7
  5789  0003C4  6E8C               	movwf	3980,c	;volatile
  5790                           
  5791                           ;pin_manager.c: 67: TRISA = 0xEF;
  5792  0003C6  0EEF               	movlw	239
  5793  0003C8  6E88               	movwf	3976,c	;volatile
  5794                           
  5795                           ;pin_manager.c: 68: TRISB = 0xFF;
  5796  0003CA  6889               	setf	3977,c	;volatile
  5797                           
  5798                           ;pin_manager.c: 69: TRISC = 0xFF;
  5799  0003CC  688A               	setf	3978,c	;volatile
  5800                           
  5801                           ;pin_manager.c: 70: TRISD = 0xFF;
  5802  0003CE  688B               	setf	3979,c	;volatile
  5803                           
  5804                           ;pin_manager.c: 75: ANSELC = 0xE7;
  5805  0003D0  0EE7               	movlw	231
  5806  0003D2  010F               	movlb	15	; () banked
  5807  0003D4  6F21               	movwf	33,b	;volatile
  5808                           
  5809                           ; BSR set to: 15
  5810                           ;pin_manager.c: 76: ANSELB = 0xFF;
  5811  0003D6  6919               	setf	25,b	;volatile
  5812                           
  5813                           ; BSR set to: 15
  5814                           ;pin_manager.c: 77: ANSELD = 0xFF;
  5815  0003D8  6926               	setf	38,b	;volatile
  5816                           
  5817                           ;pin_manager.c: 78: ANSELE = 0x07;
  5818  0003DA  0E07               	movlw	7
  5819  0003DC  6F2E               	movwf	46,b	;volatile
  5820                           
  5821                           ; BSR set to: 15
  5822                           ;pin_manager.c: 79: ANSELA = 0xFF;
  5823  0003DE  6911               	setf	17,b	;volatile
  5824                           
  5825                           ;pin_manager.c: 84: WPUD = 0x00;
  5826  0003E0  0E00               	movlw	0
  5827  0003E2  6F25               	movwf	37,b	;volatile
  5828                           
  5829                           ;pin_manager.c: 85: WPUE = 0x00;
  5830  0003E4  0E00               	movlw	0
  5831  0003E6  6F2D               	movwf	45,b	;volatile
  5832                           
  5833                           ;pin_manager.c: 86: WPUB = 0x00;
  5834  0003E8  0E00               	movlw	0
  5835  0003EA  6F18               	movwf	24,b	;volatile
  5836                           
  5837                           ;pin_manager.c: 87: WPUA = 0x00;
  5838  0003EC  0E00               	movlw	0
  5839  0003EE  6F10               	movwf	16,b	;volatile
  5840                           
  5841                           ;pin_manager.c: 88: WPUC = 0x18;
  5842  0003F0  0E18               	movlw	24
  5843  0003F2  6F20               	movwf	32,b	;volatile
  5844                           
  5845                           ;pin_manager.c: 93: ODCONE = 0x00;
  5846  0003F4  0E00               	movlw	0
  5847  0003F6  6F2C               	movwf	44,b	;volatile
  5848                           
  5849                           ;pin_manager.c: 94: ODCONA = 0x00;
  5850  0003F8  0E00               	movlw	0
  5851  0003FA  6F0F               	movwf	15,b	;volatile
  5852                           
  5853                           ;pin_manager.c: 95: ODCONB = 0x00;
  5854  0003FC  0E00               	movlw	0
  5855  0003FE  6F17               	movwf	23,b	;volatile
  5856                           
  5857                           ;pin_manager.c: 96: ODCONC = 0x00;
  5858  000400  0E00               	movlw	0
  5859  000402  6F1F               	movwf	31,b	;volatile
  5860                           
  5861                           ;pin_manager.c: 97: ODCOND = 0x00;
  5862  000404  0E00               	movlw	0
  5863  000406  6F24               	movwf	36,b	;volatile
  5864                           
  5865                           ; BSR set to: 15
  5866                           ;pin_manager.c: 104: SSP1CLKPPSbits.SSPCLKPPS = 0x13;
  5867  000408  010E               	movlb	14	; () banked
  5868  00040A  81B7               	bsf	183,0,b	;volatile
  5869  00040C  83B7               	bsf	183,1,b	;volatile
  5870  00040E  95B7               	bcf	183,2,b	;volatile
  5871  000410  97B7               	bcf	183,3,b	;volatile
  5872  000412  89B7               	bsf	183,4,b	;volatile
  5873                           
  5874                           ;pin_manager.c: 105: RC3PPS = 0x0F;
  5875  000414  0E0F               	movlw	15
  5876  000416  6FFA               	movwf	250,b	;volatile
  5877                           
  5878                           ;pin_manager.c: 106: RC4PPS = 0x10;
  5879  000418  0E10               	movlw	16
  5880  00041A  6FFB               	movwf	251,b	;volatile
  5881                           
  5882                           ; BSR set to: 14
  5883                           ;pin_manager.c: 107: SSP1DATPPSbits.SSPDATPPS = 0x14;
  5884  00041C  91B8               	bcf	184,0,b	;volatile
  5885  00041E  93B8               	bcf	184,1,b	;volatile
  5886  000420  85B8               	bsf	184,2,b	;volatile
  5887  000422  97B8               	bcf	184,3,b	;volatile
  5888  000424  89B8               	bsf	184,4,b	;volatile
  5889                           
  5890                           ; BSR set to: 14
  5891  000426  0012               	return		;funcret
  5892  000428                     __end_of_PIN_MANAGER_Initialize:
  5893                           	opt stack 0
  5894                           tosu	equ	0xFFF
  5895                           tosh	equ	0xFFE
  5896                           tosl	equ	0xFFD
  5897                           pclath	equ	0xFFA
  5898                           tblptru	equ	0xFF8
  5899                           tblptrh	equ	0xFF7
  5900                           tblptrl	equ	0xFF6
  5901                           tablat	equ	0xFF5
  5902                           prodh	equ	0xFF4
  5903                           prodl	equ	0xFF3
  5904                           intcon	equ	0xFF2
  5905                           postinc0	equ	0xFEE
  5906                           wreg	equ	0xFE8
  5907                           postdec1	equ	0xFE5
  5908                           fsr1l	equ	0xFE1
  5909                           indf2	equ	0xFDF
  5910                           postinc2	equ	0xFDE
  5911                           postdec2	equ	0xFDD
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function _OSCILLATOR_Initialize *****************
  5917 ;; Defined at:
  5918 ;;		line 124 in file "mcc_generated_files/mcc.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;		None
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      void 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    6
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_SYSTEM_Initialize
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text59
  5947  000B64                     __ptext59:
  5948                           	opt stack 0
  5949  000B64                     _OSCILLATOR_Initialize:
  5950                           	opt stack 23
  5951                           
  5952                           ;mcc.c: 127: OSCCON1 = 0x62;
  5953                           
  5954                           ; BSR set to: 14
  5955                           ;incstack = 0
  5956  000B64  0E62               	movlw	98
  5957  000B66  010E               	movlb	14	; () banked
  5958  000B68  6FD8               	movwf	216,b	;volatile
  5959                           
  5960                           ;mcc.c: 129: OSCCON3 = 0x00;
  5961  000B6A  0E00               	movlw	0
  5962  000B6C  6FDA               	movwf	218,b	;volatile
  5963                           
  5964                           ;mcc.c: 131: OSCEN = 0x00;
  5965  000B6E  0E00               	movlw	0
  5966  000B70  6FDC               	movwf	220,b	;volatile
  5967                           
  5968                           ;mcc.c: 133: OSCFRQ = 0x03;
  5969  000B72  0E03               	movlw	3
  5970  000B74  6FDE               	movwf	222,b	;volatile
  5971                           
  5972                           ;mcc.c: 135: OSCTUNE = 0x20;
  5973  000B76  0E20               	movlw	32
  5974  000B78  6FDD               	movwf	221,b	;volatile
  5975                           
  5976                           ; BSR set to: 14
  5977  000B7A  0012               	return		;funcret
  5978  000B7C                     __end_of_OSCILLATOR_Initialize:
  5979                           	opt stack 0
  5980                           tosu	equ	0xFFF
  5981                           tosh	equ	0xFFE
  5982                           tosl	equ	0xFFD
  5983                           pclath	equ	0xFFA
  5984                           tblptru	equ	0xFF8
  5985                           tblptrh	equ	0xFF7
  5986                           tblptrl	equ	0xFF6
  5987                           tablat	equ	0xFF5
  5988                           prodh	equ	0xFF4
  5989                           prodl	equ	0xFF3
  5990                           intcon	equ	0xFF2
  5991                           postinc0	equ	0xFEE
  5992                           wreg	equ	0xFE8
  5993                           postdec1	equ	0xFE5
  5994                           fsr1l	equ	0xFE1
  5995                           indf2	equ	0xFDF
  5996                           postinc2	equ	0xFDE
  5997                           postdec2	equ	0xFDD
  5998                           fsr2h	equ	0xFDA
  5999                           fsr2l	equ	0xFD9
  6000                           status	equ	0xFD8
  6001                           
  6002 ;; *************** function _INTERRUPT_Initialize *****************
  6003 ;; Defined at:
  6004 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		None
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6022 ;;Total ram usage:        0 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    6
  6025 ;; This function calls:
  6026 ;;		Nothing
  6027 ;; This function is called by:
  6028 ;;		_SYSTEM_Initialize
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text60
  6033  000DF4                     __ptext60:
  6034                           	opt stack 0
  6035  000DF4                     _INTERRUPT_Initialize:
  6036                           	opt stack 23
  6037                           
  6038                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  6039                           
  6040                           ; BSR set to: 14
  6041                           ;incstack = 0
  6042  000DF4  9AF2               	bcf	intcon,5,c	;volatile
  6043  000DF6  0012               	return		;funcret
  6044  000DF8                     __end_of_INTERRUPT_Initialize:
  6045                           	opt stack 0
  6046                           tosu	equ	0xFFF
  6047                           tosh	equ	0xFFE
  6048                           tosl	equ	0xFFD
  6049                           pclath	equ	0xFFA
  6050                           tblptru	equ	0xFF8
  6051                           tblptrh	equ	0xFF7
  6052                           tblptrl	equ	0xFF6
  6053                           tablat	equ	0xFF5
  6054                           prodh	equ	0xFF4
  6055                           prodl	equ	0xFF3
  6056                           intcon	equ	0xFF2
  6057                           postinc0	equ	0xFEE
  6058                           wreg	equ	0xFE8
  6059                           postdec1	equ	0xFE5
  6060                           fsr1l	equ	0xFE1
  6061                           indf2	equ	0xFDF
  6062                           postinc2	equ	0xFDE
  6063                           postdec2	equ	0xFDD
  6064                           fsr2h	equ	0xFDA
  6065                           fsr2l	equ	0xFD9
  6066                           status	equ	0xFD8
  6067                           
  6068 ;; *************** function _INTERRUPT_InterruptManager *****************
  6069 ;; Defined at:
  6070 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6088 ;;Total ram usage:       18 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:    5
  6091 ;; This function calls:
  6092 ;;		Absolute function
  6093 ;;		_i2c_busCollisionISR
  6094 ;;		i2_i2c_ISR
  6095 ;; This function is called by:
  6096 ;;		Interrupt level 2
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	intcode
  6101  000008                     __pintcode:
  6102                           	opt stack 0
  6103  000008                     _INTERRUPT_InterruptManager:
  6104                           	opt stack 16
  6105                           
  6106                           ;incstack = 0
  6107  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6108  00000A  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  6109  00000E  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6110  000012  CFE9 F036          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6111  000016  CFEA F037          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6112  00001A  CFE1 F038          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6113  00001E  CFE2 F039          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6114  000022  CFD9 F03A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6115  000026  CFDA F03B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6116  00002A  CFF3 F03C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6117  00002E  CFF4 F03D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6118  000032  CFF6 F03E          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6119  000036  CFF7 F03F          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6120  00003A  CFF8 F040          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6121  00003E  CFF5 F041          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6122  000042  C04A  F042         	movff	btemp,??_INTERRUPT_InterruptManager+14
  6123  000046  C04B  F043         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  6124  00004A  C04C  F044         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  6125  00004E  C04D  F045         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  6126                           
  6127                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  6128  000052  ACF2               	btfss	intcon,6,c	;volatile
  6129  000054  D01D               	goto	i2u160_49
  6130                           
  6131                           ;interrupt_manager.c: 61: {
  6132                           ;interrupt_manager.c: 62: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  6133  000056  010E               	movlb	14	; () banked
  6134  000058  B3C5               	btfsc	197,1,b	;volatile
  6135                           
  6136                           ; BSR set to: 14
  6137  00005A  A3CD               	btfss	205,1,b	;volatile
  6138  00005C  D00A               	goto	i2l267
  6139                           
  6140                           ; BSR set to: 14
  6141                           ;interrupt_manager.c: 63: {
  6142                           ;interrupt_manager.c: 64: i2c1_driver_busCollisionISR();
  6143  00005E  D801               	call	i2u157_48
  6144  000060  D017               	goto	i2u160_49
  6145  000062                     i2u157_48:
  6146  000062  0005               	push	
  6147  000064  6EFA               	movwf	pclath,c
  6148  000066  502E               	movf	_i2c1_driver_busCollisionISR,w,c
  6149  000068  6EFD               	movwf	tosl,c
  6150  00006A  502F               	movf	_i2c1_driver_busCollisionISR+1,w,c
  6151  00006C  6EFE               	movwf	tosh,c
  6152  00006E  5030               	movf	_i2c1_driver_busCollisionISR+2,w,c
  6153  000070  D00C               	goto	L3
  6154  000072                     i2l267:
  6155                           
  6156                           ; BSR set to: 14
  6157                           ;interrupt_manager.c: 66: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  6158  000072  B1C5               	btfsc	197,0,b	;volatile
  6159                           
  6160                           ; BSR set to: 14
  6161  000074  A1CD               	btfss	205,0,b	;volatile
  6162  000076  D00C               	goto	i2u160_49
  6163                           
  6164                           ; BSR set to: 14
  6165                           ;interrupt_manager.c: 67: {
  6166                           ;interrupt_manager.c: 68: i2c1_driver_i2cISR();
  6167  000078  D801               	call	i2u160_48
  6168  00007A  D00A               	goto	i2u160_49
  6169  00007C                     i2u160_48:
  6170  00007C  0005               	push	
  6171  00007E  6EFA               	movwf	pclath,c
  6172  000080  502B               	movf	_i2c1_driver_i2cISR,w,c
  6173  000082  6EFD               	movwf	tosl,c
  6174  000084  502C               	movf	_i2c1_driver_i2cISR+1,w,c
  6175  000086  6EFE               	movwf	tosh,c
  6176  000088  502D               	movf	_i2c1_driver_i2cISR+2,w,c
  6177  00008A                     L3:
  6178  00008A  6EFF               	movwf	tosu,c
  6179  00008C  50FA               	movf	pclath,w,c
  6180  00008E  0012               	return		;indir
  6181  000090                     i2u160_49:
  6182                           
  6183                           ;interrupt_manager.c: 75: else
  6184                           ;interrupt_manager.c: 76: {
  6185                           
  6186                           ;interrupt_manager.c: 73: }
  6187                           ;interrupt_manager.c: 74: }
  6188                           
  6189                           ;interrupt_manager.c: 70: else
  6190                           ;interrupt_manager.c: 71: {
  6191                           
  6192                           ;interrupt_manager.c: 69: }
  6193  000090  C045  F04D         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  6194  000094  C044  F04C         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  6195  000098  C043  F04B         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  6196  00009C  C042  F04A         	movff	??_INTERRUPT_InterruptManager+14,btemp
  6197  0000A0  C041  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6198  0000A4  C040  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6199  0000A8  C03F  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6200  0000AC  C03E  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6201  0000B0  C03D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6202  0000B4  C03C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6203  0000B8  C03B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6204  0000BC  C03A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6205  0000C0  C039  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6206  0000C4  C038  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6207  0000C8  C037  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6208  0000CC  C036  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6209  0000D0  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6210  0000D4  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6211  0000D8  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6212  0000DA  0011               	retfie		f
  6213  0000DC                     __end_of_INTERRUPT_InterruptManager:
  6214                           	opt stack 0
  6215                           tosu	equ	0xFFF
  6216                           tosh	equ	0xFFE
  6217                           tosl	equ	0xFFD
  6218                           pclatu	equ	0xFFB
  6219                           pclath	equ	0xFFA
  6220                           tblptru	equ	0xFF8
  6221                           tblptrh	equ	0xFF7
  6222                           tblptrl	equ	0xFF6
  6223                           tablat	equ	0xFF5
  6224                           prodh	equ	0xFF4
  6225                           prodl	equ	0xFF3
  6226                           intcon	equ	0xFF2
  6227                           postinc0	equ	0xFEE
  6228                           fsr0h	equ	0xFEA
  6229                           fsr0l	equ	0xFE9
  6230                           wreg	equ	0xFE8
  6231                           postdec1	equ	0xFE5
  6232                           fsr1h	equ	0xFE2
  6233                           fsr1l	equ	0xFE1
  6234                           indf2	equ	0xFDF
  6235                           postinc2	equ	0xFDE
  6236                           postdec2	equ	0xFDD
  6237                           fsr2h	equ	0xFDA
  6238                           fsr2l	equ	0xFD9
  6239                           status	equ	0xFD8
  6240                           
  6241 ;; *************** function i2_i2c_ISR *****************
  6242 ;; Defined at:
  6243 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;		None
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      void 
  6250 ;; Registers used:
  6251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;Total ram usage:        0 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    4
  6264 ;; This function calls:
  6265 ;;		i2_do_I2C_DO_ACK
  6266 ;;		i2_do_I2C_DO_ADDRESS_NACK
  6267 ;;		i2_do_I2C_DO_NACK_RESTART
  6268 ;;		i2_do_I2C_DO_NACK_STOP
  6269 ;;		i2_do_I2C_IDLE
  6270 ;;		i2_do_I2C_RCEN
  6271 ;;		i2_do_I2C_RESET
  6272 ;;		i2_do_I2C_RX
  6273 ;;		i2_do_I2C_SEND_ADR_READ
  6274 ;;		i2_do_I2C_SEND_ADR_WRITE
  6275 ;;		i2_do_I2C_SEND_RESTART
  6276 ;;		i2_do_I2C_SEND_RESTART_READ
  6277 ;;		i2_do_I2C_SEND_RESTART_WRITE
  6278 ;;		i2_do_I2C_SEND_STOP
  6279 ;;		i2_do_I2C_TX
  6280 ;;		i2_do_I2C_TX_EMPTY
  6281 ;;		i2_i2c1_driver_isNACK
  6282 ;;		i2_mssp1_clearIRQ
  6283 ;; This function is called by:
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text62
  6288  0007F6                     __ptext62:
  6289                           	opt stack 0
  6290  0007F6                     i2_i2c_ISR:
  6291                           	opt stack 16
  6292                           
  6293                           ;i2c_master.c: 421: mssp1_clearIRQ();
  6294                           
  6295                           ;incstack = 0
  6296  0007F6  ECDE  F006         	call	i2_mssp1_clearIRQ	;wreg free
  6297                           
  6298                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  6299  0007FA  A601               	btfss	_i2c_status,3,c
  6300  0007FC  D006               	goto	i2l469
  6301  0007FE  ECEB  F005         	call	i2_i2c1_driver_isNACK	;wreg free
  6302  000802  A0D8               	btfss	status,0,c
  6303  000804  D002               	goto	i2l469
  6304                           
  6305                           ;i2c_master.c: 428: {
  6306                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  6307  000806  0E0F               	movlw	15
  6308  000808  6E0B               	movwf	_i2c_status+10,c
  6309  00080A                     i2l469:
  6310                           
  6311                           ;i2c_master.c: 430: }
  6312                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  6313  00080A  500B               	movf	_i2c_status+10,w,c
  6314  00080C  0D03               	mullw	3
  6315  00080E  0E60               	movlw	low _fsmStateTable
  6316  000810  24F3               	addwf	prodl,w,c
  6317  000812  6ED9               	movwf	fsr2l,c
  6318  000814  0E00               	movlw	high _fsmStateTable
  6319  000816  20F4               	addwfc	prodh,w,c
  6320  000818  6EDA               	movwf	fsr2h,c
  6321  00081A  D801               	call	i2u153_48
  6322  00081C  D00A               	goto	i2u153_49
  6323  00081E                     i2u153_48:
  6324  00081E  0005               	push	
  6325  000820  6EFA               	movwf	pclath,c
  6326  000822  50DE               	movf	postinc2,w,c
  6327  000824  6EFD               	movwf	tosl,c
  6328  000826  50DE               	movf	postinc2,w,c
  6329  000828  6EFE               	movwf	tosh,c
  6330  00082A  50DE               	movf	postinc2,w,c
  6331  00082C  6EFF               	movwf	tosu,c
  6332  00082E  50FA               	movf	pclath,w,c
  6333  000830  0012               	return		;indir
  6334  000832                     i2u153_49:
  6335  000832  6E0B               	movwf	_i2c_status+10,c
  6336  000834  0012               	return		;funcret
  6337  000836                     __end_ofi2_i2c_ISR:
  6338                           	opt stack 0
  6339                           tosu	equ	0xFFF
  6340                           tosh	equ	0xFFE
  6341                           tosl	equ	0xFFD
  6342                           pclatu	equ	0xFFB
  6343                           pclath	equ	0xFFA
  6344                           tblptru	equ	0xFF8
  6345                           tblptrh	equ	0xFF7
  6346                           tblptrl	equ	0xFF6
  6347                           tablat	equ	0xFF5
  6348                           prodh	equ	0xFF4
  6349                           prodl	equ	0xFF3
  6350                           intcon	equ	0xFF2
  6351                           postinc0	equ	0xFEE
  6352                           fsr0h	equ	0xFEA
  6353                           fsr0l	equ	0xFE9
  6354                           wreg	equ	0xFE8
  6355                           postdec1	equ	0xFE5
  6356                           fsr1h	equ	0xFE2
  6357                           fsr1l	equ	0xFE1
  6358                           indf2	equ	0xFDF
  6359                           postinc2	equ	0xFDE
  6360                           postdec2	equ	0xFDD
  6361                           fsr2h	equ	0xFDA
  6362                           fsr2l	equ	0xFD9
  6363                           status	equ	0xFD8
  6364                           
  6365 ;; *************** function i2_mssp1_clearIRQ *****************
  6366 ;; Defined at:
  6367 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;		None
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		None
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6385 ;;Total ram usage:        0 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		i2_i2c_ISR
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text63
  6395  000DBC                     __ptext63:
  6396                           	opt stack 0
  6397  000DBC                     i2_mssp1_clearIRQ:
  6398                           	opt stack 19
  6399                           
  6400                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  6401                           
  6402                           ;incstack = 0
  6403  000DBC  010E               	movlb	14	; () banked
  6404  000DBE  91CD               	bcf	205,0,b	;volatile
  6405                           
  6406                           ; BSR set to: 14
  6407  000DC0  0012               	return		;funcret
  6408  000DC2                     __end_ofi2_mssp1_clearIRQ:
  6409                           	opt stack 0
  6410                           tosu	equ	0xFFF
  6411                           tosh	equ	0xFFE
  6412                           tosl	equ	0xFFD
  6413                           pclatu	equ	0xFFB
  6414                           pclath	equ	0xFFA
  6415                           tblptru	equ	0xFF8
  6416                           tblptrh	equ	0xFF7
  6417                           tblptrl	equ	0xFF6
  6418                           tablat	equ	0xFF5
  6419                           prodh	equ	0xFF4
  6420                           prodl	equ	0xFF3
  6421                           intcon	equ	0xFF2
  6422                           postinc0	equ	0xFEE
  6423                           fsr0h	equ	0xFEA
  6424                           fsr0l	equ	0xFE9
  6425                           wreg	equ	0xFE8
  6426                           postdec1	equ	0xFE5
  6427                           fsr1h	equ	0xFE2
  6428                           fsr1l	equ	0xFE1
  6429                           indf2	equ	0xFDF
  6430                           postinc2	equ	0xFDE
  6431                           postdec2	equ	0xFDD
  6432                           fsr2h	equ	0xFDA
  6433                           fsr2l	equ	0xFD9
  6434                           status	equ	0xFD8
  6435                           
  6436 ;; *************** function i2_do_I2C_RX *****************
  6437 ;; Defined at:
  6438 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;		None
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      enum E11956
  6445 ;; Registers used:
  6446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6456 ;;Total ram usage:        0 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    3
  6459 ;; This function calls:
  6460 ;;		Absolute function
  6461 ;;		i2_do_I2C_DO_NACK_RESTART
  6462 ;;		i2_do_I2C_DO_NACK_STOP
  6463 ;;		i2_i2c1_driver_getRXData
  6464 ;;		i2_i2c1_driver_sendACK
  6465 ;;		i2_i2c_restartWrite
  6466 ;;		i2_rd1RegCompleteHandler
  6467 ;;		i2_rd2RegCompleteHandler
  6468 ;;		i2_rdBlkRegCompleteHandler
  6469 ;;		i2_returnReset
  6470 ;;		i2_returnStop
  6471 ;;		i2_wr1RegCompleteHandler
  6472 ;;		i2_wr2RegCompleteHandler
  6473 ;; This function is called by:
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           	psect	text64
  6478  000518                     __ptext64:
  6479                           	opt stack 0
  6480  000518                     i2_do_I2C_RX:
  6481                           	opt stack 16
  6482                           
  6483                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  6484                           
  6485                           ; BSR set to: 14
  6486                           ;incstack = 0
  6487  000518  ECFC  F006         	call	i2_i2c1_driver_getRXData	;wreg free
  6488  00051C  C003  FFD9         	movff	_i2c_status+2,fsr2l
  6489  000520  C004  FFDA         	movff	_i2c_status+3,fsr2h
  6490  000524  6EDF               	movwf	indf2,c
  6491  000526  4A03               	infsnz	_i2c_status+2,f,c
  6492  000528  2A04               	incf	_i2c_status+3,f,c
  6493                           
  6494                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  6495  00052A  0605               	decf	_i2c_status+4,f,c
  6496  00052C  A0D8               	btfss	status,0,c
  6497  00052E  0606               	decf	_i2c_status+5,f,c
  6498  000530  5005               	movf	_i2c_status+4,w,c
  6499  000532  1006               	iorwf	_i2c_status+5,w,c
  6500  000534  B4D8               	btfsc	status,2,c
  6501  000536  D004               	goto	i2l445
  6502                           
  6503                           ;i2c_master.c: 361: {
  6504                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  6505  000538  ECE7  F006         	call	i2_i2c1_driver_sendACK	;wreg free
  6506                           
  6507                           ;i2c_master.c: 363: return I2C_RCEN;
  6508  00053C  0E05               	movlw	5
  6509                           
  6510                           ;i2c_master.c: 364: }
  6511  00053E  0012               	return	
  6512  000540                     i2l445:
  6513                           
  6514                           ;i2c_master.c: 365: else
  6515                           ;i2c_master.c: 366: {
  6516                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  6517  000540  8401               	bsf	_i2c_status,2,c
  6518                           
  6519                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  6520  000542  D006               	goto	i2l448
  6521  000544                     
  6522                           ;i2c_master.c: 371: case i2c_restart_read:
  6523                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  6524  000544  ECAF  F006         	call	i2_do_I2C_DO_NACK_RESTART	;wreg free
  6525  000548  0012               	return	
  6526  00054A                     
  6527                           ;i2c_master.c: 375: case i2c_stop:
  6528                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  6529                           
  6530                           ;i2c_master.c: 374: case i2c_continue:
  6531  00054A  ECB3  F006         	call	i2_do_I2C_DO_NACK_STOP	;wreg free
  6532                           
  6533                           ;i2c_master.c: 377: }
  6534  00054E  0012               	return	
  6535  000550                     i2l448:
  6536  000550  C01F  F03C         	movff	_i2c_status+30,i2returnStop@p
  6537  000554  C020  F03D         	movff	_i2c_status+31,i2returnStop@p+1
  6538  000558  EE20  F00D         	lfsr	2,_i2c_status+12
  6539  00055C  D801               	call	i2u145_48
  6540  00055E  D00A               	goto	i2u145_49
  6541  000560                     i2u145_48:
  6542  000560  0005               	push	
  6543  000562  6EFA               	movwf	pclath,c
  6544  000564  50DE               	movf	postinc2,w,c
  6545  000566  6EFD               	movwf	tosl,c
  6546  000568  50DE               	movf	postinc2,w,c
  6547  00056A  6EFE               	movwf	tosh,c
  6548  00056C  50DE               	movf	postinc2,w,c
  6549  00056E  6EFF               	movwf	tosu,c
  6550  000570  50FA               	movf	pclath,w,c
  6551  000572  0012               	return		;indir
  6552  000574                     i2u145_49:
  6553                           
  6554                           ; Switch size 1, requested type "space"
  6555                           ; Number of cases is 4, Range of values is 1 to 4
  6556                           ; switch strategies available:
  6557                           ; Name         Instructions Cycles
  6558                           ; simple_byte           13     7 (average)
  6559                           ;	Chosen strategy is simple_byte
  6560  000574  0A01               	xorlw	1	; case 1
  6561  000576  B4D8               	btfsc	status,2,c
  6562  000578  D7E8               	goto	i2l451
  6563  00057A  0A03               	xorlw	3	; case 2
  6564  00057C  B4D8               	btfsc	status,2,c
  6565  00057E  D7E2               	goto	i2l449
  6566  000580  0A01               	xorlw	1	; case 3
  6567  000582  B4D8               	btfsc	status,2,c
  6568  000584  D7DF               	goto	i2l449
  6569  000586  0A07               	xorlw	7	; case 4
  6570  000588  D7E0               	goto	i2l451
  6571  00058A                     __end_ofi2_do_I2C_RX:
  6572                           	opt stack 0
  6573                           tosu	equ	0xFFF
  6574                           tosh	equ	0xFFE
  6575                           tosl	equ	0xFFD
  6576                           pclatu	equ	0xFFB
  6577                           pclath	equ	0xFFA
  6578                           tblptru	equ	0xFF8
  6579                           tblptrh	equ	0xFF7
  6580                           tblptrl	equ	0xFF6
  6581                           tablat	equ	0xFF5
  6582                           prodh	equ	0xFF4
  6583                           prodl	equ	0xFF3
  6584                           intcon	equ	0xFF2
  6585                           postinc0	equ	0xFEE
  6586                           fsr0h	equ	0xFEA
  6587                           fsr0l	equ	0xFE9
  6588                           wreg	equ	0xFE8
  6589                           postdec1	equ	0xFE5
  6590                           fsr1h	equ	0xFE2
  6591                           fsr1l	equ	0xFE1
  6592                           indf2	equ	0xFDF
  6593                           postinc2	equ	0xFDE
  6594                           postdec2	equ	0xFDD
  6595                           fsr2h	equ	0xFDA
  6596                           fsr2l	equ	0xFD9
  6597                           status	equ	0xFD8
  6598                           
  6599 ;; *************** function i2_do_I2C_TX *****************
  6600 ;; Defined at:
  6601 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;		None
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;		None
  6606 ;; Return value:  Size  Location     Type
  6607 ;;                  1    wreg      enum E11956
  6608 ;; Registers used:
  6609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6610 ;; Tracked objects:
  6611 ;;		On entry : 0/0
  6612 ;;		On exit  : 0/0
  6613 ;;		Unchanged: 0/0
  6614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6619 ;;Total ram usage:        2 bytes
  6620 ;; Hardware stack levels used:    1
  6621 ;; Hardware stack levels required when called:    3
  6622 ;; This function calls:
  6623 ;;		Absolute function
  6624 ;;		i2_do_I2C_SEND_RESTART_READ
  6625 ;;		i2_do_I2C_SEND_RESTART_WRITE
  6626 ;;		i2_do_I2C_SEND_STOP
  6627 ;;		i2_i2c1_driver_TXData
  6628 ;;		i2_i2c1_driver_isNACK
  6629 ;;		i2_i2c_restartWrite
  6630 ;;		i2_rd1RegCompleteHandler
  6631 ;;		i2_rd2RegCompleteHandler
  6632 ;;		i2_rdBlkRegCompleteHandler
  6633 ;;		i2_returnReset
  6634 ;;		i2_returnStop
  6635 ;;		i2_wr1RegCompleteHandler
  6636 ;;		i2_wr2RegCompleteHandler
  6637 ;; This function is called by:
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           	psect	text65
  6642  000226                     __ptext65:
  6643                           	opt stack 0
  6644  000226                     i2_do_I2C_TX:
  6645                           	opt stack 16
  6646                           
  6647                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  6648                           
  6649                           ;incstack = 0
  6650  000226  ECEB  F005         	call	i2_i2c1_driver_isNACK	;wreg free
  6651  00022A  B0D8               	btfsc	status,0,c
  6652  00022C  D00A               	goto	i2l430
  6653  00022E  D026               	goto	i2l429
  6654  000230                     
  6655                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  6656  000230  ECC7  F006         	call	i2_do_I2C_SEND_RESTART_READ	;wreg free
  6657  000234  0012               	return	
  6658  000236                     
  6659                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  6660  000236  ECC3  F006         	call	i2_do_I2C_SEND_RESTART_WRITE	;wreg free
  6661  00023A  0012               	return	
  6662  00023C                     
  6663                           ;i2c_master.c: 345: case i2c_stop:
  6664                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  6665                           
  6666                           ;i2c_master.c: 344: case i2c_continue:
  6667  00023C  ECBB  F006         	call	i2_do_I2C_SEND_STOP	;wreg free
  6668                           
  6669                           ;i2c_master.c: 347: }
  6670  000240  0012               	return	
  6671  000242                     i2l430:
  6672  000242  C025  F03C         	movff	_i2c_status+36,i2returnStop@p
  6673  000246  C026  F03D         	movff	_i2c_status+37,i2returnStop@p+1
  6674  00024A  EE20  F016         	lfsr	2,_i2c_status+21
  6675  00024E  D801               	call	i2u142_48
  6676  000250  D00A               	goto	i2u142_49
  6677  000252                     i2u142_48:
  6678  000252  0005               	push	
  6679  000254  6EFA               	movwf	pclath,c
  6680  000256  50DE               	movf	postinc2,w,c
  6681  000258  6EFD               	movwf	tosl,c
  6682  00025A  50DE               	movf	postinc2,w,c
  6683  00025C  6EFE               	movwf	tosh,c
  6684  00025E  50DE               	movf	postinc2,w,c
  6685  000260  6EFF               	movwf	tosu,c
  6686  000262  50FA               	movf	pclath,w,c
  6687  000264  0012               	return		;indir
  6688  000266                     i2u142_49:
  6689                           
  6690                           ; Switch size 1, requested type "space"
  6691                           ; Number of cases is 4, Range of values is 1 to 4
  6692                           ; switch strategies available:
  6693                           ; Name         Instructions Cycles
  6694                           ; simple_byte           13     7 (average)
  6695                           ;	Chosen strategy is simple_byte
  6696  000266  0A01               	xorlw	1	; case 1
  6697  000268  B4D8               	btfsc	status,2,c
  6698  00026A  D7E8               	goto	i2l434
  6699  00026C  0A03               	xorlw	3	; case 2
  6700  00026E  B4D8               	btfsc	status,2,c
  6701  000270  D7DF               	goto	i2l431
  6702  000272  0A01               	xorlw	1	; case 3
  6703  000274  B4D8               	btfsc	status,2,c
  6704  000276  D7DF               	goto	i2l433
  6705  000278  0A07               	xorlw	7	; case 4
  6706  00027A  D7E0               	goto	i2l434
  6707  00027C                     i2l429:
  6708                           
  6709                           ;i2c_master.c: 349: else
  6710                           ;i2c_master.c: 350: {
  6711                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  6712  00027C  9601               	bcf	_i2c_status,3,c
  6713                           
  6714                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  6715  00027E  C003  FFD9         	movff	_i2c_status+2,fsr2l
  6716  000282  C004  FFDA         	movff	_i2c_status+3,fsr2h
  6717  000286  4A03               	infsnz	_i2c_status+2,f,c
  6718  000288  2A04               	incf	_i2c_status+3,f,c
  6719  00028A  50DF               	movf	indf2,w,c
  6720  00028C  ECCB  F006         	call	i2_i2c1_driver_TXData
  6721                           
  6722                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  6723  000290  0605               	decf	_i2c_status+4,f,c
  6724  000292  A0D8               	btfss	status,0,c
  6725  000294  0606               	decf	_i2c_status+5,f,c
  6726  000296  5005               	movf	_i2c_status+4,w,c
  6727  000298  1006               	iorwf	_i2c_status+5,w,c
  6728  00029A  A4D8               	btfss	status,2,c
  6729  00029C  D004               	goto	i2l440
  6730  00029E  0E00               	movlw	0
  6731  0002A0  6E33               	movwf	i2_do_I2C_TX$1023+1,c
  6732  0002A2  0E06               	movlw	6
  6733  0002A4  D003               	goto	L4
  6734  0002A6                     i2l440:
  6735  0002A6  0E00               	movlw	0
  6736  0002A8  6E33               	movwf	i2_do_I2C_TX$1023+1,c
  6737  0002AA  0E03               	movlw	3
  6738  0002AC                     L4:
  6739  0002AC  6E32               	movwf	i2_do_I2C_TX$1023,c
  6740  0002AE  5032               	movf	i2_do_I2C_TX$1023,w,c
  6741  0002B0  0012               	return	
  6742  0002B2                     __end_ofi2_do_I2C_TX:
  6743                           	opt stack 0
  6744                           tosu	equ	0xFFF
  6745                           tosh	equ	0xFFE
  6746                           tosl	equ	0xFFD
  6747                           pclatu	equ	0xFFB
  6748                           pclath	equ	0xFFA
  6749                           tblptru	equ	0xFF8
  6750                           tblptrh	equ	0xFF7
  6751                           tblptrl	equ	0xFF6
  6752                           tablat	equ	0xFF5
  6753                           prodh	equ	0xFF4
  6754                           prodl	equ	0xFF3
  6755                           intcon	equ	0xFF2
  6756                           postinc0	equ	0xFEE
  6757                           fsr0h	equ	0xFEA
  6758                           fsr0l	equ	0xFE9
  6759                           wreg	equ	0xFE8
  6760                           postdec1	equ	0xFE5
  6761                           fsr1h	equ	0xFE2
  6762                           fsr1l	equ	0xFE1
  6763                           indf2	equ	0xFDF
  6764                           postinc2	equ	0xFDE
  6765                           postdec2	equ	0xFDD
  6766                           fsr2h	equ	0xFDA
  6767                           fsr2l	equ	0xFD9
  6768                           status	equ	0xFD8
  6769                           
  6770 ;; *************** function i2_do_I2C_DO_ADDRESS_NACK *****************
  6771 ;; Defined at:
  6772 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      enum E11956
  6779 ;; Registers used:
  6780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6790 ;;Total ram usage:        0 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    3
  6793 ;; This function calls:
  6794 ;;		Absolute function
  6795 ;;		i2_do_I2C_SEND_RESTART
  6796 ;;		i2_do_I2C_SEND_STOP
  6797 ;;		i2_i2c_restartWrite
  6798 ;;		i2_rd1RegCompleteHandler
  6799 ;;		i2_rd2RegCompleteHandler
  6800 ;;		i2_rdBlkRegCompleteHandler
  6801 ;;		i2_returnReset
  6802 ;;		i2_returnStop
  6803 ;;		i2_wr1RegCompleteHandler
  6804 ;;		i2_wr2RegCompleteHandler
  6805 ;; This function is called by:
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text66
  6810  00076C                     __ptext66:
  6811                           	opt stack 0
  6812  00076C                     i2_do_I2C_DO_ADDRESS_NACK:
  6813                           	opt stack 16
  6814                           
  6815                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  6816                           
  6817                           ;incstack = 0
  6818  00076C  9601               	bcf	_i2c_status,3,c
  6819                           
  6820                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  6821  00076E  0E02               	movlw	2
  6822  000770  6E0C               	movwf	_i2c_status+11,c
  6823                           
  6824                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  6825  000772  D006               	goto	i2l421
  6826  000774                     
  6827                           ;i2c_master.c: 326: case i2c_restart_write:
  6828                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  6829  000774  ECBF  F006         	call	i2_do_I2C_SEND_RESTART	;wreg free
  6830  000778  0012               	return	
  6831  00077A                     
  6832                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  6833  00077A  ECBB  F006         	call	i2_do_I2C_SEND_STOP	;wreg free
  6834                           
  6835                           ;i2c_master.c: 330: }
  6836  00077E  0012               	return	
  6837  000780                     i2l421:
  6838  000780  C023  F03C         	movff	_i2c_status+34,i2returnStop@p
  6839  000784  C024  F03D         	movff	_i2c_status+35,i2returnStop@p+1
  6840  000788  EE20  F013         	lfsr	2,_i2c_status+18
  6841  00078C  D801               	call	i2u140_48
  6842  00078E  D00A               	goto	i2u140_49
  6843  000790                     i2u140_48:
  6844  000790  0005               	push	
  6845  000792  6EFA               	movwf	pclath,c
  6846  000794  50DE               	movf	postinc2,w,c
  6847  000796  6EFD               	movwf	tosl,c
  6848  000798  50DE               	movf	postinc2,w,c
  6849  00079A  6EFE               	movwf	tosh,c
  6850  00079C  50DE               	movf	postinc2,w,c
  6851  00079E  6EFF               	movwf	tosu,c
  6852  0007A0  50FA               	movf	pclath,w,c
  6853  0007A2  0012               	return		;indir
  6854  0007A4                     i2u140_49:
  6855                           
  6856                           ; Switch size 1, requested type "space"
  6857                           ; Number of cases is 2, Range of values is 2 to 3
  6858                           ; switch strategies available:
  6859                           ; Name         Instructions Cycles
  6860                           ; simple_byte            7     4 (average)
  6861                           ;	Chosen strategy is simple_byte
  6862  0007A4  0A02               	xorlw	2	; case 2
  6863  0007A6  B4D8               	btfsc	status,2,c
  6864  0007A8  D7E5               	goto	i2l422
  6865  0007AA  0A01               	xorlw	1	; case 3
  6866  0007AC  B4D8               	btfsc	status,2,c
  6867  0007AE  D7E2               	goto	i2l422
  6868  0007B0  D7E4               	goto	i2l425
  6869  0007B2                     __end_ofi2_do_I2C_DO_ADDRESS_NACK:
  6870                           	opt stack 0
  6871                           tosu	equ	0xFFF
  6872                           tosh	equ	0xFFE
  6873                           tosl	equ	0xFFD
  6874                           pclatu	equ	0xFFB
  6875                           pclath	equ	0xFFA
  6876                           tblptru	equ	0xFF8
  6877                           tblptrh	equ	0xFF7
  6878                           tblptrl	equ	0xFF6
  6879                           tablat	equ	0xFF5
  6880                           prodh	equ	0xFF4
  6881                           prodl	equ	0xFF3
  6882                           intcon	equ	0xFF2
  6883                           postinc0	equ	0xFEE
  6884                           fsr0h	equ	0xFEA
  6885                           fsr0l	equ	0xFE9
  6886                           wreg	equ	0xFE8
  6887                           postdec1	equ	0xFE5
  6888                           fsr1h	equ	0xFE2
  6889                           fsr1l	equ	0xFE1
  6890                           indf2	equ	0xFDF
  6891                           postinc2	equ	0xFDE
  6892                           postdec2	equ	0xFDD
  6893                           fsr2h	equ	0xFDA
  6894                           fsr2l	equ	0xFD9
  6895                           status	equ	0xFD8
  6896                           
  6897 ;; *************** function i2_do_I2C_DO_NACK_RESTART *****************
  6898 ;; Defined at:
  6899 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;		None
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      enum E11956
  6906 ;; Registers used:
  6907 ;;		wreg, cstack
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6917 ;;Total ram usage:        0 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    1
  6920 ;; This function calls:
  6921 ;;		i2_i2c1_driver_sendNACK
  6922 ;; This function is called by:
  6923 ;;		i2_do_I2C_RX
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text67
  6928  000D5E                     __ptext67:
  6929                           	opt stack 0
  6930  000D5E                     i2_do_I2C_DO_NACK_RESTART:
  6931                           	opt stack 17
  6932                           
  6933                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  6934                           
  6935                           ;incstack = 0
  6936  000D5E  ECE4  F006         	call	i2_i2c1_driver_sendNACK	;wreg free
  6937                           
  6938                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  6939  000D62  0E09               	movlw	9
  6940  000D64  0012               	return	
  6941  000D66                     __end_ofi2_do_I2C_DO_NACK_RESTART:
  6942                           	opt stack 0
  6943                           tosu	equ	0xFFF
  6944                           tosh	equ	0xFFE
  6945                           tosl	equ	0xFFD
  6946                           pclatu	equ	0xFFB
  6947                           pclath	equ	0xFFA
  6948                           tblptru	equ	0xFF8
  6949                           tblptrh	equ	0xFF7
  6950                           tblptrl	equ	0xFF6
  6951                           tablat	equ	0xFF5
  6952                           prodh	equ	0xFF4
  6953                           prodl	equ	0xFF3
  6954                           intcon	equ	0xFF2
  6955                           postinc0	equ	0xFEE
  6956                           fsr0h	equ	0xFEA
  6957                           fsr0l	equ	0xFE9
  6958                           wreg	equ	0xFE8
  6959                           postdec1	equ	0xFE5
  6960                           fsr1h	equ	0xFE2
  6961                           fsr1l	equ	0xFE1
  6962                           indf2	equ	0xFDF
  6963                           postinc2	equ	0xFDE
  6964                           postdec2	equ	0xFDD
  6965                           fsr2h	equ	0xFDA
  6966                           fsr2l	equ	0xFD9
  6967                           status	equ	0xFD8
  6968                           
  6969 ;; *************** function i2_do_I2C_DO_NACK_STOP *****************
  6970 ;; Defined at:
  6971 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;		None
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;		None
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      enum E11956
  6978 ;; Registers used:
  6979 ;;		wreg, cstack
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6989 ;;Total ram usage:        0 bytes
  6990 ;; Hardware stack levels used:    1
  6991 ;; Hardware stack levels required when called:    1
  6992 ;; This function calls:
  6993 ;;		i2_i2c1_driver_sendNACK
  6994 ;; This function is called by:
  6995 ;;		i2_do_I2C_RX
  6996 ;; This function uses a non-reentrant model
  6997 ;;
  6998                           
  6999                           	psect	text68
  7000  000D66                     __ptext68:
  7001                           	opt stack 0
  7002  000D66                     i2_do_I2C_DO_NACK_STOP:
  7003                           	opt stack 17
  7004                           
  7005                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  7006                           
  7007                           ;incstack = 0
  7008  000D66  ECE4  F006         	call	i2_i2c1_driver_sendNACK	;wreg free
  7009                           
  7010                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  7011  000D6A  0E0A               	movlw	10
  7012  000D6C  0012               	return	
  7013  000D6E                     __end_ofi2_do_I2C_DO_NACK_STOP:
  7014                           	opt stack 0
  7015                           tosu	equ	0xFFF
  7016                           tosh	equ	0xFFE
  7017                           tosl	equ	0xFFD
  7018                           pclatu	equ	0xFFB
  7019                           pclath	equ	0xFFA
  7020                           tblptru	equ	0xFF8
  7021                           tblptrh	equ	0xFF7
  7022                           tblptrl	equ	0xFF6
  7023                           tablat	equ	0xFF5
  7024                           prodh	equ	0xFF4
  7025                           prodl	equ	0xFF3
  7026                           intcon	equ	0xFF2
  7027                           postinc0	equ	0xFEE
  7028                           fsr0h	equ	0xFEA
  7029                           fsr0l	equ	0xFE9
  7030                           wreg	equ	0xFE8
  7031                           postdec1	equ	0xFE5
  7032                           fsr1h	equ	0xFE2
  7033                           fsr1l	equ	0xFE1
  7034                           indf2	equ	0xFDF
  7035                           postinc2	equ	0xFDE
  7036                           postdec2	equ	0xFDD
  7037                           fsr2h	equ	0xFDA
  7038                           fsr2l	equ	0xFD9
  7039                           status	equ	0xFD8
  7040                           
  7041 ;; *************** function i2_do_I2C_DO_ACK *****************
  7042 ;; Defined at:
  7043 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;		None
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1    wreg      enum E11956
  7050 ;; Registers used:
  7051 ;;		wreg, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7061 ;;Total ram usage:        0 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    1
  7064 ;; This function calls:
  7065 ;;		i2_i2c1_driver_sendACK
  7066 ;; This function is called by:
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           	psect	text69
  7071  000D6E                     __ptext69:
  7072                           	opt stack 0
  7073  000D6E                     i2_do_I2C_DO_ACK:
  7074                           	opt stack 18
  7075                           
  7076                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  7077                           
  7078                           ;incstack = 0
  7079  000D6E  ECE7  F006         	call	i2_i2c1_driver_sendACK	;wreg free
  7080                           
  7081                           ;i2c_master.c: 302: return I2C_RCEN;
  7082  000D72  0E05               	movlw	5
  7083  000D74  0012               	return	
  7084  000D76                     __end_ofi2_do_I2C_DO_ACK:
  7085                           	opt stack 0
  7086                           tosu	equ	0xFFF
  7087                           tosh	equ	0xFFE
  7088                           tosl	equ	0xFFD
  7089                           pclatu	equ	0xFFB
  7090                           pclath	equ	0xFFA
  7091                           tblptru	equ	0xFF8
  7092                           tblptrh	equ	0xFF7
  7093                           tblptrl	equ	0xFF6
  7094                           tablat	equ	0xFF5
  7095                           prodh	equ	0xFF4
  7096                           prodl	equ	0xFF3
  7097                           intcon	equ	0xFF2
  7098                           postinc0	equ	0xFEE
  7099                           fsr0h	equ	0xFEA
  7100                           fsr0l	equ	0xFE9
  7101                           wreg	equ	0xFE8
  7102                           postdec1	equ	0xFE5
  7103                           fsr1h	equ	0xFE2
  7104                           fsr1l	equ	0xFE1
  7105                           indf2	equ	0xFDF
  7106                           postinc2	equ	0xFDE
  7107                           postdec2	equ	0xFDD
  7108                           fsr2h	equ	0xFDA
  7109                           fsr2l	equ	0xFD9
  7110                           status	equ	0xFD8
  7111                           
  7112 ;; *************** function i2_do_I2C_RCEN *****************
  7113 ;; Defined at:
  7114 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;		None
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      enum E11956
  7121 ;; Registers used:
  7122 ;;		wreg, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7132 ;;Total ram usage:        0 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    1
  7135 ;; This function calls:
  7136 ;;		i2_i2c1_driver_startRX
  7137 ;; This function is called by:
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           	psect	text70
  7142  000D32                     __ptext70:
  7143                           	opt stack 0
  7144  000D32                     i2_do_I2C_RCEN:
  7145                           	opt stack 18
  7146                           
  7147                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  7148                           
  7149                           ;incstack = 0
  7150  000D32  9601               	bcf	_i2c_status,3,c
  7151                           
  7152                           ;i2c_master.c: 295: i2c1_driver_startRX();
  7153  000D34  ECFE  F006         	call	i2_i2c1_driver_startRX	;wreg free
  7154                           
  7155                           ;i2c_master.c: 296: return I2C_RX;
  7156  000D38  0E04               	movlw	4
  7157  000D3A  0012               	return	
  7158  000D3C                     __end_ofi2_do_I2C_RCEN:
  7159                           	opt stack 0
  7160                           tosu	equ	0xFFF
  7161                           tosh	equ	0xFFE
  7162                           tosl	equ	0xFFD
  7163                           pclatu	equ	0xFFB
  7164                           pclath	equ	0xFFA
  7165                           tblptru	equ	0xFF8
  7166                           tblptrh	equ	0xFF7
  7167                           tblptrl	equ	0xFF6
  7168                           tablat	equ	0xFF5
  7169                           prodh	equ	0xFF4
  7170                           prodl	equ	0xFF3
  7171                           intcon	equ	0xFF2
  7172                           postinc0	equ	0xFEE
  7173                           fsr0h	equ	0xFEA
  7174                           fsr0l	equ	0xFE9
  7175                           wreg	equ	0xFE8
  7176                           postdec1	equ	0xFE5
  7177                           fsr1h	equ	0xFE2
  7178                           fsr1l	equ	0xFE1
  7179                           indf2	equ	0xFDF
  7180                           postinc2	equ	0xFDE
  7181                           postdec2	equ	0xFDD
  7182                           fsr2h	equ	0xFDA
  7183                           fsr2l	equ	0xFD9
  7184                           status	equ	0xFD8
  7185                           
  7186 ;; *************** function i2_do_I2C_SEND_ADR_WRITE *****************
  7187 ;; Defined at:
  7188 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;		None
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;		None
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      enum E11956
  7195 ;; Registers used:
  7196 ;;		wreg, status,2, status,0, cstack
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7206 ;;Total ram usage:        0 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; Hardware stack levels required when called:    1
  7209 ;; This function calls:
  7210 ;;		i2_i2c1_driver_TXData
  7211 ;; This function is called by:
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text71
  7216  000CEA                     __ptext71:
  7217                           	opt stack 0
  7218  000CEA                     i2_do_I2C_SEND_ADR_WRITE:
  7219                           	opt stack 18
  7220                           
  7221                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  7222                           
  7223                           ;incstack = 0
  7224  000CEA  8601               	bsf	_i2c_status,3,c
  7225                           
  7226                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  7227  000CEC  5002               	movf	_i2c_status+1,w,c
  7228  000CEE  2402               	addwf	_i2c_status+1,w,c
  7229  000CF0  ECCB  F006         	call	i2_i2c1_driver_TXData
  7230                           
  7231                           ;i2c_master.c: 289: return I2C_TX;
  7232  000CF4  0E03               	movlw	3
  7233  000CF6  0012               	return	
  7234  000CF8                     __end_ofi2_do_I2C_SEND_ADR_WRITE:
  7235                           	opt stack 0
  7236                           tosu	equ	0xFFF
  7237                           tosh	equ	0xFFE
  7238                           tosl	equ	0xFFD
  7239                           pclatu	equ	0xFFB
  7240                           pclath	equ	0xFFA
  7241                           tblptru	equ	0xFF8
  7242                           tblptrh	equ	0xFF7
  7243                           tblptrl	equ	0xFF6
  7244                           tablat	equ	0xFF5
  7245                           prodh	equ	0xFF4
  7246                           prodl	equ	0xFF3
  7247                           intcon	equ	0xFF2
  7248                           postinc0	equ	0xFEE
  7249                           fsr0h	equ	0xFEA
  7250                           fsr0l	equ	0xFE9
  7251                           wreg	equ	0xFE8
  7252                           postdec1	equ	0xFE5
  7253                           fsr1h	equ	0xFE2
  7254                           fsr1l	equ	0xFE1
  7255                           indf2	equ	0xFDF
  7256                           postinc2	equ	0xFDE
  7257                           postdec2	equ	0xFDD
  7258                           fsr2h	equ	0xFDA
  7259                           fsr2l	equ	0xFD9
  7260                           status	equ	0xFD8
  7261                           
  7262 ;; *************** function i2_do_I2C_SEND_ADR_READ *****************
  7263 ;; Defined at:
  7264 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;		None
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      enum E11956
  7271 ;; Registers used:
  7272 ;;		wreg, status,0, cstack
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7282 ;;Total ram usage:        0 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    1
  7285 ;; This function calls:
  7286 ;;		i2_i2c1_driver_TXData
  7287 ;; This function is called by:
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           	psect	text72
  7292  000CF8                     __ptext72:
  7293                           	opt stack 0
  7294  000CF8                     i2_do_I2C_SEND_ADR_READ:
  7295                           	opt stack 18
  7296                           
  7297                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  7298                           
  7299                           ;incstack = 0
  7300  000CF8  8601               	bsf	_i2c_status,3,c
  7301                           
  7302                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  7303  000CFA  80D8               	bsf	status,0,c
  7304  000CFC  3402               	rlcf	_i2c_status+1,w,c
  7305  000CFE  ECCB  F006         	call	i2_i2c1_driver_TXData
  7306                           
  7307                           ;i2c_master.c: 282: return I2C_RCEN;
  7308  000D02  0E05               	movlw	5
  7309  000D04  0012               	return	
  7310  000D06                     __end_ofi2_do_I2C_SEND_ADR_READ:
  7311                           	opt stack 0
  7312                           tosu	equ	0xFFF
  7313                           tosh	equ	0xFFE
  7314                           tosl	equ	0xFFD
  7315                           pclatu	equ	0xFFB
  7316                           pclath	equ	0xFFA
  7317                           tblptru	equ	0xFF8
  7318                           tblptrh	equ	0xFF7
  7319                           tblptrl	equ	0xFF6
  7320                           tablat	equ	0xFF5
  7321                           prodh	equ	0xFF4
  7322                           prodl	equ	0xFF3
  7323                           intcon	equ	0xFF2
  7324                           postinc0	equ	0xFEE
  7325                           fsr0h	equ	0xFEA
  7326                           fsr0l	equ	0xFE9
  7327                           wreg	equ	0xFE8
  7328                           postdec1	equ	0xFE5
  7329                           fsr1h	equ	0xFE2
  7330                           fsr1l	equ	0xFE1
  7331                           indf2	equ	0xFDF
  7332                           postinc2	equ	0xFDE
  7333                           postdec2	equ	0xFDD
  7334                           fsr2h	equ	0xFDA
  7335                           fsr2l	equ	0xFD9
  7336                           status	equ	0xFD8
  7337                           
  7338 ;; *************** function i2_do_I2C_SEND_STOP *****************
  7339 ;; Defined at:
  7340 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;		None
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      enum E11956
  7347 ;; Registers used:
  7348 ;;		wreg, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;Total ram usage:        0 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:    1
  7361 ;; This function calls:
  7362 ;;		i2_i2c1_driver_stop
  7363 ;; This function is called by:
  7364 ;;		i2_do_I2C_DO_ADDRESS_NACK
  7365 ;;		i2_do_I2C_TX
  7366 ;;		i2_do_I2C_TX_EMPTY
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text73
  7371  000D76                     __ptext73:
  7372                           	opt stack 0
  7373  000D76                     i2_do_I2C_SEND_STOP:
  7374                           	opt stack 17
  7375                           
  7376                           ;i2c_master.c: 274: i2c1_driver_stop();
  7377                           
  7378                           ;incstack = 0
  7379  000D76  EC06  F007         	call	i2_i2c1_driver_stop	;wreg free
  7380                           
  7381                           ;i2c_master.c: 275: return I2C_IDLE;
  7382  000D7A  0E00               	movlw	0
  7383  000D7C  0012               	return	
  7384  000D7E                     __end_ofi2_do_I2C_SEND_STOP:
  7385                           	opt stack 0
  7386                           tosu	equ	0xFFF
  7387                           tosh	equ	0xFFE
  7388                           tosl	equ	0xFFD
  7389                           pclatu	equ	0xFFB
  7390                           pclath	equ	0xFFA
  7391                           tblptru	equ	0xFF8
  7392                           tblptrh	equ	0xFF7
  7393                           tblptrl	equ	0xFF6
  7394                           tablat	equ	0xFF5
  7395                           prodh	equ	0xFF4
  7396                           prodl	equ	0xFF3
  7397                           intcon	equ	0xFF2
  7398                           postinc0	equ	0xFEE
  7399                           fsr0h	equ	0xFEA
  7400                           fsr0l	equ	0xFE9
  7401                           wreg	equ	0xFE8
  7402                           postdec1	equ	0xFE5
  7403                           fsr1h	equ	0xFE2
  7404                           fsr1l	equ	0xFE1
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           postdec2	equ	0xFDD
  7408                           fsr2h	equ	0xFDA
  7409                           fsr2l	equ	0xFD9
  7410                           status	equ	0xFD8
  7411                           
  7412 ;; *************** function i2_do_I2C_SEND_RESTART *****************
  7413 ;; Defined at:
  7414 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      enum E11956
  7421 ;; Registers used:
  7422 ;;		wreg, cstack
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7432 ;;Total ram usage:        0 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    1
  7435 ;; This function calls:
  7436 ;;		i2_i2c1_driver_restart
  7437 ;; This function is called by:
  7438 ;;		i2_do_I2C_DO_ADDRESS_NACK
  7439 ;;		i2_do_I2C_TX_EMPTY
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text74
  7444  000D7E                     __ptext74:
  7445                           	opt stack 0
  7446  000D7E                     i2_do_I2C_SEND_RESTART:
  7447                           	opt stack 17
  7448                           
  7449                           ;i2c_master.c: 268: i2c1_driver_restart();
  7450                           
  7451                           ;incstack = 0
  7452  000D7E  EC08  F007         	call	i2_i2c1_driver_restart	;wreg free
  7453                           
  7454                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  7455  000D82  0E01               	movlw	1
  7456  000D84  0012               	return	
  7457  000D86                     __end_ofi2_do_I2C_SEND_RESTART:
  7458                           	opt stack 0
  7459                           tosu	equ	0xFFF
  7460                           tosh	equ	0xFFE
  7461                           tosl	equ	0xFFD
  7462                           pclatu	equ	0xFFB
  7463                           pclath	equ	0xFFA
  7464                           tblptru	equ	0xFF8
  7465                           tblptrh	equ	0xFF7
  7466                           tblptrl	equ	0xFF6
  7467                           tablat	equ	0xFF5
  7468                           prodh	equ	0xFF4
  7469                           prodl	equ	0xFF3
  7470                           intcon	equ	0xFF2
  7471                           postinc0	equ	0xFEE
  7472                           fsr0h	equ	0xFEA
  7473                           fsr0l	equ	0xFE9
  7474                           wreg	equ	0xFE8
  7475                           postdec1	equ	0xFE5
  7476                           fsr1h	equ	0xFE2
  7477                           fsr1l	equ	0xFE1
  7478                           indf2	equ	0xFDF
  7479                           postinc2	equ	0xFDE
  7480                           postdec2	equ	0xFDD
  7481                           fsr2h	equ	0xFDA
  7482                           fsr2l	equ	0xFD9
  7483                           status	equ	0xFD8
  7484                           
  7485 ;; *************** function i2_do_I2C_SEND_RESTART_WRITE *****************
  7486 ;; Defined at:
  7487 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;		None
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;		None
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  1    wreg      enum E11956
  7494 ;; Registers used:
  7495 ;;		wreg, cstack
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;Total ram usage:        0 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    1
  7508 ;; This function calls:
  7509 ;;		i2_i2c1_driver_restart
  7510 ;; This function is called by:
  7511 ;;		i2_do_I2C_TX
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           	psect	text75
  7516  000D86                     __ptext75:
  7517                           	opt stack 0
  7518  000D86                     i2_do_I2C_SEND_RESTART_WRITE:
  7519                           	opt stack 17
  7520                           
  7521                           ;i2c_master.c: 262: i2c1_driver_restart();
  7522                           
  7523                           ;incstack = 0
  7524  000D86  EC08  F007         	call	i2_i2c1_driver_restart	;wreg free
  7525                           
  7526                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  7527  000D8A  0E02               	movlw	2
  7528  000D8C  0012               	return	
  7529  000D8E                     __end_ofi2_do_I2C_SEND_RESTART_WRITE:
  7530                           	opt stack 0
  7531                           tosu	equ	0xFFF
  7532                           tosh	equ	0xFFE
  7533                           tosl	equ	0xFFD
  7534                           pclatu	equ	0xFFB
  7535                           pclath	equ	0xFFA
  7536                           tblptru	equ	0xFF8
  7537                           tblptrh	equ	0xFF7
  7538                           tblptrl	equ	0xFF6
  7539                           tablat	equ	0xFF5
  7540                           prodh	equ	0xFF4
  7541                           prodl	equ	0xFF3
  7542                           intcon	equ	0xFF2
  7543                           postinc0	equ	0xFEE
  7544                           fsr0h	equ	0xFEA
  7545                           fsr0l	equ	0xFE9
  7546                           wreg	equ	0xFE8
  7547                           postdec1	equ	0xFE5
  7548                           fsr1h	equ	0xFE2
  7549                           fsr1l	equ	0xFE1
  7550                           indf2	equ	0xFDF
  7551                           postinc2	equ	0xFDE
  7552                           postdec2	equ	0xFDD
  7553                           fsr2h	equ	0xFDA
  7554                           fsr2l	equ	0xFD9
  7555                           status	equ	0xFD8
  7556                           
  7557 ;; *************** function i2_do_I2C_SEND_RESTART_READ *****************
  7558 ;; Defined at:
  7559 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;		None
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;		None
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1    wreg      enum E11956
  7566 ;; Registers used:
  7567 ;;		wreg, cstack
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;Total ram usage:        0 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; Hardware stack levels required when called:    1
  7580 ;; This function calls:
  7581 ;;		i2_i2c1_driver_restart
  7582 ;; This function is called by:
  7583 ;;		i2_do_I2C_TX
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text76
  7588  000D8E                     __ptext76:
  7589                           	opt stack 0
  7590  000D8E                     i2_do_I2C_SEND_RESTART_READ:
  7591                           	opt stack 17
  7592                           
  7593                           ;i2c_master.c: 256: i2c1_driver_restart();
  7594                           
  7595                           ;incstack = 0
  7596  000D8E  EC08  F007         	call	i2_i2c1_driver_restart	;wreg free
  7597                           
  7598                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  7599  000D92  0E01               	movlw	1
  7600  000D94  0012               	return	
  7601  000D96                     __end_ofi2_do_I2C_SEND_RESTART_READ:
  7602                           	opt stack 0
  7603                           tosu	equ	0xFFF
  7604                           tosh	equ	0xFFE
  7605                           tosl	equ	0xFFD
  7606                           pclatu	equ	0xFFB
  7607                           pclath	equ	0xFFA
  7608                           tblptru	equ	0xFF8
  7609                           tblptrh	equ	0xFF7
  7610                           tblptrl	equ	0xFF6
  7611                           tablat	equ	0xFF5
  7612                           prodh	equ	0xFF4
  7613                           prodl	equ	0xFF3
  7614                           intcon	equ	0xFF2
  7615                           postinc0	equ	0xFEE
  7616                           fsr0h	equ	0xFEA
  7617                           fsr0l	equ	0xFE9
  7618                           wreg	equ	0xFE8
  7619                           postdec1	equ	0xFE5
  7620                           fsr1h	equ	0xFE2
  7621                           fsr1l	equ	0xFE1
  7622                           indf2	equ	0xFDF
  7623                           postinc2	equ	0xFDE
  7624                           postdec2	equ	0xFDD
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function i2_do_I2C_IDLE *****************
  7630 ;; Defined at:
  7631 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      enum E11956
  7638 ;; Registers used:
  7639 ;;		wreg, status,2
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text77
  7658  000D3C                     __ptext77:
  7659                           	opt stack 0
  7660  000D3C                     i2_do_I2C_IDLE:
  7661                           	opt stack 19
  7662                           
  7663                           ;i2c_master.c: 249: i2c_status.busy = 0;
  7664                           
  7665                           ;incstack = 0
  7666  000D3C  9001               	bcf	_i2c_status,0,c
  7667                           
  7668                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  7669  000D3E  0E00               	movlw	0
  7670  000D40  6E0C               	movwf	_i2c_status+11,c
  7671                           
  7672                           ;i2c_master.c: 251: return I2C_RESET;
  7673  000D42  0E0E               	movlw	14
  7674  000D44  0012               	return	
  7675  000D46                     __end_ofi2_do_I2C_IDLE:
  7676                           	opt stack 0
  7677                           tosu	equ	0xFFF
  7678                           tosh	equ	0xFFE
  7679                           tosl	equ	0xFFD
  7680                           pclatu	equ	0xFFB
  7681                           pclath	equ	0xFFA
  7682                           tblptru	equ	0xFF8
  7683                           tblptrh	equ	0xFF7
  7684                           tblptrl	equ	0xFF6
  7685                           tablat	equ	0xFF5
  7686                           prodh	equ	0xFF4
  7687                           prodl	equ	0xFF3
  7688                           intcon	equ	0xFF2
  7689                           postinc0	equ	0xFEE
  7690                           fsr0h	equ	0xFEA
  7691                           fsr0l	equ	0xFE9
  7692                           wreg	equ	0xFE8
  7693                           postdec1	equ	0xFE5
  7694                           fsr1h	equ	0xFE2
  7695                           fsr1l	equ	0xFE1
  7696                           indf2	equ	0xFDF
  7697                           postinc2	equ	0xFDE
  7698                           postdec2	equ	0xFDD
  7699                           fsr2h	equ	0xFDA
  7700                           fsr2l	equ	0xFD9
  7701                           status	equ	0xFD8
  7702                           
  7703 ;; *************** function i2_do_I2C_RESET *****************
  7704 ;; Defined at:
  7705 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;		None
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;		None
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  1    wreg      enum E11956
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, cstack
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;Total ram usage:        0 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; Hardware stack levels required when called:    1
  7726 ;; This function calls:
  7727 ;;		i2_i2c1_driver_resetBus
  7728 ;; This function is called by:
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           	psect	text78
  7733  000D06                     __ptext78:
  7734                           	opt stack 0
  7735  000D06                     i2_do_I2C_RESET:
  7736                           	opt stack 18
  7737                           
  7738                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  7739                           
  7740                           ;incstack = 0
  7741  000D06  EC0B  F007         	call	i2_i2c1_driver_resetBus	;wreg free
  7742                           
  7743                           ;i2c_master.c: 242: i2c_status.busy = 0;
  7744  000D0A  9001               	bcf	_i2c_status,0,c
  7745                           
  7746                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  7747  000D0C  0E00               	movlw	0
  7748  000D0E  6E0C               	movwf	_i2c_status+11,c
  7749                           
  7750                           ;i2c_master.c: 244: return I2C_RESET;
  7751  000D10  0E0E               	movlw	14
  7752  000D12  0012               	return	
  7753  000D14                     __end_ofi2_do_I2C_RESET:
  7754                           	opt stack 0
  7755                           tosu	equ	0xFFF
  7756                           tosh	equ	0xFFE
  7757                           tosl	equ	0xFFD
  7758                           pclatu	equ	0xFFB
  7759                           pclath	equ	0xFFA
  7760                           tblptru	equ	0xFF8
  7761                           tblptrh	equ	0xFF7
  7762                           tblptrl	equ	0xFF6
  7763                           tablat	equ	0xFF5
  7764                           prodh	equ	0xFF4
  7765                           prodl	equ	0xFF3
  7766                           intcon	equ	0xFF2
  7767                           postinc0	equ	0xFEE
  7768                           fsr0h	equ	0xFEA
  7769                           fsr0l	equ	0xFE9
  7770                           wreg	equ	0xFE8
  7771                           postdec1	equ	0xFE5
  7772                           fsr1h	equ	0xFE2
  7773                           fsr1l	equ	0xFE1
  7774                           indf2	equ	0xFDF
  7775                           postinc2	equ	0xFDE
  7776                           postdec2	equ	0xFDD
  7777                           fsr2h	equ	0xFDA
  7778                           fsr2l	equ	0xFD9
  7779                           status	equ	0xFD8
  7780                           
  7781 ;; *************** function i2_do_I2C_TX_EMPTY *****************
  7782 ;; Defined at:
  7783 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;		None
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1    wreg      enum E11956
  7790 ;; Registers used:
  7791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7801 ;;Total ram usage:        0 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    3
  7804 ;; This function calls:
  7805 ;;		Absolute function
  7806 ;;		i2_do_I2C_SEND_RESTART
  7807 ;;		i2_do_I2C_SEND_STOP
  7808 ;;		i2_i2c_restartWrite
  7809 ;;		i2_mssp1_setIRQ
  7810 ;;		i2_rd1RegCompleteHandler
  7811 ;;		i2_rd2RegCompleteHandler
  7812 ;;		i2_rdBlkRegCompleteHandler
  7813 ;;		i2_returnReset
  7814 ;;		i2_returnStop
  7815 ;;		i2_wr1RegCompleteHandler
  7816 ;;		i2_wr2RegCompleteHandler
  7817 ;; This function is called by:
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text79
  7822  0005E6                     __ptext79:
  7823                           	opt stack 0
  7824  0005E6                     i2_do_I2C_TX_EMPTY:
  7825                           	opt stack 16
  7826                           
  7827                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  7828                           
  7829                           ;incstack = 0
  7830  0005E6  8401               	bsf	_i2c_status,2,c
  7831                           
  7832                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  7833  0005E8  D00A               	goto	i2l457
  7834  0005EA                     
  7835                           ;i2c_master.c: 388: case i2c_restart_write:
  7836                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  7837  0005EA  ECBF  F006         	call	i2_do_I2C_SEND_RESTART	;wreg free
  7838  0005EE  0012               	return	
  7839  0005F0                     
  7840                           ;i2c_master.c: 391: mssp1_setIRQ();
  7841  0005F0  ECE1  F006         	call	i2_mssp1_setIRQ	;wreg free
  7842                           
  7843                           ;i2c_master.c: 392: return I2C_TX;
  7844  0005F4  0E03               	movlw	3
  7845  0005F6  0012               	return	
  7846  0005F8                     
  7847                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  7848                           
  7849                           ;i2c_master.c: 394: case i2c_stop:
  7850  0005F8  ECBB  F006         	call	i2_do_I2C_SEND_STOP	;wreg free
  7851                           
  7852                           ;i2c_master.c: 396: }
  7853  0005FC  0012               	return	
  7854  0005FE                     i2l457:
  7855  0005FE  C01F  F03C         	movff	_i2c_status+30,i2returnStop@p
  7856  000602  C020  F03D         	movff	_i2c_status+31,i2returnStop@p+1
  7857  000606  EE20  F00D         	lfsr	2,_i2c_status+12
  7858  00060A  D801               	call	i2u146_48
  7859  00060C  D00A               	goto	i2u146_49
  7860  00060E                     i2u146_48:
  7861  00060E  0005               	push	
  7862  000610  6EFA               	movwf	pclath,c
  7863  000612  50DE               	movf	postinc2,w,c
  7864  000614  6EFD               	movwf	tosl,c
  7865  000616  50DE               	movf	postinc2,w,c
  7866  000618  6EFE               	movwf	tosh,c
  7867  00061A  50DE               	movf	postinc2,w,c
  7868  00061C  6EFF               	movwf	tosu,c
  7869  00061E  50FA               	movf	pclath,w,c
  7870  000620  0012               	return		;indir
  7871  000622                     i2u146_49:
  7872                           
  7873                           ; Switch size 1, requested type "space"
  7874                           ; Number of cases is 4, Range of values is 1 to 4
  7875                           ; switch strategies available:
  7876                           ; Name         Instructions Cycles
  7877                           ; simple_byte           13     7 (average)
  7878                           ;	Chosen strategy is simple_byte
  7879  000622  0A01               	xorlw	1	; case 1
  7880  000624  B4D8               	btfsc	status,2,c
  7881  000626  D7E8               	goto	i2l462
  7882  000628  0A03               	xorlw	3	; case 2
  7883  00062A  B4D8               	btfsc	status,2,c
  7884  00062C  D7DE               	goto	i2l458
  7885  00062E  0A01               	xorlw	1	; case 3
  7886  000630  B4D8               	btfsc	status,2,c
  7887  000632  D7DB               	goto	i2l458
  7888  000634  0A07               	xorlw	7	; case 4
  7889  000636  B4D8               	btfsc	status,2,c
  7890  000638  D7DB               	goto	i2l461
  7891  00063A  D7DE               	goto	i2l462
  7892  00063C                     __end_ofi2_do_I2C_TX_EMPTY:
  7893                           	opt stack 0
  7894                           tosu	equ	0xFFF
  7895                           tosh	equ	0xFFE
  7896                           tosl	equ	0xFFD
  7897                           pclatu	equ	0xFFB
  7898                           pclath	equ	0xFFA
  7899                           tblptru	equ	0xFF8
  7900                           tblptrh	equ	0xFF7
  7901                           tblptrl	equ	0xFF6
  7902                           tablat	equ	0xFF5
  7903                           prodh	equ	0xFF4
  7904                           prodl	equ	0xFF3
  7905                           intcon	equ	0xFF2
  7906                           postinc0	equ	0xFEE
  7907                           fsr0h	equ	0xFEA
  7908                           fsr0l	equ	0xFE9
  7909                           wreg	equ	0xFE8
  7910                           postdec1	equ	0xFE5
  7911                           fsr1h	equ	0xFE2
  7912                           fsr1l	equ	0xFE1
  7913                           indf2	equ	0xFDF
  7914                           postinc2	equ	0xFDE
  7915                           postdec2	equ	0xFDD
  7916                           fsr2h	equ	0xFDA
  7917                           fsr2l	equ	0xFD9
  7918                           status	equ	0xFD8
  7919                           
  7920 ;; *************** function i2_mssp1_setIRQ *****************
  7921 ;; Defined at:
  7922 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;		None
  7925 ;; Auto vars:     Size  Location     Type
  7926 ;;		None
  7927 ;; Return value:  Size  Location     Type
  7928 ;;                  1    wreg      void 
  7929 ;; Registers used:
  7930 ;;		None
  7931 ;; Tracked objects:
  7932 ;;		On entry : 0/0
  7933 ;;		On exit  : 0/0
  7934 ;;		Unchanged: 0/0
  7935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7940 ;;Total ram usage:        0 bytes
  7941 ;; Hardware stack levels used:    1
  7942 ;; This function calls:
  7943 ;;		Nothing
  7944 ;; This function is called by:
  7945 ;;		i2_do_I2C_TX_EMPTY
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text80
  7950  000DC2                     __ptext80:
  7951                           	opt stack 0
  7952  000DC2                     i2_mssp1_setIRQ:
  7953                           	opt stack 18
  7954                           
  7955                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  7956                           
  7957                           ;incstack = 0
  7958  000DC2  010E               	movlb	14	; () banked
  7959  000DC4  81CD               	bsf	205,0,b	;volatile
  7960                           
  7961                           ; BSR set to: 14
  7962  000DC6  0012               	return		;funcret
  7963  000DC8                     __end_ofi2_mssp1_setIRQ:
  7964                           	opt stack 0
  7965                           tosu	equ	0xFFF
  7966                           tosh	equ	0xFFE
  7967                           tosl	equ	0xFFD
  7968                           pclatu	equ	0xFFB
  7969                           pclath	equ	0xFFA
  7970                           tblptru	equ	0xFF8
  7971                           tblptrh	equ	0xFF7
  7972                           tblptrl	equ	0xFF6
  7973                           tablat	equ	0xFF5
  7974                           prodh	equ	0xFF4
  7975                           prodl	equ	0xFF3
  7976                           intcon	equ	0xFF2
  7977                           postinc0	equ	0xFEE
  7978                           fsr0h	equ	0xFEA
  7979                           fsr0l	equ	0xFE9
  7980                           wreg	equ	0xFE8
  7981                           postdec1	equ	0xFE5
  7982                           fsr1h	equ	0xFE2
  7983                           fsr1l	equ	0xFE1
  7984                           indf2	equ	0xFDF
  7985                           postinc2	equ	0xFDE
  7986                           postdec2	equ	0xFDD
  7987                           fsr2h	equ	0xFDA
  7988                           fsr2l	equ	0xFD9
  7989                           status	equ	0xFD8
  7990                           
  7991 ;; *************** function i2_i2c1_driver_isNACK *****************
  7992 ;; Defined at:
  7993 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;		None
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;		None               void
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8011 ;;Total ram usage:        1 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; This function calls:
  8014 ;;		Nothing
  8015 ;; This function is called by:
  8016 ;;		i2_do_I2C_TX
  8017 ;;		i2_i2c_ISR
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           	psect	text81
  8022  000BD6                     __ptext81:
  8023                           	opt stack 0
  8024  000BD6                     i2_i2c1_driver_isNACK:
  8025                           	opt stack 19
  8026                           
  8027                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  8028                           
  8029                           ; BSR set to: 14
  8030                           ;incstack = 0
  8031  000BD6  5097               	movf	3991,w,c	;volatile
  8032  000BD8  0BBF               	andlw	-65
  8033  000BDA  0940               	iorlw	64
  8034  000BDC  6E97               	movwf	3991,c	;volatile
  8035  000BDE  3897               	swapf	3991,w,c	;volatile
  8036  000BE0  32E8               	rrcf	wreg,f,c
  8037  000BE2  32E8               	rrcf	wreg,f,c
  8038  000BE4  0B01               	andlw	1
  8039  000BE6  6E31               	movwf	??i2_i2c1_driver_isNACK& (0+255),c
  8040  000BE8  3031               	rrcf	??i2_i2c1_driver_isNACK,w,c
  8041  000BEA  0012               	return	
  8042  000BEC                     __end_ofi2_i2c1_driver_isNACK:
  8043                           	opt stack 0
  8044                           tosu	equ	0xFFF
  8045                           tosh	equ	0xFFE
  8046                           tosl	equ	0xFFD
  8047                           pclatu	equ	0xFFB
  8048                           pclath	equ	0xFFA
  8049                           tblptru	equ	0xFF8
  8050                           tblptrh	equ	0xFF7
  8051                           tblptrl	equ	0xFF6
  8052                           tablat	equ	0xFF5
  8053                           prodh	equ	0xFF4
  8054                           prodl	equ	0xFF3
  8055                           intcon	equ	0xFF2
  8056                           postinc0	equ	0xFEE
  8057                           fsr0h	equ	0xFEA
  8058                           fsr0l	equ	0xFE9
  8059                           wreg	equ	0xFE8
  8060                           postdec1	equ	0xFE5
  8061                           fsr1h	equ	0xFE2
  8062                           fsr1l	equ	0xFE1
  8063                           indf2	equ	0xFDF
  8064                           postinc2	equ	0xFDE
  8065                           postdec2	equ	0xFDD
  8066                           fsr2h	equ	0xFDA
  8067                           fsr2l	equ	0xFD9
  8068                           status	equ	0xFD8
  8069                           
  8070 ;; *************** function i2_i2c1_driver_TXData *****************
  8071 ;; Defined at:
  8072 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;  d               1    wreg     unsigned char 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  d               1    0[COMRAM] unsigned char 
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  1    wreg      void 
  8079 ;; Registers used:
  8080 ;;		wreg
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8090 ;;Total ram usage:        1 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		i2_do_I2C_SEND_ADR_READ
  8096 ;;		i2_do_I2C_SEND_ADR_WRITE
  8097 ;;		i2_do_I2C_TX
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text82
  8102  000D96                     __ptext82:
  8103                           	opt stack 0
  8104  000D96                     i2_i2c1_driver_TXData:
  8105                           	opt stack 18
  8106                           
  8107                           ;incstack = 0
  8108                           ;i2i2c1_driver_TXData@d stored from wreg
  8109  000D96  6E31               	movwf	i2i2c1_driver_TXData@d,c
  8110                           
  8111                           ;i2c1_driver.c: 188: SSP1BUF = d;
  8112  000D98  C031  FF92         	movff	i2i2c1_driver_TXData@d,3986	;volatile
  8113  000D9C  0012               	return		;funcret
  8114  000D9E                     __end_ofi2_i2c1_driver_TXData:
  8115                           	opt stack 0
  8116                           tosu	equ	0xFFF
  8117                           tosh	equ	0xFFE
  8118                           tosl	equ	0xFFD
  8119                           pclatu	equ	0xFFB
  8120                           pclath	equ	0xFFA
  8121                           tblptru	equ	0xFF8
  8122                           tblptrh	equ	0xFF7
  8123                           tblptrl	equ	0xFF6
  8124                           tablat	equ	0xFF5
  8125                           prodh	equ	0xFF4
  8126                           prodl	equ	0xFF3
  8127                           intcon	equ	0xFF2
  8128                           postinc0	equ	0xFEE
  8129                           fsr0h	equ	0xFEA
  8130                           fsr0l	equ	0xFE9
  8131                           wreg	equ	0xFE8
  8132                           postdec1	equ	0xFE5
  8133                           fsr1h	equ	0xFE2
  8134                           fsr1l	equ	0xFE1
  8135                           indf2	equ	0xFDF
  8136                           postinc2	equ	0xFDE
  8137                           postdec2	equ	0xFDD
  8138                           fsr2h	equ	0xFDA
  8139                           fsr2l	equ	0xFD9
  8140                           status	equ	0xFD8
  8141                           
  8142 ;; *************** function i2_i2c1_driver_getRXData *****************
  8143 ;; Defined at:
  8144 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      unsigned char 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8162 ;;Total ram usage:        0 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; This function calls:
  8165 ;;		Nothing
  8166 ;; This function is called by:
  8167 ;;		i2_do_I2C_RX
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text83
  8172  000DF8                     __ptext83:
  8173                           	opt stack 0
  8174  000DF8                     i2_i2c1_driver_getRXData:
  8175                           	opt stack 18
  8176                           
  8177                           ;i2c1_driver.c: 173: return SSP1BUF;
  8178                           
  8179                           ;incstack = 0
  8180  000DF8  5092               	movf	3986,w,c	;volatile
  8181  000DFA  0012               	return	
  8182  000DFC                     __end_ofi2_i2c1_driver_getRXData:
  8183                           	opt stack 0
  8184                           tosu	equ	0xFFF
  8185                           tosh	equ	0xFFE
  8186                           tosl	equ	0xFFD
  8187                           pclatu	equ	0xFFB
  8188                           pclath	equ	0xFFA
  8189                           tblptru	equ	0xFF8
  8190                           tblptrh	equ	0xFF7
  8191                           tblptrl	equ	0xFF6
  8192                           tablat	equ	0xFF5
  8193                           prodh	equ	0xFF4
  8194                           prodl	equ	0xFF3
  8195                           intcon	equ	0xFF2
  8196                           postinc0	equ	0xFEE
  8197                           fsr0h	equ	0xFEA
  8198                           fsr0l	equ	0xFE9
  8199                           wreg	equ	0xFE8
  8200                           postdec1	equ	0xFE5
  8201                           fsr1h	equ	0xFE2
  8202                           fsr1l	equ	0xFE1
  8203                           indf2	equ	0xFDF
  8204                           postinc2	equ	0xFDE
  8205                           postdec2	equ	0xFDD
  8206                           fsr2h	equ	0xFDA
  8207                           fsr2l	equ	0xFD9
  8208                           status	equ	0xFD8
  8209                           
  8210 ;; *************** function i2_i2c1_driver_sendNACK *****************
  8211 ;; Defined at:
  8212 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;		None
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  1    wreg      void 
  8219 ;; Registers used:
  8220 ;;		None
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8230 ;;Total ram usage:        0 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; This function calls:
  8233 ;;		Nothing
  8234 ;; This function is called by:
  8235 ;;		i2_do_I2C_DO_NACK_STOP
  8236 ;;		i2_do_I2C_DO_NACK_RESTART
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           	psect	text84
  8241  000DC8                     __ptext84:
  8242                           	opt stack 0
  8243  000DC8                     i2_i2c1_driver_sendNACK:
  8244                           	opt stack 17
  8245                           
  8246                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  8247                           
  8248                           ;incstack = 0
  8249  000DC8  8A97               	bsf	3991,5,c	;volatile
  8250                           
  8251                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  8252  000DCA  8897               	bsf	3991,4,c	;volatile
  8253  000DCC  0012               	return		;funcret
  8254  000DCE                     __end_ofi2_i2c1_driver_sendNACK:
  8255                           	opt stack 0
  8256                           tosu	equ	0xFFF
  8257                           tosh	equ	0xFFE
  8258                           tosl	equ	0xFFD
  8259                           pclatu	equ	0xFFB
  8260                           pclath	equ	0xFFA
  8261                           tblptru	equ	0xFF8
  8262                           tblptrh	equ	0xFF7
  8263                           tblptrl	equ	0xFF6
  8264                           tablat	equ	0xFF5
  8265                           prodh	equ	0xFF4
  8266                           prodl	equ	0xFF3
  8267                           intcon	equ	0xFF2
  8268                           postinc0	equ	0xFEE
  8269                           fsr0h	equ	0xFEA
  8270                           fsr0l	equ	0xFE9
  8271                           wreg	equ	0xFE8
  8272                           postdec1	equ	0xFE5
  8273                           fsr1h	equ	0xFE2
  8274                           fsr1l	equ	0xFE1
  8275                           indf2	equ	0xFDF
  8276                           postinc2	equ	0xFDE
  8277                           postdec2	equ	0xFDD
  8278                           fsr2h	equ	0xFDA
  8279                           fsr2l	equ	0xFD9
  8280                           status	equ	0xFD8
  8281                           
  8282 ;; *************** function i2_i2c1_driver_resetBus *****************
  8283 ;; Defined at:
  8284 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      void 
  8291 ;; Registers used:
  8292 ;;		None
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		i2_do_I2C_RESET
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           	psect	text85
  8312  000E16                     __ptext85:
  8313                           	opt stack 0
  8314  000E16                     i2_i2c1_driver_resetBus:
  8315                           	opt stack 18
  8316                           
  8317                           ;incstack = 0
  8318  000E16  0012               	return		;funcret
  8319  000E18                     __end_ofi2_i2c1_driver_resetBus:
  8320                           	opt stack 0
  8321                           tosu	equ	0xFFF
  8322                           tosh	equ	0xFFE
  8323                           tosl	equ	0xFFD
  8324                           pclatu	equ	0xFFB
  8325                           pclath	equ	0xFFA
  8326                           tblptru	equ	0xFF8
  8327                           tblptrh	equ	0xFF7
  8328                           tblptrl	equ	0xFF6
  8329                           tablat	equ	0xFF5
  8330                           prodh	equ	0xFF4
  8331                           prodl	equ	0xFF3
  8332                           intcon	equ	0xFF2
  8333                           postinc0	equ	0xFEE
  8334                           fsr0h	equ	0xFEA
  8335                           fsr0l	equ	0xFE9
  8336                           wreg	equ	0xFE8
  8337                           postdec1	equ	0xFE5
  8338                           fsr1h	equ	0xFE2
  8339                           fsr1l	equ	0xFE1
  8340                           indf2	equ	0xFDF
  8341                           postinc2	equ	0xFDE
  8342                           postdec2	equ	0xFDD
  8343                           fsr2h	equ	0xFDA
  8344                           fsr2l	equ	0xFD9
  8345                           status	equ	0xFD8
  8346                           
  8347 ;; *************** function i2_i2c1_driver_startRX *****************
  8348 ;; Defined at:
  8349 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;		None
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      void 
  8356 ;; Registers used:
  8357 ;;		None
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8367 ;;Total ram usage:        0 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		i2_do_I2C_RCEN
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text86
  8377  000DFC                     __ptext86:
  8378                           	opt stack 0
  8379  000DFC                     i2_i2c1_driver_startRX:
  8380                           	opt stack 18
  8381                           
  8382                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  8383                           
  8384                           ;incstack = 0
  8385  000DFC  8697               	bsf	3991,3,c	;volatile
  8386  000DFE  0012               	return		;funcret
  8387  000E00                     __end_ofi2_i2c1_driver_startRX:
  8388                           	opt stack 0
  8389                           tosu	equ	0xFFF
  8390                           tosh	equ	0xFFE
  8391                           tosl	equ	0xFFD
  8392                           pclatu	equ	0xFFB
  8393                           pclath	equ	0xFFA
  8394                           tblptru	equ	0xFF8
  8395                           tblptrh	equ	0xFF7
  8396                           tblptrl	equ	0xFF6
  8397                           tablat	equ	0xFF5
  8398                           prodh	equ	0xFF4
  8399                           prodl	equ	0xFF3
  8400                           intcon	equ	0xFF2
  8401                           postinc0	equ	0xFEE
  8402                           fsr0h	equ	0xFEA
  8403                           fsr0l	equ	0xFE9
  8404                           wreg	equ	0xFE8
  8405                           postdec1	equ	0xFE5
  8406                           fsr1h	equ	0xFE2
  8407                           fsr1l	equ	0xFE1
  8408                           indf2	equ	0xFDF
  8409                           postinc2	equ	0xFDE
  8410                           postdec2	equ	0xFDD
  8411                           fsr2h	equ	0xFDA
  8412                           fsr2l	equ	0xFD9
  8413                           status	equ	0xFD8
  8414                           
  8415 ;; *************** function i2_rdBlkRegCompleteHandler *****************
  8416 ;; Defined at:
  8417 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  p               2   11[COMRAM] PTR void 
  8420 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8421 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      enum E97
  8426 ;; Registers used:
  8427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8437 ;;Total ram usage:        2 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    2
  8440 ;; This function calls:
  8441 ;;		i2_i2c_setBuffer
  8442 ;;		i2_i2c_setDataCompleteCallback
  8443 ;; This function is called by:
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text87
  8448  0007B2                     __ptext87:
  8449                           	opt stack 0
  8450  0007B2                     i2_rdBlkRegCompleteHandler:
  8451                           	opt stack 16
  8452                           
  8453                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  8454                           
  8455                           ;incstack = 0
  8456  0007B2  EE20 F002          	lfsr	2,2
  8457  0007B6  503C               	movf	i2rdBlkRegCompleteHandler@p,w,c
  8458  0007B8  26D9               	addwf	fsr2l,f,c
  8459  0007BA  503D               	movf	i2rdBlkRegCompleteHandler@p+1,w,c
  8460  0007BC  22DA               	addwfc	fsr2h,f,c
  8461  0007BE  CFDE F031          	movff	postinc2,i2i2c_setBuffer@buffer
  8462  0007C2  CFDD F032          	movff	postdec2,i2i2c_setBuffer@buffer+1
  8463  0007C6  C03C  FFD9         	movff	i2rdBlkRegCompleteHandler@p,fsr2l
  8464  0007CA  C03D  FFDA         	movff	i2rdBlkRegCompleteHandler@p+1,fsr2h
  8465  0007CE  CFDE F033          	movff	postinc2,i2i2c_setBuffer@bufferSize
  8466  0007D2  CFDD F034          	movff	postdec2,i2i2c_setBuffer@bufferSize+1
  8467  0007D6  ECBE  F005         	call	i2_i2c_setBuffer	;wreg free
  8468                           
  8469                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  8470  0007DA  0E00               	movlw	0
  8471  0007DC  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8472  0007DE  0E00               	movlw	0
  8473  0007E0  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8474  0007E2  0E00               	movlw	0
  8475  0007E4  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8476  0007E6  0E00               	movlw	0
  8477  0007E8  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8478  0007EA  0E00               	movlw	0
  8479  0007EC  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8480  0007EE  EC8C  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8481                           
  8482                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  8483  0007F2  0E02               	movlw	2
  8484  0007F4  0012               	return	
  8485  0007F6                     __end_ofi2_rdBlkRegCompleteHandler:
  8486                           	opt stack 0
  8487                           tosu	equ	0xFFF
  8488                           tosh	equ	0xFFE
  8489                           tosl	equ	0xFFD
  8490                           pclatu	equ	0xFFB
  8491                           pclath	equ	0xFFA
  8492                           tblptru	equ	0xFF8
  8493                           tblptrh	equ	0xFF7
  8494                           tblptrl	equ	0xFF6
  8495                           tablat	equ	0xFF5
  8496                           prodh	equ	0xFF4
  8497                           prodl	equ	0xFF3
  8498                           intcon	equ	0xFF2
  8499                           postinc0	equ	0xFEE
  8500                           fsr0h	equ	0xFEA
  8501                           fsr0l	equ	0xFE9
  8502                           wreg	equ	0xFE8
  8503                           postdec1	equ	0xFE5
  8504                           fsr1h	equ	0xFE2
  8505                           fsr1l	equ	0xFE1
  8506                           indf2	equ	0xFDF
  8507                           postinc2	equ	0xFDE
  8508                           postdec2	equ	0xFDD
  8509                           fsr2h	equ	0xFDA
  8510                           fsr2l	equ	0xFD9
  8511                           status	equ	0xFD8
  8512                           
  8513 ;; *************** function i2_rd2RegCompleteHandler *****************
  8514 ;; Defined at:
  8515 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  p               2   11[COMRAM] PTR void 
  8518 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8519 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;		None
  8522 ;; Return value:  Size  Location     Type
  8523 ;;                  1    wreg      enum E97
  8524 ;; Registers used:
  8525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/0
  8528 ;;		On exit  : 0/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8535 ;;Total ram usage:        2 bytes
  8536 ;; Hardware stack levels used:    1
  8537 ;; Hardware stack levels required when called:    2
  8538 ;; This function calls:
  8539 ;;		i2_i2c_setBuffer
  8540 ;;		i2_i2c_setDataCompleteCallback
  8541 ;; This function is called by:
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           	psect	text88
  8546  0009E8                     __ptext88:
  8547                           	opt stack 0
  8548  0009E8                     i2_rd2RegCompleteHandler:
  8549                           	opt stack 16
  8550                           
  8551                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  8552                           
  8553                           ;incstack = 0
  8554  0009E8  C03C  F031         	movff	i2rd2RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8555  0009EC  C03D  F032         	movff	i2rd2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8556  0009F0  0E00               	movlw	0
  8557  0009F2  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  8558  0009F4  0E02               	movlw	2
  8559  0009F6  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  8560  0009F8  ECBE  F005         	call	i2_i2c_setBuffer	;wreg free
  8561                           
  8562                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  8563  0009FC  0E00               	movlw	0
  8564  0009FE  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8565  000A00  0E00               	movlw	0
  8566  000A02  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8567  000A04  0E00               	movlw	0
  8568  000A06  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8569  000A08  0E00               	movlw	0
  8570  000A0A  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8571  000A0C  0E00               	movlw	0
  8572  000A0E  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8573  000A10  EC8C  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8574                           
  8575                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  8576  000A14  0E02               	movlw	2
  8577  000A16  0012               	return	
  8578  000A18                     __end_ofi2_rd2RegCompleteHandler:
  8579                           	opt stack 0
  8580                           tosu	equ	0xFFF
  8581                           tosh	equ	0xFFE
  8582                           tosl	equ	0xFFD
  8583                           pclatu	equ	0xFFB
  8584                           pclath	equ	0xFFA
  8585                           tblptru	equ	0xFF8
  8586                           tblptrh	equ	0xFF7
  8587                           tblptrl	equ	0xFF6
  8588                           tablat	equ	0xFF5
  8589                           prodh	equ	0xFF4
  8590                           prodl	equ	0xFF3
  8591                           intcon	equ	0xFF2
  8592                           postinc0	equ	0xFEE
  8593                           fsr0h	equ	0xFEA
  8594                           fsr0l	equ	0xFE9
  8595                           wreg	equ	0xFE8
  8596                           postdec1	equ	0xFE5
  8597                           fsr1h	equ	0xFE2
  8598                           fsr1l	equ	0xFE1
  8599                           indf2	equ	0xFDF
  8600                           postinc2	equ	0xFDE
  8601                           postdec2	equ	0xFDD
  8602                           fsr2h	equ	0xFDA
  8603                           fsr2l	equ	0xFD9
  8604                           status	equ	0xFD8
  8605                           
  8606 ;; *************** function i2_rd1RegCompleteHandler *****************
  8607 ;; Defined at:
  8608 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  p               2   11[COMRAM] PTR void 
  8611 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8612 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;		None
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      enum E97
  8617 ;; Registers used:
  8618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8628 ;;Total ram usage:        2 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:    2
  8631 ;; This function calls:
  8632 ;;		i2_i2c_setBuffer
  8633 ;;		i2_i2c_setDataCompleteCallback
  8634 ;; This function is called by:
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text89
  8639  000A18                     __ptext89:
  8640                           	opt stack 0
  8641  000A18                     i2_rd1RegCompleteHandler:
  8642                           	opt stack 16
  8643                           
  8644                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  8645                           
  8646                           ;incstack = 0
  8647  000A18  C03C  F031         	movff	i2rd1RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8648  000A1C  C03D  F032         	movff	i2rd1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8649  000A20  0E00               	movlw	0
  8650  000A22  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  8651  000A24  0E01               	movlw	1
  8652  000A26  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  8653  000A28  ECBE  F005         	call	i2_i2c_setBuffer	;wreg free
  8654                           
  8655                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  8656  000A2C  0E00               	movlw	0
  8657  000A2E  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8658  000A30  0E00               	movlw	0
  8659  000A32  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8660  000A34  0E00               	movlw	0
  8661  000A36  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8662  000A38  0E00               	movlw	0
  8663  000A3A  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8664  000A3C  0E00               	movlw	0
  8665  000A3E  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8666  000A40  EC8C  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8667                           
  8668                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  8669  000A44  0E02               	movlw	2
  8670  000A46  0012               	return	
  8671  000A48                     __end_ofi2_rd1RegCompleteHandler:
  8672                           	opt stack 0
  8673                           tosu	equ	0xFFF
  8674                           tosh	equ	0xFFE
  8675                           tosl	equ	0xFFD
  8676                           pclatu	equ	0xFFB
  8677                           pclath	equ	0xFFA
  8678                           tblptru	equ	0xFF8
  8679                           tblptrh	equ	0xFF7
  8680                           tblptrl	equ	0xFF6
  8681                           tablat	equ	0xFF5
  8682                           prodh	equ	0xFF4
  8683                           prodl	equ	0xFF3
  8684                           intcon	equ	0xFF2
  8685                           postinc0	equ	0xFEE
  8686                           fsr0h	equ	0xFEA
  8687                           fsr0l	equ	0xFE9
  8688                           wreg	equ	0xFE8
  8689                           postdec1	equ	0xFE5
  8690                           fsr1h	equ	0xFE2
  8691                           fsr1l	equ	0xFE1
  8692                           indf2	equ	0xFDF
  8693                           postinc2	equ	0xFDE
  8694                           postdec2	equ	0xFDD
  8695                           fsr2h	equ	0xFDA
  8696                           fsr2l	equ	0xFD9
  8697                           status	equ	0xFD8
  8698                           
  8699 ;; *************** function i2_wr1RegCompleteHandler *****************
  8700 ;; Defined at:
  8701 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;  p               2   11[COMRAM] PTR void 
  8704 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8705 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8706 ;; Auto vars:     Size  Location     Type
  8707 ;;		None
  8708 ;; Return value:  Size  Location     Type
  8709 ;;                  1    wreg      enum E97
  8710 ;; Registers used:
  8711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8712 ;; Tracked objects:
  8713 ;;		On entry : 0/0
  8714 ;;		On exit  : 0/0
  8715 ;;		Unchanged: 0/0
  8716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8721 ;;Total ram usage:        2 bytes
  8722 ;; Hardware stack levels used:    1
  8723 ;; Hardware stack levels required when called:    2
  8724 ;; This function calls:
  8725 ;;		i2_i2c_setBuffer
  8726 ;;		i2_i2c_setDataCompleteCallback
  8727 ;; This function is called by:
  8728 ;; This function uses a non-reentrant model
  8729 ;;
  8730                           
  8731                           	psect	text90
  8732  000A48                     __ptext90:
  8733                           	opt stack 0
  8734  000A48                     i2_wr1RegCompleteHandler:
  8735                           	opt stack 16
  8736                           
  8737                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  8738                           
  8739                           ;incstack = 0
  8740  000A48  C03C  F031         	movff	i2wr1RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8741  000A4C  C03D  F032         	movff	i2wr1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8742  000A50  0E00               	movlw	0
  8743  000A52  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  8744  000A54  0E01               	movlw	1
  8745  000A56  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  8746  000A58  ECBE  F005         	call	i2_i2c_setBuffer	;wreg free
  8747                           
  8748                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  8749  000A5C  0E00               	movlw	0
  8750  000A5E  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8751  000A60  0E00               	movlw	0
  8752  000A62  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8753  000A64  0E00               	movlw	0
  8754  000A66  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8755  000A68  0E00               	movlw	0
  8756  000A6A  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8757  000A6C  0E00               	movlw	0
  8758  000A6E  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8759  000A70  EC8C  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8760                           
  8761                           ;i2c_simple_master.c: 35: return i2c_continue;
  8762  000A74  0E04               	movlw	4
  8763  000A76  0012               	return	
  8764  000A78                     __end_ofi2_wr1RegCompleteHandler:
  8765                           	opt stack 0
  8766                           tosu	equ	0xFFF
  8767                           tosh	equ	0xFFE
  8768                           tosl	equ	0xFFD
  8769                           pclatu	equ	0xFFB
  8770                           pclath	equ	0xFFA
  8771                           tblptru	equ	0xFF8
  8772                           tblptrh	equ	0xFF7
  8773                           tblptrl	equ	0xFF6
  8774                           tablat	equ	0xFF5
  8775                           prodh	equ	0xFF4
  8776                           prodl	equ	0xFF3
  8777                           intcon	equ	0xFF2
  8778                           postinc0	equ	0xFEE
  8779                           fsr0h	equ	0xFEA
  8780                           fsr0l	equ	0xFE9
  8781                           wreg	equ	0xFE8
  8782                           postdec1	equ	0xFE5
  8783                           fsr1h	equ	0xFE2
  8784                           fsr1l	equ	0xFE1
  8785                           indf2	equ	0xFDF
  8786                           postinc2	equ	0xFDE
  8787                           postdec2	equ	0xFDD
  8788                           fsr2h	equ	0xFDA
  8789                           fsr2l	equ	0xFD9
  8790                           status	equ	0xFD8
  8791                           
  8792 ;; *************** function i2_i2c_restartWrite *****************
  8793 ;; Defined at:
  8794 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  p               2   11[COMRAM] PTR void 
  8797 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8798 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      enum E96
  8803 ;; Registers used:
  8804 ;;		wreg
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8814 ;;Total ram usage:        2 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; This function calls:
  8817 ;;		Nothing
  8818 ;; This function is called by:
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text91
  8823  000E00                     __ptext91:
  8824                           	opt stack 0
  8825  000E00                     i2_i2c_restartWrite:
  8826                           	opt stack 18
  8827                           
  8828                           ;i2c_types.c: 37: return i2c_restart_write;
  8829                           
  8830                           ;incstack = 0
  8831  000E00  0E03               	movlw	3
  8832  000E02  0012               	return	
  8833  000E04                     __end_ofi2_i2c_restartWrite:
  8834                           	opt stack 0
  8835                           tosu	equ	0xFFF
  8836                           tosh	equ	0xFFE
  8837                           tosl	equ	0xFFD
  8838                           pclatu	equ	0xFFB
  8839                           pclath	equ	0xFFA
  8840                           tblptru	equ	0xFF8
  8841                           tblptrh	equ	0xFF7
  8842                           tblptrl	equ	0xFF6
  8843                           tablat	equ	0xFF5
  8844                           prodh	equ	0xFF4
  8845                           prodl	equ	0xFF3
  8846                           intcon	equ	0xFF2
  8847                           postinc0	equ	0xFEE
  8848                           fsr0h	equ	0xFEA
  8849                           fsr0l	equ	0xFE9
  8850                           wreg	equ	0xFE8
  8851                           postdec1	equ	0xFE5
  8852                           fsr1h	equ	0xFE2
  8853                           fsr1l	equ	0xFE1
  8854                           indf2	equ	0xFDF
  8855                           postinc2	equ	0xFDE
  8856                           postdec2	equ	0xFDD
  8857                           fsr2h	equ	0xFDA
  8858                           fsr2l	equ	0xFD9
  8859                           status	equ	0xFD8
  8860                           
  8861 ;; *************** function i2_returnReset *****************
  8862 ;; Defined at:
  8863 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  p               2   11[COMRAM] PTR void 
  8866 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8867 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;		None
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      enum E11790
  8872 ;; Registers used:
  8873 ;;		wreg
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8883 ;;Total ram usage:        2 bytes
  8884 ;; Hardware stack levels used:    1
  8885 ;; This function calls:
  8886 ;;		Nothing
  8887 ;; This function is called by:
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text92
  8892  000E04                     __ptext92:
  8893                           	opt stack 0
  8894  000E04                     i2_returnReset:
  8895                           	opt stack 18
  8896                           
  8897                           ;i2c_master.c: 450: return i2c_reset_link;
  8898                           
  8899                           ;incstack = 0
  8900  000E04  0E05               	movlw	5
  8901  000E06  0012               	return	
  8902  000E08                     __end_ofi2_returnReset:
  8903                           	opt stack 0
  8904                           tosu	equ	0xFFF
  8905                           tosh	equ	0xFFE
  8906                           tosl	equ	0xFFD
  8907                           pclatu	equ	0xFFB
  8908                           pclath	equ	0xFFA
  8909                           tblptru	equ	0xFF8
  8910                           tblptrh	equ	0xFF7
  8911                           tblptrl	equ	0xFF6
  8912                           tablat	equ	0xFF5
  8913                           prodh	equ	0xFF4
  8914                           prodl	equ	0xFF3
  8915                           intcon	equ	0xFF2
  8916                           postinc0	equ	0xFEE
  8917                           fsr0h	equ	0xFEA
  8918                           fsr0l	equ	0xFE9
  8919                           wreg	equ	0xFE8
  8920                           postdec1	equ	0xFE5
  8921                           fsr1h	equ	0xFE2
  8922                           fsr1l	equ	0xFE1
  8923                           indf2	equ	0xFDF
  8924                           postinc2	equ	0xFDE
  8925                           postdec2	equ	0xFDD
  8926                           fsr2h	equ	0xFDA
  8927                           fsr2l	equ	0xFD9
  8928                           status	equ	0xFD8
  8929                           
  8930 ;; *************** function i2_returnStop *****************
  8931 ;; Defined at:
  8932 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  p               2   11[COMRAM] PTR void 
  8935 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8936 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      enum E11790
  8941 ;; Registers used:
  8942 ;;		wreg
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8951 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8952 ;;Total ram usage:        2 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		i2_setCallBack
  8958 ;;		_do_I2C_DO_ADDRESS_NACK
  8959 ;;		_do_I2C_TX
  8960 ;;		_do_I2C_RX
  8961 ;;		_do_I2C_TX_EMPTY
  8962 ;;		i2_do_I2C_DO_ADDRESS_NACK
  8963 ;;		i2_do_I2C_TX
  8964 ;;		i2_do_I2C_RX
  8965 ;;		i2_do_I2C_TX_EMPTY
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text93
  8970  000E08                     __ptext93:
  8971                           	opt stack 0
  8972  000E08                     i2_returnStop:
  8973                           	opt stack 18
  8974                           
  8975                           ;i2c_master.c: 445: return i2c_stop;
  8976                           
  8977                           ;incstack = 0
  8978  000E08  0E01               	movlw	1
  8979  000E0A  0012               	return	
  8980  000E0C                     __end_ofi2_returnStop:
  8981                           	opt stack 0
  8982                           tosu	equ	0xFFF
  8983                           tosh	equ	0xFFE
  8984                           tosl	equ	0xFFD
  8985                           pclatu	equ	0xFFB
  8986                           pclath	equ	0xFFA
  8987                           tblptru	equ	0xFF8
  8988                           tblptrh	equ	0xFF7
  8989                           tblptrl	equ	0xFF6
  8990                           tablat	equ	0xFF5
  8991                           prodh	equ	0xFF4
  8992                           prodl	equ	0xFF3
  8993                           intcon	equ	0xFF2
  8994                           postinc0	equ	0xFEE
  8995                           fsr0h	equ	0xFEA
  8996                           fsr0l	equ	0xFE9
  8997                           wreg	equ	0xFE8
  8998                           postdec1	equ	0xFE5
  8999                           fsr1h	equ	0xFE2
  9000                           fsr1l	equ	0xFE1
  9001                           indf2	equ	0xFDF
  9002                           postinc2	equ	0xFDE
  9003                           postdec2	equ	0xFDD
  9004                           fsr2h	equ	0xFDA
  9005                           fsr2l	equ	0xFD9
  9006                           status	equ	0xFD8
  9007                           
  9008 ;; *************** function i2_wr2RegCompleteHandler *****************
  9009 ;; Defined at:
  9010 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  9011 ;; Parameters:    Size  Location     Type
  9012 ;;  p               2   11[COMRAM] PTR void 
  9013 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9014 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;		None
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      enum E97
  9019 ;; Registers used:
  9020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9030 ;;Total ram usage:        2 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    2
  9033 ;; This function calls:
  9034 ;;		i2_i2c_setBuffer
  9035 ;;		i2_i2c_setDataCompleteCallback
  9036 ;; This function is called by:
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           	psect	text94
  9041  000A78                     __ptext94:
  9042                           	opt stack 0
  9043  000A78                     i2_wr2RegCompleteHandler:
  9044                           	opt stack 16
  9045                           
  9046                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  9047                           
  9048                           ;incstack = 0
  9049  000A78  C03C  F031         	movff	i2wr2RegCompleteHandler@p,i2i2c_setBuffer@buffer
  9050  000A7C  C03D  F032         	movff	i2wr2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  9051  000A80  0E00               	movlw	0
  9052  000A82  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  9053  000A84  0E02               	movlw	2
  9054  000A86  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  9055  000A88  ECBE  F005         	call	i2_i2c_setBuffer	;wreg free
  9056                           
  9057                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  9058  000A8C  0E00               	movlw	0
  9059  000A8E  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  9060  000A90  0E00               	movlw	0
  9061  000A92  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  9062  000A94  0E00               	movlw	0
  9063  000A96  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  9064  000A98  0E00               	movlw	0
  9065  000A9A  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  9066  000A9C  0E00               	movlw	0
  9067  000A9E  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  9068  000AA0  EC8C  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  9069                           
  9070                           ;i2c_simple_master.c: 114: return i2c_continue;
  9071  000AA4  0E04               	movlw	4
  9072  000AA6  0012               	return	
  9073  000AA8                     __end_ofi2_wr2RegCompleteHandler:
  9074                           	opt stack 0
  9075                           tosu	equ	0xFFF
  9076                           tosh	equ	0xFFE
  9077                           tosl	equ	0xFFD
  9078                           pclatu	equ	0xFFB
  9079                           pclath	equ	0xFFA
  9080                           tblptru	equ	0xFF8
  9081                           tblptrh	equ	0xFF7
  9082                           tblptrl	equ	0xFF6
  9083                           tablat	equ	0xFF5
  9084                           prodh	equ	0xFF4
  9085                           prodl	equ	0xFF3
  9086                           intcon	equ	0xFF2
  9087                           postinc0	equ	0xFEE
  9088                           fsr0h	equ	0xFEA
  9089                           fsr0l	equ	0xFE9
  9090                           wreg	equ	0xFE8
  9091                           postdec1	equ	0xFE5
  9092                           fsr1h	equ	0xFE2
  9093                           fsr1l	equ	0xFE1
  9094                           indf2	equ	0xFDF
  9095                           postinc2	equ	0xFDE
  9096                           postdec2	equ	0xFDD
  9097                           fsr2h	equ	0xFDA
  9098                           fsr2l	equ	0xFD9
  9099                           status	equ	0xFD8
  9100                           
  9101 ;; *************** function i2_i2c_setDataCompleteCallback *****************
  9102 ;; Defined at:
  9103 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  cb              3    6[COMRAM] PTR FTN(PTR void ,)enum 
  9106 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9107 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  9108 ;;  p               2    9[COMRAM] PTR void 
  9109 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9110 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      void 
  9115 ;; Registers used:
  9116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9122 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9125 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9126 ;;Total ram usage:        5 bytes
  9127 ;; Hardware stack levels used:    1
  9128 ;; Hardware stack levels required when called:    1
  9129 ;; This function calls:
  9130 ;;		i2_setCallBack
  9131 ;; This function is called by:
  9132 ;;		i2_wr1RegCompleteHandler
  9133 ;;		i2_rd1RegCompleteHandler
  9134 ;;		i2_rd2RegCompleteHandler
  9135 ;;		i2_wr2RegCompleteHandler
  9136 ;;		i2_rdBlkRegCompleteHandler
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           	psect	text95
  9141  000B18                     __ptext95:
  9142                           	opt stack 0
  9143  000B18                     i2_i2c_setDataCompleteCallback:
  9144                           	opt stack 16
  9145                           
  9146                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  9147                           
  9148                           ;incstack = 0
  9149  000B18  C037  F031         	movff	i2i2c_setDataCompleteCallback@cb,i2setCallBack@cb
  9150  000B1C  C038  F032         	movff	i2i2c_setDataCompleteCallback@cb+1,i2setCallBack@cb+1
  9151  000B20  C039  F033         	movff	i2i2c_setDataCompleteCallback@cb+2,i2setCallBack@cb+2
  9152  000B24  C03A  F034         	movff	i2i2c_setDataCompleteCallback@p,i2setCallBack@p
  9153  000B28  C03B  F035         	movff	i2i2c_setDataCompleteCallback@p+1,i2setCallBack@p+1
  9154  000B2C  0E00               	movlw	0
  9155  000B2E  EC50  F002         	call	i2_setCallBack
  9156  000B32  0012               	return		;funcret
  9157  000B34                     __end_ofi2_i2c_setDataCompleteCallback:
  9158                           	opt stack 0
  9159                           tosu	equ	0xFFF
  9160                           tosh	equ	0xFFE
  9161                           tosl	equ	0xFFD
  9162                           pclatu	equ	0xFFB
  9163                           pclath	equ	0xFFA
  9164                           tblptru	equ	0xFF8
  9165                           tblptrh	equ	0xFF7
  9166                           tblptrl	equ	0xFF6
  9167                           tablat	equ	0xFF5
  9168                           prodh	equ	0xFF4
  9169                           prodl	equ	0xFF3
  9170                           intcon	equ	0xFF2
  9171                           postinc0	equ	0xFEE
  9172                           fsr0h	equ	0xFEA
  9173                           fsr0l	equ	0xFE9
  9174                           wreg	equ	0xFE8
  9175                           postdec1	equ	0xFE5
  9176                           fsr1h	equ	0xFE2
  9177                           fsr1l	equ	0xFE1
  9178                           indf2	equ	0xFDF
  9179                           postinc2	equ	0xFDE
  9180                           postdec2	equ	0xFDD
  9181                           fsr2h	equ	0xFDA
  9182                           fsr2l	equ	0xFD9
  9183                           status	equ	0xFD8
  9184                           
  9185 ;; *************** function i2_setCallBack *****************
  9186 ;; Defined at:
  9187 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;  idx             1    wreg     enum E11974
  9190 ;;  cb              3    0[COMRAM] PTR FTN(PTR void ,)enum 
  9191 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9192 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  9193 ;;  p               2    3[COMRAM] PTR void 
  9194 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9195 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9196 ;; Auto vars:     Size  Location     Type
  9197 ;;  idx             1    5[COMRAM] enum E11974
  9198 ;; Return value:  Size  Location     Type
  9199 ;;                  1    wreg      void 
  9200 ;; Registers used:
  9201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9202 ;; Tracked objects:
  9203 ;;		On entry : 0/0
  9204 ;;		On exit  : 0/0
  9205 ;;		Unchanged: 0/0
  9206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9207 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9210 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9211 ;;Total ram usage:        6 bytes
  9212 ;; Hardware stack levels used:    1
  9213 ;; This function calls:
  9214 ;;		Nothing
  9215 ;; This function is called by:
  9216 ;;		i2_i2c_setDataCompleteCallback
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text96
  9221  0004A0                     __ptext96:
  9222                           	opt stack 0
  9223  0004A0                     i2_setCallBack:
  9224                           	opt stack 16
  9225                           
  9226                           ;incstack = 0
  9227                           ;i2setCallBack@idx stored from wreg
  9228  0004A0  6E36               	movwf	i2setCallBack@idx,c
  9229                           
  9230                           ;i2c_master.c: 455: if(cb)
  9231  0004A2  5031               	movf	i2setCallBack@cb,w,c
  9232  0004A4  1032               	iorwf	i2setCallBack@cb+1,w,c
  9233  0004A6  1033               	iorwf	i2setCallBack@cb+2,w,c
  9234  0004A8  B4D8               	btfsc	status,2,c
  9235  0004AA  D01B               	goto	i2l482
  9236                           
  9237                           ;i2c_master.c: 456: {
  9238                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  9239  0004AC  5036               	movf	i2setCallBack@idx,w,c
  9240  0004AE  0D03               	mullw	3
  9241  0004B0  0E0D               	movlw	low (_i2c_status+12)
  9242  0004B2  24F3               	addwf	prodl,w,c
  9243  0004B4  6ED9               	movwf	fsr2l,c
  9244  0004B6  0E00               	movlw	high (_i2c_status+12)
  9245  0004B8  20F4               	addwfc	prodh,w,c
  9246  0004BA  6EDA               	movwf	fsr2h,c
  9247  0004BC  C031  FFDE         	movff	i2setCallBack@cb,postinc2
  9248  0004C0  C032  FFDE         	movff	i2setCallBack@cb+1,postinc2
  9249  0004C4  C033  FFDE         	movff	i2setCallBack@cb+2,postinc2
  9250                           
  9251                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  9252  0004C8  5036               	movf	i2setCallBack@idx,w,c
  9253  0004CA  0D02               	mullw	2
  9254  0004CC  0E1F               	movlw	low (_i2c_status+30)
  9255  0004CE  24F3               	addwf	prodl,w,c
  9256  0004D0  6ED9               	movwf	fsr2l,c
  9257  0004D2  0E00               	movlw	high (_i2c_status+30)
  9258  0004D4  20F4               	addwfc	prodh,w,c
  9259  0004D6  6EDA               	movwf	fsr2h,c
  9260  0004D8  C034  FFDE         	movff	i2setCallBack@p,postinc2
  9261  0004DC  C035  FFDD         	movff	i2setCallBack@p+1,postdec2
  9262                           
  9263                           ;i2c_master.c: 459: }
  9264  0004E0  0012               	return	
  9265  0004E2                     i2l482:
  9266                           
  9267                           ;i2c_master.c: 460: else
  9268                           ;i2c_master.c: 461: {
  9269                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  9270  0004E2  5036               	movf	i2setCallBack@idx,w,c
  9271  0004E4  0D03               	mullw	3
  9272  0004E6  0E0D               	movlw	low (_i2c_status+12)
  9273  0004E8  24F3               	addwf	prodl,w,c
  9274  0004EA  6ED9               	movwf	fsr2l,c
  9275  0004EC  0E00               	movlw	high (_i2c_status+12)
  9276  0004EE  20F4               	addwfc	prodh,w,c
  9277  0004F0  6EDA               	movwf	fsr2h,c
  9278  0004F2  0E08               	movlw	low i2_returnStop
  9279  0004F4  6EDE               	movwf	postinc2,c
  9280  0004F6  0E0E               	movlw	high i2_returnStop
  9281  0004F8  6EDE               	movwf	postinc2,c
  9282  0004FA  0E00               	movlw	low (i2_returnStop shr (0+16))
  9283  0004FC  6EDE               	movwf	postinc2,c
  9284                           
  9285                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  9286  0004FE  5036               	movf	i2setCallBack@idx,w,c
  9287  000500  0D02               	mullw	2
  9288  000502  0E1F               	movlw	low (_i2c_status+30)
  9289  000504  24F3               	addwf	prodl,w,c
  9290  000506  6ED9               	movwf	fsr2l,c
  9291  000508  0E00               	movlw	high (_i2c_status+30)
  9292  00050A  20F4               	addwfc	prodh,w,c
  9293  00050C  6EDA               	movwf	fsr2h,c
  9294  00050E  0E00               	movlw	0
  9295  000510  6EDE               	movwf	postinc2,c
  9296  000512  0E00               	movlw	0
  9297  000514  6EDD               	movwf	postdec2,c
  9298  000516  0012               	return	
  9299  000518                     __end_ofi2_setCallBack:
  9300                           	opt stack 0
  9301                           tosu	equ	0xFFF
  9302                           tosh	equ	0xFFE
  9303                           tosl	equ	0xFFD
  9304                           pclatu	equ	0xFFB
  9305                           pclath	equ	0xFFA
  9306                           tblptru	equ	0xFF8
  9307                           tblptrh	equ	0xFF7
  9308                           tblptrl	equ	0xFF6
  9309                           tablat	equ	0xFF5
  9310                           prodh	equ	0xFF4
  9311                           prodl	equ	0xFF3
  9312                           intcon	equ	0xFF2
  9313                           postinc0	equ	0xFEE
  9314                           fsr0h	equ	0xFEA
  9315                           fsr0l	equ	0xFE9
  9316                           wreg	equ	0xFE8
  9317                           postdec1	equ	0xFE5
  9318                           fsr1h	equ	0xFE2
  9319                           fsr1l	equ	0xFE1
  9320                           indf2	equ	0xFDF
  9321                           postinc2	equ	0xFDE
  9322                           postdec2	equ	0xFDD
  9323                           fsr2h	equ	0xFDA
  9324                           fsr2l	equ	0xFD9
  9325                           status	equ	0xFD8
  9326                           
  9327 ;; *************** function i2_i2c_setBuffer *****************
  9328 ;; Defined at:
  9329 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  buffer          2    0[COMRAM] PTR void 
  9332 ;;		 -> main@rec(1), main@data(2), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), 
  9333 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
  9334 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
  9335 ;;		 -> NULL(0), 
  9336 ;;  bufferSize      2    2[COMRAM] unsigned int 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;		None
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  1    wreg      void 
  9341 ;; Registers used:
  9342 ;;		wreg, status,2, status,0
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9351 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9352 ;;Total ram usage:        4 bytes
  9353 ;; Hardware stack levels used:    1
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		i2_wr1RegCompleteHandler
  9358 ;;		i2_rd1RegCompleteHandler
  9359 ;;		i2_rd2RegCompleteHandler
  9360 ;;		i2_wr2RegCompleteHandler
  9361 ;;		i2_rdBlkRegCompleteHandler
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text97
  9366  000B7C                     __ptext97:
  9367                           	opt stack 0
  9368  000B7C                     i2_i2c_setBuffer:
  9369                           	opt stack 17
  9370                           
  9371                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  9372                           
  9373                           ;incstack = 0
  9374  000B7C  A401               	btfss	_i2c_status,2,c
  9375  000B7E  0012               	return	
  9376                           
  9377                           ;i2c_master.c: 187: {
  9378                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  9379  000B80  C031  F003         	movff	i2i2c_setBuffer@buffer,_i2c_status+2
  9380  000B84  C032  F004         	movff	i2i2c_setBuffer@buffer+1,_i2c_status+3
  9381                           
  9382                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  9383  000B88  C033  F005         	movff	i2i2c_setBuffer@bufferSize,_i2c_status+4
  9384  000B8C  C034  F006         	movff	i2i2c_setBuffer@bufferSize+1,_i2c_status+5
  9385                           
  9386                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  9387  000B90  9401               	bcf	_i2c_status,2,c
  9388  000B92  0012               	return	
  9389  000B94                     __end_ofi2_i2c_setBuffer:
  9390                           	opt stack 0
  9391                           tosu	equ	0xFFF
  9392                           tosh	equ	0xFFE
  9393                           tosl	equ	0xFFD
  9394                           pclatu	equ	0xFFB
  9395                           pclath	equ	0xFFA
  9396                           tblptru	equ	0xFF8
  9397                           tblptrh	equ	0xFF7
  9398                           tblptrl	equ	0xFF6
  9399                           tablat	equ	0xFF5
  9400                           prodh	equ	0xFF4
  9401                           prodl	equ	0xFF3
  9402                           intcon	equ	0xFF2
  9403                           postinc0	equ	0xFEE
  9404                           fsr0h	equ	0xFEA
  9405                           fsr0l	equ	0xFE9
  9406                           wreg	equ	0xFE8
  9407                           postdec1	equ	0xFE5
  9408                           fsr1h	equ	0xFE2
  9409                           fsr1l	equ	0xFE1
  9410                           indf2	equ	0xFDF
  9411                           postinc2	equ	0xFDE
  9412                           postdec2	equ	0xFDD
  9413                           fsr2h	equ	0xFDA
  9414                           fsr2l	equ	0xFD9
  9415                           status	equ	0xFD8
  9416                           
  9417 ;; *************** function i2_i2c1_driver_stop *****************
  9418 ;; Defined at:
  9419 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;		None
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;		None
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  1    wreg      void 
  9426 ;; Registers used:
  9427 ;;		None
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;Total ram usage:        0 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; This function calls:
  9440 ;;		Nothing
  9441 ;; This function is called by:
  9442 ;;		i2_do_I2C_SEND_STOP
  9443 ;; This function uses a non-reentrant model
  9444 ;;
  9445                           
  9446                           	psect	text98
  9447  000E0C                     __ptext98:
  9448                           	opt stack 0
  9449  000E0C                     i2_i2c1_driver_stop:
  9450                           	opt stack 17
  9451                           
  9452                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  9453                           
  9454                           ;incstack = 0
  9455  000E0C  8497               	bsf	3991,2,c	;volatile
  9456  000E0E  0012               	return		;funcret
  9457  000E10                     __end_ofi2_i2c1_driver_stop:
  9458                           	opt stack 0
  9459                           tosu	equ	0xFFF
  9460                           tosh	equ	0xFFE
  9461                           tosl	equ	0xFFD
  9462                           pclatu	equ	0xFFB
  9463                           pclath	equ	0xFFA
  9464                           tblptru	equ	0xFF8
  9465                           tblptrh	equ	0xFF7
  9466                           tblptrl	equ	0xFF6
  9467                           tablat	equ	0xFF5
  9468                           prodh	equ	0xFF4
  9469                           prodl	equ	0xFF3
  9470                           intcon	equ	0xFF2
  9471                           postinc0	equ	0xFEE
  9472                           fsr0h	equ	0xFEA
  9473                           fsr0l	equ	0xFE9
  9474                           wreg	equ	0xFE8
  9475                           postdec1	equ	0xFE5
  9476                           fsr1h	equ	0xFE2
  9477                           fsr1l	equ	0xFE1
  9478                           indf2	equ	0xFDF
  9479                           postinc2	equ	0xFDE
  9480                           postdec2	equ	0xFDD
  9481                           fsr2h	equ	0xFDA
  9482                           fsr2l	equ	0xFD9
  9483                           status	equ	0xFD8
  9484                           
  9485 ;; *************** function i2_i2c1_driver_restart *****************
  9486 ;; Defined at:
  9487 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;		None
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;		None
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  1    wreg      void 
  9494 ;; Registers used:
  9495 ;;		None
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9505 ;;Total ram usage:        0 bytes
  9506 ;; Hardware stack levels used:    1
  9507 ;; This function calls:
  9508 ;;		Nothing
  9509 ;; This function is called by:
  9510 ;;		i2_do_I2C_SEND_RESTART_READ
  9511 ;;		i2_do_I2C_SEND_RESTART_WRITE
  9512 ;;		i2_do_I2C_SEND_RESTART
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text99
  9517  000E10                     __ptext99:
  9518                           	opt stack 0
  9519  000E10                     i2_i2c1_driver_restart:
  9520                           	opt stack 17
  9521                           
  9522                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  9523                           
  9524                           ;incstack = 0
  9525  000E10  8297               	bsf	3991,1,c	;volatile
  9526  000E12  0012               	return		;funcret
  9527  000E14                     __end_ofi2_i2c1_driver_restart:
  9528                           	opt stack 0
  9529                           tosu	equ	0xFFF
  9530                           tosh	equ	0xFFE
  9531                           tosl	equ	0xFFD
  9532                           pclatu	equ	0xFFB
  9533                           pclath	equ	0xFFA
  9534                           tblptru	equ	0xFF8
  9535                           tblptrh	equ	0xFF7
  9536                           tblptrl	equ	0xFF6
  9537                           tablat	equ	0xFF5
  9538                           prodh	equ	0xFF4
  9539                           prodl	equ	0xFF3
  9540                           intcon	equ	0xFF2
  9541                           postinc0	equ	0xFEE
  9542                           fsr0h	equ	0xFEA
  9543                           fsr0l	equ	0xFE9
  9544                           wreg	equ	0xFE8
  9545                           postdec1	equ	0xFE5
  9546                           fsr1h	equ	0xFE2
  9547                           fsr1l	equ	0xFE1
  9548                           indf2	equ	0xFDF
  9549                           postinc2	equ	0xFDE
  9550                           postdec2	equ	0xFDD
  9551                           fsr2h	equ	0xFDA
  9552                           fsr2l	equ	0xFD9
  9553                           status	equ	0xFD8
  9554                           
  9555 ;; *************** function i2_i2c1_driver_sendACK *****************
  9556 ;; Defined at:
  9557 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;		None
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;		None
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  1    wreg      void 
  9564 ;; Registers used:
  9565 ;;		None
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9575 ;;Total ram usage:        0 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; This function calls:
  9578 ;;		Nothing
  9579 ;; This function is called by:
  9580 ;;		i2_do_I2C_DO_ACK
  9581 ;;		i2_do_I2C_RX
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           	psect	text100
  9586  000DCE                     __ptext100:
  9587                           	opt stack 0
  9588  000DCE                     i2_i2c1_driver_sendACK:
  9589                           	opt stack 18
  9590                           
  9591                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  9592                           
  9593                           ;incstack = 0
  9594  000DCE  9A97               	bcf	3991,5,c	;volatile
  9595                           
  9596                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  9597  000DD0  8897               	bsf	3991,4,c	;volatile
  9598  000DD2  0012               	return		;funcret
  9599  000DD4                     __end_ofi2_i2c1_driver_sendACK:
  9600                           	opt stack 0
  9601                           tosu	equ	0xFFF
  9602                           tosh	equ	0xFFE
  9603                           tosl	equ	0xFFD
  9604                           pclatu	equ	0xFFB
  9605                           pclath	equ	0xFFA
  9606                           tblptru	equ	0xFF8
  9607                           tblptrh	equ	0xFF7
  9608                           tblptrl	equ	0xFF6
  9609                           tablat	equ	0xFF5
  9610                           prodh	equ	0xFF4
  9611                           prodl	equ	0xFF3
  9612                           intcon	equ	0xFF2
  9613                           postinc0	equ	0xFEE
  9614                           fsr0h	equ	0xFEA
  9615                           fsr0l	equ	0xFE9
  9616                           wreg	equ	0xFE8
  9617                           postdec1	equ	0xFE5
  9618                           fsr1h	equ	0xFE2
  9619                           fsr1l	equ	0xFE1
  9620                           indf2	equ	0xFDF
  9621                           postinc2	equ	0xFDE
  9622                           postdec2	equ	0xFDD
  9623                           fsr2h	equ	0xFDA
  9624                           fsr2l	equ	0xFD9
  9625                           status	equ	0xFD8
  9626                           
  9627 ;; *************** function _i2c_busCollisionISR *****************
  9628 ;; Defined at:
  9629 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;		None
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      void 
  9636 ;; Registers used:
  9637 ;;		cstack
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9647 ;;Total ram usage:        0 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:    1
  9650 ;; This function calls:
  9651 ;;		_i2c1_driver_clearBusCollision
  9652 ;; This function is called by:
  9653 ;;		_i2c_open
  9654 ;;		_INTERRUPT_InterruptManager
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           	psect	text101
  9659  000DD4                     __ptext101:
  9660                           	opt stack 0
  9661  000DD4                     _i2c_busCollisionISR:
  9662                           	opt stack 19
  9663                           
  9664                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
  9665                           
  9666                           ;incstack = 0
  9667  000DD4  ECED  F006         	call	_i2c1_driver_clearBusCollision	;wreg free
  9668  000DD8  0012               	return		;funcret
  9669  000DDA                     __end_of_i2c_busCollisionISR:
  9670                           	opt stack 0
  9671                           tosu	equ	0xFFF
  9672                           tosh	equ	0xFFE
  9673                           tosl	equ	0xFFD
  9674                           pclatu	equ	0xFFB
  9675                           pclath	equ	0xFFA
  9676                           tblptru	equ	0xFF8
  9677                           tblptrh	equ	0xFF7
  9678                           tblptrl	equ	0xFF6
  9679                           tablat	equ	0xFF5
  9680                           prodh	equ	0xFF4
  9681                           prodl	equ	0xFF3
  9682                           intcon	equ	0xFF2
  9683                           postinc0	equ	0xFEE
  9684                           fsr0h	equ	0xFEA
  9685                           fsr0l	equ	0xFE9
  9686                           wreg	equ	0xFE8
  9687                           postdec1	equ	0xFE5
  9688                           fsr1h	equ	0xFE2
  9689                           fsr1l	equ	0xFE1
  9690                           indf2	equ	0xFDF
  9691                           postinc2	equ	0xFDE
  9692                           postdec2	equ	0xFDD
  9693                           fsr2h	equ	0xFDA
  9694                           fsr2l	equ	0xFD9
  9695                           status	equ	0xFD8
  9696                           
  9697 ;; *************** function _i2c1_driver_clearBusCollision *****************
  9698 ;; Defined at:
  9699 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;		None
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;		None
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  1    wreg      void 
  9706 ;; Registers used:
  9707 ;;		None
  9708 ;; Tracked objects:
  9709 ;;		On entry : 0/0
  9710 ;;		On exit  : 0/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9717 ;;Total ram usage:        0 bytes
  9718 ;; Hardware stack levels used:    1
  9719 ;; This function calls:
  9720 ;;		Nothing
  9721 ;; This function is called by:
  9722 ;;		_i2c_busCollisionISR
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text102
  9727  000DDA                     __ptext102:
  9728                           	opt stack 0
  9729  000DDA                     _i2c1_driver_clearBusCollision:
  9730                           	opt stack 19
  9731                           
  9732                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
  9733                           
  9734                           ;incstack = 0
  9735  000DDA  010E               	movlb	14	; () banked
  9736  000DDC  93CD               	bcf	205,1,b	;volatile
  9737                           
  9738                           ; BSR set to: 14
  9739  000DDE  0012               	return		;funcret
  9740  000DE0                     __end_of_i2c1_driver_clearBusCollision:
  9741                           	opt stack 0
  9742  0000                     tosu	equ	0xFFF
  9743                           tosh	equ	0xFFE
  9744                           tosl	equ	0xFFD
  9745                           pclatu	equ	0xFFB
  9746                           pclath	equ	0xFFA
  9747                           tblptru	equ	0xFF8
  9748                           tblptrh	equ	0xFF7
  9749                           tblptrl	equ	0xFF6
  9750                           tablat	equ	0xFF5
  9751                           prodh	equ	0xFF4
  9752                           prodl	equ	0xFF3
  9753                           intcon	equ	0xFF2
  9754                           postinc0	equ	0xFEE
  9755                           fsr0h	equ	0xFEA
  9756                           fsr0l	equ	0xFE9
  9757                           wreg	equ	0xFE8
  9758                           postdec1	equ	0xFE5
  9759                           fsr1h	equ	0xFE2
  9760                           fsr1l	equ	0xFE1
  9761                           indf2	equ	0xFDF
  9762                           postinc2	equ	0xFDE
  9763                           postdec2	equ	0xFDD
  9764                           fsr2h	equ	0xFDA
  9765                           fsr2l	equ	0xFD9
  9766                           status	equ	0xFD8
  9767                           tosu	equ	0xFFF
  9768                           tosh	equ	0xFFE
  9769                           tosl	equ	0xFFD
  9770                           pclatu	equ	0xFFB
  9771                           pclath	equ	0xFFA
  9772                           tblptru	equ	0xFF8
  9773                           tblptrh	equ	0xFF7
  9774                           tblptrl	equ	0xFF6
  9775                           tablat	equ	0xFF5
  9776                           prodh	equ	0xFF4
  9777                           prodl	equ	0xFF3
  9778                           intcon	equ	0xFF2
  9779                           postinc0	equ	0xFEE
  9780                           fsr0h	equ	0xFEA
  9781                           fsr0l	equ	0xFE9
  9782                           wreg	equ	0xFE8
  9783                           postdec1	equ	0xFE5
  9784                           fsr1h	equ	0xFE2
  9785                           fsr1l	equ	0xFE1
  9786                           indf2	equ	0xFDF
  9787                           postinc2	equ	0xFDE
  9788                           postdec2	equ	0xFDD
  9789                           fsr2h	equ	0xFDA
  9790                           fsr2l	equ	0xFD9
  9791                           status	equ	0xFD8
  9792                           
  9793                           	psect	text103
  9794  000000                     __ptext103:
  9795                           	opt stack 0
  9796                           tosu	equ	0xFFF
  9797                           tosh	equ	0xFFE
  9798                           tosl	equ	0xFFD
  9799                           pclatu	equ	0xFFB
  9800                           pclath	equ	0xFFA
  9801                           tblptru	equ	0xFF8
  9802                           tblptrh	equ	0xFF7
  9803                           tblptrl	equ	0xFF6
  9804                           tablat	equ	0xFF5
  9805                           prodh	equ	0xFF4
  9806                           prodl	equ	0xFF3
  9807                           intcon	equ	0xFF2
  9808                           postinc0	equ	0xFEE
  9809                           fsr0h	equ	0xFEA
  9810                           fsr0l	equ	0xFE9
  9811                           wreg	equ	0xFE8
  9812                           postdec1	equ	0xFE5
  9813                           fsr1h	equ	0xFE2
  9814                           fsr1l	equ	0xFE1
  9815                           indf2	equ	0xFDF
  9816                           postinc2	equ	0xFDE
  9817                           postdec2	equ	0xFDD
  9818                           fsr2h	equ	0xFDA
  9819                           fsr2l	equ	0xFD9
  9820                           status	equ	0xFD8
  9821                           
  9822                           	psect	rparam
  9823  0000                     tosu	equ	0xFFF
  9824                           tosh	equ	0xFFE
  9825                           tosl	equ	0xFFD
  9826                           pclatu	equ	0xFFB
  9827                           pclath	equ	0xFFA
  9828                           tblptru	equ	0xFF8
  9829                           tblptrh	equ	0xFF7
  9830                           tblptrl	equ	0xFF6
  9831                           tablat	equ	0xFF5
  9832                           prodh	equ	0xFF4
  9833                           prodl	equ	0xFF3
  9834                           intcon	equ	0xFF2
  9835                           postinc0	equ	0xFEE
  9836                           fsr0h	equ	0xFEA
  9837                           fsr0l	equ	0xFE9
  9838                           wreg	equ	0xFE8
  9839                           postdec1	equ	0xFE5
  9840                           fsr1h	equ	0xFE2
  9841                           fsr1l	equ	0xFE1
  9842                           indf2	equ	0xFDF
  9843                           postinc2	equ	0xFDE
  9844                           postdec2	equ	0xFDD
  9845                           fsr2h	equ	0xFDA
  9846                           fsr2l	equ	0xFD9
  9847                           status	equ	0xFD8
  9848                           
  9849                           	psect	temp
  9850  00004A                     btemp:
  9851                           	opt stack 0
  9852  00004A                     	ds	1
  9853  0000                     int$flags	set	btemp
  9854  0000                     wtemp6	set	btemp+1
  9855                           tosu	equ	0xFFF
  9856                           tosh	equ	0xFFE
  9857                           tosl	equ	0xFFD
  9858                           pclatu	equ	0xFFB
  9859                           pclath	equ	0xFFA
  9860                           tblptru	equ	0xFF8
  9861                           tblptrh	equ	0xFF7
  9862                           tblptrl	equ	0xFF6
  9863                           tablat	equ	0xFF5
  9864                           prodh	equ	0xFF4
  9865                           prodl	equ	0xFF3
  9866                           intcon	equ	0xFF2
  9867                           postinc0	equ	0xFEE
  9868                           fsr0h	equ	0xFEA
  9869                           fsr0l	equ	0xFE9
  9870                           wreg	equ	0xFE8
  9871                           postdec1	equ	0xFE5
  9872                           fsr1h	equ	0xFE2
  9873                           fsr1l	equ	0xFE1
  9874                           indf2	equ	0xFDF
  9875                           postinc2	equ	0xFDE
  9876                           postdec2	equ	0xFDD
  9877                           fsr2h	equ	0xFDA
  9878                           fsr2l	equ	0xFD9
  9879                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      73
    BANK0           160     19      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    do_I2C_TX$1924$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$1930$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$1936$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_ISR$1942	PTR const FTN()enum E11956 size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$1941	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$1936	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$1935	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$1930	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$1929	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX$1924	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S820$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_readNBytes@data	PTR void  size(2) Largest target is 1
		 -> main@rec(BANK0[1]), 

    d.data	PTR unsigned char  size(2) Largest target is 0

    S1085$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(2) Largest target is 2
		 -> main@data(BANK0[2]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E11956[16] size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S820$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S820$callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> i2_returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> returnReset(), returnStop(), 

    S820$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMRAM

    _i2c_writeNBytes->_i2c_setBuffer
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_readNBytes->_i2c_setBuffer
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setBuffer
    _wr1RegCompleteHandler->_i2c_setBuffer
    _rdBlkRegCompleteHandler->_i2c_setBuffer
    _rd2RegCompleteHandler->_i2c_setBuffer
    _rd1RegCompleteHandler->_i2c_setBuffer
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    i2_i2c_ISR->i2_do_I2C_TX
    i2_do_I2C_TX->i2_i2c1_driver_TXData
    i2_do_I2C_TX->i2_i2c1_driver_isNACK
    i2_do_I2C_SEND_ADR_WRITE->i2_i2c1_driver_TXData
    i2_do_I2C_SEND_ADR_READ->i2_i2c1_driver_TXData
    i2_wr2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_wr1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rdBlkRegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_i2c_setDataCompleteCallback->i2_setCallBack

Critical Paths under _main in BANK0

    _main->_i2c_writeNBytes
    _i2c_writeNBytes->_i2c_setAddressNACKCallback
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_readNBytes->_i2c_open
    _i2c_masterRead->_i2c_masterOperation
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  220888
                                             15 BANK0      4     4      0
                  _SYSTEM_Initialize
                     _i2c_readNBytes
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _i2c_writeNBytes                                      5     1      4  111553
                                             10 BANK0      5     1      4
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_setAddressNACKCallback                           5     0      5    2259
                                              5 BANK0      5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (2) _i2c_masterWrite                                      0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (1) _i2c_readNBytes                                       5     1      4  108934
                                              2 BANK0      5     1      4
                          _i2c_close
                     _i2c_masterRead
                           _i2c_open
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_open                                             2     2      0     310
                                              0 BANK0      2     2      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_setI2cISR                                3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_setBusCollisionISR                       3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_masterRead                                       0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (3) _i2c_masterOperation                                  2     2      0  106092
                                              0 BANK0      2     2      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (4) _mssp1_IRQisEnabled                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_poller                                           0     0      0  106024
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (5) _mssp1_waitForEvent                                   2     0      2      90
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _i2c_ISR                                              0     0      0  105934
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX_EMPTY                                      0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX                                            2     2      0   26519
                                             22 COMRAM     2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_isNACK                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_TXData                                   1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RX                                            0     0      0   26451
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ADDRESS_NACK                               0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _returnStop                                           2     0      2     108
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _returnReset                                          2     0      2       0
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              2     0      2    5415
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _i2c_setDataCompleteCallback                          5     0      5    2979
                                              5 BANK0      5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (3) _setCallBack                                          6     1      5    1117
                                             21 COMRAM     1     1      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _i2c_setBuffer                                        4     0      4    2222
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _i2c_restartWrite                                     2     0      2       0
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_close                                            1     1      0      37
                                             21 COMRAM     1     1      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (3) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         18    18      0   23654
                                              3 COMRAM    18    18      0
                   Absolute function *
                _i2c_busCollisionISR *
                          i2_i2c_ISR *
 ---------------------------------------------------------------------------------
 (11) i2_i2c_ISR                                           0     0      0   23654
                    i2_do_I2C_DO_ACK *
           i2_do_I2C_DO_ADDRESS_NACK *
           i2_do_I2C_DO_NACK_RESTART *
              i2_do_I2C_DO_NACK_STOP *
                      i2_do_I2C_IDLE *
                      i2_do_I2C_RCEN *
                     i2_do_I2C_RESET *
                        i2_do_I2C_RX *
             i2_do_I2C_SEND_ADR_READ *
            i2_do_I2C_SEND_ADR_WRITE *
              i2_do_I2C_SEND_RESTART *
         i2_do_I2C_SEND_RESTART_READ *
        i2_do_I2C_SEND_RESTART_WRITE *
                 i2_do_I2C_SEND_STOP *
                        i2_do_I2C_TX *
                  i2_do_I2C_TX_EMPTY *
               i2_i2c1_driver_isNACK
                   i2_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (12) i2_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_TX_EMPTY                                   0     0      0    5881
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
                     i2_mssp1_setIRQ
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_TX                                         2     2      0    5949
                                              1 COMRAM     2     2      0
                   Absolute function *
         i2_do_I2C_SEND_RESTART_READ
        i2_do_I2C_SEND_RESTART_WRITE
                 i2_do_I2C_SEND_STOP
               i2_i2c1_driver_TXData
               i2_i2c1_driver_isNACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) i2_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_SEND_ADR_READ                              0     0      0      31
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_TXData                                1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RX                                         0     0      0    5881
                   Absolute function *
           i2_do_I2C_DO_NACK_RESTART
              i2_do_I2C_DO_NACK_STOP
            i2_i2c1_driver_getRXData
              i2_i2c1_driver_sendACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_DO_NACK_STOP                               0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RESET                                      0     0      0       0
             i2_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RCEN                                       0     0      0       0
              i2_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_DO_ADDRESS_NACK                            0     0      0    5881
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_wr2RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_wr1RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_returnStop                                        2     0      2     108
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_returnReset                                       2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_rdBlkRegCompleteHandler                           2     0      2    1205
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_rd2RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_rd1RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i2_i2c_setDataCompleteCallback                       5     0      5     699
                                              6 COMRAM     5     0      5
                      i2_setCallBack
 ---------------------------------------------------------------------------------
 (15) i2_setCallBack                                       6     1      5     287
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (14) i2_i2c_setBuffer                                     4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (13) i2_i2c_restartWrite                                  2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_STOP                                  0     0      0       0
                 i2_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART                               0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_DO_ACK                                     0     0      0       0
              i2_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _i2c_readNBytes
     _i2c_close
       _mssp1_clearIRQ
       _mssp1_disableIRQ
     _i2c_masterRead
       _i2c_masterOperation
         _i2c1_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c1_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c1_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c1_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c1_driver_startRX
             _do_I2C_RESET *
               _i2c1_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _i2c1_driver_getRXData *
               _i2c1_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c1_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c1_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c1_driver_restart
             _do_I2C_SEND_STOP *
               _i2c1_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c1_driver_TXData *
               _i2c1_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _mssp1_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c1_driver_isNACK *
             _mssp1_clearIRQ *
           _mssp1_waitForEvent
         _mssp1_IRQisEnabled
     _i2c_open
       _i2c1_driver_open
       _i2c1_driver_setBusCollisionISR
       _i2c1_driver_setI2cISR
       _mssp1_clearIRQ
     _i2c_setBuffer
   _i2c_writeNBytes
     _i2c_close
       _mssp1_clearIRQ
       _mssp1_disableIRQ
     _i2c_masterWrite
       _i2c_masterOperation
         _i2c1_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c1_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c1_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c1_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c1_driver_startRX
             _do_I2C_RESET *
               _i2c1_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _i2c1_driver_getRXData *
               _i2c1_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c1_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c1_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c1_driver_restart
             _do_I2C_SEND_STOP *
               _i2c1_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c1_driver_TXData *
               _i2c1_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _mssp1_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c1_driver_isNACK *
             _mssp1_clearIRQ *
           _mssp1_waitForEvent
         _mssp1_IRQisEnabled
     _i2c_open
       _i2c1_driver_open
       _i2c1_driver_setBusCollisionISR
       _i2c1_driver_setI2cISR
       _mssp1_clearIRQ
     _i2c_setAddressNACKCallback
       _setCallBack
     _i2c_setBuffer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i2_i2c_ISR *
     i2_do_I2C_DO_ACK *
       i2_i2c1_driver_sendACK
     i2_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_DO_NACK_RESTART *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_DO_NACK_STOP *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_IDLE *
     i2_do_I2C_RCEN *
       i2_i2c1_driver_startRX
     i2_do_I2C_RESET *
       i2_i2c1_driver_resetBus
     i2_do_I2C_RX *
       Absolute function(Fake) *
       i2_do_I2C_DO_NACK_RESTART *
         i2_i2c1_driver_sendNACK
       i2_do_I2C_DO_NACK_STOP *
         i2_i2c1_driver_sendNACK
       i2_i2c1_driver_getRXData *
       i2_i2c1_driver_sendACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_SEND_ADR_READ *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_ADR_WRITE *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_RESTART *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_READ *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_WRITE *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_STOP *
       i2_i2c1_driver_stop
     i2_do_I2C_TX *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART_READ *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_RESTART_WRITE *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c1_driver_TXData *
       i2_i2c1_driver_isNACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_mssp1_setIRQ *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_i2c1_driver_isNACK *
     i2_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      43       5       41.9%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      49       1       77.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8C       6        0.0%
DATA                 0      0      8C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr 10 15:16:36 2018

                ??i2_i2c1_driver_startRX 0031                             returnReset@p 009A  
          _do_I2C_SEND_RESTART$intlevel0 0CC6                              __CFG_CP$OFF 000000  
                   __size_of_do_I2C_IDLE 0010                      _do_I2C_SEND_RESTART 0CC0  
                   __size_of_do_I2C_RCEN 0010                      ?i2_i2c_restartWrite 003C  
                            __CFG_LVP$ON 000000                                      l421 06F4  
                                    l422 06E8                                      l430 01B6  
                                    l431 01A4                                      l440 021A  
                                    l425 06EE                                      l433 01AA  
                                    l434 01B0                                      l610 0332  
                                    l355 0AF8                                      l451 0460  
                                    l531 0680                                      l380 0B36  
                                    l348 0190                                      l461 059A  
                                    l429 01F0                                      l445 0456  
                                    l462 05A2                                      l367 09A0  
                                    l448 0466                                      l457 05A8  
                                    l449 045A                                      l369 09B2  
                                    l482 0378                                      l458 0594  
                                    l379 0B46                                      l469 0740  
                                    l591 0976                             __CFG_CPD$OFF 000000  
        __end_ofi2_i2c1_driver_getRXData 0DFC             __size_of_i2c_masterOperation 0036  
                   _returnStop$intlevel0 0D2E          i2i2c_setDataCompleteCallback@cb 0037  
          i2c_setDataCompleteCallback@cb 0095                  __size_of_PMD_Initialize 001C  
                  __size_of_do_I2C_RESET 0014                                      prod 000FF3  
                                    tosl 000FFD                                      wreg 000FE8  
               ?i2_rd1RegCompleteHandler 003C          i2c1_driver_setBusCollisionISR@f 0046  
                            i2_do_I2C_RX 0518                              i2_do_I2C_TX 0226  
               ?i2_wr1RegCompleteHandler 003C                             __CFG_ZCD$OFF 000000  
                ??_rd2RegCompleteHandler 004A                                     l3715 0640  
                                   l3727 0950                           i2_mssp1_setIRQ 0DC2  
                 __size_ofi2_do_I2C_IDLE 000A                                     u1310 0C34  
                                   u1208 01C6                                     u1209 01DA  
                 __size_ofi2_do_I2C_RCEN 000A                                     u1250 0BB0  
                                   _LATA 000F83                                     u1238 0476  
                                   u1318 0C36                                     _LATB 000F84  
                                   u1239 048A                                     _LATC 000F85  
                                   u1248 05B8                                     _LATD 000F86  
                                   u1249 05CC                                     _LATE 000F87  
                                   u1188 0704                                     u1189 0718  
                                   u1298 0754                                     u1299 0768  
                                   u1747 0BB8                                     _PMD0 000EE1  
                                   _PMD1 000EE2                                     _PMD2 000EE3  
                                   _PMD3 000EE4                                     _PMD4 000EE5  
                                   _PMD5 000EE6                     ?_do_I2C_SEND_RESTART 0031  
                                   _WPUA 000F10                                     _WPUB 000F18  
                                   _WPUC 000F20                                     _WPUD 000F25  
                                   _WPUE 000F2D                     ??i2_i2c_restartWrite 003E  
                ??_wr2RegCompleteHandler 004A                            __CFG_FCMEN$ON 000000  
      __size_of_do_I2C_SEND_RESTART_READ 000E                     __end_ofi2_returnStop 0E0C  
              ?_do_I2C_SEND_RESTART_READ 0031                                     _main 02B2  
              __size_of_do_I2C_SEND_STOP 000E                   __size_of_do_I2C_DO_ACK 000E  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     fsr0l 000FE9  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     btemp 004A  
                  ?_do_I2C_SEND_ADR_READ 0031                                     prodh 000FF4  
                                   prodl 000FF3          ??_i2c1_driver_clearBusCollision 0031  
               __size_of_i2c_writeNBytes 0050                                     start 00DC  
                          _i2c_setBuffer 0B4C                            __CFG_CSWEN$ON 000000  
                        __end_of_i2c_ISR 076C                             ___param_bank 000000  
       __size_of_rdBlkRegCompleteHandler 004E                            __CFG_SCANE$ON 000000  
               ??_do_I2C_DO_NACK_RESTART 0046                __size_of_mssp1_disableIRQ 0006  
                           _do_I2C_RESET 0C14           __size_of_OSCILLATOR_Initialize 0018  
            i2c_setAddressNACKCallback@p 0098            __end_of_OSCILLATOR_Initialize 0B7C  
               __end_of_i2c1_driver_open 0BAA                                    ?_main 0031  
                         _i2c_readNBytes 094C                 __size_ofi2_i2c_setBuffer 0018  
               __end_of_i2c1_driver_stop 0DEC                            __CFG_WDTE$OFF 000000  
             __end_of_i2c1_driver_TXData 0D5E                           __CFG_DEBUG$OFF 000000  
                __size_ofi2_do_I2C_RESET 000E                                    i2l421 0780  
                                  i2l422 0774                                    i2l430 0242  
                                  i2l431 0230                                    i2l440 02A6  
                                  i2l425 077A                                    i2l433 0236  
                                  i2l434 023C                                    i2l451 054A  
                                  i2l267 0072                                    i2l461 05F0  
                                  i2l429 027C                                    i2l445 0540  
                                  i2l462 05F8                                    i2l448 0550  
                                  i2l457 05FE                                    i2l449 0544  
                                  i2l482 04E2                                    i2l458 05EA  
                                  i2l469 080A                                    _OSCEN 000EDC  
                                  _TRISA 000F88                                    _TRISB 000F89  
                                  _TRISC 000F8A                                    _TRISD 000F8B  
                                  _TRISE 000F8C                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                          __CFG_WRT5$OFF 000000                            __CFG_WRT6$OFF 000000  
                          __CFG_WRT7$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                              i2c_open@ret 0091  
                         __CFG_EBTR4$OFF 000000                           __CFG_EBTR5$OFF 000000  
                         __CFG_EBTR6$OFF 000000                           __CFG_EBTR7$OFF 000000  
                         _i2c_masterRead 0D4E                            __CFG_WRTB$OFF 000000  
                  __end_ofi2_returnReset 0E08                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                   __end_ofi2_mssp1_setIRQ 0DC8  
                         __CFG_EBTRB$OFF 000000               __end_of_i2c1_driver_isNACK 0BD6  
                     __size_ofi2_i2c_ISR 0040               ?_do_I2C_SEND_RESTART_WRITE 0031  
                     __CFG_MCLRE$EXTMCLR 000000                    ??_do_I2C_SEND_RESTART 0046  
                          i2returnStop@p 003C   __end_of_i2c1_driver_setBusCollisionISR 0C88  
__size_of_i2c1_driver_setBusCollisionISR 000E           _i2c1_driver_setBusCollisionISR 0C7A  
                                  pclath 000FFA                                    tablat 000FF5  
                __size_of_mssp1_clearIRQ 0006                   ?_do_I2C_SEND_ADR_WRITE 0031  
                                  status 000FD8                                    wtemp6 004B  
        __size_ofi2_i2c1_driver_sendNACK 0006                           ?_i2c_setBuffer 0046  
                           ?_setCallBack 0090          __size_ofi2_i2c1_driver_resetBus 0002  
                          _fsmStateTable 0060                          __initialization 0916  
                             _i2c_poller 0B34                               _i2c_status 0001  
                           __end_of_main 0334                            i2_do_I2C_IDLE 0D3C  
                       i2setCallBack@idx 0036                            i2_do_I2C_RCEN 0D32  
                       i2_do_I2C_TX$1023 0032                         __end_of_i2c_open 0194  
                 __end_of_i2c_readNBytes 0982              ?_INTERRUPT_InterruptManager 0031  
                  i2i2c_setBuffer@buffer 0031                         i2_mssp1_clearIRQ 0DBC  
       __end_ofi2_do_I2C_DO_ADDRESS_NACK 07B2          __end_ofi2_rd1RegCompleteHandler 0A48  
                          setCallBack@cb 0090                            _do_I2C_DO_ACK 0CA4  
                                 ??_main 004A                        ?_i2c_restartWrite 009A  
          __size_of_i2c1_driver_sendNACK 0006                            __activetblptr 000003  
        __end_ofi2_wr1RegCompleteHandler 0A78                             i2c_close@ret 0046  
                 __end_of_i2c_masterRead 0D56                       ??_i2c_restartWrite 004A  
          __size_of_i2c1_driver_resetBus 0002                  ?_do_I2C_DO_ADDRESS_NACK 0031  
                        ?i2_mssp1_setIRQ 0031       __end_ofi2_do_I2C_SEND_RESTART_READ 0D96  
             i2_do_I2C_SEND_RESTART_READ 0D8E                                   _ANSELA 000F11  
                                 _ANSELB 000F19                                   _ANSELC 000F21  
                                 _ANSELD 000F26                                   _ANSELE 000F2E  
               __size_ofi2_do_I2C_DO_ACK 0008                                   _RC3PPS 000EFA  
                                 _RC4PPS 000EFB                                   _ODCONA 000F0F  
                                 _ODCONB 000F17                                   _ODCONC 000F1F  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
                         __CFG_WDTCCS$SC 000000                       __size_of_i2c_close 001C  
                                 _OSCFRQ 000EDE                  i2_do_I2C_SEND_ADR_WRITE 0CEA  
                 ??_do_I2C_SEND_ADR_READ 0047                 rdBlkRegCompleteHandler@p 009A  
                              ??_i2c_ISR 0049                           __CFG_PWRTE$OFF 000000  
                ??i2_do_I2C_SEND_RESTART 0031                           __CFG_XINST$OFF 000000  
       __size_ofi2_i2c1_driver_getRXData 0004                    _i2c1_driver_getRXData 0DE0  
              __CFG_RSTOSC$HFINTOSC_1MHZ 000000                       i2_i2c1_driver_stop 0E0C  
                    _do_I2C_RX$intlevel0 042E              __end_of_do_I2C_DO_NACK_STOP 0CA4  
    __end_of_i2c_setDataCompleteCallback 0AE0           ?i2_i2c_setDataCompleteCallback 0037  
            _i2c_setDataCompleteCallback 0AC4                           ?i2_do_I2C_IDLE 0031  
                        _i2c_masterWrite 0D46                           ?i2_do_I2C_RCEN 0031  
  __end_of_i2c1_driver_clearBusCollision 0DE0   __size_of_i2c1_driver_clearBusCollision 0006  
          _i2c1_driver_clearBusCollision 0DDA                           __CFG_STVREN$ON 000000  
                      __end_ofi2_i2c_ISR 0836          __size_of_do_I2C_DO_NACK_RESTART 000E  
                      ??_i2c_writeNBytes 004A                          ?_i2c_readNBytes 0092  
                         i2returnReset@p 003C                                   clear_0 093C  
                         ?_do_I2C_DO_ACK 0031                      ?i2_i2c1_driver_stop 0031  
         i2i2c_setDataCompleteCallback@p 003A                   i2_i2c1_driver_sendNACK 0DC8  
                 i2c1_driver_setI2cISR@f 0046              __end_of_i2c1_driver_sendACK 0DB0  
                         _PMD_Initialize 0AFC           __end_of_do_I2C_DO_ADDRESS_NACK 0726  
                        ?_i2c_masterRead 0031                   i2_i2c1_driver_resetBus 0E16  
            ?_i2c_setAddressNACKCallback 0095     __size_ofi2_do_I2C_SEND_RESTART_WRITE 0008  
            __end_of_i2c1_driver_restart 0DF0                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                           ?_returnReset 009A            _do_I2C_DO_NACK_STOP$intlevel0 0C9C  
                  _i2c1_driver_setI2cISR 0C6C              __end_of_i2c1_driver_startRX 0DE8  
                  __size_ofi2_returnStop 0004                        ??i2_i2c_setBuffer 0035  
         __size_ofi2_do_I2C_DO_NACK_STOP 0008            __size_of_INTERRUPT_Initialize 0004  
          __end_ofi2_do_I2C_DO_NACK_STOP 0D6E                        _SYSTEM_Initialize 0C3A  
                             __accesstop 0060                     ??i2_i2c1_driver_stop 0031  
                __end_of__initialization 0942                          ??_i2c_setBuffer 004A  
         _do_I2C_SEND_ADR_READ$intlevel0 0C06                         _do_I2C_SEND_STOP 0CB2  
                     __size_of_do_I2C_RX 0078                       __size_of_do_I2C_TX 0092  
                     ?_SYSTEM_Initialize 0031                            ___rparam_used 000001  
             __end_of_mssp1_IRQisEnabled 0C3A        _rdBlkRegCompleteHandler$intlevel0 0692  
                    _i2c_masterOperation 0982                 __size_of_do_I2C_TX_EMPTY 005C  
             ?i2_rdBlkRegCompleteHandler 003C                  _rdBlkRegCompleteHandler 068C  
         __size_ofi2_i2c1_driver_sendACK 0006               __end_of_mssp1_waitForEvent 0BC0  
          __end_ofi2_i2c1_driver_sendACK 0DD4                              ?_i2c_poller 0031  
                         __pcstackCOMRAM 0031                      _do_I2C_TX$intlevel0 019A  
                           __pidataBANK0 09B8                      ??_SYSTEM_Initialize 0046  
         __size_ofi2_i2c1_driver_restart 0004            __end_ofi2_i2c1_driver_restart 0E14  
                       _mssp1_disableIRQ 0DB0           __size_ofi2_i2c1_driver_startRX 0004  
          __end_ofi2_i2c1_driver_startRX 0E00                   __end_of_PMD_Initialize 0B18  
                      __end_of_i2c_close 0AFC                             i2_returnStop 0E08  
                         i2_do_I2C_RESET 0D06                     ?_i2c_masterOperation 0031  
               i2_do_I2C_DO_ADDRESS_NACK 076C                             ?i2_do_I2C_RX 0031  
                           ?i2_do_I2C_TX 0031        __size_ofi2_do_I2C_DO_NACK_RESTART 0008  
               i2rd2RegCompleteHandler@p 003C                           setCallBack@idx 0046  
              ?i2_do_I2C_DO_NACK_RESTART 0031                   _do_I2C_DO_NACK_RESTART 0C88  
                         _do_I2C_TX$1023 0047                __end_of_SYSTEM_Initialize 0C4C  
              ??i2_do_I2C_SEND_ADR_WRITE 0032               __end_ofi2_do_I2C_SEND_STOP 0D7E  
                         _mssp1_clearIRQ 0DB6            __size_ofi2_i2c1_driver_TXData 0008  
         __size_of_rd2RegCompleteHandler 0038                                ?_i2c_open 0031  
          __end_of_rd2RegCompleteHandler 086E           __size_of_wr2RegCompleteHandler 0038  
          __end_of_wr2RegCompleteHandler 0916                  __end_of_i2c_masterWrite 0D4E  
       __size_ofi2_rd1RegCompleteHandler 0030                    _rd1RegCompleteHandler 086E  
                 ?_i2c1_driver_getRXData 0031                        ??i2_do_I2C_DO_ACK 0031  
               i2wr2RegCompleteHandler@p 003C            __size_ofi2_i2c1_driver_isNACK 0016  
                  _do_I2C_IDLE$intlevel0 0C62                        i2_do_I2C_TX_EMPTY 05E6  
       __size_ofi2_wr1RegCompleteHandler 0030                          ??i2_do_I2C_IDLE 0031  
                  _wr1RegCompleteHandler 08A6                           _SSP1DATPPSbits 000EB8  
           __size_of_i2c_busCollisionISR 0006                          ??i2_do_I2C_RCEN 0031  
        _wr1RegCompleteHandler$intlevel0 08AC          _rd1RegCompleteHandler$intlevel0 0874  
                          ??_do_I2C_IDLE 0046                     __size_of_setCallBack 007A  
                          ??_do_I2C_RCEN 0046        __end_ofi2_rdBlkRegCompleteHandler 07F6  
                  i2c_readNBytes@address 0096                       ?i2_do_I2C_TX_EMPTY 0031  
                        __CFG_PPS1WAY$ON 000000                          ??_do_I2C_DO_ACK 0046  
                 __end_ofi2_do_I2C_RESET 0D14                      i2c_setBuffer@buffer 0046  
                         _SSP1CLKPPSbits 000EB7                          ?_PMD_Initialize 0031  
         ?_i2c1_driver_clearBusCollision 0031                      ??i2_do_I2C_TX_EMPTY 0031  
                  ??_i2c_masterOperation 0049                        ?_i2c1_driver_open 0031  
                      __end_of_do_I2C_RX 04A0                        __end_of_do_I2C_TX 0226  
               ??i2_do_I2C_SEND_ADR_READ 0032                        ?_i2c1_driver_stop 0031  
                 ?_i2c1_driver_setI2cISR 0046                       ??_i2c1_driver_open 0046  
               ?i2_rd2RegCompleteHandler 003C                       ??_i2c1_driver_stop 0046  
                                _OSCCON1 000ED8                                  _OSCCON3 000EDA  
                          ?_mssp1_setIRQ 0031                   __size_ofi2_setCallBack 0078  
                                _OSCTUNE 000EDD                                  _SSP1ADD 000F93  
               ?i2_wr2RegCompleteHandler 003C                                  _SSP1BUF 000F92  
                 __end_of_mssp1_clearIRQ 0DBC                                  _SSP1MSK 000F94  
                    __size_of_i2c_poller 0018                  ??_do_I2C_SEND_ADR_WRITE 0047  
    _do_I2C_SEND_RESTART_WRITE$intlevel0 0CD4              ??_do_I2C_SEND_RESTART_WRITE 0046  
                     _i2c1_driver_TXData 0D56                               ??_i2c_open 0049  
            __size_ofi2_i2c_restartWrite 0004                 __end_ofi2_mssp1_clearIRQ 0DC2  
                     _i2c1_driver_i2cISR 002B                                  _i2c_ISR 0726  
              ??_rdBlkRegCompleteHandler 004A                __end_ofi2_do_I2C_TX_EMPTY 063C  
                i2_i2c1_driver_getRXData 0DF8                                  __Hparam 0000  
                  _returnReset$intlevel0 0D24                    _do_I2C_RCEN$intlevel0 0C52  
                     _i2c1_driver_isNACK 0BC0                      ?_i2c1_driver_TXData 0031  
                                __Lparam 0000         _do_I2C_DO_ADDRESS_NACK$intlevel0 06E0  
    __size_of_i2c_setAddressNACKCallback 001C                        ??_do_I2C_TX_EMPTY 0046  
                    ?_i2c1_driver_isNACK 0031                          ?i2_do_I2C_RESET 0031  
                                __pcinit 0916                                  __ramtop 0F00  
                 i2c_writeNBytes@address 009E                       i2c_readNBytes@data 0092  
                                __ptext0 02B2                                  __ptext1 063C  
                                __ptext2 0AA8                                  __ptext3 0D46  
                                __ptext4 094C                                  __ptext5 00E0  
                                __ptext6 0C6C                                  __ptext7 0C7A  
                                __ptext8 0B94                                  __ptext9 0D4E  
                    __end_of_do_I2C_IDLE 0C6C                      __end_of_do_I2C_RCEN 0C5C  
                       ??i2_mssp1_setIRQ 0031                    _OSCILLATOR_Initialize 0B64  
            __end_of_do_I2C_SEND_RESTART 0CCE                           ??_mssp1_setIRQ 0046  
                   ??_i2c1_driver_TXData 0046                 ??_PIN_MANAGER_Initialize 0046  
                 i2c_masterOperation@ret 0091                          ?_mssp1_clearIRQ 0031  
             _do_I2C_SEND_STOP$intlevel0 0CB8              ?i2_do_I2C_SEND_RESTART_READ 0031  
               _do_I2C_SEND_RESTART_READ 0CDC               __size_of_SYSTEM_Initialize 0012  
                                main@rec 009F                     __size_of_returnReset 000A  
                   end_of_initialization 0942                     ??_i2c1_driver_isNACK 0046  
              __size_of_i2c_restartWrite 000A             __end_of_i2c1_driver_sendNACK 0DAA  
                 ?_rd1RegCompleteHandler 009A                          _i2c_writeNBytes 063C  
                       ?_i2c_masterWrite 0031                   ?_wr1RegCompleteHandler 009A  
           __end_of_i2c1_driver_resetBus 0E16                         ??_i2c_readNBytes 004A  
                          i2_setCallBack 04A0           __size_ofi2_do_I2C_SEND_RESTART 0008  
          __end_ofi2_do_I2C_SEND_RESTART 0D86                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc2 000FDE                   __size_ofi2_returnReset 0004  
           ?i2_do_I2C_SEND_RESTART_WRITE 0031                _do_I2C_SEND_RESTART_WRITE 0CCE  
                ?i2_i2c1_driver_sendNACK 0031                         ??_i2c_masterRead 0049  
                  __CFG_WDTCPS$WDTCPS_31 000000                          i2_i2c_setBuffer 0B7C  
                ?i2_i2c1_driver_resetBus 0031          __end_ofi2_rd2RegCompleteHandler 0A18  
                             _returnStop 0D28          __end_of_rdBlkRegCompleteHandler 06DA  
               __end_of_do_I2C_SEND_STOP 0CC0                                i2_i2c_ISR 07F6  
        __end_ofi2_wr2RegCompleteHandler 0AA8          __size_ofi2_do_I2C_SEND_ADR_READ 000E  
   __size_of_i2c_setDataCompleteCallback 001C          ??i2_i2c_setDataCompleteCallback 003C  
                            returnStop@p 009A                         __CFG_FEXTOSC$OFF 000000  
               __end_of_mssp1_disableIRQ 0DB6                     __size_ofi2_do_I2C_RX 0072  
                   __size_ofi2_do_I2C_TX 008C             i2c_setDataCompleteCallback@p 0098  
              ??i2_i2c1_driver_getRXData 0031                  i2_rd1RegCompleteHandler 0A18  
             __size_ofi2_do_I2C_TX_EMPTY 0056                  i2_wr1RegCompleteHandler 0A48  
          __size_of_do_I2C_SEND_ADR_READ 0014                           ?i2_setCallBack 0031  
                           ??_i2c_poller 0049              ??i2_rdBlkRegCompleteHandler 003E  
         __end_ofi2_i2c1_driver_sendNACK 0DCE                              _do_I2C_IDLE 0C5C  
                            _do_I2C_RCEN 0C4C             __end_of_INTERRUPT_Initialize 0DF8  
         __end_ofi2_i2c1_driver_resetBus 0E18               ??i2_do_I2C_DO_ADDRESS_NACK 0031  
       __end_ofi2_do_I2C_DO_NACK_RESTART 0D66            ??i2_do_I2C_SEND_RESTART_WRITE 0031  
                     _mssp1_IRQisEnabled 0C28                   ?_OSCILLATOR_Initialize 0031  
                             ?i2_i2c_ISR 0031             __size_of_do_I2C_DO_NACK_STOP 000E  
                     _mssp1_waitForEvent 0BAA                  ?_do_I2C_DO_NACK_RESTART 0031  
                    start_initialization 0916                                _i2c_close 0AE0  
                    _i2c_busCollisionISR 0DD4          __size_of_PIN_MANAGER_Initialize 007A  
                    ?_mssp1_IRQisEnabled 0031                          i2setCallBack@cb 0031  
                __end_of_i2c_writeNBytes 068C                          i2_do_I2C_DO_ACK 0D6E  
                          i2_returnReset 0E04                      ?_mssp1_waitForEvent 0046  
                           setCallBack@p 0093                       __end_of_i2c_poller 0B4C  
           __size_of_i2c1_driver_sendACK 0006                          i2c_open@address 0090  
                i2c_setBuffer@bufferSize 0048                  ??_i2c1_driver_getRXData 0046  
                 rd1RegCompleteHandler@p 009A             __size_of_i2c1_driver_restart 0004  
            __size_ofi2_i2c1_driver_stop 0004             __size_of_i2c1_driver_startRX 0004  
                  i2_do_I2C_DO_NACK_STOP 0D66                   i2_do_I2C_SEND_ADR_READ 0CF8  
                  __end_of_i2c_setBuffer 0B64                        __size_of_i2c_open 00B4  
                   ?_i2c_busCollisionISR 0031                         __CFG_LPBOREN$OFF 000000  
                   __end_of_mssp1_setIRQ 0DA4                  __end_ofi2_i2c_setBuffer 0B94  
                   ??_mssp1_IRQisEnabled 0046                       i2_do_I2C_SEND_STOP 0D76  
                       ??_PMD_Initialize 0046                     ??_mssp1_waitForEvent 0048  
                 wr1RegCompleteHandler@p 009A                    i2_i2c1_driver_sendACK 0DCE  
                          ?_do_I2C_RESET 0031             __end_ofi2_i2c1_driver_TXData 0D9E  
                            __pdataBANK0 0060                    i2i2c1_driver_TXData@d 0031  
              _do_I2C_TX_EMPTY$intlevel0 0590      __size_ofi2_do_I2C_SEND_RESTART_READ 0008  
                  i2_i2c1_driver_restart 0E10                              ?_returnStop 009A  
                    ?i2_do_I2C_SEND_STOP 0031                  ??_i2c1_driver_setI2cISR 0049  
                  i2_i2c1_driver_startRX 0DFC                      i2i2c_restartWrite@p 003C  
         __end_of_do_I2C_DO_NACK_RESTART 0C96                     _i2c1_driver_sendNACK 0DA4  
           __end_ofi2_i2c1_driver_isNACK 0BEC                              __pbssCOMRAM 0001  
                             ?_i2c_close 0031                     _i2c1_driver_resetBus 0E14  
              i2_rdBlkRegCompleteHandler 07B2                            __pcstackBANK0 0090  
                         ?i2_returnReset 003C                                _do_I2C_RX 0428  
                              _do_I2C_TX 0194                ??i2_rd1RegCompleteHandler 003E  
         __size_of_do_I2C_SEND_ADR_WRITE 0014    __end_ofi2_i2c_setDataCompleteCallback 0B34  
 __size_ofi2_i2c_setDataCompleteCallback 001C            i2_i2c_setDataCompleteCallback 0B18  
          __end_of_do_I2C_SEND_ADR_WRITE 0C00                ??i2_wr1RegCompleteHandler 003E  
                       _i2c_restartWrite 0D14                     ??i2_do_I2C_SEND_STOP 0031  
             _i2c_restartWrite$intlevel0 0D1A                __size_of_i2c1_driver_open 0016  
                      ?i2_mssp1_clearIRQ 0031                __size_of_i2c1_driver_stop 0004  
                        ??i2_setCallBack 0036                                 ?_i2c_ISR 0031  
        _do_I2C_SEND_ADR_WRITE$intlevel0 0BF2                          _do_I2C_TX_EMPTY 058A  
                          ??_setCallBack 0046         __size_ofi2_rd2RegCompleteHandler 0030  
                  _rd2RegCompleteHandler 0836                       ??i2_mssp1_clearIRQ 0031  
                  ??_i2c_busCollisionISR 0031         __size_ofi2_wr2RegCompleteHandler 0030  
                 _PIN_MANAGER_Initialize 03AE                    _wr2RegCompleteHandler 08DE  
                       ??i2_do_I2C_RESET 0031                                __pintcode 0008  
                  __end_ofi2_do_I2C_IDLE 0D46                    __end_ofi2_do_I2C_RCEN 0D3C  
                         ??_do_I2C_RESET 0046                                __ptext100 0DCE  
                              __ptext101 0DD4                                __ptext102 0DDA  
                              __ptext103 0000              __end_of_i2c_masterOperation 09B8  
               ??_do_I2C_DO_ADDRESS_NACK 0046              _i2c1_driver_busCollisionISR 002E  
                  __end_of_do_I2C_DO_ACK 0CB2             ??_INTERRUPT_InterruptManager 0034  
             ??_do_I2C_SEND_RESTART_READ 0046                    ?_i2c1_driver_sendNACK 0031  
                            ??i2_i2c_ISR 0034                  __end_ofi2_do_I2C_DO_ACK 0D76  
                       ??_mssp1_clearIRQ 0046                 i2_do_I2C_DO_NACK_RESTART 0D5E  
                  ?_i2c1_driver_resetBus 0031       __size_of_do_I2C_SEND_RESTART_WRITE 000E  
               ?i2_do_I2C_SEND_ADR_WRITE 0031                               ?_do_I2C_RX 0031  
                             ?_do_I2C_TX 0031                        _i2c1_driver_start 0DF0  
                       ?_i2c_writeNBytes 009A               __end_ofi2_i2c_restartWrite 0E04  
                ??_rd1RegCompleteHandler 004A                        i2c_readNBytes@len 0094  
                   _INTERRUPT_Initialize 0DF4                        _i2c_ISR$intlevel0 072C  
                     ?_i2c1_driver_start 0031                  ??_wr1RegCompleteHandler 004A  
                 ?i2_do_I2C_DO_NACK_STOP 0031                      __size_of_returnStop 000A  
                               _PIE3bits 000EC5                      __CFG_BORV$VBOR_2P45 000000  
                    ??_i2c1_driver_start 0046                                 i2u140_48 0790  
                               i2u140_49 07A4                                 i2u142_48 0252  
                               i2u142_49 0266      __size_of_INTERRUPT_InterruptManager 00D4  
                               i2u160_48 007C                                 i2u160_49 0090  
                               i2u145_48 0560                                 i2u153_48 081E  
                               i2u145_49 0574                                 i2u153_49 0832  
                               i2u146_48 060E                                 i2u146_49 0622  
                               i2u157_48 0062                                 _PIR3bits 000ECD  
                       ?i2_i2c_setBuffer 0031                   ?i2_i2c1_driver_sendACK 0031  
                               _SSP1CON1 000F96                                 _SSP1CON2 000F97  
           ?_i2c_setDataCompleteCallback 0095                                 _SSP1STAT 000F95  
                    __end_of_setCallBack 03AE                   ?i2_i2c1_driver_restart 0031  
                 ?i2_i2c1_driver_startRX 0031             i2c_setAddressNACKCallback@cb 0095  
                      ?_do_I2C_SEND_STOP 0031                          ??i2_returnReset 003E  
                            ??_i2c_close 0046                __end_of_i2c1_driver_start 0DF4  
                          ??_returnReset 004A                       ??_do_I2C_SEND_STOP 0046  
            __size_of_i2c1_driver_TXData 0008             ??_i2c_setAddressNACKCallback 0047  
      __end_of_do_I2C_SEND_RESTART_WRITE 0CDC                  __end_of_do_I2C_TX_EMPTY 05E6  
                              copy_data0 092A                    ?_INTERRUPT_Initialize 0031  
               ?_rdBlkRegCompleteHandler 009A                        ?_mssp1_disableIRQ 0031  
           __size_of_do_I2C_SEND_RESTART 000E              __size_of_i2c1_driver_isNACK 0016  
                   i2_i2c1_driver_TXData 0D96                  _do_I2C_DO_ACK$intlevel0 0CAA  
                               _i2c_open 00E0                    __size_of_mssp1_setIRQ 0006  
                         i2setCallBack@p 0034                       ??_mssp1_disableIRQ 0046  
                 ?_rd2RegCompleteHandler 009A                      _do_I2C_DO_NACK_STOP 0C96  
                       __size_of_i2c_ISR 0046                   ?_wr2RegCompleteHandler 009A  
        _wr2RegCompleteHandler$intlevel0 08E4          _rd2RegCompleteHandler$intlevel0 083C  
                               __Hrparam 0000                     i2_i2c1_driver_isNACK 0BD6  
                               __Lrparam 0000                       __CFG_BOREN$SBORDIS 000000  
                    i2c_writeNBytes@data 009A                             ?_do_I2C_IDLE 0031  
                           ?_do_I2C_RCEN 0031                  ??_OSCILLATOR_Initialize 0046  
                    _i2c1_driver_sendACK 0DAA                 __size_of_i2c_masterWrite 0008  
                  i2_do_I2C_SEND_RESTART 0D7E          __size_of_do_I2C_DO_ADDRESS_NACK 004C  
                    i2c1_driver_TXData@d 0046                   ??_i2c1_driver_sendNACK 0046  
          ??_i2c_setDataCompleteCallback 0047          __end_ofi2_do_I2C_SEND_ADR_WRITE 0CF8  
       ??_i2c1_driver_setBusCollisionISR 0049          ?_i2c1_driver_setBusCollisionISR 0046  
     _do_I2C_SEND_RESTART_READ$intlevel0 0CE2                      _i2c1_driver_restart 0DEC  
                          ?i2_returnStop 003C                     ?_do_I2C_DO_NACK_STOP 0031  
                    _i2c1_driver_startRX 0DE4             __end_of_do_I2C_SEND_ADR_READ 0C14  
                 ??_i2c1_driver_resetBus 0046                         ?i2_do_I2C_DO_ACK 0031  
                          ??i2_do_I2C_RX 0031                            ??i2_do_I2C_TX 0032  
                           _mssp1_setIRQ 0D9E                              ??_do_I2C_RX 0046  
                            ??_do_I2C_TX 0047                                 __ptext10 0982  
                               __ptext11 0C28                                 __ptext20 0CA4  
                               __ptext12 0B34                                 __ptext21 0C4C  
                               __ptext13 0BAA                                 __ptext30 058A  
                               __ptext22 0BEC                                 __ptext14 0726  
                               __ptext31 0D9E                                 __ptext23 0C00  
                               __ptext15 0428                                 __ptext40 086E  
                               __ptext32 0BC0                                 __ptext24 0CB2  
                               __ptext16 0194                                 __ptext41 08A6  
                               __ptext33 0D56                                 __ptext25 0CC0  
                               __ptext17 06DA                                 __ptext50 0DEC  
                               __ptext42 0D14                                 __ptext34 0DE0  
                               __ptext26 0CCE                                 __ptext18 0C88  
                               __ptext51 0DAA                                 __ptext43 0D1E  
                               __ptext35 0DA4                                 __ptext27 0CDC  
                               __ptext19 0C96                                 __ptext60 0DF4  
                               __ptext52 0DF0                                 __ptext44 0D28  
                               __ptext36 0E14                                 __ptext28 0C5C  
                               __ptext53 0AE0                                 __ptext45 08DE  
                               __ptext37 0DE4                                 __ptext29 0C14  
                               __ptext70 0D32                                 __ptext62 07F6  
                               __ptext54 0DB0                                 __ptext46 0AC4  
                               __ptext38 068C                                 __ptext71 0CEA  
                               __ptext63 0DBC                                 __ptext55 0DB6  
                               __ptext47 0334                                 __ptext39 0836  
                               __ptext80 0DC2                                 __ptext72 0CF8  
                               __ptext64 0518                                 __ptext56 0C3A  
                               __ptext48 0B4C                                 __ptext81 0BD6  
                               __ptext73 0D76                                 __ptext65 0226  
                               __ptext57 0AFC                                 __ptext49 0DE8  
                               __ptext90 0A48                                 __ptext82 0D96  
                               __ptext74 0D7E                                 __ptext66 076C  
                               __ptext58 03AE                                 __ptext91 0E00  
                               __ptext83 0DF8                                 __ptext75 0D86  
                               __ptext67 0D5E                                 __ptext59 0B64  
                               __ptext92 0E04                                 __ptext84 0DC8  
                               __ptext76 0D8E                                 __ptext68 0D66  
                               __ptext93 0E08                                 __ptext85 0E16  
                               __ptext77 0D3C                                 __ptext69 0D6E  
                               __ptext94 0A78                                 __ptext86 0DFC  
                               __ptext78 0D06                                 __ptext95 0B18  
                               __ptext87 07B2                                 __ptext79 05E6  
                               __ptext96 04A0                                 __ptext88 09E8  
                               __ptext97 0B7C                                 __ptext89 0A18  
                               __ptext98 0E0C                                 __ptext99 0E10  
                           _SSP1CON1bits 000F96                             _SSP1CON2bits 000F97  
                   ?_i2c1_driver_sendACK 0031                     __end_of_do_I2C_RESET 0C28  
                  ?i2_i2c1_driver_TXData 0031                  ?i2_do_I2C_SEND_ADR_READ 0031  
                __size_ofi2_mssp1_setIRQ 0006                     ?_i2c1_driver_restart 0031  
                    __end_of_returnReset 0D28                         _i2c1_driver_open 0B94  
     __size_ofi2_rdBlkRegCompleteHandler 0044                  i2_rd2RegCompleteHandler 09E8  
                       _i2c1_driver_stop 0DE8                            __size_of_main 0082  
                   ?_i2c1_driver_startRX 0031           __size_of_i2c1_driver_getRXData 0004  
          __end_of_i2c1_driver_getRXData 0DE4                  i2_wr2RegCompleteHandler 0A78  
                   __CFG_WDTCWS$WDTCWS_7 000000                              _setCallBack 0334  
                  ?i2_i2c1_driver_isNACK 0031                  i2c_masterOperation@read 0090  
                               int$flags 004A       __end_of_INTERRUPT_InterruptManager 00DC  
             _INTERRUPT_InterruptManager 0008                                 main@addr 00A2  
                               main@data 00A0                             _SSP1STATbits 000F95  
                         ??i2_returnStop 003E         __end_of_do_I2C_SEND_RESTART_READ 0CEA  
                           ??_returnStop 004A                 __end_of_i2c_restartWrite 0D1E  
                  ??_do_I2C_DO_NACK_STOP 0046                  __size_of_i2c_readNBytes 0036  
              mssp1_waitForEvent@timeout 0046           __size_of_i2c1_driver_setI2cISR 000E  
          __end_of_i2c1_driver_setI2cISR 0C7A                               _INTCONbits 000FF2  
             __size_of_i2c1_driver_start 0004                       i2c_writeNBytes@len 009C  
                 ??_INTERRUPT_Initialize 0046                 ?i2_i2c1_driver_getRXData 0031  
                __size_of_i2c_masterRead 0008           __end_ofi2_do_I2C_SEND_ADR_READ 0D06  
                  ??_i2c1_driver_sendACK 0046                         ?_do_I2C_TX_EMPTY 0031  
      __size_ofi2_do_I2C_DO_ADDRESS_NACK 0046               __end_ofi2_i2c1_driver_stop 0E10  
              ?i2_do_I2C_DO_ADDRESS_NACK 0031                   _do_I2C_DO_ADDRESS_NACK 06DA  
                               intlevel2 0000                   _do_I2C_RESET$intlevel0 0C1A  
                  ??_i2c1_driver_restart 0046                   rd2RegCompleteHandler@p 009A  
                  ??_i2c1_driver_startRX 0046               i2rdBlkRegCompleteHandler@p 003C  
                    __end_ofi2_do_I2C_RX 058A                      __end_ofi2_do_I2C_TX 02B2  
                ?_PIN_MANAGER_Initialize 0031                        i2c_restartWrite@p 009A  
                      __CFG_CLKOUTEN$OFF 000000                       __end_of_returnStop 0D32  
            __size_of_mssp1_IRQisEnabled 0012      __end_ofi2_do_I2C_SEND_RESTART_WRITE 0D8E  
            i2_do_I2C_SEND_RESTART_WRITE 0D86                   ?i2_do_I2C_SEND_RESTART 0031  
             ??i2_do_I2C_DO_NACK_RESTART 0031                   wr2RegCompleteHandler@p 009A  
            __size_of_mssp1_waitForEvent 0016                i2i2c_setBuffer@bufferSize 0033  
              __size_ofi2_mssp1_clearIRQ 0006                        ??_i2c_masterWrite 0049  
     __end_of_i2c_setAddressNACKCallback 0AC4               _i2c_setAddressNACKCallback 0AA8  
                 __size_of_i2c_setBuffer 0018                              _returnReset 0D1E  
       _do_I2C_DO_NACK_RESTART$intlevel0 0C8E                 i2rd1RegCompleteHandler@p 003C  
                ??i2_do_I2C_DO_NACK_STOP 0031                   ??i2_i2c1_driver_TXData 0031  
              ??i2_rd2RegCompleteHandler 003E             ??i2_do_I2C_SEND_RESTART_READ 0031  
         __end_of_PIN_MANAGER_Initialize 0428              __end_of_i2c_busCollisionISR 0DDA  
         __size_of_rd1RegCompleteHandler 0038                ??i2_wr2RegCompleteHandler 003E  
          __end_of_rd1RegCompleteHandler 08A6              __size_ofi2_do_I2C_SEND_STOP 0008  
               ??i2_i2c1_driver_sendNACK 0031           __size_of_wr1RegCompleteHandler 0038  
                 ??i2_i2c1_driver_isNACK 0031            __end_of_wr1RegCompleteHandler 08DE  
       __size_ofi2_do_I2C_SEND_ADR_WRITE 000E                    _do_I2C_SEND_ADR_WRITE 0BEC  
                ??i2_i2c1_driver_sendACK 0031                     _do_I2C_SEND_ADR_READ 0C00  
                  __end_ofi2_setCallBack 0518                 ??i2_i2c1_driver_resetBus 0031  
               i2wr1RegCompleteHandler@p 003C                  ??i2_i2c1_driver_restart 0031  
                     i2_i2c_restartWrite 0E00  
