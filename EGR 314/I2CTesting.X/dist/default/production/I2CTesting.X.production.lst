

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Apr 15 19:43:16 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1
    69                           	psect	text58,global,reloc=2,class=CODE,delta=1
    70                           	psect	text59,global,reloc=2,class=CODE,delta=1
    71                           	psect	text60,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	text62,global,reloc=2,class=CODE,delta=1
    74                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    75                           	psect	text64,global,reloc=2,class=CODE,delta=1
    76                           	psect	text65,global,reloc=2,class=CODE,delta=1
    77                           	psect	text66,global,reloc=2,class=CODE,delta=1
    78                           	psect	text67,global,reloc=2,class=CODE,delta=1
    79                           	psect	text68,global,reloc=2,class=CODE,delta=1
    80                           	psect	text69,global,reloc=2,class=CODE,delta=1
    81                           	psect	text70,global,reloc=2,class=CODE,delta=1
    82                           	psect	text71,global,reloc=2,class=CODE,delta=1
    83                           	psect	text72,global,reloc=2,class=CODE,delta=1
    84                           	psect	text73,global,reloc=2,class=CODE,delta=1
    85                           	psect	text74,global,reloc=2,class=CODE,delta=1
    86                           	psect	text75,global,reloc=2,class=CODE,delta=1
    87                           	psect	text76,global,reloc=2,class=CODE,delta=1
    88                           	psect	text77,global,reloc=2,class=CODE,delta=1
    89                           	psect	text78,global,reloc=2,class=CODE,delta=1
    90                           	psect	text79,global,reloc=2,class=CODE,delta=1
    91                           	psect	text80,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text87,global,reloc=2,class=CODE,delta=1
    99                           	psect	text88,global,reloc=2,class=CODE,delta=1
   100                           	psect	text89,global,reloc=2,class=CODE,delta=1
   101                           	psect	text90,global,reloc=2,class=CODE,delta=1
   102                           	psect	text91,global,reloc=2,class=CODE,delta=1
   103                           	psect	text92,global,reloc=2,class=CODE,delta=1
   104                           	psect	text93,global,reloc=2,class=CODE,delta=1
   105                           	psect	text94,global,reloc=2,class=CODE,delta=1
   106                           	psect	text95,global,reloc=2,class=CODE,delta=1
   107                           	psect	text96,global,reloc=2,class=CODE,delta=1
   108                           	psect	text97,global,reloc=2,class=CODE,delta=1
   109                           	psect	text98,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text99,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	text101,global,reloc=2,class=CODE,delta=1
   113                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   115                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   117                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   118  0000                     
   119                           ; Version 1.45
   120                           ; Generated 16/11/2017 GMT
   121                           ; 
   122                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC18F47K40 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153  0000                     
   154                           	psect	idataBANK0
   155  0009BA                     __pidataBANK0:
   156                           	opt stack 0
   157                           
   158                           ;initializer for _fsmStateTable
   159  0009BA  5E                 	db	low _do_I2C_IDLE
   160  0009BB  0C                 	db	high _do_I2C_IDLE
   161  0009BC  00                 	db	low (_do_I2C_IDLE shr (0+16))
   162  0009BD  02                 	db	low _do_I2C_SEND_ADR_READ
   163  0009BE  0C                 	db	high _do_I2C_SEND_ADR_READ
   164  0009BF  00                 	db	low (_do_I2C_SEND_ADR_READ shr (0+16))
   165  0009C0  EE                 	db	low _do_I2C_SEND_ADR_WRITE
   166  0009C1  0B                 	db	high _do_I2C_SEND_ADR_WRITE
   167  0009C2  00                 	db	low (_do_I2C_SEND_ADR_WRITE shr (0+16))
   168  0009C3  94                 	db	low _do_I2C_TX
   169  0009C4  01                 	db	high _do_I2C_TX
   170  0009C5  00                 	db	low (_do_I2C_TX shr (0+16))
   171  0009C6  2A                 	db	low _do_I2C_RX
   172  0009C7  04                 	db	high _do_I2C_RX
   173  0009C8  00                 	db	low (_do_I2C_RX shr (0+16))
   174  0009C9  4E                 	db	low _do_I2C_RCEN
   175  0009CA  0C                 	db	high _do_I2C_RCEN
   176  0009CB  00                 	db	low (_do_I2C_RCEN shr (0+16))
   177  0009CC  8C                 	db	low _do_I2C_TX_EMPTY
   178  0009CD  05                 	db	high _do_I2C_TX_EMPTY
   179  0009CE  00                 	db	low (_do_I2C_TX_EMPTY shr (0+16))
   180  0009CF  DE                 	db	low _do_I2C_SEND_RESTART_READ
   181  0009D0  0C                 	db	high _do_I2C_SEND_RESTART_READ
   182  0009D1  00                 	db	low (_do_I2C_SEND_RESTART_READ shr (0+16))
   183  0009D2  D0                 	db	low _do_I2C_SEND_RESTART_WRITE
   184  0009D3  0C                 	db	high _do_I2C_SEND_RESTART_WRITE
   185  0009D4  00                 	db	low (_do_I2C_SEND_RESTART_WRITE shr (0+16))
   186  0009D5  C2                 	db	low _do_I2C_SEND_RESTART
   187  0009D6  0C                 	db	high _do_I2C_SEND_RESTART
   188  0009D7  00                 	db	low (_do_I2C_SEND_RESTART shr (0+16))
   189  0009D8  B4                 	db	low _do_I2C_SEND_STOP
   190  0009D9  0C                 	db	high _do_I2C_SEND_STOP
   191  0009DA  00                 	db	low (_do_I2C_SEND_STOP shr (0+16))
   192  0009DB  A6                 	db	low _do_I2C_DO_ACK
   193  0009DC  0C                 	db	high _do_I2C_DO_ACK
   194  0009DD  00                 	db	low (_do_I2C_DO_ACK shr (0+16))
   195  0009DE  98                 	db	low _do_I2C_DO_NACK_STOP
   196  0009DF  0C                 	db	high _do_I2C_DO_NACK_STOP
   197  0009E0  00                 	db	low (_do_I2C_DO_NACK_STOP shr (0+16))
   198  0009E1  8A                 	db	low _do_I2C_DO_NACK_RESTART
   199  0009E2  0C                 	db	high _do_I2C_DO_NACK_RESTART
   200  0009E3  00                 	db	low (_do_I2C_DO_NACK_RESTART shr (0+16))
   201  0009E4  16                 	db	low _do_I2C_RESET
   202  0009E5  0C                 	db	high _do_I2C_RESET
   203  0009E6  00                 	db	low (_do_I2C_RESET shr (0+16))
   204  0009E7  DC                 	db	low _do_I2C_DO_ADDRESS_NACK
   205  0009E8  06                 	db	high _do_I2C_DO_ADDRESS_NACK
   206  0009E9  00                 	db	low (_do_I2C_DO_ADDRESS_NACK shr (0+16))
   207  0000                     _SSP1DATPPSbits	set	3768
   208  0000                     _RC4PPS	set	3835
   209  0000                     _RC3PPS	set	3834
   210  0000                     _SSP1CLKPPSbits	set	3767
   211  0000                     _PIR3bits	set	3789
   212  0000                     _PIE3bits	set	3781
   213  0000                     _PMD5	set	3814
   214  0000                     _PMD4	set	3813
   215  0000                     _PMD3	set	3812
   216  0000                     _PMD2	set	3811
   217  0000                     _PMD1	set	3810
   218  0000                     _PMD0	set	3809
   219  0000                     _OSCTUNE	set	3805
   220  0000                     _OSCFRQ	set	3806
   221  0000                     _OSCEN	set	3804
   222  0000                     _OSCCON3	set	3802
   223  0000                     _OSCCON1	set	3800
   224  0000                     _ODCOND	set	3876
   225  0000                     _ODCONC	set	3871
   226  0000                     _ODCONB	set	3863
   227  0000                     _ODCONA	set	3855
   228  0000                     _ODCONE	set	3884
   229  0000                     _WPUC	set	3872
   230  0000                     _WPUA	set	3856
   231  0000                     _WPUB	set	3864
   232  0000                     _WPUE	set	3885
   233  0000                     _WPUD	set	3877
   234  0000                     _ANSELA	set	3857
   235  0000                     _ANSELE	set	3886
   236  0000                     _ANSELD	set	3878
   237  0000                     _ANSELB	set	3865
   238  0000                     _ANSELC	set	3873
   239  0000                     _LATAbits	set	3971
   240  0000                     _INTCONbits	set	4082
   241  0000                     _TRISD	set	3979
   242  0000                     _TRISC	set	3978
   243  0000                     _TRISB	set	3977
   244  0000                     _TRISA	set	3976
   245  0000                     _TRISE	set	3980
   246  0000                     _LATC	set	3973
   247  0000                     _LATB	set	3972
   248  0000                     _LATA	set	3971
   249  0000                     _LATD	set	3974
   250  0000                     _LATE	set	3975
   251  0000                     _SSP1STATbits	set	3989
   252  0000                     _SSP1MSK	set	3988
   253  0000                     _SSP1BUF	set	3986
   254  0000                     _SSP1CON2bits	set	3991
   255  0000                     _SSP1ADD	set	3987
   256  0000                     _SSP1CON2	set	3991
   257  0000                     _SSP1CON1	set	3990
   258  0000                     _SSP1STAT	set	3989
   259  0000                     _SSP1CON1bits	set	3990
   260                           
   261                           ; #config settings
   262  0000                     
   263                           	psect	cinit
   264  000918                     __pcinit:
   265                           	opt stack 0
   266  000918                     start_initialization:
   267                           	opt stack 0
   268  000918                     __initialization:
   269                           	opt stack 0
   270                           
   271                           ; Initialize objects allocated to BANK0 (48 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273  000918  0EBA               	movlw	low __pidataBANK0
   274  00091A  6EF6               	movwf	tblptrl,c
   275  00091C  0E09               	movlw	high __pidataBANK0
   276  00091E  6EF7               	movwf	tblptrh,c
   277  000920  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278  000922  6EF8               	movwf	tblptru,c
   279  000924  EE00  F060         	lfsr	0,__pdataBANK0
   280  000928  EE10 F030          	lfsr	1,48
   281  00092C                     copy_data0:
   282  00092C  0009               	tblrd		*+
   283  00092E  CFF5 FFEE          	movff	tablat,postinc0
   284  000932  50E5               	movf	postdec1,w,c
   285  000934  50E1               	movf	fsr1l,w,c
   286  000936  E1FA               	bnz	copy_data0
   287                           
   288                           ; Clear objects allocated to COMRAM (48 bytes)
   289  000938  EE00  F001         	lfsr	0,__pbssCOMRAM
   290  00093C  0E30               	movlw	48
   291  00093E                     clear_0:
   292  00093E  6AEE               	clrf	postinc0,c
   293  000940  06E8               	decf	wreg,f,c
   294  000942  E1FD               	bnz	clear_0
   295  000944                     end_of_initialization:
   296                           	opt stack 0
   297  000944                     __end_of__initialization:
   298                           	opt stack 0
   299  000944  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   300  000946  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   301  000948  0100               	movlb	0
   302  00094A  EF59  F001         	goto	_main	;jump to C main() function
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           postdec1	equ	0xFE5
   310                           fsr1l	equ	0xFE1
   311                           
   312                           	psect	bssCOMRAM
   313  000001                     __pbssCOMRAM:
   314                           	opt stack 0
   315  000001                     _i2c_status:
   316                           	opt stack 0
   317  000001                     	ds	42
   318  00002B                     _i2c1_driver_i2cISR:
   319                           	opt stack 0
   320  00002B                     	ds	3
   321  00002E                     _i2c1_driver_busCollisionISR:
   322                           	opt stack 0
   323  00002E                     	ds	3
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           postdec1	equ	0xFE5
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	dataBANK0
   334  000060                     __pdataBANK0:
   335                           	opt stack 0
   336  000060                     _fsmStateTable:
   337                           	opt stack 0
   338  000060                     	ds	48
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           postdec1	equ	0xFE5
   346                           fsr1l	equ	0xFE1
   347                           
   348                           	psect	cstackBANK0
   349  000090                     __pcstackBANK0:
   350                           	opt stack 0
   351  000090                     i2c_open@address:
   352                           	opt stack 0
   353  000090                     i2c_masterOperation@read:
   354                           	opt stack 0
   355  000090                     setCallBack@cb:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x0
   359  000090                     	ds	1
   360  000091                     i2c_open@ret:
   361                           	opt stack 0
   362  000091                     i2c_masterOperation@ret:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x1
   366  000091                     	ds	1
   367  000092                     i2c_readNBytes@data:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x2
   371  000092                     	ds	1
   372  000093                     setCallBack@p:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x3
   376  000093                     	ds	1
   377  000094                     i2c_readNBytes@len:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x4
   381  000094                     	ds	1
   382  000095                     i2c_setDataCompleteCallback@cb:
   383                           	opt stack 0
   384  000095                     i2c_setAddressNACKCallback@cb:
   385                           	opt stack 0
   386                           
   387                           ; 3 bytes @ 0x5
   388  000095                     	ds	1
   389  000096                     i2c_readNBytes@address:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x6
   393  000096                     	ds	2
   394  000098                     i2c_setDataCompleteCallback@p:
   395                           	opt stack 0
   396  000098                     i2c_setAddressNACKCallback@p:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x8
   400  000098                     	ds	2
   401  00009A                     returnStop@p:
   402                           	opt stack 0
   403  00009A                     wr1RegCompleteHandler@p:
   404                           	opt stack 0
   405  00009A                     i2c_writeNBytes@data:
   406                           	opt stack 0
   407  00009A                     rd1RegCompleteHandler@p:
   408                           	opt stack 0
   409  00009A                     rd2RegCompleteHandler@p:
   410                           	opt stack 0
   411  00009A                     wr2RegCompleteHandler@p:
   412                           	opt stack 0
   413  00009A                     rdBlkRegCompleteHandler@p:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0xA
   417  00009A                     	ds	2
   418  00009C                     i2c_writeNBytes@len:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0xC
   422  00009C                     	ds	2
   423  00009E                     i2c_writeNBytes@address:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0xE
   427  00009E                     	ds	1
   428  00009F                     main@data:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0xF
   432  00009F                     	ds	2
   433  0000A1                     main@rec:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x11
   437  0000A1                     	ds	1
   438  0000A2                     main@rec_1221:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x12
   442  0000A2                     	ds	1
   443  0000A3                     main@addr:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x13
   447  0000A3                     	ds	1
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           postdec1	equ	0xFE5
   455                           fsr1l	equ	0xFE1
   456                           
   457                           	psect	cstackCOMRAM
   458  000031                     __pcstackCOMRAM:
   459                           	opt stack 0
   460  000031                     ??i2_i2c1_driver_isNACK:
   461  000031                     i2i2c1_driver_TXData@d:
   462                           	opt stack 0
   463  000031                     i2i2c_setBuffer@buffer:
   464                           	opt stack 0
   465  000031                     i2setCallBack@cb:
   466                           	opt stack 0
   467                           
   468                           ; 3 bytes @ 0x0
   469  000031                     	ds	1
   470  000032                     i2_do_I2C_TX$1023:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x1
   474  000032                     	ds	1
   475  000033                     i2i2c_setBuffer@bufferSize:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x2
   479  000033                     	ds	1
   480  000034                     ??_INTERRUPT_InterruptManager:
   481  000034                     i2setCallBack@p:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x3
   485  000034                     	ds	1
   486  000035                     
   487                           ; 1 bytes @ 0x4
   488  000035                     	ds	1
   489  000036                     i2setCallBack@idx:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x5
   493  000036                     	ds	1
   494  000037                     i2i2c_setDataCompleteCallback@cb:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x6
   498  000037                     	ds	3
   499  00003A                     i2i2c_setDataCompleteCallback@p:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x9
   503  00003A                     	ds	2
   504  00003C                     i2returnStop@p:
   505                           	opt stack 0
   506  00003C                     i2wr1RegCompleteHandler@p:
   507                           	opt stack 0
   508  00003C                     i2rd1RegCompleteHandler@p:
   509                           	opt stack 0
   510  00003C                     i2rd2RegCompleteHandler@p:
   511                           	opt stack 0
   512  00003C                     i2wr2RegCompleteHandler@p:
   513                           	opt stack 0
   514  00003C                     i2rdBlkRegCompleteHandler@p:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0xB
   518  00003C                     	ds	2
   519  00003E                     
   520                           ; 1 bytes @ 0xD
   521  00003E                     	ds	8
   522  000046                     ??_mssp1_IRQisEnabled:
   523  000046                     ??_i2c1_driver_isNACK:
   524  000046                     i2c1_driver_TXData@d:
   525                           	opt stack 0
   526  000046                     i2c_close@ret:
   527                           	opt stack 0
   528  000046                     setCallBack@idx:
   529                           	opt stack 0
   530  000046                     mssp1_waitForEvent@timeout:
   531                           	opt stack 0
   532  000046                     i2c_setBuffer@buffer:
   533                           	opt stack 0
   534  000046                     i2c1_driver_setBusCollisionISR@f:
   535                           	opt stack 0
   536  000046                     i2c1_driver_setI2cISR@f:
   537                           	opt stack 0
   538                           
   539                           ; 3 bytes @ 0x15
   540  000046                     	ds	1
   541  000047                     _do_I2C_TX$1023:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x16
   545  000047                     	ds	1
   546  000048                     i2c_setBuffer@bufferSize:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x17
   550  000048                     	ds	1
   551  000049                     
   552                           ; 1 bytes @ 0x18
   553  000049                     	ds	1
   554  00004A                     tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec1	equ	0xFE5
   561                           fsr1l	equ	0xFE1
   562                           
   563                           ; 1 bytes @ 0x19
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 48 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  rec             1   18[BANK0 ] unsigned char 
   574 ;;  data            2   15[BANK0 ] unsigned char [2]
   575 ;;  addr            1   19[BANK0 ] unsigned char 
   576 ;;  rec             1   17[BANK0 ] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   587 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   589 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   590 ;;Total ram usage:        5 bytes
   591 ;; Hardware stack levels required when called:   15
   592 ;; This function calls:
   593 ;;		_SYSTEM_Initialize
   594 ;;		_i2c_readNBytes
   595 ;;		_i2c_writeNBytes
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text0
   602  0002B2                     __ptext0:
   603                           	opt stack 0
   604  0002B2                     _main:
   605                           	opt stack 16
   606                           
   607                           ;main.c: 51: SYSTEM_Initialize();
   608                           
   609                           ;incstack = 0
   610  0002B2  EC1E  F006         	call	_SYSTEM_Initialize	;wreg free
   611                           
   612                           ;main.c: 58: (INTCONbits.GIE = 1);
   613  0002B6  8EF2               	bsf	intcon,7,c	;volatile
   614                           
   615                           ;main.c: 64: (INTCONbits.PEIE = 1);
   616  0002B8  8CF2               	bsf	intcon,6,c	;volatile
   617                           
   618                           ;main.c: 70: uint8_t data[2];
   619                           ;main.c: 71: uint8_t addr = 0x20;
   620  0002BA  0E20               	movlw	32
   621  0002BC  0100               	movlb	0	; () banked
   622  0002BE  6FA3               	movwf	main@addr& (0+255),b
   623                           
   624                           ; BSR set to: 0
   625                           ;main.c: 82: data[0]=0x13;
   626  0002C0  0E13               	movlw	19
   627  0002C2  6F9F               	movwf	main@data& (0+255),b
   628                           
   629                           ; BSR set to: 0
   630                           ;main.c: 83: i2c_writeNBytes(addr, &data[0], 1);
   631  0002C4  0E9F               	movlw	low main@data
   632  0002C6  6F9A               	movwf	i2c_writeNBytes@data& (0+255),b
   633  0002C8  0E00               	movlw	high main@data
   634  0002CA  6F9B               	movwf	(i2c_writeNBytes@data+1)& (0+255),b
   635  0002CC  0E00               	movlw	0
   636  0002CE  6F9D               	movwf	(i2c_writeNBytes@len+1)& (0+255),b
   637  0002D0  0E01               	movlw	1
   638  0002D2  6F9C               	movwf	i2c_writeNBytes@len& (0+255),b
   639  0002D4  51A3               	movf	main@addr& (0+255),w,b
   640  0002D6  EC1F  F003         	call	_i2c_writeNBytes
   641                           
   642                           ;main.c: 84: uint8_t rec;
   643                           ;main.c: 85: i2c_readNBytes(addr, &rec, 1);
   644  0002DA  0EA1               	movlw	low main@rec
   645  0002DC  0100               	movlb	0	; () banked
   646  0002DE  6F92               	movwf	i2c_readNBytes@data& (0+255),b
   647  0002E0  0E00               	movlw	high main@rec
   648  0002E2  6F93               	movwf	(i2c_readNBytes@data+1)& (0+255),b
   649  0002E4  0E00               	movlw	0
   650  0002E6  6F95               	movwf	(i2c_readNBytes@len+1)& (0+255),b
   651  0002E8  0E01               	movlw	1
   652  0002EA  6F94               	movwf	i2c_readNBytes@len& (0+255),b
   653  0002EC  51A3               	movf	main@addr& (0+255),w,b
   654  0002EE  ECA7  F004         	call	_i2c_readNBytes
   655  0002F2                     
   656                           ;main.c: 93: {
   657                           ;main.c: 95: data[0]=0x13;
   658  0002F2  0E13               	movlw	19
   659  0002F4  0100               	movlb	0	; () banked
   660  0002F6  6F9F               	movwf	main@data& (0+255),b
   661                           
   662                           ; BSR set to: 0
   663                           ;main.c: 96: i2c_writeNBytes(addr, &data[0], 1);
   664  0002F8  0E9F               	movlw	low main@data
   665  0002FA  6F9A               	movwf	i2c_writeNBytes@data& (0+255),b
   666  0002FC  0E00               	movlw	high main@data
   667  0002FE  6F9B               	movwf	(i2c_writeNBytes@data+1)& (0+255),b
   668  000300  0E00               	movlw	0
   669  000302  6F9D               	movwf	(i2c_writeNBytes@len+1)& (0+255),b
   670  000304  0E01               	movlw	1
   671  000306  6F9C               	movwf	i2c_writeNBytes@len& (0+255),b
   672  000308  51A3               	movf	main@addr& (0+255),w,b
   673  00030A  EC1F  F003         	call	_i2c_writeNBytes
   674                           
   675                           ;main.c: 97: uint8_t rec;
   676                           ;main.c: 98: i2c_readNBytes(addr, &rec, 1);
   677  00030E  0EA2               	movlw	low main@rec_1221
   678  000310  0100               	movlb	0	; () banked
   679  000312  6F92               	movwf	i2c_readNBytes@data& (0+255),b
   680  000314  0E00               	movlw	high main@rec_1221
   681  000316  6F93               	movwf	(i2c_readNBytes@data+1)& (0+255),b
   682  000318  0E00               	movlw	0
   683  00031A  6F95               	movwf	(i2c_readNBytes@len+1)& (0+255),b
   684  00031C  0E01               	movlw	1
   685  00031E  6F94               	movwf	i2c_readNBytes@len& (0+255),b
   686  000320  51A3               	movf	main@addr& (0+255),w,b
   687  000322  ECA7  F004         	call	_i2c_readNBytes
   688                           
   689                           ;main.c: 101: if(rec != 0b11111111)
   690  000326  0100               	movlb	0	; () banked
   691  000328  29A2               	incf	main@rec_1221& (0+255),w,b
   692  00032A  B4D8               	btfsc	status,2,c
   693  00032C  D002               	goto	l613
   694                           
   695                           ; BSR set to: 0
   696                           
   697                           ;main.c: 102: do { LATAbits.LATA2 = 0; } while(0);
   698  00032E  9483               	bcf	3971,2,c	;volatile
   699                           
   700                           ; BSR set to: 0
   701  000330  D7E0               	goto	l612
   702  000332                     l613:
   703                           
   704                           ; BSR set to: 0
   705                           
   706                           ; BSR set to: 0
   707                           ;main.c: 103: else
   708                           ;main.c: 104: do { LATAbits.LATA2 = 1; } while(0);
   709  000332  8483               	bsf	3971,2,c	;volatile
   710                           
   711                           ; BSR set to: 0
   712                           
   713                           ; BSR set to: 0
   714                           
   715                           ; BSR set to: 0
   716  000334  D7DE               	goto	l612
   717  000336                     __end_of_main:
   718                           	opt stack 0
   719                           tblptru	equ	0xFF8
   720                           tblptrh	equ	0xFF7
   721                           tblptrl	equ	0xFF6
   722                           tablat	equ	0xFF5
   723                           intcon	equ	0xFF2
   724                           postinc0	equ	0xFEE
   725                           wreg	equ	0xFE8
   726                           postdec1	equ	0xFE5
   727                           fsr1l	equ	0xFE1
   728                           status	equ	0xFD8
   729                           
   730 ;; *************** function _i2c_writeNBytes *****************
   731 ;; Defined at:
   732 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  address         1    wreg     unsigned char 
   735 ;;  data            2   10[BANK0 ] PTR void 
   736 ;;		 -> main@data(2), 
   737 ;;  len             2   12[BANK0 ] unsigned int 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  address         1   14[BANK0 ] unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   749 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   750 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   752 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   753 ;;Total ram usage:        5 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:   14
   756 ;; This function calls:
   757 ;;		_i2c_close
   758 ;;		_i2c_masterWrite
   759 ;;		_i2c_open
   760 ;;		_i2c_setAddressNACKCallback
   761 ;;		_i2c_setBuffer
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text1
   768  00063E                     __ptext1:
   769                           	opt stack 0
   770  00063E                     _i2c_writeNBytes:
   771                           	opt stack 16
   772                           
   773                           ; BSR set to: 0
   774                           ;incstack = 0
   775                           ;i2c_writeNBytes@address stored from wreg
   776  00063E  0100               	movlb	0	; () banked
   777  000640  6F9E               	movwf	i2c_writeNBytes@address& (0+255),b
   778  000642                     
   779                           ;i2c_simple_master.c: 50: while(!i2c_open(address));
   780  000642  0100               	movlb	0	; () banked
   781  000644  519E               	movf	i2c_writeNBytes@address& (0+255),w,b
   782  000646  EC70  F000         	call	_i2c_open
   783  00064A  0900               	iorlw	0
   784  00064C  B4D8               	btfsc	status,2,c
   785  00064E  D7F9               	goto	l3715
   786                           
   787                           ;i2c_simple_master.c: 51: i2c_setBuffer(data,len);
   788  000650  C09A  F046         	movff	i2c_writeNBytes@data,i2c_setBuffer@buffer
   789  000654  C09B  F047         	movff	i2c_writeNBytes@data+1,i2c_setBuffer@buffer+1
   790  000658  C09C  F048         	movff	i2c_writeNBytes@len,i2c_setBuffer@bufferSize
   791  00065C  C09D  F049         	movff	i2c_writeNBytes@len+1,i2c_setBuffer@bufferSize+1
   792  000660  ECA7  F005         	call	_i2c_setBuffer	;wreg free
   793                           
   794                           ;i2c_simple_master.c: 52: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
   795  000664  0E16               	movlw	low _i2c_restartWrite
   796  000666  0100               	movlb	0	; () banked
   797  000668  6F95               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
   798  00066A  0E0D               	movlw	high _i2c_restartWrite
   799  00066C  6F96               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
   800  00066E  0E00               	movlw	low (_i2c_restartWrite shr (0+16))
   801  000670  6F97               	movwf	(i2c_setAddressNACKCallback@cb+2)& (0+255),b
   802  000672  0E00               	movlw	0
   803  000674  6F98               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
   804  000676  0E00               	movlw	0
   805  000678  6F99               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
   806  00067A  EC55  F005         	call	_i2c_setAddressNACKCallback	;wreg free
   807                           
   808                           ;i2c_simple_master.c: 53: i2c_masterWrite();
   809  00067E  ECA4  F006         	call	_i2c_masterWrite	;wreg free
   810  000682  EC71  F005         	call	_i2c_close	;wreg free
   811  000686  06E8               	decf	wreg,f,c
   812  000688  A4D8               	btfss	status,2,c
   813  00068A  0012               	return	
   814  00068C  D7FA               	goto	l531
   815  00068E                     __end_of_i2c_writeNBytes:
   816                           	opt stack 0
   817                           tblptru	equ	0xFF8
   818                           tblptrh	equ	0xFF7
   819                           tblptrl	equ	0xFF6
   820                           tablat	equ	0xFF5
   821                           intcon	equ	0xFF2
   822                           postinc0	equ	0xFEE
   823                           wreg	equ	0xFE8
   824                           postdec1	equ	0xFE5
   825                           fsr1l	equ	0xFE1
   826                           status	equ	0xFD8
   827                           
   828 ;; *************** function _i2c_setAddressNACKCallback *****************
   829 ;; Defined at:
   830 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  cb              3    5[BANK0 ] PTR FTN(PTR void ,)enum 
   833 ;;		 -> i2c_restartWrite(1), 
   834 ;;  p               2    8[BANK0 ] PTR void 
   835 ;;		 -> NULL(0), 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   847 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   850 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   851 ;;Total ram usage:        5 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    7
   854 ;; This function calls:
   855 ;;		_setCallBack
   856 ;; This function is called by:
   857 ;;		_i2c_writeNBytes
   858 ;;		_i2c_write1ByteRegister
   859 ;;		_i2c_read1ByteRegister
   860 ;;		_i2c_read2ByteRegister
   861 ;;		_i2c_write2ByteRegister
   862 ;;		_i2c_readDataBlock
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text2
   867  000AAA                     __ptext2:
   868                           	opt stack 0
   869  000AAA                     _i2c_setAddressNACKCallback:
   870                           	opt stack 22
   871                           
   872                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
   873                           
   874                           ;incstack = 0
   875  000AAA  C095  F090         	movff	i2c_setAddressNACKCallback@cb,setCallBack@cb
   876  000AAE  C096  F091         	movff	i2c_setAddressNACKCallback@cb+1,setCallBack@cb+1
   877  000AB2  C097  F092         	movff	i2c_setAddressNACKCallback@cb+2,setCallBack@cb+2
   878  000AB6  C098  F093         	movff	i2c_setAddressNACKCallback@p,setCallBack@p
   879  000ABA  C099  F094         	movff	i2c_setAddressNACKCallback@p+1,setCallBack@p+1
   880  000ABE  0E02               	movlw	2
   881  000AC0  EC9B  F001         	call	_setCallBack
   882  000AC4  0012               	return		;funcret
   883  000AC6                     __end_of_i2c_setAddressNACKCallback:
   884                           	opt stack 0
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           intcon	equ	0xFF2
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           postdec1	equ	0xFE5
   893                           fsr1l	equ	0xFE1
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _i2c_masterWrite *****************
   897 ;; Defined at:
   898 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      enum E11785
   905 ;; Registers used:
   906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:   13
   919 ;; This function calls:
   920 ;;		_i2c_masterOperation
   921 ;; This function is called by:
   922 ;;		_i2c_writeNBytes
   923 ;;		_i2c_write1ByteRegister
   924 ;;		_i2c_read1ByteRegister
   925 ;;		_i2c_read2ByteRegister
   926 ;;		_i2c_write2ByteRegister
   927 ;;		_i2c_readDataBlock
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text3
   932  000D48                     __ptext3:
   933                           	opt stack 0
   934  000D48                     _i2c_masterWrite:
   935                           	opt stack 16
   936                           
   937                           ;i2c_master.c: 224: return i2c_masterOperation(0);
   938                           ;	Return value of _i2c_masterWrite is never used
   939                           
   940                           ;incstack = 0
   941  000D48  0E00               	movlw	0
   942  000D4A  ECC2  F004         	call	_i2c_masterOperation
   943  000D4E  0012               	return	
   944  000D50                     __end_of_i2c_masterWrite:
   945                           	opt stack 0
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           intcon	equ	0xFF2
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           postdec1	equ	0xFE5
   954                           fsr1l	equ	0xFE1
   955                           status	equ	0xFD8
   956                           
   957 ;; *************** function _i2c_readNBytes *****************
   958 ;; Defined at:
   959 ;;		line 156 in file "mcc_generated_files/drivers/i2c_simple_master.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  address         1    wreg     unsigned char 
   962 ;;  data            2    2[BANK0 ] PTR void 
   963 ;;		 -> main@rec_1221(1), main@rec(1), 
   964 ;;  len             2    4[BANK0 ] unsigned int 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  address         1    6[BANK0 ] unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   979 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   980 ;;Total ram usage:        5 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:   14
   983 ;; This function calls:
   984 ;;		_i2c_close
   985 ;;		_i2c_masterRead
   986 ;;		_i2c_open
   987 ;;		_i2c_setBuffer
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text4
   994  00094E                     __ptext4:
   995                           	opt stack 0
   996  00094E                     _i2c_readNBytes:
   997                           	opt stack 16
   998                           
   999                           ;incstack = 0
  1000                           ;i2c_readNBytes@address stored from wreg
  1001  00094E  0100               	movlb	0	; () banked
  1002  000950  6F96               	movwf	i2c_readNBytes@address& (0+255),b
  1003  000952                     
  1004                           ;i2c_simple_master.c: 158: while(!i2c_open(address));
  1005  000952  0100               	movlb	0	; () banked
  1006  000954  5196               	movf	i2c_readNBytes@address& (0+255),w,b
  1007  000956  EC70  F000         	call	_i2c_open
  1008  00095A  0900               	iorlw	0
  1009  00095C  B4D8               	btfsc	status,2,c
  1010  00095E  D7F9               	goto	l3727
  1011                           
  1012                           ;i2c_simple_master.c: 159: i2c_setBuffer(data,len);
  1013  000960  C092  F046         	movff	i2c_readNBytes@data,i2c_setBuffer@buffer
  1014  000964  C093  F047         	movff	i2c_readNBytes@data+1,i2c_setBuffer@buffer+1
  1015  000968  C094  F048         	movff	i2c_readNBytes@len,i2c_setBuffer@bufferSize
  1016  00096C  C095  F049         	movff	i2c_readNBytes@len+1,i2c_setBuffer@bufferSize+1
  1017  000970  ECA7  F005         	call	_i2c_setBuffer	;wreg free
  1018                           
  1019                           ;i2c_simple_master.c: 160: i2c_masterRead();
  1020  000974  ECA8  F006         	call	_i2c_masterRead	;wreg free
  1021  000978  EC71  F005         	call	_i2c_close	;wreg free
  1022  00097C  06E8               	decf	wreg,f,c
  1023  00097E  A4D8               	btfss	status,2,c
  1024  000980  0012               	return	
  1025  000982  D7FA               	goto	l591
  1026  000984                     __end_of_i2c_readNBytes:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           intcon	equ	0xFF2
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           postdec1	equ	0xFE5
  1036                           fsr1l	equ	0xFE1
  1037                           status	equ	0xFD8
  1038                           
  1039 ;; *************** function _i2c_open *****************
  1040 ;; Defined at:
  1041 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  address         1    wreg     unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  address         1    0[BANK0 ] unsigned char 
  1046 ;;  ret             1    1[BANK0 ] enum E11785
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      enum E11785
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1057 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;Total ram usage:        2 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    7
  1063 ;; This function calls:
  1064 ;;		_i2c1_driver_open
  1065 ;;		_i2c1_driver_setBusCollisionISR
  1066 ;;		_i2c1_driver_setI2cISR
  1067 ;;		_mssp1_clearIRQ
  1068 ;; This function is called by:
  1069 ;;		_i2c_writeNBytes
  1070 ;;		_i2c_readNBytes
  1071 ;;		_i2c_write1ByteRegister
  1072 ;;		_i2c_read1ByteRegister
  1073 ;;		_i2c_read2ByteRegister
  1074 ;;		_i2c_write2ByteRegister
  1075 ;;		_i2c_readDataBlock
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text5
  1080  0000E0                     __ptext5:
  1081                           	opt stack 0
  1082  0000E0                     _i2c_open:
  1083                           	opt stack 22
  1084                           
  1085                           ;incstack = 0
  1086                           ;i2c_open@address stored from wreg
  1087  0000E0  0100               	movlb	0	; () banked
  1088  0000E2  6F90               	movwf	i2c_open@address& (0+255),b
  1089                           
  1090                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
  1091  0000E4  0E01               	movlw	1
  1092  0000E6  0100               	movlb	0	; () banked
  1093  0000E8  6F91               	movwf	i2c_open@ret& (0+255),b
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;i2c_master.c: 120: if(!i2c_status.inUse)
  1097  0000EA  B201               	btfsc	_i2c_status,1,c
  1098  0000EC  D051               	goto	l348
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;i2c_master.c: 121: {
  1102                           ;i2c_master.c: 122: i2c_status.address = address;
  1103  0000EE  C090  F002         	movff	i2c_open@address,_i2c_status+1
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;i2c_master.c: 123: i2c_status.busy = 0;
  1107  0000F2  9001               	bcf	_i2c_status,0,c
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;i2c_master.c: 124: i2c_status.inUse = 1;
  1111  0000F4  8201               	bsf	_i2c_status,1,c
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
  1115  0000F6  9601               	bcf	_i2c_status,3,c
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
  1119  0000F8  0E0E               	movlw	14
  1120  0000FA  6E0B               	movwf	_i2c_status+10,c
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
  1124  0000FC  0E01               	movlw	1
  1125  0000FE  6E0A               	movwf	_i2c_status+9,c
  1126  000100  0EF4               	movlw	244
  1127  000102  6E09               	movwf	_i2c_status+8,c
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
  1131  000104  8401               	bsf	_i2c_status,2,c
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
  1135  000106  0E2A               	movlw	low _returnStop
  1136  000108  6E0D               	movwf	_i2c_status+12,c
  1137  00010A  0E0D               	movlw	high _returnStop
  1138  00010C  6E0E               	movwf	_i2c_status+13,c
  1139  00010E  0E00               	movlw	low (_returnStop shr (0+16))
  1140  000110  6E0F               	movwf	_i2c_status+14,c
  1141                           
  1142                           ; BSR set to: 0
  1143                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
  1144  000112  0E00               	movlw	0
  1145  000114  6E1F               	movwf	_i2c_status+30,c
  1146  000116  0E00               	movlw	0
  1147  000118  6E20               	movwf	_i2c_status+31,c
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
  1151  00011A  0E2A               	movlw	low _returnStop
  1152  00011C  6E10               	movwf	_i2c_status+15,c
  1153  00011E  0E0D               	movlw	high _returnStop
  1154  000120  6E11               	movwf	_i2c_status+16,c
  1155  000122  0E00               	movlw	low (_returnStop shr (0+16))
  1156  000124  6E12               	movwf	_i2c_status+17,c
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
  1160  000126  0E00               	movlw	0
  1161  000128  6E21               	movwf	_i2c_status+32,c
  1162  00012A  0E00               	movlw	0
  1163  00012C  6E22               	movwf	_i2c_status+33,c
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
  1167  00012E  0E2A               	movlw	low _returnStop
  1168  000130  6E13               	movwf	_i2c_status+18,c
  1169  000132  0E0D               	movlw	high _returnStop
  1170  000134  6E14               	movwf	_i2c_status+19,c
  1171  000136  0E00               	movlw	low (_returnStop shr (0+16))
  1172  000138  6E15               	movwf	_i2c_status+20,c
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
  1176  00013A  0E00               	movlw	0
  1177  00013C  6E23               	movwf	_i2c_status+34,c
  1178  00013E  0E00               	movlw	0
  1179  000140  6E24               	movwf	_i2c_status+35,c
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
  1183  000142  0E2A               	movlw	low _returnStop
  1184  000144  6E16               	movwf	_i2c_status+21,c
  1185  000146  0E0D               	movlw	high _returnStop
  1186  000148  6E17               	movwf	_i2c_status+22,c
  1187  00014A  0E00               	movlw	low (_returnStop shr (0+16))
  1188  00014C  6E18               	movwf	_i2c_status+23,c
  1189                           
  1190                           ; BSR set to: 0
  1191                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
  1192  00014E  0E00               	movlw	0
  1193  000150  6E25               	movwf	_i2c_status+36,c
  1194  000152  0E00               	movlw	0
  1195  000154  6E26               	movwf	_i2c_status+37,c
  1196                           
  1197                           ; BSR set to: 0
  1198                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
  1199  000156  0E20               	movlw	low _returnReset
  1200  000158  6E19               	movwf	_i2c_status+24,c
  1201  00015A  0E0D               	movlw	high _returnReset
  1202  00015C  6E1A               	movwf	_i2c_status+25,c
  1203  00015E  0E00               	movlw	low (_returnReset shr (0+16))
  1204  000160  6E1B               	movwf	_i2c_status+26,c
  1205                           
  1206                           ; BSR set to: 0
  1207                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
  1208  000162  0E00               	movlw	0
  1209  000164  6E27               	movwf	_i2c_status+38,c
  1210  000166  0E00               	movlw	0
  1211  000168  6E28               	movwf	_i2c_status+39,c
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;i2c_master.c: 142: i2c1_driver_open();
  1215  00016A  ECCB  F005         	call	_i2c1_driver_open	;wreg free
  1216                           
  1217                           ;i2c_master.c: 143: mssp1_clearIRQ();
  1218  00016E  ECDC  F006         	call	_mssp1_clearIRQ	;wreg free
  1219                           
  1220                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
  1221  000172  0ED6               	movlw	low _i2c_busCollisionISR
  1222  000174  6E46               	movwf	i2c1_driver_setBusCollisionISR@f,c
  1223  000176  0E0D               	movlw	high _i2c_busCollisionISR
  1224  000178  6E47               	movwf	i2c1_driver_setBusCollisionISR@f+1,c
  1225  00017A  EC3E  F006         	call	_i2c1_driver_setBusCollisionISR	;wreg free
  1226                           
  1227                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
  1228  00017E  0E28               	movlw	low _i2c_ISR
  1229  000180  6E46               	movwf	i2c1_driver_setI2cISR@f,c
  1230  000182  0E07               	movlw	high _i2c_ISR
  1231  000184  6E47               	movwf	i2c1_driver_setI2cISR@f+1,c
  1232  000186  EC37  F006         	call	_i2c1_driver_setI2cISR	;wreg free
  1233                           
  1234                           ;i2c_master.c: 151: ret = I2C_NOERR;
  1235  00018A  0E00               	movlw	0
  1236  00018C  0100               	movlb	0	; () banked
  1237  00018E  6F91               	movwf	i2c_open@ret& (0+255),b
  1238  000190                     l348:
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;i2c_master.c: 152: }
  1242                           ;i2c_master.c: 153: return ret;
  1243                           
  1244                           ; BSR set to: 0
  1245  000190  5191               	movf	i2c_open@ret& (0+255),w,b
  1246  000192  0012               	return	
  1247  000194                     __end_of_i2c_open:
  1248                           	opt stack 0
  1249                           tblptru	equ	0xFF8
  1250                           tblptrh	equ	0xFF7
  1251                           tblptrl	equ	0xFF6
  1252                           tablat	equ	0xFF5
  1253                           intcon	equ	0xFF2
  1254                           postinc0	equ	0xFEE
  1255                           wreg	equ	0xFE8
  1256                           postdec1	equ	0xFE5
  1257                           fsr1l	equ	0xFE1
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function _i2c1_driver_setI2cISR *****************
  1261 ;; Defined at:
  1262 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  f               3   21[COMRAM] PTR void 
  1265 ;;		 -> i2c_ISR(1), 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1277 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1280 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1281 ;;Total ram usage:        3 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    6
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_i2c_open
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text6
  1292  000C6E                     __ptext6:
  1293                           	opt stack 0
  1294  000C6E                     _i2c1_driver_setI2cISR:
  1295                           	opt stack 22
  1296                           
  1297                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;incstack = 0
  1301  000C6E  C046  F02B         	movff	i2c1_driver_setI2cISR@f,_i2c1_driver_i2cISR
  1302  000C72  C047  F02C         	movff	i2c1_driver_setI2cISR@f+1,_i2c1_driver_i2cISR+1
  1303  000C76  C048  F02D         	movff	i2c1_driver_setI2cISR@f+2,_i2c1_driver_i2cISR+2
  1304  000C7A  0012               	return		;funcret
  1305  000C7C                     __end_of_i2c1_driver_setI2cISR:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           intcon	equ	0xFF2
  1312                           postinc0	equ	0xFEE
  1313                           wreg	equ	0xFE8
  1314                           postdec1	equ	0xFE5
  1315                           fsr1l	equ	0xFE1
  1316                           status	equ	0xFD8
  1317                           
  1318 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
  1319 ;; Defined at:
  1320 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  f               3   21[COMRAM] PTR void 
  1323 ;;		 -> i2c_busCollisionISR(1), 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1335 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1338 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1339 ;;Total ram usage:        3 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    6
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_i2c_open
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text7
  1350  000C7C                     __ptext7:
  1351                           	opt stack 0
  1352  000C7C                     _i2c1_driver_setBusCollisionISR:
  1353                           	opt stack 22
  1354                           
  1355                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
  1356                           
  1357                           ;incstack = 0
  1358  000C7C  C046  F02E         	movff	i2c1_driver_setBusCollisionISR@f,_i2c1_driver_busCollisionISR
  1359  000C80  C047  F02F         	movff	i2c1_driver_setBusCollisionISR@f+1,_i2c1_driver_busCollisionISR+1
  1360  000C84  C048  F030         	movff	i2c1_driver_setBusCollisionISR@f+2,_i2c1_driver_busCollisionISR+2
  1361  000C88  0012               	return		;funcret
  1362  000C8A                     __end_of_i2c1_driver_setBusCollisionISR:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           intcon	equ	0xFF2
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           postdec1	equ	0xFE5
  1372                           fsr1l	equ	0xFE1
  1373                           status	equ	0xFD8
  1374                           
  1375 ;; *************** function _i2c1_driver_open *****************
  1376 ;; Defined at:
  1377 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;		None               void
  1384 ;; Registers used:
  1385 ;;		wreg, status,2
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    6
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_i2c_open
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text8
  1406  000B96                     __ptext8:
  1407                           	opt stack 0
  1408  000B96                     _i2c1_driver_open:
  1409                           	opt stack 22
  1410                           
  1411                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  1412                           
  1413                           ;incstack = 0
  1414  000B96  BA96               	btfsc	3990,5,c	;volatile
  1415  000B98  0012               	return	
  1416                           
  1417                           ;i2c1_driver.c: 86: {
  1418                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
  1419  000B9A  0E00               	movlw	0
  1420  000B9C  6E95               	movwf	3989,c	;volatile
  1421                           
  1422                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  1423  000B9E  0E28               	movlw	40
  1424  000BA0  6E96               	movwf	3990,c	;volatile
  1425                           
  1426                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  1427  000BA2  0E00               	movlw	0
  1428  000BA4  6E97               	movwf	3991,c	;volatile
  1429                           
  1430                           ;i2c1_driver.c: 90: SSP1ADD = 0x4;
  1431  000BA6  0E04               	movlw	4
  1432  000BA8  6E93               	movwf	3987,c	;volatile
  1433                           
  1434                           ;i2c1_driver.c: 93: else
  1435                           ;i2c1_driver.c: 94: return 0;
  1436                           ;	Return value of _i2c1_driver_open is never used
  1437                           
  1438                           ;i2c1_driver.c: 92: }
  1439                           
  1440                           ;i2c1_driver.c: 91: return 1;
  1441                           ;	Return value of _i2c1_driver_open is never used
  1442  000BAA  0012               	return	
  1443  000BAC                     __end_of_i2c1_driver_open:
  1444                           	opt stack 0
  1445                           tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           intcon	equ	0xFF2
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           postdec1	equ	0xFE5
  1453                           fsr1l	equ	0xFE1
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _i2c_masterRead *****************
  1457 ;; Defined at:
  1458 ;;		line 217 in file "mcc_generated_files/drivers/i2c_master.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      enum E11785
  1465 ;; Registers used:
  1466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:   13
  1479 ;; This function calls:
  1480 ;;		_i2c_masterOperation
  1481 ;; This function is called by:
  1482 ;;		_i2c_readNBytes
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text9
  1487  000D50                     __ptext9:
  1488                           	opt stack 0
  1489  000D50                     _i2c_masterRead:
  1490                           	opt stack 16
  1491                           
  1492                           ;i2c_master.c: 219: return i2c_masterOperation(1);
  1493                           ;	Return value of _i2c_masterRead is never used
  1494                           
  1495                           ;incstack = 0
  1496  000D50  0E01               	movlw	1
  1497  000D52  ECC2  F004         	call	_i2c_masterOperation
  1498  000D56  0012               	return	
  1499  000D58                     __end_of_i2c_masterRead:
  1500                           	opt stack 0
  1501                           tblptru	equ	0xFF8
  1502                           tblptrh	equ	0xFF7
  1503                           tblptrl	equ	0xFF6
  1504                           tablat	equ	0xFF5
  1505                           intcon	equ	0xFF2
  1506                           postinc0	equ	0xFEE
  1507                           wreg	equ	0xFE8
  1508                           postdec1	equ	0xFE5
  1509                           fsr1l	equ	0xFE1
  1510                           status	equ	0xFD8
  1511                           
  1512 ;; *************** function _i2c_masterOperation *****************
  1513 ;; Defined at:
  1514 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  read            1    wreg     unsigned char 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  read            1    0[BANK0 ] unsigned char 
  1519 ;;  ret             1    1[BANK0 ] enum E11785
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      enum E11785
  1522 ;; Registers used:
  1523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1532 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1533 ;;Total ram usage:        2 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:   12
  1536 ;; This function calls:
  1537 ;;		_i2c1_driver_start
  1538 ;;		_i2c_poller
  1539 ;;		_mssp1_IRQisEnabled
  1540 ;; This function is called by:
  1541 ;;		_i2c_masterRead
  1542 ;;		_i2c_masterWrite
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text10
  1547  000984                     __ptext10:
  1548                           	opt stack 0
  1549  000984                     _i2c_masterOperation:
  1550                           	opt stack 16
  1551                           
  1552                           ;incstack = 0
  1553                           ;i2c_masterOperation@read stored from wreg
  1554  000984  0100               	movlb	0	; () banked
  1555  000986  6F90               	movwf	i2c_masterOperation@read& (0+255),b
  1556                           
  1557                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
  1558  000988  0E01               	movlw	1
  1559  00098A  0100               	movlb	0	; () banked
  1560  00098C  6F91               	movwf	i2c_masterOperation@ret& (0+255),b
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;i2c_master.c: 196: if(!i2c_status.busy)
  1564  00098E  B001               	btfsc	_i2c_status,0,c
  1565  000990  D011               	goto	l369
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;i2c_master.c: 197: {
  1569                           ;i2c_master.c: 198: i2c_status.busy = 1;
  1570  000992  8001               	bsf	_i2c_status,0,c
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;i2c_master.c: 199: ret = I2C_NOERR;
  1574  000994  0E00               	movlw	0
  1575  000996  6F91               	movwf	i2c_masterOperation@ret& (0+255),b
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;i2c_master.c: 201: if(read)
  1579  000998  5190               	movf	i2c_masterOperation@read& (0+255),w,b
  1580  00099A  B4D8               	btfsc	status,2,c
  1581  00099C  D002               	goto	l367
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;i2c_master.c: 202: {
  1585                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
  1586  00099E  0E01               	movlw	1
  1587  0009A0  D001               	goto	L1
  1588  0009A2                     l367:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;i2c_master.c: 205: else
  1592                           ;i2c_master.c: 206: {
  1593                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
  1594                           
  1595                           ; BSR set to: 0
  1596  0009A2  0E02               	movlw	2
  1597  0009A4                     L1:
  1598  0009A4  6E0B               	movwf	_i2c_status+10,c
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;i2c_master.c: 208: }
  1602                           ;i2c_master.c: 209: i2c1_driver_start();
  1603                           
  1604                           ; BSR set to: 0
  1605  0009A6  ECF9  F006         	call	_i2c1_driver_start	;wreg free
  1606                           
  1607                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
  1608  0009AA  EC15  F006         	call	_mssp1_IRQisEnabled	;wreg free
  1609  0009AE  A0D8               	btfss	status,0,c
  1610                           
  1611                           ;i2c_master.c: 212: i2c_poller();
  1612  0009B0  EC9B  F005         	call	_i2c_poller	;wreg free
  1613  0009B4                     l369:
  1614                           
  1615                           ;i2c_master.c: 213: }
  1616                           ;i2c_master.c: 214: return ret;
  1617  0009B4  0100               	movlb	0	; () banked
  1618  0009B6  5191               	movf	i2c_masterOperation@ret& (0+255),w,b
  1619  0009B8  0012               	return	
  1620  0009BA                     __end_of_i2c_masterOperation:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           tblptrl	equ	0xFF6
  1625                           tablat	equ	0xFF5
  1626                           intcon	equ	0xFF2
  1627                           postinc0	equ	0xFEE
  1628                           wreg	equ	0xFE8
  1629                           postdec1	equ	0xFE5
  1630                           fsr1l	equ	0xFE1
  1631                           status	equ	0xFD8
  1632                           
  1633 ;; *************** function _mssp1_IRQisEnabled *****************
  1634 ;; Defined at:
  1635 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;		None               void
  1642 ;; Registers used:
  1643 ;;		wreg, status,0
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;Total ram usage:        1 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    6
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_i2c_masterOperation
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text11
  1664  000C2A                     __ptext11:
  1665                           	opt stack 0
  1666  000C2A                     _mssp1_IRQisEnabled:
  1667                           	opt stack 21
  1668                           
  1669                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;incstack = 0
  1673  000C2A  010E               	movlb	14	; () banked
  1674  000C2C  A1C5               	btfss	197,0,b	;volatile
  1675  000C2E  D003               	goto	u1330
  1676  000C30  6A46               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  1677  000C32  2A46               	incf	??_mssp1_IRQisEnabled& (0+255),f,c
  1678  000C34  D001               	goto	u1338
  1679  000C36                     u1330:
  1680  000C36  6A46               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  1681  000C38                     u1338:
  1682  000C38  3046               	rrcf	??_mssp1_IRQisEnabled,w,c
  1683  000C3A  0012               	return	
  1684  000C3C                     __end_of_mssp1_IRQisEnabled:
  1685                           	opt stack 0
  1686                           tblptru	equ	0xFF8
  1687                           tblptrh	equ	0xFF7
  1688                           tblptrl	equ	0xFF6
  1689                           tablat	equ	0xFF5
  1690                           intcon	equ	0xFF2
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           postdec1	equ	0xFE5
  1694                           fsr1l	equ	0xFE1
  1695                           status	equ	0xFD8
  1696                           
  1697 ;; *************** function _i2c_poller *****************
  1698 ;; Defined at:
  1699 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:   11
  1720 ;; This function calls:
  1721 ;;		_i2c_ISR
  1722 ;;		_mssp1_waitForEvent
  1723 ;; This function is called by:
  1724 ;;		_i2c_masterOperation
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text12
  1729  000B36                     __ptext12:
  1730                           	opt stack 0
  1731  000B36                     _i2c_poller:
  1732                           	opt stack 16
  1733                           
  1734                           ;i2c_master.c: 232: while(i2c_status.busy)
  1735                           
  1736                           ;incstack = 0
  1737  000B36  D008               	goto	l379
  1738  000B38                     
  1739                           ;i2c_master.c: 233: {
  1740                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
  1741  000B38  0E00               	movlw	0
  1742  000B3A  6E46               	movwf	mssp1_waitForEvent@timeout,c
  1743  000B3C  0E00               	movlw	0
  1744  000B3E  6E47               	movwf	mssp1_waitForEvent@timeout+1,c
  1745  000B40  ECD6  F005         	call	_mssp1_waitForEvent	;wreg free
  1746                           
  1747                           ;i2c_master.c: 235: i2c_ISR();
  1748  000B44  EC94  F003         	call	_i2c_ISR	;wreg free
  1749  000B48                     l379:
  1750  000B48  A001               	btfss	_i2c_status,0,c
  1751  000B4A  0012               	return	
  1752  000B4C  D7F5               	goto	l380
  1753  000B4E                     __end_of_i2c_poller:
  1754                           	opt stack 0
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           intcon	equ	0xFF2
  1760                           postinc0	equ	0xFEE
  1761                           wreg	equ	0xFE8
  1762                           postdec1	equ	0xFE5
  1763                           fsr1l	equ	0xFE1
  1764                           status	equ	0xFD8
  1765                           
  1766 ;; *************** function _mssp1_waitForEvent *****************
  1767 ;; Defined at:
  1768 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  timeout         2   21[COMRAM] PTR unsigned int 
  1771 ;;		 -> NULL(0), 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1787 ;;Total ram usage:        2 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    6
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_i2c_poller
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text13
  1798  000BAC                     __ptext13:
  1799                           	opt stack 0
  1800  000BAC                     _mssp1_waitForEvent:
  1801                           	opt stack 20
  1802                           
  1803                           ;i2c1_driver.c: 73: if(PIR3bits.SSP1IF == 0)
  1804                           
  1805                           ;incstack = 0
  1806  000BAC  010E               	movlb	14	; () banked
  1807  000BAE  B1CD               	btfsc	205,0,b	;volatile
  1808  000BB0  0012               	return	
  1809  000BB2                     u1270:
  1810                           
  1811                           ;i2c1_driver.c: 76: {
  1812                           ;i2c1_driver.c: 77: if(PIR3bits.SSP1IF) break;
  1813                           
  1814                           ;i2c1_driver.c: 74: {
  1815                           ;i2c1_driver.c: 75: while(1)
  1816  000BB2  010E               	movlb	14	; () banked
  1817  000BB4  B1CD               	btfsc	205,0,b	;volatile
  1818  000BB6  0012               	return	
  1819                           
  1820                           ; BSR set to: 14
  1821                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(2000000/4000000.0)));
  1822                           
  1823                           ; BSR set to: 14
  1824                           
  1825                           ; BSR set to: 14
  1826  000BB8  0E10               	movlw	16
  1827  000BBA                     u1777:
  1828  000BBA  2EE8               	decfsz	wreg,f,c
  1829  000BBC  D7FE               	bra	u1777
  1830  000BBE  D000               	nop2	
  1831  000BC0  D7F8               	goto	u1270
  1832  000BC2                     __end_of_mssp1_waitForEvent:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           intcon	equ	0xFF2
  1839                           postinc0	equ	0xFEE
  1840                           wreg	equ	0xFE8
  1841                           postdec1	equ	0xFE5
  1842                           fsr1l	equ	0xFE1
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function _i2c_ISR *****************
  1846 ;; Defined at:
  1847 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:   10
  1868 ;; This function calls:
  1869 ;;		_do_I2C_DO_ACK
  1870 ;;		_do_I2C_DO_ADDRESS_NACK
  1871 ;;		_do_I2C_DO_NACK_RESTART
  1872 ;;		_do_I2C_DO_NACK_STOP
  1873 ;;		_do_I2C_IDLE
  1874 ;;		_do_I2C_RCEN
  1875 ;;		_do_I2C_RESET
  1876 ;;		_do_I2C_RX
  1877 ;;		_do_I2C_SEND_ADR_READ
  1878 ;;		_do_I2C_SEND_ADR_WRITE
  1879 ;;		_do_I2C_SEND_RESTART
  1880 ;;		_do_I2C_SEND_RESTART_READ
  1881 ;;		_do_I2C_SEND_RESTART_WRITE
  1882 ;;		_do_I2C_SEND_STOP
  1883 ;;		_do_I2C_TX
  1884 ;;		_do_I2C_TX_EMPTY
  1885 ;;		_i2c1_driver_isNACK
  1886 ;;		_mssp1_clearIRQ
  1887 ;; This function is called by:
  1888 ;;		_i2c_open
  1889 ;;		_i2c_poller
  1890 ;;		_INTERRUPT_InterruptManager
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text14
  1895  000728                     __ptext14:
  1896                           	opt stack 0
  1897  000728                     _i2c_ISR:
  1898                           	opt stack 0
  1899                           
  1900                           ;Skip over the trampoline to the duplicate function for level 2
  1901  000728  B24A               	btfsc	btemp,1,c
  1902  00072A  EFFC  F003         	goto	i2_i2c_ISR
  1903  00072E                     _i2c_ISR$intlevel0:
  1904                           	opt stack 16
  1905                           
  1906                           ;i2c_master.c: 421: mssp1_clearIRQ();
  1907                           
  1908                           ;incstack = 0
  1909  00072E  ECDC  F006         	call	_mssp1_clearIRQ	;wreg free
  1910                           
  1911                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  1912  000732  A601               	btfss	_i2c_status,3,c
  1913  000734  D006               	goto	l469
  1914  000736  ECE1  F005         	call	_i2c1_driver_isNACK	;wreg free
  1915  00073A  A0D8               	btfss	status,0,c
  1916  00073C  D002               	goto	l469
  1917                           
  1918                           ;i2c_master.c: 428: {
  1919                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  1920  00073E  0E0F               	movlw	15
  1921  000740  6E0B               	movwf	_i2c_status+10,c
  1922  000742                     l469:
  1923                           
  1924                           ;i2c_master.c: 430: }
  1925                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  1926  000742  500B               	movf	_i2c_status+10,w,c
  1927  000744  0D03               	mullw	3
  1928  000746  0E60               	movlw	low _fsmStateTable
  1929  000748  24F3               	addwf	prodl,w,c
  1930  00074A  6ED9               	movwf	fsr2l,c
  1931  00074C  0E00               	movlw	high _fsmStateTable
  1932  00074E  20F4               	addwfc	prodh,w,c
  1933  000750  6EDA               	movwf	fsr2h,c
  1934  000752  D801               	call	u1318
  1935  000754  D00A               	goto	u1319
  1936  000756                     u1318:
  1937  000756  0005               	push	
  1938  000758  6EFA               	movwf	pclath,c
  1939  00075A  50DE               	movf	postinc2,w,c
  1940  00075C  6EFD               	movwf	tosl,c
  1941  00075E  50DE               	movf	postinc2,w,c
  1942  000760  6EFE               	movwf	tosh,c
  1943  000762  50DE               	movf	postinc2,w,c
  1944  000764  6EFF               	movwf	tosu,c
  1945  000766  50FA               	movf	pclath,w,c
  1946  000768  0012               	return		;indir
  1947  00076A                     u1319:
  1948  00076A  6E0B               	movwf	_i2c_status+10,c
  1949  00076C  0012               	return		;funcret
  1950  00076E                     __end_of_i2c_ISR:
  1951                           	opt stack 0
  1952                           tosu	equ	0xFFF
  1953                           tosh	equ	0xFFE
  1954                           tosl	equ	0xFFD
  1955                           pclath	equ	0xFFA
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           prodh	equ	0xFF4
  1961                           prodl	equ	0xFF3
  1962                           intcon	equ	0xFF2
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           postdec1	equ	0xFE5
  1966                           fsr1l	equ	0xFE1
  1967                           postinc2	equ	0xFDE
  1968                           fsr2h	equ	0xFDA
  1969                           fsr2l	equ	0xFD9
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function _do_I2C_RX *****************
  1973 ;; Defined at:
  1974 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      enum E11956
  1981 ;; Registers used:
  1982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;Total ram usage:        0 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    9
  1995 ;; This function calls:
  1996 ;;		Absolute function
  1997 ;;		_do_I2C_DO_NACK_RESTART
  1998 ;;		_do_I2C_DO_NACK_STOP
  1999 ;;		_i2c1_driver_getRXData
  2000 ;;		_i2c1_driver_sendACK
  2001 ;;		_i2c_restartWrite
  2002 ;;		_rd1RegCompleteHandler
  2003 ;;		_rd2RegCompleteHandler
  2004 ;;		_rdBlkRegCompleteHandler
  2005 ;;		_returnReset
  2006 ;;		_returnStop
  2007 ;;		_wr1RegCompleteHandler
  2008 ;;		_wr2RegCompleteHandler
  2009 ;; This function is called by:
  2010 ;;		_i2c_ISR
  2011 ;;		i2_i2c_ISR
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text15
  2016  00042A                     __ptext15:
  2017                           	opt stack 0
  2018  00042A                     _do_I2C_RX:
  2019                           	opt stack 0
  2020                           
  2021                           ;Skip over the trampoline to the duplicate function for level 2
  2022  00042A  B24A               	btfsc	btemp,1,c
  2023  00042C  EF8D  F002         	goto	i2_do_I2C_RX
  2024  000430                     _do_I2C_RX$intlevel0:
  2025                           	opt stack 16
  2026                           
  2027                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  2028                           
  2029                           ;incstack = 0
  2030  000430  ECF1  F006         	call	_i2c1_driver_getRXData	;wreg free
  2031  000434  C003  FFD9         	movff	_i2c_status+2,fsr2l
  2032  000438  C004  FFDA         	movff	_i2c_status+3,fsr2h
  2033  00043C  6EDF               	movwf	indf2,c
  2034  00043E  4A03               	infsnz	_i2c_status+2,f,c
  2035  000440  2A04               	incf	_i2c_status+3,f,c
  2036                           
  2037                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  2038  000442  0605               	decf	_i2c_status+4,f,c
  2039  000444  A0D8               	btfss	status,0,c
  2040  000446  0606               	decf	_i2c_status+5,f,c
  2041  000448  5005               	movf	_i2c_status+4,w,c
  2042  00044A  1006               	iorwf	_i2c_status+5,w,c
  2043  00044C  B4D8               	btfsc	status,2,c
  2044  00044E  D004               	goto	l445
  2045                           
  2046                           ;i2c_master.c: 361: {
  2047                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  2048  000450  ECD6  F006         	call	_i2c1_driver_sendACK	;wreg free
  2049                           
  2050                           ;i2c_master.c: 363: return I2C_RCEN;
  2051  000454  0E05               	movlw	5
  2052                           
  2053                           ;i2c_master.c: 364: }
  2054  000456  0012               	return	
  2055  000458                     l445:
  2056                           
  2057                           ;i2c_master.c: 365: else
  2058                           ;i2c_master.c: 366: {
  2059                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  2060  000458  8401               	bsf	_i2c_status,2,c
  2061                           
  2062                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  2063  00045A  D006               	goto	l448
  2064  00045C                     
  2065                           ;i2c_master.c: 371: case i2c_restart_read:
  2066                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  2067  00045C  EC45  F006         	call	_do_I2C_DO_NACK_RESTART	;wreg free
  2068  000460  0012               	return	
  2069  000462                     
  2070                           ;i2c_master.c: 375: case i2c_stop:
  2071                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  2072                           
  2073                           ;i2c_master.c: 374: case i2c_continue:
  2074  000462  EC4C  F006         	call	_do_I2C_DO_NACK_STOP	;wreg free
  2075                           
  2076                           ;i2c_master.c: 377: }
  2077  000466  0012               	return	
  2078  000468                     l448:
  2079  000468  C01F  F09A         	movff	_i2c_status+30,returnStop@p
  2080  00046C  C020  F09B         	movff	_i2c_status+31,returnStop@p+1
  2081  000470  EE20  F00D         	lfsr	2,_i2c_status+12
  2082  000474  D801               	call	u1258
  2083  000476  D00A               	goto	u1259
  2084  000478                     u1258:
  2085  000478  0005               	push	
  2086  00047A  6EFA               	movwf	pclath,c
  2087  00047C  50DE               	movf	postinc2,w,c
  2088  00047E  6EFD               	movwf	tosl,c
  2089  000480  50DE               	movf	postinc2,w,c
  2090  000482  6EFE               	movwf	tosh,c
  2091  000484  50DE               	movf	postinc2,w,c
  2092  000486  6EFF               	movwf	tosu,c
  2093  000488  50FA               	movf	pclath,w,c
  2094  00048A  0012               	return		;indir
  2095  00048C                     u1259:
  2096                           
  2097                           ; Switch size 1, requested type "space"
  2098                           ; Number of cases is 4, Range of values is 1 to 4
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte           13     7 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103  00048C  0A01               	xorlw	1	; case 1
  2104  00048E  B4D8               	btfsc	status,2,c
  2105  000490  D7E8               	goto	l451
  2106  000492  0A03               	xorlw	3	; case 2
  2107  000494  B4D8               	btfsc	status,2,c
  2108  000496  D7E2               	goto	l449
  2109  000498  0A01               	xorlw	1	; case 3
  2110  00049A  B4D8               	btfsc	status,2,c
  2111  00049C  D7DF               	goto	l449
  2112  00049E  0A07               	xorlw	7	; case 4
  2113  0004A0  D7E0               	goto	l451
  2114  0004A2                     __end_of_do_I2C_RX:
  2115                           	opt stack 0
  2116                           tosu	equ	0xFFF
  2117                           tosh	equ	0xFFE
  2118                           tosl	equ	0xFFD
  2119                           pclath	equ	0xFFA
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           prodh	equ	0xFF4
  2125                           prodl	equ	0xFF3
  2126                           intcon	equ	0xFF2
  2127                           postinc0	equ	0xFEE
  2128                           wreg	equ	0xFE8
  2129                           postdec1	equ	0xFE5
  2130                           fsr1l	equ	0xFE1
  2131                           indf2	equ	0xFDF
  2132                           postinc2	equ	0xFDE
  2133                           fsr2h	equ	0xFDA
  2134                           fsr2l	equ	0xFD9
  2135                           status	equ	0xFD8
  2136                           
  2137 ;; *************** function _do_I2C_TX *****************
  2138 ;; Defined at:
  2139 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      enum E11956
  2146 ;; Registers used:
  2147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2157 ;;Total ram usage:        2 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    9
  2160 ;; This function calls:
  2161 ;;		Absolute function
  2162 ;;		_do_I2C_SEND_RESTART_READ
  2163 ;;		_do_I2C_SEND_RESTART_WRITE
  2164 ;;		_do_I2C_SEND_STOP
  2165 ;;		_i2c1_driver_TXData
  2166 ;;		_i2c1_driver_isNACK
  2167 ;;		_i2c_restartWrite
  2168 ;;		_rd1RegCompleteHandler
  2169 ;;		_rd2RegCompleteHandler
  2170 ;;		_rdBlkRegCompleteHandler
  2171 ;;		_returnReset
  2172 ;;		_returnStop
  2173 ;;		_wr1RegCompleteHandler
  2174 ;;		_wr2RegCompleteHandler
  2175 ;; This function is called by:
  2176 ;;		_i2c_ISR
  2177 ;;		i2_i2c_ISR
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text16
  2182  000194                     __ptext16:
  2183                           	opt stack 0
  2184  000194                     _do_I2C_TX:
  2185                           	opt stack 0
  2186                           
  2187                           ;Skip over the trampoline to the duplicate function for level 2
  2188  000194  B24A               	btfsc	btemp,1,c
  2189  000196  EF13  F001         	goto	i2_do_I2C_TX
  2190  00019A                     _do_I2C_TX$intlevel0:
  2191                           	opt stack 16
  2192                           
  2193                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  2194                           
  2195                           ;incstack = 0
  2196  00019A  ECE1  F005         	call	_i2c1_driver_isNACK	;wreg free
  2197  00019E  B0D8               	btfsc	status,0,c
  2198  0001A0  D00A               	goto	l430
  2199  0001A2  D026               	goto	l429
  2200  0001A4                     
  2201                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  2202  0001A4  EC6F  F006         	call	_do_I2C_SEND_RESTART_READ	;wreg free
  2203  0001A8  0012               	return	
  2204  0001AA                     
  2205                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  2206  0001AA  EC68  F006         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
  2207  0001AE  0012               	return	
  2208  0001B0                     
  2209                           ;i2c_master.c: 345: case i2c_stop:
  2210                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  2211                           
  2212                           ;i2c_master.c: 344: case i2c_continue:
  2213  0001B0  EC5A  F006         	call	_do_I2C_SEND_STOP	;wreg free
  2214                           
  2215                           ;i2c_master.c: 347: }
  2216  0001B4  0012               	return	
  2217  0001B6                     l430:
  2218  0001B6  C025  F09A         	movff	_i2c_status+36,returnStop@p
  2219  0001BA  C026  F09B         	movff	_i2c_status+37,returnStop@p+1
  2220  0001BE  EE20  F016         	lfsr	2,_i2c_status+21
  2221  0001C2  D801               	call	u1228
  2222  0001C4  D00A               	goto	u1229
  2223  0001C6                     u1228:
  2224  0001C6  0005               	push	
  2225  0001C8  6EFA               	movwf	pclath,c
  2226  0001CA  50DE               	movf	postinc2,w,c
  2227  0001CC  6EFD               	movwf	tosl,c
  2228  0001CE  50DE               	movf	postinc2,w,c
  2229  0001D0  6EFE               	movwf	tosh,c
  2230  0001D2  50DE               	movf	postinc2,w,c
  2231  0001D4  6EFF               	movwf	tosu,c
  2232  0001D6  50FA               	movf	pclath,w,c
  2233  0001D8  0012               	return		;indir
  2234  0001DA                     u1229:
  2235                           
  2236                           ; Switch size 1, requested type "space"
  2237                           ; Number of cases is 4, Range of values is 1 to 4
  2238                           ; switch strategies available:
  2239                           ; Name         Instructions Cycles
  2240                           ; simple_byte           13     7 (average)
  2241                           ;	Chosen strategy is simple_byte
  2242  0001DA  0A01               	xorlw	1	; case 1
  2243  0001DC  B4D8               	btfsc	status,2,c
  2244  0001DE  D7E8               	goto	l434
  2245  0001E0  0A03               	xorlw	3	; case 2
  2246  0001E2  B4D8               	btfsc	status,2,c
  2247  0001E4  D7DF               	goto	l431
  2248  0001E6  0A01               	xorlw	1	; case 3
  2249  0001E8  B4D8               	btfsc	status,2,c
  2250  0001EA  D7DF               	goto	l433
  2251  0001EC  0A07               	xorlw	7	; case 4
  2252  0001EE  D7E0               	goto	l434
  2253  0001F0                     l429:
  2254                           
  2255                           ;i2c_master.c: 349: else
  2256                           ;i2c_master.c: 350: {
  2257                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  2258  0001F0  9601               	bcf	_i2c_status,3,c
  2259                           
  2260                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  2261  0001F2  C003  FFD9         	movff	_i2c_status+2,fsr2l
  2262  0001F6  C004  FFDA         	movff	_i2c_status+3,fsr2h
  2263  0001FA  4A03               	infsnz	_i2c_status+2,f,c
  2264  0001FC  2A04               	incf	_i2c_status+3,f,c
  2265  0001FE  50DF               	movf	indf2,w,c
  2266  000200  ECAC  F006         	call	_i2c1_driver_TXData
  2267                           
  2268                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  2269  000204  0605               	decf	_i2c_status+4,f,c
  2270  000206  A0D8               	btfss	status,0,c
  2271  000208  0606               	decf	_i2c_status+5,f,c
  2272  00020A  5005               	movf	_i2c_status+4,w,c
  2273  00020C  1006               	iorwf	_i2c_status+5,w,c
  2274  00020E  A4D8               	btfss	status,2,c
  2275  000210  D004               	goto	l440
  2276  000212  0E00               	movlw	0
  2277  000214  6E48               	movwf	_do_I2C_TX$1023+1,c
  2278  000216  0E06               	movlw	6
  2279  000218  D003               	goto	L2
  2280  00021A                     l440:
  2281  00021A  0E00               	movlw	0
  2282  00021C  6E48               	movwf	_do_I2C_TX$1023+1,c
  2283  00021E  0E03               	movlw	3
  2284  000220                     L2:
  2285  000220  6E47               	movwf	_do_I2C_TX$1023,c
  2286  000222  5047               	movf	_do_I2C_TX$1023,w,c
  2287  000224  0012               	return	
  2288  000226                     __end_of_do_I2C_TX:
  2289                           	opt stack 0
  2290                           tosu	equ	0xFFF
  2291                           tosh	equ	0xFFE
  2292                           tosl	equ	0xFFD
  2293                           pclath	equ	0xFFA
  2294                           tblptru	equ	0xFF8
  2295                           tblptrh	equ	0xFF7
  2296                           tblptrl	equ	0xFF6
  2297                           tablat	equ	0xFF5
  2298                           prodh	equ	0xFF4
  2299                           prodl	equ	0xFF3
  2300                           intcon	equ	0xFF2
  2301                           postinc0	equ	0xFEE
  2302                           wreg	equ	0xFE8
  2303                           postdec1	equ	0xFE5
  2304                           fsr1l	equ	0xFE1
  2305                           indf2	equ	0xFDF
  2306                           postinc2	equ	0xFDE
  2307                           fsr2h	equ	0xFDA
  2308                           fsr2l	equ	0xFD9
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  2312 ;; Defined at:
  2313 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      enum E11956
  2320 ;; Registers used:
  2321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:    9
  2334 ;; This function calls:
  2335 ;;		Absolute function
  2336 ;;		_do_I2C_SEND_RESTART
  2337 ;;		_do_I2C_SEND_STOP
  2338 ;;		_i2c_restartWrite
  2339 ;;		_rd1RegCompleteHandler
  2340 ;;		_rd2RegCompleteHandler
  2341 ;;		_rdBlkRegCompleteHandler
  2342 ;;		_returnReset
  2343 ;;		_returnStop
  2344 ;;		_wr1RegCompleteHandler
  2345 ;;		_wr2RegCompleteHandler
  2346 ;; This function is called by:
  2347 ;;		_i2c_ISR
  2348 ;;		i2_i2c_ISR
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text17
  2353  0006DC                     __ptext17:
  2354                           	opt stack 0
  2355  0006DC                     _do_I2C_DO_ADDRESS_NACK:
  2356                           	opt stack 0
  2357                           
  2358                           ;Skip over the trampoline to the duplicate function for level 2
  2359  0006DC  B24A               	btfsc	btemp,1,c
  2360  0006DE  EFB7  F003         	goto	i2_do_I2C_DO_ADDRESS_NACK
  2361  0006E2                     _do_I2C_DO_ADDRESS_NACK$intlevel0:
  2362                           	opt stack 16
  2363                           
  2364                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  2365                           
  2366                           ;incstack = 0
  2367  0006E2  9601               	bcf	_i2c_status,3,c
  2368                           
  2369                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  2370  0006E4  0E02               	movlw	2
  2371  0006E6  6E0C               	movwf	_i2c_status+11,c
  2372                           
  2373                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  2374  0006E8  D006               	goto	l421
  2375  0006EA                     
  2376                           ;i2c_master.c: 326: case i2c_restart_write:
  2377                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  2378  0006EA  EC61  F006         	call	_do_I2C_SEND_RESTART	;wreg free
  2379  0006EE  0012               	return	
  2380  0006F0                     
  2381                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  2382  0006F0  EC5A  F006         	call	_do_I2C_SEND_STOP	;wreg free
  2383                           
  2384                           ;i2c_master.c: 330: }
  2385  0006F4  0012               	return	
  2386  0006F6                     l421:
  2387  0006F6  C023  F09A         	movff	_i2c_status+34,returnStop@p
  2388  0006FA  C024  F09B         	movff	_i2c_status+35,returnStop@p+1
  2389  0006FE  EE20  F013         	lfsr	2,_i2c_status+18
  2390  000702  D801               	call	u1208
  2391  000704  D00A               	goto	u1209
  2392  000706                     u1208:
  2393  000706  0005               	push	
  2394  000708  6EFA               	movwf	pclath,c
  2395  00070A  50DE               	movf	postinc2,w,c
  2396  00070C  6EFD               	movwf	tosl,c
  2397  00070E  50DE               	movf	postinc2,w,c
  2398  000710  6EFE               	movwf	tosh,c
  2399  000712  50DE               	movf	postinc2,w,c
  2400  000714  6EFF               	movwf	tosu,c
  2401  000716  50FA               	movf	pclath,w,c
  2402  000718  0012               	return		;indir
  2403  00071A                     u1209:
  2404                           
  2405                           ; Switch size 1, requested type "space"
  2406                           ; Number of cases is 2, Range of values is 2 to 3
  2407                           ; switch strategies available:
  2408                           ; Name         Instructions Cycles
  2409                           ; simple_byte            7     4 (average)
  2410                           ;	Chosen strategy is simple_byte
  2411  00071A  0A02               	xorlw	2	; case 2
  2412  00071C  B4D8               	btfsc	status,2,c
  2413  00071E  D7E5               	goto	l422
  2414  000720  0A01               	xorlw	1	; case 3
  2415  000722  B4D8               	btfsc	status,2,c
  2416  000724  D7E2               	goto	l422
  2417  000726  D7E4               	goto	l425
  2418  000728                     __end_of_do_I2C_DO_ADDRESS_NACK:
  2419                           	opt stack 0
  2420                           tosu	equ	0xFFF
  2421                           tosh	equ	0xFFE
  2422                           tosl	equ	0xFFD
  2423                           pclath	equ	0xFFA
  2424                           tblptru	equ	0xFF8
  2425                           tblptrh	equ	0xFF7
  2426                           tblptrl	equ	0xFF6
  2427                           tablat	equ	0xFF5
  2428                           prodh	equ	0xFF4
  2429                           prodl	equ	0xFF3
  2430                           intcon	equ	0xFF2
  2431                           postinc0	equ	0xFEE
  2432                           wreg	equ	0xFE8
  2433                           postdec1	equ	0xFE5
  2434                           fsr1l	equ	0xFE1
  2435                           indf2	equ	0xFDF
  2436                           postinc2	equ	0xFDE
  2437                           fsr2h	equ	0xFDA
  2438                           fsr2l	equ	0xFD9
  2439                           status	equ	0xFD8
  2440                           
  2441 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  2442 ;; Defined at:
  2443 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      enum E11956
  2450 ;; Registers used:
  2451 ;;		wreg, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2461 ;;Total ram usage:        0 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:    7
  2464 ;; This function calls:
  2465 ;;		_i2c1_driver_sendNACK
  2466 ;; This function is called by:
  2467 ;;		_do_I2C_RX
  2468 ;;		_i2c_ISR
  2469 ;;		i2_i2c_ISR
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text18
  2474  000C8A                     __ptext18:
  2475                           	opt stack 0
  2476  000C8A                     _do_I2C_DO_NACK_RESTART:
  2477                           	opt stack 0
  2478                           
  2479                           ;Skip over the trampoline to the duplicate function for level 2
  2480  000C8A  B24A               	btfsc	btemp,1,c
  2481  000C8C  EFB0  F006         	goto	i2_do_I2C_DO_NACK_RESTART
  2482  000C90                     _do_I2C_DO_NACK_RESTART$intlevel0:
  2483                           	opt stack 17
  2484                           
  2485                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  2486                           
  2487                           ;incstack = 0
  2488  000C90  ECD3  F006         	call	_i2c1_driver_sendNACK	;wreg free
  2489                           
  2490                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  2491  000C94  0E09               	movlw	9
  2492  000C96  0012               	return	
  2493  000C98                     __end_of_do_I2C_DO_NACK_RESTART:
  2494                           	opt stack 0
  2495                           tosu	equ	0xFFF
  2496                           tosh	equ	0xFFE
  2497                           tosl	equ	0xFFD
  2498                           pclath	equ	0xFFA
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           prodh	equ	0xFF4
  2504                           prodl	equ	0xFF3
  2505                           intcon	equ	0xFF2
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           postdec1	equ	0xFE5
  2509                           fsr1l	equ	0xFE1
  2510                           indf2	equ	0xFDF
  2511                           postinc2	equ	0xFDE
  2512                           fsr2h	equ	0xFDA
  2513                           fsr2l	equ	0xFD9
  2514                           status	equ	0xFD8
  2515                           
  2516 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  2517 ;; Defined at:
  2518 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      enum E11956
  2525 ;; Registers used:
  2526 ;;		wreg, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;Total ram usage:        0 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    7
  2539 ;; This function calls:
  2540 ;;		_i2c1_driver_sendNACK
  2541 ;; This function is called by:
  2542 ;;		_do_I2C_RX
  2543 ;;		_i2c_ISR
  2544 ;;		i2_i2c_ISR
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text19
  2549  000C98                     __ptext19:
  2550                           	opt stack 0
  2551  000C98                     _do_I2C_DO_NACK_STOP:
  2552                           	opt stack 0
  2553                           
  2554                           ;Skip over the trampoline to the duplicate function for level 2
  2555  000C98  B24A               	btfsc	btemp,1,c
  2556  000C9A  EFB4  F006         	goto	i2_do_I2C_DO_NACK_STOP
  2557  000C9E                     _do_I2C_DO_NACK_STOP$intlevel0:
  2558                           	opt stack 17
  2559                           
  2560                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  2561                           
  2562                           ;incstack = 0
  2563  000C9E  ECD3  F006         	call	_i2c1_driver_sendNACK	;wreg free
  2564                           
  2565                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  2566  000CA2  0E0A               	movlw	10
  2567  000CA4  0012               	return	
  2568  000CA6                     __end_of_do_I2C_DO_NACK_STOP:
  2569                           	opt stack 0
  2570                           tosu	equ	0xFFF
  2571                           tosh	equ	0xFFE
  2572                           tosl	equ	0xFFD
  2573                           pclath	equ	0xFFA
  2574                           tblptru	equ	0xFF8
  2575                           tblptrh	equ	0xFF7
  2576                           tblptrl	equ	0xFF6
  2577                           tablat	equ	0xFF5
  2578                           prodh	equ	0xFF4
  2579                           prodl	equ	0xFF3
  2580                           intcon	equ	0xFF2
  2581                           postinc0	equ	0xFEE
  2582                           wreg	equ	0xFE8
  2583                           postdec1	equ	0xFE5
  2584                           fsr1l	equ	0xFE1
  2585                           indf2	equ	0xFDF
  2586                           postinc2	equ	0xFDE
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _do_I2C_DO_ACK *****************
  2592 ;; Defined at:
  2593 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      enum E11956
  2600 ;; Registers used:
  2601 ;;		wreg, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    7
  2614 ;; This function calls:
  2615 ;;		_i2c1_driver_sendACK
  2616 ;; This function is called by:
  2617 ;;		_i2c_ISR
  2618 ;;		i2_i2c_ISR
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text20
  2623  000CA6                     __ptext20:
  2624                           	opt stack 0
  2625  000CA6                     _do_I2C_DO_ACK:
  2626                           	opt stack 0
  2627                           
  2628                           ;Skip over the trampoline to the duplicate function for level 2
  2629  000CA6  B24A               	btfsc	btemp,1,c
  2630  000CA8  EFB8  F006         	goto	i2_do_I2C_DO_ACK
  2631  000CAC                     _do_I2C_DO_ACK$intlevel0:
  2632                           	opt stack 18
  2633                           
  2634                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  2635                           
  2636                           ;incstack = 0
  2637  000CAC  ECD6  F006         	call	_i2c1_driver_sendACK	;wreg free
  2638                           
  2639                           ;i2c_master.c: 302: return I2C_RCEN;
  2640  000CB0  0E05               	movlw	5
  2641  000CB2  0012               	return	
  2642  000CB4                     __end_of_do_I2C_DO_ACK:
  2643                           	opt stack 0
  2644                           tosu	equ	0xFFF
  2645                           tosh	equ	0xFFE
  2646                           tosl	equ	0xFFD
  2647                           pclath	equ	0xFFA
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           postdec1	equ	0xFE5
  2658                           fsr1l	equ	0xFE1
  2659                           indf2	equ	0xFDF
  2660                           postinc2	equ	0xFDE
  2661                           fsr2h	equ	0xFDA
  2662                           fsr2l	equ	0xFD9
  2663                           status	equ	0xFD8
  2664                           
  2665 ;; *************** function _do_I2C_RCEN *****************
  2666 ;; Defined at:
  2667 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      enum E11956
  2674 ;; Registers used:
  2675 ;;		wreg, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    7
  2688 ;; This function calls:
  2689 ;;		_i2c1_driver_startRX
  2690 ;; This function is called by:
  2691 ;;		_i2c_ISR
  2692 ;;		i2_i2c_ISR
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text21
  2697  000C4E                     __ptext21:
  2698                           	opt stack 0
  2699  000C4E                     _do_I2C_RCEN:
  2700                           	opt stack 0
  2701                           
  2702                           ;Skip over the trampoline to the duplicate function for level 2
  2703  000C4E  B24A               	btfsc	btemp,1,c
  2704  000C50  EF9A  F006         	goto	i2_do_I2C_RCEN
  2705  000C54                     _do_I2C_RCEN$intlevel0:
  2706                           	opt stack 18
  2707                           
  2708                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  2709                           
  2710                           ;incstack = 0
  2711  000C54  9601               	bcf	_i2c_status,3,c
  2712                           
  2713                           ;i2c_master.c: 295: i2c1_driver_startRX();
  2714  000C56  ECF3  F006         	call	_i2c1_driver_startRX	;wreg free
  2715                           
  2716                           ;i2c_master.c: 296: return I2C_RX;
  2717  000C5A  0E04               	movlw	4
  2718  000C5C  0012               	return	
  2719  000C5E                     __end_of_do_I2C_RCEN:
  2720                           	opt stack 0
  2721                           tosu	equ	0xFFF
  2722                           tosh	equ	0xFFE
  2723                           tosl	equ	0xFFD
  2724                           pclath	equ	0xFFA
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           intcon	equ	0xFF2
  2732                           postinc0	equ	0xFEE
  2733                           wreg	equ	0xFE8
  2734                           postdec1	equ	0xFE5
  2735                           fsr1l	equ	0xFE1
  2736                           indf2	equ	0xFDF
  2737                           postinc2	equ	0xFDE
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  2743 ;; Defined at:
  2744 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      enum E11956
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    7
  2765 ;; This function calls:
  2766 ;;		_i2c1_driver_TXData
  2767 ;; This function is called by:
  2768 ;;		_i2c_ISR
  2769 ;;		i2_i2c_ISR
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text22
  2774  000BEE                     __ptext22:
  2775                           	opt stack 0
  2776  000BEE                     _do_I2C_SEND_ADR_WRITE:
  2777                           	opt stack 0
  2778                           
  2779                           ;Skip over the trampoline to the duplicate function for level 2
  2780  000BEE  B24A               	btfsc	btemp,1,c
  2781  000BF0  EF76  F006         	goto	i2_do_I2C_SEND_ADR_WRITE
  2782  000BF4                     _do_I2C_SEND_ADR_WRITE$intlevel0:
  2783                           	opt stack 18
  2784                           
  2785                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  2786                           
  2787                           ;incstack = 0
  2788  000BF4  8601               	bsf	_i2c_status,3,c
  2789                           
  2790                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  2791  000BF6  5002               	movf	_i2c_status+1,w,c
  2792  000BF8  2402               	addwf	_i2c_status+1,w,c
  2793  000BFA  ECAC  F006         	call	_i2c1_driver_TXData
  2794                           
  2795                           ;i2c_master.c: 289: return I2C_TX;
  2796  000BFE  0E03               	movlw	3
  2797  000C00  0012               	return	
  2798  000C02                     __end_of_do_I2C_SEND_ADR_WRITE:
  2799                           	opt stack 0
  2800                           tosu	equ	0xFFF
  2801                           tosh	equ	0xFFE
  2802                           tosl	equ	0xFFD
  2803                           pclath	equ	0xFFA
  2804                           tblptru	equ	0xFF8
  2805                           tblptrh	equ	0xFF7
  2806                           tblptrl	equ	0xFF6
  2807                           tablat	equ	0xFF5
  2808                           prodh	equ	0xFF4
  2809                           prodl	equ	0xFF3
  2810                           intcon	equ	0xFF2
  2811                           postinc0	equ	0xFEE
  2812                           wreg	equ	0xFE8
  2813                           postdec1	equ	0xFE5
  2814                           fsr1l	equ	0xFE1
  2815                           indf2	equ	0xFDF
  2816                           postinc2	equ	0xFDE
  2817                           fsr2h	equ	0xFDA
  2818                           fsr2l	equ	0xFD9
  2819                           status	equ	0xFD8
  2820                           
  2821 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  2822 ;; Defined at:
  2823 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      enum E11956
  2830 ;; Registers used:
  2831 ;;		wreg, status,0, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2841 ;;Total ram usage:        0 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    7
  2844 ;; This function calls:
  2845 ;;		_i2c1_driver_TXData
  2846 ;; This function is called by:
  2847 ;;		_i2c_ISR
  2848 ;;		i2_i2c_ISR
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text23
  2853  000C02                     __ptext23:
  2854                           	opt stack 0
  2855  000C02                     _do_I2C_SEND_ADR_READ:
  2856                           	opt stack 0
  2857                           
  2858                           ;Skip over the trampoline to the duplicate function for level 2
  2859  000C02  B24A               	btfsc	btemp,1,c
  2860  000C04  EF7D  F006         	goto	i2_do_I2C_SEND_ADR_READ
  2861  000C08                     _do_I2C_SEND_ADR_READ$intlevel0:
  2862                           	opt stack 18
  2863                           
  2864                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  2865                           
  2866                           ;incstack = 0
  2867  000C08  8601               	bsf	_i2c_status,3,c
  2868                           
  2869                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  2870  000C0A  80D8               	bsf	status,0,c
  2871  000C0C  3402               	rlcf	_i2c_status+1,w,c
  2872  000C0E  ECAC  F006         	call	_i2c1_driver_TXData
  2873                           
  2874                           ;i2c_master.c: 282: return I2C_RCEN;
  2875  000C12  0E05               	movlw	5
  2876  000C14  0012               	return	
  2877  000C16                     __end_of_do_I2C_SEND_ADR_READ:
  2878                           	opt stack 0
  2879                           tosu	equ	0xFFF
  2880                           tosh	equ	0xFFE
  2881                           tosl	equ	0xFFD
  2882                           pclath	equ	0xFFA
  2883                           tblptru	equ	0xFF8
  2884                           tblptrh	equ	0xFF7
  2885                           tblptrl	equ	0xFF6
  2886                           tablat	equ	0xFF5
  2887                           prodh	equ	0xFF4
  2888                           prodl	equ	0xFF3
  2889                           intcon	equ	0xFF2
  2890                           postinc0	equ	0xFEE
  2891                           wreg	equ	0xFE8
  2892                           postdec1	equ	0xFE5
  2893                           fsr1l	equ	0xFE1
  2894                           indf2	equ	0xFDF
  2895                           postinc2	equ	0xFDE
  2896                           fsr2h	equ	0xFDA
  2897                           fsr2l	equ	0xFD9
  2898                           status	equ	0xFD8
  2899                           
  2900 ;; *************** function _do_I2C_SEND_STOP *****************
  2901 ;; Defined at:
  2902 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      enum E11956
  2909 ;; Registers used:
  2910 ;;		wreg, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    7
  2923 ;; This function calls:
  2924 ;;		_i2c1_driver_stop
  2925 ;; This function is called by:
  2926 ;;		_do_I2C_DO_ADDRESS_NACK
  2927 ;;		_do_I2C_TX
  2928 ;;		_do_I2C_TX_EMPTY
  2929 ;;		_i2c_ISR
  2930 ;;		i2_i2c_ISR
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text24
  2935  000CB4                     __ptext24:
  2936                           	opt stack 0
  2937  000CB4                     _do_I2C_SEND_STOP:
  2938                           	opt stack 0
  2939                           
  2940                           ;Skip over the trampoline to the duplicate function for level 2
  2941  000CB4  B24A               	btfsc	btemp,1,c
  2942  000CB6  EFBC  F006         	goto	i2_do_I2C_SEND_STOP
  2943  000CBA                     _do_I2C_SEND_STOP$intlevel0:
  2944                           	opt stack 17
  2945                           
  2946                           ;i2c_master.c: 274: i2c1_driver_stop();
  2947                           
  2948                           ;incstack = 0
  2949  000CBA  ECF5  F006         	call	_i2c1_driver_stop	;wreg free
  2950                           
  2951                           ;i2c_master.c: 275: return I2C_IDLE;
  2952  000CBE  0E00               	movlw	0
  2953  000CC0  0012               	return	
  2954  000CC2                     __end_of_do_I2C_SEND_STOP:
  2955                           	opt stack 0
  2956                           tosu	equ	0xFFF
  2957                           tosh	equ	0xFFE
  2958                           tosl	equ	0xFFD
  2959                           pclath	equ	0xFFA
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           prodh	equ	0xFF4
  2965                           prodl	equ	0xFF3
  2966                           intcon	equ	0xFF2
  2967                           postinc0	equ	0xFEE
  2968                           wreg	equ	0xFE8
  2969                           postdec1	equ	0xFE5
  2970                           fsr1l	equ	0xFE1
  2971                           indf2	equ	0xFDF
  2972                           postinc2	equ	0xFDE
  2973                           fsr2h	equ	0xFDA
  2974                           fsr2l	equ	0xFD9
  2975                           status	equ	0xFD8
  2976                           
  2977 ;; *************** function _do_I2C_SEND_RESTART *****************
  2978 ;; Defined at:
  2979 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      enum E11956
  2986 ;; Registers used:
  2987 ;;		wreg, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    7
  3000 ;; This function calls:
  3001 ;;		_i2c1_driver_restart
  3002 ;; This function is called by:
  3003 ;;		_do_I2C_DO_ADDRESS_NACK
  3004 ;;		_do_I2C_TX_EMPTY
  3005 ;;		_i2c_ISR
  3006 ;;		i2_i2c_ISR
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text25
  3011  000CC2                     __ptext25:
  3012                           	opt stack 0
  3013  000CC2                     _do_I2C_SEND_RESTART:
  3014                           	opt stack 0
  3015                           
  3016                           ;Skip over the trampoline to the duplicate function for level 2
  3017  000CC2  B24A               	btfsc	btemp,1,c
  3018  000CC4  EFC0  F006         	goto	i2_do_I2C_SEND_RESTART
  3019  000CC8                     _do_I2C_SEND_RESTART$intlevel0:
  3020                           	opt stack 17
  3021                           
  3022                           ;i2c_master.c: 268: i2c1_driver_restart();
  3023                           
  3024                           ;incstack = 0
  3025  000CC8  ECF7  F006         	call	_i2c1_driver_restart	;wreg free
  3026                           
  3027                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  3028  000CCC  0E01               	movlw	1
  3029  000CCE  0012               	return	
  3030  000CD0                     __end_of_do_I2C_SEND_RESTART:
  3031                           	opt stack 0
  3032                           tosu	equ	0xFFF
  3033                           tosh	equ	0xFFE
  3034                           tosl	equ	0xFFD
  3035                           pclath	equ	0xFFA
  3036                           tblptru	equ	0xFF8
  3037                           tblptrh	equ	0xFF7
  3038                           tblptrl	equ	0xFF6
  3039                           tablat	equ	0xFF5
  3040                           prodh	equ	0xFF4
  3041                           prodl	equ	0xFF3
  3042                           intcon	equ	0xFF2
  3043                           postinc0	equ	0xFEE
  3044                           wreg	equ	0xFE8
  3045                           postdec1	equ	0xFE5
  3046                           fsr1l	equ	0xFE1
  3047                           indf2	equ	0xFDF
  3048                           postinc2	equ	0xFDE
  3049                           fsr2h	equ	0xFDA
  3050                           fsr2l	equ	0xFD9
  3051                           status	equ	0xFD8
  3052                           
  3053 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  3054 ;; Defined at:
  3055 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      enum E11956
  3062 ;; Registers used:
  3063 ;;		wreg, cstack
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3073 ;;Total ram usage:        0 bytes
  3074 ;; Hardware stack levels used:    1
  3075 ;; Hardware stack levels required when called:    7
  3076 ;; This function calls:
  3077 ;;		_i2c1_driver_restart
  3078 ;; This function is called by:
  3079 ;;		_do_I2C_TX
  3080 ;;		_i2c_ISR
  3081 ;;		i2_i2c_ISR
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text26
  3086  000CD0                     __ptext26:
  3087                           	opt stack 0
  3088  000CD0                     _do_I2C_SEND_RESTART_WRITE:
  3089                           	opt stack 0
  3090                           
  3091                           ;Skip over the trampoline to the duplicate function for level 2
  3092  000CD0  B24A               	btfsc	btemp,1,c
  3093  000CD2  EFC4  F006         	goto	i2_do_I2C_SEND_RESTART_WRITE
  3094  000CD6                     _do_I2C_SEND_RESTART_WRITE$intlevel0:
  3095                           	opt stack 17
  3096                           
  3097                           ;i2c_master.c: 262: i2c1_driver_restart();
  3098                           
  3099                           ;incstack = 0
  3100  000CD6  ECF7  F006         	call	_i2c1_driver_restart	;wreg free
  3101                           
  3102                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  3103  000CDA  0E02               	movlw	2
  3104  000CDC  0012               	return	
  3105  000CDE                     __end_of_do_I2C_SEND_RESTART_WRITE:
  3106                           	opt stack 0
  3107                           tosu	equ	0xFFF
  3108                           tosh	equ	0xFFE
  3109                           tosl	equ	0xFFD
  3110                           pclath	equ	0xFFA
  3111                           tblptru	equ	0xFF8
  3112                           tblptrh	equ	0xFF7
  3113                           tblptrl	equ	0xFF6
  3114                           tablat	equ	0xFF5
  3115                           prodh	equ	0xFF4
  3116                           prodl	equ	0xFF3
  3117                           intcon	equ	0xFF2
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           postdec1	equ	0xFE5
  3121                           fsr1l	equ	0xFE1
  3122                           indf2	equ	0xFDF
  3123                           postinc2	equ	0xFDE
  3124                           fsr2h	equ	0xFDA
  3125                           fsr2l	equ	0xFD9
  3126                           status	equ	0xFD8
  3127                           
  3128 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  3129 ;; Defined at:
  3130 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      enum E11956
  3137 ;; Registers used:
  3138 ;;		wreg, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;Total ram usage:        0 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    7
  3151 ;; This function calls:
  3152 ;;		_i2c1_driver_restart
  3153 ;; This function is called by:
  3154 ;;		_do_I2C_TX
  3155 ;;		_i2c_ISR
  3156 ;;		i2_i2c_ISR
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text27
  3161  000CDE                     __ptext27:
  3162                           	opt stack 0
  3163  000CDE                     _do_I2C_SEND_RESTART_READ:
  3164                           	opt stack 0
  3165                           
  3166                           ;Skip over the trampoline to the duplicate function for level 2
  3167  000CDE  B24A               	btfsc	btemp,1,c
  3168  000CE0  EFC8  F006         	goto	i2_do_I2C_SEND_RESTART_READ
  3169  000CE4                     _do_I2C_SEND_RESTART_READ$intlevel0:
  3170                           	opt stack 17
  3171                           
  3172                           ;i2c_master.c: 256: i2c1_driver_restart();
  3173                           
  3174                           ;incstack = 0
  3175  000CE4  ECF7  F006         	call	_i2c1_driver_restart	;wreg free
  3176                           
  3177                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  3178  000CE8  0E01               	movlw	1
  3179  000CEA  0012               	return	
  3180  000CEC                     __end_of_do_I2C_SEND_RESTART_READ:
  3181                           	opt stack 0
  3182                           tosu	equ	0xFFF
  3183                           tosh	equ	0xFFE
  3184                           tosl	equ	0xFFD
  3185                           pclath	equ	0xFFA
  3186                           tblptru	equ	0xFF8
  3187                           tblptrh	equ	0xFF7
  3188                           tblptrl	equ	0xFF6
  3189                           tablat	equ	0xFF5
  3190                           prodh	equ	0xFF4
  3191                           prodl	equ	0xFF3
  3192                           intcon	equ	0xFF2
  3193                           postinc0	equ	0xFEE
  3194                           wreg	equ	0xFE8
  3195                           postdec1	equ	0xFE5
  3196                           fsr1l	equ	0xFE1
  3197                           indf2	equ	0xFDF
  3198                           postinc2	equ	0xFDE
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _do_I2C_IDLE *****************
  3204 ;; Defined at:
  3205 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      enum E11956
  3212 ;; Registers used:
  3213 ;;		wreg, status,2
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;Total ram usage:        0 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    6
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_i2c_ISR
  3230 ;;		i2_i2c_ISR
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text28
  3235  000C5E                     __ptext28:
  3236                           	opt stack 0
  3237  000C5E                     _do_I2C_IDLE:
  3238                           	opt stack 0
  3239                           
  3240                           ;Skip over the trampoline to the duplicate function for level 2
  3241  000C5E  B24A               	btfsc	btemp,1,c
  3242  000C60  EF9F  F006         	goto	i2_do_I2C_IDLE
  3243  000C64                     _do_I2C_IDLE$intlevel0:
  3244                           	opt stack 19
  3245                           
  3246                           ;i2c_master.c: 249: i2c_status.busy = 0;
  3247                           
  3248                           ;incstack = 0
  3249  000C64  9001               	bcf	_i2c_status,0,c
  3250                           
  3251                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  3252  000C66  0E00               	movlw	0
  3253  000C68  6E0C               	movwf	_i2c_status+11,c
  3254                           
  3255                           ;i2c_master.c: 251: return I2C_RESET;
  3256  000C6A  0E0E               	movlw	14
  3257  000C6C  0012               	return	
  3258  000C6E                     __end_of_do_I2C_IDLE:
  3259                           	opt stack 0
  3260                           tosu	equ	0xFFF
  3261                           tosh	equ	0xFFE
  3262                           tosl	equ	0xFFD
  3263                           pclath	equ	0xFFA
  3264                           tblptru	equ	0xFF8
  3265                           tblptrh	equ	0xFF7
  3266                           tblptrl	equ	0xFF6
  3267                           tablat	equ	0xFF5
  3268                           prodh	equ	0xFF4
  3269                           prodl	equ	0xFF3
  3270                           intcon	equ	0xFF2
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           postdec1	equ	0xFE5
  3274                           fsr1l	equ	0xFE1
  3275                           indf2	equ	0xFDF
  3276                           postinc2	equ	0xFDE
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           
  3281 ;; *************** function _do_I2C_RESET *****************
  3282 ;; Defined at:
  3283 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      enum E11956
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    7
  3304 ;; This function calls:
  3305 ;;		_i2c1_driver_resetBus
  3306 ;; This function is called by:
  3307 ;;		_i2c_ISR
  3308 ;;		i2_i2c_ISR
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text29
  3313  000C16                     __ptext29:
  3314                           	opt stack 0
  3315  000C16                     _do_I2C_RESET:
  3316                           	opt stack 0
  3317                           
  3318                           ;Skip over the trampoline to the duplicate function for level 2
  3319  000C16  B24A               	btfsc	btemp,1,c
  3320  000C18  EF84  F006         	goto	i2_do_I2C_RESET
  3321  000C1C                     _do_I2C_RESET$intlevel0:
  3322                           	opt stack 18
  3323                           
  3324                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  3325                           
  3326                           ;incstack = 0
  3327  000C1C  EC0B  F007         	call	_i2c1_driver_resetBus	;wreg free
  3328                           
  3329                           ;i2c_master.c: 242: i2c_status.busy = 0;
  3330  000C20  9001               	bcf	_i2c_status,0,c
  3331                           
  3332                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  3333  000C22  0E00               	movlw	0
  3334  000C24  6E0C               	movwf	_i2c_status+11,c
  3335                           
  3336                           ;i2c_master.c: 244: return I2C_RESET;
  3337  000C26  0E0E               	movlw	14
  3338  000C28  0012               	return	
  3339  000C2A                     __end_of_do_I2C_RESET:
  3340                           	opt stack 0
  3341                           tosu	equ	0xFFF
  3342                           tosh	equ	0xFFE
  3343                           tosl	equ	0xFFD
  3344                           pclath	equ	0xFFA
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           prodh	equ	0xFF4
  3350                           prodl	equ	0xFF3
  3351                           intcon	equ	0xFF2
  3352                           postinc0	equ	0xFEE
  3353                           wreg	equ	0xFE8
  3354                           postdec1	equ	0xFE5
  3355                           fsr1l	equ	0xFE1
  3356                           indf2	equ	0xFDF
  3357                           postinc2	equ	0xFDE
  3358                           fsr2h	equ	0xFDA
  3359                           fsr2l	equ	0xFD9
  3360                           status	equ	0xFD8
  3361                           
  3362 ;; *************** function _do_I2C_TX_EMPTY *****************
  3363 ;; Defined at:
  3364 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      enum E11956
  3371 ;; Registers used:
  3372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    9
  3385 ;; This function calls:
  3386 ;;		Absolute function
  3387 ;;		_do_I2C_SEND_RESTART
  3388 ;;		_do_I2C_SEND_STOP
  3389 ;;		_i2c_restartWrite
  3390 ;;		_mssp1_setIRQ
  3391 ;;		_rd1RegCompleteHandler
  3392 ;;		_rd2RegCompleteHandler
  3393 ;;		_rdBlkRegCompleteHandler
  3394 ;;		_returnReset
  3395 ;;		_returnStop
  3396 ;;		_wr1RegCompleteHandler
  3397 ;;		_wr2RegCompleteHandler
  3398 ;; This function is called by:
  3399 ;;		_i2c_ISR
  3400 ;;		i2_i2c_ISR
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text30
  3405  00058C                     __ptext30:
  3406                           	opt stack 0
  3407  00058C                     _do_I2C_TX_EMPTY:
  3408                           	opt stack 0
  3409                           
  3410                           ;Skip over the trampoline to the duplicate function for level 2
  3411  00058C  B24A               	btfsc	btemp,1,c
  3412  00058E  EFF4  F002         	goto	i2_do_I2C_TX_EMPTY
  3413  000592                     _do_I2C_TX_EMPTY$intlevel0:
  3414                           	opt stack 16
  3415                           
  3416                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  3417                           
  3418                           ;incstack = 0
  3419  000592  8401               	bsf	_i2c_status,2,c
  3420                           
  3421                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  3422  000594  D00A               	goto	l457
  3423  000596                     
  3424                           ;i2c_master.c: 388: case i2c_restart_write:
  3425                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  3426  000596  EC61  F006         	call	_do_I2C_SEND_RESTART	;wreg free
  3427  00059A  0012               	return	
  3428  00059C                     
  3429                           ;i2c_master.c: 391: mssp1_setIRQ();
  3430  00059C  ECD0  F006         	call	_mssp1_setIRQ	;wreg free
  3431                           
  3432                           ;i2c_master.c: 392: return I2C_TX;
  3433  0005A0  0E03               	movlw	3
  3434  0005A2  0012               	return	
  3435  0005A4                     
  3436                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  3437                           
  3438                           ;i2c_master.c: 394: case i2c_stop:
  3439  0005A4  EC5A  F006         	call	_do_I2C_SEND_STOP	;wreg free
  3440                           
  3441                           ;i2c_master.c: 396: }
  3442  0005A8  0012               	return	
  3443  0005AA                     l457:
  3444  0005AA  C01F  F09A         	movff	_i2c_status+30,returnStop@p
  3445  0005AE  C020  F09B         	movff	_i2c_status+31,returnStop@p+1
  3446  0005B2  EE20  F00D         	lfsr	2,_i2c_status+12
  3447  0005B6  D801               	call	u1268
  3448  0005B8  D00A               	goto	u1269
  3449  0005BA                     u1268:
  3450  0005BA  0005               	push	
  3451  0005BC  6EFA               	movwf	pclath,c
  3452  0005BE  50DE               	movf	postinc2,w,c
  3453  0005C0  6EFD               	movwf	tosl,c
  3454  0005C2  50DE               	movf	postinc2,w,c
  3455  0005C4  6EFE               	movwf	tosh,c
  3456  0005C6  50DE               	movf	postinc2,w,c
  3457  0005C8  6EFF               	movwf	tosu,c
  3458  0005CA  50FA               	movf	pclath,w,c
  3459  0005CC  0012               	return		;indir
  3460  0005CE                     u1269:
  3461                           
  3462                           ; Switch size 1, requested type "space"
  3463                           ; Number of cases is 4, Range of values is 1 to 4
  3464                           ; switch strategies available:
  3465                           ; Name         Instructions Cycles
  3466                           ; simple_byte           13     7 (average)
  3467                           ;	Chosen strategy is simple_byte
  3468  0005CE  0A01               	xorlw	1	; case 1
  3469  0005D0  B4D8               	btfsc	status,2,c
  3470  0005D2  D7E8               	goto	l462
  3471  0005D4  0A03               	xorlw	3	; case 2
  3472  0005D6  B4D8               	btfsc	status,2,c
  3473  0005D8  D7DE               	goto	l458
  3474  0005DA  0A01               	xorlw	1	; case 3
  3475  0005DC  B4D8               	btfsc	status,2,c
  3476  0005DE  D7DB               	goto	l458
  3477  0005E0  0A07               	xorlw	7	; case 4
  3478  0005E2  B4D8               	btfsc	status,2,c
  3479  0005E4  D7DB               	goto	l461
  3480  0005E6  D7DE               	goto	l462
  3481  0005E8                     __end_of_do_I2C_TX_EMPTY:
  3482                           	opt stack 0
  3483                           tosu	equ	0xFFF
  3484                           tosh	equ	0xFFE
  3485                           tosl	equ	0xFFD
  3486                           pclath	equ	0xFFA
  3487                           tblptru	equ	0xFF8
  3488                           tblptrh	equ	0xFF7
  3489                           tblptrl	equ	0xFF6
  3490                           tablat	equ	0xFF5
  3491                           prodh	equ	0xFF4
  3492                           prodl	equ	0xFF3
  3493                           intcon	equ	0xFF2
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           postdec1	equ	0xFE5
  3497                           fsr1l	equ	0xFE1
  3498                           indf2	equ	0xFDF
  3499                           postinc2	equ	0xFDE
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           
  3504 ;; *************** function _mssp1_setIRQ *****************
  3505 ;; Defined at:
  3506 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		None
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    6
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_do_I2C_TX_EMPTY
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text31
  3535  000DA0                     __ptext31:
  3536                           	opt stack 0
  3537  000DA0                     _mssp1_setIRQ:
  3538                           	opt stack 18
  3539                           
  3540                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  3541                           
  3542                           ;incstack = 0
  3543  000DA0  010E               	movlb	14	; () banked
  3544  000DA2  81CD               	bsf	205,0,b	;volatile
  3545                           
  3546                           ; BSR set to: 14
  3547  000DA4  0012               	return		;funcret
  3548  000DA6                     __end_of_mssp1_setIRQ:
  3549                           	opt stack 0
  3550                           tosu	equ	0xFFF
  3551                           tosh	equ	0xFFE
  3552                           tosl	equ	0xFFD
  3553                           pclath	equ	0xFFA
  3554                           tblptru	equ	0xFF8
  3555                           tblptrh	equ	0xFF7
  3556                           tblptrl	equ	0xFF6
  3557                           tablat	equ	0xFF5
  3558                           prodh	equ	0xFF4
  3559                           prodl	equ	0xFF3
  3560                           intcon	equ	0xFF2
  3561                           postinc0	equ	0xFEE
  3562                           wreg	equ	0xFE8
  3563                           postdec1	equ	0xFE5
  3564                           fsr1l	equ	0xFE1
  3565                           indf2	equ	0xFDF
  3566                           postinc2	equ	0xFDE
  3567                           fsr2h	equ	0xFDA
  3568                           fsr2l	equ	0xFD9
  3569                           status	equ	0xFD8
  3570                           
  3571 ;; *************** function _i2c1_driver_isNACK *****************
  3572 ;; Defined at:
  3573 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;		None               void
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3590 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3591 ;;Total ram usage:        1 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    6
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_do_I2C_TX
  3598 ;;		_i2c_ISR
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text32
  3603  000BC2                     __ptext32:
  3604                           	opt stack 0
  3605  000BC2                     _i2c1_driver_isNACK:
  3606                           	opt stack 19
  3607                           
  3608                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  3609                           
  3610                           ; BSR set to: 14
  3611                           ;incstack = 0
  3612  000BC2  5097               	movf	3991,w,c	;volatile
  3613  000BC4  0BBF               	andlw	-65
  3614  000BC6  0940               	iorlw	64
  3615  000BC8  6E97               	movwf	3991,c	;volatile
  3616  000BCA  3897               	swapf	3991,w,c	;volatile
  3617  000BCC  32E8               	rrcf	wreg,f,c
  3618  000BCE  32E8               	rrcf	wreg,f,c
  3619  000BD0  0B01               	andlw	1
  3620  000BD2  6E46               	movwf	??_i2c1_driver_isNACK& (0+255),c
  3621  000BD4  3046               	rrcf	??_i2c1_driver_isNACK,w,c
  3622  000BD6  0012               	return	
  3623  000BD8                     __end_of_i2c1_driver_isNACK:
  3624                           	opt stack 0
  3625                           tosu	equ	0xFFF
  3626                           tosh	equ	0xFFE
  3627                           tosl	equ	0xFFD
  3628                           pclath	equ	0xFFA
  3629                           tblptru	equ	0xFF8
  3630                           tblptrh	equ	0xFF7
  3631                           tblptrl	equ	0xFF6
  3632                           tablat	equ	0xFF5
  3633                           prodh	equ	0xFF4
  3634                           prodl	equ	0xFF3
  3635                           intcon	equ	0xFF2
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           postdec1	equ	0xFE5
  3639                           fsr1l	equ	0xFE1
  3640                           indf2	equ	0xFDF
  3641                           postinc2	equ	0xFDE
  3642                           fsr2h	equ	0xFDA
  3643                           fsr2l	equ	0xFD9
  3644                           status	equ	0xFD8
  3645                           
  3646 ;; *************** function _i2c1_driver_TXData *****************
  3647 ;; Defined at:
  3648 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  d               1    wreg     unsigned char 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  d               1   21[COMRAM] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3666 ;;Total ram usage:        1 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    6
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_do_I2C_SEND_ADR_READ
  3673 ;;		_do_I2C_SEND_ADR_WRITE
  3674 ;;		_do_I2C_TX
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text33
  3679  000D58                     __ptext33:
  3680                           	opt stack 0
  3681  000D58                     _i2c1_driver_TXData:
  3682                           	opt stack 18
  3683                           
  3684                           ;incstack = 0
  3685                           ;i2c1_driver_TXData@d stored from wreg
  3686  000D58  6E46               	movwf	i2c1_driver_TXData@d,c
  3687                           
  3688                           ;i2c1_driver.c: 188: SSP1BUF = d;
  3689  000D5A  C046  FF92         	movff	i2c1_driver_TXData@d,3986	;volatile
  3690  000D5E  0012               	return		;funcret
  3691  000D60                     __end_of_i2c1_driver_TXData:
  3692                           	opt stack 0
  3693                           tosu	equ	0xFFF
  3694                           tosh	equ	0xFFE
  3695                           tosl	equ	0xFFD
  3696                           pclath	equ	0xFFA
  3697                           tblptru	equ	0xFF8
  3698                           tblptrh	equ	0xFF7
  3699                           tblptrl	equ	0xFF6
  3700                           tablat	equ	0xFF5
  3701                           prodh	equ	0xFF4
  3702                           prodl	equ	0xFF3
  3703                           intcon	equ	0xFF2
  3704                           postinc0	equ	0xFEE
  3705                           wreg	equ	0xFE8
  3706                           postdec1	equ	0xFE5
  3707                           fsr1l	equ	0xFE1
  3708                           indf2	equ	0xFDF
  3709                           postinc2	equ	0xFDE
  3710                           fsr2h	equ	0xFDA
  3711                           fsr2l	equ	0xFD9
  3712                           status	equ	0xFD8
  3713                           
  3714 ;; *************** function _i2c1_driver_getRXData *****************
  3715 ;; Defined at:
  3716 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      unsigned char 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    6
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_do_I2C_RX
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text34
  3745  000DE2                     __ptext34:
  3746                           	opt stack 0
  3747  000DE2                     _i2c1_driver_getRXData:
  3748                           	opt stack 18
  3749                           
  3750                           ;i2c1_driver.c: 173: return SSP1BUF;
  3751                           
  3752                           ;incstack = 0
  3753  000DE2  5092               	movf	3986,w,c	;volatile
  3754  000DE4  0012               	return	
  3755  000DE6                     __end_of_i2c1_driver_getRXData:
  3756                           	opt stack 0
  3757                           tosu	equ	0xFFF
  3758                           tosh	equ	0xFFE
  3759                           tosl	equ	0xFFD
  3760                           pclath	equ	0xFFA
  3761                           tblptru	equ	0xFF8
  3762                           tblptrh	equ	0xFF7
  3763                           tblptrl	equ	0xFF6
  3764                           tablat	equ	0xFF5
  3765                           prodh	equ	0xFF4
  3766                           prodl	equ	0xFF3
  3767                           intcon	equ	0xFF2
  3768                           postinc0	equ	0xFEE
  3769                           wreg	equ	0xFE8
  3770                           postdec1	equ	0xFE5
  3771                           fsr1l	equ	0xFE1
  3772                           indf2	equ	0xFDF
  3773                           postinc2	equ	0xFDE
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function _i2c1_driver_sendNACK *****************
  3779 ;; Defined at:
  3780 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		None
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    6
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_do_I2C_DO_NACK_STOP
  3805 ;;		_do_I2C_DO_NACK_RESTART
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text35
  3810  000DA6                     __ptext35:
  3811                           	opt stack 0
  3812  000DA6                     _i2c1_driver_sendNACK:
  3813                           	opt stack 17
  3814                           
  3815                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  3816                           
  3817                           ;incstack = 0
  3818  000DA6  8A97               	bsf	3991,5,c	;volatile
  3819                           
  3820                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  3821  000DA8  8897               	bsf	3991,4,c	;volatile
  3822  000DAA  0012               	return		;funcret
  3823  000DAC                     __end_of_i2c1_driver_sendNACK:
  3824                           	opt stack 0
  3825                           tosu	equ	0xFFF
  3826                           tosh	equ	0xFFE
  3827                           tosl	equ	0xFFD
  3828                           pclath	equ	0xFFA
  3829                           tblptru	equ	0xFF8
  3830                           tblptrh	equ	0xFF7
  3831                           tblptrl	equ	0xFF6
  3832                           tablat	equ	0xFF5
  3833                           prodh	equ	0xFF4
  3834                           prodl	equ	0xFF3
  3835                           intcon	equ	0xFF2
  3836                           postinc0	equ	0xFEE
  3837                           wreg	equ	0xFE8
  3838                           postdec1	equ	0xFE5
  3839                           fsr1l	equ	0xFE1
  3840                           indf2	equ	0xFDF
  3841                           postinc2	equ	0xFDE
  3842                           fsr2h	equ	0xFDA
  3843                           fsr2l	equ	0xFD9
  3844                           status	equ	0xFD8
  3845                           
  3846 ;; *************** function _i2c1_driver_resetBus *****************
  3847 ;; Defined at:
  3848 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		None
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    6
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_do_I2C_RESET
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           	psect	text36
  3877  000E16                     __ptext36:
  3878                           	opt stack 0
  3879  000E16                     _i2c1_driver_resetBus:
  3880                           	opt stack 18
  3881                           
  3882                           ;incstack = 0
  3883  000E16  0012               	return		;funcret
  3884  000E18                     __end_of_i2c1_driver_resetBus:
  3885                           	opt stack 0
  3886                           tosu	equ	0xFFF
  3887                           tosh	equ	0xFFE
  3888                           tosl	equ	0xFFD
  3889                           pclath	equ	0xFFA
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           prodh	equ	0xFF4
  3895                           prodl	equ	0xFF3
  3896                           intcon	equ	0xFF2
  3897                           postinc0	equ	0xFEE
  3898                           wreg	equ	0xFE8
  3899                           postdec1	equ	0xFE5
  3900                           fsr1l	equ	0xFE1
  3901                           indf2	equ	0xFDF
  3902                           postinc2	equ	0xFDE
  3903                           fsr2h	equ	0xFDA
  3904                           fsr2l	equ	0xFD9
  3905                           status	equ	0xFD8
  3906                           
  3907 ;; *************** function _i2c1_driver_startRX *****************
  3908 ;; Defined at:
  3909 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		None
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    6
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_do_I2C_RCEN
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text37
  3938  000DE6                     __ptext37:
  3939                           	opt stack 0
  3940  000DE6                     _i2c1_driver_startRX:
  3941                           	opt stack 18
  3942                           
  3943                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  3944                           
  3945                           ;incstack = 0
  3946  000DE6  8697               	bsf	3991,3,c	;volatile
  3947  000DE8  0012               	return		;funcret
  3948  000DEA                     __end_of_i2c1_driver_startRX:
  3949                           	opt stack 0
  3950                           tosu	equ	0xFFF
  3951                           tosh	equ	0xFFE
  3952                           tosl	equ	0xFFD
  3953                           pclath	equ	0xFFA
  3954                           tblptru	equ	0xFF8
  3955                           tblptrh	equ	0xFF7
  3956                           tblptrl	equ	0xFF6
  3957                           tablat	equ	0xFF5
  3958                           prodh	equ	0xFF4
  3959                           prodl	equ	0xFF3
  3960                           intcon	equ	0xFF2
  3961                           postinc0	equ	0xFEE
  3962                           wreg	equ	0xFE8
  3963                           postdec1	equ	0xFE5
  3964                           fsr1l	equ	0xFE1
  3965                           indf2	equ	0xFDF
  3966                           postinc2	equ	0xFDE
  3967                           fsr2h	equ	0xFDA
  3968                           fsr2l	equ	0xFD9
  3969                           status	equ	0xFD8
  3970                           
  3971 ;; *************** function _rdBlkRegCompleteHandler *****************
  3972 ;; Defined at:
  3973 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  p               2   10[BANK0 ] PTR void 
  3976 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3977 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      enum E97
  3982 ;; Registers used:
  3983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3992 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3993 ;;Total ram usage:        2 bytes
  3994 ;; Hardware stack levels used:    1
  3995 ;; Hardware stack levels required when called:    8
  3996 ;; This function calls:
  3997 ;;		_i2c_setBuffer
  3998 ;;		_i2c_setDataCompleteCallback
  3999 ;; This function is called by:
  4000 ;;		_i2c_readDataBlock
  4001 ;;		_do_I2C_DO_ADDRESS_NACK
  4002 ;;		_do_I2C_TX
  4003 ;;		_do_I2C_RX
  4004 ;;		_do_I2C_TX_EMPTY
  4005 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4006 ;;		i2_do_I2C_TX
  4007 ;;		i2_do_I2C_RX
  4008 ;;		i2_do_I2C_TX_EMPTY
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text38
  4013  00068E                     __ptext38:
  4014                           	opt stack 0
  4015  00068E                     _rdBlkRegCompleteHandler:
  4016                           	opt stack 0
  4017                           
  4018                           ;Skip over the trampoline to the duplicate function for level 2
  4019  00068E  B24A               	btfsc	btemp,1,c
  4020  000690  EFDA  F003         	goto	i2_rdBlkRegCompleteHandler
  4021  000694                     _rdBlkRegCompleteHandler$intlevel0:
  4022                           	opt stack 16
  4023                           
  4024                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  4025                           
  4026                           ;incstack = 0
  4027  000694  0100               	movlb	0	; () banked
  4028  000696  EE20 F002          	lfsr	2,2
  4029  00069A  519A               	movf	rdBlkRegCompleteHandler@p& (0+255),w,b
  4030  00069C  26D9               	addwf	fsr2l,f,c
  4031  00069E  519B               	movf	(rdBlkRegCompleteHandler@p+1)& (0+255),w,b
  4032  0006A0  22DA               	addwfc	fsr2h,f,c
  4033  0006A2  CFDE F046          	movff	postinc2,i2c_setBuffer@buffer
  4034  0006A6  CFDD F047          	movff	postdec2,i2c_setBuffer@buffer+1
  4035  0006AA  C09A  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
  4036  0006AE  C09B  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
  4037  0006B2  CFDE F048          	movff	postinc2,i2c_setBuffer@bufferSize
  4038  0006B6  CFDD F049          	movff	postdec2,i2c_setBuffer@bufferSize+1
  4039  0006BA  ECA7  F005         	call	_i2c_setBuffer	;wreg free
  4040                           
  4041                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  4042  0006BE  0E00               	movlw	0
  4043  0006C0  0100               	movlb	0	; () banked
  4044  0006C2  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4045  0006C4  0E00               	movlw	0
  4046  0006C6  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4047  0006C8  0E00               	movlw	0
  4048  0006CA  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4049  0006CC  0E00               	movlw	0
  4050  0006CE  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4051  0006D0  0E00               	movlw	0
  4052  0006D2  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4053  0006D4  EC63  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4054                           
  4055                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  4056  0006D8  0E02               	movlw	2
  4057  0006DA  0012               	return	
  4058  0006DC                     __end_of_rdBlkRegCompleteHandler:
  4059                           	opt stack 0
  4060                           tosu	equ	0xFFF
  4061                           tosh	equ	0xFFE
  4062                           tosl	equ	0xFFD
  4063                           pclath	equ	0xFFA
  4064                           tblptru	equ	0xFF8
  4065                           tblptrh	equ	0xFF7
  4066                           tblptrl	equ	0xFF6
  4067                           tablat	equ	0xFF5
  4068                           prodh	equ	0xFF4
  4069                           prodl	equ	0xFF3
  4070                           intcon	equ	0xFF2
  4071                           postinc0	equ	0xFEE
  4072                           wreg	equ	0xFE8
  4073                           postdec1	equ	0xFE5
  4074                           fsr1l	equ	0xFE1
  4075                           indf2	equ	0xFDF
  4076                           postinc2	equ	0xFDE
  4077                           postdec2	equ	0xFDD
  4078                           fsr2h	equ	0xFDA
  4079                           fsr2l	equ	0xFD9
  4080                           status	equ	0xFD8
  4081                           
  4082 ;; *************** function _rd2RegCompleteHandler *****************
  4083 ;; Defined at:
  4084 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  p               2   10[BANK0 ] PTR void 
  4087 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4088 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      enum E97
  4093 ;; Registers used:
  4094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4103 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4104 ;;Total ram usage:        2 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    8
  4107 ;; This function calls:
  4108 ;;		_i2c_setBuffer
  4109 ;;		_i2c_setDataCompleteCallback
  4110 ;; This function is called by:
  4111 ;;		_i2c_read2ByteRegister
  4112 ;;		_do_I2C_DO_ADDRESS_NACK
  4113 ;;		_do_I2C_TX
  4114 ;;		_do_I2C_RX
  4115 ;;		_do_I2C_TX_EMPTY
  4116 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4117 ;;		i2_do_I2C_TX
  4118 ;;		i2_do_I2C_RX
  4119 ;;		i2_do_I2C_TX_EMPTY
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text39
  4124  000838                     __ptext39:
  4125                           	opt stack 0
  4126  000838                     _rd2RegCompleteHandler:
  4127                           	opt stack 0
  4128                           
  4129                           ;Skip over the trampoline to the duplicate function for level 2
  4130  000838  B24A               	btfsc	btemp,1,c
  4131  00083A  EFF5  F004         	goto	i2_rd2RegCompleteHandler
  4132  00083E                     _rd2RegCompleteHandler$intlevel0:
  4133                           	opt stack 16
  4134                           
  4135                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  4136                           
  4137                           ;incstack = 0
  4138  00083E  C09A  F046         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
  4139  000842  C09B  F047         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4140  000846  0E00               	movlw	0
  4141  000848  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4142  00084A  0E02               	movlw	2
  4143  00084C  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4144  00084E  ECA7  F005         	call	_i2c_setBuffer	;wreg free
  4145                           
  4146                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  4147  000852  0E00               	movlw	0
  4148  000854  0100               	movlb	0	; () banked
  4149  000856  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4150  000858  0E00               	movlw	0
  4151  00085A  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4152  00085C  0E00               	movlw	0
  4153  00085E  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4154  000860  0E00               	movlw	0
  4155  000862  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4156  000864  0E00               	movlw	0
  4157  000866  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4158  000868  EC63  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4159                           
  4160                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  4161  00086C  0E02               	movlw	2
  4162  00086E  0012               	return	
  4163  000870                     __end_of_rd2RegCompleteHandler:
  4164                           	opt stack 0
  4165                           tosu	equ	0xFFF
  4166                           tosh	equ	0xFFE
  4167                           tosl	equ	0xFFD
  4168                           pclath	equ	0xFFA
  4169                           tblptru	equ	0xFF8
  4170                           tblptrh	equ	0xFF7
  4171                           tblptrl	equ	0xFF6
  4172                           tablat	equ	0xFF5
  4173                           prodh	equ	0xFF4
  4174                           prodl	equ	0xFF3
  4175                           intcon	equ	0xFF2
  4176                           postinc0	equ	0xFEE
  4177                           wreg	equ	0xFE8
  4178                           postdec1	equ	0xFE5
  4179                           fsr1l	equ	0xFE1
  4180                           indf2	equ	0xFDF
  4181                           postinc2	equ	0xFDE
  4182                           postdec2	equ	0xFDD
  4183                           fsr2h	equ	0xFDA
  4184                           fsr2l	equ	0xFD9
  4185                           status	equ	0xFD8
  4186                           
  4187 ;; *************** function _rd1RegCompleteHandler *****************
  4188 ;; Defined at:
  4189 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  p               2   10[BANK0 ] PTR void 
  4192 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4193 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      enum E97
  4198 ;; Registers used:
  4199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    8
  4212 ;; This function calls:
  4213 ;;		_i2c_setBuffer
  4214 ;;		_i2c_setDataCompleteCallback
  4215 ;; This function is called by:
  4216 ;;		_i2c_read1ByteRegister
  4217 ;;		_do_I2C_DO_ADDRESS_NACK
  4218 ;;		_do_I2C_TX
  4219 ;;		_do_I2C_RX
  4220 ;;		_do_I2C_TX_EMPTY
  4221 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4222 ;;		i2_do_I2C_TX
  4223 ;;		i2_do_I2C_RX
  4224 ;;		i2_do_I2C_TX_EMPTY
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text40
  4229  000870                     __ptext40:
  4230                           	opt stack 0
  4231  000870                     _rd1RegCompleteHandler:
  4232                           	opt stack 0
  4233                           
  4234                           ;Skip over the trampoline to the duplicate function for level 2
  4235  000870  B24A               	btfsc	btemp,1,c
  4236  000872  EF0D  F005         	goto	i2_rd1RegCompleteHandler
  4237  000876                     _rd1RegCompleteHandler$intlevel0:
  4238                           	opt stack 16
  4239                           
  4240                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  4241                           
  4242                           ;incstack = 0
  4243  000876  C09A  F046         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
  4244  00087A  C09B  F047         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4245  00087E  0E00               	movlw	0
  4246  000880  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4247  000882  0E01               	movlw	1
  4248  000884  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4249  000886  ECA7  F005         	call	_i2c_setBuffer	;wreg free
  4250                           
  4251                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  4252  00088A  0E00               	movlw	0
  4253  00088C  0100               	movlb	0	; () banked
  4254  00088E  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4255  000890  0E00               	movlw	0
  4256  000892  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4257  000894  0E00               	movlw	0
  4258  000896  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4259  000898  0E00               	movlw	0
  4260  00089A  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4261  00089C  0E00               	movlw	0
  4262  00089E  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4263  0008A0  EC63  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4264                           
  4265                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  4266  0008A4  0E02               	movlw	2
  4267  0008A6  0012               	return	
  4268  0008A8                     __end_of_rd1RegCompleteHandler:
  4269                           	opt stack 0
  4270                           tosu	equ	0xFFF
  4271                           tosh	equ	0xFFE
  4272                           tosl	equ	0xFFD
  4273                           pclath	equ	0xFFA
  4274                           tblptru	equ	0xFF8
  4275                           tblptrh	equ	0xFF7
  4276                           tblptrl	equ	0xFF6
  4277                           tablat	equ	0xFF5
  4278                           prodh	equ	0xFF4
  4279                           prodl	equ	0xFF3
  4280                           intcon	equ	0xFF2
  4281                           postinc0	equ	0xFEE
  4282                           wreg	equ	0xFE8
  4283                           postdec1	equ	0xFE5
  4284                           fsr1l	equ	0xFE1
  4285                           indf2	equ	0xFDF
  4286                           postinc2	equ	0xFDE
  4287                           postdec2	equ	0xFDD
  4288                           fsr2h	equ	0xFDA
  4289                           fsr2l	equ	0xFD9
  4290                           status	equ	0xFD8
  4291                           
  4292 ;; *************** function _wr1RegCompleteHandler *****************
  4293 ;; Defined at:
  4294 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  p               2   10[BANK0 ] PTR void 
  4297 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4298 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      enum E97
  4303 ;; Registers used:
  4304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4313 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4314 ;;Total ram usage:        2 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    8
  4317 ;; This function calls:
  4318 ;;		_i2c_setBuffer
  4319 ;;		_i2c_setDataCompleteCallback
  4320 ;; This function is called by:
  4321 ;;		_i2c_write1ByteRegister
  4322 ;;		_do_I2C_DO_ADDRESS_NACK
  4323 ;;		_do_I2C_TX
  4324 ;;		_do_I2C_RX
  4325 ;;		_do_I2C_TX_EMPTY
  4326 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4327 ;;		i2_do_I2C_TX
  4328 ;;		i2_do_I2C_RX
  4329 ;;		i2_do_I2C_TX_EMPTY
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text41
  4334  0008A8                     __ptext41:
  4335                           	opt stack 0
  4336  0008A8                     _wr1RegCompleteHandler:
  4337                           	opt stack 0
  4338                           
  4339                           ;Skip over the trampoline to the duplicate function for level 2
  4340  0008A8  B24A               	btfsc	btemp,1,c
  4341  0008AA  EF25  F005         	goto	i2_wr1RegCompleteHandler
  4342  0008AE                     _wr1RegCompleteHandler$intlevel0:
  4343                           	opt stack 16
  4344                           
  4345                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  4346                           
  4347                           ;incstack = 0
  4348  0008AE  C09A  F046         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
  4349  0008B2  C09B  F047         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4350  0008B6  0E00               	movlw	0
  4351  0008B8  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4352  0008BA  0E01               	movlw	1
  4353  0008BC  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4354  0008BE  ECA7  F005         	call	_i2c_setBuffer	;wreg free
  4355                           
  4356                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  4357  0008C2  0E00               	movlw	0
  4358  0008C4  0100               	movlb	0	; () banked
  4359  0008C6  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4360  0008C8  0E00               	movlw	0
  4361  0008CA  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4362  0008CC  0E00               	movlw	0
  4363  0008CE  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4364  0008D0  0E00               	movlw	0
  4365  0008D2  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4366  0008D4  0E00               	movlw	0
  4367  0008D6  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4368  0008D8  EC63  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4369                           
  4370                           ;i2c_simple_master.c: 35: return i2c_continue;
  4371  0008DC  0E04               	movlw	4
  4372  0008DE  0012               	return	
  4373  0008E0                     __end_of_wr1RegCompleteHandler:
  4374                           	opt stack 0
  4375                           tosu	equ	0xFFF
  4376                           tosh	equ	0xFFE
  4377                           tosl	equ	0xFFD
  4378                           pclath	equ	0xFFA
  4379                           tblptru	equ	0xFF8
  4380                           tblptrh	equ	0xFF7
  4381                           tblptrl	equ	0xFF6
  4382                           tablat	equ	0xFF5
  4383                           prodh	equ	0xFF4
  4384                           prodl	equ	0xFF3
  4385                           intcon	equ	0xFF2
  4386                           postinc0	equ	0xFEE
  4387                           wreg	equ	0xFE8
  4388                           postdec1	equ	0xFE5
  4389                           fsr1l	equ	0xFE1
  4390                           indf2	equ	0xFDF
  4391                           postinc2	equ	0xFDE
  4392                           postdec2	equ	0xFDD
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _i2c_restartWrite *****************
  4398 ;; Defined at:
  4399 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  p               2   10[BANK0 ] PTR void 
  4402 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4403 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      enum E96
  4408 ;; Registers used:
  4409 ;;		wreg
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4419 ;;Total ram usage:        2 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    6
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_i2c_writeNBytes
  4426 ;;		_i2c_write1ByteRegister
  4427 ;;		_i2c_read1ByteRegister
  4428 ;;		_i2c_read2ByteRegister
  4429 ;;		_i2c_write2ByteRegister
  4430 ;;		_i2c_readDataBlock
  4431 ;;		_do_I2C_DO_ADDRESS_NACK
  4432 ;;		_do_I2C_TX
  4433 ;;		_do_I2C_RX
  4434 ;;		_do_I2C_TX_EMPTY
  4435 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4436 ;;		i2_do_I2C_TX
  4437 ;;		i2_do_I2C_RX
  4438 ;;		i2_do_I2C_TX_EMPTY
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text42
  4443  000D16                     __ptext42:
  4444                           	opt stack 0
  4445  000D16                     _i2c_restartWrite:
  4446                           	opt stack 0
  4447                           
  4448                           ;Skip over the trampoline to the duplicate function for level 2
  4449  000D16  B24A               	btfsc	btemp,1,c
  4450  000D18  EF01  F007         	goto	i2_i2c_restartWrite
  4451  000D1C                     _i2c_restartWrite$intlevel0:
  4452                           	opt stack 18
  4453                           
  4454                           ;i2c_types.c: 37: return i2c_restart_write;
  4455                           
  4456                           ;incstack = 0
  4457  000D1C  0E03               	movlw	3
  4458  000D1E  0012               	return	
  4459  000D20                     __end_of_i2c_restartWrite:
  4460                           	opt stack 0
  4461                           tosu	equ	0xFFF
  4462                           tosh	equ	0xFFE
  4463                           tosl	equ	0xFFD
  4464                           pclath	equ	0xFFA
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           prodh	equ	0xFF4
  4470                           prodl	equ	0xFF3
  4471                           intcon	equ	0xFF2
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           postdec1	equ	0xFE5
  4475                           fsr1l	equ	0xFE1
  4476                           indf2	equ	0xFDF
  4477                           postinc2	equ	0xFDE
  4478                           postdec2	equ	0xFDD
  4479                           fsr2h	equ	0xFDA
  4480                           fsr2l	equ	0xFD9
  4481                           status	equ	0xFD8
  4482                           
  4483 ;; *************** function _returnReset *****************
  4484 ;; Defined at:
  4485 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  p               2   10[BANK0 ] PTR void 
  4488 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4489 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      enum E11790
  4494 ;; Registers used:
  4495 ;;		wreg
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4501 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4504 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4505 ;;Total ram usage:        2 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    6
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_i2c_open
  4512 ;;		_do_I2C_DO_ADDRESS_NACK
  4513 ;;		_do_I2C_TX
  4514 ;;		_do_I2C_RX
  4515 ;;		_do_I2C_TX_EMPTY
  4516 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4517 ;;		i2_do_I2C_TX
  4518 ;;		i2_do_I2C_RX
  4519 ;;		i2_do_I2C_TX_EMPTY
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text43
  4524  000D20                     __ptext43:
  4525                           	opt stack 0
  4526  000D20                     _returnReset:
  4527                           	opt stack 0
  4528                           
  4529                           ;Skip over the trampoline to the duplicate function for level 2
  4530  000D20  B24A               	btfsc	btemp,1,c
  4531  000D22  EF03  F007         	goto	i2_returnReset
  4532  000D26                     _returnReset$intlevel0:
  4533                           	opt stack 18
  4534                           
  4535                           ;i2c_master.c: 450: return i2c_reset_link;
  4536                           
  4537                           ;incstack = 0
  4538  000D26  0E05               	movlw	5
  4539  000D28  0012               	return	
  4540  000D2A                     __end_of_returnReset:
  4541                           	opt stack 0
  4542                           tosu	equ	0xFFF
  4543                           tosh	equ	0xFFE
  4544                           tosl	equ	0xFFD
  4545                           pclath	equ	0xFFA
  4546                           tblptru	equ	0xFF8
  4547                           tblptrh	equ	0xFF7
  4548                           tblptrl	equ	0xFF6
  4549                           tablat	equ	0xFF5
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           intcon	equ	0xFF2
  4553                           postinc0	equ	0xFEE
  4554                           wreg	equ	0xFE8
  4555                           postdec1	equ	0xFE5
  4556                           fsr1l	equ	0xFE1
  4557                           indf2	equ	0xFDF
  4558                           postinc2	equ	0xFDE
  4559                           postdec2	equ	0xFDD
  4560                           fsr2h	equ	0xFDA
  4561                           fsr2l	equ	0xFD9
  4562                           status	equ	0xFD8
  4563                           
  4564 ;; *************** function _returnStop *****************
  4565 ;; Defined at:
  4566 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  p               2   10[BANK0 ] PTR void 
  4569 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4570 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;		None
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      enum E11790
  4575 ;; Registers used:
  4576 ;;		wreg
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4582 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4585 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;Total ram usage:        2 bytes
  4587 ;; Hardware stack levels used:    1
  4588 ;; Hardware stack levels required when called:    6
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_i2c_open
  4593 ;;		_setCallBack
  4594 ;;		_do_I2C_DO_ADDRESS_NACK
  4595 ;;		_do_I2C_TX
  4596 ;;		_do_I2C_RX
  4597 ;;		_do_I2C_TX_EMPTY
  4598 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4599 ;;		i2_do_I2C_TX
  4600 ;;		i2_do_I2C_RX
  4601 ;;		i2_do_I2C_TX_EMPTY
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text44
  4606  000D2A                     __ptext44:
  4607                           	opt stack 0
  4608  000D2A                     _returnStop:
  4609                           	opt stack 0
  4610                           
  4611                           ;Skip over the trampoline to the duplicate function for level 2
  4612  000D2A  B24A               	btfsc	btemp,1,c
  4613  000D2C  EF05  F007         	goto	i2_returnStop
  4614  000D30                     _returnStop$intlevel0:
  4615                           	opt stack 18
  4616                           
  4617                           ;i2c_master.c: 445: return i2c_stop;
  4618                           
  4619                           ;incstack = 0
  4620  000D30  0E01               	movlw	1
  4621  000D32  0012               	return	
  4622  000D34                     __end_of_returnStop:
  4623                           	opt stack 0
  4624                           tosu	equ	0xFFF
  4625                           tosh	equ	0xFFE
  4626                           tosl	equ	0xFFD
  4627                           pclath	equ	0xFFA
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           prodh	equ	0xFF4
  4633                           prodl	equ	0xFF3
  4634                           intcon	equ	0xFF2
  4635                           postinc0	equ	0xFEE
  4636                           wreg	equ	0xFE8
  4637                           postdec1	equ	0xFE5
  4638                           fsr1l	equ	0xFE1
  4639                           indf2	equ	0xFDF
  4640                           postinc2	equ	0xFDE
  4641                           postdec2	equ	0xFDD
  4642                           fsr2h	equ	0xFDA
  4643                           fsr2l	equ	0xFD9
  4644                           status	equ	0xFD8
  4645                           
  4646 ;; *************** function _wr2RegCompleteHandler *****************
  4647 ;; Defined at:
  4648 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  p               2   10[BANK0 ] PTR void 
  4651 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4652 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      enum E97
  4657 ;; Registers used:
  4658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4667 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4668 ;;Total ram usage:        2 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    8
  4671 ;; This function calls:
  4672 ;;		_i2c_setBuffer
  4673 ;;		_i2c_setDataCompleteCallback
  4674 ;; This function is called by:
  4675 ;;		_i2c_write2ByteRegister
  4676 ;;		_do_I2C_DO_ADDRESS_NACK
  4677 ;;		_do_I2C_TX
  4678 ;;		_do_I2C_RX
  4679 ;;		_do_I2C_TX_EMPTY
  4680 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4681 ;;		i2_do_I2C_TX
  4682 ;;		i2_do_I2C_RX
  4683 ;;		i2_do_I2C_TX_EMPTY
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text45
  4688  0008E0                     __ptext45:
  4689                           	opt stack 0
  4690  0008E0                     _wr2RegCompleteHandler:
  4691                           	opt stack 0
  4692                           
  4693                           ;Skip over the trampoline to the duplicate function for level 2
  4694  0008E0  B24A               	btfsc	btemp,1,c
  4695  0008E2  EF3D  F005         	goto	i2_wr2RegCompleteHandler
  4696  0008E6                     _wr2RegCompleteHandler$intlevel0:
  4697                           	opt stack 16
  4698                           
  4699                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  4700                           
  4701                           ;incstack = 0
  4702  0008E6  C09A  F046         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
  4703  0008EA  C09B  F047         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4704  0008EE  0E00               	movlw	0
  4705  0008F0  6E49               	movwf	i2c_setBuffer@bufferSize+1,c
  4706  0008F2  0E02               	movlw	2
  4707  0008F4  6E48               	movwf	i2c_setBuffer@bufferSize,c
  4708  0008F6  ECA7  F005         	call	_i2c_setBuffer	;wreg free
  4709                           
  4710                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  4711  0008FA  0E00               	movlw	0
  4712  0008FC  0100               	movlb	0	; () banked
  4713  0008FE  6F95               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4714  000900  0E00               	movlw	0
  4715  000902  6F96               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4716  000904  0E00               	movlw	0
  4717  000906  6F97               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4718  000908  0E00               	movlw	0
  4719  00090A  6F98               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4720  00090C  0E00               	movlw	0
  4721  00090E  6F99               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4722  000910  EC63  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4723                           
  4724                           ;i2c_simple_master.c: 114: return i2c_continue;
  4725  000914  0E04               	movlw	4
  4726  000916  0012               	return	
  4727  000918                     __end_of_wr2RegCompleteHandler:
  4728                           	opt stack 0
  4729                           tosu	equ	0xFFF
  4730                           tosh	equ	0xFFE
  4731                           tosl	equ	0xFFD
  4732                           pclath	equ	0xFFA
  4733                           tblptru	equ	0xFF8
  4734                           tblptrh	equ	0xFF7
  4735                           tblptrl	equ	0xFF6
  4736                           tablat	equ	0xFF5
  4737                           prodh	equ	0xFF4
  4738                           prodl	equ	0xFF3
  4739                           intcon	equ	0xFF2
  4740                           postinc0	equ	0xFEE
  4741                           wreg	equ	0xFE8
  4742                           postdec1	equ	0xFE5
  4743                           fsr1l	equ	0xFE1
  4744                           indf2	equ	0xFDF
  4745                           postinc2	equ	0xFDE
  4746                           postdec2	equ	0xFDD
  4747                           fsr2h	equ	0xFDA
  4748                           fsr2l	equ	0xFD9
  4749                           status	equ	0xFD8
  4750                           
  4751 ;; *************** function _i2c_setDataCompleteCallback *****************
  4752 ;; Defined at:
  4753 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  cb              3    5[BANK0 ] PTR FTN(PTR void ,)enum 
  4756 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4757 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  4758 ;;  p               2    8[BANK0 ] PTR void 
  4759 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4760 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;		None
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      void 
  4765 ;; Registers used:
  4766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4772 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4775 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4776 ;;Total ram usage:        5 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; Hardware stack levels required when called:    7
  4779 ;; This function calls:
  4780 ;;		_setCallBack
  4781 ;; This function is called by:
  4782 ;;		_wr1RegCompleteHandler
  4783 ;;		_rd1RegCompleteHandler
  4784 ;;		_rd2RegCompleteHandler
  4785 ;;		_wr2RegCompleteHandler
  4786 ;;		_rdBlkRegCompleteHandler
  4787 ;;		_i2c_write1ByteRegister
  4788 ;;		_i2c_read1ByteRegister
  4789 ;;		_i2c_read2ByteRegister
  4790 ;;		_i2c_write2ByteRegister
  4791 ;;		_i2c_readDataBlock
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text46
  4796  000AC6                     __ptext46:
  4797                           	opt stack 0
  4798  000AC6                     _i2c_setDataCompleteCallback:
  4799                           	opt stack 16
  4800                           
  4801                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  4802                           
  4803                           ;incstack = 0
  4804  000AC6  C095  F090         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
  4805  000ACA  C096  F091         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
  4806  000ACE  C097  F092         	movff	i2c_setDataCompleteCallback@cb+2,setCallBack@cb+2
  4807  000AD2  C098  F093         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
  4808  000AD6  C099  F094         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
  4809  000ADA  0E00               	movlw	0
  4810  000ADC  EC9B  F001         	call	_setCallBack
  4811  000AE0  0012               	return		;funcret
  4812  000AE2                     __end_of_i2c_setDataCompleteCallback:
  4813                           	opt stack 0
  4814                           tosu	equ	0xFFF
  4815                           tosh	equ	0xFFE
  4816                           tosl	equ	0xFFD
  4817                           pclath	equ	0xFFA
  4818                           tblptru	equ	0xFF8
  4819                           tblptrh	equ	0xFF7
  4820                           tblptrl	equ	0xFF6
  4821                           tablat	equ	0xFF5
  4822                           prodh	equ	0xFF4
  4823                           prodl	equ	0xFF3
  4824                           intcon	equ	0xFF2
  4825                           postinc0	equ	0xFEE
  4826                           wreg	equ	0xFE8
  4827                           postdec1	equ	0xFE5
  4828                           fsr1l	equ	0xFE1
  4829                           indf2	equ	0xFDF
  4830                           postinc2	equ	0xFDE
  4831                           postdec2	equ	0xFDD
  4832                           fsr2h	equ	0xFDA
  4833                           fsr2l	equ	0xFD9
  4834                           status	equ	0xFD8
  4835                           
  4836 ;; *************** function _setCallBack *****************
  4837 ;; Defined at:
  4838 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  idx             1    wreg     enum E11974
  4841 ;;  cb              3    0[BANK0 ] PTR FTN(PTR void ,)enum 
  4842 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4843 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  4844 ;;  p               2    3[BANK0 ] PTR void 
  4845 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4846 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  idx             1   21[COMRAM] enum E11974
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4858 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4861 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4862 ;;Total ram usage:        6 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    6
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_i2c_setDataCompleteCallback
  4869 ;;		_i2c_setAddressNACKCallback
  4870 ;;		_i2c_setWriteCollisionCallback
  4871 ;;		_i2c_setDataNACKCallback
  4872 ;;		_i2c_setTimeOutCallback
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text47
  4877  000336                     __ptext47:
  4878                           	opt stack 0
  4879  000336                     _setCallBack:
  4880                           	opt stack 22
  4881                           
  4882                           ;incstack = 0
  4883                           ;setCallBack@idx stored from wreg
  4884  000336  6E46               	movwf	setCallBack@idx,c
  4885                           
  4886                           ;i2c_master.c: 455: if(cb)
  4887  000338  0100               	movlb	0	; () banked
  4888  00033A  5190               	movf	setCallBack@cb& (0+255),w,b
  4889  00033C  1191               	iorwf	(setCallBack@cb+1)& (0+255),w,b
  4890  00033E  1192               	iorwf	(setCallBack@cb+2)& (0+255),w,b
  4891  000340  B4D8               	btfsc	status,2,c
  4892  000342  D01B               	goto	l482
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;i2c_master.c: 456: {
  4896                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  4897  000344  5046               	movf	setCallBack@idx,w,c
  4898  000346  0D03               	mullw	3
  4899  000348  0E0D               	movlw	low (_i2c_status+12)
  4900  00034A  24F3               	addwf	prodl,w,c
  4901  00034C  6ED9               	movwf	fsr2l,c
  4902  00034E  0E00               	movlw	high (_i2c_status+12)
  4903  000350  20F4               	addwfc	prodh,w,c
  4904  000352  6EDA               	movwf	fsr2h,c
  4905  000354  C090  FFDE         	movff	setCallBack@cb,postinc2
  4906  000358  C091  FFDE         	movff	setCallBack@cb+1,postinc2
  4907  00035C  C092  FFDE         	movff	setCallBack@cb+2,postinc2
  4908                           
  4909                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  4910  000360  5046               	movf	setCallBack@idx,w,c
  4911  000362  0D02               	mullw	2
  4912  000364  0E1F               	movlw	low (_i2c_status+30)
  4913  000366  24F3               	addwf	prodl,w,c
  4914  000368  6ED9               	movwf	fsr2l,c
  4915  00036A  0E00               	movlw	high (_i2c_status+30)
  4916  00036C  20F4               	addwfc	prodh,w,c
  4917  00036E  6EDA               	movwf	fsr2h,c
  4918  000370  C093  FFDE         	movff	setCallBack@p,postinc2
  4919  000374  C094  FFDD         	movff	setCallBack@p+1,postdec2
  4920                           
  4921                           ;i2c_master.c: 459: }
  4922  000378  0012               	return	
  4923  00037A                     l482:
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;i2c_master.c: 460: else
  4927                           ;i2c_master.c: 461: {
  4928                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  4929                           
  4930                           ; BSR set to: 0
  4931  00037A  5046               	movf	setCallBack@idx,w,c
  4932  00037C  0D03               	mullw	3
  4933  00037E  0E0D               	movlw	low (_i2c_status+12)
  4934  000380  24F3               	addwf	prodl,w,c
  4935  000382  6ED9               	movwf	fsr2l,c
  4936  000384  0E00               	movlw	high (_i2c_status+12)
  4937  000386  20F4               	addwfc	prodh,w,c
  4938  000388  6EDA               	movwf	fsr2h,c
  4939  00038A  0E2A               	movlw	low _returnStop
  4940  00038C  6EDE               	movwf	postinc2,c
  4941  00038E  0E0D               	movlw	high _returnStop
  4942  000390  6EDE               	movwf	postinc2,c
  4943  000392  0E00               	movlw	low (_returnStop shr (0+16))
  4944  000394  6EDE               	movwf	postinc2,c
  4945                           
  4946                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  4947  000396  5046               	movf	setCallBack@idx,w,c
  4948  000398  0D02               	mullw	2
  4949  00039A  0E1F               	movlw	low (_i2c_status+30)
  4950  00039C  24F3               	addwf	prodl,w,c
  4951  00039E  6ED9               	movwf	fsr2l,c
  4952  0003A0  0E00               	movlw	high (_i2c_status+30)
  4953  0003A2  20F4               	addwfc	prodh,w,c
  4954  0003A4  6EDA               	movwf	fsr2h,c
  4955  0003A6  0E00               	movlw	0
  4956  0003A8  6EDE               	movwf	postinc2,c
  4957  0003AA  0E00               	movlw	0
  4958  0003AC  6EDD               	movwf	postdec2,c
  4959  0003AE  0012               	return	
  4960  0003B0                     __end_of_setCallBack:
  4961                           	opt stack 0
  4962                           tosu	equ	0xFFF
  4963                           tosh	equ	0xFFE
  4964                           tosl	equ	0xFFD
  4965                           pclath	equ	0xFFA
  4966                           tblptru	equ	0xFF8
  4967                           tblptrh	equ	0xFF7
  4968                           tblptrl	equ	0xFF6
  4969                           tablat	equ	0xFF5
  4970                           prodh	equ	0xFF4
  4971                           prodl	equ	0xFF3
  4972                           intcon	equ	0xFF2
  4973                           postinc0	equ	0xFEE
  4974                           wreg	equ	0xFE8
  4975                           postdec1	equ	0xFE5
  4976                           fsr1l	equ	0xFE1
  4977                           indf2	equ	0xFDF
  4978                           postinc2	equ	0xFDE
  4979                           postdec2	equ	0xFDD
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function _i2c_setBuffer *****************
  4985 ;; Defined at:
  4986 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  buffer          2   21[COMRAM] PTR void 
  4989 ;;		 -> main@rec_1221(1), main@rec(1), main@data(2), i2c_readDataBlock@reg(1), 
  4990 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
  4991 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegist
      +er@reg(1), 
  4992 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4993 ;;  bufferSize      2   23[COMRAM] unsigned int 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5008 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5009 ;;Total ram usage:        4 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    6
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_wr1RegCompleteHandler
  5016 ;;		_i2c_writeNBytes
  5017 ;;		_rd1RegCompleteHandler
  5018 ;;		_rd2RegCompleteHandler
  5019 ;;		_wr2RegCompleteHandler
  5020 ;;		_rdBlkRegCompleteHandler
  5021 ;;		_i2c_readNBytes
  5022 ;;		_i2c_write1ByteRegister
  5023 ;;		_i2c_read1ByteRegister
  5024 ;;		_i2c_read2ByteRegister
  5025 ;;		_i2c_write2ByteRegister
  5026 ;;		_i2c_readDataBlock
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text48
  5031  000B4E                     __ptext48:
  5032                           	opt stack 0
  5033  000B4E                     _i2c_setBuffer:
  5034                           	opt stack 23
  5035                           
  5036                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;incstack = 0
  5040  000B4E  A401               	btfss	_i2c_status,2,c
  5041  000B50  0012               	return	
  5042                           
  5043                           ;i2c_master.c: 187: {
  5044                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  5045  000B52  C046  F003         	movff	i2c_setBuffer@buffer,_i2c_status+2
  5046  000B56  C047  F004         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
  5047                           
  5048                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  5049  000B5A  C048  F005         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
  5050  000B5E  C049  F006         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
  5051                           
  5052                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  5053  000B62  9401               	bcf	_i2c_status,2,c
  5054  000B64  0012               	return	
  5055  000B66                     __end_of_i2c_setBuffer:
  5056                           	opt stack 0
  5057                           tosu	equ	0xFFF
  5058                           tosh	equ	0xFFE
  5059                           tosl	equ	0xFFD
  5060                           pclath	equ	0xFFA
  5061                           tblptru	equ	0xFF8
  5062                           tblptrh	equ	0xFF7
  5063                           tblptrl	equ	0xFF6
  5064                           tablat	equ	0xFF5
  5065                           prodh	equ	0xFF4
  5066                           prodl	equ	0xFF3
  5067                           intcon	equ	0xFF2
  5068                           postinc0	equ	0xFEE
  5069                           wreg	equ	0xFE8
  5070                           postdec1	equ	0xFE5
  5071                           fsr1l	equ	0xFE1
  5072                           indf2	equ	0xFDF
  5073                           postinc2	equ	0xFDE
  5074                           postdec2	equ	0xFDD
  5075                           fsr2h	equ	0xFDA
  5076                           fsr2l	equ	0xFD9
  5077                           status	equ	0xFD8
  5078                           
  5079 ;; *************** function _i2c1_driver_stop *****************
  5080 ;; Defined at:
  5081 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;		None
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;		None
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      void 
  5088 ;; Registers used:
  5089 ;;		None
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5099 ;;Total ram usage:        0 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; Hardware stack levels required when called:    6
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_do_I2C_SEND_STOP
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text49
  5110  000DEA                     __ptext49:
  5111                           	opt stack 0
  5112  000DEA                     _i2c1_driver_stop:
  5113                           	opt stack 17
  5114                           
  5115                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  5116                           
  5117                           ;incstack = 0
  5118  000DEA  8497               	bsf	3991,2,c	;volatile
  5119  000DEC  0012               	return		;funcret
  5120  000DEE                     __end_of_i2c1_driver_stop:
  5121                           	opt stack 0
  5122                           tosu	equ	0xFFF
  5123                           tosh	equ	0xFFE
  5124                           tosl	equ	0xFFD
  5125                           pclath	equ	0xFFA
  5126                           tblptru	equ	0xFF8
  5127                           tblptrh	equ	0xFF7
  5128                           tblptrl	equ	0xFF6
  5129                           tablat	equ	0xFF5
  5130                           prodh	equ	0xFF4
  5131                           prodl	equ	0xFF3
  5132                           intcon	equ	0xFF2
  5133                           postinc0	equ	0xFEE
  5134                           wreg	equ	0xFE8
  5135                           postdec1	equ	0xFE5
  5136                           fsr1l	equ	0xFE1
  5137                           indf2	equ	0xFDF
  5138                           postinc2	equ	0xFDE
  5139                           postdec2	equ	0xFDD
  5140                           fsr2h	equ	0xFDA
  5141                           fsr2l	equ	0xFD9
  5142                           status	equ	0xFD8
  5143                           
  5144 ;; *************** function _i2c1_driver_restart *****************
  5145 ;; Defined at:
  5146 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		None
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    6
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_do_I2C_SEND_RESTART_READ
  5171 ;;		_do_I2C_SEND_RESTART_WRITE
  5172 ;;		_do_I2C_SEND_RESTART
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text50
  5177  000DEE                     __ptext50:
  5178                           	opt stack 0
  5179  000DEE                     _i2c1_driver_restart:
  5180                           	opt stack 17
  5181                           
  5182                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  5183                           
  5184                           ;incstack = 0
  5185  000DEE  8297               	bsf	3991,1,c	;volatile
  5186  000DF0  0012               	return		;funcret
  5187  000DF2                     __end_of_i2c1_driver_restart:
  5188                           	opt stack 0
  5189                           tosu	equ	0xFFF
  5190                           tosh	equ	0xFFE
  5191                           tosl	equ	0xFFD
  5192                           pclath	equ	0xFFA
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           prodh	equ	0xFF4
  5198                           prodl	equ	0xFF3
  5199                           intcon	equ	0xFF2
  5200                           postinc0	equ	0xFEE
  5201                           wreg	equ	0xFE8
  5202                           postdec1	equ	0xFE5
  5203                           fsr1l	equ	0xFE1
  5204                           indf2	equ	0xFDF
  5205                           postinc2	equ	0xFDE
  5206                           postdec2	equ	0xFDD
  5207                           fsr2h	equ	0xFDA
  5208                           fsr2l	equ	0xFD9
  5209                           status	equ	0xFD8
  5210                           
  5211 ;; *************** function _i2c1_driver_sendACK *****************
  5212 ;; Defined at:
  5213 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		None
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    6
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_do_I2C_DO_ACK
  5238 ;;		_do_I2C_RX
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text51
  5243  000DAC                     __ptext51:
  5244                           	opt stack 0
  5245  000DAC                     _i2c1_driver_sendACK:
  5246                           	opt stack 18
  5247                           
  5248                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  5249                           
  5250                           ;incstack = 0
  5251  000DAC  9A97               	bcf	3991,5,c	;volatile
  5252                           
  5253                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  5254  000DAE  8897               	bsf	3991,4,c	;volatile
  5255  000DB0  0012               	return		;funcret
  5256  000DB2                     __end_of_i2c1_driver_sendACK:
  5257                           	opt stack 0
  5258                           tosu	equ	0xFFF
  5259                           tosh	equ	0xFFE
  5260                           tosl	equ	0xFFD
  5261                           pclath	equ	0xFFA
  5262                           tblptru	equ	0xFF8
  5263                           tblptrh	equ	0xFF7
  5264                           tblptrl	equ	0xFF6
  5265                           tablat	equ	0xFF5
  5266                           prodh	equ	0xFF4
  5267                           prodl	equ	0xFF3
  5268                           intcon	equ	0xFF2
  5269                           postinc0	equ	0xFEE
  5270                           wreg	equ	0xFE8
  5271                           postdec1	equ	0xFE5
  5272                           fsr1l	equ	0xFE1
  5273                           indf2	equ	0xFDF
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function _i2c1_driver_start *****************
  5281 ;; Defined at:
  5282 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;		None
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		None
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5300 ;;Total ram usage:        0 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    6
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_i2c_masterOperation
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text52
  5311  000DF2                     __ptext52:
  5312                           	opt stack 0
  5313  000DF2                     _i2c1_driver_start:
  5314                           	opt stack 21
  5315                           
  5316                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
  5317                           
  5318                           ;incstack = 0
  5319  000DF2  8097               	bsf	3991,0,c	;volatile
  5320  000DF4  0012               	return		;funcret
  5321  000DF6                     __end_of_i2c1_driver_start:
  5322                           	opt stack 0
  5323                           tosu	equ	0xFFF
  5324                           tosh	equ	0xFFE
  5325                           tosl	equ	0xFFD
  5326                           pclath	equ	0xFFA
  5327                           tblptru	equ	0xFF8
  5328                           tblptrh	equ	0xFF7
  5329                           tblptrl	equ	0xFF6
  5330                           tablat	equ	0xFF5
  5331                           prodh	equ	0xFF4
  5332                           prodl	equ	0xFF3
  5333                           intcon	equ	0xFF2
  5334                           postinc0	equ	0xFEE
  5335                           wreg	equ	0xFE8
  5336                           postdec1	equ	0xFE5
  5337                           fsr1l	equ	0xFE1
  5338                           indf2	equ	0xFDF
  5339                           postinc2	equ	0xFDE
  5340                           postdec2	equ	0xFDD
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function _i2c_close *****************
  5346 ;; Defined at:
  5347 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  ret             1   21[COMRAM] enum E11785
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  1    wreg      enum E11785
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5365 ;;Total ram usage:        1 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    7
  5368 ;; This function calls:
  5369 ;;		_mssp1_clearIRQ
  5370 ;;		_mssp1_disableIRQ
  5371 ;; This function is called by:
  5372 ;;		_i2c_writeNBytes
  5373 ;;		_i2c_readNBytes
  5374 ;;		_i2c_write1ByteRegister
  5375 ;;		_i2c_read1ByteRegister
  5376 ;;		_i2c_read2ByteRegister
  5377 ;;		_i2c_write2ByteRegister
  5378 ;;		_i2c_readDataBlock
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text53
  5383  000AE2                     __ptext53:
  5384                           	opt stack 0
  5385  000AE2                     _i2c_close:
  5386                           	opt stack 22
  5387                           
  5388                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
  5389                           
  5390                           ;incstack = 0
  5391  000AE2  0E01               	movlw	1
  5392  000AE4  6E46               	movwf	i2c_close@ret,c
  5393                           
  5394                           ;i2c_master.c: 165: if(!i2c_status.busy)
  5395  000AE6  B001               	btfsc	_i2c_status,0,c
  5396  000AE8  D008               	goto	l355
  5397                           
  5398                           ;i2c_master.c: 166: {
  5399                           ;i2c_master.c: 167: i2c_status.inUse = 0;
  5400  000AEA  9201               	bcf	_i2c_status,1,c
  5401                           
  5402                           ;i2c_master.c: 169: i2c_status.address = 0xff;
  5403  000AEC  6802               	setf	_i2c_status+1,c
  5404                           
  5405                           ;i2c_master.c: 170: mssp1_clearIRQ();
  5406  000AEE  ECDC  F006         	call	_mssp1_clearIRQ	;wreg free
  5407                           
  5408                           ;i2c_master.c: 171: mssp1_disableIRQ();
  5409  000AF2  ECD9  F006         	call	_mssp1_disableIRQ	;wreg free
  5410                           
  5411                           ;i2c_master.c: 172: ret = i2c_status.error;
  5412  000AF6  C00C  F046         	movff	_i2c_status+11,i2c_close@ret
  5413  000AFA                     l355:
  5414                           
  5415                           ;i2c_master.c: 173: }
  5416                           ;i2c_master.c: 174: return ret;
  5417  000AFA  5046               	movf	i2c_close@ret,w,c
  5418  000AFC  0012               	return	
  5419  000AFE                     __end_of_i2c_close:
  5420                           	opt stack 0
  5421                           tosu	equ	0xFFF
  5422                           tosh	equ	0xFFE
  5423                           tosl	equ	0xFFD
  5424                           pclath	equ	0xFFA
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           prodh	equ	0xFF4
  5430                           prodl	equ	0xFF3
  5431                           intcon	equ	0xFF2
  5432                           postinc0	equ	0xFEE
  5433                           wreg	equ	0xFE8
  5434                           postdec1	equ	0xFE5
  5435                           fsr1l	equ	0xFE1
  5436                           indf2	equ	0xFDF
  5437                           postinc2	equ	0xFDE
  5438                           postdec2	equ	0xFDD
  5439                           fsr2h	equ	0xFDA
  5440                           fsr2l	equ	0xFD9
  5441                           status	equ	0xFD8
  5442                           
  5443 ;; *************** function _mssp1_disableIRQ *****************
  5444 ;; Defined at:
  5445 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		None
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5463 ;;Total ram usage:        0 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    6
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_i2c_close
  5470 ;;		_i2c_setTimeOut
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text54
  5475  000DB2                     __ptext54:
  5476                           	opt stack 0
  5477  000DB2                     _mssp1_disableIRQ:
  5478                           	opt stack 22
  5479                           
  5480                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
  5481                           
  5482                           ;incstack = 0
  5483  000DB2  010E               	movlb	14	; () banked
  5484  000DB4  91C5               	bcf	197,0,b	;volatile
  5485                           
  5486                           ; BSR set to: 14
  5487  000DB6  0012               	return		;funcret
  5488  000DB8                     __end_of_mssp1_disableIRQ:
  5489                           	opt stack 0
  5490                           tosu	equ	0xFFF
  5491                           tosh	equ	0xFFE
  5492                           tosl	equ	0xFFD
  5493                           pclath	equ	0xFFA
  5494                           tblptru	equ	0xFF8
  5495                           tblptrh	equ	0xFF7
  5496                           tblptrl	equ	0xFF6
  5497                           tablat	equ	0xFF5
  5498                           prodh	equ	0xFF4
  5499                           prodl	equ	0xFF3
  5500                           intcon	equ	0xFF2
  5501                           postinc0	equ	0xFEE
  5502                           wreg	equ	0xFE8
  5503                           postdec1	equ	0xFE5
  5504                           fsr1l	equ	0xFE1
  5505                           indf2	equ	0xFDF
  5506                           postinc2	equ	0xFDE
  5507                           postdec2	equ	0xFDD
  5508                           fsr2h	equ	0xFDA
  5509                           fsr2l	equ	0xFD9
  5510                           status	equ	0xFD8
  5511                           
  5512 ;; *************** function _mssp1_clearIRQ *****************
  5513 ;; Defined at:
  5514 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		None
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    6
  5535 ;; This function calls:
  5536 ;;		Nothing
  5537 ;; This function is called by:
  5538 ;;		_i2c_open
  5539 ;;		_i2c_close
  5540 ;;		_i2c_ISR
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text55
  5545  000DB8                     __ptext55:
  5546                           	opt stack 0
  5547  000DB8                     _mssp1_clearIRQ:
  5548                           	opt stack 22
  5549                           
  5550                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  5551                           
  5552                           ; BSR set to: 14
  5553                           ;incstack = 0
  5554  000DB8  010E               	movlb	14	; () banked
  5555  000DBA  91CD               	bcf	205,0,b	;volatile
  5556                           
  5557                           ; BSR set to: 14
  5558  000DBC  0012               	return		;funcret
  5559  000DBE                     __end_of_mssp1_clearIRQ:
  5560                           	opt stack 0
  5561                           tosu	equ	0xFFF
  5562                           tosh	equ	0xFFE
  5563                           tosl	equ	0xFFD
  5564                           pclath	equ	0xFFA
  5565                           tblptru	equ	0xFF8
  5566                           tblptrh	equ	0xFF7
  5567                           tblptrl	equ	0xFF6
  5568                           tablat	equ	0xFF5
  5569                           prodh	equ	0xFF4
  5570                           prodl	equ	0xFF3
  5571                           intcon	equ	0xFF2
  5572                           postinc0	equ	0xFEE
  5573                           wreg	equ	0xFE8
  5574                           postdec1	equ	0xFE5
  5575                           fsr1l	equ	0xFE1
  5576                           indf2	equ	0xFDF
  5577                           postinc2	equ	0xFDE
  5578                           postdec2	equ	0xFDD
  5579                           fsr2h	equ	0xFDA
  5580                           fsr2l	equ	0xFD9
  5581                           status	equ	0xFD8
  5582                           
  5583 ;; *************** function _SYSTEM_Initialize *****************
  5584 ;; Defined at:
  5585 ;;		line 116 in file "mcc_generated_files/mcc.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;		None
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  1    wreg      void 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, cstack
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5603 ;;Total ram usage:        0 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; Hardware stack levels required when called:    7
  5606 ;; This function calls:
  5607 ;;		_INTERRUPT_Initialize
  5608 ;;		_OSCILLATOR_Initialize
  5609 ;;		_PIN_MANAGER_Initialize
  5610 ;;		_PMD_Initialize
  5611 ;; This function is called by:
  5612 ;;		_main
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text56
  5617  000C3C                     __ptext56:
  5618                           	opt stack 0
  5619  000C3C                     _SYSTEM_Initialize:
  5620                           	opt stack 23
  5621                           
  5622                           ;mcc.c: 118: INTERRUPT_Initialize();
  5623                           
  5624                           ; BSR set to: 14
  5625                           ;incstack = 0
  5626  000C3C  ECFB  F006         	call	_INTERRUPT_Initialize	;wreg free
  5627                           
  5628                           ;mcc.c: 119: PMD_Initialize();
  5629  000C40  EC7F  F005         	call	_PMD_Initialize	;wreg free
  5630                           
  5631                           ;mcc.c: 120: PIN_MANAGER_Initialize();
  5632  000C44  ECD8  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  5633                           
  5634                           ;mcc.c: 121: OSCILLATOR_Initialize();
  5635  000C48  ECB3  F005         	call	_OSCILLATOR_Initialize	;wreg free
  5636  000C4C  0012               	return		;funcret
  5637  000C4E                     __end_of_SYSTEM_Initialize:
  5638                           	opt stack 0
  5639                           tosu	equ	0xFFF
  5640                           tosh	equ	0xFFE
  5641                           tosl	equ	0xFFD
  5642                           pclath	equ	0xFFA
  5643                           tblptru	equ	0xFF8
  5644                           tblptrh	equ	0xFF7
  5645                           tblptrl	equ	0xFF6
  5646                           tablat	equ	0xFF5
  5647                           prodh	equ	0xFF4
  5648                           prodl	equ	0xFF3
  5649                           intcon	equ	0xFF2
  5650                           postinc0	equ	0xFEE
  5651                           wreg	equ	0xFE8
  5652                           postdec1	equ	0xFE5
  5653                           fsr1l	equ	0xFE1
  5654                           indf2	equ	0xFDF
  5655                           postinc2	equ	0xFDE
  5656                           postdec2	equ	0xFDD
  5657                           fsr2h	equ	0xFDA
  5658                           fsr2l	equ	0xFD9
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _PMD_Initialize *****************
  5662 ;; Defined at:
  5663 ;;		line 138 in file "mcc_generated_files/mcc.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;Total ram usage:        0 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    6
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_SYSTEM_Initialize
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text57
  5692  000AFE                     __ptext57:
  5693                           	opt stack 0
  5694  000AFE                     _PMD_Initialize:
  5695                           	opt stack 23
  5696                           
  5697                           ;mcc.c: 141: PMD0 = 0x00;
  5698                           
  5699                           ;incstack = 0
  5700  000AFE  0E00               	movlw	0
  5701  000B00  010E               	movlb	14	; () banked
  5702  000B02  6FE1               	movwf	225,b	;volatile
  5703                           
  5704                           ;mcc.c: 143: PMD1 = 0x00;
  5705  000B04  0E00               	movlw	0
  5706  000B06  6FE2               	movwf	226,b	;volatile
  5707                           
  5708                           ;mcc.c: 145: PMD2 = 0x00;
  5709  000B08  0E00               	movlw	0
  5710  000B0A  6FE3               	movwf	227,b	;volatile
  5711                           
  5712                           ;mcc.c: 147: PMD3 = 0x00;
  5713  000B0C  0E00               	movlw	0
  5714  000B0E  6FE4               	movwf	228,b	;volatile
  5715                           
  5716                           ;mcc.c: 149: PMD4 = 0x00;
  5717  000B10  0E00               	movlw	0
  5718  000B12  6FE5               	movwf	229,b	;volatile
  5719                           
  5720                           ;mcc.c: 151: PMD5 = 0x00;
  5721  000B14  0E00               	movlw	0
  5722  000B16  6FE6               	movwf	230,b	;volatile
  5723                           
  5724                           ; BSR set to: 14
  5725  000B18  0012               	return		;funcret
  5726  000B1A                     __end_of_PMD_Initialize:
  5727                           	opt stack 0
  5728                           tosu	equ	0xFFF
  5729                           tosh	equ	0xFFE
  5730                           tosl	equ	0xFFD
  5731                           pclath	equ	0xFFA
  5732                           tblptru	equ	0xFF8
  5733                           tblptrh	equ	0xFF7
  5734                           tblptrl	equ	0xFF6
  5735                           tablat	equ	0xFF5
  5736                           prodh	equ	0xFF4
  5737                           prodl	equ	0xFF3
  5738                           intcon	equ	0xFF2
  5739                           postinc0	equ	0xFEE
  5740                           wreg	equ	0xFE8
  5741                           postdec1	equ	0xFE5
  5742                           fsr1l	equ	0xFE1
  5743                           indf2	equ	0xFDF
  5744                           postinc2	equ	0xFDE
  5745                           postdec2	equ	0xFDD
  5746                           fsr2h	equ	0xFDA
  5747                           fsr2l	equ	0xFD9
  5748                           status	equ	0xFD8
  5749                           
  5750 ;; *************** function _PIN_MANAGER_Initialize *****************
  5751 ;; Defined at:
  5752 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5770 ;;Total ram usage:        0 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    6
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_SYSTEM_Initialize
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text58
  5781  0003B0                     __ptext58:
  5782                           	opt stack 0
  5783  0003B0                     _PIN_MANAGER_Initialize:
  5784                           	opt stack 23
  5785                           
  5786                           ;pin_manager.c: 57: LATE = 0x00;
  5787                           
  5788                           ; BSR set to: 14
  5789                           ;incstack = 0
  5790  0003B0  0E00               	movlw	0
  5791  0003B2  6E87               	movwf	3975,c	;volatile
  5792                           
  5793                           ;pin_manager.c: 58: LATD = 0x00;
  5794  0003B4  0E00               	movlw	0
  5795  0003B6  6E86               	movwf	3974,c	;volatile
  5796                           
  5797                           ;pin_manager.c: 59: LATA = 0x0C;
  5798  0003B8  0E0C               	movlw	12
  5799  0003BA  6E83               	movwf	3971,c	;volatile
  5800                           
  5801                           ;pin_manager.c: 60: LATB = 0x00;
  5802  0003BC  0E00               	movlw	0
  5803  0003BE  6E84               	movwf	3972,c	;volatile
  5804                           
  5805                           ;pin_manager.c: 61: LATC = 0x00;
  5806  0003C0  0E00               	movlw	0
  5807  0003C2  6E85               	movwf	3973,c	;volatile
  5808                           
  5809                           ;pin_manager.c: 66: TRISE = 0x07;
  5810  0003C4  0E07               	movlw	7
  5811  0003C6  6E8C               	movwf	3980,c	;volatile
  5812                           
  5813                           ;pin_manager.c: 67: TRISA = 0xEB;
  5814  0003C8  0EEB               	movlw	235
  5815  0003CA  6E88               	movwf	3976,c	;volatile
  5816                           
  5817                           ;pin_manager.c: 68: TRISB = 0xFF;
  5818  0003CC  6889               	setf	3977,c	;volatile
  5819                           
  5820                           ;pin_manager.c: 69: TRISC = 0xFF;
  5821  0003CE  688A               	setf	3978,c	;volatile
  5822                           
  5823                           ;pin_manager.c: 70: TRISD = 0xFF;
  5824  0003D0  688B               	setf	3979,c	;volatile
  5825                           
  5826                           ;pin_manager.c: 75: ANSELC = 0xE7;
  5827  0003D2  0EE7               	movlw	231
  5828  0003D4  010F               	movlb	15	; () banked
  5829  0003D6  6F21               	movwf	33,b	;volatile
  5830                           
  5831                           ; BSR set to: 15
  5832                           ;pin_manager.c: 76: ANSELB = 0xFF;
  5833  0003D8  6919               	setf	25,b	;volatile
  5834                           
  5835                           ; BSR set to: 15
  5836                           ;pin_manager.c: 77: ANSELD = 0xFF;
  5837  0003DA  6926               	setf	38,b	;volatile
  5838                           
  5839                           ;pin_manager.c: 78: ANSELE = 0x07;
  5840  0003DC  0E07               	movlw	7
  5841  0003DE  6F2E               	movwf	46,b	;volatile
  5842                           
  5843                           ; BSR set to: 15
  5844                           ;pin_manager.c: 79: ANSELA = 0xFF;
  5845  0003E0  6911               	setf	17,b	;volatile
  5846                           
  5847                           ;pin_manager.c: 84: WPUD = 0x00;
  5848  0003E2  0E00               	movlw	0
  5849  0003E4  6F25               	movwf	37,b	;volatile
  5850                           
  5851                           ;pin_manager.c: 85: WPUE = 0x00;
  5852  0003E6  0E00               	movlw	0
  5853  0003E8  6F2D               	movwf	45,b	;volatile
  5854                           
  5855                           ;pin_manager.c: 86: WPUB = 0x00;
  5856  0003EA  0E00               	movlw	0
  5857  0003EC  6F18               	movwf	24,b	;volatile
  5858                           
  5859                           ;pin_manager.c: 87: WPUA = 0x00;
  5860  0003EE  0E00               	movlw	0
  5861  0003F0  6F10               	movwf	16,b	;volatile
  5862                           
  5863                           ;pin_manager.c: 88: WPUC = 0x18;
  5864  0003F2  0E18               	movlw	24
  5865  0003F4  6F20               	movwf	32,b	;volatile
  5866                           
  5867                           ;pin_manager.c: 93: ODCONE = 0x00;
  5868  0003F6  0E00               	movlw	0
  5869  0003F8  6F2C               	movwf	44,b	;volatile
  5870                           
  5871                           ;pin_manager.c: 94: ODCONA = 0x00;
  5872  0003FA  0E00               	movlw	0
  5873  0003FC  6F0F               	movwf	15,b	;volatile
  5874                           
  5875                           ;pin_manager.c: 95: ODCONB = 0x00;
  5876  0003FE  0E00               	movlw	0
  5877  000400  6F17               	movwf	23,b	;volatile
  5878                           
  5879                           ;pin_manager.c: 96: ODCONC = 0x00;
  5880  000402  0E00               	movlw	0
  5881  000404  6F1F               	movwf	31,b	;volatile
  5882                           
  5883                           ;pin_manager.c: 97: ODCOND = 0x00;
  5884  000406  0E00               	movlw	0
  5885  000408  6F24               	movwf	36,b	;volatile
  5886                           
  5887                           ; BSR set to: 15
  5888                           ;pin_manager.c: 104: SSP1CLKPPSbits.SSPCLKPPS = 0x13;
  5889  00040A  010E               	movlb	14	; () banked
  5890  00040C  81B7               	bsf	183,0,b	;volatile
  5891  00040E  83B7               	bsf	183,1,b	;volatile
  5892  000410  95B7               	bcf	183,2,b	;volatile
  5893  000412  97B7               	bcf	183,3,b	;volatile
  5894  000414  89B7               	bsf	183,4,b	;volatile
  5895                           
  5896                           ;pin_manager.c: 105: RC3PPS = 0x0F;
  5897  000416  0E0F               	movlw	15
  5898  000418  6FFA               	movwf	250,b	;volatile
  5899                           
  5900                           ;pin_manager.c: 106: RC4PPS = 0x10;
  5901  00041A  0E10               	movlw	16
  5902  00041C  6FFB               	movwf	251,b	;volatile
  5903                           
  5904                           ; BSR set to: 14
  5905                           ;pin_manager.c: 107: SSP1DATPPSbits.SSPDATPPS = 0x14;
  5906  00041E  91B8               	bcf	184,0,b	;volatile
  5907  000420  93B8               	bcf	184,1,b	;volatile
  5908  000422  85B8               	bsf	184,2,b	;volatile
  5909  000424  97B8               	bcf	184,3,b	;volatile
  5910  000426  89B8               	bsf	184,4,b	;volatile
  5911                           
  5912                           ; BSR set to: 14
  5913  000428  0012               	return		;funcret
  5914  00042A                     __end_of_PIN_MANAGER_Initialize:
  5915                           	opt stack 0
  5916                           tosu	equ	0xFFF
  5917                           tosh	equ	0xFFE
  5918                           tosl	equ	0xFFD
  5919                           pclath	equ	0xFFA
  5920                           tblptru	equ	0xFF8
  5921                           tblptrh	equ	0xFF7
  5922                           tblptrl	equ	0xFF6
  5923                           tablat	equ	0xFF5
  5924                           prodh	equ	0xFF4
  5925                           prodl	equ	0xFF3
  5926                           intcon	equ	0xFF2
  5927                           postinc0	equ	0xFEE
  5928                           wreg	equ	0xFE8
  5929                           postdec1	equ	0xFE5
  5930                           fsr1l	equ	0xFE1
  5931                           indf2	equ	0xFDF
  5932                           postinc2	equ	0xFDE
  5933                           postdec2	equ	0xFDD
  5934                           fsr2h	equ	0xFDA
  5935                           fsr2l	equ	0xFD9
  5936                           status	equ	0xFD8
  5937                           
  5938 ;; *************** function _OSCILLATOR_Initialize *****************
  5939 ;; Defined at:
  5940 ;;		line 124 in file "mcc_generated_files/mcc.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;		None
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;		None
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  1    wreg      void 
  5947 ;; Registers used:
  5948 ;;		wreg, status,2
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5958 ;;Total ram usage:        0 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    6
  5961 ;; This function calls:
  5962 ;;		Nothing
  5963 ;; This function is called by:
  5964 ;;		_SYSTEM_Initialize
  5965 ;; This function uses a non-reentrant model
  5966 ;;
  5967                           
  5968                           	psect	text59
  5969  000B66                     __ptext59:
  5970                           	opt stack 0
  5971  000B66                     _OSCILLATOR_Initialize:
  5972                           	opt stack 23
  5973                           
  5974                           ;mcc.c: 127: OSCCON1 = 0x62;
  5975                           
  5976                           ; BSR set to: 14
  5977                           ;incstack = 0
  5978  000B66  0E62               	movlw	98
  5979  000B68  010E               	movlb	14	; () banked
  5980  000B6A  6FD8               	movwf	216,b	;volatile
  5981                           
  5982                           ;mcc.c: 129: OSCCON3 = 0x00;
  5983  000B6C  0E00               	movlw	0
  5984  000B6E  6FDA               	movwf	218,b	;volatile
  5985                           
  5986                           ;mcc.c: 131: OSCEN = 0x00;
  5987  000B70  0E00               	movlw	0
  5988  000B72  6FDC               	movwf	220,b	;volatile
  5989                           
  5990                           ;mcc.c: 133: OSCFRQ = 0x03;
  5991  000B74  0E03               	movlw	3
  5992  000B76  6FDE               	movwf	222,b	;volatile
  5993                           
  5994                           ;mcc.c: 135: OSCTUNE = 0x20;
  5995  000B78  0E20               	movlw	32
  5996  000B7A  6FDD               	movwf	221,b	;volatile
  5997                           
  5998                           ; BSR set to: 14
  5999  000B7C  0012               	return		;funcret
  6000  000B7E                     __end_of_OSCILLATOR_Initialize:
  6001                           	opt stack 0
  6002                           tosu	equ	0xFFF
  6003                           tosh	equ	0xFFE
  6004                           tosl	equ	0xFFD
  6005                           pclath	equ	0xFFA
  6006                           tblptru	equ	0xFF8
  6007                           tblptrh	equ	0xFF7
  6008                           tblptrl	equ	0xFF6
  6009                           tablat	equ	0xFF5
  6010                           prodh	equ	0xFF4
  6011                           prodl	equ	0xFF3
  6012                           intcon	equ	0xFF2
  6013                           postinc0	equ	0xFEE
  6014                           wreg	equ	0xFE8
  6015                           postdec1	equ	0xFE5
  6016                           fsr1l	equ	0xFE1
  6017                           indf2	equ	0xFDF
  6018                           postinc2	equ	0xFDE
  6019                           postdec2	equ	0xFDD
  6020                           fsr2h	equ	0xFDA
  6021                           fsr2l	equ	0xFD9
  6022                           status	equ	0xFD8
  6023                           
  6024 ;; *************** function _INTERRUPT_Initialize *****************
  6025 ;; Defined at:
  6026 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;		None
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;		None
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  1    wreg      void 
  6033 ;; Registers used:
  6034 ;;		None
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6044 ;;Total ram usage:        0 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    6
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_SYSTEM_Initialize
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text60
  6055  000DF6                     __ptext60:
  6056                           	opt stack 0
  6057  000DF6                     _INTERRUPT_Initialize:
  6058                           	opt stack 23
  6059                           
  6060                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  6061                           
  6062                           ; BSR set to: 14
  6063                           ;incstack = 0
  6064  000DF6  9AF2               	bcf	intcon,5,c	;volatile
  6065  000DF8  0012               	return		;funcret
  6066  000DFA                     __end_of_INTERRUPT_Initialize:
  6067                           	opt stack 0
  6068                           tosu	equ	0xFFF
  6069                           tosh	equ	0xFFE
  6070                           tosl	equ	0xFFD
  6071                           pclath	equ	0xFFA
  6072                           tblptru	equ	0xFF8
  6073                           tblptrh	equ	0xFF7
  6074                           tblptrl	equ	0xFF6
  6075                           tablat	equ	0xFF5
  6076                           prodh	equ	0xFF4
  6077                           prodl	equ	0xFF3
  6078                           intcon	equ	0xFF2
  6079                           postinc0	equ	0xFEE
  6080                           wreg	equ	0xFE8
  6081                           postdec1	equ	0xFE5
  6082                           fsr1l	equ	0xFE1
  6083                           indf2	equ	0xFDF
  6084                           postinc2	equ	0xFDE
  6085                           postdec2	equ	0xFDD
  6086                           fsr2h	equ	0xFDA
  6087                           fsr2l	equ	0xFD9
  6088                           status	equ	0xFD8
  6089                           
  6090 ;; *************** function _INTERRUPT_InterruptManager *****************
  6091 ;; Defined at:
  6092 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6108 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6109 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6110 ;;Total ram usage:       18 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    5
  6113 ;; This function calls:
  6114 ;;		Absolute function
  6115 ;;		_i2c_busCollisionISR
  6116 ;;		i2_i2c_ISR
  6117 ;; This function is called by:
  6118 ;;		Interrupt level 2
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	intcode
  6123  000008                     __pintcode:
  6124                           	opt stack 0
  6125  000008                     _INTERRUPT_InterruptManager:
  6126                           	opt stack 16
  6127                           
  6128                           ;incstack = 0
  6129  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6130  00000A  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  6131  00000E  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6132  000012  CFE9 F036          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6133  000016  CFEA F037          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6134  00001A  CFE1 F038          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6135  00001E  CFE2 F039          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6136  000022  CFD9 F03A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6137  000026  CFDA F03B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6138  00002A  CFF3 F03C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6139  00002E  CFF4 F03D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6140  000032  CFF6 F03E          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6141  000036  CFF7 F03F          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6142  00003A  CFF8 F040          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6143  00003E  CFF5 F041          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6144  000042  C04A  F042         	movff	btemp,??_INTERRUPT_InterruptManager+14
  6145  000046  C04B  F043         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  6146  00004A  C04C  F044         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  6147  00004E  C04D  F045         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  6148                           
  6149                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  6150  000052  ACF2               	btfss	intcon,6,c	;volatile
  6151  000054  D01D               	goto	i2u162_49
  6152                           
  6153                           ;interrupt_manager.c: 61: {
  6154                           ;interrupt_manager.c: 62: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  6155  000056  010E               	movlb	14	; () banked
  6156  000058  B3C5               	btfsc	197,1,b	;volatile
  6157                           
  6158                           ; BSR set to: 14
  6159  00005A  A3CD               	btfss	205,1,b	;volatile
  6160  00005C  D00A               	goto	i2l267
  6161                           
  6162                           ; BSR set to: 14
  6163                           ;interrupt_manager.c: 63: {
  6164                           ;interrupt_manager.c: 64: i2c1_driver_busCollisionISR();
  6165  00005E  D801               	call	i2u159_48
  6166  000060  D017               	goto	i2u162_49
  6167  000062                     i2u159_48:
  6168  000062  0005               	push	
  6169  000064  6EFA               	movwf	pclath,c
  6170  000066  502E               	movf	_i2c1_driver_busCollisionISR,w,c
  6171  000068  6EFD               	movwf	tosl,c
  6172  00006A  502F               	movf	_i2c1_driver_busCollisionISR+1,w,c
  6173  00006C  6EFE               	movwf	tosh,c
  6174  00006E  5030               	movf	_i2c1_driver_busCollisionISR+2,w,c
  6175  000070  D00C               	goto	L3
  6176  000072                     i2l267:
  6177                           
  6178                           ; BSR set to: 14
  6179                           ;interrupt_manager.c: 66: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  6180  000072  B1C5               	btfsc	197,0,b	;volatile
  6181                           
  6182                           ; BSR set to: 14
  6183  000074  A1CD               	btfss	205,0,b	;volatile
  6184  000076  D00C               	goto	i2u162_49
  6185                           
  6186                           ; BSR set to: 14
  6187                           ;interrupt_manager.c: 67: {
  6188                           ;interrupt_manager.c: 68: i2c1_driver_i2cISR();
  6189  000078  D801               	call	i2u162_48
  6190  00007A  D00A               	goto	i2u162_49
  6191  00007C                     i2u162_48:
  6192  00007C  0005               	push	
  6193  00007E  6EFA               	movwf	pclath,c
  6194  000080  502B               	movf	_i2c1_driver_i2cISR,w,c
  6195  000082  6EFD               	movwf	tosl,c
  6196  000084  502C               	movf	_i2c1_driver_i2cISR+1,w,c
  6197  000086  6EFE               	movwf	tosh,c
  6198  000088  502D               	movf	_i2c1_driver_i2cISR+2,w,c
  6199  00008A                     L3:
  6200  00008A  6EFF               	movwf	tosu,c
  6201  00008C  50FA               	movf	pclath,w,c
  6202  00008E  0012               	return		;indir
  6203  000090                     i2u162_49:
  6204                           
  6205                           ;interrupt_manager.c: 75: else
  6206                           ;interrupt_manager.c: 76: {
  6207                           
  6208                           ;interrupt_manager.c: 73: }
  6209                           ;interrupt_manager.c: 74: }
  6210                           
  6211                           ;interrupt_manager.c: 70: else
  6212                           ;interrupt_manager.c: 71: {
  6213                           
  6214                           ;interrupt_manager.c: 69: }
  6215  000090  C045  F04D         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  6216  000094  C044  F04C         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  6217  000098  C043  F04B         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  6218  00009C  C042  F04A         	movff	??_INTERRUPT_InterruptManager+14,btemp
  6219  0000A0  C041  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6220  0000A4  C040  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6221  0000A8  C03F  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6222  0000AC  C03E  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6223  0000B0  C03D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6224  0000B4  C03C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6225  0000B8  C03B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6226  0000BC  C03A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6227  0000C0  C039  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6228  0000C4  C038  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6229  0000C8  C037  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6230  0000CC  C036  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6231  0000D0  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6232  0000D4  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6233  0000D8  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6234  0000DA  0011               	retfie		f
  6235  0000DC                     __end_of_INTERRUPT_InterruptManager:
  6236                           	opt stack 0
  6237                           tosu	equ	0xFFF
  6238                           tosh	equ	0xFFE
  6239                           tosl	equ	0xFFD
  6240                           pclatu	equ	0xFFB
  6241                           pclath	equ	0xFFA
  6242                           tblptru	equ	0xFF8
  6243                           tblptrh	equ	0xFF7
  6244                           tblptrl	equ	0xFF6
  6245                           tablat	equ	0xFF5
  6246                           prodh	equ	0xFF4
  6247                           prodl	equ	0xFF3
  6248                           intcon	equ	0xFF2
  6249                           postinc0	equ	0xFEE
  6250                           fsr0h	equ	0xFEA
  6251                           fsr0l	equ	0xFE9
  6252                           wreg	equ	0xFE8
  6253                           postdec1	equ	0xFE5
  6254                           fsr1h	equ	0xFE2
  6255                           fsr1l	equ	0xFE1
  6256                           indf2	equ	0xFDF
  6257                           postinc2	equ	0xFDE
  6258                           postdec2	equ	0xFDD
  6259                           fsr2h	equ	0xFDA
  6260                           fsr2l	equ	0xFD9
  6261                           status	equ	0xFD8
  6262                           
  6263 ;; *************** function i2_i2c_ISR *****************
  6264 ;; Defined at:
  6265 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    4
  6286 ;; This function calls:
  6287 ;;		i2_do_I2C_DO_ACK
  6288 ;;		i2_do_I2C_DO_ADDRESS_NACK
  6289 ;;		i2_do_I2C_DO_NACK_RESTART
  6290 ;;		i2_do_I2C_DO_NACK_STOP
  6291 ;;		i2_do_I2C_IDLE
  6292 ;;		i2_do_I2C_RCEN
  6293 ;;		i2_do_I2C_RESET
  6294 ;;		i2_do_I2C_RX
  6295 ;;		i2_do_I2C_SEND_ADR_READ
  6296 ;;		i2_do_I2C_SEND_ADR_WRITE
  6297 ;;		i2_do_I2C_SEND_RESTART
  6298 ;;		i2_do_I2C_SEND_RESTART_READ
  6299 ;;		i2_do_I2C_SEND_RESTART_WRITE
  6300 ;;		i2_do_I2C_SEND_STOP
  6301 ;;		i2_do_I2C_TX
  6302 ;;		i2_do_I2C_TX_EMPTY
  6303 ;;		i2_i2c1_driver_isNACK
  6304 ;;		i2_mssp1_clearIRQ
  6305 ;; This function is called by:
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           	psect	text62
  6310  0007F8                     __ptext62:
  6311                           	opt stack 0
  6312  0007F8                     i2_i2c_ISR:
  6313                           	opt stack 16
  6314                           
  6315                           ;i2c_master.c: 421: mssp1_clearIRQ();
  6316                           
  6317                           ;incstack = 0
  6318  0007F8  ECDF  F006         	call	i2_mssp1_clearIRQ	;wreg free
  6319                           
  6320                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  6321  0007FC  A601               	btfss	_i2c_status,3,c
  6322  0007FE  D006               	goto	i2l469
  6323  000800  ECEC  F005         	call	i2_i2c1_driver_isNACK	;wreg free
  6324  000804  A0D8               	btfss	status,0,c
  6325  000806  D002               	goto	i2l469
  6326                           
  6327                           ;i2c_master.c: 428: {
  6328                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  6329  000808  0E0F               	movlw	15
  6330  00080A  6E0B               	movwf	_i2c_status+10,c
  6331  00080C                     i2l469:
  6332                           
  6333                           ;i2c_master.c: 430: }
  6334                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  6335  00080C  500B               	movf	_i2c_status+10,w,c
  6336  00080E  0D03               	mullw	3
  6337  000810  0E60               	movlw	low _fsmStateTable
  6338  000812  24F3               	addwf	prodl,w,c
  6339  000814  6ED9               	movwf	fsr2l,c
  6340  000816  0E00               	movlw	high _fsmStateTable
  6341  000818  20F4               	addwfc	prodh,w,c
  6342  00081A  6EDA               	movwf	fsr2h,c
  6343  00081C  D801               	call	i2u155_48
  6344  00081E  D00A               	goto	i2u155_49
  6345  000820                     i2u155_48:
  6346  000820  0005               	push	
  6347  000822  6EFA               	movwf	pclath,c
  6348  000824  50DE               	movf	postinc2,w,c
  6349  000826  6EFD               	movwf	tosl,c
  6350  000828  50DE               	movf	postinc2,w,c
  6351  00082A  6EFE               	movwf	tosh,c
  6352  00082C  50DE               	movf	postinc2,w,c
  6353  00082E  6EFF               	movwf	tosu,c
  6354  000830  50FA               	movf	pclath,w,c
  6355  000832  0012               	return		;indir
  6356  000834                     i2u155_49:
  6357  000834  6E0B               	movwf	_i2c_status+10,c
  6358  000836  0012               	return		;funcret
  6359  000838                     __end_ofi2_i2c_ISR:
  6360                           	opt stack 0
  6361                           tosu	equ	0xFFF
  6362                           tosh	equ	0xFFE
  6363                           tosl	equ	0xFFD
  6364                           pclatu	equ	0xFFB
  6365                           pclath	equ	0xFFA
  6366                           tblptru	equ	0xFF8
  6367                           tblptrh	equ	0xFF7
  6368                           tblptrl	equ	0xFF6
  6369                           tablat	equ	0xFF5
  6370                           prodh	equ	0xFF4
  6371                           prodl	equ	0xFF3
  6372                           intcon	equ	0xFF2
  6373                           postinc0	equ	0xFEE
  6374                           fsr0h	equ	0xFEA
  6375                           fsr0l	equ	0xFE9
  6376                           wreg	equ	0xFE8
  6377                           postdec1	equ	0xFE5
  6378                           fsr1h	equ	0xFE2
  6379                           fsr1l	equ	0xFE1
  6380                           indf2	equ	0xFDF
  6381                           postinc2	equ	0xFDE
  6382                           postdec2	equ	0xFDD
  6383                           fsr2h	equ	0xFDA
  6384                           fsr2l	equ	0xFD9
  6385                           status	equ	0xFD8
  6386                           
  6387 ;; *************** function i2_mssp1_clearIRQ *****************
  6388 ;; Defined at:
  6389 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      void 
  6396 ;; Registers used:
  6397 ;;		None
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		i2_i2c_ISR
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text63
  6417  000DBE                     __ptext63:
  6418                           	opt stack 0
  6419  000DBE                     i2_mssp1_clearIRQ:
  6420                           	opt stack 19
  6421                           
  6422                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  6423                           
  6424                           ;incstack = 0
  6425  000DBE  010E               	movlb	14	; () banked
  6426  000DC0  91CD               	bcf	205,0,b	;volatile
  6427                           
  6428                           ; BSR set to: 14
  6429  000DC2  0012               	return		;funcret
  6430  000DC4                     __end_ofi2_mssp1_clearIRQ:
  6431                           	opt stack 0
  6432                           tosu	equ	0xFFF
  6433                           tosh	equ	0xFFE
  6434                           tosl	equ	0xFFD
  6435                           pclatu	equ	0xFFB
  6436                           pclath	equ	0xFFA
  6437                           tblptru	equ	0xFF8
  6438                           tblptrh	equ	0xFF7
  6439                           tblptrl	equ	0xFF6
  6440                           tablat	equ	0xFF5
  6441                           prodh	equ	0xFF4
  6442                           prodl	equ	0xFF3
  6443                           intcon	equ	0xFF2
  6444                           postinc0	equ	0xFEE
  6445                           fsr0h	equ	0xFEA
  6446                           fsr0l	equ	0xFE9
  6447                           wreg	equ	0xFE8
  6448                           postdec1	equ	0xFE5
  6449                           fsr1h	equ	0xFE2
  6450                           fsr1l	equ	0xFE1
  6451                           indf2	equ	0xFDF
  6452                           postinc2	equ	0xFDE
  6453                           postdec2	equ	0xFDD
  6454                           fsr2h	equ	0xFDA
  6455                           fsr2l	equ	0xFD9
  6456                           status	equ	0xFD8
  6457                           
  6458 ;; *************** function i2_do_I2C_RX *****************
  6459 ;; Defined at:
  6460 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;		None
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  1    wreg      enum E11956
  6467 ;; Registers used:
  6468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6478 ;;Total ram usage:        0 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; Hardware stack levels required when called:    3
  6481 ;; This function calls:
  6482 ;;		Absolute function
  6483 ;;		i2_do_I2C_DO_NACK_RESTART
  6484 ;;		i2_do_I2C_DO_NACK_STOP
  6485 ;;		i2_i2c1_driver_getRXData
  6486 ;;		i2_i2c1_driver_sendACK
  6487 ;;		i2_i2c_restartWrite
  6488 ;;		i2_rd1RegCompleteHandler
  6489 ;;		i2_rd2RegCompleteHandler
  6490 ;;		i2_rdBlkRegCompleteHandler
  6491 ;;		i2_returnReset
  6492 ;;		i2_returnStop
  6493 ;;		i2_wr1RegCompleteHandler
  6494 ;;		i2_wr2RegCompleteHandler
  6495 ;; This function is called by:
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text64
  6500  00051A                     __ptext64:
  6501                           	opt stack 0
  6502  00051A                     i2_do_I2C_RX:
  6503                           	opt stack 16
  6504                           
  6505                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  6506                           
  6507                           ; BSR set to: 14
  6508                           ;incstack = 0
  6509  00051A  ECFD  F006         	call	i2_i2c1_driver_getRXData	;wreg free
  6510  00051E  C003  FFD9         	movff	_i2c_status+2,fsr2l
  6511  000522  C004  FFDA         	movff	_i2c_status+3,fsr2h
  6512  000526  6EDF               	movwf	indf2,c
  6513  000528  4A03               	infsnz	_i2c_status+2,f,c
  6514  00052A  2A04               	incf	_i2c_status+3,f,c
  6515                           
  6516                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  6517  00052C  0605               	decf	_i2c_status+4,f,c
  6518  00052E  A0D8               	btfss	status,0,c
  6519  000530  0606               	decf	_i2c_status+5,f,c
  6520  000532  5005               	movf	_i2c_status+4,w,c
  6521  000534  1006               	iorwf	_i2c_status+5,w,c
  6522  000536  B4D8               	btfsc	status,2,c
  6523  000538  D004               	goto	i2l445
  6524                           
  6525                           ;i2c_master.c: 361: {
  6526                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  6527  00053A  ECE8  F006         	call	i2_i2c1_driver_sendACK	;wreg free
  6528                           
  6529                           ;i2c_master.c: 363: return I2C_RCEN;
  6530  00053E  0E05               	movlw	5
  6531                           
  6532                           ;i2c_master.c: 364: }
  6533  000540  0012               	return	
  6534  000542                     i2l445:
  6535                           
  6536                           ;i2c_master.c: 365: else
  6537                           ;i2c_master.c: 366: {
  6538                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  6539  000542  8401               	bsf	_i2c_status,2,c
  6540                           
  6541                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  6542  000544  D006               	goto	i2l448
  6543  000546                     
  6544                           ;i2c_master.c: 371: case i2c_restart_read:
  6545                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  6546  000546  ECB0  F006         	call	i2_do_I2C_DO_NACK_RESTART	;wreg free
  6547  00054A  0012               	return	
  6548  00054C                     
  6549                           ;i2c_master.c: 375: case i2c_stop:
  6550                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  6551                           
  6552                           ;i2c_master.c: 374: case i2c_continue:
  6553  00054C  ECB4  F006         	call	i2_do_I2C_DO_NACK_STOP	;wreg free
  6554                           
  6555                           ;i2c_master.c: 377: }
  6556  000550  0012               	return	
  6557  000552                     i2l448:
  6558  000552  C01F  F03C         	movff	_i2c_status+30,i2returnStop@p
  6559  000556  C020  F03D         	movff	_i2c_status+31,i2returnStop@p+1
  6560  00055A  EE20  F00D         	lfsr	2,_i2c_status+12
  6561  00055E  D801               	call	i2u147_48
  6562  000560  D00A               	goto	i2u147_49
  6563  000562                     i2u147_48:
  6564  000562  0005               	push	
  6565  000564  6EFA               	movwf	pclath,c
  6566  000566  50DE               	movf	postinc2,w,c
  6567  000568  6EFD               	movwf	tosl,c
  6568  00056A  50DE               	movf	postinc2,w,c
  6569  00056C  6EFE               	movwf	tosh,c
  6570  00056E  50DE               	movf	postinc2,w,c
  6571  000570  6EFF               	movwf	tosu,c
  6572  000572  50FA               	movf	pclath,w,c
  6573  000574  0012               	return		;indir
  6574  000576                     i2u147_49:
  6575                           
  6576                           ; Switch size 1, requested type "space"
  6577                           ; Number of cases is 4, Range of values is 1 to 4
  6578                           ; switch strategies available:
  6579                           ; Name         Instructions Cycles
  6580                           ; simple_byte           13     7 (average)
  6581                           ;	Chosen strategy is simple_byte
  6582  000576  0A01               	xorlw	1	; case 1
  6583  000578  B4D8               	btfsc	status,2,c
  6584  00057A  D7E8               	goto	i2l451
  6585  00057C  0A03               	xorlw	3	; case 2
  6586  00057E  B4D8               	btfsc	status,2,c
  6587  000580  D7E2               	goto	i2l449
  6588  000582  0A01               	xorlw	1	; case 3
  6589  000584  B4D8               	btfsc	status,2,c
  6590  000586  D7DF               	goto	i2l449
  6591  000588  0A07               	xorlw	7	; case 4
  6592  00058A  D7E0               	goto	i2l451
  6593  00058C                     __end_ofi2_do_I2C_RX:
  6594                           	opt stack 0
  6595                           tosu	equ	0xFFF
  6596                           tosh	equ	0xFFE
  6597                           tosl	equ	0xFFD
  6598                           pclatu	equ	0xFFB
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           postinc0	equ	0xFEE
  6608                           fsr0h	equ	0xFEA
  6609                           fsr0l	equ	0xFE9
  6610                           wreg	equ	0xFE8
  6611                           postdec1	equ	0xFE5
  6612                           fsr1h	equ	0xFE2
  6613                           fsr1l	equ	0xFE1
  6614                           indf2	equ	0xFDF
  6615                           postinc2	equ	0xFDE
  6616                           postdec2	equ	0xFDD
  6617                           fsr2h	equ	0xFDA
  6618                           fsr2l	equ	0xFD9
  6619                           status	equ	0xFD8
  6620                           
  6621 ;; *************** function i2_do_I2C_TX *****************
  6622 ;; Defined at:
  6623 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      enum E11956
  6630 ;; Registers used:
  6631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;Total ram usage:        2 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    3
  6644 ;; This function calls:
  6645 ;;		Absolute function
  6646 ;;		i2_do_I2C_SEND_RESTART_READ
  6647 ;;		i2_do_I2C_SEND_RESTART_WRITE
  6648 ;;		i2_do_I2C_SEND_STOP
  6649 ;;		i2_i2c1_driver_TXData
  6650 ;;		i2_i2c1_driver_isNACK
  6651 ;;		i2_i2c_restartWrite
  6652 ;;		i2_rd1RegCompleteHandler
  6653 ;;		i2_rd2RegCompleteHandler
  6654 ;;		i2_rdBlkRegCompleteHandler
  6655 ;;		i2_returnReset
  6656 ;;		i2_returnStop
  6657 ;;		i2_wr1RegCompleteHandler
  6658 ;;		i2_wr2RegCompleteHandler
  6659 ;; This function is called by:
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text65
  6664  000226                     __ptext65:
  6665                           	opt stack 0
  6666  000226                     i2_do_I2C_TX:
  6667                           	opt stack 16
  6668                           
  6669                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  6670                           
  6671                           ;incstack = 0
  6672  000226  ECEC  F005         	call	i2_i2c1_driver_isNACK	;wreg free
  6673  00022A  B0D8               	btfsc	status,0,c
  6674  00022C  D00A               	goto	i2l430
  6675  00022E  D026               	goto	i2l429
  6676  000230                     
  6677                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  6678  000230  ECC8  F006         	call	i2_do_I2C_SEND_RESTART_READ	;wreg free
  6679  000234  0012               	return	
  6680  000236                     
  6681                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  6682  000236  ECC4  F006         	call	i2_do_I2C_SEND_RESTART_WRITE	;wreg free
  6683  00023A  0012               	return	
  6684  00023C                     
  6685                           ;i2c_master.c: 345: case i2c_stop:
  6686                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  6687                           
  6688                           ;i2c_master.c: 344: case i2c_continue:
  6689  00023C  ECBC  F006         	call	i2_do_I2C_SEND_STOP	;wreg free
  6690                           
  6691                           ;i2c_master.c: 347: }
  6692  000240  0012               	return	
  6693  000242                     i2l430:
  6694  000242  C025  F03C         	movff	_i2c_status+36,i2returnStop@p
  6695  000246  C026  F03D         	movff	_i2c_status+37,i2returnStop@p+1
  6696  00024A  EE20  F016         	lfsr	2,_i2c_status+21
  6697  00024E  D801               	call	i2u144_48
  6698  000250  D00A               	goto	i2u144_49
  6699  000252                     i2u144_48:
  6700  000252  0005               	push	
  6701  000254  6EFA               	movwf	pclath,c
  6702  000256  50DE               	movf	postinc2,w,c
  6703  000258  6EFD               	movwf	tosl,c
  6704  00025A  50DE               	movf	postinc2,w,c
  6705  00025C  6EFE               	movwf	tosh,c
  6706  00025E  50DE               	movf	postinc2,w,c
  6707  000260  6EFF               	movwf	tosu,c
  6708  000262  50FA               	movf	pclath,w,c
  6709  000264  0012               	return		;indir
  6710  000266                     i2u144_49:
  6711                           
  6712                           ; Switch size 1, requested type "space"
  6713                           ; Number of cases is 4, Range of values is 1 to 4
  6714                           ; switch strategies available:
  6715                           ; Name         Instructions Cycles
  6716                           ; simple_byte           13     7 (average)
  6717                           ;	Chosen strategy is simple_byte
  6718  000266  0A01               	xorlw	1	; case 1
  6719  000268  B4D8               	btfsc	status,2,c
  6720  00026A  D7E8               	goto	i2l434
  6721  00026C  0A03               	xorlw	3	; case 2
  6722  00026E  B4D8               	btfsc	status,2,c
  6723  000270  D7DF               	goto	i2l431
  6724  000272  0A01               	xorlw	1	; case 3
  6725  000274  B4D8               	btfsc	status,2,c
  6726  000276  D7DF               	goto	i2l433
  6727  000278  0A07               	xorlw	7	; case 4
  6728  00027A  D7E0               	goto	i2l434
  6729  00027C                     i2l429:
  6730                           
  6731                           ;i2c_master.c: 349: else
  6732                           ;i2c_master.c: 350: {
  6733                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  6734  00027C  9601               	bcf	_i2c_status,3,c
  6735                           
  6736                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  6737  00027E  C003  FFD9         	movff	_i2c_status+2,fsr2l
  6738  000282  C004  FFDA         	movff	_i2c_status+3,fsr2h
  6739  000286  4A03               	infsnz	_i2c_status+2,f,c
  6740  000288  2A04               	incf	_i2c_status+3,f,c
  6741  00028A  50DF               	movf	indf2,w,c
  6742  00028C  ECCC  F006         	call	i2_i2c1_driver_TXData
  6743                           
  6744                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  6745  000290  0605               	decf	_i2c_status+4,f,c
  6746  000292  A0D8               	btfss	status,0,c
  6747  000294  0606               	decf	_i2c_status+5,f,c
  6748  000296  5005               	movf	_i2c_status+4,w,c
  6749  000298  1006               	iorwf	_i2c_status+5,w,c
  6750  00029A  A4D8               	btfss	status,2,c
  6751  00029C  D004               	goto	i2l440
  6752  00029E  0E00               	movlw	0
  6753  0002A0  6E33               	movwf	i2_do_I2C_TX$1023+1,c
  6754  0002A2  0E06               	movlw	6
  6755  0002A4  D003               	goto	L4
  6756  0002A6                     i2l440:
  6757  0002A6  0E00               	movlw	0
  6758  0002A8  6E33               	movwf	i2_do_I2C_TX$1023+1,c
  6759  0002AA  0E03               	movlw	3
  6760  0002AC                     L4:
  6761  0002AC  6E32               	movwf	i2_do_I2C_TX$1023,c
  6762  0002AE  5032               	movf	i2_do_I2C_TX$1023,w,c
  6763  0002B0  0012               	return	
  6764  0002B2                     __end_ofi2_do_I2C_TX:
  6765                           	opt stack 0
  6766                           tosu	equ	0xFFF
  6767                           tosh	equ	0xFFE
  6768                           tosl	equ	0xFFD
  6769                           pclatu	equ	0xFFB
  6770                           pclath	equ	0xFFA
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           prodh	equ	0xFF4
  6776                           prodl	equ	0xFF3
  6777                           intcon	equ	0xFF2
  6778                           postinc0	equ	0xFEE
  6779                           fsr0h	equ	0xFEA
  6780                           fsr0l	equ	0xFE9
  6781                           wreg	equ	0xFE8
  6782                           postdec1	equ	0xFE5
  6783                           fsr1h	equ	0xFE2
  6784                           fsr1l	equ	0xFE1
  6785                           indf2	equ	0xFDF
  6786                           postinc2	equ	0xFDE
  6787                           postdec2	equ	0xFDD
  6788                           fsr2h	equ	0xFDA
  6789                           fsr2l	equ	0xFD9
  6790                           status	equ	0xFD8
  6791                           
  6792 ;; *************** function i2_do_I2C_DO_ADDRESS_NACK *****************
  6793 ;; Defined at:
  6794 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;		None
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;		None
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      enum E11956
  6801 ;; Registers used:
  6802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6812 ;;Total ram usage:        0 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    3
  6815 ;; This function calls:
  6816 ;;		Absolute function
  6817 ;;		i2_do_I2C_SEND_RESTART
  6818 ;;		i2_do_I2C_SEND_STOP
  6819 ;;		i2_i2c_restartWrite
  6820 ;;		i2_rd1RegCompleteHandler
  6821 ;;		i2_rd2RegCompleteHandler
  6822 ;;		i2_rdBlkRegCompleteHandler
  6823 ;;		i2_returnReset
  6824 ;;		i2_returnStop
  6825 ;;		i2_wr1RegCompleteHandler
  6826 ;;		i2_wr2RegCompleteHandler
  6827 ;; This function is called by:
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text66
  6832  00076E                     __ptext66:
  6833                           	opt stack 0
  6834  00076E                     i2_do_I2C_DO_ADDRESS_NACK:
  6835                           	opt stack 16
  6836                           
  6837                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  6838                           
  6839                           ;incstack = 0
  6840  00076E  9601               	bcf	_i2c_status,3,c
  6841                           
  6842                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  6843  000770  0E02               	movlw	2
  6844  000772  6E0C               	movwf	_i2c_status+11,c
  6845                           
  6846                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  6847  000774  D006               	goto	i2l421
  6848  000776                     
  6849                           ;i2c_master.c: 326: case i2c_restart_write:
  6850                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  6851  000776  ECC0  F006         	call	i2_do_I2C_SEND_RESTART	;wreg free
  6852  00077A  0012               	return	
  6853  00077C                     
  6854                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  6855  00077C  ECBC  F006         	call	i2_do_I2C_SEND_STOP	;wreg free
  6856                           
  6857                           ;i2c_master.c: 330: }
  6858  000780  0012               	return	
  6859  000782                     i2l421:
  6860  000782  C023  F03C         	movff	_i2c_status+34,i2returnStop@p
  6861  000786  C024  F03D         	movff	_i2c_status+35,i2returnStop@p+1
  6862  00078A  EE20  F013         	lfsr	2,_i2c_status+18
  6863  00078E  D801               	call	i2u142_48
  6864  000790  D00A               	goto	i2u142_49
  6865  000792                     i2u142_48:
  6866  000792  0005               	push	
  6867  000794  6EFA               	movwf	pclath,c
  6868  000796  50DE               	movf	postinc2,w,c
  6869  000798  6EFD               	movwf	tosl,c
  6870  00079A  50DE               	movf	postinc2,w,c
  6871  00079C  6EFE               	movwf	tosh,c
  6872  00079E  50DE               	movf	postinc2,w,c
  6873  0007A0  6EFF               	movwf	tosu,c
  6874  0007A2  50FA               	movf	pclath,w,c
  6875  0007A4  0012               	return		;indir
  6876  0007A6                     i2u142_49:
  6877                           
  6878                           ; Switch size 1, requested type "space"
  6879                           ; Number of cases is 2, Range of values is 2 to 3
  6880                           ; switch strategies available:
  6881                           ; Name         Instructions Cycles
  6882                           ; simple_byte            7     4 (average)
  6883                           ;	Chosen strategy is simple_byte
  6884  0007A6  0A02               	xorlw	2	; case 2
  6885  0007A8  B4D8               	btfsc	status,2,c
  6886  0007AA  D7E5               	goto	i2l422
  6887  0007AC  0A01               	xorlw	1	; case 3
  6888  0007AE  B4D8               	btfsc	status,2,c
  6889  0007B0  D7E2               	goto	i2l422
  6890  0007B2  D7E4               	goto	i2l425
  6891  0007B4                     __end_ofi2_do_I2C_DO_ADDRESS_NACK:
  6892                           	opt stack 0
  6893                           tosu	equ	0xFFF
  6894                           tosh	equ	0xFFE
  6895                           tosl	equ	0xFFD
  6896                           pclatu	equ	0xFFB
  6897                           pclath	equ	0xFFA
  6898                           tblptru	equ	0xFF8
  6899                           tblptrh	equ	0xFF7
  6900                           tblptrl	equ	0xFF6
  6901                           tablat	equ	0xFF5
  6902                           prodh	equ	0xFF4
  6903                           prodl	equ	0xFF3
  6904                           intcon	equ	0xFF2
  6905                           postinc0	equ	0xFEE
  6906                           fsr0h	equ	0xFEA
  6907                           fsr0l	equ	0xFE9
  6908                           wreg	equ	0xFE8
  6909                           postdec1	equ	0xFE5
  6910                           fsr1h	equ	0xFE2
  6911                           fsr1l	equ	0xFE1
  6912                           indf2	equ	0xFDF
  6913                           postinc2	equ	0xFDE
  6914                           postdec2	equ	0xFDD
  6915                           fsr2h	equ	0xFDA
  6916                           fsr2l	equ	0xFD9
  6917                           status	equ	0xFD8
  6918                           
  6919 ;; *************** function i2_do_I2C_DO_NACK_RESTART *****************
  6920 ;; Defined at:
  6921 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      enum E11956
  6928 ;; Registers used:
  6929 ;;		wreg, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    1
  6942 ;; This function calls:
  6943 ;;		i2_i2c1_driver_sendNACK
  6944 ;; This function is called by:
  6945 ;;		i2_do_I2C_RX
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text67
  6950  000D60                     __ptext67:
  6951                           	opt stack 0
  6952  000D60                     i2_do_I2C_DO_NACK_RESTART:
  6953                           	opt stack 17
  6954                           
  6955                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  6956                           
  6957                           ;incstack = 0
  6958  000D60  ECE5  F006         	call	i2_i2c1_driver_sendNACK	;wreg free
  6959                           
  6960                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  6961  000D64  0E09               	movlw	9
  6962  000D66  0012               	return	
  6963  000D68                     __end_ofi2_do_I2C_DO_NACK_RESTART:
  6964                           	opt stack 0
  6965                           tosu	equ	0xFFF
  6966                           tosh	equ	0xFFE
  6967                           tosl	equ	0xFFD
  6968                           pclatu	equ	0xFFB
  6969                           pclath	equ	0xFFA
  6970                           tblptru	equ	0xFF8
  6971                           tblptrh	equ	0xFF7
  6972                           tblptrl	equ	0xFF6
  6973                           tablat	equ	0xFF5
  6974                           prodh	equ	0xFF4
  6975                           prodl	equ	0xFF3
  6976                           intcon	equ	0xFF2
  6977                           postinc0	equ	0xFEE
  6978                           fsr0h	equ	0xFEA
  6979                           fsr0l	equ	0xFE9
  6980                           wreg	equ	0xFE8
  6981                           postdec1	equ	0xFE5
  6982                           fsr1h	equ	0xFE2
  6983                           fsr1l	equ	0xFE1
  6984                           indf2	equ	0xFDF
  6985                           postinc2	equ	0xFDE
  6986                           postdec2	equ	0xFDD
  6987                           fsr2h	equ	0xFDA
  6988                           fsr2l	equ	0xFD9
  6989                           status	equ	0xFD8
  6990                           
  6991 ;; *************** function i2_do_I2C_DO_NACK_STOP *****************
  6992 ;; Defined at:
  6993 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;		None
  6996 ;; Auto vars:     Size  Location     Type
  6997 ;;		None
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      enum E11956
  7000 ;; Registers used:
  7001 ;;		wreg, cstack
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7011 ;;Total ram usage:        0 bytes
  7012 ;; Hardware stack levels used:    1
  7013 ;; Hardware stack levels required when called:    1
  7014 ;; This function calls:
  7015 ;;		i2_i2c1_driver_sendNACK
  7016 ;; This function is called by:
  7017 ;;		i2_do_I2C_RX
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           	psect	text68
  7022  000D68                     __ptext68:
  7023                           	opt stack 0
  7024  000D68                     i2_do_I2C_DO_NACK_STOP:
  7025                           	opt stack 17
  7026                           
  7027                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  7028                           
  7029                           ;incstack = 0
  7030  000D68  ECE5  F006         	call	i2_i2c1_driver_sendNACK	;wreg free
  7031                           
  7032                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  7033  000D6C  0E0A               	movlw	10
  7034  000D6E  0012               	return	
  7035  000D70                     __end_ofi2_do_I2C_DO_NACK_STOP:
  7036                           	opt stack 0
  7037                           tosu	equ	0xFFF
  7038                           tosh	equ	0xFFE
  7039                           tosl	equ	0xFFD
  7040                           pclatu	equ	0xFFB
  7041                           pclath	equ	0xFFA
  7042                           tblptru	equ	0xFF8
  7043                           tblptrh	equ	0xFF7
  7044                           tblptrl	equ	0xFF6
  7045                           tablat	equ	0xFF5
  7046                           prodh	equ	0xFF4
  7047                           prodl	equ	0xFF3
  7048                           intcon	equ	0xFF2
  7049                           postinc0	equ	0xFEE
  7050                           fsr0h	equ	0xFEA
  7051                           fsr0l	equ	0xFE9
  7052                           wreg	equ	0xFE8
  7053                           postdec1	equ	0xFE5
  7054                           fsr1h	equ	0xFE2
  7055                           fsr1l	equ	0xFE1
  7056                           indf2	equ	0xFDF
  7057                           postinc2	equ	0xFDE
  7058                           postdec2	equ	0xFDD
  7059                           fsr2h	equ	0xFDA
  7060                           fsr2l	equ	0xFD9
  7061                           status	equ	0xFD8
  7062                           
  7063 ;; *************** function i2_do_I2C_DO_ACK *****************
  7064 ;; Defined at:
  7065 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      enum E11956
  7072 ;; Registers used:
  7073 ;;		wreg, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7083 ;;Total ram usage:        0 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:    1
  7086 ;; This function calls:
  7087 ;;		i2_i2c1_driver_sendACK
  7088 ;; This function is called by:
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text69
  7093  000D70                     __ptext69:
  7094                           	opt stack 0
  7095  000D70                     i2_do_I2C_DO_ACK:
  7096                           	opt stack 18
  7097                           
  7098                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  7099                           
  7100                           ;incstack = 0
  7101  000D70  ECE8  F006         	call	i2_i2c1_driver_sendACK	;wreg free
  7102                           
  7103                           ;i2c_master.c: 302: return I2C_RCEN;
  7104  000D74  0E05               	movlw	5
  7105  000D76  0012               	return	
  7106  000D78                     __end_ofi2_do_I2C_DO_ACK:
  7107                           	opt stack 0
  7108                           tosu	equ	0xFFF
  7109                           tosh	equ	0xFFE
  7110                           tosl	equ	0xFFD
  7111                           pclatu	equ	0xFFB
  7112                           pclath	equ	0xFFA
  7113                           tblptru	equ	0xFF8
  7114                           tblptrh	equ	0xFF7
  7115                           tblptrl	equ	0xFF6
  7116                           tablat	equ	0xFF5
  7117                           prodh	equ	0xFF4
  7118                           prodl	equ	0xFF3
  7119                           intcon	equ	0xFF2
  7120                           postinc0	equ	0xFEE
  7121                           fsr0h	equ	0xFEA
  7122                           fsr0l	equ	0xFE9
  7123                           wreg	equ	0xFE8
  7124                           postdec1	equ	0xFE5
  7125                           fsr1h	equ	0xFE2
  7126                           fsr1l	equ	0xFE1
  7127                           indf2	equ	0xFDF
  7128                           postinc2	equ	0xFDE
  7129                           postdec2	equ	0xFDD
  7130                           fsr2h	equ	0xFDA
  7131                           fsr2l	equ	0xFD9
  7132                           status	equ	0xFD8
  7133                           
  7134 ;; *************** function i2_do_I2C_RCEN *****************
  7135 ;; Defined at:
  7136 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  7137 ;; Parameters:    Size  Location     Type
  7138 ;;		None
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      enum E11956
  7143 ;; Registers used:
  7144 ;;		wreg, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7154 ;;Total ram usage:        0 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    1
  7157 ;; This function calls:
  7158 ;;		i2_i2c1_driver_startRX
  7159 ;; This function is called by:
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text70
  7164  000D34                     __ptext70:
  7165                           	opt stack 0
  7166  000D34                     i2_do_I2C_RCEN:
  7167                           	opt stack 18
  7168                           
  7169                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  7170                           
  7171                           ;incstack = 0
  7172  000D34  9601               	bcf	_i2c_status,3,c
  7173                           
  7174                           ;i2c_master.c: 295: i2c1_driver_startRX();
  7175  000D36  ECFF  F006         	call	i2_i2c1_driver_startRX	;wreg free
  7176                           
  7177                           ;i2c_master.c: 296: return I2C_RX;
  7178  000D3A  0E04               	movlw	4
  7179  000D3C  0012               	return	
  7180  000D3E                     __end_ofi2_do_I2C_RCEN:
  7181                           	opt stack 0
  7182                           tosu	equ	0xFFF
  7183                           tosh	equ	0xFFE
  7184                           tosl	equ	0xFFD
  7185                           pclatu	equ	0xFFB
  7186                           pclath	equ	0xFFA
  7187                           tblptru	equ	0xFF8
  7188                           tblptrh	equ	0xFF7
  7189                           tblptrl	equ	0xFF6
  7190                           tablat	equ	0xFF5
  7191                           prodh	equ	0xFF4
  7192                           prodl	equ	0xFF3
  7193                           intcon	equ	0xFF2
  7194                           postinc0	equ	0xFEE
  7195                           fsr0h	equ	0xFEA
  7196                           fsr0l	equ	0xFE9
  7197                           wreg	equ	0xFE8
  7198                           postdec1	equ	0xFE5
  7199                           fsr1h	equ	0xFE2
  7200                           fsr1l	equ	0xFE1
  7201                           indf2	equ	0xFDF
  7202                           postinc2	equ	0xFDE
  7203                           postdec2	equ	0xFDD
  7204                           fsr2h	equ	0xFDA
  7205                           fsr2l	equ	0xFD9
  7206                           status	equ	0xFD8
  7207                           
  7208 ;; *************** function i2_do_I2C_SEND_ADR_WRITE *****************
  7209 ;; Defined at:
  7210 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;		None
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;		None
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      enum E11956
  7217 ;; Registers used:
  7218 ;;		wreg, status,2, status,0, cstack
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;Total ram usage:        0 bytes
  7229 ;; Hardware stack levels used:    1
  7230 ;; Hardware stack levels required when called:    1
  7231 ;; This function calls:
  7232 ;;		i2_i2c1_driver_TXData
  7233 ;; This function is called by:
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237                           	psect	text71
  7238  000CEC                     __ptext71:
  7239                           	opt stack 0
  7240  000CEC                     i2_do_I2C_SEND_ADR_WRITE:
  7241                           	opt stack 18
  7242                           
  7243                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  7244                           
  7245                           ;incstack = 0
  7246  000CEC  8601               	bsf	_i2c_status,3,c
  7247                           
  7248                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  7249  000CEE  5002               	movf	_i2c_status+1,w,c
  7250  000CF0  2402               	addwf	_i2c_status+1,w,c
  7251  000CF2  ECCC  F006         	call	i2_i2c1_driver_TXData
  7252                           
  7253                           ;i2c_master.c: 289: return I2C_TX;
  7254  000CF6  0E03               	movlw	3
  7255  000CF8  0012               	return	
  7256  000CFA                     __end_ofi2_do_I2C_SEND_ADR_WRITE:
  7257                           	opt stack 0
  7258                           tosu	equ	0xFFF
  7259                           tosh	equ	0xFFE
  7260                           tosl	equ	0xFFD
  7261                           pclatu	equ	0xFFB
  7262                           pclath	equ	0xFFA
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           intcon	equ	0xFF2
  7270                           postinc0	equ	0xFEE
  7271                           fsr0h	equ	0xFEA
  7272                           fsr0l	equ	0xFE9
  7273                           wreg	equ	0xFE8
  7274                           postdec1	equ	0xFE5
  7275                           fsr1h	equ	0xFE2
  7276                           fsr1l	equ	0xFE1
  7277                           indf2	equ	0xFDF
  7278                           postinc2	equ	0xFDE
  7279                           postdec2	equ	0xFDD
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function i2_do_I2C_SEND_ADR_READ *****************
  7285 ;; Defined at:
  7286 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      enum E11956
  7293 ;; Registers used:
  7294 ;;		wreg, status,0, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7304 ;;Total ram usage:        0 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    1
  7307 ;; This function calls:
  7308 ;;		i2_i2c1_driver_TXData
  7309 ;; This function is called by:
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text72
  7314  000CFA                     __ptext72:
  7315                           	opt stack 0
  7316  000CFA                     i2_do_I2C_SEND_ADR_READ:
  7317                           	opt stack 18
  7318                           
  7319                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  7320                           
  7321                           ;incstack = 0
  7322  000CFA  8601               	bsf	_i2c_status,3,c
  7323                           
  7324                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  7325  000CFC  80D8               	bsf	status,0,c
  7326  000CFE  3402               	rlcf	_i2c_status+1,w,c
  7327  000D00  ECCC  F006         	call	i2_i2c1_driver_TXData
  7328                           
  7329                           ;i2c_master.c: 282: return I2C_RCEN;
  7330  000D04  0E05               	movlw	5
  7331  000D06  0012               	return	
  7332  000D08                     __end_ofi2_do_I2C_SEND_ADR_READ:
  7333                           	opt stack 0
  7334                           tosu	equ	0xFFF
  7335                           tosh	equ	0xFFE
  7336                           tosl	equ	0xFFD
  7337                           pclatu	equ	0xFFB
  7338                           pclath	equ	0xFFA
  7339                           tblptru	equ	0xFF8
  7340                           tblptrh	equ	0xFF7
  7341                           tblptrl	equ	0xFF6
  7342                           tablat	equ	0xFF5
  7343                           prodh	equ	0xFF4
  7344                           prodl	equ	0xFF3
  7345                           intcon	equ	0xFF2
  7346                           postinc0	equ	0xFEE
  7347                           fsr0h	equ	0xFEA
  7348                           fsr0l	equ	0xFE9
  7349                           wreg	equ	0xFE8
  7350                           postdec1	equ	0xFE5
  7351                           fsr1h	equ	0xFE2
  7352                           fsr1l	equ	0xFE1
  7353                           indf2	equ	0xFDF
  7354                           postinc2	equ	0xFDE
  7355                           postdec2	equ	0xFDD
  7356                           fsr2h	equ	0xFDA
  7357                           fsr2l	equ	0xFD9
  7358                           status	equ	0xFD8
  7359                           
  7360 ;; *************** function i2_do_I2C_SEND_STOP *****************
  7361 ;; Defined at:
  7362 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;		None
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;		None
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  1    wreg      enum E11956
  7369 ;; Registers used:
  7370 ;;		wreg, cstack
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;Total ram usage:        0 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; Hardware stack levels required when called:    1
  7383 ;; This function calls:
  7384 ;;		i2_i2c1_driver_stop
  7385 ;; This function is called by:
  7386 ;;		i2_do_I2C_DO_ADDRESS_NACK
  7387 ;;		i2_do_I2C_TX
  7388 ;;		i2_do_I2C_TX_EMPTY
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text73
  7393  000D78                     __ptext73:
  7394                           	opt stack 0
  7395  000D78                     i2_do_I2C_SEND_STOP:
  7396                           	opt stack 17
  7397                           
  7398                           ;i2c_master.c: 274: i2c1_driver_stop();
  7399                           
  7400                           ;incstack = 0
  7401  000D78  EC07  F007         	call	i2_i2c1_driver_stop	;wreg free
  7402                           
  7403                           ;i2c_master.c: 275: return I2C_IDLE;
  7404  000D7C  0E00               	movlw	0
  7405  000D7E  0012               	return	
  7406  000D80                     __end_ofi2_do_I2C_SEND_STOP:
  7407                           	opt stack 0
  7408                           tosu	equ	0xFFF
  7409                           tosh	equ	0xFFE
  7410                           tosl	equ	0xFFD
  7411                           pclatu	equ	0xFFB
  7412                           pclath	equ	0xFFA
  7413                           tblptru	equ	0xFF8
  7414                           tblptrh	equ	0xFF7
  7415                           tblptrl	equ	0xFF6
  7416                           tablat	equ	0xFF5
  7417                           prodh	equ	0xFF4
  7418                           prodl	equ	0xFF3
  7419                           intcon	equ	0xFF2
  7420                           postinc0	equ	0xFEE
  7421                           fsr0h	equ	0xFEA
  7422                           fsr0l	equ	0xFE9
  7423                           wreg	equ	0xFE8
  7424                           postdec1	equ	0xFE5
  7425                           fsr1h	equ	0xFE2
  7426                           fsr1l	equ	0xFE1
  7427                           indf2	equ	0xFDF
  7428                           postinc2	equ	0xFDE
  7429                           postdec2	equ	0xFDD
  7430                           fsr2h	equ	0xFDA
  7431                           fsr2l	equ	0xFD9
  7432                           status	equ	0xFD8
  7433                           
  7434 ;; *************** function i2_do_I2C_SEND_RESTART *****************
  7435 ;; Defined at:
  7436 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  7437 ;; Parameters:    Size  Location     Type
  7438 ;;		None
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;		None
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  1    wreg      enum E11956
  7443 ;; Registers used:
  7444 ;;		wreg, cstack
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7454 ;;Total ram usage:        0 bytes
  7455 ;; Hardware stack levels used:    1
  7456 ;; Hardware stack levels required when called:    1
  7457 ;; This function calls:
  7458 ;;		i2_i2c1_driver_restart
  7459 ;; This function is called by:
  7460 ;;		i2_do_I2C_DO_ADDRESS_NACK
  7461 ;;		i2_do_I2C_TX_EMPTY
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text74
  7466  000D80                     __ptext74:
  7467                           	opt stack 0
  7468  000D80                     i2_do_I2C_SEND_RESTART:
  7469                           	opt stack 17
  7470                           
  7471                           ;i2c_master.c: 268: i2c1_driver_restart();
  7472                           
  7473                           ;incstack = 0
  7474  000D80  EC09  F007         	call	i2_i2c1_driver_restart	;wreg free
  7475                           
  7476                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  7477  000D84  0E01               	movlw	1
  7478  000D86  0012               	return	
  7479  000D88                     __end_ofi2_do_I2C_SEND_RESTART:
  7480                           	opt stack 0
  7481                           tosu	equ	0xFFF
  7482                           tosh	equ	0xFFE
  7483                           tosl	equ	0xFFD
  7484                           pclatu	equ	0xFFB
  7485                           pclath	equ	0xFFA
  7486                           tblptru	equ	0xFF8
  7487                           tblptrh	equ	0xFF7
  7488                           tblptrl	equ	0xFF6
  7489                           tablat	equ	0xFF5
  7490                           prodh	equ	0xFF4
  7491                           prodl	equ	0xFF3
  7492                           intcon	equ	0xFF2
  7493                           postinc0	equ	0xFEE
  7494                           fsr0h	equ	0xFEA
  7495                           fsr0l	equ	0xFE9
  7496                           wreg	equ	0xFE8
  7497                           postdec1	equ	0xFE5
  7498                           fsr1h	equ	0xFE2
  7499                           fsr1l	equ	0xFE1
  7500                           indf2	equ	0xFDF
  7501                           postinc2	equ	0xFDE
  7502                           postdec2	equ	0xFDD
  7503                           fsr2h	equ	0xFDA
  7504                           fsr2l	equ	0xFD9
  7505                           status	equ	0xFD8
  7506                           
  7507 ;; *************** function i2_do_I2C_SEND_RESTART_WRITE *****************
  7508 ;; Defined at:
  7509 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;		None
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;		None
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1    wreg      enum E11956
  7516 ;; Registers used:
  7517 ;;		wreg, cstack
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7527 ;;Total ram usage:        0 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; Hardware stack levels required when called:    1
  7530 ;; This function calls:
  7531 ;;		i2_i2c1_driver_restart
  7532 ;; This function is called by:
  7533 ;;		i2_do_I2C_TX
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text75
  7538  000D88                     __ptext75:
  7539                           	opt stack 0
  7540  000D88                     i2_do_I2C_SEND_RESTART_WRITE:
  7541                           	opt stack 17
  7542                           
  7543                           ;i2c_master.c: 262: i2c1_driver_restart();
  7544                           
  7545                           ;incstack = 0
  7546  000D88  EC09  F007         	call	i2_i2c1_driver_restart	;wreg free
  7547                           
  7548                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  7549  000D8C  0E02               	movlw	2
  7550  000D8E  0012               	return	
  7551  000D90                     __end_ofi2_do_I2C_SEND_RESTART_WRITE:
  7552                           	opt stack 0
  7553                           tosu	equ	0xFFF
  7554                           tosh	equ	0xFFE
  7555                           tosl	equ	0xFFD
  7556                           pclatu	equ	0xFFB
  7557                           pclath	equ	0xFFA
  7558                           tblptru	equ	0xFF8
  7559                           tblptrh	equ	0xFF7
  7560                           tblptrl	equ	0xFF6
  7561                           tablat	equ	0xFF5
  7562                           prodh	equ	0xFF4
  7563                           prodl	equ	0xFF3
  7564                           intcon	equ	0xFF2
  7565                           postinc0	equ	0xFEE
  7566                           fsr0h	equ	0xFEA
  7567                           fsr0l	equ	0xFE9
  7568                           wreg	equ	0xFE8
  7569                           postdec1	equ	0xFE5
  7570                           fsr1h	equ	0xFE2
  7571                           fsr1l	equ	0xFE1
  7572                           indf2	equ	0xFDF
  7573                           postinc2	equ	0xFDE
  7574                           postdec2	equ	0xFDD
  7575                           fsr2h	equ	0xFDA
  7576                           fsr2l	equ	0xFD9
  7577                           status	equ	0xFD8
  7578                           
  7579 ;; *************** function i2_do_I2C_SEND_RESTART_READ *****************
  7580 ;; Defined at:
  7581 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;		None
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;		None
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      enum E11956
  7588 ;; Registers used:
  7589 ;;		wreg, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7599 ;;Total ram usage:        0 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    1
  7602 ;; This function calls:
  7603 ;;		i2_i2c1_driver_restart
  7604 ;; This function is called by:
  7605 ;;		i2_do_I2C_TX
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text76
  7610  000D90                     __ptext76:
  7611                           	opt stack 0
  7612  000D90                     i2_do_I2C_SEND_RESTART_READ:
  7613                           	opt stack 17
  7614                           
  7615                           ;i2c_master.c: 256: i2c1_driver_restart();
  7616                           
  7617                           ;incstack = 0
  7618  000D90  EC09  F007         	call	i2_i2c1_driver_restart	;wreg free
  7619                           
  7620                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  7621  000D94  0E01               	movlw	1
  7622  000D96  0012               	return	
  7623  000D98                     __end_ofi2_do_I2C_SEND_RESTART_READ:
  7624                           	opt stack 0
  7625                           tosu	equ	0xFFF
  7626                           tosh	equ	0xFFE
  7627                           tosl	equ	0xFFD
  7628                           pclatu	equ	0xFFB
  7629                           pclath	equ	0xFFA
  7630                           tblptru	equ	0xFF8
  7631                           tblptrh	equ	0xFF7
  7632                           tblptrl	equ	0xFF6
  7633                           tablat	equ	0xFF5
  7634                           prodh	equ	0xFF4
  7635                           prodl	equ	0xFF3
  7636                           intcon	equ	0xFF2
  7637                           postinc0	equ	0xFEE
  7638                           fsr0h	equ	0xFEA
  7639                           fsr0l	equ	0xFE9
  7640                           wreg	equ	0xFE8
  7641                           postdec1	equ	0xFE5
  7642                           fsr1h	equ	0xFE2
  7643                           fsr1l	equ	0xFE1
  7644                           indf2	equ	0xFDF
  7645                           postinc2	equ	0xFDE
  7646                           postdec2	equ	0xFDD
  7647                           fsr2h	equ	0xFDA
  7648                           fsr2l	equ	0xFD9
  7649                           status	equ	0xFD8
  7650                           
  7651 ;; *************** function i2_do_I2C_IDLE *****************
  7652 ;; Defined at:
  7653 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;		None
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      enum E11956
  7660 ;; Registers used:
  7661 ;;		wreg, status,2
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7671 ;;Total ram usage:        0 bytes
  7672 ;; Hardware stack levels used:    1
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text77
  7680  000D3E                     __ptext77:
  7681                           	opt stack 0
  7682  000D3E                     i2_do_I2C_IDLE:
  7683                           	opt stack 19
  7684                           
  7685                           ;i2c_master.c: 249: i2c_status.busy = 0;
  7686                           
  7687                           ;incstack = 0
  7688  000D3E  9001               	bcf	_i2c_status,0,c
  7689                           
  7690                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  7691  000D40  0E00               	movlw	0
  7692  000D42  6E0C               	movwf	_i2c_status+11,c
  7693                           
  7694                           ;i2c_master.c: 251: return I2C_RESET;
  7695  000D44  0E0E               	movlw	14
  7696  000D46  0012               	return	
  7697  000D48                     __end_ofi2_do_I2C_IDLE:
  7698                           	opt stack 0
  7699                           tosu	equ	0xFFF
  7700                           tosh	equ	0xFFE
  7701                           tosl	equ	0xFFD
  7702                           pclatu	equ	0xFFB
  7703                           pclath	equ	0xFFA
  7704                           tblptru	equ	0xFF8
  7705                           tblptrh	equ	0xFF7
  7706                           tblptrl	equ	0xFF6
  7707                           tablat	equ	0xFF5
  7708                           prodh	equ	0xFF4
  7709                           prodl	equ	0xFF3
  7710                           intcon	equ	0xFF2
  7711                           postinc0	equ	0xFEE
  7712                           fsr0h	equ	0xFEA
  7713                           fsr0l	equ	0xFE9
  7714                           wreg	equ	0xFE8
  7715                           postdec1	equ	0xFE5
  7716                           fsr1h	equ	0xFE2
  7717                           fsr1l	equ	0xFE1
  7718                           indf2	equ	0xFDF
  7719                           postinc2	equ	0xFDE
  7720                           postdec2	equ	0xFDD
  7721                           fsr2h	equ	0xFDA
  7722                           fsr2l	equ	0xFD9
  7723                           status	equ	0xFD8
  7724                           
  7725 ;; *************** function i2_do_I2C_RESET *****************
  7726 ;; Defined at:
  7727 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;		None
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      enum E11956
  7734 ;; Registers used:
  7735 ;;		wreg, status,2, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7745 ;;Total ram usage:        0 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    1
  7748 ;; This function calls:
  7749 ;;		i2_i2c1_driver_resetBus
  7750 ;; This function is called by:
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text78
  7755  000D08                     __ptext78:
  7756                           	opt stack 0
  7757  000D08                     i2_do_I2C_RESET:
  7758                           	opt stack 18
  7759                           
  7760                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  7761                           
  7762                           ;incstack = 0
  7763  000D08  EC0C  F007         	call	i2_i2c1_driver_resetBus	;wreg free
  7764                           
  7765                           ;i2c_master.c: 242: i2c_status.busy = 0;
  7766  000D0C  9001               	bcf	_i2c_status,0,c
  7767                           
  7768                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  7769  000D0E  0E00               	movlw	0
  7770  000D10  6E0C               	movwf	_i2c_status+11,c
  7771                           
  7772                           ;i2c_master.c: 244: return I2C_RESET;
  7773  000D12  0E0E               	movlw	14
  7774  000D14  0012               	return	
  7775  000D16                     __end_ofi2_do_I2C_RESET:
  7776                           	opt stack 0
  7777                           tosu	equ	0xFFF
  7778                           tosh	equ	0xFFE
  7779                           tosl	equ	0xFFD
  7780                           pclatu	equ	0xFFB
  7781                           pclath	equ	0xFFA
  7782                           tblptru	equ	0xFF8
  7783                           tblptrh	equ	0xFF7
  7784                           tblptrl	equ	0xFF6
  7785                           tablat	equ	0xFF5
  7786                           prodh	equ	0xFF4
  7787                           prodl	equ	0xFF3
  7788                           intcon	equ	0xFF2
  7789                           postinc0	equ	0xFEE
  7790                           fsr0h	equ	0xFEA
  7791                           fsr0l	equ	0xFE9
  7792                           wreg	equ	0xFE8
  7793                           postdec1	equ	0xFE5
  7794                           fsr1h	equ	0xFE2
  7795                           fsr1l	equ	0xFE1
  7796                           indf2	equ	0xFDF
  7797                           postinc2	equ	0xFDE
  7798                           postdec2	equ	0xFDD
  7799                           fsr2h	equ	0xFDA
  7800                           fsr2l	equ	0xFD9
  7801                           status	equ	0xFD8
  7802                           
  7803 ;; *************** function i2_do_I2C_TX_EMPTY *****************
  7804 ;; Defined at:
  7805 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;		None
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  1    wreg      enum E11956
  7812 ;; Registers used:
  7813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7823 ;;Total ram usage:        0 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:    3
  7826 ;; This function calls:
  7827 ;;		Absolute function
  7828 ;;		i2_do_I2C_SEND_RESTART
  7829 ;;		i2_do_I2C_SEND_STOP
  7830 ;;		i2_i2c_restartWrite
  7831 ;;		i2_mssp1_setIRQ
  7832 ;;		i2_rd1RegCompleteHandler
  7833 ;;		i2_rd2RegCompleteHandler
  7834 ;;		i2_rdBlkRegCompleteHandler
  7835 ;;		i2_returnReset
  7836 ;;		i2_returnStop
  7837 ;;		i2_wr1RegCompleteHandler
  7838 ;;		i2_wr2RegCompleteHandler
  7839 ;; This function is called by:
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text79
  7844  0005E8                     __ptext79:
  7845                           	opt stack 0
  7846  0005E8                     i2_do_I2C_TX_EMPTY:
  7847                           	opt stack 16
  7848                           
  7849                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  7850                           
  7851                           ;incstack = 0
  7852  0005E8  8401               	bsf	_i2c_status,2,c
  7853                           
  7854                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  7855  0005EA  D00A               	goto	i2l457
  7856  0005EC                     
  7857                           ;i2c_master.c: 388: case i2c_restart_write:
  7858                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  7859  0005EC  ECC0  F006         	call	i2_do_I2C_SEND_RESTART	;wreg free
  7860  0005F0  0012               	return	
  7861  0005F2                     
  7862                           ;i2c_master.c: 391: mssp1_setIRQ();
  7863  0005F2  ECE2  F006         	call	i2_mssp1_setIRQ	;wreg free
  7864                           
  7865                           ;i2c_master.c: 392: return I2C_TX;
  7866  0005F6  0E03               	movlw	3
  7867  0005F8  0012               	return	
  7868  0005FA                     
  7869                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  7870                           
  7871                           ;i2c_master.c: 394: case i2c_stop:
  7872  0005FA  ECBC  F006         	call	i2_do_I2C_SEND_STOP	;wreg free
  7873                           
  7874                           ;i2c_master.c: 396: }
  7875  0005FE  0012               	return	
  7876  000600                     i2l457:
  7877  000600  C01F  F03C         	movff	_i2c_status+30,i2returnStop@p
  7878  000604  C020  F03D         	movff	_i2c_status+31,i2returnStop@p+1
  7879  000608  EE20  F00D         	lfsr	2,_i2c_status+12
  7880  00060C  D801               	call	i2u148_48
  7881  00060E  D00A               	goto	i2u148_49
  7882  000610                     i2u148_48:
  7883  000610  0005               	push	
  7884  000612  6EFA               	movwf	pclath,c
  7885  000614  50DE               	movf	postinc2,w,c
  7886  000616  6EFD               	movwf	tosl,c
  7887  000618  50DE               	movf	postinc2,w,c
  7888  00061A  6EFE               	movwf	tosh,c
  7889  00061C  50DE               	movf	postinc2,w,c
  7890  00061E  6EFF               	movwf	tosu,c
  7891  000620  50FA               	movf	pclath,w,c
  7892  000622  0012               	return		;indir
  7893  000624                     i2u148_49:
  7894                           
  7895                           ; Switch size 1, requested type "space"
  7896                           ; Number of cases is 4, Range of values is 1 to 4
  7897                           ; switch strategies available:
  7898                           ; Name         Instructions Cycles
  7899                           ; simple_byte           13     7 (average)
  7900                           ;	Chosen strategy is simple_byte
  7901  000624  0A01               	xorlw	1	; case 1
  7902  000626  B4D8               	btfsc	status,2,c
  7903  000628  D7E8               	goto	i2l462
  7904  00062A  0A03               	xorlw	3	; case 2
  7905  00062C  B4D8               	btfsc	status,2,c
  7906  00062E  D7DE               	goto	i2l458
  7907  000630  0A01               	xorlw	1	; case 3
  7908  000632  B4D8               	btfsc	status,2,c
  7909  000634  D7DB               	goto	i2l458
  7910  000636  0A07               	xorlw	7	; case 4
  7911  000638  B4D8               	btfsc	status,2,c
  7912  00063A  D7DB               	goto	i2l461
  7913  00063C  D7DE               	goto	i2l462
  7914  00063E                     __end_ofi2_do_I2C_TX_EMPTY:
  7915                           	opt stack 0
  7916                           tosu	equ	0xFFF
  7917                           tosh	equ	0xFFE
  7918                           tosl	equ	0xFFD
  7919                           pclatu	equ	0xFFB
  7920                           pclath	equ	0xFFA
  7921                           tblptru	equ	0xFF8
  7922                           tblptrh	equ	0xFF7
  7923                           tblptrl	equ	0xFF6
  7924                           tablat	equ	0xFF5
  7925                           prodh	equ	0xFF4
  7926                           prodl	equ	0xFF3
  7927                           intcon	equ	0xFF2
  7928                           postinc0	equ	0xFEE
  7929                           fsr0h	equ	0xFEA
  7930                           fsr0l	equ	0xFE9
  7931                           wreg	equ	0xFE8
  7932                           postdec1	equ	0xFE5
  7933                           fsr1h	equ	0xFE2
  7934                           fsr1l	equ	0xFE1
  7935                           indf2	equ	0xFDF
  7936                           postinc2	equ	0xFDE
  7937                           postdec2	equ	0xFDD
  7938                           fsr2h	equ	0xFDA
  7939                           fsr2l	equ	0xFD9
  7940                           status	equ	0xFD8
  7941                           
  7942 ;; *************** function i2_mssp1_setIRQ *****************
  7943 ;; Defined at:
  7944 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;		None
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      void 
  7951 ;; Registers used:
  7952 ;;		None
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7962 ;;Total ram usage:        0 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; This function calls:
  7965 ;;		Nothing
  7966 ;; This function is called by:
  7967 ;;		i2_do_I2C_TX_EMPTY
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text80
  7972  000DC4                     __ptext80:
  7973                           	opt stack 0
  7974  000DC4                     i2_mssp1_setIRQ:
  7975                           	opt stack 18
  7976                           
  7977                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  7978                           
  7979                           ;incstack = 0
  7980  000DC4  010E               	movlb	14	; () banked
  7981  000DC6  81CD               	bsf	205,0,b	;volatile
  7982                           
  7983                           ; BSR set to: 14
  7984  000DC8  0012               	return		;funcret
  7985  000DCA                     __end_ofi2_mssp1_setIRQ:
  7986                           	opt stack 0
  7987                           tosu	equ	0xFFF
  7988                           tosh	equ	0xFFE
  7989                           tosl	equ	0xFFD
  7990                           pclatu	equ	0xFFB
  7991                           pclath	equ	0xFFA
  7992                           tblptru	equ	0xFF8
  7993                           tblptrh	equ	0xFF7
  7994                           tblptrl	equ	0xFF6
  7995                           tablat	equ	0xFF5
  7996                           prodh	equ	0xFF4
  7997                           prodl	equ	0xFF3
  7998                           intcon	equ	0xFF2
  7999                           postinc0	equ	0xFEE
  8000                           fsr0h	equ	0xFEA
  8001                           fsr0l	equ	0xFE9
  8002                           wreg	equ	0xFE8
  8003                           postdec1	equ	0xFE5
  8004                           fsr1h	equ	0xFE2
  8005                           fsr1l	equ	0xFE1
  8006                           indf2	equ	0xFDF
  8007                           postinc2	equ	0xFDE
  8008                           postdec2	equ	0xFDD
  8009                           fsr2h	equ	0xFDA
  8010                           fsr2l	equ	0xFD9
  8011                           status	equ	0xFD8
  8012                           
  8013 ;; *************** function i2_i2c1_driver_isNACK *****************
  8014 ;; Defined at:
  8015 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;		None
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;		None
  8020 ;; Return value:  Size  Location     Type
  8021 ;;		None               void
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8033 ;;Total ram usage:        1 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		i2_do_I2C_TX
  8039 ;;		i2_i2c_ISR
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           	psect	text81
  8044  000BD8                     __ptext81:
  8045                           	opt stack 0
  8046  000BD8                     i2_i2c1_driver_isNACK:
  8047                           	opt stack 19
  8048                           
  8049                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  8050                           
  8051                           ; BSR set to: 14
  8052                           ;incstack = 0
  8053  000BD8  5097               	movf	3991,w,c	;volatile
  8054  000BDA  0BBF               	andlw	-65
  8055  000BDC  0940               	iorlw	64
  8056  000BDE  6E97               	movwf	3991,c	;volatile
  8057  000BE0  3897               	swapf	3991,w,c	;volatile
  8058  000BE2  32E8               	rrcf	wreg,f,c
  8059  000BE4  32E8               	rrcf	wreg,f,c
  8060  000BE6  0B01               	andlw	1
  8061  000BE8  6E31               	movwf	??i2_i2c1_driver_isNACK& (0+255),c
  8062  000BEA  3031               	rrcf	??i2_i2c1_driver_isNACK,w,c
  8063  000BEC  0012               	return	
  8064  000BEE                     __end_ofi2_i2c1_driver_isNACK:
  8065                           	opt stack 0
  8066                           tosu	equ	0xFFF
  8067                           tosh	equ	0xFFE
  8068                           tosl	equ	0xFFD
  8069                           pclatu	equ	0xFFB
  8070                           pclath	equ	0xFFA
  8071                           tblptru	equ	0xFF8
  8072                           tblptrh	equ	0xFF7
  8073                           tblptrl	equ	0xFF6
  8074                           tablat	equ	0xFF5
  8075                           prodh	equ	0xFF4
  8076                           prodl	equ	0xFF3
  8077                           intcon	equ	0xFF2
  8078                           postinc0	equ	0xFEE
  8079                           fsr0h	equ	0xFEA
  8080                           fsr0l	equ	0xFE9
  8081                           wreg	equ	0xFE8
  8082                           postdec1	equ	0xFE5
  8083                           fsr1h	equ	0xFE2
  8084                           fsr1l	equ	0xFE1
  8085                           indf2	equ	0xFDF
  8086                           postinc2	equ	0xFDE
  8087                           postdec2	equ	0xFDD
  8088                           fsr2h	equ	0xFDA
  8089                           fsr2l	equ	0xFD9
  8090                           status	equ	0xFD8
  8091                           
  8092 ;; *************** function i2_i2c1_driver_TXData *****************
  8093 ;; Defined at:
  8094 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  d               1    wreg     unsigned char 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;  d               1    0[COMRAM] unsigned char 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;Total ram usage:        1 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		i2_do_I2C_SEND_ADR_READ
  8118 ;;		i2_do_I2C_SEND_ADR_WRITE
  8119 ;;		i2_do_I2C_TX
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text82
  8124  000D98                     __ptext82:
  8125                           	opt stack 0
  8126  000D98                     i2_i2c1_driver_TXData:
  8127                           	opt stack 18
  8128                           
  8129                           ;incstack = 0
  8130                           ;i2i2c1_driver_TXData@d stored from wreg
  8131  000D98  6E31               	movwf	i2i2c1_driver_TXData@d,c
  8132                           
  8133                           ;i2c1_driver.c: 188: SSP1BUF = d;
  8134  000D9A  C031  FF92         	movff	i2i2c1_driver_TXData@d,3986	;volatile
  8135  000D9E  0012               	return		;funcret
  8136  000DA0                     __end_ofi2_i2c1_driver_TXData:
  8137                           	opt stack 0
  8138                           tosu	equ	0xFFF
  8139                           tosh	equ	0xFFE
  8140                           tosl	equ	0xFFD
  8141                           pclatu	equ	0xFFB
  8142                           pclath	equ	0xFFA
  8143                           tblptru	equ	0xFF8
  8144                           tblptrh	equ	0xFF7
  8145                           tblptrl	equ	0xFF6
  8146                           tablat	equ	0xFF5
  8147                           prodh	equ	0xFF4
  8148                           prodl	equ	0xFF3
  8149                           intcon	equ	0xFF2
  8150                           postinc0	equ	0xFEE
  8151                           fsr0h	equ	0xFEA
  8152                           fsr0l	equ	0xFE9
  8153                           wreg	equ	0xFE8
  8154                           postdec1	equ	0xFE5
  8155                           fsr1h	equ	0xFE2
  8156                           fsr1l	equ	0xFE1
  8157                           indf2	equ	0xFDF
  8158                           postinc2	equ	0xFDE
  8159                           postdec2	equ	0xFDD
  8160                           fsr2h	equ	0xFDA
  8161                           fsr2l	equ	0xFD9
  8162                           status	equ	0xFD8
  8163                           
  8164 ;; *************** function i2_i2c1_driver_getRXData *****************
  8165 ;; Defined at:
  8166 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;		None
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  1    wreg      unsigned char 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8184 ;;Total ram usage:        0 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		i2_do_I2C_RX
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           	psect	text83
  8194  000DFA                     __ptext83:
  8195                           	opt stack 0
  8196  000DFA                     i2_i2c1_driver_getRXData:
  8197                           	opt stack 18
  8198                           
  8199                           ;i2c1_driver.c: 173: return SSP1BUF;
  8200                           
  8201                           ;incstack = 0
  8202  000DFA  5092               	movf	3986,w,c	;volatile
  8203  000DFC  0012               	return	
  8204  000DFE                     __end_ofi2_i2c1_driver_getRXData:
  8205                           	opt stack 0
  8206                           tosu	equ	0xFFF
  8207                           tosh	equ	0xFFE
  8208                           tosl	equ	0xFFD
  8209                           pclatu	equ	0xFFB
  8210                           pclath	equ	0xFFA
  8211                           tblptru	equ	0xFF8
  8212                           tblptrh	equ	0xFF7
  8213                           tblptrl	equ	0xFF6
  8214                           tablat	equ	0xFF5
  8215                           prodh	equ	0xFF4
  8216                           prodl	equ	0xFF3
  8217                           intcon	equ	0xFF2
  8218                           postinc0	equ	0xFEE
  8219                           fsr0h	equ	0xFEA
  8220                           fsr0l	equ	0xFE9
  8221                           wreg	equ	0xFE8
  8222                           postdec1	equ	0xFE5
  8223                           fsr1h	equ	0xFE2
  8224                           fsr1l	equ	0xFE1
  8225                           indf2	equ	0xFDF
  8226                           postinc2	equ	0xFDE
  8227                           postdec2	equ	0xFDD
  8228                           fsr2h	equ	0xFDA
  8229                           fsr2l	equ	0xFD9
  8230                           status	equ	0xFD8
  8231                           
  8232 ;; *************** function i2_i2c1_driver_sendNACK *****************
  8233 ;; Defined at:
  8234 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;		None
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      void 
  8241 ;; Registers used:
  8242 ;;		None
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8252 ;;Total ram usage:        0 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		i2_do_I2C_DO_NACK_STOP
  8258 ;;		i2_do_I2C_DO_NACK_RESTART
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           	psect	text84
  8263  000DCA                     __ptext84:
  8264                           	opt stack 0
  8265  000DCA                     i2_i2c1_driver_sendNACK:
  8266                           	opt stack 17
  8267                           
  8268                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  8269                           
  8270                           ;incstack = 0
  8271  000DCA  8A97               	bsf	3991,5,c	;volatile
  8272                           
  8273                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  8274  000DCC  8897               	bsf	3991,4,c	;volatile
  8275  000DCE  0012               	return		;funcret
  8276  000DD0                     __end_ofi2_i2c1_driver_sendNACK:
  8277                           	opt stack 0
  8278                           tosu	equ	0xFFF
  8279                           tosh	equ	0xFFE
  8280                           tosl	equ	0xFFD
  8281                           pclatu	equ	0xFFB
  8282                           pclath	equ	0xFFA
  8283                           tblptru	equ	0xFF8
  8284                           tblptrh	equ	0xFF7
  8285                           tblptrl	equ	0xFF6
  8286                           tablat	equ	0xFF5
  8287                           prodh	equ	0xFF4
  8288                           prodl	equ	0xFF3
  8289                           intcon	equ	0xFF2
  8290                           postinc0	equ	0xFEE
  8291                           fsr0h	equ	0xFEA
  8292                           fsr0l	equ	0xFE9
  8293                           wreg	equ	0xFE8
  8294                           postdec1	equ	0xFE5
  8295                           fsr1h	equ	0xFE2
  8296                           fsr1l	equ	0xFE1
  8297                           indf2	equ	0xFDF
  8298                           postinc2	equ	0xFDE
  8299                           postdec2	equ	0xFDD
  8300                           fsr2h	equ	0xFDA
  8301                           fsr2l	equ	0xFD9
  8302                           status	equ	0xFD8
  8303                           
  8304 ;; *************** function i2_i2c1_driver_resetBus *****************
  8305 ;; Defined at:
  8306 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  1    wreg      void 
  8313 ;; Registers used:
  8314 ;;		None
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8324 ;;Total ram usage:        0 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; This function calls:
  8327 ;;		Nothing
  8328 ;; This function is called by:
  8329 ;;		i2_do_I2C_RESET
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           	psect	text85
  8334  000E18                     __ptext85:
  8335                           	opt stack 0
  8336  000E18                     i2_i2c1_driver_resetBus:
  8337                           	opt stack 18
  8338                           
  8339                           ;incstack = 0
  8340  000E18  0012               	return		;funcret
  8341  000E1A                     __end_ofi2_i2c1_driver_resetBus:
  8342                           	opt stack 0
  8343                           tosu	equ	0xFFF
  8344                           tosh	equ	0xFFE
  8345                           tosl	equ	0xFFD
  8346                           pclatu	equ	0xFFB
  8347                           pclath	equ	0xFFA
  8348                           tblptru	equ	0xFF8
  8349                           tblptrh	equ	0xFF7
  8350                           tblptrl	equ	0xFF6
  8351                           tablat	equ	0xFF5
  8352                           prodh	equ	0xFF4
  8353                           prodl	equ	0xFF3
  8354                           intcon	equ	0xFF2
  8355                           postinc0	equ	0xFEE
  8356                           fsr0h	equ	0xFEA
  8357                           fsr0l	equ	0xFE9
  8358                           wreg	equ	0xFE8
  8359                           postdec1	equ	0xFE5
  8360                           fsr1h	equ	0xFE2
  8361                           fsr1l	equ	0xFE1
  8362                           indf2	equ	0xFDF
  8363                           postinc2	equ	0xFDE
  8364                           postdec2	equ	0xFDD
  8365                           fsr2h	equ	0xFDA
  8366                           fsr2l	equ	0xFD9
  8367                           status	equ	0xFD8
  8368                           
  8369 ;; *************** function i2_i2c1_driver_startRX *****************
  8370 ;; Defined at:
  8371 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;		None
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		None
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8389 ;;Total ram usage:        0 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		i2_do_I2C_RCEN
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text86
  8399  000DFE                     __ptext86:
  8400                           	opt stack 0
  8401  000DFE                     i2_i2c1_driver_startRX:
  8402                           	opt stack 18
  8403                           
  8404                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  8405                           
  8406                           ;incstack = 0
  8407  000DFE  8697               	bsf	3991,3,c	;volatile
  8408  000E00  0012               	return		;funcret
  8409  000E02                     __end_ofi2_i2c1_driver_startRX:
  8410                           	opt stack 0
  8411                           tosu	equ	0xFFF
  8412                           tosh	equ	0xFFE
  8413                           tosl	equ	0xFFD
  8414                           pclatu	equ	0xFFB
  8415                           pclath	equ	0xFFA
  8416                           tblptru	equ	0xFF8
  8417                           tblptrh	equ	0xFF7
  8418                           tblptrl	equ	0xFF6
  8419                           tablat	equ	0xFF5
  8420                           prodh	equ	0xFF4
  8421                           prodl	equ	0xFF3
  8422                           intcon	equ	0xFF2
  8423                           postinc0	equ	0xFEE
  8424                           fsr0h	equ	0xFEA
  8425                           fsr0l	equ	0xFE9
  8426                           wreg	equ	0xFE8
  8427                           postdec1	equ	0xFE5
  8428                           fsr1h	equ	0xFE2
  8429                           fsr1l	equ	0xFE1
  8430                           indf2	equ	0xFDF
  8431                           postinc2	equ	0xFDE
  8432                           postdec2	equ	0xFDD
  8433                           fsr2h	equ	0xFDA
  8434                           fsr2l	equ	0xFD9
  8435                           status	equ	0xFD8
  8436                           
  8437 ;; *************** function i2_rdBlkRegCompleteHandler *****************
  8438 ;; Defined at:
  8439 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  p               2   11[COMRAM] PTR void 
  8442 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8443 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;		None
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  1    wreg      enum E97
  8448 ;; Registers used:
  8449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8459 ;;Total ram usage:        2 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:    2
  8462 ;; This function calls:
  8463 ;;		i2_i2c_setBuffer
  8464 ;;		i2_i2c_setDataCompleteCallback
  8465 ;; This function is called by:
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text87
  8470  0007B4                     __ptext87:
  8471                           	opt stack 0
  8472  0007B4                     i2_rdBlkRegCompleteHandler:
  8473                           	opt stack 16
  8474                           
  8475                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  8476                           
  8477                           ;incstack = 0
  8478  0007B4  EE20 F002          	lfsr	2,2
  8479  0007B8  503C               	movf	i2rdBlkRegCompleteHandler@p,w,c
  8480  0007BA  26D9               	addwf	fsr2l,f,c
  8481  0007BC  503D               	movf	i2rdBlkRegCompleteHandler@p+1,w,c
  8482  0007BE  22DA               	addwfc	fsr2h,f,c
  8483  0007C0  CFDE F031          	movff	postinc2,i2i2c_setBuffer@buffer
  8484  0007C4  CFDD F032          	movff	postdec2,i2i2c_setBuffer@buffer+1
  8485  0007C8  C03C  FFD9         	movff	i2rdBlkRegCompleteHandler@p,fsr2l
  8486  0007CC  C03D  FFDA         	movff	i2rdBlkRegCompleteHandler@p+1,fsr2h
  8487  0007D0  CFDE F033          	movff	postinc2,i2i2c_setBuffer@bufferSize
  8488  0007D4  CFDD F034          	movff	postdec2,i2i2c_setBuffer@bufferSize+1
  8489  0007D8  ECBF  F005         	call	i2_i2c_setBuffer	;wreg free
  8490                           
  8491                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  8492  0007DC  0E00               	movlw	0
  8493  0007DE  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8494  0007E0  0E00               	movlw	0
  8495  0007E2  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8496  0007E4  0E00               	movlw	0
  8497  0007E6  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8498  0007E8  0E00               	movlw	0
  8499  0007EA  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8500  0007EC  0E00               	movlw	0
  8501  0007EE  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8502  0007F0  EC8D  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8503                           
  8504                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  8505  0007F4  0E02               	movlw	2
  8506  0007F6  0012               	return	
  8507  0007F8                     __end_ofi2_rdBlkRegCompleteHandler:
  8508                           	opt stack 0
  8509                           tosu	equ	0xFFF
  8510                           tosh	equ	0xFFE
  8511                           tosl	equ	0xFFD
  8512                           pclatu	equ	0xFFB
  8513                           pclath	equ	0xFFA
  8514                           tblptru	equ	0xFF8
  8515                           tblptrh	equ	0xFF7
  8516                           tblptrl	equ	0xFF6
  8517                           tablat	equ	0xFF5
  8518                           prodh	equ	0xFF4
  8519                           prodl	equ	0xFF3
  8520                           intcon	equ	0xFF2
  8521                           postinc0	equ	0xFEE
  8522                           fsr0h	equ	0xFEA
  8523                           fsr0l	equ	0xFE9
  8524                           wreg	equ	0xFE8
  8525                           postdec1	equ	0xFE5
  8526                           fsr1h	equ	0xFE2
  8527                           fsr1l	equ	0xFE1
  8528                           indf2	equ	0xFDF
  8529                           postinc2	equ	0xFDE
  8530                           postdec2	equ	0xFDD
  8531                           fsr2h	equ	0xFDA
  8532                           fsr2l	equ	0xFD9
  8533                           status	equ	0xFD8
  8534                           
  8535 ;; *************** function i2_rd2RegCompleteHandler *****************
  8536 ;; Defined at:
  8537 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  p               2   11[COMRAM] PTR void 
  8540 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8541 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;		None
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1    wreg      enum E97
  8546 ;; Registers used:
  8547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8557 ;;Total ram usage:        2 bytes
  8558 ;; Hardware stack levels used:    1
  8559 ;; Hardware stack levels required when called:    2
  8560 ;; This function calls:
  8561 ;;		i2_i2c_setBuffer
  8562 ;;		i2_i2c_setDataCompleteCallback
  8563 ;; This function is called by:
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           	psect	text88
  8568  0009EA                     __ptext88:
  8569                           	opt stack 0
  8570  0009EA                     i2_rd2RegCompleteHandler:
  8571                           	opt stack 16
  8572                           
  8573                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  8574                           
  8575                           ;incstack = 0
  8576  0009EA  C03C  F031         	movff	i2rd2RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8577  0009EE  C03D  F032         	movff	i2rd2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8578  0009F2  0E00               	movlw	0
  8579  0009F4  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  8580  0009F6  0E02               	movlw	2
  8581  0009F8  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  8582  0009FA  ECBF  F005         	call	i2_i2c_setBuffer	;wreg free
  8583                           
  8584                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  8585  0009FE  0E00               	movlw	0
  8586  000A00  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8587  000A02  0E00               	movlw	0
  8588  000A04  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8589  000A06  0E00               	movlw	0
  8590  000A08  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8591  000A0A  0E00               	movlw	0
  8592  000A0C  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8593  000A0E  0E00               	movlw	0
  8594  000A10  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8595  000A12  EC8D  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8596                           
  8597                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  8598  000A16  0E02               	movlw	2
  8599  000A18  0012               	return	
  8600  000A1A                     __end_ofi2_rd2RegCompleteHandler:
  8601                           	opt stack 0
  8602                           tosu	equ	0xFFF
  8603                           tosh	equ	0xFFE
  8604                           tosl	equ	0xFFD
  8605                           pclatu	equ	0xFFB
  8606                           pclath	equ	0xFFA
  8607                           tblptru	equ	0xFF8
  8608                           tblptrh	equ	0xFF7
  8609                           tblptrl	equ	0xFF6
  8610                           tablat	equ	0xFF5
  8611                           prodh	equ	0xFF4
  8612                           prodl	equ	0xFF3
  8613                           intcon	equ	0xFF2
  8614                           postinc0	equ	0xFEE
  8615                           fsr0h	equ	0xFEA
  8616                           fsr0l	equ	0xFE9
  8617                           wreg	equ	0xFE8
  8618                           postdec1	equ	0xFE5
  8619                           fsr1h	equ	0xFE2
  8620                           fsr1l	equ	0xFE1
  8621                           indf2	equ	0xFDF
  8622                           postinc2	equ	0xFDE
  8623                           postdec2	equ	0xFDD
  8624                           fsr2h	equ	0xFDA
  8625                           fsr2l	equ	0xFD9
  8626                           status	equ	0xFD8
  8627                           
  8628 ;; *************** function i2_rd1RegCompleteHandler *****************
  8629 ;; Defined at:
  8630 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  p               2   11[COMRAM] PTR void 
  8633 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8634 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;		None
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      enum E97
  8639 ;; Registers used:
  8640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8650 ;;Total ram usage:        2 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; Hardware stack levels required when called:    2
  8653 ;; This function calls:
  8654 ;;		i2_i2c_setBuffer
  8655 ;;		i2_i2c_setDataCompleteCallback
  8656 ;; This function is called by:
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text89
  8661  000A1A                     __ptext89:
  8662                           	opt stack 0
  8663  000A1A                     i2_rd1RegCompleteHandler:
  8664                           	opt stack 16
  8665                           
  8666                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  8667                           
  8668                           ;incstack = 0
  8669  000A1A  C03C  F031         	movff	i2rd1RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8670  000A1E  C03D  F032         	movff	i2rd1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8671  000A22  0E00               	movlw	0
  8672  000A24  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  8673  000A26  0E01               	movlw	1
  8674  000A28  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  8675  000A2A  ECBF  F005         	call	i2_i2c_setBuffer	;wreg free
  8676                           
  8677                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  8678  000A2E  0E00               	movlw	0
  8679  000A30  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8680  000A32  0E00               	movlw	0
  8681  000A34  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8682  000A36  0E00               	movlw	0
  8683  000A38  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8684  000A3A  0E00               	movlw	0
  8685  000A3C  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8686  000A3E  0E00               	movlw	0
  8687  000A40  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8688  000A42  EC8D  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8689                           
  8690                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  8691  000A46  0E02               	movlw	2
  8692  000A48  0012               	return	
  8693  000A4A                     __end_ofi2_rd1RegCompleteHandler:
  8694                           	opt stack 0
  8695                           tosu	equ	0xFFF
  8696                           tosh	equ	0xFFE
  8697                           tosl	equ	0xFFD
  8698                           pclatu	equ	0xFFB
  8699                           pclath	equ	0xFFA
  8700                           tblptru	equ	0xFF8
  8701                           tblptrh	equ	0xFF7
  8702                           tblptrl	equ	0xFF6
  8703                           tablat	equ	0xFF5
  8704                           prodh	equ	0xFF4
  8705                           prodl	equ	0xFF3
  8706                           intcon	equ	0xFF2
  8707                           postinc0	equ	0xFEE
  8708                           fsr0h	equ	0xFEA
  8709                           fsr0l	equ	0xFE9
  8710                           wreg	equ	0xFE8
  8711                           postdec1	equ	0xFE5
  8712                           fsr1h	equ	0xFE2
  8713                           fsr1l	equ	0xFE1
  8714                           indf2	equ	0xFDF
  8715                           postinc2	equ	0xFDE
  8716                           postdec2	equ	0xFDD
  8717                           fsr2h	equ	0xFDA
  8718                           fsr2l	equ	0xFD9
  8719                           status	equ	0xFD8
  8720                           
  8721 ;; *************** function i2_wr1RegCompleteHandler *****************
  8722 ;; Defined at:
  8723 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;  p               2   11[COMRAM] PTR void 
  8726 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8727 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;		None
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  1    wreg      enum E97
  8732 ;; Registers used:
  8733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8743 ;;Total ram usage:        2 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; Hardware stack levels required when called:    2
  8746 ;; This function calls:
  8747 ;;		i2_i2c_setBuffer
  8748 ;;		i2_i2c_setDataCompleteCallback
  8749 ;; This function is called by:
  8750 ;; This function uses a non-reentrant model
  8751 ;;
  8752                           
  8753                           	psect	text90
  8754  000A4A                     __ptext90:
  8755                           	opt stack 0
  8756  000A4A                     i2_wr1RegCompleteHandler:
  8757                           	opt stack 16
  8758                           
  8759                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  8760                           
  8761                           ;incstack = 0
  8762  000A4A  C03C  F031         	movff	i2wr1RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8763  000A4E  C03D  F032         	movff	i2wr1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8764  000A52  0E00               	movlw	0
  8765  000A54  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  8766  000A56  0E01               	movlw	1
  8767  000A58  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  8768  000A5A  ECBF  F005         	call	i2_i2c_setBuffer	;wreg free
  8769                           
  8770                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  8771  000A5E  0E00               	movlw	0
  8772  000A60  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8773  000A62  0E00               	movlw	0
  8774  000A64  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8775  000A66  0E00               	movlw	0
  8776  000A68  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8777  000A6A  0E00               	movlw	0
  8778  000A6C  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  8779  000A6E  0E00               	movlw	0
  8780  000A70  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8781  000A72  EC8D  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8782                           
  8783                           ;i2c_simple_master.c: 35: return i2c_continue;
  8784  000A76  0E04               	movlw	4
  8785  000A78  0012               	return	
  8786  000A7A                     __end_ofi2_wr1RegCompleteHandler:
  8787                           	opt stack 0
  8788                           tosu	equ	0xFFF
  8789                           tosh	equ	0xFFE
  8790                           tosl	equ	0xFFD
  8791                           pclatu	equ	0xFFB
  8792                           pclath	equ	0xFFA
  8793                           tblptru	equ	0xFF8
  8794                           tblptrh	equ	0xFF7
  8795                           tblptrl	equ	0xFF6
  8796                           tablat	equ	0xFF5
  8797                           prodh	equ	0xFF4
  8798                           prodl	equ	0xFF3
  8799                           intcon	equ	0xFF2
  8800                           postinc0	equ	0xFEE
  8801                           fsr0h	equ	0xFEA
  8802                           fsr0l	equ	0xFE9
  8803                           wreg	equ	0xFE8
  8804                           postdec1	equ	0xFE5
  8805                           fsr1h	equ	0xFE2
  8806                           fsr1l	equ	0xFE1
  8807                           indf2	equ	0xFDF
  8808                           postinc2	equ	0xFDE
  8809                           postdec2	equ	0xFDD
  8810                           fsr2h	equ	0xFDA
  8811                           fsr2l	equ	0xFD9
  8812                           status	equ	0xFD8
  8813                           
  8814 ;; *************** function i2_i2c_restartWrite *****************
  8815 ;; Defined at:
  8816 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  p               2   11[COMRAM] PTR void 
  8819 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8820 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8821 ;; Auto vars:     Size  Location     Type
  8822 ;;		None
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  1    wreg      enum E96
  8825 ;; Registers used:
  8826 ;;		wreg
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;Total ram usage:        2 bytes
  8837 ;; Hardware stack levels used:    1
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text91
  8845  000E02                     __ptext91:
  8846                           	opt stack 0
  8847  000E02                     i2_i2c_restartWrite:
  8848                           	opt stack 18
  8849                           
  8850                           ;i2c_types.c: 37: return i2c_restart_write;
  8851                           
  8852                           ;incstack = 0
  8853  000E02  0E03               	movlw	3
  8854  000E04  0012               	return	
  8855  000E06                     __end_ofi2_i2c_restartWrite:
  8856                           	opt stack 0
  8857                           tosu	equ	0xFFF
  8858                           tosh	equ	0xFFE
  8859                           tosl	equ	0xFFD
  8860                           pclatu	equ	0xFFB
  8861                           pclath	equ	0xFFA
  8862                           tblptru	equ	0xFF8
  8863                           tblptrh	equ	0xFF7
  8864                           tblptrl	equ	0xFF6
  8865                           tablat	equ	0xFF5
  8866                           prodh	equ	0xFF4
  8867                           prodl	equ	0xFF3
  8868                           intcon	equ	0xFF2
  8869                           postinc0	equ	0xFEE
  8870                           fsr0h	equ	0xFEA
  8871                           fsr0l	equ	0xFE9
  8872                           wreg	equ	0xFE8
  8873                           postdec1	equ	0xFE5
  8874                           fsr1h	equ	0xFE2
  8875                           fsr1l	equ	0xFE1
  8876                           indf2	equ	0xFDF
  8877                           postinc2	equ	0xFDE
  8878                           postdec2	equ	0xFDD
  8879                           fsr2h	equ	0xFDA
  8880                           fsr2l	equ	0xFD9
  8881                           status	equ	0xFD8
  8882                           
  8883 ;; *************** function i2_returnReset *****************
  8884 ;; Defined at:
  8885 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  p               2   11[COMRAM] PTR void 
  8888 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8889 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8890 ;; Auto vars:     Size  Location     Type
  8891 ;;		None
  8892 ;; Return value:  Size  Location     Type
  8893 ;;                  1    wreg      enum E11790
  8894 ;; Registers used:
  8895 ;;		wreg
  8896 ;; Tracked objects:
  8897 ;;		On entry : 0/0
  8898 ;;		On exit  : 0/0
  8899 ;;		Unchanged: 0/0
  8900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8905 ;;Total ram usage:        2 bytes
  8906 ;; Hardware stack levels used:    1
  8907 ;; This function calls:
  8908 ;;		Nothing
  8909 ;; This function is called by:
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text92
  8914  000E06                     __ptext92:
  8915                           	opt stack 0
  8916  000E06                     i2_returnReset:
  8917                           	opt stack 18
  8918                           
  8919                           ;i2c_master.c: 450: return i2c_reset_link;
  8920                           
  8921                           ;incstack = 0
  8922  000E06  0E05               	movlw	5
  8923  000E08  0012               	return	
  8924  000E0A                     __end_ofi2_returnReset:
  8925                           	opt stack 0
  8926                           tosu	equ	0xFFF
  8927                           tosh	equ	0xFFE
  8928                           tosl	equ	0xFFD
  8929                           pclatu	equ	0xFFB
  8930                           pclath	equ	0xFFA
  8931                           tblptru	equ	0xFF8
  8932                           tblptrh	equ	0xFF7
  8933                           tblptrl	equ	0xFF6
  8934                           tablat	equ	0xFF5
  8935                           prodh	equ	0xFF4
  8936                           prodl	equ	0xFF3
  8937                           intcon	equ	0xFF2
  8938                           postinc0	equ	0xFEE
  8939                           fsr0h	equ	0xFEA
  8940                           fsr0l	equ	0xFE9
  8941                           wreg	equ	0xFE8
  8942                           postdec1	equ	0xFE5
  8943                           fsr1h	equ	0xFE2
  8944                           fsr1l	equ	0xFE1
  8945                           indf2	equ	0xFDF
  8946                           postinc2	equ	0xFDE
  8947                           postdec2	equ	0xFDD
  8948                           fsr2h	equ	0xFDA
  8949                           fsr2l	equ	0xFD9
  8950                           status	equ	0xFD8
  8951                           
  8952 ;; *************** function i2_returnStop *****************
  8953 ;; Defined at:
  8954 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  p               2   11[COMRAM] PTR void 
  8957 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8958 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;		None
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      enum E11790
  8963 ;; Registers used:
  8964 ;;		wreg
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8974 ;;Total ram usage:        2 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		i2_setCallBack
  8980 ;;		_do_I2C_DO_ADDRESS_NACK
  8981 ;;		_do_I2C_TX
  8982 ;;		_do_I2C_RX
  8983 ;;		_do_I2C_TX_EMPTY
  8984 ;;		i2_do_I2C_DO_ADDRESS_NACK
  8985 ;;		i2_do_I2C_TX
  8986 ;;		i2_do_I2C_RX
  8987 ;;		i2_do_I2C_TX_EMPTY
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text93
  8992  000E0A                     __ptext93:
  8993                           	opt stack 0
  8994  000E0A                     i2_returnStop:
  8995                           	opt stack 18
  8996                           
  8997                           ;i2c_master.c: 445: return i2c_stop;
  8998                           
  8999                           ;incstack = 0
  9000  000E0A  0E01               	movlw	1
  9001  000E0C  0012               	return	
  9002  000E0E                     __end_ofi2_returnStop:
  9003                           	opt stack 0
  9004                           tosu	equ	0xFFF
  9005                           tosh	equ	0xFFE
  9006                           tosl	equ	0xFFD
  9007                           pclatu	equ	0xFFB
  9008                           pclath	equ	0xFFA
  9009                           tblptru	equ	0xFF8
  9010                           tblptrh	equ	0xFF7
  9011                           tblptrl	equ	0xFF6
  9012                           tablat	equ	0xFF5
  9013                           prodh	equ	0xFF4
  9014                           prodl	equ	0xFF3
  9015                           intcon	equ	0xFF2
  9016                           postinc0	equ	0xFEE
  9017                           fsr0h	equ	0xFEA
  9018                           fsr0l	equ	0xFE9
  9019                           wreg	equ	0xFE8
  9020                           postdec1	equ	0xFE5
  9021                           fsr1h	equ	0xFE2
  9022                           fsr1l	equ	0xFE1
  9023                           indf2	equ	0xFDF
  9024                           postinc2	equ	0xFDE
  9025                           postdec2	equ	0xFDD
  9026                           fsr2h	equ	0xFDA
  9027                           fsr2l	equ	0xFD9
  9028                           status	equ	0xFD8
  9029                           
  9030 ;; *************** function i2_wr2RegCompleteHandler *****************
  9031 ;; Defined at:
  9032 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;  p               2   11[COMRAM] PTR void 
  9035 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9036 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;		None
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  1    wreg      enum E97
  9041 ;; Registers used:
  9042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9052 ;;Total ram usage:        2 bytes
  9053 ;; Hardware stack levels used:    1
  9054 ;; Hardware stack levels required when called:    2
  9055 ;; This function calls:
  9056 ;;		i2_i2c_setBuffer
  9057 ;;		i2_i2c_setDataCompleteCallback
  9058 ;; This function is called by:
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           	psect	text94
  9063  000A7A                     __ptext94:
  9064                           	opt stack 0
  9065  000A7A                     i2_wr2RegCompleteHandler:
  9066                           	opt stack 16
  9067                           
  9068                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  9069                           
  9070                           ;incstack = 0
  9071  000A7A  C03C  F031         	movff	i2wr2RegCompleteHandler@p,i2i2c_setBuffer@buffer
  9072  000A7E  C03D  F032         	movff	i2wr2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  9073  000A82  0E00               	movlw	0
  9074  000A84  6E34               	movwf	i2i2c_setBuffer@bufferSize+1,c
  9075  000A86  0E02               	movlw	2
  9076  000A88  6E33               	movwf	i2i2c_setBuffer@bufferSize,c
  9077  000A8A  ECBF  F005         	call	i2_i2c_setBuffer	;wreg free
  9078                           
  9079                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  9080  000A8E  0E00               	movlw	0
  9081  000A90  6E37               	movwf	i2i2c_setDataCompleteCallback@cb,c
  9082  000A92  0E00               	movlw	0
  9083  000A94  6E38               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  9084  000A96  0E00               	movlw	0
  9085  000A98  6E39               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  9086  000A9A  0E00               	movlw	0
  9087  000A9C  6E3A               	movwf	i2i2c_setDataCompleteCallback@p,c
  9088  000A9E  0E00               	movlw	0
  9089  000AA0  6E3B               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  9090  000AA2  EC8D  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  9091                           
  9092                           ;i2c_simple_master.c: 114: return i2c_continue;
  9093  000AA6  0E04               	movlw	4
  9094  000AA8  0012               	return	
  9095  000AAA                     __end_ofi2_wr2RegCompleteHandler:
  9096                           	opt stack 0
  9097                           tosu	equ	0xFFF
  9098                           tosh	equ	0xFFE
  9099                           tosl	equ	0xFFD
  9100                           pclatu	equ	0xFFB
  9101                           pclath	equ	0xFFA
  9102                           tblptru	equ	0xFF8
  9103                           tblptrh	equ	0xFF7
  9104                           tblptrl	equ	0xFF6
  9105                           tablat	equ	0xFF5
  9106                           prodh	equ	0xFF4
  9107                           prodl	equ	0xFF3
  9108                           intcon	equ	0xFF2
  9109                           postinc0	equ	0xFEE
  9110                           fsr0h	equ	0xFEA
  9111                           fsr0l	equ	0xFE9
  9112                           wreg	equ	0xFE8
  9113                           postdec1	equ	0xFE5
  9114                           fsr1h	equ	0xFE2
  9115                           fsr1l	equ	0xFE1
  9116                           indf2	equ	0xFDF
  9117                           postinc2	equ	0xFDE
  9118                           postdec2	equ	0xFDD
  9119                           fsr2h	equ	0xFDA
  9120                           fsr2l	equ	0xFD9
  9121                           status	equ	0xFD8
  9122                           
  9123 ;; *************** function i2_i2c_setDataCompleteCallback *****************
  9124 ;; Defined at:
  9125 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  cb              3    6[COMRAM] PTR FTN(PTR void ,)enum 
  9128 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9129 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  9130 ;;  p               2    9[COMRAM] PTR void 
  9131 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9132 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9144 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9147 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9148 ;;Total ram usage:        5 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    1
  9151 ;; This function calls:
  9152 ;;		i2_setCallBack
  9153 ;; This function is called by:
  9154 ;;		i2_wr1RegCompleteHandler
  9155 ;;		i2_rd1RegCompleteHandler
  9156 ;;		i2_rd2RegCompleteHandler
  9157 ;;		i2_wr2RegCompleteHandler
  9158 ;;		i2_rdBlkRegCompleteHandler
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text95
  9163  000B1A                     __ptext95:
  9164                           	opt stack 0
  9165  000B1A                     i2_i2c_setDataCompleteCallback:
  9166                           	opt stack 16
  9167                           
  9168                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  9169                           
  9170                           ;incstack = 0
  9171  000B1A  C037  F031         	movff	i2i2c_setDataCompleteCallback@cb,i2setCallBack@cb
  9172  000B1E  C038  F032         	movff	i2i2c_setDataCompleteCallback@cb+1,i2setCallBack@cb+1
  9173  000B22  C039  F033         	movff	i2i2c_setDataCompleteCallback@cb+2,i2setCallBack@cb+2
  9174  000B26  C03A  F034         	movff	i2i2c_setDataCompleteCallback@p,i2setCallBack@p
  9175  000B2A  C03B  F035         	movff	i2i2c_setDataCompleteCallback@p+1,i2setCallBack@p+1
  9176  000B2E  0E00               	movlw	0
  9177  000B30  EC51  F002         	call	i2_setCallBack
  9178  000B34  0012               	return		;funcret
  9179  000B36                     __end_ofi2_i2c_setDataCompleteCallback:
  9180                           	opt stack 0
  9181                           tosu	equ	0xFFF
  9182                           tosh	equ	0xFFE
  9183                           tosl	equ	0xFFD
  9184                           pclatu	equ	0xFFB
  9185                           pclath	equ	0xFFA
  9186                           tblptru	equ	0xFF8
  9187                           tblptrh	equ	0xFF7
  9188                           tblptrl	equ	0xFF6
  9189                           tablat	equ	0xFF5
  9190                           prodh	equ	0xFF4
  9191                           prodl	equ	0xFF3
  9192                           intcon	equ	0xFF2
  9193                           postinc0	equ	0xFEE
  9194                           fsr0h	equ	0xFEA
  9195                           fsr0l	equ	0xFE9
  9196                           wreg	equ	0xFE8
  9197                           postdec1	equ	0xFE5
  9198                           fsr1h	equ	0xFE2
  9199                           fsr1l	equ	0xFE1
  9200                           indf2	equ	0xFDF
  9201                           postinc2	equ	0xFDE
  9202                           postdec2	equ	0xFDD
  9203                           fsr2h	equ	0xFDA
  9204                           fsr2l	equ	0xFD9
  9205                           status	equ	0xFD8
  9206                           
  9207 ;; *************** function i2_setCallBack *****************
  9208 ;; Defined at:
  9209 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  idx             1    wreg     enum E11974
  9212 ;;  cb              3    0[COMRAM] PTR FTN(PTR void ,)enum 
  9213 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9214 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  9215 ;;  p               2    3[COMRAM] PTR void 
  9216 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9217 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;  idx             1    5[COMRAM] enum E11974
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9229 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9233 ;;Total ram usage:        6 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		i2_i2c_setDataCompleteCallback
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           	psect	text96
  9243  0004A2                     __ptext96:
  9244                           	opt stack 0
  9245  0004A2                     i2_setCallBack:
  9246                           	opt stack 16
  9247                           
  9248                           ;incstack = 0
  9249                           ;i2setCallBack@idx stored from wreg
  9250  0004A2  6E36               	movwf	i2setCallBack@idx,c
  9251                           
  9252                           ;i2c_master.c: 455: if(cb)
  9253  0004A4  5031               	movf	i2setCallBack@cb,w,c
  9254  0004A6  1032               	iorwf	i2setCallBack@cb+1,w,c
  9255  0004A8  1033               	iorwf	i2setCallBack@cb+2,w,c
  9256  0004AA  B4D8               	btfsc	status,2,c
  9257  0004AC  D01B               	goto	i2l482
  9258                           
  9259                           ;i2c_master.c: 456: {
  9260                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  9261  0004AE  5036               	movf	i2setCallBack@idx,w,c
  9262  0004B0  0D03               	mullw	3
  9263  0004B2  0E0D               	movlw	low (_i2c_status+12)
  9264  0004B4  24F3               	addwf	prodl,w,c
  9265  0004B6  6ED9               	movwf	fsr2l,c
  9266  0004B8  0E00               	movlw	high (_i2c_status+12)
  9267  0004BA  20F4               	addwfc	prodh,w,c
  9268  0004BC  6EDA               	movwf	fsr2h,c
  9269  0004BE  C031  FFDE         	movff	i2setCallBack@cb,postinc2
  9270  0004C2  C032  FFDE         	movff	i2setCallBack@cb+1,postinc2
  9271  0004C6  C033  FFDE         	movff	i2setCallBack@cb+2,postinc2
  9272                           
  9273                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  9274  0004CA  5036               	movf	i2setCallBack@idx,w,c
  9275  0004CC  0D02               	mullw	2
  9276  0004CE  0E1F               	movlw	low (_i2c_status+30)
  9277  0004D0  24F3               	addwf	prodl,w,c
  9278  0004D2  6ED9               	movwf	fsr2l,c
  9279  0004D4  0E00               	movlw	high (_i2c_status+30)
  9280  0004D6  20F4               	addwfc	prodh,w,c
  9281  0004D8  6EDA               	movwf	fsr2h,c
  9282  0004DA  C034  FFDE         	movff	i2setCallBack@p,postinc2
  9283  0004DE  C035  FFDD         	movff	i2setCallBack@p+1,postdec2
  9284                           
  9285                           ;i2c_master.c: 459: }
  9286  0004E2  0012               	return	
  9287  0004E4                     i2l482:
  9288                           
  9289                           ;i2c_master.c: 460: else
  9290                           ;i2c_master.c: 461: {
  9291                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  9292  0004E4  5036               	movf	i2setCallBack@idx,w,c
  9293  0004E6  0D03               	mullw	3
  9294  0004E8  0E0D               	movlw	low (_i2c_status+12)
  9295  0004EA  24F3               	addwf	prodl,w,c
  9296  0004EC  6ED9               	movwf	fsr2l,c
  9297  0004EE  0E00               	movlw	high (_i2c_status+12)
  9298  0004F0  20F4               	addwfc	prodh,w,c
  9299  0004F2  6EDA               	movwf	fsr2h,c
  9300  0004F4  0E0A               	movlw	low i2_returnStop
  9301  0004F6  6EDE               	movwf	postinc2,c
  9302  0004F8  0E0E               	movlw	high i2_returnStop
  9303  0004FA  6EDE               	movwf	postinc2,c
  9304  0004FC  0E00               	movlw	low (i2_returnStop shr (0+16))
  9305  0004FE  6EDE               	movwf	postinc2,c
  9306                           
  9307                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  9308  000500  5036               	movf	i2setCallBack@idx,w,c
  9309  000502  0D02               	mullw	2
  9310  000504  0E1F               	movlw	low (_i2c_status+30)
  9311  000506  24F3               	addwf	prodl,w,c
  9312  000508  6ED9               	movwf	fsr2l,c
  9313  00050A  0E00               	movlw	high (_i2c_status+30)
  9314  00050C  20F4               	addwfc	prodh,w,c
  9315  00050E  6EDA               	movwf	fsr2h,c
  9316  000510  0E00               	movlw	0
  9317  000512  6EDE               	movwf	postinc2,c
  9318  000514  0E00               	movlw	0
  9319  000516  6EDD               	movwf	postdec2,c
  9320  000518  0012               	return	
  9321  00051A                     __end_ofi2_setCallBack:
  9322                           	opt stack 0
  9323                           tosu	equ	0xFFF
  9324                           tosh	equ	0xFFE
  9325                           tosl	equ	0xFFD
  9326                           pclatu	equ	0xFFB
  9327                           pclath	equ	0xFFA
  9328                           tblptru	equ	0xFF8
  9329                           tblptrh	equ	0xFF7
  9330                           tblptrl	equ	0xFF6
  9331                           tablat	equ	0xFF5
  9332                           prodh	equ	0xFF4
  9333                           prodl	equ	0xFF3
  9334                           intcon	equ	0xFF2
  9335                           postinc0	equ	0xFEE
  9336                           fsr0h	equ	0xFEA
  9337                           fsr0l	equ	0xFE9
  9338                           wreg	equ	0xFE8
  9339                           postdec1	equ	0xFE5
  9340                           fsr1h	equ	0xFE2
  9341                           fsr1l	equ	0xFE1
  9342                           indf2	equ	0xFDF
  9343                           postinc2	equ	0xFDE
  9344                           postdec2	equ	0xFDD
  9345                           fsr2h	equ	0xFDA
  9346                           fsr2l	equ	0xFD9
  9347                           status	equ	0xFD8
  9348                           
  9349 ;; *************** function i2_i2c_setBuffer *****************
  9350 ;; Defined at:
  9351 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;  buffer          2    0[COMRAM] PTR void 
  9354 ;;		 -> main@rec_1221(1), main@rec(1), main@data(2), i2c_readDataBlock@reg(1), 
  9355 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg
      +(1), 
  9356 ;;		 -> i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegist
      +er@reg(1), 
  9357 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9358 ;;  bufferSize      2    2[COMRAM] unsigned int 
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;		None
  9361 ;; Return value:  Size  Location     Type
  9362 ;;                  1    wreg      void 
  9363 ;; Registers used:
  9364 ;;		wreg, status,2, status,0
  9365 ;; Tracked objects:
  9366 ;;		On entry : 0/0
  9367 ;;		On exit  : 0/0
  9368 ;;		Unchanged: 0/0
  9369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9373 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9374 ;;Total ram usage:        4 bytes
  9375 ;; Hardware stack levels used:    1
  9376 ;; This function calls:
  9377 ;;		Nothing
  9378 ;; This function is called by:
  9379 ;;		i2_wr1RegCompleteHandler
  9380 ;;		i2_rd1RegCompleteHandler
  9381 ;;		i2_rd2RegCompleteHandler
  9382 ;;		i2_wr2RegCompleteHandler
  9383 ;;		i2_rdBlkRegCompleteHandler
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text97
  9388  000B7E                     __ptext97:
  9389                           	opt stack 0
  9390  000B7E                     i2_i2c_setBuffer:
  9391                           	opt stack 17
  9392                           
  9393                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  9394                           
  9395                           ;incstack = 0
  9396  000B7E  A401               	btfss	_i2c_status,2,c
  9397  000B80  0012               	return	
  9398                           
  9399                           ;i2c_master.c: 187: {
  9400                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  9401  000B82  C031  F003         	movff	i2i2c_setBuffer@buffer,_i2c_status+2
  9402  000B86  C032  F004         	movff	i2i2c_setBuffer@buffer+1,_i2c_status+3
  9403                           
  9404                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  9405  000B8A  C033  F005         	movff	i2i2c_setBuffer@bufferSize,_i2c_status+4
  9406  000B8E  C034  F006         	movff	i2i2c_setBuffer@bufferSize+1,_i2c_status+5
  9407                           
  9408                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  9409  000B92  9401               	bcf	_i2c_status,2,c
  9410  000B94  0012               	return	
  9411  000B96                     __end_ofi2_i2c_setBuffer:
  9412                           	opt stack 0
  9413                           tosu	equ	0xFFF
  9414                           tosh	equ	0xFFE
  9415                           tosl	equ	0xFFD
  9416                           pclatu	equ	0xFFB
  9417                           pclath	equ	0xFFA
  9418                           tblptru	equ	0xFF8
  9419                           tblptrh	equ	0xFF7
  9420                           tblptrl	equ	0xFF6
  9421                           tablat	equ	0xFF5
  9422                           prodh	equ	0xFF4
  9423                           prodl	equ	0xFF3
  9424                           intcon	equ	0xFF2
  9425                           postinc0	equ	0xFEE
  9426                           fsr0h	equ	0xFEA
  9427                           fsr0l	equ	0xFE9
  9428                           wreg	equ	0xFE8
  9429                           postdec1	equ	0xFE5
  9430                           fsr1h	equ	0xFE2
  9431                           fsr1l	equ	0xFE1
  9432                           indf2	equ	0xFDF
  9433                           postinc2	equ	0xFDE
  9434                           postdec2	equ	0xFDD
  9435                           fsr2h	equ	0xFDA
  9436                           fsr2l	equ	0xFD9
  9437                           status	equ	0xFD8
  9438                           
  9439 ;; *************** function i2_i2c1_driver_stop *****************
  9440 ;; Defined at:
  9441 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;		None
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;		None
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  1    wreg      void 
  9448 ;; Registers used:
  9449 ;;		None
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9459 ;;Total ram usage:        0 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		i2_do_I2C_SEND_STOP
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text98
  9469  000E0E                     __ptext98:
  9470                           	opt stack 0
  9471  000E0E                     i2_i2c1_driver_stop:
  9472                           	opt stack 17
  9473                           
  9474                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  9475                           
  9476                           ;incstack = 0
  9477  000E0E  8497               	bsf	3991,2,c	;volatile
  9478  000E10  0012               	return		;funcret
  9479  000E12                     __end_ofi2_i2c1_driver_stop:
  9480                           	opt stack 0
  9481                           tosu	equ	0xFFF
  9482                           tosh	equ	0xFFE
  9483                           tosl	equ	0xFFD
  9484                           pclatu	equ	0xFFB
  9485                           pclath	equ	0xFFA
  9486                           tblptru	equ	0xFF8
  9487                           tblptrh	equ	0xFF7
  9488                           tblptrl	equ	0xFF6
  9489                           tablat	equ	0xFF5
  9490                           prodh	equ	0xFF4
  9491                           prodl	equ	0xFF3
  9492                           intcon	equ	0xFF2
  9493                           postinc0	equ	0xFEE
  9494                           fsr0h	equ	0xFEA
  9495                           fsr0l	equ	0xFE9
  9496                           wreg	equ	0xFE8
  9497                           postdec1	equ	0xFE5
  9498                           fsr1h	equ	0xFE2
  9499                           fsr1l	equ	0xFE1
  9500                           indf2	equ	0xFDF
  9501                           postinc2	equ	0xFDE
  9502                           postdec2	equ	0xFDD
  9503                           fsr2h	equ	0xFDA
  9504                           fsr2l	equ	0xFD9
  9505                           status	equ	0xFD8
  9506                           
  9507 ;; *************** function i2_i2c1_driver_restart *****************
  9508 ;; Defined at:
  9509 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;		None
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		None
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;Total ram usage:        0 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		i2_do_I2C_SEND_RESTART_READ
  9533 ;;		i2_do_I2C_SEND_RESTART_WRITE
  9534 ;;		i2_do_I2C_SEND_RESTART
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text99
  9539  000E12                     __ptext99:
  9540                           	opt stack 0
  9541  000E12                     i2_i2c1_driver_restart:
  9542                           	opt stack 17
  9543                           
  9544                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  9545                           
  9546                           ;incstack = 0
  9547  000E12  8297               	bsf	3991,1,c	;volatile
  9548  000E14  0012               	return		;funcret
  9549  000E16                     __end_ofi2_i2c1_driver_restart:
  9550                           	opt stack 0
  9551                           tosu	equ	0xFFF
  9552                           tosh	equ	0xFFE
  9553                           tosl	equ	0xFFD
  9554                           pclatu	equ	0xFFB
  9555                           pclath	equ	0xFFA
  9556                           tblptru	equ	0xFF8
  9557                           tblptrh	equ	0xFF7
  9558                           tblptrl	equ	0xFF6
  9559                           tablat	equ	0xFF5
  9560                           prodh	equ	0xFF4
  9561                           prodl	equ	0xFF3
  9562                           intcon	equ	0xFF2
  9563                           postinc0	equ	0xFEE
  9564                           fsr0h	equ	0xFEA
  9565                           fsr0l	equ	0xFE9
  9566                           wreg	equ	0xFE8
  9567                           postdec1	equ	0xFE5
  9568                           fsr1h	equ	0xFE2
  9569                           fsr1l	equ	0xFE1
  9570                           indf2	equ	0xFDF
  9571                           postinc2	equ	0xFDE
  9572                           postdec2	equ	0xFDD
  9573                           fsr2h	equ	0xFDA
  9574                           fsr2l	equ	0xFD9
  9575                           status	equ	0xFD8
  9576                           
  9577 ;; *************** function i2_i2c1_driver_sendACK *****************
  9578 ;; Defined at:
  9579 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;		None
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      void 
  9586 ;; Registers used:
  9587 ;;		None
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9597 ;;Total ram usage:        0 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		i2_do_I2C_DO_ACK
  9603 ;;		i2_do_I2C_RX
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           	psect	text100
  9608  000DD0                     __ptext100:
  9609                           	opt stack 0
  9610  000DD0                     i2_i2c1_driver_sendACK:
  9611                           	opt stack 18
  9612                           
  9613                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  9614                           
  9615                           ;incstack = 0
  9616  000DD0  9A97               	bcf	3991,5,c	;volatile
  9617                           
  9618                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  9619  000DD2  8897               	bsf	3991,4,c	;volatile
  9620  000DD4  0012               	return		;funcret
  9621  000DD6                     __end_ofi2_i2c1_driver_sendACK:
  9622                           	opt stack 0
  9623                           tosu	equ	0xFFF
  9624                           tosh	equ	0xFFE
  9625                           tosl	equ	0xFFD
  9626                           pclatu	equ	0xFFB
  9627                           pclath	equ	0xFFA
  9628                           tblptru	equ	0xFF8
  9629                           tblptrh	equ	0xFF7
  9630                           tblptrl	equ	0xFF6
  9631                           tablat	equ	0xFF5
  9632                           prodh	equ	0xFF4
  9633                           prodl	equ	0xFF3
  9634                           intcon	equ	0xFF2
  9635                           postinc0	equ	0xFEE
  9636                           fsr0h	equ	0xFEA
  9637                           fsr0l	equ	0xFE9
  9638                           wreg	equ	0xFE8
  9639                           postdec1	equ	0xFE5
  9640                           fsr1h	equ	0xFE2
  9641                           fsr1l	equ	0xFE1
  9642                           indf2	equ	0xFDF
  9643                           postinc2	equ	0xFDE
  9644                           postdec2	equ	0xFDD
  9645                           fsr2h	equ	0xFDA
  9646                           fsr2l	equ	0xFD9
  9647                           status	equ	0xFD8
  9648                           
  9649 ;; *************** function _i2c_busCollisionISR *****************
  9650 ;; Defined at:
  9651 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;		None
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;		None
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		cstack
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9669 ;;Total ram usage:        0 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:    1
  9672 ;; This function calls:
  9673 ;;		_i2c1_driver_clearBusCollision
  9674 ;; This function is called by:
  9675 ;;		_i2c_open
  9676 ;;		_INTERRUPT_InterruptManager
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           	psect	text101
  9681  000DD6                     __ptext101:
  9682                           	opt stack 0
  9683  000DD6                     _i2c_busCollisionISR:
  9684                           	opt stack 19
  9685                           
  9686                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
  9687                           
  9688                           ;incstack = 0
  9689  000DD6  ECEE  F006         	call	_i2c1_driver_clearBusCollision	;wreg free
  9690  000DDA  0012               	return		;funcret
  9691  000DDC                     __end_of_i2c_busCollisionISR:
  9692                           	opt stack 0
  9693                           tosu	equ	0xFFF
  9694                           tosh	equ	0xFFE
  9695                           tosl	equ	0xFFD
  9696                           pclatu	equ	0xFFB
  9697                           pclath	equ	0xFFA
  9698                           tblptru	equ	0xFF8
  9699                           tblptrh	equ	0xFF7
  9700                           tblptrl	equ	0xFF6
  9701                           tablat	equ	0xFF5
  9702                           prodh	equ	0xFF4
  9703                           prodl	equ	0xFF3
  9704                           intcon	equ	0xFF2
  9705                           postinc0	equ	0xFEE
  9706                           fsr0h	equ	0xFEA
  9707                           fsr0l	equ	0xFE9
  9708                           wreg	equ	0xFE8
  9709                           postdec1	equ	0xFE5
  9710                           fsr1h	equ	0xFE2
  9711                           fsr1l	equ	0xFE1
  9712                           indf2	equ	0xFDF
  9713                           postinc2	equ	0xFDE
  9714                           postdec2	equ	0xFDD
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719 ;; *************** function _i2c1_driver_clearBusCollision *****************
  9720 ;; Defined at:
  9721 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;		None
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;		None
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  1    wreg      void 
  9728 ;; Registers used:
  9729 ;;		None
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9739 ;;Total ram usage:        0 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; This function calls:
  9742 ;;		Nothing
  9743 ;; This function is called by:
  9744 ;;		_i2c_busCollisionISR
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           	psect	text102
  9749  000DDC                     __ptext102:
  9750                           	opt stack 0
  9751  000DDC                     _i2c1_driver_clearBusCollision:
  9752                           	opt stack 19
  9753                           
  9754                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
  9755                           
  9756                           ;incstack = 0
  9757  000DDC  010E               	movlb	14	; () banked
  9758  000DDE  93CD               	bcf	205,1,b	;volatile
  9759                           
  9760                           ; BSR set to: 14
  9761  000DE0  0012               	return		;funcret
  9762  000DE2                     __end_of_i2c1_driver_clearBusCollision:
  9763                           	opt stack 0
  9764  0000                     tosu	equ	0xFFF
  9765                           tosh	equ	0xFFE
  9766                           tosl	equ	0xFFD
  9767                           pclatu	equ	0xFFB
  9768                           pclath	equ	0xFFA
  9769                           tblptru	equ	0xFF8
  9770                           tblptrh	equ	0xFF7
  9771                           tblptrl	equ	0xFF6
  9772                           tablat	equ	0xFF5
  9773                           prodh	equ	0xFF4
  9774                           prodl	equ	0xFF3
  9775                           intcon	equ	0xFF2
  9776                           postinc0	equ	0xFEE
  9777                           fsr0h	equ	0xFEA
  9778                           fsr0l	equ	0xFE9
  9779                           wreg	equ	0xFE8
  9780                           postdec1	equ	0xFE5
  9781                           fsr1h	equ	0xFE2
  9782                           fsr1l	equ	0xFE1
  9783                           indf2	equ	0xFDF
  9784                           postinc2	equ	0xFDE
  9785                           postdec2	equ	0xFDD
  9786                           fsr2h	equ	0xFDA
  9787                           fsr2l	equ	0xFD9
  9788                           status	equ	0xFD8
  9789                           tosu	equ	0xFFF
  9790                           tosh	equ	0xFFE
  9791                           tosl	equ	0xFFD
  9792                           pclatu	equ	0xFFB
  9793                           pclath	equ	0xFFA
  9794                           tblptru	equ	0xFF8
  9795                           tblptrh	equ	0xFF7
  9796                           tblptrl	equ	0xFF6
  9797                           tablat	equ	0xFF5
  9798                           prodh	equ	0xFF4
  9799                           prodl	equ	0xFF3
  9800                           intcon	equ	0xFF2
  9801                           postinc0	equ	0xFEE
  9802                           fsr0h	equ	0xFEA
  9803                           fsr0l	equ	0xFE9
  9804                           wreg	equ	0xFE8
  9805                           postdec1	equ	0xFE5
  9806                           fsr1h	equ	0xFE2
  9807                           fsr1l	equ	0xFE1
  9808                           indf2	equ	0xFDF
  9809                           postinc2	equ	0xFDE
  9810                           postdec2	equ	0xFDD
  9811                           fsr2h	equ	0xFDA
  9812                           fsr2l	equ	0xFD9
  9813                           status	equ	0xFD8
  9814                           
  9815                           	psect	text103
  9816  000000                     __ptext103:
  9817                           	opt stack 0
  9818                           tosu	equ	0xFFF
  9819                           tosh	equ	0xFFE
  9820                           tosl	equ	0xFFD
  9821                           pclatu	equ	0xFFB
  9822                           pclath	equ	0xFFA
  9823                           tblptru	equ	0xFF8
  9824                           tblptrh	equ	0xFF7
  9825                           tblptrl	equ	0xFF6
  9826                           tablat	equ	0xFF5
  9827                           prodh	equ	0xFF4
  9828                           prodl	equ	0xFF3
  9829                           intcon	equ	0xFF2
  9830                           postinc0	equ	0xFEE
  9831                           fsr0h	equ	0xFEA
  9832                           fsr0l	equ	0xFE9
  9833                           wreg	equ	0xFE8
  9834                           postdec1	equ	0xFE5
  9835                           fsr1h	equ	0xFE2
  9836                           fsr1l	equ	0xFE1
  9837                           indf2	equ	0xFDF
  9838                           postinc2	equ	0xFDE
  9839                           postdec2	equ	0xFDD
  9840                           fsr2h	equ	0xFDA
  9841                           fsr2l	equ	0xFD9
  9842                           status	equ	0xFD8
  9843                           
  9844                           	psect	rparam
  9845  0000                     tosu	equ	0xFFF
  9846                           tosh	equ	0xFFE
  9847                           tosl	equ	0xFFD
  9848                           pclatu	equ	0xFFB
  9849                           pclath	equ	0xFFA
  9850                           tblptru	equ	0xFF8
  9851                           tblptrh	equ	0xFF7
  9852                           tblptrl	equ	0xFF6
  9853                           tablat	equ	0xFF5
  9854                           prodh	equ	0xFF4
  9855                           prodl	equ	0xFF3
  9856                           intcon	equ	0xFF2
  9857                           postinc0	equ	0xFEE
  9858                           fsr0h	equ	0xFEA
  9859                           fsr0l	equ	0xFE9
  9860                           wreg	equ	0xFE8
  9861                           postdec1	equ	0xFE5
  9862                           fsr1h	equ	0xFE2
  9863                           fsr1l	equ	0xFE1
  9864                           indf2	equ	0xFDF
  9865                           postinc2	equ	0xFDE
  9866                           postdec2	equ	0xFDD
  9867                           fsr2h	equ	0xFDA
  9868                           fsr2l	equ	0xFD9
  9869                           status	equ	0xFD8
  9870                           
  9871                           	psect	temp
  9872  00004A                     btemp:
  9873                           	opt stack 0
  9874  00004A                     	ds	1
  9875  0000                     int$flags	set	btemp
  9876  0000                     wtemp6	set	btemp+1
  9877                           tosu	equ	0xFFF
  9878                           tosh	equ	0xFFE
  9879                           tosl	equ	0xFFD
  9880                           pclatu	equ	0xFFB
  9881                           pclath	equ	0xFFA
  9882                           tblptru	equ	0xFF8
  9883                           tblptrh	equ	0xFF7
  9884                           tblptrl	equ	0xFF6
  9885                           tablat	equ	0xFF5
  9886                           prodh	equ	0xFF4
  9887                           prodl	equ	0xFF3
  9888                           intcon	equ	0xFF2
  9889                           postinc0	equ	0xFEE
  9890                           fsr0h	equ	0xFEA
  9891                           fsr0l	equ	0xFE9
  9892                           wreg	equ	0xFE8
  9893                           postdec1	equ	0xFE5
  9894                           fsr1h	equ	0xFE2
  9895                           fsr1l	equ	0xFE1
  9896                           indf2	equ	0xFDF
  9897                           postinc2	equ	0xFDE
  9898                           postdec2	equ	0xFDD
  9899                           fsr2h	equ	0xFDA
  9900                           fsr2l	equ	0xFD9
  9901                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      73
    BANK0           160     20      68
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    do_I2C_TX$1973$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$1979$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$1985$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_ISR$1991	PTR const FTN()enum E11956 size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$1990	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$1985	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$1984	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$1979	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$1978	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX$1973	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S820$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_readNBytes@data	PTR void  size(2) Largest target is 1
		 -> main@rec_1221(BANK0[1]), main@rec(BANK0[1]), 

    d.data	PTR unsigned char  size(2) Largest target is 0

    S1085$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(2) Largest target is 2
		 -> main@data(BANK0[2]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E11956[16] size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> main@rec_1221(BANK0[1]), main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S820$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S820$callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> i2_returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> returnReset(), returnStop(), 

    S820$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@rec_1221(BANK0[1]), main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@rec_1221(BANK0[1]), main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), 
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), 
		 -> i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMRAM

    _i2c_writeNBytes->_i2c_setBuffer
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_readNBytes->_i2c_setBuffer
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setBuffer
    _wr1RegCompleteHandler->_i2c_setBuffer
    _rdBlkRegCompleteHandler->_i2c_setBuffer
    _rd2RegCompleteHandler->_i2c_setBuffer
    _rd1RegCompleteHandler->_i2c_setBuffer
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    i2_i2c_ISR->i2_do_I2C_TX
    i2_do_I2C_TX->i2_i2c1_driver_TXData
    i2_do_I2C_TX->i2_i2c1_driver_isNACK
    i2_do_I2C_SEND_ADR_WRITE->i2_i2c1_driver_TXData
    i2_do_I2C_SEND_ADR_READ->i2_i2c1_driver_TXData
    i2_wr2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_wr1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rdBlkRegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_i2c_setDataCompleteCallback->i2_setCallBack

Critical Paths under _main in BANK0

    _main->_i2c_writeNBytes
    _i2c_writeNBytes->_i2c_setAddressNACKCallback
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_readNBytes->_i2c_open
    _i2c_masterRead->_i2c_masterOperation
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  220829
                                             15 BANK0      5     5      0
                  _SYSTEM_Initialize
                     _i2c_readNBytes
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _i2c_writeNBytes                                      5     1      4  111373
                                             10 BANK0      5     1      4
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_setAddressNACKCallback                           5     0      5    2259
                                              5 BANK0      5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (2) _i2c_masterWrite                                      0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (1) _i2c_readNBytes                                       5     1      4  109114
                                              2 BANK0      5     1      4
                          _i2c_close
                     _i2c_masterRead
                           _i2c_open
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_open                                             2     2      0     310
                                              0 BANK0      2     2      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_setI2cISR                                3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_setBusCollisionISR                       3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_masterRead                                       0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (3) _i2c_masterOperation                                  2     2      0  106092
                                              0 BANK0      2     2      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (4) _mssp1_IRQisEnabled                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_poller                                           0     0      0  106024
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (5) _mssp1_waitForEvent                                   2     0      2      90
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _i2c_ISR                                              0     0      0  105934
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX_EMPTY                                      0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX                                            2     2      0   26519
                                             22 COMRAM     2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_isNACK                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_TXData                                   1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RX                                            0     0      0   26451
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ADDRESS_NACK                               0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _returnStop                                           2     0      2     108
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _returnReset                                          2     0      2       0
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              2     0      2    5415
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                2     0      2    5232
                                             10 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _i2c_setDataCompleteCallback                          5     0      5    2979
                                              5 BANK0      5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (3) _setCallBack                                          6     1      5    1117
                                             21 COMRAM     1     1      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _i2c_setBuffer                                        4     0      4    2222
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _i2c_restartWrite                                     2     0      2       0
                                             10 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_close                                            1     1      0      37
                                             21 COMRAM     1     1      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (3) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         18    18      0   23654
                                              3 COMRAM    18    18      0
                   Absolute function *
                _i2c_busCollisionISR *
                          i2_i2c_ISR *
 ---------------------------------------------------------------------------------
 (11) i2_i2c_ISR                                           0     0      0   23654
                    i2_do_I2C_DO_ACK *
           i2_do_I2C_DO_ADDRESS_NACK *
           i2_do_I2C_DO_NACK_RESTART *
              i2_do_I2C_DO_NACK_STOP *
                      i2_do_I2C_IDLE *
                      i2_do_I2C_RCEN *
                     i2_do_I2C_RESET *
                        i2_do_I2C_RX *
             i2_do_I2C_SEND_ADR_READ *
            i2_do_I2C_SEND_ADR_WRITE *
              i2_do_I2C_SEND_RESTART *
         i2_do_I2C_SEND_RESTART_READ *
        i2_do_I2C_SEND_RESTART_WRITE *
                 i2_do_I2C_SEND_STOP *
                        i2_do_I2C_TX *
                  i2_do_I2C_TX_EMPTY *
               i2_i2c1_driver_isNACK
                   i2_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (12) i2_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_TX_EMPTY                                   0     0      0    5881
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
                     i2_mssp1_setIRQ
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_TX                                         2     2      0    5949
                                              1 COMRAM     2     2      0
                   Absolute function *
         i2_do_I2C_SEND_RESTART_READ
        i2_do_I2C_SEND_RESTART_WRITE
                 i2_do_I2C_SEND_STOP
               i2_i2c1_driver_TXData
               i2_i2c1_driver_isNACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) i2_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_SEND_ADR_READ                              0     0      0      31
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_TXData                                1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RX                                         0     0      0    5881
                   Absolute function *
           i2_do_I2C_DO_NACK_RESTART
              i2_do_I2C_DO_NACK_STOP
            i2_i2c1_driver_getRXData
              i2_i2c1_driver_sendACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_DO_NACK_STOP                               0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RESET                                      0     0      0       0
             i2_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RCEN                                       0     0      0       0
              i2_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_DO_ADDRESS_NACK                            0     0      0    5881
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_wr2RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_wr1RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_returnStop                                        2     0      2     108
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_returnReset                                       2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_rdBlkRegCompleteHandler                           2     0      2    1205
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_rd2RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_rd1RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i2_i2c_setDataCompleteCallback                       5     0      5     699
                                              6 COMRAM     5     0      5
                      i2_setCallBack
 ---------------------------------------------------------------------------------
 (15) i2_setCallBack                                       6     1      5     287
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (14) i2_i2c_setBuffer                                     4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (13) i2_i2c_restartWrite                                  2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_STOP                                  0     0      0       0
                 i2_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART                               0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_DO_ACK                                     0     0      0       0
              i2_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _i2c_readNBytes
     _i2c_close
       _mssp1_clearIRQ
       _mssp1_disableIRQ
     _i2c_masterRead
       _i2c_masterOperation
         _i2c1_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c1_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c1_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c1_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c1_driver_startRX
             _do_I2C_RESET *
               _i2c1_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _i2c1_driver_getRXData *
               _i2c1_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c1_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c1_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c1_driver_restart
             _do_I2C_SEND_STOP *
               _i2c1_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c1_driver_TXData *
               _i2c1_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _mssp1_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c1_driver_isNACK *
             _mssp1_clearIRQ *
           _mssp1_waitForEvent
         _mssp1_IRQisEnabled
     _i2c_open
       _i2c1_driver_open
       _i2c1_driver_setBusCollisionISR
       _i2c1_driver_setI2cISR
       _mssp1_clearIRQ
     _i2c_setBuffer
   _i2c_writeNBytes
     _i2c_close
       _mssp1_clearIRQ
       _mssp1_disableIRQ
     _i2c_masterWrite
       _i2c_masterOperation
         _i2c1_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c1_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c1_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c1_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c1_driver_startRX
             _do_I2C_RESET *
               _i2c1_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _i2c1_driver_getRXData *
               _i2c1_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c1_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c1_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c1_driver_restart
             _do_I2C_SEND_STOP *
               _i2c1_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c1_driver_TXData *
               _i2c1_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _mssp1_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c1_driver_isNACK *
             _mssp1_clearIRQ *
           _mssp1_waitForEvent
         _mssp1_IRQisEnabled
     _i2c_open
       _i2c1_driver_open
       _i2c1_driver_setBusCollisionISR
       _i2c1_driver_setI2cISR
       _mssp1_clearIRQ
     _i2c_setAddressNACKCallback
       _setCallBack
     _i2c_setBuffer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i2_i2c_ISR *
     i2_do_I2C_DO_ACK *
       i2_i2c1_driver_sendACK
     i2_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_DO_NACK_RESTART *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_DO_NACK_STOP *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_IDLE *
     i2_do_I2C_RCEN *
       i2_i2c1_driver_startRX
     i2_do_I2C_RESET *
       i2_i2c1_driver_resetBus
     i2_do_I2C_RX *
       Absolute function(Fake) *
       i2_do_I2C_DO_NACK_RESTART *
         i2_i2c1_driver_sendNACK
       i2_do_I2C_DO_NACK_STOP *
         i2_i2c1_driver_sendNACK
       i2_i2c1_driver_getRXData *
       i2_i2c1_driver_sendACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_SEND_ADR_READ *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_ADR_WRITE *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_RESTART *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_READ *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_WRITE *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_STOP *
       i2_i2c1_driver_stop
     i2_do_I2C_TX *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART_READ *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_RESTART_WRITE *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c1_driver_TXData *
       i2_i2c1_driver_isNACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_mssp1_setIRQ *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_i2c1_driver_isNACK *
     i2_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      44       5       42.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      49       1       77.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8D       6        0.0%
DATA                 0      0      8D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Apr 15 19:43:16 2018

                ??i2_i2c1_driver_startRX 0031                             returnReset@p 009A  
          _do_I2C_SEND_RESTART$intlevel0 0CC8                              __CFG_CP$OFF 000000  
                   __size_of_do_I2C_IDLE 0010                      _do_I2C_SEND_RESTART 0CC2  
                   __size_of_do_I2C_RCEN 0010                      ?i2_i2c_restartWrite 003C  
                            __CFG_LVP$ON 000000                                      l421 06F6  
                                    l422 06EA                                      l430 01B6  
                                    l431 01A4                                      l440 021A  
                                    l425 06F0                                      l433 01AA  
                                    l434 01B0                                      l355 0AFA  
                                    l451 0462                                      l531 0682  
                                    l380 0B38                                      l348 0190  
                                    l612 02F2                                      l461 059C  
                                    l429 01F0                                      l445 0458  
                                    l613 0332                                      l462 05A4  
                                    l367 09A2                                      l448 0468  
                                    l457 05AA                                      l449 045C  
                                    l369 09B4                                      l482 037A  
                                    l458 0596                                      l379 0B48  
                                    l469 0742                                      l591 0978  
                           __CFG_CPD$OFF 000000          __end_ofi2_i2c1_driver_getRXData 0DFE  
           __size_of_i2c_masterOperation 0036                     _returnStop$intlevel0 0D30  
        i2i2c_setDataCompleteCallback@cb 0037            i2c_setDataCompleteCallback@cb 0095  
                __size_of_PMD_Initialize 001C                    __size_of_do_I2C_RESET 0014  
                                    prod 000FF3                                      tosl 000FFD  
                                    wreg 000FE8                 ?i2_rd1RegCompleteHandler 003C  
        i2c1_driver_setBusCollisionISR@f 0046                              i2_do_I2C_RX 051A  
                            i2_do_I2C_TX 0226                 ?i2_wr1RegCompleteHandler 003C  
                           __CFG_ZCD$OFF 000000                  ??_rd2RegCompleteHandler 004A  
                                   l3715 0642                                     l3727 0952  
                         i2_mssp1_setIRQ 0DC4                   __size_ofi2_do_I2C_IDLE 000A  
                                   u1208 0706                                     u1209 071A  
                 __size_ofi2_do_I2C_RCEN 000A                                     u1330 0C36  
                                   u1228 01C6                                     u1229 01DA  
                                   _LATA 000F83                                     u1318 0756  
                                   u1270 0BB2                                     _LATB 000F84  
                                   u1319 076A                                     _LATC 000F85  
                                   _LATD 000F86                                     _LATE 000F87  
                                   u1258 0478                                     u1338 0C38  
                                   u1259 048C                                     u1268 05BA  
                                   u1269 05CE                                     u1777 0BBA  
                                   _PMD0 000EE1                                     _PMD1 000EE2  
                                   _PMD2 000EE3                                     _PMD3 000EE4  
                                   _PMD4 000EE5                                     _PMD5 000EE6  
                   ?_do_I2C_SEND_RESTART 0031                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                   ??i2_i2c_restartWrite 003E                  ??_wr2RegCompleteHandler 004A  
                          __CFG_FCMEN$ON 000000        __size_of_do_I2C_SEND_RESTART_READ 000E  
                   __end_ofi2_returnStop 0E0E                ?_do_I2C_SEND_RESTART_READ 0031  
                                   _main 02B2                __size_of_do_I2C_SEND_STOP 000E  
                 __size_of_do_I2C_DO_ACK 000E                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   fsr0l 000FE9                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 004A                    ?_do_I2C_SEND_ADR_READ 0031  
                                   prodh 000FF4                                     prodl 000FF3  
        ??_i2c1_driver_clearBusCollision 0031                 __size_of_i2c_writeNBytes 0050  
                                   start 00DC                            _i2c_setBuffer 0B4E  
                          __CFG_CSWEN$ON 000000                          __end_of_i2c_ISR 076E  
                           ___param_bank 000000         __size_of_rdBlkRegCompleteHandler 004E  
                          __CFG_SCANE$ON 000000                 ??_do_I2C_DO_NACK_RESTART 0046  
              __size_of_mssp1_disableIRQ 0006                             _do_I2C_RESET 0C16  
         __size_of_OSCILLATOR_Initialize 0018              i2c_setAddressNACKCallback@p 0098  
                           main@rec_1221 00A2            __end_of_OSCILLATOR_Initialize 0B7E  
               __end_of_i2c1_driver_open 0BAC                                    ?_main 0031  
                         _i2c_readNBytes 094E                 __size_ofi2_i2c_setBuffer 0018  
               __end_of_i2c1_driver_stop 0DEE                            __CFG_WDTE$OFF 000000  
             __end_of_i2c1_driver_TXData 0D60                           __CFG_DEBUG$OFF 000000  
                __size_ofi2_do_I2C_RESET 000E                                    i2l421 0782  
                                  i2l422 0776                                    i2l430 0242  
                                  i2l431 0230                                    i2l440 02A6  
                                  i2l425 077C                                    i2l433 0236  
                                  i2l434 023C                                    i2l451 054C  
                                  i2l267 0072                                    i2l461 05F2  
                                  i2l429 027C                                    i2l445 0542  
                                  i2l462 05FA                                    i2l448 0552  
                                  i2l457 0600                                    i2l449 0546  
                                  i2l482 04E4                                    i2l458 05EC  
                                  i2l469 080C                                    _OSCEN 000EDC  
                                  _TRISA 000F88                                    _TRISB 000F89  
                                  _TRISC 000F8A                                    _TRISD 000F8B  
                                  _TRISE 000F8C                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                            __CFG_WRT4$OFF 000000  
                          __CFG_WRT5$OFF 000000                            __CFG_WRT6$OFF 000000  
                          __CFG_WRT7$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                              i2c_open@ret 0091  
                         __CFG_EBTR4$OFF 000000                           __CFG_EBTR5$OFF 000000  
                         __CFG_EBTR6$OFF 000000                           __CFG_EBTR7$OFF 000000  
                         _i2c_masterRead 0D50                            __CFG_WRTB$OFF 000000  
                  __end_ofi2_returnReset 0E0A                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                   __end_ofi2_mssp1_setIRQ 0DCA  
                         __CFG_EBTRB$OFF 000000               __end_of_i2c1_driver_isNACK 0BD8  
                     __size_ofi2_i2c_ISR 0040               ?_do_I2C_SEND_RESTART_WRITE 0031  
                     __CFG_MCLRE$EXTMCLR 000000                    ??_do_I2C_SEND_RESTART 0046  
                          i2returnStop@p 003C   __end_of_i2c1_driver_setBusCollisionISR 0C8A  
__size_of_i2c1_driver_setBusCollisionISR 000E           _i2c1_driver_setBusCollisionISR 0C7C  
                                  pclath 000FFA                                    tablat 000FF5  
                __size_of_mssp1_clearIRQ 0006                   ?_do_I2C_SEND_ADR_WRITE 0031  
                                  status 000FD8                                    wtemp6 004B  
        __size_ofi2_i2c1_driver_sendNACK 0006                           ?_i2c_setBuffer 0046  
                           ?_setCallBack 0090          __size_ofi2_i2c1_driver_resetBus 0002  
                          _fsmStateTable 0060                          __initialization 0918  
                             _i2c_poller 0B36                               _i2c_status 0001  
                           __end_of_main 0336                            i2_do_I2C_IDLE 0D3E  
                       i2setCallBack@idx 0036                            i2_do_I2C_RCEN 0D34  
                       i2_do_I2C_TX$1023 0032                         __end_of_i2c_open 0194  
                 __end_of_i2c_readNBytes 0984              ?_INTERRUPT_InterruptManager 0031  
                  i2i2c_setBuffer@buffer 0031                         i2_mssp1_clearIRQ 0DBE  
       __end_ofi2_do_I2C_DO_ADDRESS_NACK 07B4          __end_ofi2_rd1RegCompleteHandler 0A4A  
                          setCallBack@cb 0090                            _do_I2C_DO_ACK 0CA6  
                                 ??_main 004A                        ?_i2c_restartWrite 009A  
          __size_of_i2c1_driver_sendNACK 0006                            __activetblptr 000003  
        __end_ofi2_wr1RegCompleteHandler 0A7A                             i2c_close@ret 0046  
                 __end_of_i2c_masterRead 0D58                       ??_i2c_restartWrite 004A  
          __size_of_i2c1_driver_resetBus 0002                  ?_do_I2C_DO_ADDRESS_NACK 0031  
                        ?i2_mssp1_setIRQ 0031       __end_ofi2_do_I2C_SEND_RESTART_READ 0D98  
             i2_do_I2C_SEND_RESTART_READ 0D90                                   _ANSELA 000F11  
                                 _ANSELB 000F19                                   _ANSELC 000F21  
                                 _ANSELD 000F26                                   _ANSELE 000F2E  
               __size_ofi2_do_I2C_DO_ACK 0008                                   _RC3PPS 000EFA  
                                 _RC4PPS 000EFB                                   _ODCONA 000F0F  
                                 _ODCONB 000F17                                   _ODCONC 000F1F  
                                 _ODCOND 000F24                                   _ODCONE 000F2C  
                         __CFG_WDTCCS$SC 000000                       __size_of_i2c_close 001C  
                                 _OSCFRQ 000EDE                  i2_do_I2C_SEND_ADR_WRITE 0CEC  
                 ??_do_I2C_SEND_ADR_READ 0047                 rdBlkRegCompleteHandler@p 009A  
                              ??_i2c_ISR 0049                           __CFG_PWRTE$OFF 000000  
                ??i2_do_I2C_SEND_RESTART 0031                           __CFG_XINST$OFF 000000  
       __size_ofi2_i2c1_driver_getRXData 0004                    _i2c1_driver_getRXData 0DE2  
              __CFG_RSTOSC$HFINTOSC_1MHZ 000000                       i2_i2c1_driver_stop 0E0E  
                    _do_I2C_RX$intlevel0 0430              __end_of_do_I2C_DO_NACK_STOP 0CA6  
    __end_of_i2c_setDataCompleteCallback 0AE2           ?i2_i2c_setDataCompleteCallback 0037  
            _i2c_setDataCompleteCallback 0AC6                           ?i2_do_I2C_IDLE 0031  
                        _i2c_masterWrite 0D48                           ?i2_do_I2C_RCEN 0031  
  __end_of_i2c1_driver_clearBusCollision 0DE2   __size_of_i2c1_driver_clearBusCollision 0006  
          _i2c1_driver_clearBusCollision 0DDC                           __CFG_STVREN$ON 000000  
                      __end_ofi2_i2c_ISR 0838          __size_of_do_I2C_DO_NACK_RESTART 000E  
                      ??_i2c_writeNBytes 004A                          ?_i2c_readNBytes 0092  
                         i2returnReset@p 003C                                   clear_0 093E  
                         ?_do_I2C_DO_ACK 0031                      ?i2_i2c1_driver_stop 0031  
         i2i2c_setDataCompleteCallback@p 003A                   i2_i2c1_driver_sendNACK 0DCA  
                 i2c1_driver_setI2cISR@f 0046              __end_of_i2c1_driver_sendACK 0DB2  
                         _PMD_Initialize 0AFE           __end_of_do_I2C_DO_ADDRESS_NACK 0728  
                        ?_i2c_masterRead 0031                   i2_i2c1_driver_resetBus 0E18  
            ?_i2c_setAddressNACKCallback 0095     __size_ofi2_do_I2C_SEND_RESTART_WRITE 0008  
            __end_of_i2c1_driver_restart 0DF2                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                           ?_returnReset 009A            _do_I2C_DO_NACK_STOP$intlevel0 0C9E  
                  _i2c1_driver_setI2cISR 0C6E              __end_of_i2c1_driver_startRX 0DEA  
                  __size_ofi2_returnStop 0004                        ??i2_i2c_setBuffer 0035  
         __size_ofi2_do_I2C_DO_NACK_STOP 0008            __size_of_INTERRUPT_Initialize 0004  
          __end_ofi2_do_I2C_DO_NACK_STOP 0D70                        _SYSTEM_Initialize 0C3C  
                             __accesstop 0060                     ??i2_i2c1_driver_stop 0031  
                __end_of__initialization 0944                          ??_i2c_setBuffer 004A  
         _do_I2C_SEND_ADR_READ$intlevel0 0C08                         _do_I2C_SEND_STOP 0CB4  
                     __size_of_do_I2C_RX 0078                       __size_of_do_I2C_TX 0092  
                     ?_SYSTEM_Initialize 0031                            ___rparam_used 000001  
             __end_of_mssp1_IRQisEnabled 0C3C        _rdBlkRegCompleteHandler$intlevel0 0694  
                    _i2c_masterOperation 0984                 __size_of_do_I2C_TX_EMPTY 005C  
             ?i2_rdBlkRegCompleteHandler 003C                  _rdBlkRegCompleteHandler 068E  
         __size_ofi2_i2c1_driver_sendACK 0006               __end_of_mssp1_waitForEvent 0BC2  
          __end_ofi2_i2c1_driver_sendACK 0DD6                              ?_i2c_poller 0031  
                         __pcstackCOMRAM 0031                      _do_I2C_TX$intlevel0 019A  
                           __pidataBANK0 09BA                      ??_SYSTEM_Initialize 0046  
         __size_ofi2_i2c1_driver_restart 0004            __end_ofi2_i2c1_driver_restart 0E16  
                       _mssp1_disableIRQ 0DB2           __size_ofi2_i2c1_driver_startRX 0004  
          __end_ofi2_i2c1_driver_startRX 0E02                   __end_of_PMD_Initialize 0B1A  
                      __end_of_i2c_close 0AFE                             i2_returnStop 0E0A  
                         i2_do_I2C_RESET 0D08                     ?_i2c_masterOperation 0031  
               i2_do_I2C_DO_ADDRESS_NACK 076E                             ?i2_do_I2C_RX 0031  
                           ?i2_do_I2C_TX 0031        __size_ofi2_do_I2C_DO_NACK_RESTART 0008  
               i2rd2RegCompleteHandler@p 003C                           setCallBack@idx 0046  
              ?i2_do_I2C_DO_NACK_RESTART 0031                   _do_I2C_DO_NACK_RESTART 0C8A  
                         _do_I2C_TX$1023 0047                __end_of_SYSTEM_Initialize 0C4E  
              ??i2_do_I2C_SEND_ADR_WRITE 0032               __end_ofi2_do_I2C_SEND_STOP 0D80  
                         _mssp1_clearIRQ 0DB8            __size_ofi2_i2c1_driver_TXData 0008  
         __size_of_rd2RegCompleteHandler 0038                                ?_i2c_open 0031  
          __end_of_rd2RegCompleteHandler 0870           __size_of_wr2RegCompleteHandler 0038  
          __end_of_wr2RegCompleteHandler 0918                  __end_of_i2c_masterWrite 0D50  
       __size_ofi2_rd1RegCompleteHandler 0030                    _rd1RegCompleteHandler 0870  
                 ?_i2c1_driver_getRXData 0031                        ??i2_do_I2C_DO_ACK 0031  
               i2wr2RegCompleteHandler@p 003C            __size_ofi2_i2c1_driver_isNACK 0016  
                  _do_I2C_IDLE$intlevel0 0C64                        i2_do_I2C_TX_EMPTY 05E8  
       __size_ofi2_wr1RegCompleteHandler 0030                          ??i2_do_I2C_IDLE 0031  
                  _wr1RegCompleteHandler 08A8                           _SSP1DATPPSbits 000EB8  
           __size_of_i2c_busCollisionISR 0006                          ??i2_do_I2C_RCEN 0031  
        _wr1RegCompleteHandler$intlevel0 08AE          _rd1RegCompleteHandler$intlevel0 0876  
                          ??_do_I2C_IDLE 0046                     __size_of_setCallBack 007A  
                          ??_do_I2C_RCEN 0046        __end_ofi2_rdBlkRegCompleteHandler 07F8  
                  i2c_readNBytes@address 0096                       ?i2_do_I2C_TX_EMPTY 0031  
                        __CFG_PPS1WAY$ON 000000                          ??_do_I2C_DO_ACK 0046  
                 __end_ofi2_do_I2C_RESET 0D16                      i2c_setBuffer@buffer 0046  
                         _SSP1CLKPPSbits 000EB7                          ?_PMD_Initialize 0031  
         ?_i2c1_driver_clearBusCollision 0031                      ??i2_do_I2C_TX_EMPTY 0031  
                  ??_i2c_masterOperation 0049                        ?_i2c1_driver_open 0031  
                      __end_of_do_I2C_RX 04A2                        __end_of_do_I2C_TX 0226  
               ??i2_do_I2C_SEND_ADR_READ 0032                        ?_i2c1_driver_stop 0031  
                 ?_i2c1_driver_setI2cISR 0046                       ??_i2c1_driver_open 0046  
               ?i2_rd2RegCompleteHandler 003C                       ??_i2c1_driver_stop 0046  
                                _OSCCON1 000ED8                                  _OSCCON3 000EDA  
                          ?_mssp1_setIRQ 0031                   __size_ofi2_setCallBack 0078  
                                _OSCTUNE 000EDD                                  _SSP1ADD 000F93  
               ?i2_wr2RegCompleteHandler 003C                                  _SSP1BUF 000F92  
                 __end_of_mssp1_clearIRQ 0DBE                                  _SSP1MSK 000F94  
                    __size_of_i2c_poller 0018                  ??_do_I2C_SEND_ADR_WRITE 0047  
    _do_I2C_SEND_RESTART_WRITE$intlevel0 0CD6              ??_do_I2C_SEND_RESTART_WRITE 0046  
                     _i2c1_driver_TXData 0D58                               ??_i2c_open 0049  
            __size_ofi2_i2c_restartWrite 0004                 __end_ofi2_mssp1_clearIRQ 0DC4  
                     _i2c1_driver_i2cISR 002B                                  _i2c_ISR 0728  
              ??_rdBlkRegCompleteHandler 004A                __end_ofi2_do_I2C_TX_EMPTY 063E  
                i2_i2c1_driver_getRXData 0DFA                                  __Hparam 0000  
                  _returnReset$intlevel0 0D26                    _do_I2C_RCEN$intlevel0 0C54  
                     _i2c1_driver_isNACK 0BC2                      ?_i2c1_driver_TXData 0031  
                                __Lparam 0000         _do_I2C_DO_ADDRESS_NACK$intlevel0 06E2  
    __size_of_i2c_setAddressNACKCallback 001C                        ??_do_I2C_TX_EMPTY 0046  
                    ?_i2c1_driver_isNACK 0031                          ?i2_do_I2C_RESET 0031  
                                __pcinit 0918                                  __ramtop 0F00  
                 i2c_writeNBytes@address 009E                       i2c_readNBytes@data 0092  
                                __ptext0 02B2                                  __ptext1 063E  
                                __ptext2 0AAA                                  __ptext3 0D48  
                                __ptext4 094E                                  __ptext5 00E0  
                                __ptext6 0C6E                                  __ptext7 0C7C  
                                __ptext8 0B96                                  __ptext9 0D50  
                    __end_of_do_I2C_IDLE 0C6E                      __end_of_do_I2C_RCEN 0C5E  
                       ??i2_mssp1_setIRQ 0031                    _OSCILLATOR_Initialize 0B66  
            __end_of_do_I2C_SEND_RESTART 0CD0                           ??_mssp1_setIRQ 0046  
                   ??_i2c1_driver_TXData 0046                 ??_PIN_MANAGER_Initialize 0046  
                 i2c_masterOperation@ret 0091                          ?_mssp1_clearIRQ 0031  
             _do_I2C_SEND_STOP$intlevel0 0CBA              ?i2_do_I2C_SEND_RESTART_READ 0031  
               _do_I2C_SEND_RESTART_READ 0CDE               __size_of_SYSTEM_Initialize 0012  
                                main@rec 00A1                     __size_of_returnReset 000A  
                   end_of_initialization 0944                     ??_i2c1_driver_isNACK 0046  
              __size_of_i2c_restartWrite 000A             __end_of_i2c1_driver_sendNACK 0DAC  
                 ?_rd1RegCompleteHandler 009A                          _i2c_writeNBytes 063E  
                       ?_i2c_masterWrite 0031                   ?_wr1RegCompleteHandler 009A  
           __end_of_i2c1_driver_resetBus 0E18                         ??_i2c_readNBytes 004A  
                          i2_setCallBack 04A2           __size_ofi2_do_I2C_SEND_RESTART 0008  
          __end_ofi2_do_I2C_SEND_RESTART 0D88                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc2 000FDE                   __size_ofi2_returnReset 0004  
           ?i2_do_I2C_SEND_RESTART_WRITE 0031                _do_I2C_SEND_RESTART_WRITE 0CD0  
                ?i2_i2c1_driver_sendNACK 0031                         ??_i2c_masterRead 0049  
                  __CFG_WDTCPS$WDTCPS_31 000000                          i2_i2c_setBuffer 0B7E  
                ?i2_i2c1_driver_resetBus 0031          __end_ofi2_rd2RegCompleteHandler 0A1A  
                             _returnStop 0D2A          __end_of_rdBlkRegCompleteHandler 06DC  
               __end_of_do_I2C_SEND_STOP 0CC2                                i2_i2c_ISR 07F8  
        __end_ofi2_wr2RegCompleteHandler 0AAA          __size_ofi2_do_I2C_SEND_ADR_READ 000E  
   __size_of_i2c_setDataCompleteCallback 001C          ??i2_i2c_setDataCompleteCallback 003C  
                            returnStop@p 009A                         __CFG_FEXTOSC$OFF 000000  
               __end_of_mssp1_disableIRQ 0DB8                     __size_ofi2_do_I2C_RX 0072  
                   __size_ofi2_do_I2C_TX 008C             i2c_setDataCompleteCallback@p 0098  
              ??i2_i2c1_driver_getRXData 0031                  i2_rd1RegCompleteHandler 0A1A  
             __size_ofi2_do_I2C_TX_EMPTY 0056                  i2_wr1RegCompleteHandler 0A4A  
          __size_of_do_I2C_SEND_ADR_READ 0014                           ?i2_setCallBack 0031  
                           ??_i2c_poller 0049              ??i2_rdBlkRegCompleteHandler 003E  
         __end_ofi2_i2c1_driver_sendNACK 0DD0                              _do_I2C_IDLE 0C5E  
                            _do_I2C_RCEN 0C4E             __end_of_INTERRUPT_Initialize 0DFA  
         __end_ofi2_i2c1_driver_resetBus 0E1A               ??i2_do_I2C_DO_ADDRESS_NACK 0031  
       __end_ofi2_do_I2C_DO_NACK_RESTART 0D68            ??i2_do_I2C_SEND_RESTART_WRITE 0031  
                     _mssp1_IRQisEnabled 0C2A                   ?_OSCILLATOR_Initialize 0031  
                             ?i2_i2c_ISR 0031             __size_of_do_I2C_DO_NACK_STOP 000E  
                     _mssp1_waitForEvent 0BAC                  ?_do_I2C_DO_NACK_RESTART 0031  
                    start_initialization 0918                                _i2c_close 0AE2  
                    _i2c_busCollisionISR 0DD6          __size_of_PIN_MANAGER_Initialize 007A  
                    ?_mssp1_IRQisEnabled 0031                          i2setCallBack@cb 0031  
                __end_of_i2c_writeNBytes 068E                          i2_do_I2C_DO_ACK 0D70  
                          i2_returnReset 0E06                      ?_mssp1_waitForEvent 0046  
                           setCallBack@p 0093                       __end_of_i2c_poller 0B4E  
           __size_of_i2c1_driver_sendACK 0006                          i2c_open@address 0090  
                i2c_setBuffer@bufferSize 0048                  ??_i2c1_driver_getRXData 0046  
                 rd1RegCompleteHandler@p 009A             __size_of_i2c1_driver_restart 0004  
            __size_ofi2_i2c1_driver_stop 0004             __size_of_i2c1_driver_startRX 0004  
                  i2_do_I2C_DO_NACK_STOP 0D68                   i2_do_I2C_SEND_ADR_READ 0CFA  
                  __end_of_i2c_setBuffer 0B66                        __size_of_i2c_open 00B4  
                   ?_i2c_busCollisionISR 0031                         __CFG_LPBOREN$OFF 000000  
                   __end_of_mssp1_setIRQ 0DA6                  __end_ofi2_i2c_setBuffer 0B96  
                   ??_mssp1_IRQisEnabled 0046                       i2_do_I2C_SEND_STOP 0D78  
                       ??_PMD_Initialize 0046                     ??_mssp1_waitForEvent 0048  
                 wr1RegCompleteHandler@p 009A                    i2_i2c1_driver_sendACK 0DD0  
                          ?_do_I2C_RESET 0031             __end_ofi2_i2c1_driver_TXData 0DA0  
                            __pdataBANK0 0060                    i2i2c1_driver_TXData@d 0031  
              _do_I2C_TX_EMPTY$intlevel0 0592      __size_ofi2_do_I2C_SEND_RESTART_READ 0008  
                  i2_i2c1_driver_restart 0E12                              ?_returnStop 009A  
                    ?i2_do_I2C_SEND_STOP 0031                  ??_i2c1_driver_setI2cISR 0049  
                  i2_i2c1_driver_startRX 0DFE                      i2i2c_restartWrite@p 003C  
         __end_of_do_I2C_DO_NACK_RESTART 0C98                     _i2c1_driver_sendNACK 0DA6  
           __end_ofi2_i2c1_driver_isNACK 0BEE                              __pbssCOMRAM 0001  
                             ?_i2c_close 0031                     _i2c1_driver_resetBus 0E16  
              i2_rdBlkRegCompleteHandler 07B4                            __pcstackBANK0 0090  
                         ?i2_returnReset 003C                                _do_I2C_RX 042A  
                              _do_I2C_TX 0194                ??i2_rd1RegCompleteHandler 003E  
         __size_of_do_I2C_SEND_ADR_WRITE 0014    __end_ofi2_i2c_setDataCompleteCallback 0B36  
 __size_ofi2_i2c_setDataCompleteCallback 001C            i2_i2c_setDataCompleteCallback 0B1A  
          __end_of_do_I2C_SEND_ADR_WRITE 0C02                ??i2_wr1RegCompleteHandler 003E  
                       _i2c_restartWrite 0D16                     ??i2_do_I2C_SEND_STOP 0031  
             _i2c_restartWrite$intlevel0 0D1C                __size_of_i2c1_driver_open 0016  
                      ?i2_mssp1_clearIRQ 0031                __size_of_i2c1_driver_stop 0004  
                        ??i2_setCallBack 0036                                 ?_i2c_ISR 0031  
        _do_I2C_SEND_ADR_WRITE$intlevel0 0BF4                          _do_I2C_TX_EMPTY 058C  
                          ??_setCallBack 0046         __size_ofi2_rd2RegCompleteHandler 0030  
                  _rd2RegCompleteHandler 0838                       ??i2_mssp1_clearIRQ 0031  
                  ??_i2c_busCollisionISR 0031         __size_ofi2_wr2RegCompleteHandler 0030  
                 _PIN_MANAGER_Initialize 03B0                    _wr2RegCompleteHandler 08E0  
                       ??i2_do_I2C_RESET 0031                                __pintcode 0008  
                  __end_ofi2_do_I2C_IDLE 0D48                    __end_ofi2_do_I2C_RCEN 0D3E  
                         ??_do_I2C_RESET 0046                                __ptext100 0DD0  
                              __ptext101 0DD6                                __ptext102 0DDC  
                              __ptext103 0000              __end_of_i2c_masterOperation 09BA  
               ??_do_I2C_DO_ADDRESS_NACK 0046              _i2c1_driver_busCollisionISR 002E  
                  __end_of_do_I2C_DO_ACK 0CB4             ??_INTERRUPT_InterruptManager 0034  
             ??_do_I2C_SEND_RESTART_READ 0046                    ?_i2c1_driver_sendNACK 0031  
                            ??i2_i2c_ISR 0034                  __end_ofi2_do_I2C_DO_ACK 0D78  
                       ??_mssp1_clearIRQ 0046                 i2_do_I2C_DO_NACK_RESTART 0D60  
                  ?_i2c1_driver_resetBus 0031       __size_of_do_I2C_SEND_RESTART_WRITE 000E  
               ?i2_do_I2C_SEND_ADR_WRITE 0031                               ?_do_I2C_RX 0031  
                             ?_do_I2C_TX 0031                        _i2c1_driver_start 0DF2  
                       ?_i2c_writeNBytes 009A               __end_ofi2_i2c_restartWrite 0E06  
                ??_rd1RegCompleteHandler 004A                        i2c_readNBytes@len 0094  
                   _INTERRUPT_Initialize 0DF6                        _i2c_ISR$intlevel0 072E  
                     ?_i2c1_driver_start 0031                  ??_wr1RegCompleteHandler 004A  
                 ?i2_do_I2C_DO_NACK_STOP 0031                                 _LATAbits 000F83  
                    __size_of_returnStop 000A                                 _PIE3bits 000EC5  
                    __CFG_BORV$VBOR_2P45 000000                      ??_i2c1_driver_start 0046  
                               i2u142_48 0792                                 i2u142_49 07A6  
    __size_of_INTERRUPT_InterruptManager 00D4                                 i2u144_48 0252  
                               i2u144_49 0266                                 i2u162_48 007C  
                               i2u162_49 0090                                 i2u147_48 0562  
                               i2u155_48 0820                                 i2u147_49 0576  
                               i2u155_49 0834                                 i2u148_48 0610  
                               i2u148_49 0624                                 i2u159_48 0062  
                               _PIR3bits 000ECD                         ?i2_i2c_setBuffer 0031  
                 ?i2_i2c1_driver_sendACK 0031                                 _SSP1CON1 000F96  
                               _SSP1CON2 000F97             ?_i2c_setDataCompleteCallback 0095  
                               _SSP1STAT 000F95                      __end_of_setCallBack 03B0  
                 ?i2_i2c1_driver_restart 0031                   ?i2_i2c1_driver_startRX 0031  
           i2c_setAddressNACKCallback@cb 0095                        ?_do_I2C_SEND_STOP 0031  
                        ??i2_returnReset 003E                              ??_i2c_close 0046  
              __end_of_i2c1_driver_start 0DF6                            ??_returnReset 004A  
                     ??_do_I2C_SEND_STOP 0046              __size_of_i2c1_driver_TXData 0008  
           ??_i2c_setAddressNACKCallback 0047        __end_of_do_I2C_SEND_RESTART_WRITE 0CDE  
                __end_of_do_I2C_TX_EMPTY 05E8                                copy_data0 092C  
                  ?_INTERRUPT_Initialize 0031                 ?_rdBlkRegCompleteHandler 009A  
                      ?_mssp1_disableIRQ 0031             __size_of_do_I2C_SEND_RESTART 000E  
            __size_of_i2c1_driver_isNACK 0016                     i2_i2c1_driver_TXData 0D98  
                _do_I2C_DO_ACK$intlevel0 0CAC                                 _i2c_open 00E0  
                  __size_of_mssp1_setIRQ 0006                           i2setCallBack@p 0034  
                     ??_mssp1_disableIRQ 0046                   ?_rd2RegCompleteHandler 009A  
                    _do_I2C_DO_NACK_STOP 0C98                         __size_of_i2c_ISR 0046  
                 ?_wr2RegCompleteHandler 009A          _wr2RegCompleteHandler$intlevel0 08E6  
        _rd2RegCompleteHandler$intlevel0 083E                                 __Hrparam 0000  
                   i2_i2c1_driver_isNACK 0BD8                                 __Lrparam 0000  
                     __CFG_BOREN$SBORDIS 000000                      i2c_writeNBytes@data 009A  
                           ?_do_I2C_IDLE 0031                             ?_do_I2C_RCEN 0031  
                ??_OSCILLATOR_Initialize 0046                      _i2c1_driver_sendACK 0DAC  
               __size_of_i2c_masterWrite 0008                    i2_do_I2C_SEND_RESTART 0D80  
        __size_of_do_I2C_DO_ADDRESS_NACK 004C                      i2c1_driver_TXData@d 0046  
                 ??_i2c1_driver_sendNACK 0046            ??_i2c_setDataCompleteCallback 0047  
        __end_ofi2_do_I2C_SEND_ADR_WRITE 0CFA         ??_i2c1_driver_setBusCollisionISR 0049  
        ?_i2c1_driver_setBusCollisionISR 0046       _do_I2C_SEND_RESTART_READ$intlevel0 0CE4  
                    _i2c1_driver_restart 0DEE                            ?i2_returnStop 003C  
                   ?_do_I2C_DO_NACK_STOP 0031                      _i2c1_driver_startRX 0DE6  
           __end_of_do_I2C_SEND_ADR_READ 0C16                   ??_i2c1_driver_resetBus 0046  
                       ?i2_do_I2C_DO_ACK 0031                            ??i2_do_I2C_RX 0031  
                          ??i2_do_I2C_TX 0032                             _mssp1_setIRQ 0DA0  
                            ??_do_I2C_RX 0046                              ??_do_I2C_TX 0047  
                               __ptext10 0984                                 __ptext11 0C2A  
                               __ptext20 0CA6                                 __ptext12 0B36  
                               __ptext21 0C4E                                 __ptext13 0BAC  
                               __ptext30 058C                                 __ptext22 0BEE  
                               __ptext14 0728                                 __ptext31 0DA0  
                               __ptext23 0C02                                 __ptext15 042A  
                               __ptext40 0870                                 __ptext32 0BC2  
                               __ptext24 0CB4                                 __ptext16 0194  
                               __ptext41 08A8                                 __ptext33 0D58  
                               __ptext25 0CC2                                 __ptext17 06DC  
                               __ptext50 0DEE                                 __ptext42 0D16  
                               __ptext34 0DE2                                 __ptext26 0CD0  
                               __ptext18 0C8A                                 __ptext51 0DAC  
                               __ptext43 0D20                                 __ptext35 0DA6  
                               __ptext27 0CDE                                 __ptext19 0C98  
                               __ptext60 0DF6                                 __ptext52 0DF2  
                               __ptext44 0D2A                                 __ptext36 0E16  
                               __ptext28 0C5E                                 __ptext53 0AE2  
                               __ptext45 08E0                                 __ptext37 0DE6  
                               __ptext29 0C16                                 __ptext70 0D34  
                               __ptext62 07F8                                 __ptext54 0DB2  
                               __ptext46 0AC6                                 __ptext38 068E  
                               __ptext71 0CEC                                 __ptext63 0DBE  
                               __ptext55 0DB8                                 __ptext47 0336  
                               __ptext39 0838                                 __ptext80 0DC4  
                               __ptext72 0CFA                                 __ptext64 051A  
                               __ptext56 0C3C                                 __ptext48 0B4E  
                               __ptext81 0BD8                                 __ptext73 0D78  
                               __ptext65 0226                                 __ptext57 0AFE  
                               __ptext49 0DEA                                 __ptext90 0A4A  
                               __ptext82 0D98                                 __ptext74 0D80  
                               __ptext66 076E                                 __ptext58 03B0  
                               __ptext91 0E02                                 __ptext83 0DFA  
                               __ptext75 0D88                                 __ptext67 0D60  
                               __ptext59 0B66                                 __ptext92 0E06  
                               __ptext84 0DCA                                 __ptext76 0D90  
                               __ptext68 0D68                                 __ptext93 0E0A  
                               __ptext85 0E18                                 __ptext77 0D3E  
                               __ptext69 0D70                                 __ptext94 0A7A  
                               __ptext86 0DFE                                 __ptext78 0D08  
                               __ptext95 0B1A                                 __ptext87 07B4  
                               __ptext79 05E8                                 __ptext96 04A2  
                               __ptext88 09EA                                 __ptext97 0B7E  
                               __ptext89 0A1A                                 __ptext98 0E0E  
                               __ptext99 0E12                             _SSP1CON1bits 000F96  
                           _SSP1CON2bits 000F97                     ?_i2c1_driver_sendACK 0031  
                   __end_of_do_I2C_RESET 0C2A                    ?i2_i2c1_driver_TXData 0031  
                ?i2_do_I2C_SEND_ADR_READ 0031                  __size_ofi2_mssp1_setIRQ 0006  
                   ?_i2c1_driver_restart 0031                      __end_of_returnReset 0D2A  
                       _i2c1_driver_open 0B96       __size_ofi2_rdBlkRegCompleteHandler 0044  
                i2_rd2RegCompleteHandler 09EA                         _i2c1_driver_stop 0DEA  
                          __size_of_main 0084                     ?_i2c1_driver_startRX 0031  
         __size_of_i2c1_driver_getRXData 0004            __end_of_i2c1_driver_getRXData 0DE6  
                i2_wr2RegCompleteHandler 0A7A                     __CFG_WDTCWS$WDTCWS_7 000000  
                            _setCallBack 0336                    ?i2_i2c1_driver_isNACK 0031  
                i2c_masterOperation@read 0090                                 int$flags 004A  
     __end_of_INTERRUPT_InterruptManager 00DC               _INTERRUPT_InterruptManager 0008  
                               main@addr 00A3                                 main@data 009F  
                           _SSP1STATbits 000F95                           ??i2_returnStop 003E  
       __end_of_do_I2C_SEND_RESTART_READ 0CEC                             ??_returnStop 004A  
               __end_of_i2c_restartWrite 0D20                    ??_do_I2C_DO_NACK_STOP 0046  
                __size_of_i2c_readNBytes 0036                mssp1_waitForEvent@timeout 0046  
         __size_of_i2c1_driver_setI2cISR 000E            __end_of_i2c1_driver_setI2cISR 0C7C  
                             _INTCONbits 000FF2               __size_of_i2c1_driver_start 0004  
                     i2c_writeNBytes@len 009C                   ??_INTERRUPT_Initialize 0046  
               ?i2_i2c1_driver_getRXData 0031                  __size_of_i2c_masterRead 0008  
         __end_ofi2_do_I2C_SEND_ADR_READ 0D08                    ??_i2c1_driver_sendACK 0046  
                       ?_do_I2C_TX_EMPTY 0031        __size_ofi2_do_I2C_DO_ADDRESS_NACK 0046  
             __end_ofi2_i2c1_driver_stop 0E12                ?i2_do_I2C_DO_ADDRESS_NACK 0031  
                 _do_I2C_DO_ADDRESS_NACK 06DC                                 intlevel2 0000  
                 _do_I2C_RESET$intlevel0 0C1C                    ??_i2c1_driver_restart 0046  
                 rd2RegCompleteHandler@p 009A                    ??_i2c1_driver_startRX 0046  
             i2rdBlkRegCompleteHandler@p 003C                      __end_ofi2_do_I2C_RX 058C  
                    __end_ofi2_do_I2C_TX 02B2                  ?_PIN_MANAGER_Initialize 0031  
                      i2c_restartWrite@p 009A                        __CFG_CLKOUTEN$OFF 000000  
                     __end_of_returnStop 0D34              __size_of_mssp1_IRQisEnabled 0012  
    __end_ofi2_do_I2C_SEND_RESTART_WRITE 0D90              i2_do_I2C_SEND_RESTART_WRITE 0D88  
                 ?i2_do_I2C_SEND_RESTART 0031               ??i2_do_I2C_DO_NACK_RESTART 0031  
                 wr2RegCompleteHandler@p 009A              __size_of_mssp1_waitForEvent 0016  
              i2i2c_setBuffer@bufferSize 0033                __size_ofi2_mssp1_clearIRQ 0006  
                      ??_i2c_masterWrite 0049       __end_of_i2c_setAddressNACKCallback 0AC6  
             _i2c_setAddressNACKCallback 0AAA                   __size_of_i2c_setBuffer 0018  
                            _returnReset 0D20         _do_I2C_DO_NACK_RESTART$intlevel0 0C90  
               i2rd1RegCompleteHandler@p 003C                  ??i2_do_I2C_DO_NACK_STOP 0031  
                 ??i2_i2c1_driver_TXData 0031                ??i2_rd2RegCompleteHandler 003E  
           ??i2_do_I2C_SEND_RESTART_READ 0031           __end_of_PIN_MANAGER_Initialize 042A  
            __end_of_i2c_busCollisionISR 0DDC           __size_of_rd1RegCompleteHandler 0038  
              ??i2_wr2RegCompleteHandler 003E            __end_of_rd1RegCompleteHandler 08A8  
            __size_ofi2_do_I2C_SEND_STOP 0008                 ??i2_i2c1_driver_sendNACK 0031  
         __size_of_wr1RegCompleteHandler 0038                   ??i2_i2c1_driver_isNACK 0031  
          __end_of_wr1RegCompleteHandler 08E0         __size_ofi2_do_I2C_SEND_ADR_WRITE 000E  
                  _do_I2C_SEND_ADR_WRITE 0BEE                  ??i2_i2c1_driver_sendACK 0031  
                   _do_I2C_SEND_ADR_READ 0C02                    __end_ofi2_setCallBack 051A  
               ??i2_i2c1_driver_resetBus 0031                 i2wr1RegCompleteHandler@p 003C  
                ??i2_i2c1_driver_restart 0031                       i2_i2c_restartWrite 0E02  
