

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 20 11:35:23 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1,inline
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	text82,global,reloc=2,class=CODE,delta=1
    95                           	psect	text83,global,reloc=2,class=CODE,delta=1
    96                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text91,global,reloc=2,class=CODE,delta=1
   104                           	psect	text92,global,reloc=2,class=CODE,delta=1
   105                           	psect	text93,global,reloc=2,class=CODE,delta=1
   106                           	psect	text94,global,reloc=2,class=CODE,delta=1
   107                           	psect	text95,global,reloc=2,class=CODE,delta=1
   108                           	psect	text96,global,reloc=2,class=CODE,delta=1
   109                           	psect	text97,global,reloc=2,class=CODE,delta=1
   110                           	psect	text98,global,reloc=2,class=CODE,delta=1
   111                           	psect	text99,global,reloc=2,class=CODE,delta=1
   112                           	psect	text100,global,reloc=2,class=CODE,delta=1
   113                           	psect	text101,global,reloc=2,class=CODE,delta=1
   114                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text103,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   117                           	psect	text105,global,reloc=2,class=CODE,delta=1
   118                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   119                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   120                           	psect	text107,global,reloc=2,class=CODE,delta=1,inline
   121                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   122                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   123  0000                     
   124                           ; Version 1.45
   125                           ; Generated 16/11/2017 GMT
   126                           ; 
   127                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F47K40 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159                           	psect	idataBANK0
   160  0009EA                     __pidataBANK0:
   161                           	opt stack 0
   162                           
   163                           ;initializer for _fsmStateTable
   164  0009EA  EC                 	db	low _do_I2C_IDLE
   165  0009EB  0C                 	db	high _do_I2C_IDLE
   166  0009EC  00                 	db	low (_do_I2C_IDLE shr (0+16))
   167  0009ED  90                 	db	low _do_I2C_SEND_ADR_READ
   168  0009EE  0C                 	db	high _do_I2C_SEND_ADR_READ
   169  0009EF  00                 	db	low (_do_I2C_SEND_ADR_READ shr (0+16))
   170  0009F0  7C                 	db	low _do_I2C_SEND_ADR_WRITE
   171  0009F1  0C                 	db	high _do_I2C_SEND_ADR_WRITE
   172  0009F2  00                 	db	low (_do_I2C_SEND_ADR_WRITE shr (0+16))
   173  0009F3  68                 	db	low _do_I2C_TX
   174  0009F4  02                 	db	high _do_I2C_TX
   175  0009F5  00                 	db	low (_do_I2C_TX shr (0+16))
   176  0009F6  18                 	db	low _do_I2C_RX
   177  0009F7  04                 	db	high _do_I2C_RX
   178  0009F8  00                 	db	low (_do_I2C_RX shr (0+16))
   179  0009F9  DC                 	db	low _do_I2C_RCEN
   180  0009FA  0C                 	db	high _do_I2C_RCEN
   181  0009FB  00                 	db	low (_do_I2C_RCEN shr (0+16))
   182  0009FC  F2                 	db	low _do_I2C_TX_EMPTY
   183  0009FD  05                 	db	high _do_I2C_TX_EMPTY
   184  0009FE  00                 	db	low (_do_I2C_TX_EMPTY shr (0+16))
   185  0009FF  6C                 	db	low _do_I2C_SEND_RESTART_READ
   186  000A00  0D                 	db	high _do_I2C_SEND_RESTART_READ
   187  000A01  00                 	db	low (_do_I2C_SEND_RESTART_READ shr (0+16))
   188  000A02  5E                 	db	low _do_I2C_SEND_RESTART_WRITE
   189  000A03  0D                 	db	high _do_I2C_SEND_RESTART_WRITE
   190  000A04  00                 	db	low (_do_I2C_SEND_RESTART_WRITE shr (0+16))
   191  000A05  50                 	db	low _do_I2C_SEND_RESTART
   192  000A06  0D                 	db	high _do_I2C_SEND_RESTART
   193  000A07  00                 	db	low (_do_I2C_SEND_RESTART shr (0+16))
   194  000A08  42                 	db	low _do_I2C_SEND_STOP
   195  000A09  0D                 	db	high _do_I2C_SEND_STOP
   196  000A0A  00                 	db	low (_do_I2C_SEND_STOP shr (0+16))
   197  000A0B  34                 	db	low _do_I2C_DO_ACK
   198  000A0C  0D                 	db	high _do_I2C_DO_ACK
   199  000A0D  00                 	db	low (_do_I2C_DO_ACK shr (0+16))
   200  000A0E  26                 	db	low _do_I2C_DO_NACK_STOP
   201  000A0F  0D                 	db	high _do_I2C_DO_NACK_STOP
   202  000A10  00                 	db	low (_do_I2C_DO_NACK_STOP shr (0+16))
   203  000A11  18                 	db	low _do_I2C_DO_NACK_RESTART
   204  000A12  0D                 	db	high _do_I2C_DO_NACK_RESTART
   205  000A13  00                 	db	low (_do_I2C_DO_NACK_RESTART shr (0+16))
   206  000A14  A4                 	db	low _do_I2C_RESET
   207  000A15  0C                 	db	high _do_I2C_RESET
   208  000A16  00                 	db	low (_do_I2C_RESET shr (0+16))
   209  000A17  3E                 	db	low _do_I2C_DO_ADDRESS_NACK
   210  000A18  07                 	db	high _do_I2C_DO_ADDRESS_NACK
   211  000A19  00                 	db	low (_do_I2C_DO_ADDRESS_NACK shr (0+16))
   212  0000                     _TX2REG	set	3738
   213  0000                     _RC2REG	set	3737
   214  0000                     _RC2STAbits	set	3741
   215  0000                     _TX2STAbits	set	3742
   216  0000                     _SP2BRGH	set	3740
   217  0000                     _SP2BRGL	set	3739
   218  0000                     _TX2STA	set	3742
   219  0000                     _RC2STA	set	3741
   220  0000                     _BAUD2CON	set	3743
   221  0000                     _SSP1DATPPSbits	set	3768
   222  0000                     _RX2PPSbits	set	3725
   223  0000                     _SSP1CLKPPSbits	set	3767
   224  0000                     _RC4PPS	set	3835
   225  0000                     _RC3PPS	set	3834
   226  0000                     _PIR3bits	set	3789
   227  0000                     _PIE3bits	set	3781
   228  0000                     _PMD5	set	3814
   229  0000                     _PMD4	set	3813
   230  0000                     _PMD3	set	3812
   231  0000                     _PMD2	set	3811
   232  0000                     _PMD1	set	3810
   233  0000                     _PMD0	set	3809
   234  0000                     _OSCTUNE	set	3805
   235  0000                     _OSCFRQ	set	3806
   236  0000                     _OSCEN	set	3804
   237  0000                     _OSCCON3	set	3802
   238  0000                     _OSCCON1	set	3800
   239  0000                     _RD7PPS	set	3846
   240  0000                     _ODCOND	set	3876
   241  0000                     _ODCONC	set	3871
   242  0000                     _ODCONB	set	3863
   243  0000                     _ODCONA	set	3855
   244  0000                     _ODCONE	set	3884
   245  0000                     _WPUC	set	3872
   246  0000                     _WPUA	set	3856
   247  0000                     _WPUB	set	3864
   248  0000                     _WPUE	set	3885
   249  0000                     _WPUD	set	3877
   250  0000                     _ANSELA	set	3857
   251  0000                     _ANSELE	set	3886
   252  0000                     _ANSELD	set	3878
   253  0000                     _ANSELB	set	3865
   254  0000                     _ANSELC	set	3873
   255  0000                     _LATAbits	set	3971
   256  0000                     _INTCONbits	set	4082
   257  0000                     _TRISD	set	3979
   258  0000                     _TRISC	set	3978
   259  0000                     _TRISB	set	3977
   260  0000                     _TRISA	set	3976
   261  0000                     _TRISE	set	3980
   262  0000                     _LATC	set	3973
   263  0000                     _LATB	set	3972
   264  0000                     _LATA	set	3971
   265  0000                     _LATD	set	3974
   266  0000                     _LATE	set	3975
   267  0000                     _SSP1STATbits	set	3989
   268  0000                     _SSP1MSK	set	3988
   269  0000                     _SSP1BUF	set	3986
   270  0000                     _SSP1CON2bits	set	3991
   271  0000                     _SSP1ADD	set	3987
   272  0000                     _SSP1CON2	set	3991
   273  0000                     _SSP1CON1	set	3990
   274  0000                     _SSP1STAT	set	3989
   275  0000                     _SSP1CON1bits	set	3990
   276                           
   277                           ; #config settings
   278  0000                     
   279                           	psect	cinit
   280  00089A                     __pcinit:
   281                           	opt stack 0
   282  00089A                     start_initialization:
   283                           	opt stack 0
   284  00089A                     __initialization:
   285                           	opt stack 0
   286                           
   287                           ; Initialize objects allocated to BANK0 (48 bytes)
   288                           ; load TBLPTR registers with __pidataBANK0
   289  00089A  0EEA               	movlw	low __pidataBANK0
   290  00089C  6EF6               	movwf	tblptrl,c
   291  00089E  0E09               	movlw	high __pidataBANK0
   292  0008A0  6EF7               	movwf	tblptrh,c
   293  0008A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   294  0008A4  6EF8               	movwf	tblptru,c
   295  0008A6  EE00  F060         	lfsr	0,__pdataBANK0
   296  0008AA  EE10 F030          	lfsr	1,48
   297  0008AE                     copy_data0:
   298  0008AE  0009               	tblrd		*+
   299  0008B0  CFF5 FFEE          	movff	tablat,postinc0
   300  0008B4  50E5               	movf	postdec1,w,c
   301  0008B6  50E1               	movf	fsr1l,w,c
   302  0008B8  E1FA               	bnz	copy_data0
   303                           
   304                           ; Clear objects allocated to BANK0 (3 bytes)
   305  0008BA  0100               	movlb	0
   306  0008BC  6BA6               	clrf	(__pbssBANK0+2)& (0+255),b
   307  0008BE  6BA5               	clrf	(__pbssBANK0+1)& (0+255),b
   308  0008C0  6BA4               	clrf	__pbssBANK0& (0+255),b
   309                           
   310                           ; Clear objects allocated to COMRAM (45 bytes)
   311  0008C2  EE00  F001         	lfsr	0,__pbssCOMRAM
   312  0008C6  0E2D               	movlw	45
   313  0008C8                     clear_0:
   314  0008C8  6AEE               	clrf	postinc0,c
   315  0008CA  06E8               	decf	wreg,f,c
   316  0008CC  E1FD               	bnz	clear_0
   317  0008CE                     end_of_initialization:
   318                           	opt stack 0
   319  0008CE                     __end_of__initialization:
   320                           	opt stack 0
   321  0008CE  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322  0008D0  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323  0008D2  0100               	movlb	0
   324  0008D4  EF71  F000         	goto	_main	;jump to C main() function
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           postdec1	equ	0xFE5
   332                           fsr1l	equ	0xFE1
   333                           
   334                           	psect	bssCOMRAM
   335  000001                     __pbssCOMRAM:
   336                           	opt stack 0
   337  000001                     _i2c_status:
   338                           	opt stack 0
   339  000001                     	ds	42
   340  00002B                     _i2c1_driver_busCollisionISR:
   341                           	opt stack 0
   342  00002B                     	ds	3
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           postdec1	equ	0xFE5
   350                           fsr1l	equ	0xFE1
   351                           
   352                           	psect	bssBANK0
   353  0000A4                     __pbssBANK0:
   354                           	opt stack 0
   355  0000A4                     _i2c1_driver_i2cISR:
   356                           	opt stack 0
   357  0000A4                     	ds	3
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	dataBANK0
   368  000060                     __pdataBANK0:
   369                           	opt stack 0
   370  000060                     _fsmStateTable:
   371                           	opt stack 0
   372  000060                     	ds	48
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           postdec1	equ	0xFE5
   380                           fsr1l	equ	0xFE1
   381                           
   382                           	psect	cstackBANK0
   383  000090                     __pcstackBANK0:
   384                           	opt stack 0
   385  000090                     i2c_readNBytes@data:
   386                           	opt stack 0
   387  000090                     i2c_setDataCompleteCallback@cb:
   388                           	opt stack 0
   389  000090                     i2c_setAddressNACKCallback@cb:
   390                           	opt stack 0
   391                           
   392                           ; 3 bytes @ 0x0
   393  000090                     	ds	2
   394  000092                     i2c_readNBytes@len:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x2
   398  000092                     	ds	1
   399  000093                     i2c_setDataCompleteCallback@p:
   400                           	opt stack 0
   401  000093                     i2c_setAddressNACKCallback@p:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x3
   405  000093                     	ds	2
   406  000095                     returnStop@p:
   407                           	opt stack 0
   408  000095                     wr1RegCompleteHandler@p:
   409                           	opt stack 0
   410  000095                     i2c_writeNBytes@data:
   411                           	opt stack 0
   412  000095                     rd1RegCompleteHandler@p:
   413                           	opt stack 0
   414  000095                     rd2RegCompleteHandler@p:
   415                           	opt stack 0
   416  000095                     wr2RegCompleteHandler@p:
   417                           	opt stack 0
   418  000095                     rdBlkRegCompleteHandler@p:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x5
   422  000095                     	ds	2
   423  000097                     i2c_writeNBytes@len:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x7
   427  000097                     	ds	2
   428  000099                     ??_main:
   429                           
   430                           ; 1 bytes @ 0x9
   431  000099                     	ds	1
   432  00009A                     main@gamerScore:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0xA
   436  00009A                     	ds	1
   437  00009B                     main@photonAddress:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0xB
   441  00009B                     	ds	1
   442  00009C                     main@data:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0xC
   446  00009C                     	ds	2
   447  00009E                     main@addr:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0xE
   451  00009E                     	ds	1
   452  00009F                     main@i:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0xF
   456  00009F                     	ds	2
   457  0000A1                     main@i_1261:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x11
   461  0000A1                     	ds	2
   462  0000A3                     main@rec:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x13
   466  0000A3                     	ds	1
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	cstackCOMRAM
   477  00002E                     __pcstackCOMRAM:
   478                           	opt stack 0
   479  00002E                     ??i2_i2c1_driver_isNACK:
   480  00002E                     i2i2c1_driver_TXData@d:
   481                           	opt stack 0
   482  00002E                     i2i2c_setBuffer@buffer:
   483                           	opt stack 0
   484  00002E                     i2setCallBack@cb:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x0
   488  00002E                     	ds	1
   489  00002F                     i2_do_I2C_TX$1036:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x1
   493  00002F                     	ds	1
   494  000030                     i2i2c_setBuffer@bufferSize:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x2
   498  000030                     	ds	1
   499  000031                     ??_INTERRUPT_InterruptManager:
   500  000031                     i2setCallBack@p:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x3
   504  000031                     	ds	1
   505  000032                     
   506                           ; 1 bytes @ 0x4
   507  000032                     	ds	1
   508  000033                     i2setCallBack@idx:
   509                           	opt stack 0
   510                           
   511                           ; 1 bytes @ 0x5
   512  000033                     	ds	1
   513  000034                     i2i2c_setDataCompleteCallback@cb:
   514                           	opt stack 0
   515                           
   516                           ; 3 bytes @ 0x6
   517  000034                     	ds	3
   518  000037                     i2i2c_setDataCompleteCallback@p:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x9
   522  000037                     	ds	2
   523  000039                     i2returnStop@p:
   524                           	opt stack 0
   525  000039                     i2wr1RegCompleteHandler@p:
   526                           	opt stack 0
   527  000039                     i2rd1RegCompleteHandler@p:
   528                           	opt stack 0
   529  000039                     i2rd2RegCompleteHandler@p:
   530                           	opt stack 0
   531  000039                     i2wr2RegCompleteHandler@p:
   532                           	opt stack 0
   533  000039                     i2rdBlkRegCompleteHandler@p:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0xB
   537  000039                     	ds	2
   538  00003B                     
   539                           ; 1 bytes @ 0xD
   540  00003B                     	ds	8
   541  000043                     ??_mssp1_IRQisEnabled:
   542  000043                     ??_i2c1_driver_isNACK:
   543  000043                     i2c1_driver_TXData@d:
   544                           	opt stack 0
   545  000043                     i2c_close@ret:
   546                           	opt stack 0
   547  000043                     EUSART2_Write@txData:
   548                           	opt stack 0
   549  000043                     mssp1_waitForEvent@timeout:
   550                           	opt stack 0
   551  000043                     i2c_setBuffer@buffer:
   552                           	opt stack 0
   553  000043                     i2c1_driver_setBusCollisionISR@f:
   554                           	opt stack 0
   555  000043                     i2c1_driver_setI2cISR@f:
   556                           	opt stack 0
   557  000043                     setCallBack@cb:
   558                           	opt stack 0
   559                           
   560                           ; 3 bytes @ 0x15
   561  000043                     	ds	1
   562  000044                     _do_I2C_TX$1036:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x16
   566  000044                     	ds	1
   567  000045                     i2c_setBuffer@bufferSize:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x17
   571  000045                     	ds	1
   572  000046                     i2c_open@address:
   573                           	opt stack 0
   574  000046                     i2c_masterOperation@read:
   575                           	opt stack 0
   576  000046                     setCallBack@p:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x18
   580  000046                     	ds	1
   581  000047                     i2c_open@ret:
   582                           	opt stack 0
   583  000047                     i2c_masterOperation@ret:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x19
   587  000047                     	ds	1
   588  000048                     setCallBack@idx:
   589                           	opt stack 0
   590  000048                     i2c_readNBytes@address:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x1A
   594  000048                     	ds	1
   595  000049                     i2c_writeNBytes@address:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x1B
   599  000049                     	ds	1
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           postinc0	equ	0xFEE
   605                           wreg	equ	0xFE8
   606                           postdec1	equ	0xFE5
   607                           fsr1l	equ	0xFE1
   608                           
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   611 ;;
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 48 in file "main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;  i               2   17[BANK0 ] int 
   619 ;;  i               2   15[BANK0 ] int 
   620 ;;  data            2   12[BANK0 ] unsigned char [2]
   621 ;;  rec             1   19[BANK0 ] unsigned char 
   622 ;;  addr            1   14[BANK0 ] unsigned char 
   623 ;;  photonAddres    1   11[BANK0 ] unsigned char 
   624 ;;  gamerScore      1   10[BANK0 ] unsigned char 
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   635 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   637 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   638 ;;Total ram usage:       11 bytes
   639 ;; Hardware stack levels required when called:   15
   640 ;; This function calls:
   641 ;;		_EUSART2_Initialize
   642 ;;		_EUSART2_Read
   643 ;;		_EUSART2_Write
   644 ;;		_EUSART2_is_rx_ready
   645 ;;		_SYSTEM_Initialize
   646 ;;		_i2c_readNBytes
   647 ;;		_i2c_writeNBytes
   648 ;; This function is called by:
   649 ;;		Startup code after reset
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text0
   654  0000E2                     __ptext0:
   655                           	opt stack 0
   656  0000E2                     _main:
   657                           	opt stack 16
   658                           
   659                           ;main.c: 51: SYSTEM_Initialize();
   660                           
   661                           ;incstack = 0
   662  0000E2  EC28  F006         	call	_SYSTEM_Initialize	;wreg free
   663                           
   664                           ;main.c: 58: (INTCONbits.GIE = 1);
   665  0000E6  8EF2               	bsf	intcon,7,c	;volatile
   666                           
   667                           ;main.c: 64: (INTCONbits.PEIE = 1);
   668  0000E8  8CF2               	bsf	intcon,6,c	;volatile
   669                           
   670                           ;main.c: 77: uint8_t data[2];
   671                           ;main.c: 78: uint8_t addr = 0x20;
   672  0000EA  0E20               	movlw	32
   673  0000EC  0100               	movlb	0	; () banked
   674  0000EE  6F9E               	movwf	main@addr& (0+255),b
   675                           
   676                           ; BSR set to: 0
   677                           ;main.c: 79: uint8_t gamerScore = 0x17;
   678  0000F0  0E17               	movlw	23
   679  0000F2  6F9A               	movwf	main@gamerScore& (0+255),b
   680                           
   681                           ; BSR set to: 0
   682                           ;main.c: 80: uint8_t photonAddress = 0x30;
   683  0000F4  0E30               	movlw	48
   684  0000F6  6F9B               	movwf	main@photonAddress& (0+255),b
   685                           
   686                           ; BSR set to: 0
   687                           ;main.c: 92: data[0]=0x13;
   688  0000F8  0E13               	movlw	19
   689  0000FA  6F9C               	movwf	main@data& (0+255),b
   690                           
   691                           ; BSR set to: 0
   692                           ;main.c: 93: i2c_writeNBytes(addr, &data[0], 1);
   693  0000FC  0E9C               	movlw	low main@data
   694  0000FE  6F95               	movwf	i2c_writeNBytes@data& (0+255),b
   695  000100  0E00               	movlw	high main@data
   696  000102  6F96               	movwf	(i2c_writeNBytes@data+1)& (0+255),b
   697  000104  0E00               	movlw	0
   698  000106  6F98               	movwf	(i2c_writeNBytes@len+1)& (0+255),b
   699  000108  0E01               	movlw	1
   700  00010A  6F97               	movwf	i2c_writeNBytes@len& (0+255),b
   701  00010C  519E               	movf	main@addr& (0+255),w,b
   702  00010E  EC79  F003         	call	_i2c_writeNBytes
   703                           
   704                           ;main.c: 94: uint8_t rec;
   705                           ;main.c: 95: i2c_readNBytes(addr, &rec, 1);
   706  000112  0EA3               	movlw	low main@rec
   707  000114  0100               	movlb	0	; () banked
   708  000116  6F90               	movwf	i2c_readNBytes@data& (0+255),b
   709  000118  0E00               	movlw	high main@rec
   710  00011A  6F91               	movwf	(i2c_readNBytes@data+1)& (0+255),b
   711  00011C  0E00               	movlw	0
   712  00011E  6F93               	movwf	(i2c_readNBytes@len+1)& (0+255),b
   713  000120  0E01               	movlw	1
   714  000122  6F92               	movwf	i2c_readNBytes@len& (0+255),b
   715  000124  519E               	movf	main@addr& (0+255),w,b
   716  000126  ECDC  F004         	call	_i2c_readNBytes
   717                           
   718                           ;main.c: 104: for(int i=0; i<80; i++)
   719  00012A  0E00               	movlw	0
   720  00012C  0100               	movlb	0	; () banked
   721  00012E  6FA0               	movwf	(main@i+1)& (0+255),b
   722  000130  0E00               	movlw	0
   723  000132  6F9F               	movwf	main@i& (0+255),b
   724  000134                     l4036:
   725                           
   726                           ; BSR set to: 0
   727  000134  BFA0               	btfsc	(main@i+1)& (0+255),7,b
   728  000136  D006               	goto	l628
   729  000138  51A0               	movf	(main@i+1)& (0+255),w,b
   730  00013A  E111               	bnz	l4044
   731  00013C  0E50               	movlw	80
   732  00013E  5D9F               	subwf	main@i& (0+255),w,b
   733  000140  B0D8               	btfsc	status,0,c
   734  000142  D00D               	goto	u1970
   735  000144                     l628:
   736                           
   737                           ; BSR set to: 0
   738                           ;main.c: 105: _delay((unsigned long)((50)*(2000000/4000.0)));
   739                           
   740                           ; BSR set to: 0
   741  000144  0E21               	movlw	33
   742  000146  0100               	movlb	0	; () banked
   743  000148  6F99               	movwf	??_main& (0+255),b
   744  00014A  0E76               	movlw	118
   745  00014C                     u2027:
   746  00014C  2EE8               	decfsz	wreg,f,c
   747  00014E  D7FE               	bra	u2027
   748  000150  2F99               	decfsz	??_main& (0+255),f,b
   749  000152  D7FC               	bra	u2027
   750  000154  F000               	nop	
   751  000156  0100               	movlb	0	; () banked
   752  000158  4B9F               	infsnz	main@i& (0+255),f,b
   753  00015A  2BA0               	incf	(main@i+1)& (0+255),f,b
   754  00015C  D7EB               	goto	l4036
   755  00015E                     u1970:
   756  00015E                     l4044:
   757                           
   758                           ; BSR set to: 0
   759                           ;main.c: 107: EUSART2_Initialize();
   760  00015E  ECEF  F005         	call	_EUSART2_Initialize	;wreg free
   761  000162                     l4046:
   762                           
   763                           ;main.c: 112: {
   764                           ;main.c: 128: EUSART2_Write(~rec);
   765  000162  0100               	movlb	0	; () banked
   766  000164  51A3               	movf	main@rec& (0+255),w,b
   767  000166  0AFF               	xorlw	255
   768  000168  ECC4  F006         	call	_EUSART2_Write
   769                           
   770                           ;main.c: 130: if(EUSART2_is_rx_ready())
   771  00016C  ECBD  F006         	call	_EUSART2_is_rx_ready	;wreg free
   772  000170  0900               	iorlw	0
   773  000172  B4D8               	btfsc	status,2,c
   774  000174  D004               	goto	l631
   775                           
   776                           ;main.c: 131: rec = EUSART2_Read();
   777  000176  EC65  F006         	call	_EUSART2_Read	;wreg free
   778  00017A  0100               	movlb	0	; () banked
   779  00017C  6FA3               	movwf	main@rec& (0+255),b
   780  00017E                     l631:
   781                           
   782                           ;main.c: 132: if(rec == 64)
   783                           
   784                           ; BSR set to: 0
   785  00017E  0E40               	movlw	64
   786  000180  0100               	movlb	0	; () banked
   787  000182  19A3               	xorwf	main@rec& (0+255),w,b
   788  000184  B4D8               	btfsc	status,2,c
   789                           
   790                           ; BSR set to: 0
   791                           
   792                           ;main.c: 133: do { LATAbits.LATA2 = 0; } while(0);
   793  000186  9483               	bcf	3971,2,c	;volatile
   794                           
   795                           ; BSR set to: 0
   796                           ;main.c: 135: for(int i=0; i<20; i++)
   797                           
   798                           ; BSR set to: 0
   799                           
   800                           ; BSR set to: 0
   801  000188  0E00               	movlw	0
   802  00018A  6FA2               	movwf	(main@i_1261+1)& (0+255),b
   803  00018C  0E00               	movlw	0
   804  00018E  6FA1               	movwf	main@i_1261& (0+255),b
   805  000190                     l4056:
   806                           
   807                           ; BSR set to: 0
   808  000190  BFA2               	btfsc	(main@i_1261+1)& (0+255),7,b
   809  000192  D006               	goto	l635
   810  000194  51A2               	movf	(main@i_1261+1)& (0+255),w,b
   811  000196  E1E5               	bnz	l4046
   812  000198  0E14               	movlw	20
   813  00019A  5DA1               	subwf	main@i_1261& (0+255),w,b
   814  00019C  B0D8               	btfsc	status,0,c
   815  00019E  D7E1               	goto	l630
   816  0001A0                     l635:
   817                           
   818                           ; BSR set to: 0
   819                           ;main.c: 136: _delay((unsigned long)((50)*(2000000/4000.0)));
   820                           
   821                           ; BSR set to: 0
   822  0001A0  0E21               	movlw	33
   823  0001A2  0100               	movlb	0	; () banked
   824  0001A4  6F99               	movwf	??_main& (0+255),b
   825  0001A6  0E76               	movlw	118
   826  0001A8                     u2037:
   827  0001A8  2EE8               	decfsz	wreg,f,c
   828  0001AA  D7FE               	bra	u2037
   829  0001AC  2F99               	decfsz	??_main& (0+255),f,b
   830  0001AE  D7FC               	bra	u2037
   831  0001B0  F000               	nop	
   832  0001B2  0100               	movlb	0	; () banked
   833  0001B4  4BA1               	infsnz	main@i_1261& (0+255),f,b
   834  0001B6  2BA2               	incf	(main@i_1261+1)& (0+255),f,b
   835  0001B8  D7EB               	goto	l4056
   836  0001BA                     __end_of_main:
   837                           	opt stack 0
   838                           tblptru	equ	0xFF8
   839                           tblptrh	equ	0xFF7
   840                           tblptrl	equ	0xFF6
   841                           tablat	equ	0xFF5
   842                           intcon	equ	0xFF2
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           postdec1	equ	0xFE5
   846                           fsr1l	equ	0xFE1
   847                           status	equ	0xFD8
   848                           
   849 ;; *************** function _i2c_writeNBytes *****************
   850 ;; Defined at:
   851 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  address         1    wreg     unsigned char 
   854 ;;  data            2    5[BANK0 ] PTR void 
   855 ;;		 -> main@data(2), 
   856 ;;  len             2    7[BANK0 ] unsigned int 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  address         1   27[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   868 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   871 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   872 ;;Total ram usage:        5 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:   14
   875 ;; This function calls:
   876 ;;		_i2c_close
   877 ;;		_i2c_masterWrite
   878 ;;		_i2c_open
   879 ;;		_i2c_setAddressNACKCallback
   880 ;;		_i2c_setBuffer
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text1
   887  0006F2                     __ptext1:
   888                           	opt stack 0
   889  0006F2                     _i2c_writeNBytes:
   890                           	opt stack 16
   891                           
   892                           ; BSR set to: 0
   893                           ;incstack = 0
   894                           ;i2c_writeNBytes@address stored from wreg
   895  0006F2  6E49               	movwf	i2c_writeNBytes@address,c
   896  0006F4                     
   897                           ;i2c_simple_master.c: 50: while(!i2c_open(address));
   898  0006F4  5049               	movf	i2c_writeNBytes@address,w,c
   899  0006F6  ECDD  F000         	call	_i2c_open
   900  0006FA  0900               	iorlw	0
   901  0006FC  B4D8               	btfsc	status,2,c
   902  0006FE  D7FA               	goto	l3862
   903                           
   904                           ;i2c_simple_master.c: 51: i2c_setBuffer(data,len);
   905  000700  C095  F043         	movff	i2c_writeNBytes@data,i2c_setBuffer@buffer
   906  000704  C096  F044         	movff	i2c_writeNBytes@data+1,i2c_setBuffer@buffer+1
   907  000708  C097  F045         	movff	i2c_writeNBytes@len,i2c_setBuffer@bufferSize
   908  00070C  C098  F046         	movff	i2c_writeNBytes@len+1,i2c_setBuffer@bufferSize+1
   909  000710  ECD7  F005         	call	_i2c_setBuffer	;wreg free
   910                           
   911                           ;i2c_simple_master.c: 52: i2c_setAddressNACKCallback(i2c_restartWrite,(0));
   912  000714  0EC0               	movlw	low _i2c_restartWrite
   913  000716  0100               	movlb	0	; () banked
   914  000718  6F90               	movwf	i2c_setAddressNACKCallback@cb& (0+255),b
   915  00071A  0E0D               	movlw	high _i2c_restartWrite
   916  00071C  6F91               	movwf	(i2c_setAddressNACKCallback@cb+1)& (0+255),b
   917  00071E  0E00               	movlw	low (_i2c_restartWrite shr (0+16))
   918  000720  6F92               	movwf	(i2c_setAddressNACKCallback@cb+2)& (0+255),b
   919  000722  0E00               	movlw	0
   920  000724  6F93               	movwf	i2c_setAddressNACKCallback@p& (0+255),b
   921  000726  0E00               	movlw	0
   922  000728  6F94               	movwf	(i2c_setAddressNACKCallback@p+1)& (0+255),b
   923  00072A  EC85  F005         	call	_i2c_setAddressNACKCallback	;wreg free
   924                           
   925                           ;i2c_simple_master.c: 53: i2c_masterWrite();
   926  00072E  ECF9  F006         	call	_i2c_masterWrite	;wreg free
   927  000732  ECA1  F005         	call	_i2c_close	;wreg free
   928  000736  06E8               	decf	wreg,f,c
   929  000738  A4D8               	btfss	status,2,c
   930  00073A  0012               	return	
   931  00073C  D7FA               	goto	l537
   932  00073E                     __end_of_i2c_writeNBytes:
   933                           	opt stack 0
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           intcon	equ	0xFF2
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           postdec1	equ	0xFE5
   942                           fsr1l	equ	0xFE1
   943                           status	equ	0xFD8
   944                           
   945 ;; *************** function _i2c_setAddressNACKCallback *****************
   946 ;; Defined at:
   947 ;;		line 99 in file "mcc_generated_files/drivers/i2c_master.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  cb              3    0[BANK0 ] PTR FTN(PTR void ,)enum 
   950 ;;		 -> i2c_restartWrite(1), 
   951 ;;  p               2    3[BANK0 ] PTR void 
   952 ;;		 -> NULL(0), 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   964 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;Total ram usage:        5 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    7
   971 ;; This function calls:
   972 ;;		_setCallBack
   973 ;; This function is called by:
   974 ;;		_i2c_writeNBytes
   975 ;;		_i2c_write1ByteRegister
   976 ;;		_i2c_read1ByteRegister
   977 ;;		_i2c_read2ByteRegister
   978 ;;		_i2c_write2ByteRegister
   979 ;;		_i2c_readDataBlock
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text2
   984  000B0A                     __ptext2:
   985                           	opt stack 0
   986  000B0A                     _i2c_setAddressNACKCallback:
   987                           	opt stack 22
   988                           
   989                           ;i2c_master.c: 101: setCallBack(i2c_addressNACK,cb,p);
   990                           
   991                           ;incstack = 0
   992  000B0A  C090  F043         	movff	i2c_setAddressNACKCallback@cb,setCallBack@cb
   993  000B0E  C091  F044         	movff	i2c_setAddressNACKCallback@cb+1,setCallBack@cb+1
   994  000B12  C092  F045         	movff	i2c_setAddressNACKCallback@cb+2,setCallBack@cb+2
   995  000B16  C093  F046         	movff	i2c_setAddressNACKCallback@p,setCallBack@p
   996  000B1A  C094  F047         	movff	i2c_setAddressNACKCallback@p+1,setCallBack@p+1
   997  000B1E  0E02               	movlw	2
   998  000B20  EC48  F002         	call	_setCallBack
   999  000B24  0012               	return		;funcret
  1000  000B26                     __end_of_i2c_setAddressNACKCallback:
  1001                           	opt stack 0
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           tblptrl	equ	0xFF6
  1005                           tablat	equ	0xFF5
  1006                           intcon	equ	0xFF2
  1007                           postinc0	equ	0xFEE
  1008                           wreg	equ	0xFE8
  1009                           postdec1	equ	0xFE5
  1010                           fsr1l	equ	0xFE1
  1011                           status	equ	0xFD8
  1012                           
  1013 ;; *************** function _i2c_masterWrite *****************
  1014 ;; Defined at:
  1015 ;;		line 222 in file "mcc_generated_files/drivers/i2c_master.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      enum E11785
  1022 ;; Registers used:
  1023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:   13
  1036 ;; This function calls:
  1037 ;;		_i2c_masterOperation
  1038 ;; This function is called by:
  1039 ;;		_i2c_writeNBytes
  1040 ;;		_i2c_write1ByteRegister
  1041 ;;		_i2c_read1ByteRegister
  1042 ;;		_i2c_read2ByteRegister
  1043 ;;		_i2c_write2ByteRegister
  1044 ;;		_i2c_readDataBlock
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text3
  1049  000DF2                     __ptext3:
  1050                           	opt stack 0
  1051  000DF2                     _i2c_masterWrite:
  1052                           	opt stack 16
  1053                           
  1054                           ;i2c_master.c: 224: return i2c_masterOperation(0);
  1055                           ;	Return value of _i2c_masterWrite is never used
  1056                           
  1057                           ;incstack = 0
  1058  000DF2  0E00               	movlw	0
  1059  000DF4  EC0D  F005         	call	_i2c_masterOperation
  1060  000DF8  0012               	return	
  1061  000DFA                     __end_of_i2c_masterWrite:
  1062                           	opt stack 0
  1063                           tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           intcon	equ	0xFF2
  1068                           postinc0	equ	0xFEE
  1069                           wreg	equ	0xFE8
  1070                           postdec1	equ	0xFE5
  1071                           fsr1l	equ	0xFE1
  1072                           status	equ	0xFD8
  1073                           
  1074 ;; *************** function _i2c_readNBytes *****************
  1075 ;; Defined at:
  1076 ;;		line 156 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;  address         1    wreg     unsigned char 
  1079 ;;  data            2    0[BANK0 ] PTR void 
  1080 ;;		 -> main@rec(1), 
  1081 ;;  len             2    2[BANK0 ] unsigned int 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  address         1   26[COMRAM] unsigned char 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1093 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1096 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1097 ;;Total ram usage:        5 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:   14
  1100 ;; This function calls:
  1101 ;;		_i2c_close
  1102 ;;		_i2c_masterRead
  1103 ;;		_i2c_open
  1104 ;;		_i2c_setBuffer
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text4
  1111  0009B8                     __ptext4:
  1112                           	opt stack 0
  1113  0009B8                     _i2c_readNBytes:
  1114                           	opt stack 16
  1115                           
  1116                           ;incstack = 0
  1117                           ;i2c_readNBytes@address stored from wreg
  1118  0009B8  6E48               	movwf	i2c_readNBytes@address,c
  1119  0009BA                     
  1120                           ;i2c_simple_master.c: 158: while(!i2c_open(address));
  1121  0009BA  5048               	movf	i2c_readNBytes@address,w,c
  1122  0009BC  ECDD  F000         	call	_i2c_open
  1123  0009C0  0900               	iorlw	0
  1124  0009C2  B4D8               	btfsc	status,2,c
  1125  0009C4  D7FA               	goto	l3874
  1126                           
  1127                           ;i2c_simple_master.c: 159: i2c_setBuffer(data,len);
  1128  0009C6  C090  F043         	movff	i2c_readNBytes@data,i2c_setBuffer@buffer
  1129  0009CA  C091  F044         	movff	i2c_readNBytes@data+1,i2c_setBuffer@buffer+1
  1130  0009CE  C092  F045         	movff	i2c_readNBytes@len,i2c_setBuffer@bufferSize
  1131  0009D2  C093  F046         	movff	i2c_readNBytes@len+1,i2c_setBuffer@bufferSize+1
  1132  0009D6  ECD7  F005         	call	_i2c_setBuffer	;wreg free
  1133                           
  1134                           ;i2c_simple_master.c: 160: i2c_masterRead();
  1135  0009DA  ECFD  F006         	call	_i2c_masterRead	;wreg free
  1136  0009DE  ECA1  F005         	call	_i2c_close	;wreg free
  1137  0009E2  06E8               	decf	wreg,f,c
  1138  0009E4  A4D8               	btfss	status,2,c
  1139  0009E6  0012               	return	
  1140  0009E8  D7FA               	goto	l597
  1141  0009EA                     __end_of_i2c_readNBytes:
  1142                           	opt stack 0
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           tblptrl	equ	0xFF6
  1146                           tablat	equ	0xFF5
  1147                           intcon	equ	0xFF2
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           postdec1	equ	0xFE5
  1151                           fsr1l	equ	0xFE1
  1152                           status	equ	0xFD8
  1153                           
  1154 ;; *************** function _i2c_open *****************
  1155 ;; Defined at:
  1156 ;;		line 116 in file "mcc_generated_files/drivers/i2c_master.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  address         1    wreg     unsigned char 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  address         1   24[COMRAM] unsigned char 
  1161 ;;  ret             1   25[COMRAM] enum E11785
  1162 ;; Return value:  Size  Location     Type
  1163 ;;                  1    wreg      enum E11785
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1175 ;;Total ram usage:        2 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    7
  1178 ;; This function calls:
  1179 ;;		_i2c1_driver_open
  1180 ;;		_i2c1_driver_setBusCollisionISR
  1181 ;;		_i2c1_driver_setI2cISR
  1182 ;;		_mssp1_clearIRQ
  1183 ;; This function is called by:
  1184 ;;		_i2c_writeNBytes
  1185 ;;		_i2c_readNBytes
  1186 ;;		_i2c_write1ByteRegister
  1187 ;;		_i2c_read1ByteRegister
  1188 ;;		_i2c_read2ByteRegister
  1189 ;;		_i2c_write2ByteRegister
  1190 ;;		_i2c_readDataBlock
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text5
  1195  0001BA                     __ptext5:
  1196                           	opt stack 0
  1197  0001BA                     _i2c_open:
  1198                           	opt stack 22
  1199                           
  1200                           ;incstack = 0
  1201                           ;i2c_open@address stored from wreg
  1202  0001BA  6E46               	movwf	i2c_open@address,c
  1203                           
  1204                           ;i2c_master.c: 118: i2c_error_t ret = I2C_BUSY;
  1205  0001BC  0E01               	movlw	1
  1206  0001BE  6E47               	movwf	i2c_open@ret,c
  1207                           
  1208                           ;i2c_master.c: 120: if(!i2c_status.inUse)
  1209  0001C0  B201               	btfsc	_i2c_status,1,c
  1210  0001C2  D050               	goto	l354
  1211                           
  1212                           ;i2c_master.c: 121: {
  1213                           ;i2c_master.c: 122: i2c_status.address = address;
  1214  0001C4  C046  F002         	movff	i2c_open@address,_i2c_status+1
  1215                           
  1216                           ;i2c_master.c: 123: i2c_status.busy = 0;
  1217  0001C8  9001               	bcf	_i2c_status,0,c
  1218                           
  1219                           ;i2c_master.c: 124: i2c_status.inUse = 1;
  1220  0001CA  8201               	bsf	_i2c_status,1,c
  1221                           
  1222                           ;i2c_master.c: 125: i2c_status.addressNACKCheck = 0;
  1223  0001CC  9601               	bcf	_i2c_status,3,c
  1224                           
  1225                           ;i2c_master.c: 126: i2c_status.state = I2C_RESET;
  1226  0001CE  0E0E               	movlw	14
  1227  0001D0  6E0B               	movwf	_i2c_status+10,c
  1228                           
  1229                           ;i2c_master.c: 127: i2c_status.time_out_value = 500;
  1230  0001D2  0E01               	movlw	1
  1231  0001D4  6E0A               	movwf	_i2c_status+9,c
  1232  0001D6  0EF4               	movlw	244
  1233  0001D8  6E09               	movwf	_i2c_status+8,c
  1234                           
  1235                           ;i2c_master.c: 128: i2c_status.bufferFree = 1;
  1236  0001DA  8401               	bsf	_i2c_status,2,c
  1237                           
  1238                           ;i2c_master.c: 131: i2c_status.callbackTable[i2c_dataComplete]=returnStop;
  1239  0001DC  0ED4               	movlw	low _returnStop
  1240  0001DE  6E0D               	movwf	_i2c_status+12,c
  1241  0001E0  0E0D               	movlw	high _returnStop
  1242  0001E2  6E0E               	movwf	_i2c_status+13,c
  1243  0001E4  0E00               	movlw	low (_returnStop shr (0+16))
  1244  0001E6  6E0F               	movwf	_i2c_status+14,c
  1245                           
  1246                           ;i2c_master.c: 132: i2c_status.callbackPayload[i2c_dataComplete] = (0);
  1247  0001E8  0E00               	movlw	0
  1248  0001EA  6E1F               	movwf	_i2c_status+30,c
  1249  0001EC  0E00               	movlw	0
  1250  0001EE  6E20               	movwf	_i2c_status+31,c
  1251                           
  1252                           ;i2c_master.c: 133: i2c_status.callbackTable[i2c_writeCollision]=returnStop;
  1253  0001F0  0ED4               	movlw	low _returnStop
  1254  0001F2  6E10               	movwf	_i2c_status+15,c
  1255  0001F4  0E0D               	movlw	high _returnStop
  1256  0001F6  6E11               	movwf	_i2c_status+16,c
  1257  0001F8  0E00               	movlw	low (_returnStop shr (0+16))
  1258  0001FA  6E12               	movwf	_i2c_status+17,c
  1259                           
  1260                           ;i2c_master.c: 134: i2c_status.callbackPayload[i2c_writeCollision] = (0);
  1261  0001FC  0E00               	movlw	0
  1262  0001FE  6E21               	movwf	_i2c_status+32,c
  1263  000200  0E00               	movlw	0
  1264  000202  6E22               	movwf	_i2c_status+33,c
  1265                           
  1266                           ;i2c_master.c: 135: i2c_status.callbackTable[i2c_addressNACK]=returnStop;
  1267  000204  0ED4               	movlw	low _returnStop
  1268  000206  6E13               	movwf	_i2c_status+18,c
  1269  000208  0E0D               	movlw	high _returnStop
  1270  00020A  6E14               	movwf	_i2c_status+19,c
  1271  00020C  0E00               	movlw	low (_returnStop shr (0+16))
  1272  00020E  6E15               	movwf	_i2c_status+20,c
  1273                           
  1274                           ;i2c_master.c: 136: i2c_status.callbackPayload[i2c_addressNACK] = (0);
  1275  000210  0E00               	movlw	0
  1276  000212  6E23               	movwf	_i2c_status+34,c
  1277  000214  0E00               	movlw	0
  1278  000216  6E24               	movwf	_i2c_status+35,c
  1279                           
  1280                           ;i2c_master.c: 137: i2c_status.callbackTable[i2c_dataNACK]=returnStop;
  1281  000218  0ED4               	movlw	low _returnStop
  1282  00021A  6E16               	movwf	_i2c_status+21,c
  1283  00021C  0E0D               	movlw	high _returnStop
  1284  00021E  6E17               	movwf	_i2c_status+22,c
  1285  000220  0E00               	movlw	low (_returnStop shr (0+16))
  1286  000222  6E18               	movwf	_i2c_status+23,c
  1287                           
  1288                           ;i2c_master.c: 138: i2c_status.callbackPayload[i2c_dataNACK] = (0);
  1289  000224  0E00               	movlw	0
  1290  000226  6E25               	movwf	_i2c_status+36,c
  1291  000228  0E00               	movlw	0
  1292  00022A  6E26               	movwf	_i2c_status+37,c
  1293                           
  1294                           ;i2c_master.c: 139: i2c_status.callbackTable[i2c_timeOut]=returnReset;
  1295  00022C  0ECA               	movlw	low _returnReset
  1296  00022E  6E19               	movwf	_i2c_status+24,c
  1297  000230  0E0D               	movlw	high _returnReset
  1298  000232  6E1A               	movwf	_i2c_status+25,c
  1299  000234  0E00               	movlw	low (_returnReset shr (0+16))
  1300  000236  6E1B               	movwf	_i2c_status+26,c
  1301                           
  1302                           ;i2c_master.c: 140: i2c_status.callbackPayload[i2c_timeOut] = (0);
  1303  000238  0E00               	movlw	0
  1304  00023A  6E27               	movwf	_i2c_status+38,c
  1305  00023C  0E00               	movlw	0
  1306  00023E  6E28               	movwf	_i2c_status+39,c
  1307                           
  1308                           ;i2c_master.c: 142: i2c1_driver_open();
  1309  000240  EC07  F006         	call	_i2c1_driver_open	;wreg free
  1310                           
  1311                           ;i2c_master.c: 143: mssp1_clearIRQ();
  1312  000244  EC31  F007         	call	_mssp1_clearIRQ	;wreg free
  1313                           
  1314                           ;i2c_master.c: 145: i2c1_driver_setBusCollisionISR(i2c_busCollisionISR);
  1315  000248  0E80               	movlw	low _i2c_busCollisionISR
  1316  00024A  6E43               	movwf	i2c1_driver_setBusCollisionISR@f,c
  1317  00024C  0E0E               	movlw	high _i2c_busCollisionISR
  1318  00024E  6E44               	movwf	i2c1_driver_setBusCollisionISR@f+1,c
  1319  000250  EC85  F006         	call	_i2c1_driver_setBusCollisionISR	;wreg free
  1320                           
  1321                           ;i2c_master.c: 146: i2c1_driver_setI2cISR(i2c_ISR);
  1322  000254  0E8A               	movlw	low _i2c_ISR
  1323  000256  6E43               	movwf	i2c1_driver_setI2cISR@f,c
  1324  000258  0E07               	movlw	high _i2c_ISR
  1325  00025A  6E44               	movwf	i2c1_driver_setI2cISR@f+1,c
  1326  00025C  EC7E  F006         	call	_i2c1_driver_setI2cISR	;wreg free
  1327                           
  1328                           ;i2c_master.c: 151: ret = I2C_NOERR;
  1329  000260  0E00               	movlw	0
  1330  000262  6E47               	movwf	i2c_open@ret,c
  1331  000264                     l354:
  1332                           
  1333                           ;i2c_master.c: 152: }
  1334                           ;i2c_master.c: 153: return ret;
  1335  000264  5047               	movf	i2c_open@ret,w,c
  1336  000266  0012               	return	
  1337  000268                     __end_of_i2c_open:
  1338                           	opt stack 0
  1339                           tblptru	equ	0xFF8
  1340                           tblptrh	equ	0xFF7
  1341                           tblptrl	equ	0xFF6
  1342                           tablat	equ	0xFF5
  1343                           intcon	equ	0xFF2
  1344                           postinc0	equ	0xFEE
  1345                           wreg	equ	0xFE8
  1346                           postdec1	equ	0xFE5
  1347                           fsr1l	equ	0xFE1
  1348                           status	equ	0xFD8
  1349                           
  1350 ;; *************** function _i2c1_driver_setI2cISR *****************
  1351 ;; Defined at:
  1352 ;;		line 262 in file "mcc_generated_files/i2c1_driver.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  f               3   21[COMRAM] PTR void 
  1355 ;;		 -> i2c_ISR(1), 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1367 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;Total ram usage:        3 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    6
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_i2c_open
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text6
  1382  000CFC                     __ptext6:
  1383                           	opt stack 0
  1384  000CFC                     _i2c1_driver_setI2cISR:
  1385                           	opt stack 22
  1386                           
  1387                           ;i2c1_driver.c: 263: i2c1_driver_i2cISR = f;
  1388                           
  1389                           ;incstack = 0
  1390  000CFC  C043  F0A4         	movff	i2c1_driver_setI2cISR@f,_i2c1_driver_i2cISR
  1391  000D00  C044  F0A5         	movff	i2c1_driver_setI2cISR@f+1,_i2c1_driver_i2cISR+1
  1392  000D04  C045  F0A6         	movff	i2c1_driver_setI2cISR@f+2,_i2c1_driver_i2cISR+2
  1393  000D08  0012               	return		;funcret
  1394  000D0A                     __end_of_i2c1_driver_setI2cISR:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           intcon	equ	0xFF2
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           postdec1	equ	0xFE5
  1404                           fsr1l	equ	0xFE1
  1405                           status	equ	0xFD8
  1406                           
  1407 ;; *************** function _i2c1_driver_setBusCollisionISR *****************
  1408 ;; Defined at:
  1409 ;;		line 258 in file "mcc_generated_files/i2c1_driver.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  f               3   21[COMRAM] PTR void 
  1412 ;;		 -> i2c_busCollisionISR(1), 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1424 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1427 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1428 ;;Total ram usage:        3 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    6
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_i2c_open
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text7
  1439  000D0A                     __ptext7:
  1440                           	opt stack 0
  1441  000D0A                     _i2c1_driver_setBusCollisionISR:
  1442                           	opt stack 22
  1443                           
  1444                           ;i2c1_driver.c: 259: i2c1_driver_busCollisionISR = f;
  1445                           
  1446                           ;incstack = 0
  1447  000D0A  C043  F02B         	movff	i2c1_driver_setBusCollisionISR@f,_i2c1_driver_busCollisionISR
  1448  000D0E  C044  F02C         	movff	i2c1_driver_setBusCollisionISR@f+1,_i2c1_driver_busCollisionISR+1
  1449  000D12  C045  F02D         	movff	i2c1_driver_setBusCollisionISR@f+2,_i2c1_driver_busCollisionISR+2
  1450  000D16  0012               	return		;funcret
  1451  000D18                     __end_of_i2c1_driver_setBusCollisionISR:
  1452                           	opt stack 0
  1453                           tblptru	equ	0xFF8
  1454                           tblptrh	equ	0xFF7
  1455                           tblptrl	equ	0xFF6
  1456                           tablat	equ	0xFF5
  1457                           intcon	equ	0xFF2
  1458                           postinc0	equ	0xFEE
  1459                           wreg	equ	0xFE8
  1460                           postdec1	equ	0xFE5
  1461                           fsr1l	equ	0xFE1
  1462                           status	equ	0xFD8
  1463                           
  1464 ;; *************** function _i2c1_driver_open *****************
  1465 ;; Defined at:
  1466 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;		None               void
  1473 ;; Registers used:
  1474 ;;		wreg, status,2
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    6
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_i2c_open
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text8
  1495  000C0E                     __ptext8:
  1496                           	opt stack 0
  1497  000C0E                     _i2c1_driver_open:
  1498                           	opt stack 22
  1499                           
  1500                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  1501                           
  1502                           ;incstack = 0
  1503  000C0E  BA96               	btfsc	3990,5,c	;volatile
  1504  000C10  0012               	return	
  1505                           
  1506                           ;i2c1_driver.c: 86: {
  1507                           ;i2c1_driver.c: 87: SSP1STAT = 0x00;
  1508  000C12  0E00               	movlw	0
  1509  000C14  6E95               	movwf	3989,c	;volatile
  1510                           
  1511                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  1512  000C16  0E28               	movlw	40
  1513  000C18  6E96               	movwf	3990,c	;volatile
  1514                           
  1515                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  1516  000C1A  0E00               	movlw	0
  1517  000C1C  6E97               	movwf	3991,c	;volatile
  1518                           
  1519                           ;i2c1_driver.c: 90: SSP1ADD = 0x4;
  1520  000C1E  0E04               	movlw	4
  1521  000C20  6E93               	movwf	3987,c	;volatile
  1522                           
  1523                           ;i2c1_driver.c: 93: else
  1524                           ;i2c1_driver.c: 94: return 0;
  1525                           ;	Return value of _i2c1_driver_open is never used
  1526                           
  1527                           ;i2c1_driver.c: 92: }
  1528                           
  1529                           ;i2c1_driver.c: 91: return 1;
  1530                           ;	Return value of _i2c1_driver_open is never used
  1531  000C22  0012               	return	
  1532  000C24                     __end_of_i2c1_driver_open:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           intcon	equ	0xFF2
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           postdec1	equ	0xFE5
  1542                           fsr1l	equ	0xFE1
  1543                           status	equ	0xFD8
  1544                           
  1545 ;; *************** function _i2c_masterRead *****************
  1546 ;; Defined at:
  1547 ;;		line 217 in file "mcc_generated_files/drivers/i2c_master.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      enum E11785
  1554 ;; Registers used:
  1555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:   13
  1568 ;; This function calls:
  1569 ;;		_i2c_masterOperation
  1570 ;; This function is called by:
  1571 ;;		_i2c_readNBytes
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text9
  1576  000DFA                     __ptext9:
  1577                           	opt stack 0
  1578  000DFA                     _i2c_masterRead:
  1579                           	opt stack 16
  1580                           
  1581                           ;i2c_master.c: 219: return i2c_masterOperation(1);
  1582                           ;	Return value of _i2c_masterRead is never used
  1583                           
  1584                           ;incstack = 0
  1585  000DFA  0E01               	movlw	1
  1586  000DFC  EC0D  F005         	call	_i2c_masterOperation
  1587  000E00  0012               	return	
  1588  000E02                     __end_of_i2c_masterRead:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           intcon	equ	0xFF2
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           postdec1	equ	0xFE5
  1598                           fsr1l	equ	0xFE1
  1599                           status	equ	0xFD8
  1600                           
  1601 ;; *************** function _i2c_masterOperation *****************
  1602 ;; Defined at:
  1603 ;;		line 193 in file "mcc_generated_files/drivers/i2c_master.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  read            1    wreg     unsigned char 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  read            1   24[COMRAM] unsigned char 
  1608 ;;  ret             1   25[COMRAM] enum E11785
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      enum E11785
  1611 ;; Registers used:
  1612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:   12
  1625 ;; This function calls:
  1626 ;;		_i2c1_driver_start
  1627 ;;		_i2c_poller
  1628 ;;		_mssp1_IRQisEnabled
  1629 ;; This function is called by:
  1630 ;;		_i2c_masterRead
  1631 ;;		_i2c_masterWrite
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text10
  1636  000A1A                     __ptext10:
  1637                           	opt stack 0
  1638  000A1A                     _i2c_masterOperation:
  1639                           	opt stack 16
  1640                           
  1641                           ;incstack = 0
  1642                           ;i2c_masterOperation@read stored from wreg
  1643  000A1A  6E46               	movwf	i2c_masterOperation@read,c
  1644                           
  1645                           ;i2c_master.c: 195: i2c_error_t ret = I2C_BUSY;
  1646  000A1C  0E01               	movlw	1
  1647  000A1E  6E47               	movwf	i2c_masterOperation@ret,c
  1648                           
  1649                           ;i2c_master.c: 196: if(!i2c_status.busy)
  1650  000A20  B001               	btfsc	_i2c_status,0,c
  1651  000A22  D011               	goto	l375
  1652                           
  1653                           ;i2c_master.c: 197: {
  1654                           ;i2c_master.c: 198: i2c_status.busy = 1;
  1655  000A24  8001               	bsf	_i2c_status,0,c
  1656                           
  1657                           ;i2c_master.c: 199: ret = I2C_NOERR;
  1658  000A26  0E00               	movlw	0
  1659  000A28  6E47               	movwf	i2c_masterOperation@ret,c
  1660                           
  1661                           ;i2c_master.c: 201: if(read)
  1662  000A2A  5046               	movf	i2c_masterOperation@read,w,c
  1663  000A2C  B4D8               	btfsc	status,2,c
  1664  000A2E  D002               	goto	l373
  1665                           
  1666                           ;i2c_master.c: 202: {
  1667                           ;i2c_master.c: 203: i2c_status.state = I2C_SEND_ADR_READ;
  1668  000A30  0E01               	movlw	1
  1669  000A32  D001               	goto	L1
  1670  000A34                     l373:
  1671                           
  1672                           ;i2c_master.c: 205: else
  1673                           ;i2c_master.c: 206: {
  1674                           ;i2c_master.c: 207: i2c_status.state = I2C_SEND_ADR_WRITE;
  1675  000A34  0E02               	movlw	2
  1676  000A36                     L1:
  1677  000A36  6E0B               	movwf	_i2c_status+10,c
  1678                           
  1679                           ;i2c_master.c: 208: }
  1680                           ;i2c_master.c: 209: i2c1_driver_start();
  1681  000A38  EC4E  F007         	call	_i2c1_driver_start	;wreg free
  1682                           
  1683                           ;i2c_master.c: 211: if(! mssp1_IRQisEnabled())
  1684  000A3C  EC5C  F006         	call	_mssp1_IRQisEnabled	;wreg free
  1685  000A40  A0D8               	btfss	status,0,c
  1686                           
  1687                           ;i2c_master.c: 212: i2c_poller();
  1688  000A42  ECCB  F005         	call	_i2c_poller	;wreg free
  1689  000A46                     l375:
  1690                           
  1691                           ;i2c_master.c: 213: }
  1692                           ;i2c_master.c: 214: return ret;
  1693  000A46  5047               	movf	i2c_masterOperation@ret,w,c
  1694  000A48  0012               	return	
  1695  000A4A                     __end_of_i2c_masterOperation:
  1696                           	opt stack 0
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           intcon	equ	0xFF2
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           postdec1	equ	0xFE5
  1705                           fsr1l	equ	0xFE1
  1706                           status	equ	0xFD8
  1707                           
  1708 ;; *************** function _mssp1_IRQisEnabled *****************
  1709 ;; Defined at:
  1710 ;;		line 43 in file "mcc_generated_files/i2c1_driver.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;		None               void
  1717 ;; Registers used:
  1718 ;;		wreg, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;Total ram usage:        1 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    6
  1731 ;; This function calls:
  1732 ;;		Nothing
  1733 ;; This function is called by:
  1734 ;;		_i2c_masterOperation
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text11
  1739  000CB8                     __ptext11:
  1740                           	opt stack 0
  1741  000CB8                     _mssp1_IRQisEnabled:
  1742                           	opt stack 21
  1743                           
  1744                           ;i2c1_driver.c: 45: return PIE3bits.SSP1IE;
  1745                           
  1746                           ;incstack = 0
  1747  000CB8  010E               	movlb	14	; () banked
  1748  000CBA  A1C5               	btfss	197,0,b	;volatile
  1749  000CBC  D003               	goto	u1490
  1750  000CBE  6A43               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  1751  000CC0  2A43               	incf	??_mssp1_IRQisEnabled& (0+255),f,c
  1752  000CC2  D001               	goto	u1498
  1753  000CC4                     u1490:
  1754  000CC4  6A43               	clrf	??_mssp1_IRQisEnabled& (0+255),c
  1755  000CC6                     u1498:
  1756  000CC6  3043               	rrcf	??_mssp1_IRQisEnabled,w,c
  1757  000CC8  0012               	return	
  1758  000CCA                     __end_of_mssp1_IRQisEnabled:
  1759                           	opt stack 0
  1760                           tblptru	equ	0xFF8
  1761                           tblptrh	equ	0xFF7
  1762                           tblptrl	equ	0xFF6
  1763                           tablat	equ	0xFF5
  1764                           intcon	equ	0xFF2
  1765                           postinc0	equ	0xFEE
  1766                           wreg	equ	0xFE8
  1767                           postdec1	equ	0xFE5
  1768                           fsr1l	equ	0xFE1
  1769                           status	equ	0xFD8
  1770                           
  1771 ;; *************** function _i2c_poller *****************
  1772 ;; Defined at:
  1773 ;;		line 230 in file "mcc_generated_files/drivers/i2c_master.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:   11
  1794 ;; This function calls:
  1795 ;;		_i2c_ISR
  1796 ;;		_mssp1_waitForEvent
  1797 ;; This function is called by:
  1798 ;;		_i2c_masterOperation
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text12
  1803  000B96                     __ptext12:
  1804                           	opt stack 0
  1805  000B96                     _i2c_poller:
  1806                           	opt stack 16
  1807                           
  1808                           ;i2c_master.c: 232: while(i2c_status.busy)
  1809                           
  1810                           ;incstack = 0
  1811  000B96  D008               	goto	l385
  1812  000B98                     
  1813                           ;i2c_master.c: 233: {
  1814                           ;i2c_master.c: 234: mssp1_waitForEvent((0));
  1815  000B98  0E00               	movlw	0
  1816  000B9A  6E43               	movwf	mssp1_waitForEvent@timeout,c
  1817  000B9C  0E00               	movlw	0
  1818  000B9E  6E44               	movwf	mssp1_waitForEvent@timeout+1,c
  1819  000BA0  EC12  F006         	call	_mssp1_waitForEvent	;wreg free
  1820                           
  1821                           ;i2c_master.c: 235: i2c_ISR();
  1822  000BA4  ECC5  F003         	call	_i2c_ISR	;wreg free
  1823  000BA8                     l385:
  1824  000BA8  A001               	btfss	_i2c_status,0,c
  1825  000BAA  0012               	return	
  1826  000BAC  D7F5               	goto	l386
  1827  000BAE                     __end_of_i2c_poller:
  1828                           	opt stack 0
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           intcon	equ	0xFF2
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           postdec1	equ	0xFE5
  1837                           fsr1l	equ	0xFE1
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _mssp1_waitForEvent *****************
  1841 ;; Defined at:
  1842 ;;		line 68 in file "mcc_generated_files/i2c1_driver.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  timeout         2   21[COMRAM] PTR unsigned int 
  1845 ;;		 -> NULL(0), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    6
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_i2c_poller
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text13
  1872  000C24                     __ptext13:
  1873                           	opt stack 0
  1874  000C24                     _mssp1_waitForEvent:
  1875                           	opt stack 20
  1876                           
  1877                           ;i2c1_driver.c: 73: if(PIR3bits.SSP1IF == 0)
  1878                           
  1879                           ;incstack = 0
  1880  000C24  010E               	movlb	14	; () banked
  1881  000C26  B1CD               	btfsc	205,0,b	;volatile
  1882  000C28  0012               	return	
  1883  000C2A                     u1430:
  1884                           
  1885                           ;i2c1_driver.c: 76: {
  1886                           ;i2c1_driver.c: 77: if(PIR3bits.SSP1IF) break;
  1887                           
  1888                           ;i2c1_driver.c: 74: {
  1889                           ;i2c1_driver.c: 75: while(1)
  1890  000C2A  010E               	movlb	14	; () banked
  1891  000C2C  B1CD               	btfsc	205,0,b	;volatile
  1892  000C2E  0012               	return	
  1893                           
  1894                           ; BSR set to: 14
  1895                           ;i2c1_driver.c: 78: _delay((unsigned long)((100)*(2000000/4000000.0)));
  1896                           
  1897                           ; BSR set to: 14
  1898                           
  1899                           ; BSR set to: 14
  1900  000C30  0E10               	movlw	16
  1901  000C32                     u2047:
  1902  000C32  2EE8               	decfsz	wreg,f,c
  1903  000C34  D7FE               	bra	u2047
  1904  000C36  D000               	nop2	
  1905  000C38  D7F8               	goto	u1430
  1906  000C3A                     __end_of_mssp1_waitForEvent:
  1907                           	opt stack 0
  1908                           tblptru	equ	0xFF8
  1909                           tblptrh	equ	0xFF7
  1910                           tblptrl	equ	0xFF6
  1911                           tablat	equ	0xFF5
  1912                           intcon	equ	0xFF2
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           postdec1	equ	0xFE5
  1916                           fsr1l	equ	0xFE1
  1917                           status	equ	0xFD8
  1918                           
  1919 ;; *************** function _i2c_ISR *****************
  1920 ;; Defined at:
  1921 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:   10
  1942 ;; This function calls:
  1943 ;;		_do_I2C_DO_ACK
  1944 ;;		_do_I2C_DO_ADDRESS_NACK
  1945 ;;		_do_I2C_DO_NACK_RESTART
  1946 ;;		_do_I2C_DO_NACK_STOP
  1947 ;;		_do_I2C_IDLE
  1948 ;;		_do_I2C_RCEN
  1949 ;;		_do_I2C_RESET
  1950 ;;		_do_I2C_RX
  1951 ;;		_do_I2C_SEND_ADR_READ
  1952 ;;		_do_I2C_SEND_ADR_WRITE
  1953 ;;		_do_I2C_SEND_RESTART
  1954 ;;		_do_I2C_SEND_RESTART_READ
  1955 ;;		_do_I2C_SEND_RESTART_WRITE
  1956 ;;		_do_I2C_SEND_STOP
  1957 ;;		_do_I2C_TX
  1958 ;;		_do_I2C_TX_EMPTY
  1959 ;;		_i2c1_driver_isNACK
  1960 ;;		_mssp1_clearIRQ
  1961 ;; This function is called by:
  1962 ;;		_i2c_open
  1963 ;;		_i2c_poller
  1964 ;;		_INTERRUPT_InterruptManager
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           	psect	text14
  1969  00078A                     __ptext14:
  1970                           	opt stack 0
  1971  00078A                     _i2c_ISR:
  1972                           	opt stack 0
  1973                           
  1974                           ;Skip over the trampoline to the duplicate function for level 2
  1975  00078A  B24A               	btfsc	btemp,1,c
  1976  00078C  EF2D  F004         	goto	i2_i2c_ISR
  1977  000790                     _i2c_ISR$intlevel0:
  1978                           	opt stack 16
  1979                           
  1980                           ;i2c_master.c: 421: mssp1_clearIRQ();
  1981                           
  1982                           ;incstack = 0
  1983  000790  EC31  F007         	call	_mssp1_clearIRQ	;wreg free
  1984                           
  1985                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  1986  000794  A601               	btfss	_i2c_status,3,c
  1987  000796  D006               	goto	l475
  1988  000798  EC1D  F006         	call	_i2c1_driver_isNACK	;wreg free
  1989  00079C  A0D8               	btfss	status,0,c
  1990  00079E  D002               	goto	l475
  1991                           
  1992                           ;i2c_master.c: 428: {
  1993                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  1994  0007A0  0E0F               	movlw	15
  1995  0007A2  6E0B               	movwf	_i2c_status+10,c
  1996  0007A4                     l475:
  1997                           
  1998                           ;i2c_master.c: 430: }
  1999                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  2000  0007A4  500B               	movf	_i2c_status+10,w,c
  2001  0007A6  0D03               	mullw	3
  2002  0007A8  0E60               	movlw	low _fsmStateTable
  2003  0007AA  24F3               	addwf	prodl,w,c
  2004  0007AC  6ED9               	movwf	fsr2l,c
  2005  0007AE  0E00               	movlw	high _fsmStateTable
  2006  0007B0  20F4               	addwfc	prodh,w,c
  2007  0007B2  6EDA               	movwf	fsr2h,c
  2008  0007B4  D801               	call	u1478
  2009  0007B6  D00A               	goto	u1479
  2010  0007B8                     u1478:
  2011  0007B8  0005               	push	
  2012  0007BA  6EFA               	movwf	pclath,c
  2013  0007BC  50DE               	movf	postinc2,w,c
  2014  0007BE  6EFD               	movwf	tosl,c
  2015  0007C0  50DE               	movf	postinc2,w,c
  2016  0007C2  6EFE               	movwf	tosh,c
  2017  0007C4  50DE               	movf	postinc2,w,c
  2018  0007C6  6EFF               	movwf	tosu,c
  2019  0007C8  50FA               	movf	pclath,w,c
  2020  0007CA  0012               	return		;indir
  2021  0007CC                     u1479:
  2022  0007CC  6E0B               	movwf	_i2c_status+10,c
  2023  0007CE  0012               	return		;funcret
  2024  0007D0                     __end_of_i2c_ISR:
  2025                           	opt stack 0
  2026                           tosu	equ	0xFFF
  2027                           tosh	equ	0xFFE
  2028                           tosl	equ	0xFFD
  2029                           pclath	equ	0xFFA
  2030                           tblptru	equ	0xFF8
  2031                           tblptrh	equ	0xFF7
  2032                           tblptrl	equ	0xFF6
  2033                           tablat	equ	0xFF5
  2034                           prodh	equ	0xFF4
  2035                           prodl	equ	0xFF3
  2036                           intcon	equ	0xFF2
  2037                           postinc0	equ	0xFEE
  2038                           wreg	equ	0xFE8
  2039                           postdec1	equ	0xFE5
  2040                           fsr1l	equ	0xFE1
  2041                           postinc2	equ	0xFDE
  2042                           fsr2h	equ	0xFDA
  2043                           fsr2l	equ	0xFD9
  2044                           status	equ	0xFD8
  2045                           
  2046 ;; *************** function _do_I2C_RX *****************
  2047 ;; Defined at:
  2048 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      enum E11956
  2055 ;; Registers used:
  2056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    9
  2069 ;; This function calls:
  2070 ;;		Absolute function
  2071 ;;		_do_I2C_DO_NACK_RESTART
  2072 ;;		_do_I2C_DO_NACK_STOP
  2073 ;;		_i2c1_driver_getRXData
  2074 ;;		_i2c1_driver_sendACK
  2075 ;;		_i2c_restartWrite
  2076 ;;		_rd1RegCompleteHandler
  2077 ;;		_rd2RegCompleteHandler
  2078 ;;		_rdBlkRegCompleteHandler
  2079 ;;		_returnReset
  2080 ;;		_returnStop
  2081 ;;		_wr1RegCompleteHandler
  2082 ;;		_wr2RegCompleteHandler
  2083 ;; This function is called by:
  2084 ;;		_i2c_ISR
  2085 ;;		i2_i2c_ISR
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text15
  2090  000418                     __ptext15:
  2091                           	opt stack 0
  2092  000418                     _do_I2C_RX:
  2093                           	opt stack 0
  2094                           
  2095                           ;Skip over the trampoline to the duplicate function for level 2
  2096  000418  B24A               	btfsc	btemp,1,c
  2097  00041A  EFC0  F002         	goto	i2_do_I2C_RX
  2098  00041E                     _do_I2C_RX$intlevel0:
  2099                           	opt stack 16
  2100                           
  2101                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  2102                           
  2103                           ;incstack = 0
  2104  00041E  EC46  F007         	call	_i2c1_driver_getRXData	;wreg free
  2105  000422  C003  FFD9         	movff	_i2c_status+2,fsr2l
  2106  000426  C004  FFDA         	movff	_i2c_status+3,fsr2h
  2107  00042A  6EDF               	movwf	indf2,c
  2108  00042C  4A03               	infsnz	_i2c_status+2,f,c
  2109  00042E  2A04               	incf	_i2c_status+3,f,c
  2110                           
  2111                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  2112  000430  0605               	decf	_i2c_status+4,f,c
  2113  000432  A0D8               	btfss	status,0,c
  2114  000434  0606               	decf	_i2c_status+5,f,c
  2115  000436  5005               	movf	_i2c_status+4,w,c
  2116  000438  1006               	iorwf	_i2c_status+5,w,c
  2117  00043A  B4D8               	btfsc	status,2,c
  2118  00043C  D004               	goto	l451
  2119                           
  2120                           ;i2c_master.c: 361: {
  2121                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  2122  00043E  EC2B  F007         	call	_i2c1_driver_sendACK	;wreg free
  2123                           
  2124                           ;i2c_master.c: 363: return I2C_RCEN;
  2125  000442  0E05               	movlw	5
  2126                           
  2127                           ;i2c_master.c: 364: }
  2128  000444  0012               	return	
  2129  000446                     l451:
  2130                           
  2131                           ;i2c_master.c: 365: else
  2132                           ;i2c_master.c: 366: {
  2133                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  2134  000446  8401               	bsf	_i2c_status,2,c
  2135                           
  2136                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  2137  000448  D006               	goto	l454
  2138  00044A                     
  2139                           ;i2c_master.c: 371: case i2c_restart_read:
  2140                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  2141  00044A  EC8C  F006         	call	_do_I2C_DO_NACK_RESTART	;wreg free
  2142  00044E  0012               	return	
  2143  000450                     
  2144                           ;i2c_master.c: 375: case i2c_stop:
  2145                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  2146                           
  2147                           ;i2c_master.c: 374: case i2c_continue:
  2148  000450  EC93  F006         	call	_do_I2C_DO_NACK_STOP	;wreg free
  2149                           
  2150                           ;i2c_master.c: 377: }
  2151  000454  0012               	return	
  2152  000456                     l454:
  2153  000456  C01F  F095         	movff	_i2c_status+30,returnStop@p
  2154  00045A  C020  F096         	movff	_i2c_status+31,returnStop@p+1
  2155  00045E  EE20  F00D         	lfsr	2,_i2c_status+12
  2156  000462  D801               	call	u1418
  2157  000464  D00A               	goto	u1419
  2158  000466                     u1418:
  2159  000466  0005               	push	
  2160  000468  6EFA               	movwf	pclath,c
  2161  00046A  50DE               	movf	postinc2,w,c
  2162  00046C  6EFD               	movwf	tosl,c
  2163  00046E  50DE               	movf	postinc2,w,c
  2164  000470  6EFE               	movwf	tosh,c
  2165  000472  50DE               	movf	postinc2,w,c
  2166  000474  6EFF               	movwf	tosu,c
  2167  000476  50FA               	movf	pclath,w,c
  2168  000478  0012               	return		;indir
  2169  00047A                     u1419:
  2170                           
  2171                           ; Switch size 1, requested type "space"
  2172                           ; Number of cases is 4, Range of values is 1 to 4
  2173                           ; switch strategies available:
  2174                           ; Name         Instructions Cycles
  2175                           ; simple_byte           13     7 (average)
  2176                           ;	Chosen strategy is simple_byte
  2177  00047A  0A01               	xorlw	1	; case 1
  2178  00047C  B4D8               	btfsc	status,2,c
  2179  00047E  D7E8               	goto	l457
  2180  000480  0A03               	xorlw	3	; case 2
  2181  000482  B4D8               	btfsc	status,2,c
  2182  000484  D7E2               	goto	l455
  2183  000486  0A01               	xorlw	1	; case 3
  2184  000488  B4D8               	btfsc	status,2,c
  2185  00048A  D7DF               	goto	l455
  2186  00048C  0A07               	xorlw	7	; case 4
  2187  00048E  D7E0               	goto	l457
  2188  000490                     __end_of_do_I2C_RX:
  2189                           	opt stack 0
  2190                           tosu	equ	0xFFF
  2191                           tosh	equ	0xFFE
  2192                           tosl	equ	0xFFD
  2193                           pclath	equ	0xFFA
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           prodh	equ	0xFF4
  2199                           prodl	equ	0xFF3
  2200                           intcon	equ	0xFF2
  2201                           postinc0	equ	0xFEE
  2202                           wreg	equ	0xFE8
  2203                           postdec1	equ	0xFE5
  2204                           fsr1l	equ	0xFE1
  2205                           indf2	equ	0xFDF
  2206                           postinc2	equ	0xFDE
  2207                           fsr2h	equ	0xFDA
  2208                           fsr2l	equ	0xFD9
  2209                           status	equ	0xFD8
  2210                           
  2211 ;; *************** function _do_I2C_TX *****************
  2212 ;; Defined at:
  2213 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      enum E11956
  2220 ;; Registers used:
  2221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2231 ;;Total ram usage:        2 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    9
  2234 ;; This function calls:
  2235 ;;		Absolute function
  2236 ;;		_do_I2C_SEND_RESTART_READ
  2237 ;;		_do_I2C_SEND_RESTART_WRITE
  2238 ;;		_do_I2C_SEND_STOP
  2239 ;;		_i2c1_driver_TXData
  2240 ;;		_i2c1_driver_isNACK
  2241 ;;		_i2c_restartWrite
  2242 ;;		_rd1RegCompleteHandler
  2243 ;;		_rd2RegCompleteHandler
  2244 ;;		_rdBlkRegCompleteHandler
  2245 ;;		_returnReset
  2246 ;;		_returnStop
  2247 ;;		_wr1RegCompleteHandler
  2248 ;;		_wr2RegCompleteHandler
  2249 ;; This function is called by:
  2250 ;;		_i2c_ISR
  2251 ;;		i2_i2c_ISR
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text16
  2256  000268                     __ptext16:
  2257                           	opt stack 0
  2258  000268                     _do_I2C_TX:
  2259                           	opt stack 0
  2260                           
  2261                           ;Skip over the trampoline to the duplicate function for level 2
  2262  000268  B24A               	btfsc	btemp,1,c
  2263  00026A  EFC6  F001         	goto	i2_do_I2C_TX
  2264  00026E                     _do_I2C_TX$intlevel0:
  2265                           	opt stack 16
  2266                           
  2267                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  2268                           
  2269                           ;incstack = 0
  2270  00026E  EC1D  F006         	call	_i2c1_driver_isNACK	;wreg free
  2271  000272  B0D8               	btfsc	status,0,c
  2272  000274  D00A               	goto	l436
  2273  000276  D026               	goto	l435
  2274  000278                     
  2275                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  2276  000278  ECB6  F006         	call	_do_I2C_SEND_RESTART_READ	;wreg free
  2277  00027C  0012               	return	
  2278  00027E                     
  2279                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  2280  00027E  ECAF  F006         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
  2281  000282  0012               	return	
  2282  000284                     
  2283                           ;i2c_master.c: 345: case i2c_stop:
  2284                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  2285                           
  2286                           ;i2c_master.c: 344: case i2c_continue:
  2287  000284  ECA1  F006         	call	_do_I2C_SEND_STOP	;wreg free
  2288                           
  2289                           ;i2c_master.c: 347: }
  2290  000288  0012               	return	
  2291  00028A                     l436:
  2292  00028A  C025  F095         	movff	_i2c_status+36,returnStop@p
  2293  00028E  C026  F096         	movff	_i2c_status+37,returnStop@p+1
  2294  000292  EE20  F016         	lfsr	2,_i2c_status+21
  2295  000296  D801               	call	u1388
  2296  000298  D00A               	goto	u1389
  2297  00029A                     u1388:
  2298  00029A  0005               	push	
  2299  00029C  6EFA               	movwf	pclath,c
  2300  00029E  50DE               	movf	postinc2,w,c
  2301  0002A0  6EFD               	movwf	tosl,c
  2302  0002A2  50DE               	movf	postinc2,w,c
  2303  0002A4  6EFE               	movwf	tosh,c
  2304  0002A6  50DE               	movf	postinc2,w,c
  2305  0002A8  6EFF               	movwf	tosu,c
  2306  0002AA  50FA               	movf	pclath,w,c
  2307  0002AC  0012               	return		;indir
  2308  0002AE                     u1389:
  2309                           
  2310                           ; Switch size 1, requested type "space"
  2311                           ; Number of cases is 4, Range of values is 1 to 4
  2312                           ; switch strategies available:
  2313                           ; Name         Instructions Cycles
  2314                           ; simple_byte           13     7 (average)
  2315                           ;	Chosen strategy is simple_byte
  2316  0002AE  0A01               	xorlw	1	; case 1
  2317  0002B0  B4D8               	btfsc	status,2,c
  2318  0002B2  D7E8               	goto	l440
  2319  0002B4  0A03               	xorlw	3	; case 2
  2320  0002B6  B4D8               	btfsc	status,2,c
  2321  0002B8  D7DF               	goto	l437
  2322  0002BA  0A01               	xorlw	1	; case 3
  2323  0002BC  B4D8               	btfsc	status,2,c
  2324  0002BE  D7DF               	goto	l439
  2325  0002C0  0A07               	xorlw	7	; case 4
  2326  0002C2  D7E0               	goto	l440
  2327  0002C4                     l435:
  2328                           
  2329                           ;i2c_master.c: 349: else
  2330                           ;i2c_master.c: 350: {
  2331                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  2332  0002C4  9601               	bcf	_i2c_status,3,c
  2333                           
  2334                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  2335  0002C6  C003  FFD9         	movff	_i2c_status+2,fsr2l
  2336  0002CA  C004  FFDA         	movff	_i2c_status+3,fsr2h
  2337  0002CE  4A03               	infsnz	_i2c_status+2,f,c
  2338  0002D0  2A04               	incf	_i2c_status+3,f,c
  2339  0002D2  50DF               	movf	indf2,w,c
  2340  0002D4  EC01  F007         	call	_i2c1_driver_TXData
  2341                           
  2342                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  2343  0002D8  0605               	decf	_i2c_status+4,f,c
  2344  0002DA  A0D8               	btfss	status,0,c
  2345  0002DC  0606               	decf	_i2c_status+5,f,c
  2346  0002DE  5005               	movf	_i2c_status+4,w,c
  2347  0002E0  1006               	iorwf	_i2c_status+5,w,c
  2348  0002E2  A4D8               	btfss	status,2,c
  2349  0002E4  D004               	goto	l446
  2350  0002E6  0E00               	movlw	0
  2351  0002E8  6E45               	movwf	_do_I2C_TX$1036+1,c
  2352  0002EA  0E06               	movlw	6
  2353  0002EC  D003               	goto	L2
  2354  0002EE                     l446:
  2355  0002EE  0E00               	movlw	0
  2356  0002F0  6E45               	movwf	_do_I2C_TX$1036+1,c
  2357  0002F2  0E03               	movlw	3
  2358  0002F4                     L2:
  2359  0002F4  6E44               	movwf	_do_I2C_TX$1036,c
  2360  0002F6  5044               	movf	_do_I2C_TX$1036,w,c
  2361  0002F8  0012               	return	
  2362  0002FA                     __end_of_do_I2C_TX:
  2363                           	opt stack 0
  2364                           tosu	equ	0xFFF
  2365                           tosh	equ	0xFFE
  2366                           tosl	equ	0xFFD
  2367                           pclath	equ	0xFFA
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           prodh	equ	0xFF4
  2373                           prodl	equ	0xFF3
  2374                           intcon	equ	0xFF2
  2375                           postinc0	equ	0xFEE
  2376                           wreg	equ	0xFE8
  2377                           postdec1	equ	0xFE5
  2378                           fsr1l	equ	0xFE1
  2379                           indf2	equ	0xFDF
  2380                           postinc2	equ	0xFDE
  2381                           fsr2h	equ	0xFDA
  2382                           fsr2l	equ	0xFD9
  2383                           status	equ	0xFD8
  2384                           
  2385 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  2386 ;; Defined at:
  2387 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;		None
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      enum E11956
  2394 ;; Registers used:
  2395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    9
  2408 ;; This function calls:
  2409 ;;		Absolute function
  2410 ;;		_do_I2C_SEND_RESTART
  2411 ;;		_do_I2C_SEND_STOP
  2412 ;;		_i2c_restartWrite
  2413 ;;		_rd1RegCompleteHandler
  2414 ;;		_rd2RegCompleteHandler
  2415 ;;		_rdBlkRegCompleteHandler
  2416 ;;		_returnReset
  2417 ;;		_returnStop
  2418 ;;		_wr1RegCompleteHandler
  2419 ;;		_wr2RegCompleteHandler
  2420 ;; This function is called by:
  2421 ;;		_i2c_ISR
  2422 ;;		i2_i2c_ISR
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text17
  2427  00073E                     __ptext17:
  2428                           	opt stack 0
  2429  00073E                     _do_I2C_DO_ADDRESS_NACK:
  2430                           	opt stack 0
  2431                           
  2432                           ;Skip over the trampoline to the duplicate function for level 2
  2433  00073E  B24A               	btfsc	btemp,1,c
  2434  000740  EFE8  F003         	goto	i2_do_I2C_DO_ADDRESS_NACK
  2435  000744                     _do_I2C_DO_ADDRESS_NACK$intlevel0:
  2436                           	opt stack 16
  2437                           
  2438                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  2439                           
  2440                           ;incstack = 0
  2441  000744  9601               	bcf	_i2c_status,3,c
  2442                           
  2443                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  2444  000746  0E02               	movlw	2
  2445  000748  6E0C               	movwf	_i2c_status+11,c
  2446                           
  2447                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  2448  00074A  D006               	goto	l427
  2449  00074C                     
  2450                           ;i2c_master.c: 326: case i2c_restart_write:
  2451                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  2452  00074C  ECA8  F006         	call	_do_I2C_SEND_RESTART	;wreg free
  2453  000750  0012               	return	
  2454  000752                     
  2455                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  2456  000752  ECA1  F006         	call	_do_I2C_SEND_STOP	;wreg free
  2457                           
  2458                           ;i2c_master.c: 330: }
  2459  000756  0012               	return	
  2460  000758                     l427:
  2461  000758  C023  F095         	movff	_i2c_status+34,returnStop@p
  2462  00075C  C024  F096         	movff	_i2c_status+35,returnStop@p+1
  2463  000760  EE20  F013         	lfsr	2,_i2c_status+18
  2464  000764  D801               	call	u1368
  2465  000766  D00A               	goto	u1369
  2466  000768                     u1368:
  2467  000768  0005               	push	
  2468  00076A  6EFA               	movwf	pclath,c
  2469  00076C  50DE               	movf	postinc2,w,c
  2470  00076E  6EFD               	movwf	tosl,c
  2471  000770  50DE               	movf	postinc2,w,c
  2472  000772  6EFE               	movwf	tosh,c
  2473  000774  50DE               	movf	postinc2,w,c
  2474  000776  6EFF               	movwf	tosu,c
  2475  000778  50FA               	movf	pclath,w,c
  2476  00077A  0012               	return		;indir
  2477  00077C                     u1369:
  2478                           
  2479                           ; Switch size 1, requested type "space"
  2480                           ; Number of cases is 2, Range of values is 2 to 3
  2481                           ; switch strategies available:
  2482                           ; Name         Instructions Cycles
  2483                           ; simple_byte            7     4 (average)
  2484                           ;	Chosen strategy is simple_byte
  2485  00077C  0A02               	xorlw	2	; case 2
  2486  00077E  B4D8               	btfsc	status,2,c
  2487  000780  D7E5               	goto	l428
  2488  000782  0A01               	xorlw	1	; case 3
  2489  000784  B4D8               	btfsc	status,2,c
  2490  000786  D7E2               	goto	l428
  2491  000788  D7E4               	goto	l431
  2492  00078A                     __end_of_do_I2C_DO_ADDRESS_NACK:
  2493                           	opt stack 0
  2494                           tosu	equ	0xFFF
  2495                           tosh	equ	0xFFE
  2496                           tosl	equ	0xFFD
  2497                           pclath	equ	0xFFA
  2498                           tblptru	equ	0xFF8
  2499                           tblptrh	equ	0xFF7
  2500                           tblptrl	equ	0xFF6
  2501                           tablat	equ	0xFF5
  2502                           prodh	equ	0xFF4
  2503                           prodl	equ	0xFF3
  2504                           intcon	equ	0xFF2
  2505                           postinc0	equ	0xFEE
  2506                           wreg	equ	0xFE8
  2507                           postdec1	equ	0xFE5
  2508                           fsr1l	equ	0xFE1
  2509                           indf2	equ	0xFDF
  2510                           postinc2	equ	0xFDE
  2511                           fsr2h	equ	0xFDA
  2512                           fsr2l	equ	0xFD9
  2513                           status	equ	0xFD8
  2514                           
  2515 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  2516 ;; Defined at:
  2517 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      enum E11956
  2524 ;; Registers used:
  2525 ;;		wreg, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    7
  2538 ;; This function calls:
  2539 ;;		_i2c1_driver_sendNACK
  2540 ;; This function is called by:
  2541 ;;		_do_I2C_RX
  2542 ;;		_i2c_ISR
  2543 ;;		i2_i2c_ISR
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text18
  2548  000D18                     __ptext18:
  2549                           	opt stack 0
  2550  000D18                     _do_I2C_DO_NACK_RESTART:
  2551                           	opt stack 0
  2552                           
  2553                           ;Skip over the trampoline to the duplicate function for level 2
  2554  000D18  B24A               	btfsc	btemp,1,c
  2555  000D1A  EF05  F007         	goto	i2_do_I2C_DO_NACK_RESTART
  2556  000D1E                     _do_I2C_DO_NACK_RESTART$intlevel0:
  2557                           	opt stack 17
  2558                           
  2559                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  2560                           
  2561                           ;incstack = 0
  2562  000D1E  EC28  F007         	call	_i2c1_driver_sendNACK	;wreg free
  2563                           
  2564                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  2565  000D22  0E09               	movlw	9
  2566  000D24  0012               	return	
  2567  000D26                     __end_of_do_I2C_DO_NACK_RESTART:
  2568                           	opt stack 0
  2569                           tosu	equ	0xFFF
  2570                           tosh	equ	0xFFE
  2571                           tosl	equ	0xFFD
  2572                           pclath	equ	0xFFA
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           prodh	equ	0xFF4
  2578                           prodl	equ	0xFF3
  2579                           intcon	equ	0xFF2
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           postdec1	equ	0xFE5
  2583                           fsr1l	equ	0xFE1
  2584                           indf2	equ	0xFDF
  2585                           postinc2	equ	0xFDE
  2586                           fsr2h	equ	0xFDA
  2587                           fsr2l	equ	0xFD9
  2588                           status	equ	0xFD8
  2589                           
  2590 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  2591 ;; Defined at:
  2592 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      enum E11956
  2599 ;; Registers used:
  2600 ;;		wreg, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    7
  2613 ;; This function calls:
  2614 ;;		_i2c1_driver_sendNACK
  2615 ;; This function is called by:
  2616 ;;		_do_I2C_RX
  2617 ;;		_i2c_ISR
  2618 ;;		i2_i2c_ISR
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text19
  2623  000D26                     __ptext19:
  2624                           	opt stack 0
  2625  000D26                     _do_I2C_DO_NACK_STOP:
  2626                           	opt stack 0
  2627                           
  2628                           ;Skip over the trampoline to the duplicate function for level 2
  2629  000D26  B24A               	btfsc	btemp,1,c
  2630  000D28  EF09  F007         	goto	i2_do_I2C_DO_NACK_STOP
  2631  000D2C                     _do_I2C_DO_NACK_STOP$intlevel0:
  2632                           	opt stack 17
  2633                           
  2634                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  2635                           
  2636                           ;incstack = 0
  2637  000D2C  EC28  F007         	call	_i2c1_driver_sendNACK	;wreg free
  2638                           
  2639                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  2640  000D30  0E0A               	movlw	10
  2641  000D32  0012               	return	
  2642  000D34                     __end_of_do_I2C_DO_NACK_STOP:
  2643                           	opt stack 0
  2644                           tosu	equ	0xFFF
  2645                           tosh	equ	0xFFE
  2646                           tosl	equ	0xFFD
  2647                           pclath	equ	0xFFA
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           postdec1	equ	0xFE5
  2658                           fsr1l	equ	0xFE1
  2659                           indf2	equ	0xFDF
  2660                           postinc2	equ	0xFDE
  2661                           fsr2h	equ	0xFDA
  2662                           fsr2l	equ	0xFD9
  2663                           status	equ	0xFD8
  2664                           
  2665 ;; *************** function _do_I2C_DO_ACK *****************
  2666 ;; Defined at:
  2667 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      enum E11956
  2674 ;; Registers used:
  2675 ;;		wreg, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2685 ;;Total ram usage:        0 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    7
  2688 ;; This function calls:
  2689 ;;		_i2c1_driver_sendACK
  2690 ;; This function is called by:
  2691 ;;		_i2c_ISR
  2692 ;;		i2_i2c_ISR
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text20
  2697  000D34                     __ptext20:
  2698                           	opt stack 0
  2699  000D34                     _do_I2C_DO_ACK:
  2700                           	opt stack 0
  2701                           
  2702                           ;Skip over the trampoline to the duplicate function for level 2
  2703  000D34  B24A               	btfsc	btemp,1,c
  2704  000D36  EF0D  F007         	goto	i2_do_I2C_DO_ACK
  2705  000D3A                     _do_I2C_DO_ACK$intlevel0:
  2706                           	opt stack 18
  2707                           
  2708                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  2709                           
  2710                           ;incstack = 0
  2711  000D3A  EC2B  F007         	call	_i2c1_driver_sendACK	;wreg free
  2712                           
  2713                           ;i2c_master.c: 302: return I2C_RCEN;
  2714  000D3E  0E05               	movlw	5
  2715  000D40  0012               	return	
  2716  000D42                     __end_of_do_I2C_DO_ACK:
  2717                           	opt stack 0
  2718                           tosu	equ	0xFFF
  2719                           tosh	equ	0xFFE
  2720                           tosl	equ	0xFFD
  2721                           pclath	equ	0xFFA
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           postdec1	equ	0xFE5
  2732                           fsr1l	equ	0xFE1
  2733                           indf2	equ	0xFDF
  2734                           postinc2	equ	0xFDE
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _do_I2C_RCEN *****************
  2740 ;; Defined at:
  2741 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      enum E11956
  2748 ;; Registers used:
  2749 ;;		wreg, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    7
  2762 ;; This function calls:
  2763 ;;		_i2c1_driver_startRX
  2764 ;; This function is called by:
  2765 ;;		_i2c_ISR
  2766 ;;		i2_i2c_ISR
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text21
  2771  000CDC                     __ptext21:
  2772                           	opt stack 0
  2773  000CDC                     _do_I2C_RCEN:
  2774                           	opt stack 0
  2775                           
  2776                           ;Skip over the trampoline to the duplicate function for level 2
  2777  000CDC  B24A               	btfsc	btemp,1,c
  2778  000CDE  EFEF  F006         	goto	i2_do_I2C_RCEN
  2779  000CE2                     _do_I2C_RCEN$intlevel0:
  2780                           	opt stack 18
  2781                           
  2782                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  2783                           
  2784                           ;incstack = 0
  2785  000CE2  9601               	bcf	_i2c_status,3,c
  2786                           
  2787                           ;i2c_master.c: 295: i2c1_driver_startRX();
  2788  000CE4  EC48  F007         	call	_i2c1_driver_startRX	;wreg free
  2789                           
  2790                           ;i2c_master.c: 296: return I2C_RX;
  2791  000CE8  0E04               	movlw	4
  2792  000CEA  0012               	return	
  2793  000CEC                     __end_of_do_I2C_RCEN:
  2794                           	opt stack 0
  2795                           tosu	equ	0xFFF
  2796                           tosh	equ	0xFFE
  2797                           tosl	equ	0xFFD
  2798                           pclath	equ	0xFFA
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           prodh	equ	0xFF4
  2804                           prodl	equ	0xFF3
  2805                           intcon	equ	0xFF2
  2806                           postinc0	equ	0xFEE
  2807                           wreg	equ	0xFE8
  2808                           postdec1	equ	0xFE5
  2809                           fsr1l	equ	0xFE1
  2810                           indf2	equ	0xFDF
  2811                           postinc2	equ	0xFDE
  2812                           fsr2h	equ	0xFDA
  2813                           fsr2l	equ	0xFD9
  2814                           status	equ	0xFD8
  2815                           
  2816 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  2817 ;; Defined at:
  2818 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      enum E11956
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    7
  2839 ;; This function calls:
  2840 ;;		_i2c1_driver_TXData
  2841 ;; This function is called by:
  2842 ;;		_i2c_ISR
  2843 ;;		i2_i2c_ISR
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text22
  2848  000C7C                     __ptext22:
  2849                           	opt stack 0
  2850  000C7C                     _do_I2C_SEND_ADR_WRITE:
  2851                           	opt stack 0
  2852                           
  2853                           ;Skip over the trampoline to the duplicate function for level 2
  2854  000C7C  B24A               	btfsc	btemp,1,c
  2855  000C7E  EFCB  F006         	goto	i2_do_I2C_SEND_ADR_WRITE
  2856  000C82                     _do_I2C_SEND_ADR_WRITE$intlevel0:
  2857                           	opt stack 18
  2858                           
  2859                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  2860                           
  2861                           ;incstack = 0
  2862  000C82  8601               	bsf	_i2c_status,3,c
  2863                           
  2864                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  2865  000C84  5002               	movf	_i2c_status+1,w,c
  2866  000C86  2402               	addwf	_i2c_status+1,w,c
  2867  000C88  EC01  F007         	call	_i2c1_driver_TXData
  2868                           
  2869                           ;i2c_master.c: 289: return I2C_TX;
  2870  000C8C  0E03               	movlw	3
  2871  000C8E  0012               	return	
  2872  000C90                     __end_of_do_I2C_SEND_ADR_WRITE:
  2873                           	opt stack 0
  2874                           tosu	equ	0xFFF
  2875                           tosh	equ	0xFFE
  2876                           tosl	equ	0xFFD
  2877                           pclath	equ	0xFFA
  2878                           tblptru	equ	0xFF8
  2879                           tblptrh	equ	0xFF7
  2880                           tblptrl	equ	0xFF6
  2881                           tablat	equ	0xFF5
  2882                           prodh	equ	0xFF4
  2883                           prodl	equ	0xFF3
  2884                           intcon	equ	0xFF2
  2885                           postinc0	equ	0xFEE
  2886                           wreg	equ	0xFE8
  2887                           postdec1	equ	0xFE5
  2888                           fsr1l	equ	0xFE1
  2889                           indf2	equ	0xFDF
  2890                           postinc2	equ	0xFDE
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  2896 ;; Defined at:
  2897 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      enum E11956
  2904 ;; Registers used:
  2905 ;;		wreg, status,0, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    7
  2918 ;; This function calls:
  2919 ;;		_i2c1_driver_TXData
  2920 ;; This function is called by:
  2921 ;;		_i2c_ISR
  2922 ;;		i2_i2c_ISR
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text23
  2927  000C90                     __ptext23:
  2928                           	opt stack 0
  2929  000C90                     _do_I2C_SEND_ADR_READ:
  2930                           	opt stack 0
  2931                           
  2932                           ;Skip over the trampoline to the duplicate function for level 2
  2933  000C90  B24A               	btfsc	btemp,1,c
  2934  000C92  EFD2  F006         	goto	i2_do_I2C_SEND_ADR_READ
  2935  000C96                     _do_I2C_SEND_ADR_READ$intlevel0:
  2936                           	opt stack 18
  2937                           
  2938                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  2939                           
  2940                           ;incstack = 0
  2941  000C96  8601               	bsf	_i2c_status,3,c
  2942                           
  2943                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  2944  000C98  80D8               	bsf	status,0,c
  2945  000C9A  3402               	rlcf	_i2c_status+1,w,c
  2946  000C9C  EC01  F007         	call	_i2c1_driver_TXData
  2947                           
  2948                           ;i2c_master.c: 282: return I2C_RCEN;
  2949  000CA0  0E05               	movlw	5
  2950  000CA2  0012               	return	
  2951  000CA4                     __end_of_do_I2C_SEND_ADR_READ:
  2952                           	opt stack 0
  2953                           tosu	equ	0xFFF
  2954                           tosh	equ	0xFFE
  2955                           tosl	equ	0xFFD
  2956                           pclath	equ	0xFFA
  2957                           tblptru	equ	0xFF8
  2958                           tblptrh	equ	0xFF7
  2959                           tblptrl	equ	0xFF6
  2960                           tablat	equ	0xFF5
  2961                           prodh	equ	0xFF4
  2962                           prodl	equ	0xFF3
  2963                           intcon	equ	0xFF2
  2964                           postinc0	equ	0xFEE
  2965                           wreg	equ	0xFE8
  2966                           postdec1	equ	0xFE5
  2967                           fsr1l	equ	0xFE1
  2968                           indf2	equ	0xFDF
  2969                           postinc2	equ	0xFDE
  2970                           fsr2h	equ	0xFDA
  2971                           fsr2l	equ	0xFD9
  2972                           status	equ	0xFD8
  2973                           
  2974 ;; *************** function _do_I2C_SEND_STOP *****************
  2975 ;; Defined at:
  2976 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      enum E11956
  2983 ;; Registers used:
  2984 ;;		wreg, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    7
  2997 ;; This function calls:
  2998 ;;		_i2c1_driver_stop
  2999 ;; This function is called by:
  3000 ;;		_do_I2C_DO_ADDRESS_NACK
  3001 ;;		_do_I2C_TX
  3002 ;;		_do_I2C_TX_EMPTY
  3003 ;;		_i2c_ISR
  3004 ;;		i2_i2c_ISR
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text24
  3009  000D42                     __ptext24:
  3010                           	opt stack 0
  3011  000D42                     _do_I2C_SEND_STOP:
  3012                           	opt stack 0
  3013                           
  3014                           ;Skip over the trampoline to the duplicate function for level 2
  3015  000D42  B24A               	btfsc	btemp,1,c
  3016  000D44  EF11  F007         	goto	i2_do_I2C_SEND_STOP
  3017  000D48                     _do_I2C_SEND_STOP$intlevel0:
  3018                           	opt stack 17
  3019                           
  3020                           ;i2c_master.c: 274: i2c1_driver_stop();
  3021                           
  3022                           ;incstack = 0
  3023  000D48  EC4A  F007         	call	_i2c1_driver_stop	;wreg free
  3024                           
  3025                           ;i2c_master.c: 275: return I2C_IDLE;
  3026  000D4C  0E00               	movlw	0
  3027  000D4E  0012               	return	
  3028  000D50                     __end_of_do_I2C_SEND_STOP:
  3029                           	opt stack 0
  3030                           tosu	equ	0xFFF
  3031                           tosh	equ	0xFFE
  3032                           tosl	equ	0xFFD
  3033                           pclath	equ	0xFFA
  3034                           tblptru	equ	0xFF8
  3035                           tblptrh	equ	0xFF7
  3036                           tblptrl	equ	0xFF6
  3037                           tablat	equ	0xFF5
  3038                           prodh	equ	0xFF4
  3039                           prodl	equ	0xFF3
  3040                           intcon	equ	0xFF2
  3041                           postinc0	equ	0xFEE
  3042                           wreg	equ	0xFE8
  3043                           postdec1	equ	0xFE5
  3044                           fsr1l	equ	0xFE1
  3045                           indf2	equ	0xFDF
  3046                           postinc2	equ	0xFDE
  3047                           fsr2h	equ	0xFDA
  3048                           fsr2l	equ	0xFD9
  3049                           status	equ	0xFD8
  3050                           
  3051 ;; *************** function _do_I2C_SEND_RESTART *****************
  3052 ;; Defined at:
  3053 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  1    wreg      enum E11956
  3060 ;; Registers used:
  3061 ;;		wreg, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3071 ;;Total ram usage:        0 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    7
  3074 ;; This function calls:
  3075 ;;		_i2c1_driver_restart
  3076 ;; This function is called by:
  3077 ;;		_do_I2C_DO_ADDRESS_NACK
  3078 ;;		_do_I2C_TX_EMPTY
  3079 ;;		_i2c_ISR
  3080 ;;		i2_i2c_ISR
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text25
  3085  000D50                     __ptext25:
  3086                           	opt stack 0
  3087  000D50                     _do_I2C_SEND_RESTART:
  3088                           	opt stack 0
  3089                           
  3090                           ;Skip over the trampoline to the duplicate function for level 2
  3091  000D50  B24A               	btfsc	btemp,1,c
  3092  000D52  EF15  F007         	goto	i2_do_I2C_SEND_RESTART
  3093  000D56                     _do_I2C_SEND_RESTART$intlevel0:
  3094                           	opt stack 17
  3095                           
  3096                           ;i2c_master.c: 268: i2c1_driver_restart();
  3097                           
  3098                           ;incstack = 0
  3099  000D56  EC4C  F007         	call	_i2c1_driver_restart	;wreg free
  3100                           
  3101                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  3102  000D5A  0E01               	movlw	1
  3103  000D5C  0012               	return	
  3104  000D5E                     __end_of_do_I2C_SEND_RESTART:
  3105                           	opt stack 0
  3106                           tosu	equ	0xFFF
  3107                           tosh	equ	0xFFE
  3108                           tosl	equ	0xFFD
  3109                           pclath	equ	0xFFA
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodh	equ	0xFF4
  3115                           prodl	equ	0xFF3
  3116                           intcon	equ	0xFF2
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postdec1	equ	0xFE5
  3120                           fsr1l	equ	0xFE1
  3121                           indf2	equ	0xFDF
  3122                           postinc2	equ	0xFDE
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  3128 ;; Defined at:
  3129 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      enum E11956
  3136 ;; Registers used:
  3137 ;;		wreg, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    7
  3150 ;; This function calls:
  3151 ;;		_i2c1_driver_restart
  3152 ;; This function is called by:
  3153 ;;		_do_I2C_TX
  3154 ;;		_i2c_ISR
  3155 ;;		i2_i2c_ISR
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text26
  3160  000D5E                     __ptext26:
  3161                           	opt stack 0
  3162  000D5E                     _do_I2C_SEND_RESTART_WRITE:
  3163                           	opt stack 0
  3164                           
  3165                           ;Skip over the trampoline to the duplicate function for level 2
  3166  000D5E  B24A               	btfsc	btemp,1,c
  3167  000D60  EF19  F007         	goto	i2_do_I2C_SEND_RESTART_WRITE
  3168  000D64                     _do_I2C_SEND_RESTART_WRITE$intlevel0:
  3169                           	opt stack 17
  3170                           
  3171                           ;i2c_master.c: 262: i2c1_driver_restart();
  3172                           
  3173                           ;incstack = 0
  3174  000D64  EC4C  F007         	call	_i2c1_driver_restart	;wreg free
  3175                           
  3176                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  3177  000D68  0E02               	movlw	2
  3178  000D6A  0012               	return	
  3179  000D6C                     __end_of_do_I2C_SEND_RESTART_WRITE:
  3180                           	opt stack 0
  3181                           tosu	equ	0xFFF
  3182                           tosh	equ	0xFFE
  3183                           tosl	equ	0xFFD
  3184                           pclath	equ	0xFFA
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           prodh	equ	0xFF4
  3190                           prodl	equ	0xFF3
  3191                           intcon	equ	0xFF2
  3192                           postinc0	equ	0xFEE
  3193                           wreg	equ	0xFE8
  3194                           postdec1	equ	0xFE5
  3195                           fsr1l	equ	0xFE1
  3196                           indf2	equ	0xFDF
  3197                           postinc2	equ	0xFDE
  3198                           fsr2h	equ	0xFDA
  3199                           fsr2l	equ	0xFD9
  3200                           status	equ	0xFD8
  3201                           
  3202 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  3203 ;; Defined at:
  3204 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      enum E11956
  3211 ;; Registers used:
  3212 ;;		wreg, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;Total ram usage:        0 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    7
  3225 ;; This function calls:
  3226 ;;		_i2c1_driver_restart
  3227 ;; This function is called by:
  3228 ;;		_do_I2C_TX
  3229 ;;		_i2c_ISR
  3230 ;;		i2_i2c_ISR
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text27
  3235  000D6C                     __ptext27:
  3236                           	opt stack 0
  3237  000D6C                     _do_I2C_SEND_RESTART_READ:
  3238                           	opt stack 0
  3239                           
  3240                           ;Skip over the trampoline to the duplicate function for level 2
  3241  000D6C  B24A               	btfsc	btemp,1,c
  3242  000D6E  EF1D  F007         	goto	i2_do_I2C_SEND_RESTART_READ
  3243  000D72                     _do_I2C_SEND_RESTART_READ$intlevel0:
  3244                           	opt stack 17
  3245                           
  3246                           ;i2c_master.c: 256: i2c1_driver_restart();
  3247                           
  3248                           ;incstack = 0
  3249  000D72  EC4C  F007         	call	_i2c1_driver_restart	;wreg free
  3250                           
  3251                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  3252  000D76  0E01               	movlw	1
  3253  000D78  0012               	return	
  3254  000D7A                     __end_of_do_I2C_SEND_RESTART_READ:
  3255                           	opt stack 0
  3256                           tosu	equ	0xFFF
  3257                           tosh	equ	0xFFE
  3258                           tosl	equ	0xFFD
  3259                           pclath	equ	0xFFA
  3260                           tblptru	equ	0xFF8
  3261                           tblptrh	equ	0xFF7
  3262                           tblptrl	equ	0xFF6
  3263                           tablat	equ	0xFF5
  3264                           prodh	equ	0xFF4
  3265                           prodl	equ	0xFF3
  3266                           intcon	equ	0xFF2
  3267                           postinc0	equ	0xFEE
  3268                           wreg	equ	0xFE8
  3269                           postdec1	equ	0xFE5
  3270                           fsr1l	equ	0xFE1
  3271                           indf2	equ	0xFDF
  3272                           postinc2	equ	0xFDE
  3273                           fsr2h	equ	0xFDA
  3274                           fsr2l	equ	0xFD9
  3275                           status	equ	0xFD8
  3276                           
  3277 ;; *************** function _do_I2C_IDLE *****************
  3278 ;; Defined at:
  3279 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;		None
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      enum E11956
  3286 ;; Registers used:
  3287 ;;		wreg, status,2
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3297 ;;Total ram usage:        0 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    6
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_i2c_ISR
  3304 ;;		i2_i2c_ISR
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text28
  3309  000CEC                     __ptext28:
  3310                           	opt stack 0
  3311  000CEC                     _do_I2C_IDLE:
  3312                           	opt stack 0
  3313                           
  3314                           ;Skip over the trampoline to the duplicate function for level 2
  3315  000CEC  B24A               	btfsc	btemp,1,c
  3316  000CEE  EFF4  F006         	goto	i2_do_I2C_IDLE
  3317  000CF2                     _do_I2C_IDLE$intlevel0:
  3318                           	opt stack 19
  3319                           
  3320                           ;i2c_master.c: 249: i2c_status.busy = 0;
  3321                           
  3322                           ;incstack = 0
  3323  000CF2  9001               	bcf	_i2c_status,0,c
  3324                           
  3325                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  3326  000CF4  0E00               	movlw	0
  3327  000CF6  6E0C               	movwf	_i2c_status+11,c
  3328                           
  3329                           ;i2c_master.c: 251: return I2C_RESET;
  3330  000CF8  0E0E               	movlw	14
  3331  000CFA  0012               	return	
  3332  000CFC                     __end_of_do_I2C_IDLE:
  3333                           	opt stack 0
  3334                           tosu	equ	0xFFF
  3335                           tosh	equ	0xFFE
  3336                           tosl	equ	0xFFD
  3337                           pclath	equ	0xFFA
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           prodh	equ	0xFF4
  3343                           prodl	equ	0xFF3
  3344                           intcon	equ	0xFF2
  3345                           postinc0	equ	0xFEE
  3346                           wreg	equ	0xFE8
  3347                           postdec1	equ	0xFE5
  3348                           fsr1l	equ	0xFE1
  3349                           indf2	equ	0xFDF
  3350                           postinc2	equ	0xFDE
  3351                           fsr2h	equ	0xFDA
  3352                           fsr2l	equ	0xFD9
  3353                           status	equ	0xFD8
  3354                           
  3355 ;; *************** function _do_I2C_RESET *****************
  3356 ;; Defined at:
  3357 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      enum E11956
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;Total ram usage:        0 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    7
  3378 ;; This function calls:
  3379 ;;		_i2c1_driver_resetBus
  3380 ;; This function is called by:
  3381 ;;		_i2c_ISR
  3382 ;;		i2_i2c_ISR
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text29
  3387  000CA4                     __ptext29:
  3388                           	opt stack 0
  3389  000CA4                     _do_I2C_RESET:
  3390                           	opt stack 0
  3391                           
  3392                           ;Skip over the trampoline to the duplicate function for level 2
  3393  000CA4  B24A               	btfsc	btemp,1,c
  3394  000CA6  EFD9  F006         	goto	i2_do_I2C_RESET
  3395  000CAA                     _do_I2C_RESET$intlevel0:
  3396                           	opt stack 18
  3397                           
  3398                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  3399                           
  3400                           ;incstack = 0
  3401  000CAA  EC60  F007         	call	_i2c1_driver_resetBus	;wreg free
  3402                           
  3403                           ;i2c_master.c: 242: i2c_status.busy = 0;
  3404  000CAE  9001               	bcf	_i2c_status,0,c
  3405                           
  3406                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  3407  000CB0  0E00               	movlw	0
  3408  000CB2  6E0C               	movwf	_i2c_status+11,c
  3409                           
  3410                           ;i2c_master.c: 244: return I2C_RESET;
  3411  000CB4  0E0E               	movlw	14
  3412  000CB6  0012               	return	
  3413  000CB8                     __end_of_do_I2C_RESET:
  3414                           	opt stack 0
  3415                           tosu	equ	0xFFF
  3416                           tosh	equ	0xFFE
  3417                           tosl	equ	0xFFD
  3418                           pclath	equ	0xFFA
  3419                           tblptru	equ	0xFF8
  3420                           tblptrh	equ	0xFF7
  3421                           tblptrl	equ	0xFF6
  3422                           tablat	equ	0xFF5
  3423                           prodh	equ	0xFF4
  3424                           prodl	equ	0xFF3
  3425                           intcon	equ	0xFF2
  3426                           postinc0	equ	0xFEE
  3427                           wreg	equ	0xFE8
  3428                           postdec1	equ	0xFE5
  3429                           fsr1l	equ	0xFE1
  3430                           indf2	equ	0xFDF
  3431                           postinc2	equ	0xFDE
  3432                           fsr2h	equ	0xFDA
  3433                           fsr2l	equ	0xFD9
  3434                           status	equ	0xFD8
  3435                           
  3436 ;; *************** function _do_I2C_TX_EMPTY *****************
  3437 ;; Defined at:
  3438 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      enum E11956
  3445 ;; Registers used:
  3446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;Total ram usage:        0 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    9
  3459 ;; This function calls:
  3460 ;;		Absolute function
  3461 ;;		_do_I2C_SEND_RESTART
  3462 ;;		_do_I2C_SEND_STOP
  3463 ;;		_i2c_restartWrite
  3464 ;;		_mssp1_setIRQ
  3465 ;;		_rd1RegCompleteHandler
  3466 ;;		_rd2RegCompleteHandler
  3467 ;;		_rdBlkRegCompleteHandler
  3468 ;;		_returnReset
  3469 ;;		_returnStop
  3470 ;;		_wr1RegCompleteHandler
  3471 ;;		_wr2RegCompleteHandler
  3472 ;; This function is called by:
  3473 ;;		_i2c_ISR
  3474 ;;		i2_i2c_ISR
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text30
  3479  0005F2                     __ptext30:
  3480                           	opt stack 0
  3481  0005F2                     _do_I2C_TX_EMPTY:
  3482                           	opt stack 0
  3483                           
  3484                           ;Skip over the trampoline to the duplicate function for level 2
  3485  0005F2  B24A               	btfsc	btemp,1,c
  3486  0005F4  EF27  F003         	goto	i2_do_I2C_TX_EMPTY
  3487  0005F8                     _do_I2C_TX_EMPTY$intlevel0:
  3488                           	opt stack 16
  3489                           
  3490                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  3491                           
  3492                           ;incstack = 0
  3493  0005F8  8401               	bsf	_i2c_status,2,c
  3494                           
  3495                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  3496  0005FA  D00A               	goto	l463
  3497  0005FC                     
  3498                           ;i2c_master.c: 388: case i2c_restart_write:
  3499                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  3500  0005FC  ECA8  F006         	call	_do_I2C_SEND_RESTART	;wreg free
  3501  000600  0012               	return	
  3502  000602                     
  3503                           ;i2c_master.c: 391: mssp1_setIRQ();
  3504  000602  EC25  F007         	call	_mssp1_setIRQ	;wreg free
  3505                           
  3506                           ;i2c_master.c: 392: return I2C_TX;
  3507  000606  0E03               	movlw	3
  3508  000608  0012               	return	
  3509  00060A                     
  3510                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  3511                           
  3512                           ;i2c_master.c: 394: case i2c_stop:
  3513  00060A  ECA1  F006         	call	_do_I2C_SEND_STOP	;wreg free
  3514                           
  3515                           ;i2c_master.c: 396: }
  3516  00060E  0012               	return	
  3517  000610                     l463:
  3518  000610  C01F  F095         	movff	_i2c_status+30,returnStop@p
  3519  000614  C020  F096         	movff	_i2c_status+31,returnStop@p+1
  3520  000618  EE20  F00D         	lfsr	2,_i2c_status+12
  3521  00061C  D801               	call	u1428
  3522  00061E  D00A               	goto	u1429
  3523  000620                     u1428:
  3524  000620  0005               	push	
  3525  000622  6EFA               	movwf	pclath,c
  3526  000624  50DE               	movf	postinc2,w,c
  3527  000626  6EFD               	movwf	tosl,c
  3528  000628  50DE               	movf	postinc2,w,c
  3529  00062A  6EFE               	movwf	tosh,c
  3530  00062C  50DE               	movf	postinc2,w,c
  3531  00062E  6EFF               	movwf	tosu,c
  3532  000630  50FA               	movf	pclath,w,c
  3533  000632  0012               	return		;indir
  3534  000634                     u1429:
  3535                           
  3536                           ; Switch size 1, requested type "space"
  3537                           ; Number of cases is 4, Range of values is 1 to 4
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte           13     7 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542  000634  0A01               	xorlw	1	; case 1
  3543  000636  B4D8               	btfsc	status,2,c
  3544  000638  D7E8               	goto	l468
  3545  00063A  0A03               	xorlw	3	; case 2
  3546  00063C  B4D8               	btfsc	status,2,c
  3547  00063E  D7DE               	goto	l464
  3548  000640  0A01               	xorlw	1	; case 3
  3549  000642  B4D8               	btfsc	status,2,c
  3550  000644  D7DB               	goto	l464
  3551  000646  0A07               	xorlw	7	; case 4
  3552  000648  B4D8               	btfsc	status,2,c
  3553  00064A  D7DB               	goto	l467
  3554  00064C  D7DE               	goto	l468
  3555  00064E                     __end_of_do_I2C_TX_EMPTY:
  3556                           	opt stack 0
  3557                           tosu	equ	0xFFF
  3558                           tosh	equ	0xFFE
  3559                           tosl	equ	0xFFD
  3560                           pclath	equ	0xFFA
  3561                           tblptru	equ	0xFF8
  3562                           tblptrh	equ	0xFF7
  3563                           tblptrl	equ	0xFF6
  3564                           tablat	equ	0xFF5
  3565                           prodh	equ	0xFF4
  3566                           prodl	equ	0xFF3
  3567                           intcon	equ	0xFF2
  3568                           postinc0	equ	0xFEE
  3569                           wreg	equ	0xFE8
  3570                           postdec1	equ	0xFE5
  3571                           fsr1l	equ	0xFE1
  3572                           indf2	equ	0xFDF
  3573                           postinc2	equ	0xFDE
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578 ;; *************** function _mssp1_setIRQ *****************
  3579 ;; Defined at:
  3580 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		None
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    6
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_do_I2C_TX_EMPTY
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text31
  3609  000E4A                     __ptext31:
  3610                           	opt stack 0
  3611  000E4A                     _mssp1_setIRQ:
  3612                           	opt stack 18
  3613                           
  3614                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  3615                           
  3616                           ;incstack = 0
  3617  000E4A  010E               	movlb	14	; () banked
  3618  000E4C  81CD               	bsf	205,0,b	;volatile
  3619                           
  3620                           ; BSR set to: 14
  3621  000E4E  0012               	return		;funcret
  3622  000E50                     __end_of_mssp1_setIRQ:
  3623                           	opt stack 0
  3624                           tosu	equ	0xFFF
  3625                           tosh	equ	0xFFE
  3626                           tosl	equ	0xFFD
  3627                           pclath	equ	0xFFA
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           prodh	equ	0xFF4
  3633                           prodl	equ	0xFF3
  3634                           intcon	equ	0xFF2
  3635                           postinc0	equ	0xFEE
  3636                           wreg	equ	0xFE8
  3637                           postdec1	equ	0xFE5
  3638                           fsr1l	equ	0xFE1
  3639                           indf2	equ	0xFDF
  3640                           postinc2	equ	0xFDE
  3641                           fsr2h	equ	0xFDA
  3642                           fsr2l	equ	0xFD9
  3643                           status	equ	0xFD8
  3644                           
  3645 ;; *************** function _i2c1_driver_isNACK *****************
  3646 ;; Defined at:
  3647 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;		None
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;		None               void
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;Total ram usage:        1 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    6
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_do_I2C_TX
  3672 ;;		_i2c_ISR
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text32
  3677  000C3A                     __ptext32:
  3678                           	opt stack 0
  3679  000C3A                     _i2c1_driver_isNACK:
  3680                           	opt stack 19
  3681                           
  3682                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  3683                           
  3684                           ; BSR set to: 14
  3685                           ;incstack = 0
  3686  000C3A  5097               	movf	3991,w,c	;volatile
  3687  000C3C  0BBF               	andlw	-65
  3688  000C3E  0940               	iorlw	64
  3689  000C40  6E97               	movwf	3991,c	;volatile
  3690  000C42  3897               	swapf	3991,w,c	;volatile
  3691  000C44  32E8               	rrcf	wreg,f,c
  3692  000C46  32E8               	rrcf	wreg,f,c
  3693  000C48  0B01               	andlw	1
  3694  000C4A  6E43               	movwf	??_i2c1_driver_isNACK& (0+255),c
  3695  000C4C  3043               	rrcf	??_i2c1_driver_isNACK,w,c
  3696  000C4E  0012               	return	
  3697  000C50                     __end_of_i2c1_driver_isNACK:
  3698                           	opt stack 0
  3699                           tosu	equ	0xFFF
  3700                           tosh	equ	0xFFE
  3701                           tosl	equ	0xFFD
  3702                           pclath	equ	0xFFA
  3703                           tblptru	equ	0xFF8
  3704                           tblptrh	equ	0xFF7
  3705                           tblptrl	equ	0xFF6
  3706                           tablat	equ	0xFF5
  3707                           prodh	equ	0xFF4
  3708                           prodl	equ	0xFF3
  3709                           intcon	equ	0xFF2
  3710                           postinc0	equ	0xFEE
  3711                           wreg	equ	0xFE8
  3712                           postdec1	equ	0xFE5
  3713                           fsr1l	equ	0xFE1
  3714                           indf2	equ	0xFDF
  3715                           postinc2	equ	0xFDE
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _i2c1_driver_TXData *****************
  3721 ;; Defined at:
  3722 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  d               1    wreg     unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  d               1   21[COMRAM] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3740 ;;Total ram usage:        1 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    6
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_do_I2C_SEND_ADR_READ
  3747 ;;		_do_I2C_SEND_ADR_WRITE
  3748 ;;		_do_I2C_TX
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text33
  3753  000E02                     __ptext33:
  3754                           	opt stack 0
  3755  000E02                     _i2c1_driver_TXData:
  3756                           	opt stack 18
  3757                           
  3758                           ;incstack = 0
  3759                           ;i2c1_driver_TXData@d stored from wreg
  3760  000E02  6E43               	movwf	i2c1_driver_TXData@d,c
  3761                           
  3762                           ;i2c1_driver.c: 188: SSP1BUF = d;
  3763  000E04  C043  FF92         	movff	i2c1_driver_TXData@d,3986	;volatile
  3764  000E08  0012               	return		;funcret
  3765  000E0A                     __end_of_i2c1_driver_TXData:
  3766                           	opt stack 0
  3767                           tosu	equ	0xFFF
  3768                           tosh	equ	0xFFE
  3769                           tosl	equ	0xFFD
  3770                           pclath	equ	0xFFA
  3771                           tblptru	equ	0xFF8
  3772                           tblptrh	equ	0xFF7
  3773                           tblptrl	equ	0xFF6
  3774                           tablat	equ	0xFF5
  3775                           prodh	equ	0xFF4
  3776                           prodl	equ	0xFF3
  3777                           intcon	equ	0xFF2
  3778                           postinc0	equ	0xFEE
  3779                           wreg	equ	0xFE8
  3780                           postdec1	equ	0xFE5
  3781                           fsr1l	equ	0xFE1
  3782                           indf2	equ	0xFDF
  3783                           postinc2	equ	0xFDE
  3784                           fsr2h	equ	0xFDA
  3785                           fsr2l	equ	0xFD9
  3786                           status	equ	0xFD8
  3787                           
  3788 ;; *************** function _i2c1_driver_getRXData *****************
  3789 ;; Defined at:
  3790 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;		None
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;		None
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      unsigned char 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    6
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_do_I2C_RX
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text34
  3819  000E8C                     __ptext34:
  3820                           	opt stack 0
  3821  000E8C                     _i2c1_driver_getRXData:
  3822                           	opt stack 18
  3823                           
  3824                           ;i2c1_driver.c: 173: return SSP1BUF;
  3825                           
  3826                           ;incstack = 0
  3827  000E8C  5092               	movf	3986,w,c	;volatile
  3828  000E8E  0012               	return	
  3829  000E90                     __end_of_i2c1_driver_getRXData:
  3830                           	opt stack 0
  3831                           tosu	equ	0xFFF
  3832                           tosh	equ	0xFFE
  3833                           tosl	equ	0xFFD
  3834                           pclath	equ	0xFFA
  3835                           tblptru	equ	0xFF8
  3836                           tblptrh	equ	0xFF7
  3837                           tblptrl	equ	0xFF6
  3838                           tablat	equ	0xFF5
  3839                           prodh	equ	0xFF4
  3840                           prodl	equ	0xFF3
  3841                           intcon	equ	0xFF2
  3842                           postinc0	equ	0xFEE
  3843                           wreg	equ	0xFE8
  3844                           postdec1	equ	0xFE5
  3845                           fsr1l	equ	0xFE1
  3846                           indf2	equ	0xFDF
  3847                           postinc2	equ	0xFDE
  3848                           fsr2h	equ	0xFDA
  3849                           fsr2l	equ	0xFD9
  3850                           status	equ	0xFD8
  3851                           
  3852 ;; *************** function _i2c1_driver_sendNACK *****************
  3853 ;; Defined at:
  3854 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		None
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    6
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_do_I2C_DO_NACK_STOP
  3879 ;;		_do_I2C_DO_NACK_RESTART
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text35
  3884  000E50                     __ptext35:
  3885                           	opt stack 0
  3886  000E50                     _i2c1_driver_sendNACK:
  3887                           	opt stack 17
  3888                           
  3889                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  3890                           
  3891                           ;incstack = 0
  3892  000E50  8A97               	bsf	3991,5,c	;volatile
  3893                           
  3894                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  3895  000E52  8897               	bsf	3991,4,c	;volatile
  3896  000E54  0012               	return		;funcret
  3897  000E56                     __end_of_i2c1_driver_sendNACK:
  3898                           	opt stack 0
  3899                           tosu	equ	0xFFF
  3900                           tosh	equ	0xFFE
  3901                           tosl	equ	0xFFD
  3902                           pclath	equ	0xFFA
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           intcon	equ	0xFF2
  3910                           postinc0	equ	0xFEE
  3911                           wreg	equ	0xFE8
  3912                           postdec1	equ	0xFE5
  3913                           fsr1l	equ	0xFE1
  3914                           indf2	equ	0xFDF
  3915                           postinc2	equ	0xFDE
  3916                           fsr2h	equ	0xFDA
  3917                           fsr2l	equ	0xFD9
  3918                           status	equ	0xFD8
  3919                           
  3920 ;; *************** function _i2c1_driver_resetBus *****************
  3921 ;; Defined at:
  3922 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  3923 ;; Parameters:    Size  Location     Type
  3924 ;;		None
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      void 
  3929 ;; Registers used:
  3930 ;;		None
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;Total ram usage:        0 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    6
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_do_I2C_RESET
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text36
  3951  000EC0                     __ptext36:
  3952                           	opt stack 0
  3953  000EC0                     _i2c1_driver_resetBus:
  3954                           	opt stack 18
  3955                           
  3956                           ;incstack = 0
  3957  000EC0  0012               	return		;funcret
  3958  000EC2                     __end_of_i2c1_driver_resetBus:
  3959                           	opt stack 0
  3960                           tosu	equ	0xFFF
  3961                           tosh	equ	0xFFE
  3962                           tosl	equ	0xFFD
  3963                           pclath	equ	0xFFA
  3964                           tblptru	equ	0xFF8
  3965                           tblptrh	equ	0xFF7
  3966                           tblptrl	equ	0xFF6
  3967                           tablat	equ	0xFF5
  3968                           prodh	equ	0xFF4
  3969                           prodl	equ	0xFF3
  3970                           intcon	equ	0xFF2
  3971                           postinc0	equ	0xFEE
  3972                           wreg	equ	0xFE8
  3973                           postdec1	equ	0xFE5
  3974                           fsr1l	equ	0xFE1
  3975                           indf2	equ	0xFDF
  3976                           postinc2	equ	0xFDE
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function _i2c1_driver_startRX *****************
  3982 ;; Defined at:
  3983 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		None
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4001 ;;Total ram usage:        0 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    6
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		_do_I2C_RCEN
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text37
  4012  000E90                     __ptext37:
  4013                           	opt stack 0
  4014  000E90                     _i2c1_driver_startRX:
  4015                           	opt stack 18
  4016                           
  4017                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  4018                           
  4019                           ;incstack = 0
  4020  000E90  8697               	bsf	3991,3,c	;volatile
  4021  000E92  0012               	return		;funcret
  4022  000E94                     __end_of_i2c1_driver_startRX:
  4023                           	opt stack 0
  4024                           tosu	equ	0xFFF
  4025                           tosh	equ	0xFFE
  4026                           tosl	equ	0xFFD
  4027                           pclath	equ	0xFFA
  4028                           tblptru	equ	0xFF8
  4029                           tblptrh	equ	0xFF7
  4030                           tblptrl	equ	0xFF6
  4031                           tablat	equ	0xFF5
  4032                           prodh	equ	0xFF4
  4033                           prodl	equ	0xFF3
  4034                           intcon	equ	0xFF2
  4035                           postinc0	equ	0xFEE
  4036                           wreg	equ	0xFE8
  4037                           postdec1	equ	0xFE5
  4038                           fsr1l	equ	0xFE1
  4039                           indf2	equ	0xFDF
  4040                           postinc2	equ	0xFDE
  4041                           fsr2h	equ	0xFDA
  4042                           fsr2l	equ	0xFD9
  4043                           status	equ	0xFD8
  4044                           
  4045 ;; *************** function _rdBlkRegCompleteHandler *****************
  4046 ;; Defined at:
  4047 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  p               2    5[BANK0 ] PTR void 
  4050 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4051 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;		None
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      enum E97
  4056 ;; Registers used:
  4057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4067 ;;Total ram usage:        2 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    8
  4070 ;; This function calls:
  4071 ;;		_i2c_setBuffer
  4072 ;;		_i2c_setDataCompleteCallback
  4073 ;; This function is called by:
  4074 ;;		_i2c_readDataBlock
  4075 ;;		_do_I2C_DO_ADDRESS_NACK
  4076 ;;		_do_I2C_TX
  4077 ;;		_do_I2C_RX
  4078 ;;		_do_I2C_TX_EMPTY
  4079 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4080 ;;		i2_do_I2C_TX
  4081 ;;		i2_do_I2C_RX
  4082 ;;		i2_do_I2C_TX_EMPTY
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text38
  4087  0006A4                     __ptext38:
  4088                           	opt stack 0
  4089  0006A4                     _rdBlkRegCompleteHandler:
  4090                           	opt stack 0
  4091                           
  4092                           ;Skip over the trampoline to the duplicate function for level 2
  4093  0006A4  B24A               	btfsc	btemp,1,c
  4094  0006A6  EF0B  F004         	goto	i2_rdBlkRegCompleteHandler
  4095  0006AA                     _rdBlkRegCompleteHandler$intlevel0:
  4096                           	opt stack 16
  4097                           
  4098                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  4099                           
  4100                           ;incstack = 0
  4101  0006AA  0100               	movlb	0	; () banked
  4102  0006AC  EE20 F002          	lfsr	2,2
  4103  0006B0  5195               	movf	rdBlkRegCompleteHandler@p& (0+255),w,b
  4104  0006B2  26D9               	addwf	fsr2l,f,c
  4105  0006B4  5196               	movf	(rdBlkRegCompleteHandler@p+1)& (0+255),w,b
  4106  0006B6  22DA               	addwfc	fsr2h,f,c
  4107  0006B8  CFDE F043          	movff	postinc2,i2c_setBuffer@buffer
  4108  0006BC  CFDD F044          	movff	postdec2,i2c_setBuffer@buffer+1
  4109  0006C0  C095  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
  4110  0006C4  C096  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
  4111  0006C8  CFDE F045          	movff	postinc2,i2c_setBuffer@bufferSize
  4112  0006CC  CFDD F046          	movff	postdec2,i2c_setBuffer@bufferSize+1
  4113  0006D0  ECD7  F005         	call	_i2c_setBuffer	;wreg free
  4114                           
  4115                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  4116  0006D4  0E00               	movlw	0
  4117  0006D6  0100               	movlb	0	; () banked
  4118  0006D8  6F90               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4119  0006DA  0E00               	movlw	0
  4120  0006DC  6F91               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4121  0006DE  0E00               	movlw	0
  4122  0006E0  6F92               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4123  0006E2  0E00               	movlw	0
  4124  0006E4  6F93               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4125  0006E6  0E00               	movlw	0
  4126  0006E8  6F94               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4127  0006EA  EC93  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4128                           
  4129                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  4130  0006EE  0E02               	movlw	2
  4131  0006F0  0012               	return	
  4132  0006F2                     __end_of_rdBlkRegCompleteHandler:
  4133                           	opt stack 0
  4134                           tosu	equ	0xFFF
  4135                           tosh	equ	0xFFE
  4136                           tosl	equ	0xFFD
  4137                           pclath	equ	0xFFA
  4138                           tblptru	equ	0xFF8
  4139                           tblptrh	equ	0xFF7
  4140                           tblptrl	equ	0xFF6
  4141                           tablat	equ	0xFF5
  4142                           prodh	equ	0xFF4
  4143                           prodl	equ	0xFF3
  4144                           intcon	equ	0xFF2
  4145                           postinc0	equ	0xFEE
  4146                           wreg	equ	0xFE8
  4147                           postdec1	equ	0xFE5
  4148                           fsr1l	equ	0xFE1
  4149                           indf2	equ	0xFDF
  4150                           postinc2	equ	0xFDE
  4151                           postdec2	equ	0xFDD
  4152                           fsr2h	equ	0xFDA
  4153                           fsr2l	equ	0xFD9
  4154                           status	equ	0xFD8
  4155                           
  4156 ;; *************** function _rd2RegCompleteHandler *****************
  4157 ;; Defined at:
  4158 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  p               2    5[BANK0 ] PTR void 
  4161 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4162 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      enum E97
  4167 ;; Registers used:
  4168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4177 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4178 ;;Total ram usage:        2 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    8
  4181 ;; This function calls:
  4182 ;;		_i2c_setBuffer
  4183 ;;		_i2c_setDataCompleteCallback
  4184 ;; This function is called by:
  4185 ;;		_i2c_read2ByteRegister
  4186 ;;		_do_I2C_DO_ADDRESS_NACK
  4187 ;;		_do_I2C_TX
  4188 ;;		_do_I2C_RX
  4189 ;;		_do_I2C_TX_EMPTY
  4190 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4191 ;;		i2_do_I2C_TX
  4192 ;;		i2_do_I2C_RX
  4193 ;;		i2_do_I2C_TX_EMPTY
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text39
  4198  0008D8                     __ptext39:
  4199                           	opt stack 0
  4200  0008D8                     _rd2RegCompleteHandler:
  4201                           	opt stack 0
  4202                           
  4203                           ;Skip over the trampoline to the duplicate function for level 2
  4204  0008D8  B24A               	btfsc	btemp,1,c
  4205  0008DA  EF25  F005         	goto	i2_rd2RegCompleteHandler
  4206  0008DE                     _rd2RegCompleteHandler$intlevel0:
  4207                           	opt stack 16
  4208                           
  4209                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  4210                           
  4211                           ;incstack = 0
  4212  0008DE  C095  F043         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
  4213  0008E2  C096  F044         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4214  0008E6  0E00               	movlw	0
  4215  0008E8  6E46               	movwf	i2c_setBuffer@bufferSize+1,c
  4216  0008EA  0E02               	movlw	2
  4217  0008EC  6E45               	movwf	i2c_setBuffer@bufferSize,c
  4218  0008EE  ECD7  F005         	call	_i2c_setBuffer	;wreg free
  4219                           
  4220                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  4221  0008F2  0E00               	movlw	0
  4222  0008F4  0100               	movlb	0	; () banked
  4223  0008F6  6F90               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4224  0008F8  0E00               	movlw	0
  4225  0008FA  6F91               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4226  0008FC  0E00               	movlw	0
  4227  0008FE  6F92               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4228  000900  0E00               	movlw	0
  4229  000902  6F93               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4230  000904  0E00               	movlw	0
  4231  000906  6F94               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4232  000908  EC93  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4233                           
  4234                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  4235  00090C  0E02               	movlw	2
  4236  00090E  0012               	return	
  4237  000910                     __end_of_rd2RegCompleteHandler:
  4238                           	opt stack 0
  4239                           tosu	equ	0xFFF
  4240                           tosh	equ	0xFFE
  4241                           tosl	equ	0xFFD
  4242                           pclath	equ	0xFFA
  4243                           tblptru	equ	0xFF8
  4244                           tblptrh	equ	0xFF7
  4245                           tblptrl	equ	0xFF6
  4246                           tablat	equ	0xFF5
  4247                           prodh	equ	0xFF4
  4248                           prodl	equ	0xFF3
  4249                           intcon	equ	0xFF2
  4250                           postinc0	equ	0xFEE
  4251                           wreg	equ	0xFE8
  4252                           postdec1	equ	0xFE5
  4253                           fsr1l	equ	0xFE1
  4254                           indf2	equ	0xFDF
  4255                           postinc2	equ	0xFDE
  4256                           postdec2	equ	0xFDD
  4257                           fsr2h	equ	0xFDA
  4258                           fsr2l	equ	0xFD9
  4259                           status	equ	0xFD8
  4260                           
  4261 ;; *************** function _rd1RegCompleteHandler *****************
  4262 ;; Defined at:
  4263 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  p               2    5[BANK0 ] PTR void 
  4266 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4267 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;		None
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  1    wreg      enum E97
  4272 ;; Registers used:
  4273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4282 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;Total ram usage:        2 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    8
  4286 ;; This function calls:
  4287 ;;		_i2c_setBuffer
  4288 ;;		_i2c_setDataCompleteCallback
  4289 ;; This function is called by:
  4290 ;;		_i2c_read1ByteRegister
  4291 ;;		_do_I2C_DO_ADDRESS_NACK
  4292 ;;		_do_I2C_TX
  4293 ;;		_do_I2C_RX
  4294 ;;		_do_I2C_TX_EMPTY
  4295 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4296 ;;		i2_do_I2C_TX
  4297 ;;		i2_do_I2C_RX
  4298 ;;		i2_do_I2C_TX_EMPTY
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text40
  4303  000910                     __ptext40:
  4304                           	opt stack 0
  4305  000910                     _rd1RegCompleteHandler:
  4306                           	opt stack 0
  4307                           
  4308                           ;Skip over the trampoline to the duplicate function for level 2
  4309  000910  B24A               	btfsc	btemp,1,c
  4310  000912  EF3D  F005         	goto	i2_rd1RegCompleteHandler
  4311  000916                     _rd1RegCompleteHandler$intlevel0:
  4312                           	opt stack 16
  4313                           
  4314                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  4315                           
  4316                           ;incstack = 0
  4317  000916  C095  F043         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
  4318  00091A  C096  F044         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4319  00091E  0E00               	movlw	0
  4320  000920  6E46               	movwf	i2c_setBuffer@bufferSize+1,c
  4321  000922  0E01               	movlw	1
  4322  000924  6E45               	movwf	i2c_setBuffer@bufferSize,c
  4323  000926  ECD7  F005         	call	_i2c_setBuffer	;wreg free
  4324                           
  4325                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  4326  00092A  0E00               	movlw	0
  4327  00092C  0100               	movlb	0	; () banked
  4328  00092E  6F90               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4329  000930  0E00               	movlw	0
  4330  000932  6F91               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4331  000934  0E00               	movlw	0
  4332  000936  6F92               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4333  000938  0E00               	movlw	0
  4334  00093A  6F93               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4335  00093C  0E00               	movlw	0
  4336  00093E  6F94               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4337  000940  EC93  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4338                           
  4339                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  4340  000944  0E02               	movlw	2
  4341  000946  0012               	return	
  4342  000948                     __end_of_rd1RegCompleteHandler:
  4343                           	opt stack 0
  4344                           tosu	equ	0xFFF
  4345                           tosh	equ	0xFFE
  4346                           tosl	equ	0xFFD
  4347                           pclath	equ	0xFFA
  4348                           tblptru	equ	0xFF8
  4349                           tblptrh	equ	0xFF7
  4350                           tblptrl	equ	0xFF6
  4351                           tablat	equ	0xFF5
  4352                           prodh	equ	0xFF4
  4353                           prodl	equ	0xFF3
  4354                           intcon	equ	0xFF2
  4355                           postinc0	equ	0xFEE
  4356                           wreg	equ	0xFE8
  4357                           postdec1	equ	0xFE5
  4358                           fsr1l	equ	0xFE1
  4359                           indf2	equ	0xFDF
  4360                           postinc2	equ	0xFDE
  4361                           postdec2	equ	0xFDD
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366 ;; *************** function _wr1RegCompleteHandler *****************
  4367 ;; Defined at:
  4368 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  p               2    5[BANK0 ] PTR void 
  4371 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4372 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      enum E97
  4377 ;; Registers used:
  4378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4384 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;Total ram usage:        2 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:    8
  4391 ;; This function calls:
  4392 ;;		_i2c_setBuffer
  4393 ;;		_i2c_setDataCompleteCallback
  4394 ;; This function is called by:
  4395 ;;		_i2c_write1ByteRegister
  4396 ;;		_do_I2C_DO_ADDRESS_NACK
  4397 ;;		_do_I2C_TX
  4398 ;;		_do_I2C_RX
  4399 ;;		_do_I2C_TX_EMPTY
  4400 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4401 ;;		i2_do_I2C_TX
  4402 ;;		i2_do_I2C_RX
  4403 ;;		i2_do_I2C_TX_EMPTY
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text41
  4408  000948                     __ptext41:
  4409                           	opt stack 0
  4410  000948                     _wr1RegCompleteHandler:
  4411                           	opt stack 0
  4412                           
  4413                           ;Skip over the trampoline to the duplicate function for level 2
  4414  000948  B24A               	btfsc	btemp,1,c
  4415  00094A  EF55  F005         	goto	i2_wr1RegCompleteHandler
  4416  00094E                     _wr1RegCompleteHandler$intlevel0:
  4417                           	opt stack 16
  4418                           
  4419                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  4420                           
  4421                           ;incstack = 0
  4422  00094E  C095  F043         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
  4423  000952  C096  F044         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4424  000956  0E00               	movlw	0
  4425  000958  6E46               	movwf	i2c_setBuffer@bufferSize+1,c
  4426  00095A  0E01               	movlw	1
  4427  00095C  6E45               	movwf	i2c_setBuffer@bufferSize,c
  4428  00095E  ECD7  F005         	call	_i2c_setBuffer	;wreg free
  4429                           
  4430                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  4431  000962  0E00               	movlw	0
  4432  000964  0100               	movlb	0	; () banked
  4433  000966  6F90               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4434  000968  0E00               	movlw	0
  4435  00096A  6F91               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4436  00096C  0E00               	movlw	0
  4437  00096E  6F92               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4438  000970  0E00               	movlw	0
  4439  000972  6F93               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4440  000974  0E00               	movlw	0
  4441  000976  6F94               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4442  000978  EC93  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4443                           
  4444                           ;i2c_simple_master.c: 35: return i2c_continue;
  4445  00097C  0E04               	movlw	4
  4446  00097E  0012               	return	
  4447  000980                     __end_of_wr1RegCompleteHandler:
  4448                           	opt stack 0
  4449                           tosu	equ	0xFFF
  4450                           tosh	equ	0xFFE
  4451                           tosl	equ	0xFFD
  4452                           pclath	equ	0xFFA
  4453                           tblptru	equ	0xFF8
  4454                           tblptrh	equ	0xFF7
  4455                           tblptrl	equ	0xFF6
  4456                           tablat	equ	0xFF5
  4457                           prodh	equ	0xFF4
  4458                           prodl	equ	0xFF3
  4459                           intcon	equ	0xFF2
  4460                           postinc0	equ	0xFEE
  4461                           wreg	equ	0xFE8
  4462                           postdec1	equ	0xFE5
  4463                           fsr1l	equ	0xFE1
  4464                           indf2	equ	0xFDF
  4465                           postinc2	equ	0xFDE
  4466                           postdec2	equ	0xFDD
  4467                           fsr2h	equ	0xFDA
  4468                           fsr2l	equ	0xFD9
  4469                           status	equ	0xFD8
  4470                           
  4471 ;; *************** function _i2c_restartWrite *****************
  4472 ;; Defined at:
  4473 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  p               2    5[BANK0 ] PTR void 
  4476 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4477 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      enum E96
  4482 ;; Registers used:
  4483 ;;		wreg
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4489 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4493 ;;Total ram usage:        2 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    6
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_i2c_writeNBytes
  4500 ;;		_i2c_write1ByteRegister
  4501 ;;		_i2c_read1ByteRegister
  4502 ;;		_i2c_read2ByteRegister
  4503 ;;		_i2c_write2ByteRegister
  4504 ;;		_i2c_readDataBlock
  4505 ;;		_do_I2C_DO_ADDRESS_NACK
  4506 ;;		_do_I2C_TX
  4507 ;;		_do_I2C_RX
  4508 ;;		_do_I2C_TX_EMPTY
  4509 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4510 ;;		i2_do_I2C_TX
  4511 ;;		i2_do_I2C_RX
  4512 ;;		i2_do_I2C_TX_EMPTY
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text42
  4517  000DC0                     __ptext42:
  4518                           	opt stack 0
  4519  000DC0                     _i2c_restartWrite:
  4520                           	opt stack 0
  4521                           
  4522                           ;Skip over the trampoline to the duplicate function for level 2
  4523  000DC0  B24A               	btfsc	btemp,1,c
  4524  000DC2  EF56  F007         	goto	i2_i2c_restartWrite
  4525  000DC6                     _i2c_restartWrite$intlevel0:
  4526                           	opt stack 18
  4527                           
  4528                           ;i2c_types.c: 37: return i2c_restart_write;
  4529                           
  4530                           ;incstack = 0
  4531  000DC6  0E03               	movlw	3
  4532  000DC8  0012               	return	
  4533  000DCA                     __end_of_i2c_restartWrite:
  4534                           	opt stack 0
  4535                           tosu	equ	0xFFF
  4536                           tosh	equ	0xFFE
  4537                           tosl	equ	0xFFD
  4538                           pclath	equ	0xFFA
  4539                           tblptru	equ	0xFF8
  4540                           tblptrh	equ	0xFF7
  4541                           tblptrl	equ	0xFF6
  4542                           tablat	equ	0xFF5
  4543                           prodh	equ	0xFF4
  4544                           prodl	equ	0xFF3
  4545                           intcon	equ	0xFF2
  4546                           postinc0	equ	0xFEE
  4547                           wreg	equ	0xFE8
  4548                           postdec1	equ	0xFE5
  4549                           fsr1l	equ	0xFE1
  4550                           indf2	equ	0xFDF
  4551                           postinc2	equ	0xFDE
  4552                           postdec2	equ	0xFDD
  4553                           fsr2h	equ	0xFDA
  4554                           fsr2l	equ	0xFD9
  4555                           status	equ	0xFD8
  4556                           
  4557 ;; *************** function _returnReset *****************
  4558 ;; Defined at:
  4559 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  p               2    5[BANK0 ] PTR void 
  4562 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4563 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      enum E11790
  4568 ;; Registers used:
  4569 ;;		wreg
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4575 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;Total ram usage:        2 bytes
  4580 ;; Hardware stack levels used:    1
  4581 ;; Hardware stack levels required when called:    6
  4582 ;; This function calls:
  4583 ;;		Nothing
  4584 ;; This function is called by:
  4585 ;;		_i2c_open
  4586 ;;		_do_I2C_DO_ADDRESS_NACK
  4587 ;;		_do_I2C_TX
  4588 ;;		_do_I2C_RX
  4589 ;;		_do_I2C_TX_EMPTY
  4590 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4591 ;;		i2_do_I2C_TX
  4592 ;;		i2_do_I2C_RX
  4593 ;;		i2_do_I2C_TX_EMPTY
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text43
  4598  000DCA                     __ptext43:
  4599                           	opt stack 0
  4600  000DCA                     _returnReset:
  4601                           	opt stack 0
  4602                           
  4603                           ;Skip over the trampoline to the duplicate function for level 2
  4604  000DCA  B24A               	btfsc	btemp,1,c
  4605  000DCC  EF58  F007         	goto	i2_returnReset
  4606  000DD0                     _returnReset$intlevel0:
  4607                           	opt stack 18
  4608                           
  4609                           ;i2c_master.c: 450: return i2c_reset_link;
  4610                           
  4611                           ;incstack = 0
  4612  000DD0  0E05               	movlw	5
  4613  000DD2  0012               	return	
  4614  000DD4                     __end_of_returnReset:
  4615                           	opt stack 0
  4616                           tosu	equ	0xFFF
  4617                           tosh	equ	0xFFE
  4618                           tosl	equ	0xFFD
  4619                           pclath	equ	0xFFA
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           intcon	equ	0xFF2
  4627                           postinc0	equ	0xFEE
  4628                           wreg	equ	0xFE8
  4629                           postdec1	equ	0xFE5
  4630                           fsr1l	equ	0xFE1
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           fsr2h	equ	0xFDA
  4635                           fsr2l	equ	0xFD9
  4636                           status	equ	0xFD8
  4637                           
  4638 ;; *************** function _returnStop *****************
  4639 ;; Defined at:
  4640 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  p               2    5[BANK0 ] PTR void 
  4643 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4644 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      enum E11790
  4649 ;; Registers used:
  4650 ;;		wreg
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4656 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4659 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;Total ram usage:        2 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    6
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_i2c_open
  4667 ;;		_setCallBack
  4668 ;;		_do_I2C_DO_ADDRESS_NACK
  4669 ;;		_do_I2C_TX
  4670 ;;		_do_I2C_RX
  4671 ;;		_do_I2C_TX_EMPTY
  4672 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4673 ;;		i2_do_I2C_TX
  4674 ;;		i2_do_I2C_RX
  4675 ;;		i2_do_I2C_TX_EMPTY
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text44
  4680  000DD4                     __ptext44:
  4681                           	opt stack 0
  4682  000DD4                     _returnStop:
  4683                           	opt stack 0
  4684                           
  4685                           ;Skip over the trampoline to the duplicate function for level 2
  4686  000DD4  B24A               	btfsc	btemp,1,c
  4687  000DD6  EF5A  F007         	goto	i2_returnStop
  4688  000DDA                     _returnStop$intlevel0:
  4689                           	opt stack 18
  4690                           
  4691                           ;i2c_master.c: 445: return i2c_stop;
  4692                           
  4693                           ;incstack = 0
  4694  000DDA  0E01               	movlw	1
  4695  000DDC  0012               	return	
  4696  000DDE                     __end_of_returnStop:
  4697                           	opt stack 0
  4698                           tosu	equ	0xFFF
  4699                           tosh	equ	0xFFE
  4700                           tosl	equ	0xFFD
  4701                           pclath	equ	0xFFA
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodh	equ	0xFF4
  4707                           prodl	equ	0xFF3
  4708                           intcon	equ	0xFF2
  4709                           postinc0	equ	0xFEE
  4710                           wreg	equ	0xFE8
  4711                           postdec1	equ	0xFE5
  4712                           fsr1l	equ	0xFE1
  4713                           indf2	equ	0xFDF
  4714                           postinc2	equ	0xFDE
  4715                           postdec2	equ	0xFDD
  4716                           fsr2h	equ	0xFDA
  4717                           fsr2l	equ	0xFD9
  4718                           status	equ	0xFD8
  4719                           
  4720 ;; *************** function _wr2RegCompleteHandler *****************
  4721 ;; Defined at:
  4722 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  p               2    5[BANK0 ] PTR void 
  4725 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4726 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      enum E97
  4731 ;; Registers used:
  4732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4738 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4741 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;Total ram usage:        2 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    8
  4745 ;; This function calls:
  4746 ;;		_i2c_setBuffer
  4747 ;;		_i2c_setDataCompleteCallback
  4748 ;; This function is called by:
  4749 ;;		_i2c_write2ByteRegister
  4750 ;;		_do_I2C_DO_ADDRESS_NACK
  4751 ;;		_do_I2C_TX
  4752 ;;		_do_I2C_RX
  4753 ;;		_do_I2C_TX_EMPTY
  4754 ;;		i2_do_I2C_DO_ADDRESS_NACK
  4755 ;;		i2_do_I2C_TX
  4756 ;;		i2_do_I2C_RX
  4757 ;;		i2_do_I2C_TX_EMPTY
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text45
  4762  000980                     __ptext45:
  4763                           	opt stack 0
  4764  000980                     _wr2RegCompleteHandler:
  4765                           	opt stack 0
  4766                           
  4767                           ;Skip over the trampoline to the duplicate function for level 2
  4768  000980  B24A               	btfsc	btemp,1,c
  4769  000982  EF6D  F005         	goto	i2_wr2RegCompleteHandler
  4770  000986                     _wr2RegCompleteHandler$intlevel0:
  4771                           	opt stack 16
  4772                           
  4773                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  4774                           
  4775                           ;incstack = 0
  4776  000986  C095  F043         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
  4777  00098A  C096  F044         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4778  00098E  0E00               	movlw	0
  4779  000990  6E46               	movwf	i2c_setBuffer@bufferSize+1,c
  4780  000992  0E02               	movlw	2
  4781  000994  6E45               	movwf	i2c_setBuffer@bufferSize,c
  4782  000996  ECD7  F005         	call	_i2c_setBuffer	;wreg free
  4783                           
  4784                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  4785  00099A  0E00               	movlw	0
  4786  00099C  0100               	movlb	0	; () banked
  4787  00099E  6F90               	movwf	i2c_setDataCompleteCallback@cb& (0+255),b
  4788  0009A0  0E00               	movlw	0
  4789  0009A2  6F91               	movwf	(i2c_setDataCompleteCallback@cb+1)& (0+255),b
  4790  0009A4  0E00               	movlw	0
  4791  0009A6  6F92               	movwf	(i2c_setDataCompleteCallback@cb+2)& (0+255),b
  4792  0009A8  0E00               	movlw	0
  4793  0009AA  6F93               	movwf	i2c_setDataCompleteCallback@p& (0+255),b
  4794  0009AC  0E00               	movlw	0
  4795  0009AE  6F94               	movwf	(i2c_setDataCompleteCallback@p+1)& (0+255),b
  4796  0009B0  EC93  F005         	call	_i2c_setDataCompleteCallback	;wreg free
  4797                           
  4798                           ;i2c_simple_master.c: 114: return i2c_continue;
  4799  0009B4  0E04               	movlw	4
  4800  0009B6  0012               	return	
  4801  0009B8                     __end_of_wr2RegCompleteHandler:
  4802                           	opt stack 0
  4803                           tosu	equ	0xFFF
  4804                           tosh	equ	0xFFE
  4805                           tosl	equ	0xFFD
  4806                           pclath	equ	0xFFA
  4807                           tblptru	equ	0xFF8
  4808                           tblptrh	equ	0xFF7
  4809                           tblptrl	equ	0xFF6
  4810                           tablat	equ	0xFF5
  4811                           prodh	equ	0xFF4
  4812                           prodl	equ	0xFF3
  4813                           intcon	equ	0xFF2
  4814                           postinc0	equ	0xFEE
  4815                           wreg	equ	0xFE8
  4816                           postdec1	equ	0xFE5
  4817                           fsr1l	equ	0xFE1
  4818                           indf2	equ	0xFDF
  4819                           postinc2	equ	0xFDE
  4820                           postdec2	equ	0xFDD
  4821                           fsr2h	equ	0xFDA
  4822                           fsr2l	equ	0xFD9
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _i2c_setDataCompleteCallback *****************
  4826 ;; Defined at:
  4827 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  cb              3    0[BANK0 ] PTR FTN(PTR void ,)enum 
  4830 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4831 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  4832 ;;  p               2    3[BANK0 ] PTR void 
  4833 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4834 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4846 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4849 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4850 ;;Total ram usage:        5 bytes
  4851 ;; Hardware stack levels used:    1
  4852 ;; Hardware stack levels required when called:    7
  4853 ;; This function calls:
  4854 ;;		_setCallBack
  4855 ;; This function is called by:
  4856 ;;		_wr1RegCompleteHandler
  4857 ;;		_rd1RegCompleteHandler
  4858 ;;		_rd2RegCompleteHandler
  4859 ;;		_wr2RegCompleteHandler
  4860 ;;		_rdBlkRegCompleteHandler
  4861 ;;		_i2c_write1ByteRegister
  4862 ;;		_i2c_read1ByteRegister
  4863 ;;		_i2c_read2ByteRegister
  4864 ;;		_i2c_write2ByteRegister
  4865 ;;		_i2c_readDataBlock
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text46
  4870  000B26                     __ptext46:
  4871                           	opt stack 0
  4872  000B26                     _i2c_setDataCompleteCallback:
  4873                           	opt stack 16
  4874                           
  4875                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  4876                           
  4877                           ;incstack = 0
  4878  000B26  C090  F043         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
  4879  000B2A  C091  F044         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
  4880  000B2E  C092  F045         	movff	i2c_setDataCompleteCallback@cb+2,setCallBack@cb+2
  4881  000B32  C093  F046         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
  4882  000B36  C094  F047         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
  4883  000B3A  0E00               	movlw	0
  4884  000B3C  EC48  F002         	call	_setCallBack
  4885  000B40  0012               	return		;funcret
  4886  000B42                     __end_of_i2c_setDataCompleteCallback:
  4887                           	opt stack 0
  4888                           tosu	equ	0xFFF
  4889                           tosh	equ	0xFFE
  4890                           tosl	equ	0xFFD
  4891                           pclath	equ	0xFFA
  4892                           tblptru	equ	0xFF8
  4893                           tblptrh	equ	0xFF7
  4894                           tblptrl	equ	0xFF6
  4895                           tablat	equ	0xFF5
  4896                           prodh	equ	0xFF4
  4897                           prodl	equ	0xFF3
  4898                           intcon	equ	0xFF2
  4899                           postinc0	equ	0xFEE
  4900                           wreg	equ	0xFE8
  4901                           postdec1	equ	0xFE5
  4902                           fsr1l	equ	0xFE1
  4903                           indf2	equ	0xFDF
  4904                           postinc2	equ	0xFDE
  4905                           postdec2	equ	0xFDD
  4906                           fsr2h	equ	0xFDA
  4907                           fsr2l	equ	0xFD9
  4908                           status	equ	0xFD8
  4909                           
  4910 ;; *************** function _setCallBack *****************
  4911 ;; Defined at:
  4912 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  idx             1    wreg     enum E11974
  4915 ;;  cb              3   21[COMRAM] PTR FTN(PTR void ,)enum 
  4916 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4917 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  4918 ;;  p               2   24[COMRAM] PTR void 
  4919 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4920 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  idx             1   26[COMRAM] enum E11974
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4932 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4935 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4936 ;;Total ram usage:        6 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    6
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_i2c_setDataCompleteCallback
  4943 ;;		_i2c_setAddressNACKCallback
  4944 ;;		_i2c_setWriteCollisionCallback
  4945 ;;		_i2c_setDataNACKCallback
  4946 ;;		_i2c_setTimeOutCallback
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text47
  4951  000490                     __ptext47:
  4952                           	opt stack 0
  4953  000490                     _setCallBack:
  4954                           	opt stack 22
  4955                           
  4956                           ;incstack = 0
  4957                           ;setCallBack@idx stored from wreg
  4958  000490  6E48               	movwf	setCallBack@idx,c
  4959                           
  4960                           ;i2c_master.c: 455: if(cb)
  4961  000492  5043               	movf	setCallBack@cb,w,c
  4962  000494  1044               	iorwf	setCallBack@cb+1,w,c
  4963  000496  1045               	iorwf	setCallBack@cb+2,w,c
  4964  000498  B4D8               	btfsc	status,2,c
  4965  00049A  D01B               	goto	l488
  4966                           
  4967                           ;i2c_master.c: 456: {
  4968                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  4969  00049C  5048               	movf	setCallBack@idx,w,c
  4970  00049E  0D03               	mullw	3
  4971  0004A0  0E0D               	movlw	low (_i2c_status+12)
  4972  0004A2  24F3               	addwf	prodl,w,c
  4973  0004A4  6ED9               	movwf	fsr2l,c
  4974  0004A6  0E00               	movlw	high (_i2c_status+12)
  4975  0004A8  20F4               	addwfc	prodh,w,c
  4976  0004AA  6EDA               	movwf	fsr2h,c
  4977  0004AC  C043  FFDE         	movff	setCallBack@cb,postinc2
  4978  0004B0  C044  FFDE         	movff	setCallBack@cb+1,postinc2
  4979  0004B4  C045  FFDE         	movff	setCallBack@cb+2,postinc2
  4980                           
  4981                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  4982  0004B8  5048               	movf	setCallBack@idx,w,c
  4983  0004BA  0D02               	mullw	2
  4984  0004BC  0E1F               	movlw	low (_i2c_status+30)
  4985  0004BE  24F3               	addwf	prodl,w,c
  4986  0004C0  6ED9               	movwf	fsr2l,c
  4987  0004C2  0E00               	movlw	high (_i2c_status+30)
  4988  0004C4  20F4               	addwfc	prodh,w,c
  4989  0004C6  6EDA               	movwf	fsr2h,c
  4990  0004C8  C046  FFDE         	movff	setCallBack@p,postinc2
  4991  0004CC  C047  FFDD         	movff	setCallBack@p+1,postdec2
  4992                           
  4993                           ;i2c_master.c: 459: }
  4994  0004D0  0012               	return	
  4995  0004D2                     l488:
  4996                           
  4997                           ;i2c_master.c: 460: else
  4998                           ;i2c_master.c: 461: {
  4999                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  5000  0004D2  5048               	movf	setCallBack@idx,w,c
  5001  0004D4  0D03               	mullw	3
  5002  0004D6  0E0D               	movlw	low (_i2c_status+12)
  5003  0004D8  24F3               	addwf	prodl,w,c
  5004  0004DA  6ED9               	movwf	fsr2l,c
  5005  0004DC  0E00               	movlw	high (_i2c_status+12)
  5006  0004DE  20F4               	addwfc	prodh,w,c
  5007  0004E0  6EDA               	movwf	fsr2h,c
  5008  0004E2  0ED4               	movlw	low _returnStop
  5009  0004E4  6EDE               	movwf	postinc2,c
  5010  0004E6  0E0D               	movlw	high _returnStop
  5011  0004E8  6EDE               	movwf	postinc2,c
  5012  0004EA  0E00               	movlw	low (_returnStop shr (0+16))
  5013  0004EC  6EDE               	movwf	postinc2,c
  5014                           
  5015                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  5016  0004EE  5048               	movf	setCallBack@idx,w,c
  5017  0004F0  0D02               	mullw	2
  5018  0004F2  0E1F               	movlw	low (_i2c_status+30)
  5019  0004F4  24F3               	addwf	prodl,w,c
  5020  0004F6  6ED9               	movwf	fsr2l,c
  5021  0004F8  0E00               	movlw	high (_i2c_status+30)
  5022  0004FA  20F4               	addwfc	prodh,w,c
  5023  0004FC  6EDA               	movwf	fsr2h,c
  5024  0004FE  0E00               	movlw	0
  5025  000500  6EDE               	movwf	postinc2,c
  5026  000502  0E00               	movlw	0
  5027  000504  6EDD               	movwf	postdec2,c
  5028  000506  0012               	return	
  5029  000508                     __end_of_setCallBack:
  5030                           	opt stack 0
  5031                           tosu	equ	0xFFF
  5032                           tosh	equ	0xFFE
  5033                           tosl	equ	0xFFD
  5034                           pclath	equ	0xFFA
  5035                           tblptru	equ	0xFF8
  5036                           tblptrh	equ	0xFF7
  5037                           tblptrl	equ	0xFF6
  5038                           tablat	equ	0xFF5
  5039                           prodh	equ	0xFF4
  5040                           prodl	equ	0xFF3
  5041                           intcon	equ	0xFF2
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           postdec1	equ	0xFE5
  5045                           fsr1l	equ	0xFE1
  5046                           indf2	equ	0xFDF
  5047                           postinc2	equ	0xFDE
  5048                           postdec2	equ	0xFDD
  5049                           fsr2h	equ	0xFDA
  5050                           fsr2l	equ	0xFD9
  5051                           status	equ	0xFD8
  5052                           
  5053 ;; *************** function _i2c_setBuffer *****************
  5054 ;; Defined at:
  5055 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;  buffer          2   21[COMRAM] PTR void 
  5058 ;;		 -> main@rec(1), main@data(2), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), 
  5059 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
  5060 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
  5061 ;;		 -> NULL(0), 
  5062 ;;  bufferSize      2   23[COMRAM] unsigned int 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      void 
  5067 ;; Registers used:
  5068 ;;		wreg, status,2, status,0
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5078 ;;Total ram usage:        4 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    6
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_wr1RegCompleteHandler
  5085 ;;		_i2c_writeNBytes
  5086 ;;		_rd1RegCompleteHandler
  5087 ;;		_rd2RegCompleteHandler
  5088 ;;		_wr2RegCompleteHandler
  5089 ;;		_rdBlkRegCompleteHandler
  5090 ;;		_i2c_readNBytes
  5091 ;;		_i2c_write1ByteRegister
  5092 ;;		_i2c_read1ByteRegister
  5093 ;;		_i2c_read2ByteRegister
  5094 ;;		_i2c_write2ByteRegister
  5095 ;;		_i2c_readDataBlock
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text48
  5100  000BAE                     __ptext48:
  5101                           	opt stack 0
  5102  000BAE                     _i2c_setBuffer:
  5103                           	opt stack 23
  5104                           
  5105                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  5106                           
  5107                           ;incstack = 0
  5108  000BAE  A401               	btfss	_i2c_status,2,c
  5109  000BB0  0012               	return	
  5110                           
  5111                           ;i2c_master.c: 187: {
  5112                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  5113  000BB2  C043  F003         	movff	i2c_setBuffer@buffer,_i2c_status+2
  5114  000BB6  C044  F004         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
  5115                           
  5116                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  5117  000BBA  C045  F005         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
  5118  000BBE  C046  F006         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
  5119                           
  5120                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  5121  000BC2  9401               	bcf	_i2c_status,2,c
  5122  000BC4  0012               	return	
  5123  000BC6                     __end_of_i2c_setBuffer:
  5124                           	opt stack 0
  5125                           tosu	equ	0xFFF
  5126                           tosh	equ	0xFFE
  5127                           tosl	equ	0xFFD
  5128                           pclath	equ	0xFFA
  5129                           tblptru	equ	0xFF8
  5130                           tblptrh	equ	0xFF7
  5131                           tblptrl	equ	0xFF6
  5132                           tablat	equ	0xFF5
  5133                           prodh	equ	0xFF4
  5134                           prodl	equ	0xFF3
  5135                           intcon	equ	0xFF2
  5136                           postinc0	equ	0xFEE
  5137                           wreg	equ	0xFE8
  5138                           postdec1	equ	0xFE5
  5139                           fsr1l	equ	0xFE1
  5140                           indf2	equ	0xFDF
  5141                           postinc2	equ	0xFDE
  5142                           postdec2	equ	0xFDD
  5143                           fsr2h	equ	0xFDA
  5144                           fsr2l	equ	0xFD9
  5145                           status	equ	0xFD8
  5146                           
  5147 ;; *************** function _i2c1_driver_stop *****************
  5148 ;; Defined at:
  5149 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		None
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5167 ;;Total ram usage:        0 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; Hardware stack levels required when called:    6
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_do_I2C_SEND_STOP
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text49
  5178  000E94                     __ptext49:
  5179                           	opt stack 0
  5180  000E94                     _i2c1_driver_stop:
  5181                           	opt stack 17
  5182                           
  5183                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  5184                           
  5185                           ;incstack = 0
  5186  000E94  8497               	bsf	3991,2,c	;volatile
  5187  000E96  0012               	return		;funcret
  5188  000E98                     __end_of_i2c1_driver_stop:
  5189                           	opt stack 0
  5190                           tosu	equ	0xFFF
  5191                           tosh	equ	0xFFE
  5192                           tosl	equ	0xFFD
  5193                           pclath	equ	0xFFA
  5194                           tblptru	equ	0xFF8
  5195                           tblptrh	equ	0xFF7
  5196                           tblptrl	equ	0xFF6
  5197                           tablat	equ	0xFF5
  5198                           prodh	equ	0xFF4
  5199                           prodl	equ	0xFF3
  5200                           intcon	equ	0xFF2
  5201                           postinc0	equ	0xFEE
  5202                           wreg	equ	0xFE8
  5203                           postdec1	equ	0xFE5
  5204                           fsr1l	equ	0xFE1
  5205                           indf2	equ	0xFDF
  5206                           postinc2	equ	0xFDE
  5207                           postdec2	equ	0xFDD
  5208                           fsr2h	equ	0xFDA
  5209                           fsr2l	equ	0xFD9
  5210                           status	equ	0xFD8
  5211                           
  5212 ;; *************** function _i2c1_driver_restart *****************
  5213 ;; Defined at:
  5214 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		None
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5232 ;;Total ram usage:        0 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    6
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_do_I2C_SEND_RESTART_READ
  5239 ;;		_do_I2C_SEND_RESTART_WRITE
  5240 ;;		_do_I2C_SEND_RESTART
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text50
  5245  000E98                     __ptext50:
  5246                           	opt stack 0
  5247  000E98                     _i2c1_driver_restart:
  5248                           	opt stack 17
  5249                           
  5250                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  5251                           
  5252                           ;incstack = 0
  5253  000E98  8297               	bsf	3991,1,c	;volatile
  5254  000E9A  0012               	return		;funcret
  5255  000E9C                     __end_of_i2c1_driver_restart:
  5256                           	opt stack 0
  5257                           tosu	equ	0xFFF
  5258                           tosh	equ	0xFFE
  5259                           tosl	equ	0xFFD
  5260                           pclath	equ	0xFFA
  5261                           tblptru	equ	0xFF8
  5262                           tblptrh	equ	0xFF7
  5263                           tblptrl	equ	0xFF6
  5264                           tablat	equ	0xFF5
  5265                           prodh	equ	0xFF4
  5266                           prodl	equ	0xFF3
  5267                           intcon	equ	0xFF2
  5268                           postinc0	equ	0xFEE
  5269                           wreg	equ	0xFE8
  5270                           postdec1	equ	0xFE5
  5271                           fsr1l	equ	0xFE1
  5272                           indf2	equ	0xFDF
  5273                           postinc2	equ	0xFDE
  5274                           postdec2	equ	0xFDD
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8
  5278                           
  5279 ;; *************** function _i2c1_driver_sendACK *****************
  5280 ;; Defined at:
  5281 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      void 
  5288 ;; Registers used:
  5289 ;;		None
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5299 ;;Total ram usage:        0 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    6
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_do_I2C_DO_ACK
  5306 ;;		_do_I2C_RX
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text51
  5311  000E56                     __ptext51:
  5312                           	opt stack 0
  5313  000E56                     _i2c1_driver_sendACK:
  5314                           	opt stack 18
  5315                           
  5316                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  5317                           
  5318                           ;incstack = 0
  5319  000E56  9A97               	bcf	3991,5,c	;volatile
  5320                           
  5321                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  5322  000E58  8897               	bsf	3991,4,c	;volatile
  5323  000E5A  0012               	return		;funcret
  5324  000E5C                     __end_of_i2c1_driver_sendACK:
  5325                           	opt stack 0
  5326                           tosu	equ	0xFFF
  5327                           tosh	equ	0xFFE
  5328                           tosl	equ	0xFFD
  5329                           pclath	equ	0xFFA
  5330                           tblptru	equ	0xFF8
  5331                           tblptrh	equ	0xFF7
  5332                           tblptrl	equ	0xFF6
  5333                           tablat	equ	0xFF5
  5334                           prodh	equ	0xFF4
  5335                           prodl	equ	0xFF3
  5336                           intcon	equ	0xFF2
  5337                           postinc0	equ	0xFEE
  5338                           wreg	equ	0xFE8
  5339                           postdec1	equ	0xFE5
  5340                           fsr1l	equ	0xFE1
  5341                           indf2	equ	0xFDF
  5342                           postinc2	equ	0xFDE
  5343                           postdec2	equ	0xFDD
  5344                           fsr2h	equ	0xFDA
  5345                           fsr2l	equ	0xFD9
  5346                           status	equ	0xFD8
  5347                           
  5348 ;; *************** function _i2c1_driver_start *****************
  5349 ;; Defined at:
  5350 ;;		line 146 in file "mcc_generated_files/i2c1_driver.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;		None
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;		None
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  1    wreg      void 
  5357 ;; Registers used:
  5358 ;;		None
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5368 ;;Total ram usage:        0 bytes
  5369 ;; Hardware stack levels used:    1
  5370 ;; Hardware stack levels required when called:    6
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_i2c_masterOperation
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text52
  5379  000E9C                     __ptext52:
  5380                           	opt stack 0
  5381  000E9C                     _i2c1_driver_start:
  5382                           	opt stack 21
  5383                           
  5384                           ;i2c1_driver.c: 148: SSP1CON2bits.SEN = 1;
  5385                           
  5386                           ;incstack = 0
  5387  000E9C  8097               	bsf	3991,0,c	;volatile
  5388  000E9E  0012               	return		;funcret
  5389  000EA0                     __end_of_i2c1_driver_start:
  5390                           	opt stack 0
  5391                           tosu	equ	0xFFF
  5392                           tosh	equ	0xFFE
  5393                           tosl	equ	0xFFD
  5394                           pclath	equ	0xFFA
  5395                           tblptru	equ	0xFF8
  5396                           tblptrh	equ	0xFF7
  5397                           tblptrl	equ	0xFF6
  5398                           tablat	equ	0xFF5
  5399                           prodh	equ	0xFF4
  5400                           prodl	equ	0xFF3
  5401                           intcon	equ	0xFF2
  5402                           postinc0	equ	0xFEE
  5403                           wreg	equ	0xFE8
  5404                           postdec1	equ	0xFE5
  5405                           fsr1l	equ	0xFE1
  5406                           indf2	equ	0xFDF
  5407                           postinc2	equ	0xFDE
  5408                           postdec2	equ	0xFDD
  5409                           fsr2h	equ	0xFDA
  5410                           fsr2l	equ	0xFD9
  5411                           status	equ	0xFD8
  5412                           
  5413 ;; *************** function _i2c_close *****************
  5414 ;; Defined at:
  5415 ;;		line 162 in file "mcc_generated_files/drivers/i2c_master.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;		None
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  ret             1   21[COMRAM] enum E11785
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      enum E11785
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5433 ;;Total ram usage:        1 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    7
  5436 ;; This function calls:
  5437 ;;		_mssp1_clearIRQ
  5438 ;;		_mssp1_disableIRQ
  5439 ;; This function is called by:
  5440 ;;		_i2c_writeNBytes
  5441 ;;		_i2c_readNBytes
  5442 ;;		_i2c_write1ByteRegister
  5443 ;;		_i2c_read1ByteRegister
  5444 ;;		_i2c_read2ByteRegister
  5445 ;;		_i2c_write2ByteRegister
  5446 ;;		_i2c_readDataBlock
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text53
  5451  000B42                     __ptext53:
  5452                           	opt stack 0
  5453  000B42                     _i2c_close:
  5454                           	opt stack 22
  5455                           
  5456                           ;i2c_master.c: 164: i2c_error_t ret = I2C_BUSY;
  5457                           
  5458                           ;incstack = 0
  5459  000B42  0E01               	movlw	1
  5460  000B44  6E43               	movwf	i2c_close@ret,c
  5461                           
  5462                           ;i2c_master.c: 165: if(!i2c_status.busy)
  5463  000B46  B001               	btfsc	_i2c_status,0,c
  5464  000B48  D008               	goto	l361
  5465                           
  5466                           ;i2c_master.c: 166: {
  5467                           ;i2c_master.c: 167: i2c_status.inUse = 0;
  5468  000B4A  9201               	bcf	_i2c_status,1,c
  5469                           
  5470                           ;i2c_master.c: 169: i2c_status.address = 0xff;
  5471  000B4C  6802               	setf	_i2c_status+1,c
  5472                           
  5473                           ;i2c_master.c: 170: mssp1_clearIRQ();
  5474  000B4E  EC31  F007         	call	_mssp1_clearIRQ	;wreg free
  5475                           
  5476                           ;i2c_master.c: 171: mssp1_disableIRQ();
  5477  000B52  EC2E  F007         	call	_mssp1_disableIRQ	;wreg free
  5478                           
  5479                           ;i2c_master.c: 172: ret = i2c_status.error;
  5480  000B56  C00C  F043         	movff	_i2c_status+11,i2c_close@ret
  5481  000B5A                     l361:
  5482                           
  5483                           ;i2c_master.c: 173: }
  5484                           ;i2c_master.c: 174: return ret;
  5485  000B5A  5043               	movf	i2c_close@ret,w,c
  5486  000B5C  0012               	return	
  5487  000B5E                     __end_of_i2c_close:
  5488                           	opt stack 0
  5489                           tosu	equ	0xFFF
  5490                           tosh	equ	0xFFE
  5491                           tosl	equ	0xFFD
  5492                           pclath	equ	0xFFA
  5493                           tblptru	equ	0xFF8
  5494                           tblptrh	equ	0xFF7
  5495                           tblptrl	equ	0xFF6
  5496                           tablat	equ	0xFF5
  5497                           prodh	equ	0xFF4
  5498                           prodl	equ	0xFF3
  5499                           intcon	equ	0xFF2
  5500                           postinc0	equ	0xFEE
  5501                           wreg	equ	0xFE8
  5502                           postdec1	equ	0xFE5
  5503                           fsr1l	equ	0xFE1
  5504                           indf2	equ	0xFDF
  5505                           postinc2	equ	0xFDE
  5506                           postdec2	equ	0xFDD
  5507                           fsr2h	equ	0xFDA
  5508                           fsr2l	equ	0xFD9
  5509                           status	equ	0xFD8
  5510                           
  5511 ;; *************** function _mssp1_disableIRQ *****************
  5512 ;; Defined at:
  5513 ;;		line 48 in file "mcc_generated_files/i2c1_driver.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;		None
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		None
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5531 ;;Total ram usage:        0 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    6
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_i2c_close
  5538 ;;		_i2c_setTimeOut
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text54
  5543  000E5C                     __ptext54:
  5544                           	opt stack 0
  5545  000E5C                     _mssp1_disableIRQ:
  5546                           	opt stack 22
  5547                           
  5548                           ;i2c1_driver.c: 50: PIE3bits.SSP1IE = 0;
  5549                           
  5550                           ;incstack = 0
  5551  000E5C  010E               	movlb	14	; () banked
  5552  000E5E  91C5               	bcf	197,0,b	;volatile
  5553                           
  5554                           ; BSR set to: 14
  5555  000E60  0012               	return		;funcret
  5556  000E62                     __end_of_mssp1_disableIRQ:
  5557                           	opt stack 0
  5558                           tosu	equ	0xFFF
  5559                           tosh	equ	0xFFE
  5560                           tosl	equ	0xFFD
  5561                           pclath	equ	0xFFA
  5562                           tblptru	equ	0xFF8
  5563                           tblptrh	equ	0xFF7
  5564                           tblptrl	equ	0xFF6
  5565                           tablat	equ	0xFF5
  5566                           prodh	equ	0xFF4
  5567                           prodl	equ	0xFF3
  5568                           intcon	equ	0xFF2
  5569                           postinc0	equ	0xFEE
  5570                           wreg	equ	0xFE8
  5571                           postdec1	equ	0xFE5
  5572                           fsr1l	equ	0xFE1
  5573                           indf2	equ	0xFDF
  5574                           postinc2	equ	0xFDE
  5575                           postdec2	equ	0xFDD
  5576                           fsr2h	equ	0xFDA
  5577                           fsr2l	equ	0xFD9
  5578                           status	equ	0xFD8
  5579                           
  5580 ;; *************** function _mssp1_clearIRQ *****************
  5581 ;; Defined at:
  5582 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;		None
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		None
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;Total ram usage:        0 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    6
  5603 ;; This function calls:
  5604 ;;		Nothing
  5605 ;; This function is called by:
  5606 ;;		_i2c_open
  5607 ;;		_i2c_close
  5608 ;;		_i2c_ISR
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text55
  5613  000E62                     __ptext55:
  5614                           	opt stack 0
  5615  000E62                     _mssp1_clearIRQ:
  5616                           	opt stack 22
  5617                           
  5618                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  5619                           
  5620                           ; BSR set to: 14
  5621                           ;incstack = 0
  5622  000E62  010E               	movlb	14	; () banked
  5623  000E64  91CD               	bcf	205,0,b	;volatile
  5624                           
  5625                           ; BSR set to: 14
  5626  000E66  0012               	return		;funcret
  5627  000E68                     __end_of_mssp1_clearIRQ:
  5628                           	opt stack 0
  5629                           tosu	equ	0xFFF
  5630                           tosh	equ	0xFFE
  5631                           tosl	equ	0xFFD
  5632                           pclath	equ	0xFFA
  5633                           tblptru	equ	0xFF8
  5634                           tblptrh	equ	0xFF7
  5635                           tblptrl	equ	0xFF6
  5636                           tablat	equ	0xFF5
  5637                           prodh	equ	0xFF4
  5638                           prodl	equ	0xFF3
  5639                           intcon	equ	0xFF2
  5640                           postinc0	equ	0xFEE
  5641                           wreg	equ	0xFE8
  5642                           postdec1	equ	0xFE5
  5643                           fsr1l	equ	0xFE1
  5644                           indf2	equ	0xFDF
  5645                           postinc2	equ	0xFDE
  5646                           postdec2	equ	0xFDD
  5647                           fsr2h	equ	0xFDA
  5648                           fsr2l	equ	0xFD9
  5649                           status	equ	0xFD8
  5650                           
  5651 ;; *************** function _SYSTEM_Initialize *****************
  5652 ;; Defined at:
  5653 ;;		line 116 in file "mcc_generated_files/mcc.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;		None
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;		None
  5658 ;; Return value:  Size  Location     Type
  5659 ;;                  1    wreg      void 
  5660 ;; Registers used:
  5661 ;;		wreg, status,2, cstack
  5662 ;; Tracked objects:
  5663 ;;		On entry : 0/0
  5664 ;;		On exit  : 0/0
  5665 ;;		Unchanged: 0/0
  5666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5671 ;;Total ram usage:        0 bytes
  5672 ;; Hardware stack levels used:    1
  5673 ;; Hardware stack levels required when called:    7
  5674 ;; This function calls:
  5675 ;;		_EUSART2_Initialize
  5676 ;;		_INTERRUPT_Initialize
  5677 ;;		_OSCILLATOR_Initialize
  5678 ;;		_PIN_MANAGER_Initialize
  5679 ;;		_PMD_Initialize
  5680 ;; This function is called by:
  5681 ;;		_main
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text56
  5686  000C50                     __ptext56:
  5687                           	opt stack 0
  5688  000C50                     _SYSTEM_Initialize:
  5689                           	opt stack 23
  5690                           
  5691                           ;mcc.c: 118: INTERRUPT_Initialize();
  5692                           
  5693                           ; BSR set to: 14
  5694                           ;incstack = 0
  5695  000C50  EC50  F007         	call	_INTERRUPT_Initialize	;wreg free
  5696                           
  5697                           ;mcc.c: 119: PMD_Initialize();
  5698  000C54  ECAF  F005         	call	_PMD_Initialize	;wreg free
  5699                           
  5700                           ;mcc.c: 120: PIN_MANAGER_Initialize();
  5701  000C58  EC7D  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  5702                           
  5703                           ;mcc.c: 121: OSCILLATOR_Initialize();
  5704  000C5C  ECE3  F005         	call	_OSCILLATOR_Initialize	;wreg free
  5705                           
  5706                           ;mcc.c: 122: EUSART2_Initialize();
  5707  000C60  ECEF  F005         	call	_EUSART2_Initialize	;wreg free
  5708  000C64  0012               	return		;funcret
  5709  000C66                     __end_of_SYSTEM_Initialize:
  5710                           	opt stack 0
  5711                           tosu	equ	0xFFF
  5712                           tosh	equ	0xFFE
  5713                           tosl	equ	0xFFD
  5714                           pclath	equ	0xFFA
  5715                           tblptru	equ	0xFF8
  5716                           tblptrh	equ	0xFF7
  5717                           tblptrl	equ	0xFF6
  5718                           tablat	equ	0xFF5
  5719                           prodh	equ	0xFF4
  5720                           prodl	equ	0xFF3
  5721                           intcon	equ	0xFF2
  5722                           postinc0	equ	0xFEE
  5723                           wreg	equ	0xFE8
  5724                           postdec1	equ	0xFE5
  5725                           fsr1l	equ	0xFE1
  5726                           indf2	equ	0xFDF
  5727                           postinc2	equ	0xFDE
  5728                           postdec2	equ	0xFDD
  5729                           fsr2h	equ	0xFDA
  5730                           fsr2l	equ	0xFD9
  5731                           status	equ	0xFD8
  5732                           
  5733 ;; *************** function _PMD_Initialize *****************
  5734 ;; Defined at:
  5735 ;;		line 139 in file "mcc_generated_files/mcc.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;		None
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      void 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5753 ;;Total ram usage:        0 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    6
  5756 ;; This function calls:
  5757 ;;		Nothing
  5758 ;; This function is called by:
  5759 ;;		_SYSTEM_Initialize
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           	psect	text57
  5764  000B5E                     __ptext57:
  5765                           	opt stack 0
  5766  000B5E                     _PMD_Initialize:
  5767                           	opt stack 23
  5768                           
  5769                           ;mcc.c: 142: PMD0 = 0x00;
  5770                           
  5771                           ;incstack = 0
  5772  000B5E  0E00               	movlw	0
  5773  000B60  010E               	movlb	14	; () banked
  5774  000B62  6FE1               	movwf	225,b	;volatile
  5775                           
  5776                           ;mcc.c: 144: PMD1 = 0x00;
  5777  000B64  0E00               	movlw	0
  5778  000B66  6FE2               	movwf	226,b	;volatile
  5779                           
  5780                           ;mcc.c: 146: PMD2 = 0x00;
  5781  000B68  0E00               	movlw	0
  5782  000B6A  6FE3               	movwf	227,b	;volatile
  5783                           
  5784                           ;mcc.c: 148: PMD3 = 0x00;
  5785  000B6C  0E00               	movlw	0
  5786  000B6E  6FE4               	movwf	228,b	;volatile
  5787                           
  5788                           ;mcc.c: 150: PMD4 = 0x00;
  5789  000B70  0E00               	movlw	0
  5790  000B72  6FE5               	movwf	229,b	;volatile
  5791                           
  5792                           ;mcc.c: 152: PMD5 = 0x00;
  5793  000B74  0E00               	movlw	0
  5794  000B76  6FE6               	movwf	230,b	;volatile
  5795                           
  5796                           ; BSR set to: 14
  5797  000B78  0012               	return		;funcret
  5798  000B7A                     __end_of_PMD_Initialize:
  5799                           	opt stack 0
  5800                           tosu	equ	0xFFF
  5801                           tosh	equ	0xFFE
  5802                           tosl	equ	0xFFD
  5803                           pclath	equ	0xFFA
  5804                           tblptru	equ	0xFF8
  5805                           tblptrh	equ	0xFF7
  5806                           tblptrl	equ	0xFF6
  5807                           tablat	equ	0xFF5
  5808                           prodh	equ	0xFF4
  5809                           prodl	equ	0xFF3
  5810                           intcon	equ	0xFF2
  5811                           postinc0	equ	0xFEE
  5812                           wreg	equ	0xFE8
  5813                           postdec1	equ	0xFE5
  5814                           fsr1l	equ	0xFE1
  5815                           indf2	equ	0xFDF
  5816                           postinc2	equ	0xFDE
  5817                           postdec2	equ	0xFDD
  5818                           fsr2h	equ	0xFDA
  5819                           fsr2l	equ	0xFD9
  5820                           status	equ	0xFD8
  5821                           
  5822 ;; *************** function _PIN_MANAGER_Initialize *****************
  5823 ;; Defined at:
  5824 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, status,2
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used:    1
  5844 ;; Hardware stack levels required when called:    6
  5845 ;; This function calls:
  5846 ;;		Nothing
  5847 ;; This function is called by:
  5848 ;;		_SYSTEM_Initialize
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text58
  5853  0002FA                     __ptext58:
  5854                           	opt stack 0
  5855  0002FA                     _PIN_MANAGER_Initialize:
  5856                           	opt stack 23
  5857                           
  5858                           ;pin_manager.c: 57: LATE = 0x00;
  5859                           
  5860                           ; BSR set to: 14
  5861                           ;incstack = 0
  5862  0002FA  0E00               	movlw	0
  5863  0002FC  6E87               	movwf	3975,c	;volatile
  5864                           
  5865                           ;pin_manager.c: 58: LATD = 0x00;
  5866  0002FE  0E00               	movlw	0
  5867  000300  6E86               	movwf	3974,c	;volatile
  5868                           
  5869                           ;pin_manager.c: 59: LATA = 0x0C;
  5870  000302  0E0C               	movlw	12
  5871  000304  6E83               	movwf	3971,c	;volatile
  5872                           
  5873                           ;pin_manager.c: 60: LATB = 0x00;
  5874  000306  0E00               	movlw	0
  5875  000308  6E84               	movwf	3972,c	;volatile
  5876                           
  5877                           ;pin_manager.c: 61: LATC = 0x00;
  5878  00030A  0E00               	movlw	0
  5879  00030C  6E85               	movwf	3973,c	;volatile
  5880                           
  5881                           ;pin_manager.c: 66: TRISE = 0x07;
  5882  00030E  0E07               	movlw	7
  5883  000310  6E8C               	movwf	3980,c	;volatile
  5884                           
  5885                           ;pin_manager.c: 67: TRISA = 0xEB;
  5886  000312  0EEB               	movlw	235
  5887  000314  6E88               	movwf	3976,c	;volatile
  5888                           
  5889                           ;pin_manager.c: 68: TRISB = 0xFF;
  5890  000316  6889               	setf	3977,c	;volatile
  5891                           
  5892                           ;pin_manager.c: 69: TRISC = 0xDF;
  5893  000318  0EDF               	movlw	223
  5894  00031A  6E8A               	movwf	3978,c	;volatile
  5895                           
  5896                           ;pin_manager.c: 70: TRISD = 0x7F;
  5897  00031C  0E7F               	movlw	127
  5898  00031E  6E8B               	movwf	3979,c	;volatile
  5899                           
  5900                           ;pin_manager.c: 75: ANSELC = 0xE7;
  5901  000320  0EE7               	movlw	231
  5902  000322  010F               	movlb	15	; () banked
  5903  000324  6F21               	movwf	33,b	;volatile
  5904                           
  5905                           ; BSR set to: 15
  5906                           ;pin_manager.c: 76: ANSELB = 0xFF;
  5907  000326  6919               	setf	25,b	;volatile
  5908                           
  5909                           ;pin_manager.c: 77: ANSELD = 0xF7;
  5910  000328  0EF7               	movlw	247
  5911  00032A  6F26               	movwf	38,b	;volatile
  5912                           
  5913                           ;pin_manager.c: 78: ANSELE = 0x07;
  5914  00032C  0E07               	movlw	7
  5915  00032E  6F2E               	movwf	46,b	;volatile
  5916                           
  5917                           ; BSR set to: 15
  5918                           ;pin_manager.c: 79: ANSELA = 0xFF;
  5919  000330  6911               	setf	17,b	;volatile
  5920                           
  5921                           ;pin_manager.c: 84: WPUD = 0x88;
  5922  000332  0E88               	movlw	136
  5923  000334  6F25               	movwf	37,b	;volatile
  5924                           
  5925                           ;pin_manager.c: 85: WPUE = 0x00;
  5926  000336  0E00               	movlw	0
  5927  000338  6F2D               	movwf	45,b	;volatile
  5928                           
  5929                           ;pin_manager.c: 86: WPUB = 0x02;
  5930  00033A  0E02               	movlw	2
  5931  00033C  6F18               	movwf	24,b	;volatile
  5932                           
  5933                           ;pin_manager.c: 87: WPUA = 0x00;
  5934  00033E  0E00               	movlw	0
  5935  000340  6F10               	movwf	16,b	;volatile
  5936                           
  5937                           ;pin_manager.c: 88: WPUC = 0x18;
  5938  000342  0E18               	movlw	24
  5939  000344  6F20               	movwf	32,b	;volatile
  5940                           
  5941                           ;pin_manager.c: 93: ODCONE = 0x00;
  5942  000346  0E00               	movlw	0
  5943  000348  6F2C               	movwf	44,b	;volatile
  5944                           
  5945                           ;pin_manager.c: 94: ODCONA = 0x00;
  5946  00034A  0E00               	movlw	0
  5947  00034C  6F0F               	movwf	15,b	;volatile
  5948                           
  5949                           ;pin_manager.c: 95: ODCONB = 0x00;
  5950  00034E  0E00               	movlw	0
  5951  000350  6F17               	movwf	23,b	;volatile
  5952                           
  5953                           ;pin_manager.c: 96: ODCONC = 0x00;
  5954  000352  0E00               	movlw	0
  5955  000354  6F1F               	movwf	31,b	;volatile
  5956                           
  5957                           ;pin_manager.c: 97: ODCOND = 0x00;
  5958  000356  0E00               	movlw	0
  5959  000358  6F24               	movwf	36,b	;volatile
  5960                           
  5961                           ;pin_manager.c: 104: RC3PPS = 0x0F;
  5962  00035A  0E0F               	movlw	15
  5963  00035C  010E               	movlb	14	; () banked
  5964  00035E  6FFA               	movwf	250,b	;volatile
  5965                           
  5966                           ;pin_manager.c: 105: RC4PPS = 0x10;
  5967  000360  0E10               	movlw	16
  5968  000362  6FFB               	movwf	251,b	;volatile
  5969                           
  5970                           ; BSR set to: 14
  5971                           ;pin_manager.c: 106: SSP1CLKPPSbits.SSPCLKPPS = 0x13;
  5972  000364  81B7               	bsf	183,0,b	;volatile
  5973  000366  83B7               	bsf	183,1,b	;volatile
  5974  000368  95B7               	bcf	183,2,b	;volatile
  5975  00036A  97B7               	bcf	183,3,b	;volatile
  5976  00036C  89B7               	bsf	183,4,b	;volatile
  5977                           
  5978                           ;pin_manager.c: 107: RD7PPS = 0x0B;
  5979  00036E  0E0B               	movlw	11
  5980  000370  010F               	movlb	15	; () banked
  5981  000372  6F06               	movwf	6,b	;volatile
  5982                           
  5983                           ; BSR set to: 15
  5984                           ;pin_manager.c: 108: RX2PPSbits.RXPPS = 0x1B;
  5985  000374  010E               	movlb	14	; () banked
  5986  000376  818D               	bsf	141,0,b	;volatile
  5987  000378  838D               	bsf	141,1,b	;volatile
  5988  00037A  958D               	bcf	141,2,b	;volatile
  5989  00037C  878D               	bsf	141,3,b	;volatile
  5990  00037E  898D               	bsf	141,4,b	;volatile
  5991                           
  5992                           ; BSR set to: 14
  5993                           ;pin_manager.c: 109: SSP1DATPPSbits.SSPDATPPS = 0x14;
  5994  000380  91B8               	bcf	184,0,b	;volatile
  5995  000382  93B8               	bcf	184,1,b	;volatile
  5996  000384  85B8               	bsf	184,2,b	;volatile
  5997  000386  97B8               	bcf	184,3,b	;volatile
  5998  000388  89B8               	bsf	184,4,b	;volatile
  5999                           
  6000                           ; BSR set to: 14
  6001  00038A  0012               	return		;funcret
  6002  00038C                     __end_of_PIN_MANAGER_Initialize:
  6003                           	opt stack 0
  6004                           tosu	equ	0xFFF
  6005                           tosh	equ	0xFFE
  6006                           tosl	equ	0xFFD
  6007                           pclath	equ	0xFFA
  6008                           tblptru	equ	0xFF8
  6009                           tblptrh	equ	0xFF7
  6010                           tblptrl	equ	0xFF6
  6011                           tablat	equ	0xFF5
  6012                           prodh	equ	0xFF4
  6013                           prodl	equ	0xFF3
  6014                           intcon	equ	0xFF2
  6015                           postinc0	equ	0xFEE
  6016                           wreg	equ	0xFE8
  6017                           postdec1	equ	0xFE5
  6018                           fsr1l	equ	0xFE1
  6019                           indf2	equ	0xFDF
  6020                           postinc2	equ	0xFDE
  6021                           postdec2	equ	0xFDD
  6022                           fsr2h	equ	0xFDA
  6023                           fsr2l	equ	0xFD9
  6024                           status	equ	0xFD8
  6025                           
  6026 ;; *************** function _OSCILLATOR_Initialize *****************
  6027 ;; Defined at:
  6028 ;;		line 125 in file "mcc_generated_files/mcc.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    6
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_SYSTEM_Initialize
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text59
  6057  000BC6                     __ptext59:
  6058                           	opt stack 0
  6059  000BC6                     _OSCILLATOR_Initialize:
  6060                           	opt stack 23
  6061                           
  6062                           ;mcc.c: 128: OSCCON1 = 0x62;
  6063                           
  6064                           ; BSR set to: 14
  6065                           ;incstack = 0
  6066  000BC6  0E62               	movlw	98
  6067  000BC8  010E               	movlb	14	; () banked
  6068  000BCA  6FD8               	movwf	216,b	;volatile
  6069                           
  6070                           ;mcc.c: 130: OSCCON3 = 0x00;
  6071  000BCC  0E00               	movlw	0
  6072  000BCE  6FDA               	movwf	218,b	;volatile
  6073                           
  6074                           ;mcc.c: 132: OSCEN = 0x00;
  6075  000BD0  0E00               	movlw	0
  6076  000BD2  6FDC               	movwf	220,b	;volatile
  6077                           
  6078                           ;mcc.c: 134: OSCFRQ = 0x03;
  6079  000BD4  0E03               	movlw	3
  6080  000BD6  6FDE               	movwf	222,b	;volatile
  6081                           
  6082                           ;mcc.c: 136: OSCTUNE = 0x20;
  6083  000BD8  0E20               	movlw	32
  6084  000BDA  6FDD               	movwf	221,b	;volatile
  6085                           
  6086                           ; BSR set to: 14
  6087  000BDC  0012               	return		;funcret
  6088  000BDE                     __end_of_OSCILLATOR_Initialize:
  6089                           	opt stack 0
  6090                           tosu	equ	0xFFF
  6091                           tosh	equ	0xFFE
  6092                           tosl	equ	0xFFD
  6093                           pclath	equ	0xFFA
  6094                           tblptru	equ	0xFF8
  6095                           tblptrh	equ	0xFF7
  6096                           tblptrl	equ	0xFF6
  6097                           tablat	equ	0xFF5
  6098                           prodh	equ	0xFF4
  6099                           prodl	equ	0xFF3
  6100                           intcon	equ	0xFF2
  6101                           postinc0	equ	0xFEE
  6102                           wreg	equ	0xFE8
  6103                           postdec1	equ	0xFE5
  6104                           fsr1l	equ	0xFE1
  6105                           indf2	equ	0xFDF
  6106                           postinc2	equ	0xFDE
  6107                           postdec2	equ	0xFDD
  6108                           fsr2h	equ	0xFDA
  6109                           fsr2l	equ	0xFD9
  6110                           status	equ	0xFD8
  6111                           
  6112 ;; *************** function _INTERRUPT_Initialize *****************
  6113 ;; Defined at:
  6114 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		None
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    6
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_SYSTEM_Initialize
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text60
  6143  000EA0                     __ptext60:
  6144                           	opt stack 0
  6145  000EA0                     _INTERRUPT_Initialize:
  6146                           	opt stack 23
  6147                           
  6148                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  6149                           
  6150                           ; BSR set to: 14
  6151                           ;incstack = 0
  6152  000EA0  9AF2               	bcf	intcon,5,c	;volatile
  6153  000EA2  0012               	return		;funcret
  6154  000EA4                     __end_of_INTERRUPT_Initialize:
  6155                           	opt stack 0
  6156                           tosu	equ	0xFFF
  6157                           tosh	equ	0xFFE
  6158                           tosl	equ	0xFFD
  6159                           pclath	equ	0xFFA
  6160                           tblptru	equ	0xFF8
  6161                           tblptrh	equ	0xFF7
  6162                           tblptrl	equ	0xFF6
  6163                           tablat	equ	0xFF5
  6164                           prodh	equ	0xFF4
  6165                           prodl	equ	0xFF3
  6166                           intcon	equ	0xFF2
  6167                           postinc0	equ	0xFEE
  6168                           wreg	equ	0xFE8
  6169                           postdec1	equ	0xFE5
  6170                           fsr1l	equ	0xFE1
  6171                           indf2	equ	0xFDF
  6172                           postinc2	equ	0xFDE
  6173                           postdec2	equ	0xFDD
  6174                           fsr2h	equ	0xFDA
  6175                           fsr2l	equ	0xFD9
  6176                           status	equ	0xFD8
  6177                           
  6178 ;; *************** function _EUSART2_Initialize *****************
  6179 ;; Defined at:
  6180 ;;		line 55 in file "mcc_generated_files/eusart2.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6198 ;;Total ram usage:        0 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    6
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_SYSTEM_Initialize
  6205 ;;		_main
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text61
  6210  000BDE                     __ptext61:
  6211                           	opt stack 0
  6212  000BDE                     _EUSART2_Initialize:
  6213                           	opt stack 23
  6214                           
  6215                           ;eusart2.c: 60: BAUD2CON = 0x08;
  6216                           
  6217                           ;incstack = 0
  6218  000BDE  0E08               	movlw	8
  6219  000BE0  010E               	movlb	14	; () banked
  6220  000BE2  6F9F               	movwf	159,b	;volatile
  6221                           
  6222                           ;eusart2.c: 63: RC2STA = 0x90;
  6223  000BE4  0E90               	movlw	144
  6224  000BE6  6F9D               	movwf	157,b	;volatile
  6225                           
  6226                           ;eusart2.c: 66: TX2STA = 0x24;
  6227  000BE8  0E24               	movlw	36
  6228  000BEA  6F9E               	movwf	158,b	;volatile
  6229                           
  6230                           ;eusart2.c: 69: SP2BRGL = 0x33;
  6231  000BEC  0E33               	movlw	51
  6232  000BEE  6F9B               	movwf	155,b	;volatile
  6233                           
  6234                           ;eusart2.c: 72: SP2BRGH = 0x00;
  6235  000BF0  0E00               	movlw	0
  6236  000BF2  6F9C               	movwf	156,b	;volatile
  6237                           
  6238                           ; BSR set to: 14
  6239  000BF4  0012               	return		;funcret
  6240  000BF6                     __end_of_EUSART2_Initialize:
  6241                           	opt stack 0
  6242                           tosu	equ	0xFFF
  6243                           tosh	equ	0xFFE
  6244                           tosl	equ	0xFFD
  6245                           pclath	equ	0xFFA
  6246                           tblptru	equ	0xFF8
  6247                           tblptrh	equ	0xFF7
  6248                           tblptrl	equ	0xFF6
  6249                           tablat	equ	0xFF5
  6250                           prodh	equ	0xFF4
  6251                           prodl	equ	0xFF3
  6252                           intcon	equ	0xFF2
  6253                           postinc0	equ	0xFEE
  6254                           wreg	equ	0xFE8
  6255                           postdec1	equ	0xFE5
  6256                           fsr1l	equ	0xFE1
  6257                           indf2	equ	0xFDF
  6258                           postinc2	equ	0xFDE
  6259                           postdec2	equ	0xFDD
  6260                           fsr2h	equ	0xFDA
  6261                           fsr2l	equ	0xFD9
  6262                           status	equ	0xFD8
  6263                           
  6264 ;; *************** function _EUSART2_is_rx_ready *****************
  6265 ;; Defined at:
  6266 ;;		line 82 in file "mcc_generated_files/eusart2.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      unsigned char 
  6273 ;; Registers used:
  6274 ;;		wreg
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6284 ;;Total ram usage:        0 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:    6
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_main
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text62
  6295  000D7A                     __ptext62:
  6296                           	opt stack 0
  6297  000D7A                     _EUSART2_is_rx_ready:
  6298                           	opt stack 24
  6299                           
  6300                           ;eusart2.c: 84: return PIR3bits.RC2IF;
  6301                           
  6302                           ; BSR set to: 14
  6303                           ;incstack = 0
  6304  000D7A  010E               	movlb	14	; () banked
  6305  000D7C  AFCD               	btfss	205,7,b	;volatile
  6306  000D7E  D002               	goto	u1700
  6307  000D80  0E01               	movlw	1
  6308  000D82  0012               	return	
  6309  000D84                     u1700:
  6310  000D84  0E00               	movlw	0
  6311  000D86  0012               	return	
  6312  000D88                     __end_of_EUSART2_is_rx_ready:
  6313                           	opt stack 0
  6314                           tosu	equ	0xFFF
  6315                           tosh	equ	0xFFE
  6316                           tosl	equ	0xFFD
  6317                           pclath	equ	0xFFA
  6318                           tblptru	equ	0xFF8
  6319                           tblptrh	equ	0xFF7
  6320                           tblptrl	equ	0xFF6
  6321                           tablat	equ	0xFF5
  6322                           prodh	equ	0xFF4
  6323                           prodl	equ	0xFF3
  6324                           intcon	equ	0xFF2
  6325                           postinc0	equ	0xFEE
  6326                           wreg	equ	0xFE8
  6327                           postdec1	equ	0xFE5
  6328                           fsr1l	equ	0xFE1
  6329                           indf2	equ	0xFDF
  6330                           postinc2	equ	0xFDE
  6331                           postdec2	equ	0xFDD
  6332                           fsr2h	equ	0xFDA
  6333                           fsr2l	equ	0xFD9
  6334                           status	equ	0xFD8
  6335                           
  6336 ;; *************** function _EUSART2_Write *****************
  6337 ;; Defined at:
  6338 ;;		line 111 in file "mcc_generated_files/eusart2.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  txData          1    wreg     unsigned char 
  6341 ;; Auto vars:     Size  Location     Type
  6342 ;;  txData          1   21[COMRAM] unsigned char 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  1    wreg      void 
  6345 ;; Registers used:
  6346 ;;		wreg
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6356 ;;Total ram usage:        1 bytes
  6357 ;; Hardware stack levels used:    1
  6358 ;; Hardware stack levels required when called:    6
  6359 ;; This function calls:
  6360 ;;		Nothing
  6361 ;; This function is called by:
  6362 ;;		_main
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text63
  6367  000D88                     __ptext63:
  6368                           	opt stack 0
  6369  000D88                     _EUSART2_Write:
  6370                           	opt stack 24
  6371                           
  6372                           ; BSR set to: 14
  6373                           ;incstack = 0
  6374                           ;EUSART2_Write@txData stored from wreg
  6375  000D88  6E43               	movwf	EUSART2_Write@txData,c
  6376  000D8A                     
  6377                           ;eusart2.c: 114: {
  6378                           
  6379                           ;eusart2.c: 113: while(0 == PIR3bits.TX2IF)
  6380  000D8A  010E               	movlb	14	; () banked
  6381  000D8C  ADCD               	btfss	205,6,b	;volatile
  6382  000D8E  D7FD               	goto	l3884
  6383                           
  6384                           ; BSR set to: 14
  6385                           ;eusart2.c: 115: }
  6386                           ;eusart2.c: 117: TX2REG = txData;
  6387                           
  6388                           ; BSR set to: 14
  6389  000D90  C043  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
  6390                           
  6391                           ; BSR set to: 14
  6392  000D94  0012               	return		;funcret
  6393  000D96                     __end_of_EUSART2_Write:
  6394                           	opt stack 0
  6395                           tosu	equ	0xFFF
  6396                           tosh	equ	0xFFE
  6397                           tosl	equ	0xFFD
  6398                           pclath	equ	0xFFA
  6399                           tblptru	equ	0xFF8
  6400                           tblptrh	equ	0xFF7
  6401                           tblptrl	equ	0xFF6
  6402                           tablat	equ	0xFF5
  6403                           prodh	equ	0xFF4
  6404                           prodl	equ	0xFF3
  6405                           intcon	equ	0xFF2
  6406                           postinc0	equ	0xFEE
  6407                           wreg	equ	0xFE8
  6408                           postdec1	equ	0xFE5
  6409                           fsr1l	equ	0xFE1
  6410                           indf2	equ	0xFDF
  6411                           postinc2	equ	0xFDE
  6412                           postdec2	equ	0xFDD
  6413                           fsr2h	equ	0xFDA
  6414                           fsr2l	equ	0xFD9
  6415                           status	equ	0xFD8
  6416                           
  6417 ;; *************** function _EUSART2_Read *****************
  6418 ;; Defined at:
  6419 ;;		line 92 in file "mcc_generated_files/eusart2.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;		None
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      unsigned char 
  6426 ;; Registers used:
  6427 ;;		wreg, status,2
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6437 ;;Total ram usage:        0 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    6
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_main
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text64
  6448  000CCA                     __ptext64:
  6449                           	opt stack 0
  6450  000CCA                     _EUSART2_Read:
  6451                           	opt stack 24
  6452                           
  6453                           ;eusart2.c: 96: {
  6454                           
  6455                           ;eusart2.c: 95: while(!PIR3bits.RC2IF)
  6456                           
  6457                           ; BSR set to: 14
  6458                           ;incstack = 0
  6459  000CCA  010E               	movlb	14	; () banked
  6460  000CCC  AFCD               	btfss	205,7,b	;volatile
  6461  000CCE  D7FD               	goto	_EUSART2_Read
  6462                           
  6463                           ; BSR set to: 14
  6464                           ;eusart2.c: 97: }
  6465                           ;eusart2.c: 100: if(1 == RC2STAbits.OERR)
  6466  000CD0  A39D               	btfss	157,1,b	;volatile
  6467  000CD2  D002               	goto	l679
  6468                           
  6469                           ; BSR set to: 14
  6470                           ;eusart2.c: 101: {
  6471                           ;eusart2.c: 104: RC2STAbits.SPEN = 0;
  6472  000CD4  9F9D               	bcf	157,7,b	;volatile
  6473                           
  6474                           ;eusart2.c: 105: RC2STAbits.SPEN = 1;
  6475  000CD6  8F9D               	bsf	157,7,b	;volatile
  6476  000CD8                     l679:
  6477                           
  6478                           ; BSR set to: 14
  6479                           ;eusart2.c: 106: }
  6480                           ;eusart2.c: 108: return RC2REG;
  6481                           
  6482                           ; BSR set to: 14
  6483  000CD8  5199               	movf	153,w,b	;volatile
  6484  000CDA  0012               	return	
  6485  000CDC                     __end_of_EUSART2_Read:
  6486                           	opt stack 0
  6487                           tosu	equ	0xFFF
  6488                           tosh	equ	0xFFE
  6489                           tosl	equ	0xFFD
  6490                           pclath	equ	0xFFA
  6491                           tblptru	equ	0xFF8
  6492                           tblptrh	equ	0xFF7
  6493                           tblptrl	equ	0xFF6
  6494                           tablat	equ	0xFF5
  6495                           prodh	equ	0xFF4
  6496                           prodl	equ	0xFF3
  6497                           intcon	equ	0xFF2
  6498                           postinc0	equ	0xFEE
  6499                           wreg	equ	0xFE8
  6500                           postdec1	equ	0xFE5
  6501                           fsr1l	equ	0xFE1
  6502                           indf2	equ	0xFDF
  6503                           postinc2	equ	0xFDE
  6504                           postdec2	equ	0xFDD
  6505                           fsr2h	equ	0xFDA
  6506                           fsr2l	equ	0xFD9
  6507                           status	equ	0xFD8
  6508                           
  6509 ;; *************** function _INTERRUPT_InterruptManager *****************
  6510 ;; Defined at:
  6511 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;		None
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  1    wreg      void 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6527 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6528 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;Total ram usage:       18 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    5
  6532 ;; This function calls:
  6533 ;;		Absolute function
  6534 ;;		_i2c_busCollisionISR
  6535 ;;		i2_i2c_ISR
  6536 ;; This function is called by:
  6537 ;;		Interrupt level 2
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541                           	psect	intcode
  6542  000008                     __pintcode:
  6543                           	opt stack 0
  6544  000008                     _INTERRUPT_InterruptManager:
  6545                           	opt stack 16
  6546                           
  6547                           ; BSR set to: 14
  6548                           ;incstack = 0
  6549  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6550  00000A  CFFA F031          	movff	pclath,??_INTERRUPT_InterruptManager
  6551  00000E  CFFB F032          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6552  000012  CFE9 F033          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  6553  000016  CFEA F034          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  6554  00001A  CFE1 F035          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  6555  00001E  CFE2 F036          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  6556  000022  CFD9 F037          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  6557  000026  CFDA F038          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  6558  00002A  CFF3 F039          	movff	prodl,??_INTERRUPT_InterruptManager+8
  6559  00002E  CFF4 F03A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  6560  000032  CFF6 F03B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  6561  000036  CFF7 F03C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  6562  00003A  CFF8 F03D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  6563  00003E  CFF5 F03E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  6564  000042  C04A  F03F         	movff	btemp,??_INTERRUPT_InterruptManager+14
  6565  000046  C04B  F040         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  6566  00004A  C04C  F041         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  6567  00004E  C04D  F042         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  6568                           
  6569                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  6570  000052  ACF2               	btfss	intcon,6,c	;volatile
  6571  000054  D01E               	goto	i2u182_49
  6572                           
  6573                           ;interrupt_manager.c: 61: {
  6574                           ;interrupt_manager.c: 62: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  6575  000056  010E               	movlb	14	; () banked
  6576  000058  B3C5               	btfsc	197,1,b	;volatile
  6577                           
  6578                           ; BSR set to: 14
  6579  00005A  A3CD               	btfss	205,1,b	;volatile
  6580  00005C  D00A               	goto	i2l273
  6581                           
  6582                           ; BSR set to: 14
  6583                           ;interrupt_manager.c: 63: {
  6584                           ;interrupt_manager.c: 64: i2c1_driver_busCollisionISR();
  6585  00005E  D801               	call	i2u179_48
  6586  000060  D018               	goto	i2u182_49
  6587  000062                     i2u179_48:
  6588  000062  0005               	push	
  6589  000064  6EFA               	movwf	pclath,c
  6590  000066  502B               	movf	_i2c1_driver_busCollisionISR,w,c
  6591  000068  6EFD               	movwf	tosl,c
  6592  00006A  502C               	movf	_i2c1_driver_busCollisionISR+1,w,c
  6593  00006C  6EFE               	movwf	tosh,c
  6594  00006E  502D               	movf	_i2c1_driver_busCollisionISR+2,w,c
  6595  000070  D00D               	goto	L3
  6596  000072                     i2l273:
  6597                           
  6598                           ; BSR set to: 14
  6599                           ;interrupt_manager.c: 66: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  6600  000072  B1C5               	btfsc	197,0,b	;volatile
  6601                           
  6602                           ; BSR set to: 14
  6603  000074  A1CD               	btfss	205,0,b	;volatile
  6604  000076  D00D               	goto	i2u182_49
  6605                           
  6606                           ; BSR set to: 14
  6607                           ;interrupt_manager.c: 67: {
  6608                           ;interrupt_manager.c: 68: i2c1_driver_i2cISR();
  6609  000078  D801               	call	i2u182_48
  6610  00007A  D00B               	goto	i2u182_49
  6611  00007C                     i2u182_48:
  6612  00007C  0005               	push	
  6613  00007E  6EFA               	movwf	pclath,c
  6614  000080  0100               	movlb	0	; () banked
  6615  000082  51A4               	movf	_i2c1_driver_i2cISR& (0+255),w,b
  6616  000084  6EFD               	movwf	tosl,c
  6617  000086  51A5               	movf	(_i2c1_driver_i2cISR+1)& (0+255),w,b
  6618  000088  6EFE               	movwf	tosh,c
  6619  00008A  51A6               	movf	(_i2c1_driver_i2cISR+2)& (0+255),w,b
  6620  00008C                     L3:
  6621  00008C  6EFF               	movwf	tosu,c
  6622  00008E  50FA               	movf	pclath,w,c
  6623  000090  0012               	return		;indir
  6624  000092                     i2u182_49:
  6625                           
  6626                           ;interrupt_manager.c: 75: else
  6627                           ;interrupt_manager.c: 76: {
  6628                           
  6629                           ;interrupt_manager.c: 73: }
  6630                           ;interrupt_manager.c: 74: }
  6631                           
  6632                           ;interrupt_manager.c: 70: else
  6633                           ;interrupt_manager.c: 71: {
  6634                           
  6635                           ;interrupt_manager.c: 69: }
  6636  000092  C042  F04D         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  6637  000096  C041  F04C         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  6638  00009A  C040  F04B         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  6639  00009E  C03F  F04A         	movff	??_INTERRUPT_InterruptManager+14,btemp
  6640  0000A2  C03E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  6641  0000A6  C03D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  6642  0000AA  C03C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  6643  0000AE  C03B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  6644  0000B2  C03A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  6645  0000B6  C039  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  6646  0000BA  C038  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  6647  0000BE  C037  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  6648  0000C2  C036  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  6649  0000C6  C035  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  6650  0000CA  C034  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  6651  0000CE  C033  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  6652  0000D2  C032  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6653  0000D6  C031  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6654  0000DA  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6655  0000DC  0011               	retfie		f
  6656  0000DE                     __end_of_INTERRUPT_InterruptManager:
  6657                           	opt stack 0
  6658                           tosu	equ	0xFFF
  6659                           tosh	equ	0xFFE
  6660                           tosl	equ	0xFFD
  6661                           pclatu	equ	0xFFB
  6662                           pclath	equ	0xFFA
  6663                           tblptru	equ	0xFF8
  6664                           tblptrh	equ	0xFF7
  6665                           tblptrl	equ	0xFF6
  6666                           tablat	equ	0xFF5
  6667                           prodh	equ	0xFF4
  6668                           prodl	equ	0xFF3
  6669                           intcon	equ	0xFF2
  6670                           postinc0	equ	0xFEE
  6671                           fsr0h	equ	0xFEA
  6672                           fsr0l	equ	0xFE9
  6673                           wreg	equ	0xFE8
  6674                           postdec1	equ	0xFE5
  6675                           fsr1h	equ	0xFE2
  6676                           fsr1l	equ	0xFE1
  6677                           indf2	equ	0xFDF
  6678                           postinc2	equ	0xFDE
  6679                           postdec2	equ	0xFDD
  6680                           fsr2h	equ	0xFDA
  6681                           fsr2l	equ	0xFD9
  6682                           status	equ	0xFD8
  6683                           
  6684 ;; *************** function i2_i2c_ISR *****************
  6685 ;; Defined at:
  6686 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;		None
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;		None
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  1    wreg      void 
  6693 ;; Registers used:
  6694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6704 ;;Total ram usage:        0 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    4
  6707 ;; This function calls:
  6708 ;;		i2_do_I2C_DO_ACK
  6709 ;;		i2_do_I2C_DO_ADDRESS_NACK
  6710 ;;		i2_do_I2C_DO_NACK_RESTART
  6711 ;;		i2_do_I2C_DO_NACK_STOP
  6712 ;;		i2_do_I2C_IDLE
  6713 ;;		i2_do_I2C_RCEN
  6714 ;;		i2_do_I2C_RESET
  6715 ;;		i2_do_I2C_RX
  6716 ;;		i2_do_I2C_SEND_ADR_READ
  6717 ;;		i2_do_I2C_SEND_ADR_WRITE
  6718 ;;		i2_do_I2C_SEND_RESTART
  6719 ;;		i2_do_I2C_SEND_RESTART_READ
  6720 ;;		i2_do_I2C_SEND_RESTART_WRITE
  6721 ;;		i2_do_I2C_SEND_STOP
  6722 ;;		i2_do_I2C_TX
  6723 ;;		i2_do_I2C_TX_EMPTY
  6724 ;;		i2_i2c1_driver_isNACK
  6725 ;;		i2_mssp1_clearIRQ
  6726 ;; This function is called by:
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           	psect	text66
  6731  00085A                     __ptext66:
  6732                           	opt stack 0
  6733  00085A                     i2_i2c_ISR:
  6734                           	opt stack 16
  6735                           
  6736                           ;i2c_master.c: 421: mssp1_clearIRQ();
  6737                           
  6738                           ;incstack = 0
  6739  00085A  EC34  F007         	call	i2_mssp1_clearIRQ	;wreg free
  6740                           
  6741                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  6742  00085E  A601               	btfss	_i2c_status,3,c
  6743  000860  D006               	goto	i2l475
  6744  000862  EC33  F006         	call	i2_i2c1_driver_isNACK	;wreg free
  6745  000866  A0D8               	btfss	status,0,c
  6746  000868  D002               	goto	i2l475
  6747                           
  6748                           ;i2c_master.c: 428: {
  6749                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  6750  00086A  0E0F               	movlw	15
  6751  00086C  6E0B               	movwf	_i2c_status+10,c
  6752  00086E                     i2l475:
  6753                           
  6754                           ;i2c_master.c: 430: }
  6755                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  6756  00086E  500B               	movf	_i2c_status+10,w,c
  6757  000870  0D03               	mullw	3
  6758  000872  0E60               	movlw	low _fsmStateTable
  6759  000874  24F3               	addwf	prodl,w,c
  6760  000876  6ED9               	movwf	fsr2l,c
  6761  000878  0E00               	movlw	high _fsmStateTable
  6762  00087A  20F4               	addwfc	prodh,w,c
  6763  00087C  6EDA               	movwf	fsr2h,c
  6764  00087E  D801               	call	i2u175_48
  6765  000880  D00A               	goto	i2u175_49
  6766  000882                     i2u175_48:
  6767  000882  0005               	push	
  6768  000884  6EFA               	movwf	pclath,c
  6769  000886  50DE               	movf	postinc2,w,c
  6770  000888  6EFD               	movwf	tosl,c
  6771  00088A  50DE               	movf	postinc2,w,c
  6772  00088C  6EFE               	movwf	tosh,c
  6773  00088E  50DE               	movf	postinc2,w,c
  6774  000890  6EFF               	movwf	tosu,c
  6775  000892  50FA               	movf	pclath,w,c
  6776  000894  0012               	return		;indir
  6777  000896                     i2u175_49:
  6778  000896  6E0B               	movwf	_i2c_status+10,c
  6779  000898  0012               	return		;funcret
  6780  00089A                     __end_ofi2_i2c_ISR:
  6781                           	opt stack 0
  6782                           tosu	equ	0xFFF
  6783                           tosh	equ	0xFFE
  6784                           tosl	equ	0xFFD
  6785                           pclatu	equ	0xFFB
  6786                           pclath	equ	0xFFA
  6787                           tblptru	equ	0xFF8
  6788                           tblptrh	equ	0xFF7
  6789                           tblptrl	equ	0xFF6
  6790                           tablat	equ	0xFF5
  6791                           prodh	equ	0xFF4
  6792                           prodl	equ	0xFF3
  6793                           intcon	equ	0xFF2
  6794                           postinc0	equ	0xFEE
  6795                           fsr0h	equ	0xFEA
  6796                           fsr0l	equ	0xFE9
  6797                           wreg	equ	0xFE8
  6798                           postdec1	equ	0xFE5
  6799                           fsr1h	equ	0xFE2
  6800                           fsr1l	equ	0xFE1
  6801                           indf2	equ	0xFDF
  6802                           postinc2	equ	0xFDE
  6803                           postdec2	equ	0xFDD
  6804                           fsr2h	equ	0xFDA
  6805                           fsr2l	equ	0xFD9
  6806                           status	equ	0xFD8
  6807                           
  6808 ;; *************** function i2_mssp1_clearIRQ *****************
  6809 ;; Defined at:
  6810 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      void 
  6817 ;; Registers used:
  6818 ;;		None
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6828 ;;Total ram usage:        0 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		i2_i2c_ISR
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text67
  6838  000E68                     __ptext67:
  6839                           	opt stack 0
  6840  000E68                     i2_mssp1_clearIRQ:
  6841                           	opt stack 19
  6842                           
  6843                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  6844                           
  6845                           ;incstack = 0
  6846  000E68  010E               	movlb	14	; () banked
  6847  000E6A  91CD               	bcf	205,0,b	;volatile
  6848                           
  6849                           ; BSR set to: 14
  6850  000E6C  0012               	return		;funcret
  6851  000E6E                     __end_ofi2_mssp1_clearIRQ:
  6852                           	opt stack 0
  6853                           tosu	equ	0xFFF
  6854                           tosh	equ	0xFFE
  6855                           tosl	equ	0xFFD
  6856                           pclatu	equ	0xFFB
  6857                           pclath	equ	0xFFA
  6858                           tblptru	equ	0xFF8
  6859                           tblptrh	equ	0xFF7
  6860                           tblptrl	equ	0xFF6
  6861                           tablat	equ	0xFF5
  6862                           prodh	equ	0xFF4
  6863                           prodl	equ	0xFF3
  6864                           intcon	equ	0xFF2
  6865                           postinc0	equ	0xFEE
  6866                           fsr0h	equ	0xFEA
  6867                           fsr0l	equ	0xFE9
  6868                           wreg	equ	0xFE8
  6869                           postdec1	equ	0xFE5
  6870                           fsr1h	equ	0xFE2
  6871                           fsr1l	equ	0xFE1
  6872                           indf2	equ	0xFDF
  6873                           postinc2	equ	0xFDE
  6874                           postdec2	equ	0xFDD
  6875                           fsr2h	equ	0xFDA
  6876                           fsr2l	equ	0xFD9
  6877                           status	equ	0xFD8
  6878                           
  6879 ;; *************** function i2_do_I2C_RX *****************
  6880 ;; Defined at:
  6881 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;		None
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;		None
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  1    wreg      enum E11956
  6888 ;; Registers used:
  6889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6899 ;;Total ram usage:        0 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    3
  6902 ;; This function calls:
  6903 ;;		Absolute function
  6904 ;;		i2_do_I2C_DO_NACK_RESTART
  6905 ;;		i2_do_I2C_DO_NACK_STOP
  6906 ;;		i2_i2c1_driver_getRXData
  6907 ;;		i2_i2c1_driver_sendACK
  6908 ;;		i2_i2c_restartWrite
  6909 ;;		i2_rd1RegCompleteHandler
  6910 ;;		i2_rd2RegCompleteHandler
  6911 ;;		i2_rdBlkRegCompleteHandler
  6912 ;;		i2_returnReset
  6913 ;;		i2_returnStop
  6914 ;;		i2_wr1RegCompleteHandler
  6915 ;;		i2_wr2RegCompleteHandler
  6916 ;; This function is called by:
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text68
  6921  000580                     __ptext68:
  6922                           	opt stack 0
  6923  000580                     i2_do_I2C_RX:
  6924                           	opt stack 16
  6925                           
  6926                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  6927                           
  6928                           ; BSR set to: 14
  6929                           ;incstack = 0
  6930  000580  EC52  F007         	call	i2_i2c1_driver_getRXData	;wreg free
  6931  000584  C003  FFD9         	movff	_i2c_status+2,fsr2l
  6932  000588  C004  FFDA         	movff	_i2c_status+3,fsr2h
  6933  00058C  6EDF               	movwf	indf2,c
  6934  00058E  4A03               	infsnz	_i2c_status+2,f,c
  6935  000590  2A04               	incf	_i2c_status+3,f,c
  6936                           
  6937                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  6938  000592  0605               	decf	_i2c_status+4,f,c
  6939  000594  A0D8               	btfss	status,0,c
  6940  000596  0606               	decf	_i2c_status+5,f,c
  6941  000598  5005               	movf	_i2c_status+4,w,c
  6942  00059A  1006               	iorwf	_i2c_status+5,w,c
  6943  00059C  B4D8               	btfsc	status,2,c
  6944  00059E  D004               	goto	i2l451
  6945                           
  6946                           ;i2c_master.c: 361: {
  6947                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  6948  0005A0  EC3D  F007         	call	i2_i2c1_driver_sendACK	;wreg free
  6949                           
  6950                           ;i2c_master.c: 363: return I2C_RCEN;
  6951  0005A4  0E05               	movlw	5
  6952                           
  6953                           ;i2c_master.c: 364: }
  6954  0005A6  0012               	return	
  6955  0005A8                     i2l451:
  6956                           
  6957                           ;i2c_master.c: 365: else
  6958                           ;i2c_master.c: 366: {
  6959                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  6960  0005A8  8401               	bsf	_i2c_status,2,c
  6961                           
  6962                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  6963  0005AA  D006               	goto	i2l454
  6964  0005AC                     
  6965                           ;i2c_master.c: 371: case i2c_restart_read:
  6966                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  6967  0005AC  EC05  F007         	call	i2_do_I2C_DO_NACK_RESTART	;wreg free
  6968  0005B0  0012               	return	
  6969  0005B2                     
  6970                           ;i2c_master.c: 375: case i2c_stop:
  6971                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  6972                           
  6973                           ;i2c_master.c: 374: case i2c_continue:
  6974  0005B2  EC09  F007         	call	i2_do_I2C_DO_NACK_STOP	;wreg free
  6975                           
  6976                           ;i2c_master.c: 377: }
  6977  0005B6  0012               	return	
  6978  0005B8                     i2l454:
  6979  0005B8  C01F  F039         	movff	_i2c_status+30,i2returnStop@p
  6980  0005BC  C020  F03A         	movff	_i2c_status+31,i2returnStop@p+1
  6981  0005C0  EE20  F00D         	lfsr	2,_i2c_status+12
  6982  0005C4  D801               	call	i2u163_48
  6983  0005C6  D00A               	goto	i2u163_49
  6984  0005C8                     i2u163_48:
  6985  0005C8  0005               	push	
  6986  0005CA  6EFA               	movwf	pclath,c
  6987  0005CC  50DE               	movf	postinc2,w,c
  6988  0005CE  6EFD               	movwf	tosl,c
  6989  0005D0  50DE               	movf	postinc2,w,c
  6990  0005D2  6EFE               	movwf	tosh,c
  6991  0005D4  50DE               	movf	postinc2,w,c
  6992  0005D6  6EFF               	movwf	tosu,c
  6993  0005D8  50FA               	movf	pclath,w,c
  6994  0005DA  0012               	return		;indir
  6995  0005DC                     i2u163_49:
  6996                           
  6997                           ; Switch size 1, requested type "space"
  6998                           ; Number of cases is 4, Range of values is 1 to 4
  6999                           ; switch strategies available:
  7000                           ; Name         Instructions Cycles
  7001                           ; simple_byte           13     7 (average)
  7002                           ;	Chosen strategy is simple_byte
  7003  0005DC  0A01               	xorlw	1	; case 1
  7004  0005DE  B4D8               	btfsc	status,2,c
  7005  0005E0  D7E8               	goto	i2l457
  7006  0005E2  0A03               	xorlw	3	; case 2
  7007  0005E4  B4D8               	btfsc	status,2,c
  7008  0005E6  D7E2               	goto	i2l455
  7009  0005E8  0A01               	xorlw	1	; case 3
  7010  0005EA  B4D8               	btfsc	status,2,c
  7011  0005EC  D7DF               	goto	i2l455
  7012  0005EE  0A07               	xorlw	7	; case 4
  7013  0005F0  D7E0               	goto	i2l457
  7014  0005F2                     __end_ofi2_do_I2C_RX:
  7015                           	opt stack 0
  7016                           tosu	equ	0xFFF
  7017                           tosh	equ	0xFFE
  7018                           tosl	equ	0xFFD
  7019                           pclatu	equ	0xFFB
  7020                           pclath	equ	0xFFA
  7021                           tblptru	equ	0xFF8
  7022                           tblptrh	equ	0xFF7
  7023                           tblptrl	equ	0xFF6
  7024                           tablat	equ	0xFF5
  7025                           prodh	equ	0xFF4
  7026                           prodl	equ	0xFF3
  7027                           intcon	equ	0xFF2
  7028                           postinc0	equ	0xFEE
  7029                           fsr0h	equ	0xFEA
  7030                           fsr0l	equ	0xFE9
  7031                           wreg	equ	0xFE8
  7032                           postdec1	equ	0xFE5
  7033                           fsr1h	equ	0xFE2
  7034                           fsr1l	equ	0xFE1
  7035                           indf2	equ	0xFDF
  7036                           postinc2	equ	0xFDE
  7037                           postdec2	equ	0xFDD
  7038                           fsr2h	equ	0xFDA
  7039                           fsr2l	equ	0xFD9
  7040                           status	equ	0xFD8
  7041                           
  7042 ;; *************** function i2_do_I2C_TX *****************
  7043 ;; Defined at:
  7044 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;		None
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  1    wreg      enum E11956
  7051 ;; Registers used:
  7052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7062 ;;Total ram usage:        2 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; Hardware stack levels required when called:    3
  7065 ;; This function calls:
  7066 ;;		Absolute function
  7067 ;;		i2_do_I2C_SEND_RESTART_READ
  7068 ;;		i2_do_I2C_SEND_RESTART_WRITE
  7069 ;;		i2_do_I2C_SEND_STOP
  7070 ;;		i2_i2c1_driver_TXData
  7071 ;;		i2_i2c1_driver_isNACK
  7072 ;;		i2_i2c_restartWrite
  7073 ;;		i2_rd1RegCompleteHandler
  7074 ;;		i2_rd2RegCompleteHandler
  7075 ;;		i2_rdBlkRegCompleteHandler
  7076 ;;		i2_returnReset
  7077 ;;		i2_returnStop
  7078 ;;		i2_wr1RegCompleteHandler
  7079 ;;		i2_wr2RegCompleteHandler
  7080 ;; This function is called by:
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text69
  7085  00038C                     __ptext69:
  7086                           	opt stack 0
  7087  00038C                     i2_do_I2C_TX:
  7088                           	opt stack 16
  7089                           
  7090                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  7091                           
  7092                           ;incstack = 0
  7093  00038C  EC33  F006         	call	i2_i2c1_driver_isNACK	;wreg free
  7094  000390  B0D8               	btfsc	status,0,c
  7095  000392  D00A               	goto	i2l436
  7096  000394  D026               	goto	i2l435
  7097  000396                     
  7098                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  7099  000396  EC1D  F007         	call	i2_do_I2C_SEND_RESTART_READ	;wreg free
  7100  00039A  0012               	return	
  7101  00039C                     
  7102                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  7103  00039C  EC19  F007         	call	i2_do_I2C_SEND_RESTART_WRITE	;wreg free
  7104  0003A0  0012               	return	
  7105  0003A2                     
  7106                           ;i2c_master.c: 345: case i2c_stop:
  7107                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  7108                           
  7109                           ;i2c_master.c: 344: case i2c_continue:
  7110  0003A2  EC11  F007         	call	i2_do_I2C_SEND_STOP	;wreg free
  7111                           
  7112                           ;i2c_master.c: 347: }
  7113  0003A6  0012               	return	
  7114  0003A8                     i2l436:
  7115  0003A8  C025  F039         	movff	_i2c_status+36,i2returnStop@p
  7116  0003AC  C026  F03A         	movff	_i2c_status+37,i2returnStop@p+1
  7117  0003B0  EE20  F016         	lfsr	2,_i2c_status+21
  7118  0003B4  D801               	call	i2u160_48
  7119  0003B6  D00A               	goto	i2u160_49
  7120  0003B8                     i2u160_48:
  7121  0003B8  0005               	push	
  7122  0003BA  6EFA               	movwf	pclath,c
  7123  0003BC  50DE               	movf	postinc2,w,c
  7124  0003BE  6EFD               	movwf	tosl,c
  7125  0003C0  50DE               	movf	postinc2,w,c
  7126  0003C2  6EFE               	movwf	tosh,c
  7127  0003C4  50DE               	movf	postinc2,w,c
  7128  0003C6  6EFF               	movwf	tosu,c
  7129  0003C8  50FA               	movf	pclath,w,c
  7130  0003CA  0012               	return		;indir
  7131  0003CC                     i2u160_49:
  7132                           
  7133                           ; Switch size 1, requested type "space"
  7134                           ; Number of cases is 4, Range of values is 1 to 4
  7135                           ; switch strategies available:
  7136                           ; Name         Instructions Cycles
  7137                           ; simple_byte           13     7 (average)
  7138                           ;	Chosen strategy is simple_byte
  7139  0003CC  0A01               	xorlw	1	; case 1
  7140  0003CE  B4D8               	btfsc	status,2,c
  7141  0003D0  D7E8               	goto	i2l440
  7142  0003D2  0A03               	xorlw	3	; case 2
  7143  0003D4  B4D8               	btfsc	status,2,c
  7144  0003D6  D7DF               	goto	i2l437
  7145  0003D8  0A01               	xorlw	1	; case 3
  7146  0003DA  B4D8               	btfsc	status,2,c
  7147  0003DC  D7DF               	goto	i2l439
  7148  0003DE  0A07               	xorlw	7	; case 4
  7149  0003E0  D7E0               	goto	i2l440
  7150  0003E2                     i2l435:
  7151                           
  7152                           ;i2c_master.c: 349: else
  7153                           ;i2c_master.c: 350: {
  7154                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  7155  0003E2  9601               	bcf	_i2c_status,3,c
  7156                           
  7157                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  7158  0003E4  C003  FFD9         	movff	_i2c_status+2,fsr2l
  7159  0003E8  C004  FFDA         	movff	_i2c_status+3,fsr2h
  7160  0003EC  4A03               	infsnz	_i2c_status+2,f,c
  7161  0003EE  2A04               	incf	_i2c_status+3,f,c
  7162  0003F0  50DF               	movf	indf2,w,c
  7163  0003F2  EC21  F007         	call	i2_i2c1_driver_TXData
  7164                           
  7165                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  7166  0003F6  0605               	decf	_i2c_status+4,f,c
  7167  0003F8  A0D8               	btfss	status,0,c
  7168  0003FA  0606               	decf	_i2c_status+5,f,c
  7169  0003FC  5005               	movf	_i2c_status+4,w,c
  7170  0003FE  1006               	iorwf	_i2c_status+5,w,c
  7171  000400  A4D8               	btfss	status,2,c
  7172  000402  D004               	goto	i2l446
  7173  000404  0E00               	movlw	0
  7174  000406  6E30               	movwf	i2_do_I2C_TX$1036+1,c
  7175  000408  0E06               	movlw	6
  7176  00040A  D003               	goto	L4
  7177  00040C                     i2l446:
  7178  00040C  0E00               	movlw	0
  7179  00040E  6E30               	movwf	i2_do_I2C_TX$1036+1,c
  7180  000410  0E03               	movlw	3
  7181  000412                     L4:
  7182  000412  6E2F               	movwf	i2_do_I2C_TX$1036,c
  7183  000414  502F               	movf	i2_do_I2C_TX$1036,w,c
  7184  000416  0012               	return	
  7185  000418                     __end_ofi2_do_I2C_TX:
  7186                           	opt stack 0
  7187                           tosu	equ	0xFFF
  7188                           tosh	equ	0xFFE
  7189                           tosl	equ	0xFFD
  7190                           pclatu	equ	0xFFB
  7191                           pclath	equ	0xFFA
  7192                           tblptru	equ	0xFF8
  7193                           tblptrh	equ	0xFF7
  7194                           tblptrl	equ	0xFF6
  7195                           tablat	equ	0xFF5
  7196                           prodh	equ	0xFF4
  7197                           prodl	equ	0xFF3
  7198                           intcon	equ	0xFF2
  7199                           postinc0	equ	0xFEE
  7200                           fsr0h	equ	0xFEA
  7201                           fsr0l	equ	0xFE9
  7202                           wreg	equ	0xFE8
  7203                           postdec1	equ	0xFE5
  7204                           fsr1h	equ	0xFE2
  7205                           fsr1l	equ	0xFE1
  7206                           indf2	equ	0xFDF
  7207                           postinc2	equ	0xFDE
  7208                           postdec2	equ	0xFDD
  7209                           fsr2h	equ	0xFDA
  7210                           fsr2l	equ	0xFD9
  7211                           status	equ	0xFD8
  7212                           
  7213 ;; *************** function i2_do_I2C_DO_ADDRESS_NACK *****************
  7214 ;; Defined at:
  7215 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;		None
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  1    wreg      enum E11956
  7222 ;; Registers used:
  7223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7233 ;;Total ram usage:        0 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    3
  7236 ;; This function calls:
  7237 ;;		Absolute function
  7238 ;;		i2_do_I2C_SEND_RESTART
  7239 ;;		i2_do_I2C_SEND_STOP
  7240 ;;		i2_i2c_restartWrite
  7241 ;;		i2_rd1RegCompleteHandler
  7242 ;;		i2_rd2RegCompleteHandler
  7243 ;;		i2_rdBlkRegCompleteHandler
  7244 ;;		i2_returnReset
  7245 ;;		i2_returnStop
  7246 ;;		i2_wr1RegCompleteHandler
  7247 ;;		i2_wr2RegCompleteHandler
  7248 ;; This function is called by:
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text70
  7253  0007D0                     __ptext70:
  7254                           	opt stack 0
  7255  0007D0                     i2_do_I2C_DO_ADDRESS_NACK:
  7256                           	opt stack 16
  7257                           
  7258                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  7259                           
  7260                           ;incstack = 0
  7261  0007D0  9601               	bcf	_i2c_status,3,c
  7262                           
  7263                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  7264  0007D2  0E02               	movlw	2
  7265  0007D4  6E0C               	movwf	_i2c_status+11,c
  7266                           
  7267                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  7268  0007D6  D006               	goto	i2l427
  7269  0007D8                     
  7270                           ;i2c_master.c: 326: case i2c_restart_write:
  7271                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  7272  0007D8  EC15  F007         	call	i2_do_I2C_SEND_RESTART	;wreg free
  7273  0007DC  0012               	return	
  7274  0007DE                     
  7275                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  7276  0007DE  EC11  F007         	call	i2_do_I2C_SEND_STOP	;wreg free
  7277                           
  7278                           ;i2c_master.c: 330: }
  7279  0007E2  0012               	return	
  7280  0007E4                     i2l427:
  7281  0007E4  C023  F039         	movff	_i2c_status+34,i2returnStop@p
  7282  0007E8  C024  F03A         	movff	_i2c_status+35,i2returnStop@p+1
  7283  0007EC  EE20  F013         	lfsr	2,_i2c_status+18
  7284  0007F0  D801               	call	i2u158_48
  7285  0007F2  D00A               	goto	i2u158_49
  7286  0007F4                     i2u158_48:
  7287  0007F4  0005               	push	
  7288  0007F6  6EFA               	movwf	pclath,c
  7289  0007F8  50DE               	movf	postinc2,w,c
  7290  0007FA  6EFD               	movwf	tosl,c
  7291  0007FC  50DE               	movf	postinc2,w,c
  7292  0007FE  6EFE               	movwf	tosh,c
  7293  000800  50DE               	movf	postinc2,w,c
  7294  000802  6EFF               	movwf	tosu,c
  7295  000804  50FA               	movf	pclath,w,c
  7296  000806  0012               	return		;indir
  7297  000808                     i2u158_49:
  7298                           
  7299                           ; Switch size 1, requested type "space"
  7300                           ; Number of cases is 2, Range of values is 2 to 3
  7301                           ; switch strategies available:
  7302                           ; Name         Instructions Cycles
  7303                           ; simple_byte            7     4 (average)
  7304                           ;	Chosen strategy is simple_byte
  7305  000808  0A02               	xorlw	2	; case 2
  7306  00080A  B4D8               	btfsc	status,2,c
  7307  00080C  D7E5               	goto	i2l428
  7308  00080E  0A01               	xorlw	1	; case 3
  7309  000810  B4D8               	btfsc	status,2,c
  7310  000812  D7E2               	goto	i2l428
  7311  000814  D7E4               	goto	i2l431
  7312  000816                     __end_ofi2_do_I2C_DO_ADDRESS_NACK:
  7313                           	opt stack 0
  7314                           tosu	equ	0xFFF
  7315                           tosh	equ	0xFFE
  7316                           tosl	equ	0xFFD
  7317                           pclatu	equ	0xFFB
  7318                           pclath	equ	0xFFA
  7319                           tblptru	equ	0xFF8
  7320                           tblptrh	equ	0xFF7
  7321                           tblptrl	equ	0xFF6
  7322                           tablat	equ	0xFF5
  7323                           prodh	equ	0xFF4
  7324                           prodl	equ	0xFF3
  7325                           intcon	equ	0xFF2
  7326                           postinc0	equ	0xFEE
  7327                           fsr0h	equ	0xFEA
  7328                           fsr0l	equ	0xFE9
  7329                           wreg	equ	0xFE8
  7330                           postdec1	equ	0xFE5
  7331                           fsr1h	equ	0xFE2
  7332                           fsr1l	equ	0xFE1
  7333                           indf2	equ	0xFDF
  7334                           postinc2	equ	0xFDE
  7335                           postdec2	equ	0xFDD
  7336                           fsr2h	equ	0xFDA
  7337                           fsr2l	equ	0xFD9
  7338                           status	equ	0xFD8
  7339                           
  7340 ;; *************** function i2_do_I2C_DO_NACK_RESTART *****************
  7341 ;; Defined at:
  7342 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;		None
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      enum E11956
  7349 ;; Registers used:
  7350 ;;		wreg, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;Total ram usage:        0 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    1
  7363 ;; This function calls:
  7364 ;;		i2_i2c1_driver_sendNACK
  7365 ;; This function is called by:
  7366 ;;		i2_do_I2C_RX
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text71
  7371  000E0A                     __ptext71:
  7372                           	opt stack 0
  7373  000E0A                     i2_do_I2C_DO_NACK_RESTART:
  7374                           	opt stack 17
  7375                           
  7376                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  7377                           
  7378                           ;incstack = 0
  7379  000E0A  EC3A  F007         	call	i2_i2c1_driver_sendNACK	;wreg free
  7380                           
  7381                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  7382  000E0E  0E09               	movlw	9
  7383  000E10  0012               	return	
  7384  000E12                     __end_ofi2_do_I2C_DO_NACK_RESTART:
  7385                           	opt stack 0
  7386                           tosu	equ	0xFFF
  7387                           tosh	equ	0xFFE
  7388                           tosl	equ	0xFFD
  7389                           pclatu	equ	0xFFB
  7390                           pclath	equ	0xFFA
  7391                           tblptru	equ	0xFF8
  7392                           tblptrh	equ	0xFF7
  7393                           tblptrl	equ	0xFF6
  7394                           tablat	equ	0xFF5
  7395                           prodh	equ	0xFF4
  7396                           prodl	equ	0xFF3
  7397                           intcon	equ	0xFF2
  7398                           postinc0	equ	0xFEE
  7399                           fsr0h	equ	0xFEA
  7400                           fsr0l	equ	0xFE9
  7401                           wreg	equ	0xFE8
  7402                           postdec1	equ	0xFE5
  7403                           fsr1h	equ	0xFE2
  7404                           fsr1l	equ	0xFE1
  7405                           indf2	equ	0xFDF
  7406                           postinc2	equ	0xFDE
  7407                           postdec2	equ	0xFDD
  7408                           fsr2h	equ	0xFDA
  7409                           fsr2l	equ	0xFD9
  7410                           status	equ	0xFD8
  7411                           
  7412 ;; *************** function i2_do_I2C_DO_NACK_STOP *****************
  7413 ;; Defined at:
  7414 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      enum E11956
  7421 ;; Registers used:
  7422 ;;		wreg, cstack
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7432 ;;Total ram usage:        0 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    1
  7435 ;; This function calls:
  7436 ;;		i2_i2c1_driver_sendNACK
  7437 ;; This function is called by:
  7438 ;;		i2_do_I2C_RX
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text72
  7443  000E12                     __ptext72:
  7444                           	opt stack 0
  7445  000E12                     i2_do_I2C_DO_NACK_STOP:
  7446                           	opt stack 17
  7447                           
  7448                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  7449                           
  7450                           ;incstack = 0
  7451  000E12  EC3A  F007         	call	i2_i2c1_driver_sendNACK	;wreg free
  7452                           
  7453                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  7454  000E16  0E0A               	movlw	10
  7455  000E18  0012               	return	
  7456  000E1A                     __end_ofi2_do_I2C_DO_NACK_STOP:
  7457                           	opt stack 0
  7458                           tosu	equ	0xFFF
  7459                           tosh	equ	0xFFE
  7460                           tosl	equ	0xFFD
  7461                           pclatu	equ	0xFFB
  7462                           pclath	equ	0xFFA
  7463                           tblptru	equ	0xFF8
  7464                           tblptrh	equ	0xFF7
  7465                           tblptrl	equ	0xFF6
  7466                           tablat	equ	0xFF5
  7467                           prodh	equ	0xFF4
  7468                           prodl	equ	0xFF3
  7469                           intcon	equ	0xFF2
  7470                           postinc0	equ	0xFEE
  7471                           fsr0h	equ	0xFEA
  7472                           fsr0l	equ	0xFE9
  7473                           wreg	equ	0xFE8
  7474                           postdec1	equ	0xFE5
  7475                           fsr1h	equ	0xFE2
  7476                           fsr1l	equ	0xFE1
  7477                           indf2	equ	0xFDF
  7478                           postinc2	equ	0xFDE
  7479                           postdec2	equ	0xFDD
  7480                           fsr2h	equ	0xFDA
  7481                           fsr2l	equ	0xFD9
  7482                           status	equ	0xFD8
  7483                           
  7484 ;; *************** function i2_do_I2C_DO_ACK *****************
  7485 ;; Defined at:
  7486 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;		None
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      enum E11956
  7493 ;; Registers used:
  7494 ;;		wreg, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;Total ram usage:        0 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    1
  7507 ;; This function calls:
  7508 ;;		i2_i2c1_driver_sendACK
  7509 ;; This function is called by:
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text73
  7514  000E1A                     __ptext73:
  7515                           	opt stack 0
  7516  000E1A                     i2_do_I2C_DO_ACK:
  7517                           	opt stack 18
  7518                           
  7519                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  7520                           
  7521                           ;incstack = 0
  7522  000E1A  EC3D  F007         	call	i2_i2c1_driver_sendACK	;wreg free
  7523                           
  7524                           ;i2c_master.c: 302: return I2C_RCEN;
  7525  000E1E  0E05               	movlw	5
  7526  000E20  0012               	return	
  7527  000E22                     __end_ofi2_do_I2C_DO_ACK:
  7528                           	opt stack 0
  7529                           tosu	equ	0xFFF
  7530                           tosh	equ	0xFFE
  7531                           tosl	equ	0xFFD
  7532                           pclatu	equ	0xFFB
  7533                           pclath	equ	0xFFA
  7534                           tblptru	equ	0xFF8
  7535                           tblptrh	equ	0xFF7
  7536                           tblptrl	equ	0xFF6
  7537                           tablat	equ	0xFF5
  7538                           prodh	equ	0xFF4
  7539                           prodl	equ	0xFF3
  7540                           intcon	equ	0xFF2
  7541                           postinc0	equ	0xFEE
  7542                           fsr0h	equ	0xFEA
  7543                           fsr0l	equ	0xFE9
  7544                           wreg	equ	0xFE8
  7545                           postdec1	equ	0xFE5
  7546                           fsr1h	equ	0xFE2
  7547                           fsr1l	equ	0xFE1
  7548                           indf2	equ	0xFDF
  7549                           postinc2	equ	0xFDE
  7550                           postdec2	equ	0xFDD
  7551                           fsr2h	equ	0xFDA
  7552                           fsr2l	equ	0xFD9
  7553                           status	equ	0xFD8
  7554                           
  7555 ;; *************** function i2_do_I2C_RCEN *****************
  7556 ;; Defined at:
  7557 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;		None
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      enum E11956
  7564 ;; Registers used:
  7565 ;;		wreg, cstack
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7575 ;;Total ram usage:        0 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; Hardware stack levels required when called:    1
  7578 ;; This function calls:
  7579 ;;		i2_i2c1_driver_startRX
  7580 ;; This function is called by:
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text74
  7585  000DDE                     __ptext74:
  7586                           	opt stack 0
  7587  000DDE                     i2_do_I2C_RCEN:
  7588                           	opt stack 18
  7589                           
  7590                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  7591                           
  7592                           ;incstack = 0
  7593  000DDE  9601               	bcf	_i2c_status,3,c
  7594                           
  7595                           ;i2c_master.c: 295: i2c1_driver_startRX();
  7596  000DE0  EC54  F007         	call	i2_i2c1_driver_startRX	;wreg free
  7597                           
  7598                           ;i2c_master.c: 296: return I2C_RX;
  7599  000DE4  0E04               	movlw	4
  7600  000DE6  0012               	return	
  7601  000DE8                     __end_ofi2_do_I2C_RCEN:
  7602                           	opt stack 0
  7603                           tosu	equ	0xFFF
  7604                           tosh	equ	0xFFE
  7605                           tosl	equ	0xFFD
  7606                           pclatu	equ	0xFFB
  7607                           pclath	equ	0xFFA
  7608                           tblptru	equ	0xFF8
  7609                           tblptrh	equ	0xFF7
  7610                           tblptrl	equ	0xFF6
  7611                           tablat	equ	0xFF5
  7612                           prodh	equ	0xFF4
  7613                           prodl	equ	0xFF3
  7614                           intcon	equ	0xFF2
  7615                           postinc0	equ	0xFEE
  7616                           fsr0h	equ	0xFEA
  7617                           fsr0l	equ	0xFE9
  7618                           wreg	equ	0xFE8
  7619                           postdec1	equ	0xFE5
  7620                           fsr1h	equ	0xFE2
  7621                           fsr1l	equ	0xFE1
  7622                           indf2	equ	0xFDF
  7623                           postinc2	equ	0xFDE
  7624                           postdec2	equ	0xFDD
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function i2_do_I2C_SEND_ADR_WRITE *****************
  7630 ;; Defined at:
  7631 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      enum E11956
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    1
  7652 ;; This function calls:
  7653 ;;		i2_i2c1_driver_TXData
  7654 ;; This function is called by:
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text75
  7659  000D96                     __ptext75:
  7660                           	opt stack 0
  7661  000D96                     i2_do_I2C_SEND_ADR_WRITE:
  7662                           	opt stack 18
  7663                           
  7664                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  7665                           
  7666                           ;incstack = 0
  7667  000D96  8601               	bsf	_i2c_status,3,c
  7668                           
  7669                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  7670  000D98  5002               	movf	_i2c_status+1,w,c
  7671  000D9A  2402               	addwf	_i2c_status+1,w,c
  7672  000D9C  EC21  F007         	call	i2_i2c1_driver_TXData
  7673                           
  7674                           ;i2c_master.c: 289: return I2C_TX;
  7675  000DA0  0E03               	movlw	3
  7676  000DA2  0012               	return	
  7677  000DA4                     __end_ofi2_do_I2C_SEND_ADR_WRITE:
  7678                           	opt stack 0
  7679                           tosu	equ	0xFFF
  7680                           tosh	equ	0xFFE
  7681                           tosl	equ	0xFFD
  7682                           pclatu	equ	0xFFB
  7683                           pclath	equ	0xFFA
  7684                           tblptru	equ	0xFF8
  7685                           tblptrh	equ	0xFF7
  7686                           tblptrl	equ	0xFF6
  7687                           tablat	equ	0xFF5
  7688                           prodh	equ	0xFF4
  7689                           prodl	equ	0xFF3
  7690                           intcon	equ	0xFF2
  7691                           postinc0	equ	0xFEE
  7692                           fsr0h	equ	0xFEA
  7693                           fsr0l	equ	0xFE9
  7694                           wreg	equ	0xFE8
  7695                           postdec1	equ	0xFE5
  7696                           fsr1h	equ	0xFE2
  7697                           fsr1l	equ	0xFE1
  7698                           indf2	equ	0xFDF
  7699                           postinc2	equ	0xFDE
  7700                           postdec2	equ	0xFDD
  7701                           fsr2h	equ	0xFDA
  7702                           fsr2l	equ	0xFD9
  7703                           status	equ	0xFD8
  7704                           
  7705 ;; *************** function i2_do_I2C_SEND_ADR_READ *****************
  7706 ;; Defined at:
  7707 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;		None
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;		None
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  1    wreg      enum E11956
  7714 ;; Registers used:
  7715 ;;		wreg, status,0, cstack
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7725 ;;Total ram usage:        0 bytes
  7726 ;; Hardware stack levels used:    1
  7727 ;; Hardware stack levels required when called:    1
  7728 ;; This function calls:
  7729 ;;		i2_i2c1_driver_TXData
  7730 ;; This function is called by:
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text76
  7735  000DA4                     __ptext76:
  7736                           	opt stack 0
  7737  000DA4                     i2_do_I2C_SEND_ADR_READ:
  7738                           	opt stack 18
  7739                           
  7740                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  7741                           
  7742                           ;incstack = 0
  7743  000DA4  8601               	bsf	_i2c_status,3,c
  7744                           
  7745                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  7746  000DA6  80D8               	bsf	status,0,c
  7747  000DA8  3402               	rlcf	_i2c_status+1,w,c
  7748  000DAA  EC21  F007         	call	i2_i2c1_driver_TXData
  7749                           
  7750                           ;i2c_master.c: 282: return I2C_RCEN;
  7751  000DAE  0E05               	movlw	5
  7752  000DB0  0012               	return	
  7753  000DB2                     __end_ofi2_do_I2C_SEND_ADR_READ:
  7754                           	opt stack 0
  7755                           tosu	equ	0xFFF
  7756                           tosh	equ	0xFFE
  7757                           tosl	equ	0xFFD
  7758                           pclatu	equ	0xFFB
  7759                           pclath	equ	0xFFA
  7760                           tblptru	equ	0xFF8
  7761                           tblptrh	equ	0xFF7
  7762                           tblptrl	equ	0xFF6
  7763                           tablat	equ	0xFF5
  7764                           prodh	equ	0xFF4
  7765                           prodl	equ	0xFF3
  7766                           intcon	equ	0xFF2
  7767                           postinc0	equ	0xFEE
  7768                           fsr0h	equ	0xFEA
  7769                           fsr0l	equ	0xFE9
  7770                           wreg	equ	0xFE8
  7771                           postdec1	equ	0xFE5
  7772                           fsr1h	equ	0xFE2
  7773                           fsr1l	equ	0xFE1
  7774                           indf2	equ	0xFDF
  7775                           postinc2	equ	0xFDE
  7776                           postdec2	equ	0xFDD
  7777                           fsr2h	equ	0xFDA
  7778                           fsr2l	equ	0xFD9
  7779                           status	equ	0xFD8
  7780                           
  7781 ;; *************** function i2_do_I2C_SEND_STOP *****************
  7782 ;; Defined at:
  7783 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;		None
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1    wreg      enum E11956
  7790 ;; Registers used:
  7791 ;;		wreg, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7801 ;;Total ram usage:        0 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    1
  7804 ;; This function calls:
  7805 ;;		i2_i2c1_driver_stop
  7806 ;; This function is called by:
  7807 ;;		i2_do_I2C_DO_ADDRESS_NACK
  7808 ;;		i2_do_I2C_TX
  7809 ;;		i2_do_I2C_TX_EMPTY
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text77
  7814  000E22                     __ptext77:
  7815                           	opt stack 0
  7816  000E22                     i2_do_I2C_SEND_STOP:
  7817                           	opt stack 17
  7818                           
  7819                           ;i2c_master.c: 274: i2c1_driver_stop();
  7820                           
  7821                           ;incstack = 0
  7822  000E22  EC5C  F007         	call	i2_i2c1_driver_stop	;wreg free
  7823                           
  7824                           ;i2c_master.c: 275: return I2C_IDLE;
  7825  000E26  0E00               	movlw	0
  7826  000E28  0012               	return	
  7827  000E2A                     __end_ofi2_do_I2C_SEND_STOP:
  7828                           	opt stack 0
  7829                           tosu	equ	0xFFF
  7830                           tosh	equ	0xFFE
  7831                           tosl	equ	0xFFD
  7832                           pclatu	equ	0xFFB
  7833                           pclath	equ	0xFFA
  7834                           tblptru	equ	0xFF8
  7835                           tblptrh	equ	0xFF7
  7836                           tblptrl	equ	0xFF6
  7837                           tablat	equ	0xFF5
  7838                           prodh	equ	0xFF4
  7839                           prodl	equ	0xFF3
  7840                           intcon	equ	0xFF2
  7841                           postinc0	equ	0xFEE
  7842                           fsr0h	equ	0xFEA
  7843                           fsr0l	equ	0xFE9
  7844                           wreg	equ	0xFE8
  7845                           postdec1	equ	0xFE5
  7846                           fsr1h	equ	0xFE2
  7847                           fsr1l	equ	0xFE1
  7848                           indf2	equ	0xFDF
  7849                           postinc2	equ	0xFDE
  7850                           postdec2	equ	0xFDD
  7851                           fsr2h	equ	0xFDA
  7852                           fsr2l	equ	0xFD9
  7853                           status	equ	0xFD8
  7854                           
  7855 ;; *************** function i2_do_I2C_SEND_RESTART *****************
  7856 ;; Defined at:
  7857 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;		None
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      enum E11956
  7864 ;; Registers used:
  7865 ;;		wreg, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;Total ram usage:        0 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    1
  7878 ;; This function calls:
  7879 ;;		i2_i2c1_driver_restart
  7880 ;; This function is called by:
  7881 ;;		i2_do_I2C_DO_ADDRESS_NACK
  7882 ;;		i2_do_I2C_TX_EMPTY
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text78
  7887  000E2A                     __ptext78:
  7888                           	opt stack 0
  7889  000E2A                     i2_do_I2C_SEND_RESTART:
  7890                           	opt stack 17
  7891                           
  7892                           ;i2c_master.c: 268: i2c1_driver_restart();
  7893                           
  7894                           ;incstack = 0
  7895  000E2A  EC5E  F007         	call	i2_i2c1_driver_restart	;wreg free
  7896                           
  7897                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  7898  000E2E  0E01               	movlw	1
  7899  000E30  0012               	return	
  7900  000E32                     __end_ofi2_do_I2C_SEND_RESTART:
  7901                           	opt stack 0
  7902                           tosu	equ	0xFFF
  7903                           tosh	equ	0xFFE
  7904                           tosl	equ	0xFFD
  7905                           pclatu	equ	0xFFB
  7906                           pclath	equ	0xFFA
  7907                           tblptru	equ	0xFF8
  7908                           tblptrh	equ	0xFF7
  7909                           tblptrl	equ	0xFF6
  7910                           tablat	equ	0xFF5
  7911                           prodh	equ	0xFF4
  7912                           prodl	equ	0xFF3
  7913                           intcon	equ	0xFF2
  7914                           postinc0	equ	0xFEE
  7915                           fsr0h	equ	0xFEA
  7916                           fsr0l	equ	0xFE9
  7917                           wreg	equ	0xFE8
  7918                           postdec1	equ	0xFE5
  7919                           fsr1h	equ	0xFE2
  7920                           fsr1l	equ	0xFE1
  7921                           indf2	equ	0xFDF
  7922                           postinc2	equ	0xFDE
  7923                           postdec2	equ	0xFDD
  7924                           fsr2h	equ	0xFDA
  7925                           fsr2l	equ	0xFD9
  7926                           status	equ	0xFD8
  7927                           
  7928 ;; *************** function i2_do_I2C_SEND_RESTART_WRITE *****************
  7929 ;; Defined at:
  7930 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;		None
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      enum E11956
  7937 ;; Registers used:
  7938 ;;		wreg, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7948 ;;Total ram usage:        0 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    1
  7951 ;; This function calls:
  7952 ;;		i2_i2c1_driver_restart
  7953 ;; This function is called by:
  7954 ;;		i2_do_I2C_TX
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text79
  7959  000E32                     __ptext79:
  7960                           	opt stack 0
  7961  000E32                     i2_do_I2C_SEND_RESTART_WRITE:
  7962                           	opt stack 17
  7963                           
  7964                           ;i2c_master.c: 262: i2c1_driver_restart();
  7965                           
  7966                           ;incstack = 0
  7967  000E32  EC5E  F007         	call	i2_i2c1_driver_restart	;wreg free
  7968                           
  7969                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  7970  000E36  0E02               	movlw	2
  7971  000E38  0012               	return	
  7972  000E3A                     __end_ofi2_do_I2C_SEND_RESTART_WRITE:
  7973                           	opt stack 0
  7974                           tosu	equ	0xFFF
  7975                           tosh	equ	0xFFE
  7976                           tosl	equ	0xFFD
  7977                           pclatu	equ	0xFFB
  7978                           pclath	equ	0xFFA
  7979                           tblptru	equ	0xFF8
  7980                           tblptrh	equ	0xFF7
  7981                           tblptrl	equ	0xFF6
  7982                           tablat	equ	0xFF5
  7983                           prodh	equ	0xFF4
  7984                           prodl	equ	0xFF3
  7985                           intcon	equ	0xFF2
  7986                           postinc0	equ	0xFEE
  7987                           fsr0h	equ	0xFEA
  7988                           fsr0l	equ	0xFE9
  7989                           wreg	equ	0xFE8
  7990                           postdec1	equ	0xFE5
  7991                           fsr1h	equ	0xFE2
  7992                           fsr1l	equ	0xFE1
  7993                           indf2	equ	0xFDF
  7994                           postinc2	equ	0xFDE
  7995                           postdec2	equ	0xFDD
  7996                           fsr2h	equ	0xFDA
  7997                           fsr2l	equ	0xFD9
  7998                           status	equ	0xFD8
  7999                           
  8000 ;; *************** function i2_do_I2C_SEND_RESTART_READ *****************
  8001 ;; Defined at:
  8002 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;		None
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      enum E11956
  8009 ;; Registers used:
  8010 ;;		wreg, cstack
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8020 ;;Total ram usage:        0 bytes
  8021 ;; Hardware stack levels used:    1
  8022 ;; Hardware stack levels required when called:    1
  8023 ;; This function calls:
  8024 ;;		i2_i2c1_driver_restart
  8025 ;; This function is called by:
  8026 ;;		i2_do_I2C_TX
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text80
  8031  000E3A                     __ptext80:
  8032                           	opt stack 0
  8033  000E3A                     i2_do_I2C_SEND_RESTART_READ:
  8034                           	opt stack 17
  8035                           
  8036                           ;i2c_master.c: 256: i2c1_driver_restart();
  8037                           
  8038                           ;incstack = 0
  8039  000E3A  EC5E  F007         	call	i2_i2c1_driver_restart	;wreg free
  8040                           
  8041                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  8042  000E3E  0E01               	movlw	1
  8043  000E40  0012               	return	
  8044  000E42                     __end_ofi2_do_I2C_SEND_RESTART_READ:
  8045                           	opt stack 0
  8046                           tosu	equ	0xFFF
  8047                           tosh	equ	0xFFE
  8048                           tosl	equ	0xFFD
  8049                           pclatu	equ	0xFFB
  8050                           pclath	equ	0xFFA
  8051                           tblptru	equ	0xFF8
  8052                           tblptrh	equ	0xFF7
  8053                           tblptrl	equ	0xFF6
  8054                           tablat	equ	0xFF5
  8055                           prodh	equ	0xFF4
  8056                           prodl	equ	0xFF3
  8057                           intcon	equ	0xFF2
  8058                           postinc0	equ	0xFEE
  8059                           fsr0h	equ	0xFEA
  8060                           fsr0l	equ	0xFE9
  8061                           wreg	equ	0xFE8
  8062                           postdec1	equ	0xFE5
  8063                           fsr1h	equ	0xFE2
  8064                           fsr1l	equ	0xFE1
  8065                           indf2	equ	0xFDF
  8066                           postinc2	equ	0xFDE
  8067                           postdec2	equ	0xFDD
  8068                           fsr2h	equ	0xFDA
  8069                           fsr2l	equ	0xFD9
  8070                           status	equ	0xFD8
  8071                           
  8072 ;; *************** function i2_do_I2C_IDLE *****************
  8073 ;; Defined at:
  8074 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      enum E11956
  8081 ;; Registers used:
  8082 ;;		wreg, status,2
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; This function calls:
  8095 ;;		Nothing
  8096 ;; This function is called by:
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text81
  8101  000DE8                     __ptext81:
  8102                           	opt stack 0
  8103  000DE8                     i2_do_I2C_IDLE:
  8104                           	opt stack 19
  8105                           
  8106                           ;i2c_master.c: 249: i2c_status.busy = 0;
  8107                           
  8108                           ;incstack = 0
  8109  000DE8  9001               	bcf	_i2c_status,0,c
  8110                           
  8111                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  8112  000DEA  0E00               	movlw	0
  8113  000DEC  6E0C               	movwf	_i2c_status+11,c
  8114                           
  8115                           ;i2c_master.c: 251: return I2C_RESET;
  8116  000DEE  0E0E               	movlw	14
  8117  000DF0  0012               	return	
  8118  000DF2                     __end_ofi2_do_I2C_IDLE:
  8119                           	opt stack 0
  8120                           tosu	equ	0xFFF
  8121                           tosh	equ	0xFFE
  8122                           tosl	equ	0xFFD
  8123                           pclatu	equ	0xFFB
  8124                           pclath	equ	0xFFA
  8125                           tblptru	equ	0xFF8
  8126                           tblptrh	equ	0xFF7
  8127                           tblptrl	equ	0xFF6
  8128                           tablat	equ	0xFF5
  8129                           prodh	equ	0xFF4
  8130                           prodl	equ	0xFF3
  8131                           intcon	equ	0xFF2
  8132                           postinc0	equ	0xFEE
  8133                           fsr0h	equ	0xFEA
  8134                           fsr0l	equ	0xFE9
  8135                           wreg	equ	0xFE8
  8136                           postdec1	equ	0xFE5
  8137                           fsr1h	equ	0xFE2
  8138                           fsr1l	equ	0xFE1
  8139                           indf2	equ	0xFDF
  8140                           postinc2	equ	0xFDE
  8141                           postdec2	equ	0xFDD
  8142                           fsr2h	equ	0xFDA
  8143                           fsr2l	equ	0xFD9
  8144                           status	equ	0xFD8
  8145                           
  8146 ;; *************** function i2_do_I2C_RESET *****************
  8147 ;; Defined at:
  8148 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;		None
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;		None
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      enum E11956
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8166 ;;Total ram usage:        0 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; Hardware stack levels required when called:    1
  8169 ;; This function calls:
  8170 ;;		i2_i2c1_driver_resetBus
  8171 ;; This function is called by:
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           	psect	text82
  8176  000DB2                     __ptext82:
  8177                           	opt stack 0
  8178  000DB2                     i2_do_I2C_RESET:
  8179                           	opt stack 18
  8180                           
  8181                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  8182                           
  8183                           ;incstack = 0
  8184  000DB2  EC61  F007         	call	i2_i2c1_driver_resetBus	;wreg free
  8185                           
  8186                           ;i2c_master.c: 242: i2c_status.busy = 0;
  8187  000DB6  9001               	bcf	_i2c_status,0,c
  8188                           
  8189                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  8190  000DB8  0E00               	movlw	0
  8191  000DBA  6E0C               	movwf	_i2c_status+11,c
  8192                           
  8193                           ;i2c_master.c: 244: return I2C_RESET;
  8194  000DBC  0E0E               	movlw	14
  8195  000DBE  0012               	return	
  8196  000DC0                     __end_ofi2_do_I2C_RESET:
  8197                           	opt stack 0
  8198                           tosu	equ	0xFFF
  8199                           tosh	equ	0xFFE
  8200                           tosl	equ	0xFFD
  8201                           pclatu	equ	0xFFB
  8202                           pclath	equ	0xFFA
  8203                           tblptru	equ	0xFF8
  8204                           tblptrh	equ	0xFF7
  8205                           tblptrl	equ	0xFF6
  8206                           tablat	equ	0xFF5
  8207                           prodh	equ	0xFF4
  8208                           prodl	equ	0xFF3
  8209                           intcon	equ	0xFF2
  8210                           postinc0	equ	0xFEE
  8211                           fsr0h	equ	0xFEA
  8212                           fsr0l	equ	0xFE9
  8213                           wreg	equ	0xFE8
  8214                           postdec1	equ	0xFE5
  8215                           fsr1h	equ	0xFE2
  8216                           fsr1l	equ	0xFE1
  8217                           indf2	equ	0xFDF
  8218                           postinc2	equ	0xFDE
  8219                           postdec2	equ	0xFDD
  8220                           fsr2h	equ	0xFDA
  8221                           fsr2l	equ	0xFD9
  8222                           status	equ	0xFD8
  8223                           
  8224 ;; *************** function i2_do_I2C_TX_EMPTY *****************
  8225 ;; Defined at:
  8226 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;		None
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;		None
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      enum E11956
  8233 ;; Registers used:
  8234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8244 ;;Total ram usage:        0 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; Hardware stack levels required when called:    3
  8247 ;; This function calls:
  8248 ;;		Absolute function
  8249 ;;		i2_do_I2C_SEND_RESTART
  8250 ;;		i2_do_I2C_SEND_STOP
  8251 ;;		i2_i2c_restartWrite
  8252 ;;		i2_mssp1_setIRQ
  8253 ;;		i2_rd1RegCompleteHandler
  8254 ;;		i2_rd2RegCompleteHandler
  8255 ;;		i2_rdBlkRegCompleteHandler
  8256 ;;		i2_returnReset
  8257 ;;		i2_returnStop
  8258 ;;		i2_wr1RegCompleteHandler
  8259 ;;		i2_wr2RegCompleteHandler
  8260 ;; This function is called by:
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text83
  8265  00064E                     __ptext83:
  8266                           	opt stack 0
  8267  00064E                     i2_do_I2C_TX_EMPTY:
  8268                           	opt stack 16
  8269                           
  8270                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  8271                           
  8272                           ;incstack = 0
  8273  00064E  8401               	bsf	_i2c_status,2,c
  8274                           
  8275                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  8276  000650  D00A               	goto	i2l463
  8277  000652                     
  8278                           ;i2c_master.c: 388: case i2c_restart_write:
  8279                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  8280  000652  EC15  F007         	call	i2_do_I2C_SEND_RESTART	;wreg free
  8281  000656  0012               	return	
  8282  000658                     
  8283                           ;i2c_master.c: 391: mssp1_setIRQ();
  8284  000658  EC37  F007         	call	i2_mssp1_setIRQ	;wreg free
  8285                           
  8286                           ;i2c_master.c: 392: return I2C_TX;
  8287  00065C  0E03               	movlw	3
  8288  00065E  0012               	return	
  8289  000660                     
  8290                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  8291                           
  8292                           ;i2c_master.c: 394: case i2c_stop:
  8293  000660  EC11  F007         	call	i2_do_I2C_SEND_STOP	;wreg free
  8294                           
  8295                           ;i2c_master.c: 396: }
  8296  000664  0012               	return	
  8297  000666                     i2l463:
  8298  000666  C01F  F039         	movff	_i2c_status+30,i2returnStop@p
  8299  00066A  C020  F03A         	movff	_i2c_status+31,i2returnStop@p+1
  8300  00066E  EE20  F00D         	lfsr	2,_i2c_status+12
  8301  000672  D801               	call	i2u164_48
  8302  000674  D00A               	goto	i2u164_49
  8303  000676                     i2u164_48:
  8304  000676  0005               	push	
  8305  000678  6EFA               	movwf	pclath,c
  8306  00067A  50DE               	movf	postinc2,w,c
  8307  00067C  6EFD               	movwf	tosl,c
  8308  00067E  50DE               	movf	postinc2,w,c
  8309  000680  6EFE               	movwf	tosh,c
  8310  000682  50DE               	movf	postinc2,w,c
  8311  000684  6EFF               	movwf	tosu,c
  8312  000686  50FA               	movf	pclath,w,c
  8313  000688  0012               	return		;indir
  8314  00068A                     i2u164_49:
  8315                           
  8316                           ; Switch size 1, requested type "space"
  8317                           ; Number of cases is 4, Range of values is 1 to 4
  8318                           ; switch strategies available:
  8319                           ; Name         Instructions Cycles
  8320                           ; simple_byte           13     7 (average)
  8321                           ;	Chosen strategy is simple_byte
  8322  00068A  0A01               	xorlw	1	; case 1
  8323  00068C  B4D8               	btfsc	status,2,c
  8324  00068E  D7E8               	goto	i2l468
  8325  000690  0A03               	xorlw	3	; case 2
  8326  000692  B4D8               	btfsc	status,2,c
  8327  000694  D7DE               	goto	i2l464
  8328  000696  0A01               	xorlw	1	; case 3
  8329  000698  B4D8               	btfsc	status,2,c
  8330  00069A  D7DB               	goto	i2l464
  8331  00069C  0A07               	xorlw	7	; case 4
  8332  00069E  B4D8               	btfsc	status,2,c
  8333  0006A0  D7DB               	goto	i2l467
  8334  0006A2  D7DE               	goto	i2l468
  8335  0006A4                     __end_ofi2_do_I2C_TX_EMPTY:
  8336                           	opt stack 0
  8337                           tosu	equ	0xFFF
  8338                           tosh	equ	0xFFE
  8339                           tosl	equ	0xFFD
  8340                           pclatu	equ	0xFFB
  8341                           pclath	equ	0xFFA
  8342                           tblptru	equ	0xFF8
  8343                           tblptrh	equ	0xFF7
  8344                           tblptrl	equ	0xFF6
  8345                           tablat	equ	0xFF5
  8346                           prodh	equ	0xFF4
  8347                           prodl	equ	0xFF3
  8348                           intcon	equ	0xFF2
  8349                           postinc0	equ	0xFEE
  8350                           fsr0h	equ	0xFEA
  8351                           fsr0l	equ	0xFE9
  8352                           wreg	equ	0xFE8
  8353                           postdec1	equ	0xFE5
  8354                           fsr1h	equ	0xFE2
  8355                           fsr1l	equ	0xFE1
  8356                           indf2	equ	0xFDF
  8357                           postinc2	equ	0xFDE
  8358                           postdec2	equ	0xFDD
  8359                           fsr2h	equ	0xFDA
  8360                           fsr2l	equ	0xFD9
  8361                           status	equ	0xFD8
  8362                           
  8363 ;; *************** function i2_mssp1_setIRQ *****************
  8364 ;; Defined at:
  8365 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		None
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8383 ;;Total ram usage:        0 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		i2_do_I2C_TX_EMPTY
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text84
  8393  000E6E                     __ptext84:
  8394                           	opt stack 0
  8395  000E6E                     i2_mssp1_setIRQ:
  8396                           	opt stack 18
  8397                           
  8398                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  8399                           
  8400                           ;incstack = 0
  8401  000E6E  010E               	movlb	14	; () banked
  8402  000E70  81CD               	bsf	205,0,b	;volatile
  8403                           
  8404                           ; BSR set to: 14
  8405  000E72  0012               	return		;funcret
  8406  000E74                     __end_ofi2_mssp1_setIRQ:
  8407                           	opt stack 0
  8408                           tosu	equ	0xFFF
  8409                           tosh	equ	0xFFE
  8410                           tosl	equ	0xFFD
  8411                           pclatu	equ	0xFFB
  8412                           pclath	equ	0xFFA
  8413                           tblptru	equ	0xFF8
  8414                           tblptrh	equ	0xFF7
  8415                           tblptrl	equ	0xFF6
  8416                           tablat	equ	0xFF5
  8417                           prodh	equ	0xFF4
  8418                           prodl	equ	0xFF3
  8419                           intcon	equ	0xFF2
  8420                           postinc0	equ	0xFEE
  8421                           fsr0h	equ	0xFEA
  8422                           fsr0l	equ	0xFE9
  8423                           wreg	equ	0xFE8
  8424                           postdec1	equ	0xFE5
  8425                           fsr1h	equ	0xFE2
  8426                           fsr1l	equ	0xFE1
  8427                           indf2	equ	0xFDF
  8428                           postinc2	equ	0xFDE
  8429                           postdec2	equ	0xFDD
  8430                           fsr2h	equ	0xFDA
  8431                           fsr2l	equ	0xFD9
  8432                           status	equ	0xFD8
  8433                           
  8434 ;; *************** function i2_i2c1_driver_isNACK *****************
  8435 ;; Defined at:
  8436 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;		None
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;		None
  8441 ;; Return value:  Size  Location     Type
  8442 ;;		None               void
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8454 ;;Total ram usage:        1 bytes
  8455 ;; Hardware stack levels used:    1
  8456 ;; This function calls:
  8457 ;;		Nothing
  8458 ;; This function is called by:
  8459 ;;		i2_do_I2C_TX
  8460 ;;		i2_i2c_ISR
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	text85
  8465  000C66                     __ptext85:
  8466                           	opt stack 0
  8467  000C66                     i2_i2c1_driver_isNACK:
  8468                           	opt stack 19
  8469                           
  8470                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  8471                           
  8472                           ; BSR set to: 14
  8473                           ;incstack = 0
  8474  000C66  5097               	movf	3991,w,c	;volatile
  8475  000C68  0BBF               	andlw	-65
  8476  000C6A  0940               	iorlw	64
  8477  000C6C  6E97               	movwf	3991,c	;volatile
  8478  000C6E  3897               	swapf	3991,w,c	;volatile
  8479  000C70  32E8               	rrcf	wreg,f,c
  8480  000C72  32E8               	rrcf	wreg,f,c
  8481  000C74  0B01               	andlw	1
  8482  000C76  6E2E               	movwf	??i2_i2c1_driver_isNACK& (0+255),c
  8483  000C78  302E               	rrcf	??i2_i2c1_driver_isNACK,w,c
  8484  000C7A  0012               	return	
  8485  000C7C                     __end_ofi2_i2c1_driver_isNACK:
  8486                           	opt stack 0
  8487                           tosu	equ	0xFFF
  8488                           tosh	equ	0xFFE
  8489                           tosl	equ	0xFFD
  8490                           pclatu	equ	0xFFB
  8491                           pclath	equ	0xFFA
  8492                           tblptru	equ	0xFF8
  8493                           tblptrh	equ	0xFF7
  8494                           tblptrl	equ	0xFF6
  8495                           tablat	equ	0xFF5
  8496                           prodh	equ	0xFF4
  8497                           prodl	equ	0xFF3
  8498                           intcon	equ	0xFF2
  8499                           postinc0	equ	0xFEE
  8500                           fsr0h	equ	0xFEA
  8501                           fsr0l	equ	0xFE9
  8502                           wreg	equ	0xFE8
  8503                           postdec1	equ	0xFE5
  8504                           fsr1h	equ	0xFE2
  8505                           fsr1l	equ	0xFE1
  8506                           indf2	equ	0xFDF
  8507                           postinc2	equ	0xFDE
  8508                           postdec2	equ	0xFDD
  8509                           fsr2h	equ	0xFDA
  8510                           fsr2l	equ	0xFD9
  8511                           status	equ	0xFD8
  8512                           
  8513 ;; *************** function i2_i2c1_driver_TXData *****************
  8514 ;; Defined at:
  8515 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  d               1    wreg     unsigned char 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  d               1    0[COMRAM] unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8533 ;;Total ram usage:        1 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; This function calls:
  8536 ;;		Nothing
  8537 ;; This function is called by:
  8538 ;;		i2_do_I2C_SEND_ADR_READ
  8539 ;;		i2_do_I2C_SEND_ADR_WRITE
  8540 ;;		i2_do_I2C_TX
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text86
  8545  000E42                     __ptext86:
  8546                           	opt stack 0
  8547  000E42                     i2_i2c1_driver_TXData:
  8548                           	opt stack 18
  8549                           
  8550                           ;incstack = 0
  8551                           ;i2i2c1_driver_TXData@d stored from wreg
  8552  000E42  6E2E               	movwf	i2i2c1_driver_TXData@d,c
  8553                           
  8554                           ;i2c1_driver.c: 188: SSP1BUF = d;
  8555  000E44  C02E  FF92         	movff	i2i2c1_driver_TXData@d,3986	;volatile
  8556  000E48  0012               	return		;funcret
  8557  000E4A                     __end_ofi2_i2c1_driver_TXData:
  8558                           	opt stack 0
  8559                           tosu	equ	0xFFF
  8560                           tosh	equ	0xFFE
  8561                           tosl	equ	0xFFD
  8562                           pclatu	equ	0xFFB
  8563                           pclath	equ	0xFFA
  8564                           tblptru	equ	0xFF8
  8565                           tblptrh	equ	0xFF7
  8566                           tblptrl	equ	0xFF6
  8567                           tablat	equ	0xFF5
  8568                           prodh	equ	0xFF4
  8569                           prodl	equ	0xFF3
  8570                           intcon	equ	0xFF2
  8571                           postinc0	equ	0xFEE
  8572                           fsr0h	equ	0xFEA
  8573                           fsr0l	equ	0xFE9
  8574                           wreg	equ	0xFE8
  8575                           postdec1	equ	0xFE5
  8576                           fsr1h	equ	0xFE2
  8577                           fsr1l	equ	0xFE1
  8578                           indf2	equ	0xFDF
  8579                           postinc2	equ	0xFDE
  8580                           postdec2	equ	0xFDD
  8581                           fsr2h	equ	0xFDA
  8582                           fsr2l	equ	0xFD9
  8583                           status	equ	0xFD8
  8584                           
  8585 ;; *************** function i2_i2c1_driver_getRXData *****************
  8586 ;; Defined at:
  8587 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;		None
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      unsigned char 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;Total ram usage:        0 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		i2_do_I2C_RX
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           	psect	text87
  8615  000EA4                     __ptext87:
  8616                           	opt stack 0
  8617  000EA4                     i2_i2c1_driver_getRXData:
  8618                           	opt stack 18
  8619                           
  8620                           ;i2c1_driver.c: 173: return SSP1BUF;
  8621                           
  8622                           ;incstack = 0
  8623  000EA4  5092               	movf	3986,w,c	;volatile
  8624  000EA6  0012               	return	
  8625  000EA8                     __end_ofi2_i2c1_driver_getRXData:
  8626                           	opt stack 0
  8627                           tosu	equ	0xFFF
  8628                           tosh	equ	0xFFE
  8629                           tosl	equ	0xFFD
  8630                           pclatu	equ	0xFFB
  8631                           pclath	equ	0xFFA
  8632                           tblptru	equ	0xFF8
  8633                           tblptrh	equ	0xFF7
  8634                           tblptrl	equ	0xFF6
  8635                           tablat	equ	0xFF5
  8636                           prodh	equ	0xFF4
  8637                           prodl	equ	0xFF3
  8638                           intcon	equ	0xFF2
  8639                           postinc0	equ	0xFEE
  8640                           fsr0h	equ	0xFEA
  8641                           fsr0l	equ	0xFE9
  8642                           wreg	equ	0xFE8
  8643                           postdec1	equ	0xFE5
  8644                           fsr1h	equ	0xFE2
  8645                           fsr1l	equ	0xFE1
  8646                           indf2	equ	0xFDF
  8647                           postinc2	equ	0xFDE
  8648                           postdec2	equ	0xFDD
  8649                           fsr2h	equ	0xFDA
  8650                           fsr2l	equ	0xFD9
  8651                           status	equ	0xFD8
  8652                           
  8653 ;; *************** function i2_i2c1_driver_sendNACK *****************
  8654 ;; Defined at:
  8655 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;		None
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;		None
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  1    wreg      void 
  8662 ;; Registers used:
  8663 ;;		None
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8673 ;;Total ram usage:        0 bytes
  8674 ;; Hardware stack levels used:    1
  8675 ;; This function calls:
  8676 ;;		Nothing
  8677 ;; This function is called by:
  8678 ;;		i2_do_I2C_DO_NACK_STOP
  8679 ;;		i2_do_I2C_DO_NACK_RESTART
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683                           	psect	text88
  8684  000E74                     __ptext88:
  8685                           	opt stack 0
  8686  000E74                     i2_i2c1_driver_sendNACK:
  8687                           	opt stack 17
  8688                           
  8689                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  8690                           
  8691                           ;incstack = 0
  8692  000E74  8A97               	bsf	3991,5,c	;volatile
  8693                           
  8694                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  8695  000E76  8897               	bsf	3991,4,c	;volatile
  8696  000E78  0012               	return		;funcret
  8697  000E7A                     __end_ofi2_i2c1_driver_sendNACK:
  8698                           	opt stack 0
  8699                           tosu	equ	0xFFF
  8700                           tosh	equ	0xFFE
  8701                           tosl	equ	0xFFD
  8702                           pclatu	equ	0xFFB
  8703                           pclath	equ	0xFFA
  8704                           tblptru	equ	0xFF8
  8705                           tblptrh	equ	0xFF7
  8706                           tblptrl	equ	0xFF6
  8707                           tablat	equ	0xFF5
  8708                           prodh	equ	0xFF4
  8709                           prodl	equ	0xFF3
  8710                           intcon	equ	0xFF2
  8711                           postinc0	equ	0xFEE
  8712                           fsr0h	equ	0xFEA
  8713                           fsr0l	equ	0xFE9
  8714                           wreg	equ	0xFE8
  8715                           postdec1	equ	0xFE5
  8716                           fsr1h	equ	0xFE2
  8717                           fsr1l	equ	0xFE1
  8718                           indf2	equ	0xFDF
  8719                           postinc2	equ	0xFDE
  8720                           postdec2	equ	0xFDD
  8721                           fsr2h	equ	0xFDA
  8722                           fsr2l	equ	0xFD9
  8723                           status	equ	0xFD8
  8724                           
  8725 ;; *************** function i2_i2c1_driver_resetBus *****************
  8726 ;; Defined at:
  8727 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;		None
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		None
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8745 ;;Total ram usage:        0 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; This function calls:
  8748 ;;		Nothing
  8749 ;; This function is called by:
  8750 ;;		i2_do_I2C_RESET
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           	psect	text89
  8755  000EC2                     __ptext89:
  8756                           	opt stack 0
  8757  000EC2                     i2_i2c1_driver_resetBus:
  8758                           	opt stack 18
  8759                           
  8760                           ;incstack = 0
  8761  000EC2  0012               	return		;funcret
  8762  000EC4                     __end_ofi2_i2c1_driver_resetBus:
  8763                           	opt stack 0
  8764                           tosu	equ	0xFFF
  8765                           tosh	equ	0xFFE
  8766                           tosl	equ	0xFFD
  8767                           pclatu	equ	0xFFB
  8768                           pclath	equ	0xFFA
  8769                           tblptru	equ	0xFF8
  8770                           tblptrh	equ	0xFF7
  8771                           tblptrl	equ	0xFF6
  8772                           tablat	equ	0xFF5
  8773                           prodh	equ	0xFF4
  8774                           prodl	equ	0xFF3
  8775                           intcon	equ	0xFF2
  8776                           postinc0	equ	0xFEE
  8777                           fsr0h	equ	0xFEA
  8778                           fsr0l	equ	0xFE9
  8779                           wreg	equ	0xFE8
  8780                           postdec1	equ	0xFE5
  8781                           fsr1h	equ	0xFE2
  8782                           fsr1l	equ	0xFE1
  8783                           indf2	equ	0xFDF
  8784                           postinc2	equ	0xFDE
  8785                           postdec2	equ	0xFDD
  8786                           fsr2h	equ	0xFDA
  8787                           fsr2l	equ	0xFD9
  8788                           status	equ	0xFD8
  8789                           
  8790 ;; *************** function i2_i2c1_driver_startRX *****************
  8791 ;; Defined at:
  8792 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		None
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8810 ;;Total ram usage:        0 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; This function calls:
  8813 ;;		Nothing
  8814 ;; This function is called by:
  8815 ;;		i2_do_I2C_RCEN
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text90
  8820  000EA8                     __ptext90:
  8821                           	opt stack 0
  8822  000EA8                     i2_i2c1_driver_startRX:
  8823                           	opt stack 18
  8824                           
  8825                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  8826                           
  8827                           ;incstack = 0
  8828  000EA8  8697               	bsf	3991,3,c	;volatile
  8829  000EAA  0012               	return		;funcret
  8830  000EAC                     __end_ofi2_i2c1_driver_startRX:
  8831                           	opt stack 0
  8832                           tosu	equ	0xFFF
  8833                           tosh	equ	0xFFE
  8834                           tosl	equ	0xFFD
  8835                           pclatu	equ	0xFFB
  8836                           pclath	equ	0xFFA
  8837                           tblptru	equ	0xFF8
  8838                           tblptrh	equ	0xFF7
  8839                           tblptrl	equ	0xFF6
  8840                           tablat	equ	0xFF5
  8841                           prodh	equ	0xFF4
  8842                           prodl	equ	0xFF3
  8843                           intcon	equ	0xFF2
  8844                           postinc0	equ	0xFEE
  8845                           fsr0h	equ	0xFEA
  8846                           fsr0l	equ	0xFE9
  8847                           wreg	equ	0xFE8
  8848                           postdec1	equ	0xFE5
  8849                           fsr1h	equ	0xFE2
  8850                           fsr1l	equ	0xFE1
  8851                           indf2	equ	0xFDF
  8852                           postinc2	equ	0xFDE
  8853                           postdec2	equ	0xFDD
  8854                           fsr2h	equ	0xFDA
  8855                           fsr2l	equ	0xFD9
  8856                           status	equ	0xFD8
  8857                           
  8858 ;; *************** function i2_rdBlkRegCompleteHandler *****************
  8859 ;; Defined at:
  8860 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8861 ;; Parameters:    Size  Location     Type
  8862 ;;  p               2   11[COMRAM] PTR void 
  8863 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8864 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8865 ;; Auto vars:     Size  Location     Type
  8866 ;;		None
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      enum E97
  8869 ;; Registers used:
  8870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8880 ;;Total ram usage:        2 bytes
  8881 ;; Hardware stack levels used:    1
  8882 ;; Hardware stack levels required when called:    2
  8883 ;; This function calls:
  8884 ;;		i2_i2c_setBuffer
  8885 ;;		i2_i2c_setDataCompleteCallback
  8886 ;; This function is called by:
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           	psect	text91
  8891  000816                     __ptext91:
  8892                           	opt stack 0
  8893  000816                     i2_rdBlkRegCompleteHandler:
  8894                           	opt stack 16
  8895                           
  8896                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  8897                           
  8898                           ;incstack = 0
  8899  000816  EE20 F002          	lfsr	2,2
  8900  00081A  5039               	movf	i2rdBlkRegCompleteHandler@p,w,c
  8901  00081C  26D9               	addwf	fsr2l,f,c
  8902  00081E  503A               	movf	i2rdBlkRegCompleteHandler@p+1,w,c
  8903  000820  22DA               	addwfc	fsr2h,f,c
  8904  000822  CFDE F02E          	movff	postinc2,i2i2c_setBuffer@buffer
  8905  000826  CFDD F02F          	movff	postdec2,i2i2c_setBuffer@buffer+1
  8906  00082A  C039  FFD9         	movff	i2rdBlkRegCompleteHandler@p,fsr2l
  8907  00082E  C03A  FFDA         	movff	i2rdBlkRegCompleteHandler@p+1,fsr2h
  8908  000832  CFDE F030          	movff	postinc2,i2i2c_setBuffer@bufferSize
  8909  000836  CFDD F031          	movff	postdec2,i2i2c_setBuffer@bufferSize+1
  8910  00083A  ECFB  F005         	call	i2_i2c_setBuffer	;wreg free
  8911                           
  8912                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  8913  00083E  0E00               	movlw	0
  8914  000840  6E34               	movwf	i2i2c_setDataCompleteCallback@cb,c
  8915  000842  0E00               	movlw	0
  8916  000844  6E35               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  8917  000846  0E00               	movlw	0
  8918  000848  6E36               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  8919  00084A  0E00               	movlw	0
  8920  00084C  6E37               	movwf	i2i2c_setDataCompleteCallback@p,c
  8921  00084E  0E00               	movlw	0
  8922  000850  6E38               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  8923  000852  ECBD  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  8924                           
  8925                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  8926  000856  0E02               	movlw	2
  8927  000858  0012               	return	
  8928  00085A                     __end_ofi2_rdBlkRegCompleteHandler:
  8929                           	opt stack 0
  8930                           tosu	equ	0xFFF
  8931                           tosh	equ	0xFFE
  8932                           tosl	equ	0xFFD
  8933                           pclatu	equ	0xFFB
  8934                           pclath	equ	0xFFA
  8935                           tblptru	equ	0xFF8
  8936                           tblptrh	equ	0xFF7
  8937                           tblptrl	equ	0xFF6
  8938                           tablat	equ	0xFF5
  8939                           prodh	equ	0xFF4
  8940                           prodl	equ	0xFF3
  8941                           intcon	equ	0xFF2
  8942                           postinc0	equ	0xFEE
  8943                           fsr0h	equ	0xFEA
  8944                           fsr0l	equ	0xFE9
  8945                           wreg	equ	0xFE8
  8946                           postdec1	equ	0xFE5
  8947                           fsr1h	equ	0xFE2
  8948                           fsr1l	equ	0xFE1
  8949                           indf2	equ	0xFDF
  8950                           postinc2	equ	0xFDE
  8951                           postdec2	equ	0xFDD
  8952                           fsr2h	equ	0xFDA
  8953                           fsr2l	equ	0xFD9
  8954                           status	equ	0xFD8
  8955                           
  8956 ;; *************** function i2_rd2RegCompleteHandler *****************
  8957 ;; Defined at:
  8958 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  p               2   11[COMRAM] PTR void 
  8961 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  8962 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;		None
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1    wreg      enum E97
  8967 ;; Registers used:
  8968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8978 ;;Total ram usage:        2 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    2
  8981 ;; This function calls:
  8982 ;;		i2_i2c_setBuffer
  8983 ;;		i2_i2c_setDataCompleteCallback
  8984 ;; This function is called by:
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           	psect	text92
  8989  000A4A                     __ptext92:
  8990                           	opt stack 0
  8991  000A4A                     i2_rd2RegCompleteHandler:
  8992                           	opt stack 16
  8993                           
  8994                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  8995                           
  8996                           ;incstack = 0
  8997  000A4A  C039  F02E         	movff	i2rd2RegCompleteHandler@p,i2i2c_setBuffer@buffer
  8998  000A4E  C03A  F02F         	movff	i2rd2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  8999  000A52  0E00               	movlw	0
  9000  000A54  6E31               	movwf	i2i2c_setBuffer@bufferSize+1,c
  9001  000A56  0E02               	movlw	2
  9002  000A58  6E30               	movwf	i2i2c_setBuffer@bufferSize,c
  9003  000A5A  ECFB  F005         	call	i2_i2c_setBuffer	;wreg free
  9004                           
  9005                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  9006  000A5E  0E00               	movlw	0
  9007  000A60  6E34               	movwf	i2i2c_setDataCompleteCallback@cb,c
  9008  000A62  0E00               	movlw	0
  9009  000A64  6E35               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  9010  000A66  0E00               	movlw	0
  9011  000A68  6E36               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  9012  000A6A  0E00               	movlw	0
  9013  000A6C  6E37               	movwf	i2i2c_setDataCompleteCallback@p,c
  9014  000A6E  0E00               	movlw	0
  9015  000A70  6E38               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  9016  000A72  ECBD  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  9017                           
  9018                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  9019  000A76  0E02               	movlw	2
  9020  000A78  0012               	return	
  9021  000A7A                     __end_ofi2_rd2RegCompleteHandler:
  9022                           	opt stack 0
  9023                           tosu	equ	0xFFF
  9024                           tosh	equ	0xFFE
  9025                           tosl	equ	0xFFD
  9026                           pclatu	equ	0xFFB
  9027                           pclath	equ	0xFFA
  9028                           tblptru	equ	0xFF8
  9029                           tblptrh	equ	0xFF7
  9030                           tblptrl	equ	0xFF6
  9031                           tablat	equ	0xFF5
  9032                           prodh	equ	0xFF4
  9033                           prodl	equ	0xFF3
  9034                           intcon	equ	0xFF2
  9035                           postinc0	equ	0xFEE
  9036                           fsr0h	equ	0xFEA
  9037                           fsr0l	equ	0xFE9
  9038                           wreg	equ	0xFE8
  9039                           postdec1	equ	0xFE5
  9040                           fsr1h	equ	0xFE2
  9041                           fsr1l	equ	0xFE1
  9042                           indf2	equ	0xFDF
  9043                           postinc2	equ	0xFDE
  9044                           postdec2	equ	0xFDD
  9045                           fsr2h	equ	0xFDA
  9046                           fsr2l	equ	0xFD9
  9047                           status	equ	0xFD8
  9048                           
  9049 ;; *************** function i2_rd1RegCompleteHandler *****************
  9050 ;; Defined at:
  9051 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  p               2   11[COMRAM] PTR void 
  9054 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9055 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;		None
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      enum E97
  9060 ;; Registers used:
  9061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9071 ;;Total ram usage:        2 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    2
  9074 ;; This function calls:
  9075 ;;		i2_i2c_setBuffer
  9076 ;;		i2_i2c_setDataCompleteCallback
  9077 ;; This function is called by:
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text93
  9082  000A7A                     __ptext93:
  9083                           	opt stack 0
  9084  000A7A                     i2_rd1RegCompleteHandler:
  9085                           	opt stack 16
  9086                           
  9087                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  9088                           
  9089                           ;incstack = 0
  9090  000A7A  C039  F02E         	movff	i2rd1RegCompleteHandler@p,i2i2c_setBuffer@buffer
  9091  000A7E  C03A  F02F         	movff	i2rd1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  9092  000A82  0E00               	movlw	0
  9093  000A84  6E31               	movwf	i2i2c_setBuffer@bufferSize+1,c
  9094  000A86  0E01               	movlw	1
  9095  000A88  6E30               	movwf	i2i2c_setBuffer@bufferSize,c
  9096  000A8A  ECFB  F005         	call	i2_i2c_setBuffer	;wreg free
  9097                           
  9098                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  9099  000A8E  0E00               	movlw	0
  9100  000A90  6E34               	movwf	i2i2c_setDataCompleteCallback@cb,c
  9101  000A92  0E00               	movlw	0
  9102  000A94  6E35               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  9103  000A96  0E00               	movlw	0
  9104  000A98  6E36               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  9105  000A9A  0E00               	movlw	0
  9106  000A9C  6E37               	movwf	i2i2c_setDataCompleteCallback@p,c
  9107  000A9E  0E00               	movlw	0
  9108  000AA0  6E38               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  9109  000AA2  ECBD  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  9110                           
  9111                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  9112  000AA6  0E02               	movlw	2
  9113  000AA8  0012               	return	
  9114  000AAA                     __end_ofi2_rd1RegCompleteHandler:
  9115                           	opt stack 0
  9116                           tosu	equ	0xFFF
  9117                           tosh	equ	0xFFE
  9118                           tosl	equ	0xFFD
  9119                           pclatu	equ	0xFFB
  9120                           pclath	equ	0xFFA
  9121                           tblptru	equ	0xFF8
  9122                           tblptrh	equ	0xFF7
  9123                           tblptrl	equ	0xFF6
  9124                           tablat	equ	0xFF5
  9125                           prodh	equ	0xFF4
  9126                           prodl	equ	0xFF3
  9127                           intcon	equ	0xFF2
  9128                           postinc0	equ	0xFEE
  9129                           fsr0h	equ	0xFEA
  9130                           fsr0l	equ	0xFE9
  9131                           wreg	equ	0xFE8
  9132                           postdec1	equ	0xFE5
  9133                           fsr1h	equ	0xFE2
  9134                           fsr1l	equ	0xFE1
  9135                           indf2	equ	0xFDF
  9136                           postinc2	equ	0xFDE
  9137                           postdec2	equ	0xFDD
  9138                           fsr2h	equ	0xFDA
  9139                           fsr2l	equ	0xFD9
  9140                           status	equ	0xFD8
  9141                           
  9142 ;; *************** function i2_wr1RegCompleteHandler *****************
  9143 ;; Defined at:
  9144 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  p               2   11[COMRAM] PTR void 
  9147 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9148 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;		None
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      enum E97
  9153 ;; Registers used:
  9154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9164 ;;Total ram usage:        2 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:    2
  9167 ;; This function calls:
  9168 ;;		i2_i2c_setBuffer
  9169 ;;		i2_i2c_setDataCompleteCallback
  9170 ;; This function is called by:
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text94
  9175  000AAA                     __ptext94:
  9176                           	opt stack 0
  9177  000AAA                     i2_wr1RegCompleteHandler:
  9178                           	opt stack 16
  9179                           
  9180                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  9181                           
  9182                           ;incstack = 0
  9183  000AAA  C039  F02E         	movff	i2wr1RegCompleteHandler@p,i2i2c_setBuffer@buffer
  9184  000AAE  C03A  F02F         	movff	i2wr1RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  9185  000AB2  0E00               	movlw	0
  9186  000AB4  6E31               	movwf	i2i2c_setBuffer@bufferSize+1,c
  9187  000AB6  0E01               	movlw	1
  9188  000AB8  6E30               	movwf	i2i2c_setBuffer@bufferSize,c
  9189  000ABA  ECFB  F005         	call	i2_i2c_setBuffer	;wreg free
  9190                           
  9191                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  9192  000ABE  0E00               	movlw	0
  9193  000AC0  6E34               	movwf	i2i2c_setDataCompleteCallback@cb,c
  9194  000AC2  0E00               	movlw	0
  9195  000AC4  6E35               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  9196  000AC6  0E00               	movlw	0
  9197  000AC8  6E36               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  9198  000ACA  0E00               	movlw	0
  9199  000ACC  6E37               	movwf	i2i2c_setDataCompleteCallback@p,c
  9200  000ACE  0E00               	movlw	0
  9201  000AD0  6E38               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  9202  000AD2  ECBD  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  9203                           
  9204                           ;i2c_simple_master.c: 35: return i2c_continue;
  9205  000AD6  0E04               	movlw	4
  9206  000AD8  0012               	return	
  9207  000ADA                     __end_ofi2_wr1RegCompleteHandler:
  9208                           	opt stack 0
  9209                           tosu	equ	0xFFF
  9210                           tosh	equ	0xFFE
  9211                           tosl	equ	0xFFD
  9212                           pclatu	equ	0xFFB
  9213                           pclath	equ	0xFFA
  9214                           tblptru	equ	0xFF8
  9215                           tblptrh	equ	0xFF7
  9216                           tblptrl	equ	0xFF6
  9217                           tablat	equ	0xFF5
  9218                           prodh	equ	0xFF4
  9219                           prodl	equ	0xFF3
  9220                           intcon	equ	0xFF2
  9221                           postinc0	equ	0xFEE
  9222                           fsr0h	equ	0xFEA
  9223                           fsr0l	equ	0xFE9
  9224                           wreg	equ	0xFE8
  9225                           postdec1	equ	0xFE5
  9226                           fsr1h	equ	0xFE2
  9227                           fsr1l	equ	0xFE1
  9228                           indf2	equ	0xFDF
  9229                           postinc2	equ	0xFDE
  9230                           postdec2	equ	0xFDD
  9231                           fsr2h	equ	0xFDA
  9232                           fsr2l	equ	0xFD9
  9233                           status	equ	0xFD8
  9234                           
  9235 ;; *************** function i2_i2c_restartWrite *****************
  9236 ;; Defined at:
  9237 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  p               2   11[COMRAM] PTR void 
  9240 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9241 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      enum E96
  9246 ;; Registers used:
  9247 ;;		wreg
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9257 ;;Total ram usage:        2 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           	psect	text95
  9266  000EAC                     __ptext95:
  9267                           	opt stack 0
  9268  000EAC                     i2_i2c_restartWrite:
  9269                           	opt stack 18
  9270                           
  9271                           ;i2c_types.c: 37: return i2c_restart_write;
  9272                           
  9273                           ;incstack = 0
  9274  000EAC  0E03               	movlw	3
  9275  000EAE  0012               	return	
  9276  000EB0                     __end_ofi2_i2c_restartWrite:
  9277                           	opt stack 0
  9278                           tosu	equ	0xFFF
  9279                           tosh	equ	0xFFE
  9280                           tosl	equ	0xFFD
  9281                           pclatu	equ	0xFFB
  9282                           pclath	equ	0xFFA
  9283                           tblptru	equ	0xFF8
  9284                           tblptrh	equ	0xFF7
  9285                           tblptrl	equ	0xFF6
  9286                           tablat	equ	0xFF5
  9287                           prodh	equ	0xFF4
  9288                           prodl	equ	0xFF3
  9289                           intcon	equ	0xFF2
  9290                           postinc0	equ	0xFEE
  9291                           fsr0h	equ	0xFEA
  9292                           fsr0l	equ	0xFE9
  9293                           wreg	equ	0xFE8
  9294                           postdec1	equ	0xFE5
  9295                           fsr1h	equ	0xFE2
  9296                           fsr1l	equ	0xFE1
  9297                           indf2	equ	0xFDF
  9298                           postinc2	equ	0xFDE
  9299                           postdec2	equ	0xFDD
  9300                           fsr2h	equ	0xFDA
  9301                           fsr2l	equ	0xFD9
  9302                           status	equ	0xFD8
  9303                           
  9304 ;; *************** function i2_returnReset *****************
  9305 ;; Defined at:
  9306 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  p               2   11[COMRAM] PTR void 
  9309 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9310 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      enum E11790
  9315 ;; Registers used:
  9316 ;;		wreg
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9326 ;;Total ram usage:        2 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; This function calls:
  9329 ;;		Nothing
  9330 ;; This function is called by:
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334                           	psect	text96
  9335  000EB0                     __ptext96:
  9336                           	opt stack 0
  9337  000EB0                     i2_returnReset:
  9338                           	opt stack 18
  9339                           
  9340                           ;i2c_master.c: 450: return i2c_reset_link;
  9341                           
  9342                           ;incstack = 0
  9343  000EB0  0E05               	movlw	5
  9344  000EB2  0012               	return	
  9345  000EB4                     __end_ofi2_returnReset:
  9346                           	opt stack 0
  9347                           tosu	equ	0xFFF
  9348                           tosh	equ	0xFFE
  9349                           tosl	equ	0xFFD
  9350                           pclatu	equ	0xFFB
  9351                           pclath	equ	0xFFA
  9352                           tblptru	equ	0xFF8
  9353                           tblptrh	equ	0xFF7
  9354                           tblptrl	equ	0xFF6
  9355                           tablat	equ	0xFF5
  9356                           prodh	equ	0xFF4
  9357                           prodl	equ	0xFF3
  9358                           intcon	equ	0xFF2
  9359                           postinc0	equ	0xFEE
  9360                           fsr0h	equ	0xFEA
  9361                           fsr0l	equ	0xFE9
  9362                           wreg	equ	0xFE8
  9363                           postdec1	equ	0xFE5
  9364                           fsr1h	equ	0xFE2
  9365                           fsr1l	equ	0xFE1
  9366                           indf2	equ	0xFDF
  9367                           postinc2	equ	0xFDE
  9368                           postdec2	equ	0xFDD
  9369                           fsr2h	equ	0xFDA
  9370                           fsr2l	equ	0xFD9
  9371                           status	equ	0xFD8
  9372                           
  9373 ;; *************** function i2_returnStop *****************
  9374 ;; Defined at:
  9375 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  9376 ;; Parameters:    Size  Location     Type
  9377 ;;  p               2   11[COMRAM] PTR void 
  9378 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9379 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      enum E11790
  9384 ;; Registers used:
  9385 ;;		wreg
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9395 ;;Total ram usage:        2 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		i2_setCallBack
  9401 ;;		_do_I2C_DO_ADDRESS_NACK
  9402 ;;		_do_I2C_TX
  9403 ;;		_do_I2C_RX
  9404 ;;		_do_I2C_TX_EMPTY
  9405 ;;		i2_do_I2C_DO_ADDRESS_NACK
  9406 ;;		i2_do_I2C_TX
  9407 ;;		i2_do_I2C_RX
  9408 ;;		i2_do_I2C_TX_EMPTY
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text97
  9413  000EB4                     __ptext97:
  9414                           	opt stack 0
  9415  000EB4                     i2_returnStop:
  9416                           	opt stack 18
  9417                           
  9418                           ;i2c_master.c: 445: return i2c_stop;
  9419                           
  9420                           ;incstack = 0
  9421  000EB4  0E01               	movlw	1
  9422  000EB6  0012               	return	
  9423  000EB8                     __end_ofi2_returnStop:
  9424                           	opt stack 0
  9425                           tosu	equ	0xFFF
  9426                           tosh	equ	0xFFE
  9427                           tosl	equ	0xFFD
  9428                           pclatu	equ	0xFFB
  9429                           pclath	equ	0xFFA
  9430                           tblptru	equ	0xFF8
  9431                           tblptrh	equ	0xFF7
  9432                           tblptrl	equ	0xFF6
  9433                           tablat	equ	0xFF5
  9434                           prodh	equ	0xFF4
  9435                           prodl	equ	0xFF3
  9436                           intcon	equ	0xFF2
  9437                           postinc0	equ	0xFEE
  9438                           fsr0h	equ	0xFEA
  9439                           fsr0l	equ	0xFE9
  9440                           wreg	equ	0xFE8
  9441                           postdec1	equ	0xFE5
  9442                           fsr1h	equ	0xFE2
  9443                           fsr1l	equ	0xFE1
  9444                           indf2	equ	0xFDF
  9445                           postinc2	equ	0xFDE
  9446                           postdec2	equ	0xFDD
  9447                           fsr2h	equ	0xFDA
  9448                           fsr2l	equ	0xFD9
  9449                           status	equ	0xFD8
  9450                           
  9451 ;; *************** function i2_wr2RegCompleteHandler *****************
  9452 ;; Defined at:
  9453 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;  p               2   11[COMRAM] PTR void 
  9456 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9457 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;		None
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      enum E97
  9462 ;; Registers used:
  9463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9473 ;;Total ram usage:        2 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    2
  9476 ;; This function calls:
  9477 ;;		i2_i2c_setBuffer
  9478 ;;		i2_i2c_setDataCompleteCallback
  9479 ;; This function is called by:
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text98
  9484  000ADA                     __ptext98:
  9485                           	opt stack 0
  9486  000ADA                     i2_wr2RegCompleteHandler:
  9487                           	opt stack 16
  9488                           
  9489                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  9490                           
  9491                           ;incstack = 0
  9492  000ADA  C039  F02E         	movff	i2wr2RegCompleteHandler@p,i2i2c_setBuffer@buffer
  9493  000ADE  C03A  F02F         	movff	i2wr2RegCompleteHandler@p+1,i2i2c_setBuffer@buffer+1
  9494  000AE2  0E00               	movlw	0
  9495  000AE4  6E31               	movwf	i2i2c_setBuffer@bufferSize+1,c
  9496  000AE6  0E02               	movlw	2
  9497  000AE8  6E30               	movwf	i2i2c_setBuffer@bufferSize,c
  9498  000AEA  ECFB  F005         	call	i2_i2c_setBuffer	;wreg free
  9499                           
  9500                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  9501  000AEE  0E00               	movlw	0
  9502  000AF0  6E34               	movwf	i2i2c_setDataCompleteCallback@cb,c
  9503  000AF2  0E00               	movlw	0
  9504  000AF4  6E35               	movwf	i2i2c_setDataCompleteCallback@cb+1,c
  9505  000AF6  0E00               	movlw	0
  9506  000AF8  6E36               	movwf	i2i2c_setDataCompleteCallback@cb+2,c
  9507  000AFA  0E00               	movlw	0
  9508  000AFC  6E37               	movwf	i2i2c_setDataCompleteCallback@p,c
  9509  000AFE  0E00               	movlw	0
  9510  000B00  6E38               	movwf	i2i2c_setDataCompleteCallback@p+1,c
  9511  000B02  ECBD  F005         	call	i2_i2c_setDataCompleteCallback	;wreg free
  9512                           
  9513                           ;i2c_simple_master.c: 114: return i2c_continue;
  9514  000B06  0E04               	movlw	4
  9515  000B08  0012               	return	
  9516  000B0A                     __end_ofi2_wr2RegCompleteHandler:
  9517                           	opt stack 0
  9518                           tosu	equ	0xFFF
  9519                           tosh	equ	0xFFE
  9520                           tosl	equ	0xFFD
  9521                           pclatu	equ	0xFFB
  9522                           pclath	equ	0xFFA
  9523                           tblptru	equ	0xFF8
  9524                           tblptrh	equ	0xFF7
  9525                           tblptrl	equ	0xFF6
  9526                           tablat	equ	0xFF5
  9527                           prodh	equ	0xFF4
  9528                           prodl	equ	0xFF3
  9529                           intcon	equ	0xFF2
  9530                           postinc0	equ	0xFEE
  9531                           fsr0h	equ	0xFEA
  9532                           fsr0l	equ	0xFE9
  9533                           wreg	equ	0xFE8
  9534                           postdec1	equ	0xFE5
  9535                           fsr1h	equ	0xFE2
  9536                           fsr1l	equ	0xFE1
  9537                           indf2	equ	0xFDF
  9538                           postinc2	equ	0xFDE
  9539                           postdec2	equ	0xFDD
  9540                           fsr2h	equ	0xFDA
  9541                           fsr2l	equ	0xFD9
  9542                           status	equ	0xFD8
  9543                           
  9544 ;; *************** function i2_i2c_setDataCompleteCallback *****************
  9545 ;; Defined at:
  9546 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  cb              3    6[COMRAM] PTR FTN(PTR void ,)enum 
  9549 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9550 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  9551 ;;  p               2    9[COMRAM] PTR void 
  9552 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9553 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;		None
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  1    wreg      void 
  9558 ;; Registers used:
  9559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9565 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9568 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9569 ;;Total ram usage:        5 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    1
  9572 ;; This function calls:
  9573 ;;		i2_setCallBack
  9574 ;; This function is called by:
  9575 ;;		i2_wr1RegCompleteHandler
  9576 ;;		i2_rd1RegCompleteHandler
  9577 ;;		i2_rd2RegCompleteHandler
  9578 ;;		i2_wr2RegCompleteHandler
  9579 ;;		i2_rdBlkRegCompleteHandler
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text99
  9584  000B7A                     __ptext99:
  9585                           	opt stack 0
  9586  000B7A                     i2_i2c_setDataCompleteCallback:
  9587                           	opt stack 16
  9588                           
  9589                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  9590                           
  9591                           ;incstack = 0
  9592  000B7A  C034  F02E         	movff	i2i2c_setDataCompleteCallback@cb,i2setCallBack@cb
  9593  000B7E  C035  F02F         	movff	i2i2c_setDataCompleteCallback@cb+1,i2setCallBack@cb+1
  9594  000B82  C036  F030         	movff	i2i2c_setDataCompleteCallback@cb+2,i2setCallBack@cb+2
  9595  000B86  C037  F031         	movff	i2i2c_setDataCompleteCallback@p,i2setCallBack@p
  9596  000B8A  C038  F032         	movff	i2i2c_setDataCompleteCallback@p+1,i2setCallBack@p+1
  9597  000B8E  0E00               	movlw	0
  9598  000B90  EC84  F002         	call	i2_setCallBack
  9599  000B94  0012               	return		;funcret
  9600  000B96                     __end_ofi2_i2c_setDataCompleteCallback:
  9601                           	opt stack 0
  9602                           tosu	equ	0xFFF
  9603                           tosh	equ	0xFFE
  9604                           tosl	equ	0xFFD
  9605                           pclatu	equ	0xFFB
  9606                           pclath	equ	0xFFA
  9607                           tblptru	equ	0xFF8
  9608                           tblptrh	equ	0xFF7
  9609                           tblptrl	equ	0xFF6
  9610                           tablat	equ	0xFF5
  9611                           prodh	equ	0xFF4
  9612                           prodl	equ	0xFF3
  9613                           intcon	equ	0xFF2
  9614                           postinc0	equ	0xFEE
  9615                           fsr0h	equ	0xFEA
  9616                           fsr0l	equ	0xFE9
  9617                           wreg	equ	0xFE8
  9618                           postdec1	equ	0xFE5
  9619                           fsr1h	equ	0xFE2
  9620                           fsr1l	equ	0xFE1
  9621                           indf2	equ	0xFDF
  9622                           postinc2	equ	0xFDE
  9623                           postdec2	equ	0xFDD
  9624                           fsr2h	equ	0xFDA
  9625                           fsr2l	equ	0xFD9
  9626                           status	equ	0xFD8
  9627                           
  9628 ;; *************** function i2_setCallBack *****************
  9629 ;; Defined at:
  9630 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;  idx             1    wreg     enum E11974
  9633 ;;  cb              3    0[COMRAM] PTR FTN(PTR void ,)enum 
  9634 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  9635 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  9636 ;;  p               2    3[COMRAM] PTR void 
  9637 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  9638 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;  idx             1    5[COMRAM] enum E11974
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  1    wreg      void 
  9643 ;; Registers used:
  9644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9650 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9654 ;;Total ram usage:        6 bytes
  9655 ;; Hardware stack levels used:    1
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		i2_i2c_setDataCompleteCallback
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           	psect	text100
  9664  000508                     __ptext100:
  9665                           	opt stack 0
  9666  000508                     i2_setCallBack:
  9667                           	opt stack 16
  9668                           
  9669                           ;incstack = 0
  9670                           ;i2setCallBack@idx stored from wreg
  9671  000508  6E33               	movwf	i2setCallBack@idx,c
  9672                           
  9673                           ;i2c_master.c: 455: if(cb)
  9674  00050A  502E               	movf	i2setCallBack@cb,w,c
  9675  00050C  102F               	iorwf	i2setCallBack@cb+1,w,c
  9676  00050E  1030               	iorwf	i2setCallBack@cb+2,w,c
  9677  000510  B4D8               	btfsc	status,2,c
  9678  000512  D01B               	goto	i2l488
  9679                           
  9680                           ;i2c_master.c: 456: {
  9681                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  9682  000514  5033               	movf	i2setCallBack@idx,w,c
  9683  000516  0D03               	mullw	3
  9684  000518  0E0D               	movlw	low (_i2c_status+12)
  9685  00051A  24F3               	addwf	prodl,w,c
  9686  00051C  6ED9               	movwf	fsr2l,c
  9687  00051E  0E00               	movlw	high (_i2c_status+12)
  9688  000520  20F4               	addwfc	prodh,w,c
  9689  000522  6EDA               	movwf	fsr2h,c
  9690  000524  C02E  FFDE         	movff	i2setCallBack@cb,postinc2
  9691  000528  C02F  FFDE         	movff	i2setCallBack@cb+1,postinc2
  9692  00052C  C030  FFDE         	movff	i2setCallBack@cb+2,postinc2
  9693                           
  9694                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  9695  000530  5033               	movf	i2setCallBack@idx,w,c
  9696  000532  0D02               	mullw	2
  9697  000534  0E1F               	movlw	low (_i2c_status+30)
  9698  000536  24F3               	addwf	prodl,w,c
  9699  000538  6ED9               	movwf	fsr2l,c
  9700  00053A  0E00               	movlw	high (_i2c_status+30)
  9701  00053C  20F4               	addwfc	prodh,w,c
  9702  00053E  6EDA               	movwf	fsr2h,c
  9703  000540  C031  FFDE         	movff	i2setCallBack@p,postinc2
  9704  000544  C032  FFDD         	movff	i2setCallBack@p+1,postdec2
  9705                           
  9706                           ;i2c_master.c: 459: }
  9707  000548  0012               	return	
  9708  00054A                     i2l488:
  9709                           
  9710                           ;i2c_master.c: 460: else
  9711                           ;i2c_master.c: 461: {
  9712                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  9713  00054A  5033               	movf	i2setCallBack@idx,w,c
  9714  00054C  0D03               	mullw	3
  9715  00054E  0E0D               	movlw	low (_i2c_status+12)
  9716  000550  24F3               	addwf	prodl,w,c
  9717  000552  6ED9               	movwf	fsr2l,c
  9718  000554  0E00               	movlw	high (_i2c_status+12)
  9719  000556  20F4               	addwfc	prodh,w,c
  9720  000558  6EDA               	movwf	fsr2h,c
  9721  00055A  0EB4               	movlw	low i2_returnStop
  9722  00055C  6EDE               	movwf	postinc2,c
  9723  00055E  0E0E               	movlw	high i2_returnStop
  9724  000560  6EDE               	movwf	postinc2,c
  9725  000562  0E00               	movlw	low (i2_returnStop shr (0+16))
  9726  000564  6EDE               	movwf	postinc2,c
  9727                           
  9728                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  9729  000566  5033               	movf	i2setCallBack@idx,w,c
  9730  000568  0D02               	mullw	2
  9731  00056A  0E1F               	movlw	low (_i2c_status+30)
  9732  00056C  24F3               	addwf	prodl,w,c
  9733  00056E  6ED9               	movwf	fsr2l,c
  9734  000570  0E00               	movlw	high (_i2c_status+30)
  9735  000572  20F4               	addwfc	prodh,w,c
  9736  000574  6EDA               	movwf	fsr2h,c
  9737  000576  0E00               	movlw	0
  9738  000578  6EDE               	movwf	postinc2,c
  9739  00057A  0E00               	movlw	0
  9740  00057C  6EDD               	movwf	postdec2,c
  9741  00057E  0012               	return	
  9742  000580                     __end_ofi2_setCallBack:
  9743                           	opt stack 0
  9744                           tosu	equ	0xFFF
  9745                           tosh	equ	0xFFE
  9746                           tosl	equ	0xFFD
  9747                           pclatu	equ	0xFFB
  9748                           pclath	equ	0xFFA
  9749                           tblptru	equ	0xFF8
  9750                           tblptrh	equ	0xFF7
  9751                           tblptrl	equ	0xFF6
  9752                           tablat	equ	0xFF5
  9753                           prodh	equ	0xFF4
  9754                           prodl	equ	0xFF3
  9755                           intcon	equ	0xFF2
  9756                           postinc0	equ	0xFEE
  9757                           fsr0h	equ	0xFEA
  9758                           fsr0l	equ	0xFE9
  9759                           wreg	equ	0xFE8
  9760                           postdec1	equ	0xFE5
  9761                           fsr1h	equ	0xFE2
  9762                           fsr1l	equ	0xFE1
  9763                           indf2	equ	0xFDF
  9764                           postinc2	equ	0xFDE
  9765                           postdec2	equ	0xFDD
  9766                           fsr2h	equ	0xFDA
  9767                           fsr2l	equ	0xFD9
  9768                           status	equ	0xFD8
  9769                           
  9770 ;; *************** function i2_i2c_setBuffer *****************
  9771 ;; Defined at:
  9772 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;  buffer          2    0[COMRAM] PTR void 
  9775 ;;		 -> main@rec(1), main@data(2), i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), 
  9776 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
  9777 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
  9778 ;;		 -> NULL(0), 
  9779 ;;  bufferSize      2    2[COMRAM] unsigned int 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;		None
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  1    wreg      void 
  9784 ;; Registers used:
  9785 ;;		wreg, status,2, status,0
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/0
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9795 ;;Total ram usage:        4 bytes
  9796 ;; Hardware stack levels used:    1
  9797 ;; This function calls:
  9798 ;;		Nothing
  9799 ;; This function is called by:
  9800 ;;		i2_wr1RegCompleteHandler
  9801 ;;		i2_rd1RegCompleteHandler
  9802 ;;		i2_rd2RegCompleteHandler
  9803 ;;		i2_wr2RegCompleteHandler
  9804 ;;		i2_rdBlkRegCompleteHandler
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           	psect	text101
  9809  000BF6                     __ptext101:
  9810                           	opt stack 0
  9811  000BF6                     i2_i2c_setBuffer:
  9812                           	opt stack 17
  9813                           
  9814                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  9815                           
  9816                           ;incstack = 0
  9817  000BF6  A401               	btfss	_i2c_status,2,c
  9818  000BF8  0012               	return	
  9819                           
  9820                           ;i2c_master.c: 187: {
  9821                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  9822  000BFA  C02E  F003         	movff	i2i2c_setBuffer@buffer,_i2c_status+2
  9823  000BFE  C02F  F004         	movff	i2i2c_setBuffer@buffer+1,_i2c_status+3
  9824                           
  9825                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  9826  000C02  C030  F005         	movff	i2i2c_setBuffer@bufferSize,_i2c_status+4
  9827  000C06  C031  F006         	movff	i2i2c_setBuffer@bufferSize+1,_i2c_status+5
  9828                           
  9829                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  9830  000C0A  9401               	bcf	_i2c_status,2,c
  9831  000C0C  0012               	return	
  9832  000C0E                     __end_ofi2_i2c_setBuffer:
  9833                           	opt stack 0
  9834                           tosu	equ	0xFFF
  9835                           tosh	equ	0xFFE
  9836                           tosl	equ	0xFFD
  9837                           pclatu	equ	0xFFB
  9838                           pclath	equ	0xFFA
  9839                           tblptru	equ	0xFF8
  9840                           tblptrh	equ	0xFF7
  9841                           tblptrl	equ	0xFF6
  9842                           tablat	equ	0xFF5
  9843                           prodh	equ	0xFF4
  9844                           prodl	equ	0xFF3
  9845                           intcon	equ	0xFF2
  9846                           postinc0	equ	0xFEE
  9847                           fsr0h	equ	0xFEA
  9848                           fsr0l	equ	0xFE9
  9849                           wreg	equ	0xFE8
  9850                           postdec1	equ	0xFE5
  9851                           fsr1h	equ	0xFE2
  9852                           fsr1l	equ	0xFE1
  9853                           indf2	equ	0xFDF
  9854                           postinc2	equ	0xFDE
  9855                           postdec2	equ	0xFDD
  9856                           fsr2h	equ	0xFDA
  9857                           fsr2l	equ	0xFD9
  9858                           status	equ	0xFD8
  9859                           
  9860 ;; *************** function i2_i2c1_driver_stop *****************
  9861 ;; Defined at:
  9862 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;		None
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;		None
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  1    wreg      void 
  9869 ;; Registers used:
  9870 ;;		None
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9880 ;;Total ram usage:        0 bytes
  9881 ;; Hardware stack levels used:    1
  9882 ;; This function calls:
  9883 ;;		Nothing
  9884 ;; This function is called by:
  9885 ;;		i2_do_I2C_SEND_STOP
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text102
  9890  000EB8                     __ptext102:
  9891                           	opt stack 0
  9892  000EB8                     i2_i2c1_driver_stop:
  9893                           	opt stack 17
  9894                           
  9895                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  9896                           
  9897                           ;incstack = 0
  9898  000EB8  8497               	bsf	3991,2,c	;volatile
  9899  000EBA  0012               	return		;funcret
  9900  000EBC                     __end_ofi2_i2c1_driver_stop:
  9901                           	opt stack 0
  9902                           tosu	equ	0xFFF
  9903                           tosh	equ	0xFFE
  9904                           tosl	equ	0xFFD
  9905                           pclatu	equ	0xFFB
  9906                           pclath	equ	0xFFA
  9907                           tblptru	equ	0xFF8
  9908                           tblptrh	equ	0xFF7
  9909                           tblptrl	equ	0xFF6
  9910                           tablat	equ	0xFF5
  9911                           prodh	equ	0xFF4
  9912                           prodl	equ	0xFF3
  9913                           intcon	equ	0xFF2
  9914                           postinc0	equ	0xFEE
  9915                           fsr0h	equ	0xFEA
  9916                           fsr0l	equ	0xFE9
  9917                           wreg	equ	0xFE8
  9918                           postdec1	equ	0xFE5
  9919                           fsr1h	equ	0xFE2
  9920                           fsr1l	equ	0xFE1
  9921                           indf2	equ	0xFDF
  9922                           postinc2	equ	0xFDE
  9923                           postdec2	equ	0xFDD
  9924                           fsr2h	equ	0xFDA
  9925                           fsr2l	equ	0xFD9
  9926                           status	equ	0xFD8
  9927                           
  9928 ;; *************** function i2_i2c1_driver_restart *****************
  9929 ;; Defined at:
  9930 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;		None
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;		None
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  1    wreg      void 
  9937 ;; Registers used:
  9938 ;;		None
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9948 ;;Total ram usage:        0 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		i2_do_I2C_SEND_RESTART_READ
  9954 ;;		i2_do_I2C_SEND_RESTART_WRITE
  9955 ;;		i2_do_I2C_SEND_RESTART
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text103
  9960  000EBC                     __ptext103:
  9961                           	opt stack 0
  9962  000EBC                     i2_i2c1_driver_restart:
  9963                           	opt stack 17
  9964                           
  9965                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  9966                           
  9967                           ;incstack = 0
  9968  000EBC  8297               	bsf	3991,1,c	;volatile
  9969  000EBE  0012               	return		;funcret
  9970  000EC0                     __end_ofi2_i2c1_driver_restart:
  9971                           	opt stack 0
  9972                           tosu	equ	0xFFF
  9973                           tosh	equ	0xFFE
  9974                           tosl	equ	0xFFD
  9975                           pclatu	equ	0xFFB
  9976                           pclath	equ	0xFFA
  9977                           tblptru	equ	0xFF8
  9978                           tblptrh	equ	0xFF7
  9979                           tblptrl	equ	0xFF6
  9980                           tablat	equ	0xFF5
  9981                           prodh	equ	0xFF4
  9982                           prodl	equ	0xFF3
  9983                           intcon	equ	0xFF2
  9984                           postinc0	equ	0xFEE
  9985                           fsr0h	equ	0xFEA
  9986                           fsr0l	equ	0xFE9
  9987                           wreg	equ	0xFE8
  9988                           postdec1	equ	0xFE5
  9989                           fsr1h	equ	0xFE2
  9990                           fsr1l	equ	0xFE1
  9991                           indf2	equ	0xFDF
  9992                           postinc2	equ	0xFDE
  9993                           postdec2	equ	0xFDD
  9994                           fsr2h	equ	0xFDA
  9995                           fsr2l	equ	0xFD9
  9996                           status	equ	0xFD8
  9997                           
  9998 ;; *************** function i2_i2c1_driver_sendACK *****************
  9999 ;; Defined at:
 10000 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;		None
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;		None
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1    wreg      void 
 10007 ;; Registers used:
 10008 ;;		None
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10018 ;;Total ram usage:        0 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; This function calls:
 10021 ;;		Nothing
 10022 ;; This function is called by:
 10023 ;;		i2_do_I2C_DO_ACK
 10024 ;;		i2_do_I2C_RX
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text104
 10029  000E7A                     __ptext104:
 10030                           	opt stack 0
 10031  000E7A                     i2_i2c1_driver_sendACK:
 10032                           	opt stack 18
 10033                           
 10034                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
 10035                           
 10036                           ;incstack = 0
 10037  000E7A  9A97               	bcf	3991,5,c	;volatile
 10038                           
 10039                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
 10040  000E7C  8897               	bsf	3991,4,c	;volatile
 10041  000E7E  0012               	return		;funcret
 10042  000E80                     __end_ofi2_i2c1_driver_sendACK:
 10043                           	opt stack 0
 10044                           tosu	equ	0xFFF
 10045                           tosh	equ	0xFFE
 10046                           tosl	equ	0xFFD
 10047                           pclatu	equ	0xFFB
 10048                           pclath	equ	0xFFA
 10049                           tblptru	equ	0xFF8
 10050                           tblptrh	equ	0xFF7
 10051                           tblptrl	equ	0xFF6
 10052                           tablat	equ	0xFF5
 10053                           prodh	equ	0xFF4
 10054                           prodl	equ	0xFF3
 10055                           intcon	equ	0xFF2
 10056                           postinc0	equ	0xFEE
 10057                           fsr0h	equ	0xFEA
 10058                           fsr0l	equ	0xFE9
 10059                           wreg	equ	0xFE8
 10060                           postdec1	equ	0xFE5
 10061                           fsr1h	equ	0xFE2
 10062                           fsr1l	equ	0xFE1
 10063                           indf2	equ	0xFDF
 10064                           postinc2	equ	0xFDE
 10065                           postdec2	equ	0xFDD
 10066                           fsr2h	equ	0xFDA
 10067                           fsr2l	equ	0xFD9
 10068                           status	equ	0xFD8
 10069                           
 10070 ;; *************** function _i2c_busCollisionISR *****************
 10071 ;; Defined at:
 10072 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;		None
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;		None
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10090 ;;Total ram usage:        0 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    1
 10093 ;; This function calls:
 10094 ;;		_i2c1_driver_clearBusCollision
 10095 ;; This function is called by:
 10096 ;;		_i2c_open
 10097 ;;		_INTERRUPT_InterruptManager
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text105
 10102  000E80                     __ptext105:
 10103                           	opt stack 0
 10104  000E80                     _i2c_busCollisionISR:
 10105                           	opt stack 19
 10106                           
 10107                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
 10108                           
 10109                           ;incstack = 0
 10110  000E80  EC43  F007         	call	_i2c1_driver_clearBusCollision	;wreg free
 10111  000E84  0012               	return		;funcret
 10112  000E86                     __end_of_i2c_busCollisionISR:
 10113                           	opt stack 0
 10114                           tosu	equ	0xFFF
 10115                           tosh	equ	0xFFE
 10116                           tosl	equ	0xFFD
 10117                           pclatu	equ	0xFFB
 10118                           pclath	equ	0xFFA
 10119                           tblptru	equ	0xFF8
 10120                           tblptrh	equ	0xFF7
 10121                           tblptrl	equ	0xFF6
 10122                           tablat	equ	0xFF5
 10123                           prodh	equ	0xFF4
 10124                           prodl	equ	0xFF3
 10125                           intcon	equ	0xFF2
 10126                           postinc0	equ	0xFEE
 10127                           fsr0h	equ	0xFEA
 10128                           fsr0l	equ	0xFE9
 10129                           wreg	equ	0xFE8
 10130                           postdec1	equ	0xFE5
 10131                           fsr1h	equ	0xFE2
 10132                           fsr1l	equ	0xFE1
 10133                           indf2	equ	0xFDF
 10134                           postinc2	equ	0xFDE
 10135                           postdec2	equ	0xFDD
 10136                           fsr2h	equ	0xFDA
 10137                           fsr2l	equ	0xFD9
 10138                           status	equ	0xFD8
 10139                           
 10140 ;; *************** function _i2c1_driver_clearBusCollision *****************
 10141 ;; Defined at:
 10142 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;		None
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;		None
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  1    wreg      void 
 10149 ;; Registers used:
 10150 ;;		None
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10160 ;;Total ram usage:        0 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; This function calls:
 10163 ;;		Nothing
 10164 ;; This function is called by:
 10165 ;;		_i2c_busCollisionISR
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           	psect	text106
 10170  000E86                     __ptext106:
 10171                           	opt stack 0
 10172  000E86                     _i2c1_driver_clearBusCollision:
 10173                           	opt stack 19
 10174                           
 10175                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
 10176                           
 10177                           ;incstack = 0
 10178  000E86  010E               	movlb	14	; () banked
 10179  000E88  93CD               	bcf	205,1,b	;volatile
 10180                           
 10181                           ; BSR set to: 14
 10182  000E8A  0012               	return		;funcret
 10183  000E8C                     __end_of_i2c1_driver_clearBusCollision:
 10184                           	opt stack 0
 10185  0000                     tosu	equ	0xFFF
 10186                           tosh	equ	0xFFE
 10187                           tosl	equ	0xFFD
 10188                           pclatu	equ	0xFFB
 10189                           pclath	equ	0xFFA
 10190                           tblptru	equ	0xFF8
 10191                           tblptrh	equ	0xFF7
 10192                           tblptrl	equ	0xFF6
 10193                           tablat	equ	0xFF5
 10194                           prodh	equ	0xFF4
 10195                           prodl	equ	0xFF3
 10196                           intcon	equ	0xFF2
 10197                           postinc0	equ	0xFEE
 10198                           fsr0h	equ	0xFEA
 10199                           fsr0l	equ	0xFE9
 10200                           wreg	equ	0xFE8
 10201                           postdec1	equ	0xFE5
 10202                           fsr1h	equ	0xFE2
 10203                           fsr1l	equ	0xFE1
 10204                           indf2	equ	0xFDF
 10205                           postinc2	equ	0xFDE
 10206                           postdec2	equ	0xFDD
 10207                           fsr2h	equ	0xFDA
 10208                           fsr2l	equ	0xFD9
 10209                           status	equ	0xFD8
 10210                           tosu	equ	0xFFF
 10211                           tosh	equ	0xFFE
 10212                           tosl	equ	0xFFD
 10213                           pclatu	equ	0xFFB
 10214                           pclath	equ	0xFFA
 10215                           tblptru	equ	0xFF8
 10216                           tblptrh	equ	0xFF7
 10217                           tblptrl	equ	0xFF6
 10218                           tablat	equ	0xFF5
 10219                           prodh	equ	0xFF4
 10220                           prodl	equ	0xFF3
 10221                           intcon	equ	0xFF2
 10222                           postinc0	equ	0xFEE
 10223                           fsr0h	equ	0xFEA
 10224                           fsr0l	equ	0xFE9
 10225                           wreg	equ	0xFE8
 10226                           postdec1	equ	0xFE5
 10227                           fsr1h	equ	0xFE2
 10228                           fsr1l	equ	0xFE1
 10229                           indf2	equ	0xFDF
 10230                           postinc2	equ	0xFDE
 10231                           postdec2	equ	0xFDD
 10232                           fsr2h	equ	0xFDA
 10233                           fsr2l	equ	0xFD9
 10234                           status	equ	0xFD8
 10235                           
 10236                           	psect	text107
 10237  000000                     __ptext107:
 10238                           	opt stack 0
 10239                           tosu	equ	0xFFF
 10240                           tosh	equ	0xFFE
 10241                           tosl	equ	0xFFD
 10242                           pclatu	equ	0xFFB
 10243                           pclath	equ	0xFFA
 10244                           tblptru	equ	0xFF8
 10245                           tblptrh	equ	0xFF7
 10246                           tblptrl	equ	0xFF6
 10247                           tablat	equ	0xFF5
 10248                           prodh	equ	0xFF4
 10249                           prodl	equ	0xFF3
 10250                           intcon	equ	0xFF2
 10251                           postinc0	equ	0xFEE
 10252                           fsr0h	equ	0xFEA
 10253                           fsr0l	equ	0xFE9
 10254                           wreg	equ	0xFE8
 10255                           postdec1	equ	0xFE5
 10256                           fsr1h	equ	0xFE2
 10257                           fsr1l	equ	0xFE1
 10258                           indf2	equ	0xFDF
 10259                           postinc2	equ	0xFDE
 10260                           postdec2	equ	0xFDD
 10261                           fsr2h	equ	0xFDA
 10262                           fsr2l	equ	0xFD9
 10263                           status	equ	0xFD8
 10264                           
 10265                           	psect	rparam
 10266  0000                     tosu	equ	0xFFF
 10267                           tosh	equ	0xFFE
 10268                           tosl	equ	0xFFD
 10269                           pclatu	equ	0xFFB
 10270                           pclath	equ	0xFFA
 10271                           tblptru	equ	0xFF8
 10272                           tblptrh	equ	0xFF7
 10273                           tblptrl	equ	0xFF6
 10274                           tablat	equ	0xFF5
 10275                           prodh	equ	0xFF4
 10276                           prodl	equ	0xFF3
 10277                           intcon	equ	0xFF2
 10278                           postinc0	equ	0xFEE
 10279                           fsr0h	equ	0xFEA
 10280                           fsr0l	equ	0xFE9
 10281                           wreg	equ	0xFE8
 10282                           postdec1	equ	0xFE5
 10283                           fsr1h	equ	0xFE2
 10284                           fsr1l	equ	0xFE1
 10285                           indf2	equ	0xFDF
 10286                           postinc2	equ	0xFDE
 10287                           postdec2	equ	0xFDD
 10288                           fsr2h	equ	0xFDA
 10289                           fsr2l	equ	0xFD9
 10290                           status	equ	0xFD8
 10291                           
 10292                           	psect	temp
 10293  00004A                     btemp:
 10294                           	opt stack 0
 10295  00004A                     	ds	1
 10296  0000                     int$flags	set	btemp
 10297  0000                     wtemp6	set	btemp+1
 10298                           tosu	equ	0xFFF
 10299                           tosh	equ	0xFFE
 10300                           tosl	equ	0xFFD
 10301                           pclatu	equ	0xFFB
 10302                           pclath	equ	0xFFA
 10303                           tblptru	equ	0xFF8
 10304                           tblptrh	equ	0xFF7
 10305                           tblptrl	equ	0xFF6
 10306                           tablat	equ	0xFF5
 10307                           prodh	equ	0xFF4
 10308                           prodl	equ	0xFF3
 10309                           intcon	equ	0xFF2
 10310                           postinc0	equ	0xFEE
 10311                           fsr0h	equ	0xFEA
 10312                           fsr0l	equ	0xFE9
 10313                           wreg	equ	0xFE8
 10314                           postdec1	equ	0xFE5
 10315                           fsr1h	equ	0xFE2
 10316                           fsr1l	equ	0xFE1
 10317                           indf2	equ	0xFDF
 10318                           postinc2	equ	0xFDE
 10319                           postdec2	equ	0xFDD
 10320                           fsr2h	equ	0xFDA
 10321                           fsr2l	equ	0xFD9
 10322                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      73
    BANK0           160     20      71
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    do_I2C_TX$2133$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2139$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2145$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_ISR$2151	PTR const FTN()enum E11956 size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$2150	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2145	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$2144	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2139	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$2138	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX$2133	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S833$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    mssp1_waitForEvent@timeout	PTR unsigned int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_readNBytes@data	PTR void  size(2) Largest target is 1
		 -> main@rec(BANK0[1]), 

    d.data	PTR unsigned char  size(2) Largest target is 0

    S1098$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(2) Largest target is 2
		 -> main@data(BANK0[2]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E11956[16] size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@p	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    i2c_setAddressNACKCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> i2c_restartWrite(), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S833$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S833$callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> i2_returnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 
		 -> returnReset(), returnStop(), 

    S833$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> main@rec(BANK0[1]), main@data(BANK0[2]), i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), 
		 -> i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), 
		 -> i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), 
		 -> NULL(NULL[0]), 

    i2c1_driver_setI2cISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_ISR(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_setBusCollisionISR@f	PTR void  size(3) Largest target is 1
		 -> i2c_busCollisionISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMRAM

    _main->_i2c_writeNBytes
    _i2c_setAddressNACKCallback->_setCallBack
    _i2c_masterWrite->_i2c_masterOperation
    _i2c_readNBytes->_i2c_open
    _i2c_open->_i2c1_driver_setBusCollisionISR
    _i2c_open->_i2c1_driver_setI2cISR
    _i2c_masterRead->_i2c_masterOperation
    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    i2_i2c_ISR->i2_do_I2C_TX
    i2_do_I2C_TX->i2_i2c1_driver_TXData
    i2_do_I2C_TX->i2_i2c1_driver_isNACK
    i2_do_I2C_SEND_ADR_WRITE->i2_i2c1_driver_TXData
    i2_do_I2C_SEND_ADR_READ->i2_i2c1_driver_TXData
    i2_wr2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_wr1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rdBlkRegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd2RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_rd1RegCompleteHandler->i2_i2c_setDataCompleteCallback
    i2_i2c_setDataCompleteCallback->i2_setCallBack

Critical Paths under _main in BANK0

    _main->_i2c_writeNBytes
    _i2c_writeNBytes->_i2c_setAddressNACKCallback
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0  220522
                                              9 BANK0     11    11      0
                 _EUSART2_Initialize
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
                     _i2c_readNBytes
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _i2c_writeNBytes                                      5     1      4  111193
                                             27 COMRAM     1     1      0
                                              5 BANK0      4     0      4
                          _i2c_close
                    _i2c_masterWrite
                           _i2c_open
         _i2c_setAddressNACKCallback
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_setAddressNACKCallback                           5     0      5    2259
                                              0 BANK0      5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (2) _i2c_masterWrite                                      0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (1) _i2c_readNBytes                                       5     1      4  108934
                                             26 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                          _i2c_close
                     _i2c_masterRead
                           _i2c_open
                      _i2c_setBuffer
 ---------------------------------------------------------------------------------
 (2) _i2c_open                                             2     2      0     310
                                             24 COMRAM     2     2      0
                   _i2c1_driver_open
     _i2c1_driver_setBusCollisionISR
              _i2c1_driver_setI2cISR
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_setI2cISR                                3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_setBusCollisionISR                       3     0      3     121
                                             21 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_masterRead                                       0     0      0  106092
                _i2c_masterOperation
 ---------------------------------------------------------------------------------
 (3) _i2c_masterOperation                                  2     2      0  106092
                                             24 COMRAM     2     2      0
                  _i2c1_driver_start
                         _i2c_poller
                 _mssp1_IRQisEnabled
 ---------------------------------------------------------------------------------
 (4) _mssp1_IRQisEnabled                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_poller                                           0     0      0  106024
                            _i2c_ISR
                 _mssp1_waitForEvent
 ---------------------------------------------------------------------------------
 (5) _mssp1_waitForEvent                                   2     0      2      90
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _i2c_ISR                                              0     0      0  105934
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX_EMPTY                                      0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_TX                                            2     2      0   26519
                                             22 COMRAM     2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_isNACK                                   1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_WRITE                                0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_ADR_READ                                 0     0      0      31
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_TXData                                   1     1      0      31
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RX                                            0     0      0   26451
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ADDRESS_NACK                               0     0      0   26451
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _wr2RegCompleteHandler                                2     0      2    5232
                                              5 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _wr1RegCompleteHandler                                2     0      2    5232
                                              5 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _returnStop                                           2     0      2     108
                                              5 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _returnReset                                          2     0      2       0
                                              5 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _rdBlkRegCompleteHandler                              2     0      2    5415
                                              5 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd2RegCompleteHandler                                2     0      2    5232
                                              5 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _rd1RegCompleteHandler                                2     0      2    5232
                                              5 BANK0      2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _i2c_setDataCompleteCallback                          5     0      5    2979
                                              0 BANK0      5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (3) _setCallBack                                          6     1      5    1117
                                             21 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (2) _i2c_setBuffer                                        4     0      4    2222
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _i2c_restartWrite                                     2     0      2       0
                                              5 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c1_driver_start                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_close                                            1     1      0      37
                                             21 COMRAM     1     1      0
                     _mssp1_clearIRQ
                   _mssp1_disableIRQ
 ---------------------------------------------------------------------------------
 (3) _mssp1_disableIRQ                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Write                                        1     1      0      22
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         18    18      0   23654
                                              3 COMRAM    18    18      0
                   Absolute function *
                _i2c_busCollisionISR *
                          i2_i2c_ISR *
 ---------------------------------------------------------------------------------
 (11) i2_i2c_ISR                                           0     0      0   23654
                    i2_do_I2C_DO_ACK *
           i2_do_I2C_DO_ADDRESS_NACK *
           i2_do_I2C_DO_NACK_RESTART *
              i2_do_I2C_DO_NACK_STOP *
                      i2_do_I2C_IDLE *
                      i2_do_I2C_RCEN *
                     i2_do_I2C_RESET *
                        i2_do_I2C_RX *
             i2_do_I2C_SEND_ADR_READ *
            i2_do_I2C_SEND_ADR_WRITE *
              i2_do_I2C_SEND_RESTART *
         i2_do_I2C_SEND_RESTART_READ *
        i2_do_I2C_SEND_RESTART_WRITE *
                 i2_do_I2C_SEND_STOP *
                        i2_do_I2C_TX *
                  i2_do_I2C_TX_EMPTY *
               i2_i2c1_driver_isNACK
                   i2_mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (12) i2_mssp1_clearIRQ                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_TX_EMPTY                                   0     0      0    5881
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
                     i2_mssp1_setIRQ
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_mssp1_setIRQ                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_TX                                         2     2      0    5949
                                              1 COMRAM     2     2      0
                   Absolute function *
         i2_do_I2C_SEND_RESTART_READ
        i2_do_I2C_SEND_RESTART_WRITE
                 i2_do_I2C_SEND_STOP
               i2_i2c1_driver_TXData
               i2_i2c1_driver_isNACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (12) i2_i2c1_driver_isNACK                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART_WRITE                         0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART_READ                          0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_SEND_ADR_WRITE                             0     0      0      31
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_SEND_ADR_READ                              0     0      0      31
               i2_i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_TXData                                1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RX                                         0     0      0    5881
                   Absolute function *
           i2_do_I2C_DO_NACK_RESTART
              i2_do_I2C_DO_NACK_STOP
            i2_i2c1_driver_getRXData
              i2_i2c1_driver_sendACK
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_getRXData                             0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_DO_NACK_STOP                               0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_DO_NACK_RESTART                            0     0      0       0
             i2_i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_sendNACK                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RESET                                      0     0      0       0
             i2_i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_resetBus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_RCEN                                       0     0      0       0
              i2_i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_startRX                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_DO_ADDRESS_NACK                            0     0      0    5881
                   Absolute function *
              i2_do_I2C_SEND_RESTART
                 i2_do_I2C_SEND_STOP
                 i2_i2c_restartWrite *
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
                      i2_returnReset *
                       i2_returnStop *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (13) i2_wr2RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_wr1RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_returnStop                                        2     0      2     108
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_returnReset                                       2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_rdBlkRegCompleteHandler                           2     0      2    1205
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_rd2RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (13) i2_rd1RegCompleteHandler                             2     0      2    1142
                                             11 COMRAM     2     0      2
                    i2_i2c_setBuffer
      i2_i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i2_i2c_setDataCompleteCallback                       5     0      5     699
                                              6 COMRAM     5     0      5
                      i2_setCallBack
 ---------------------------------------------------------------------------------
 (15) i2_setCallBack                                       6     1      5     287
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (14) i2_i2c_setBuffer                                     4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (13) i2_i2c_restartWrite                                  2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_STOP                                  0     0      0       0
                 i2_i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_stop                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_do_I2C_SEND_RESTART                               0     0      0       0
              i2_i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (14) i2_i2c1_driver_restart                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (12) i2_do_I2C_DO_ACK                                     0     0      0       0
              i2_i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (13) i2_i2c1_driver_sendACK                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_busCollisionISR                                 0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (12) _i2c1_driver_clearBusCollision                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART2_Initialize
   _EUSART2_Read
   _EUSART2_Write
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _i2c_readNBytes
     _i2c_close
       _mssp1_clearIRQ
       _mssp1_disableIRQ
     _i2c_masterRead
       _i2c_masterOperation
         _i2c1_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c1_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c1_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c1_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c1_driver_startRX
             _do_I2C_RESET *
               _i2c1_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _i2c1_driver_getRXData *
               _i2c1_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c1_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c1_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c1_driver_restart
             _do_I2C_SEND_STOP *
               _i2c1_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c1_driver_TXData *
               _i2c1_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _mssp1_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c1_driver_isNACK *
             _mssp1_clearIRQ *
           _mssp1_waitForEvent
         _mssp1_IRQisEnabled
     _i2c_open
       _i2c1_driver_open
       _i2c1_driver_setBusCollisionISR
       _i2c1_driver_setI2cISR
       _mssp1_clearIRQ
     _i2c_setBuffer
   _i2c_writeNBytes
     _i2c_close
       _mssp1_clearIRQ
       _mssp1_disableIRQ
     _i2c_masterWrite
       _i2c_masterOperation
         _i2c1_driver_start
         _i2c_poller
           _i2c_ISR
             _do_I2C_DO_ACK *
               _i2c1_driver_sendACK
             _do_I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_DO_NACK_RESTART *
               _i2c1_driver_sendNACK
             _do_I2C_DO_NACK_STOP *
               _i2c1_driver_sendNACK
             _do_I2C_IDLE *
             _do_I2C_RCEN *
               _i2c1_driver_startRX
             _do_I2C_RESET *
               _i2c1_driver_resetBus
             _do_I2C_RX *
               Absolute function(Fake) *
               _do_I2C_DO_NACK_RESTART *
                 _i2c1_driver_sendNACK
               _do_I2C_DO_NACK_STOP *
                 _i2c1_driver_sendNACK
               _i2c1_driver_getRXData *
               _i2c1_driver_sendACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_SEND_ADR_READ *
               _i2c1_driver_TXData
             _do_I2C_SEND_ADR_WRITE *
               _i2c1_driver_TXData
             _do_I2C_SEND_RESTART *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_READ *
               _i2c1_driver_restart
             _do_I2C_SEND_RESTART_WRITE *
               _i2c1_driver_restart
             _do_I2C_SEND_STOP *
               _i2c1_driver_stop
             _do_I2C_TX *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART_READ *
                 _i2c1_driver_restart
               _do_I2C_SEND_RESTART_WRITE *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c1_driver_TXData *
               _i2c1_driver_isNACK *
               _i2c_restartWrite *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _do_I2C_TX_EMPTY *
               Absolute function(Fake) *
               _do_I2C_SEND_RESTART *
                 _i2c1_driver_restart
               _do_I2C_SEND_STOP *
                 _i2c1_driver_stop
               _i2c_restartWrite *
               _mssp1_setIRQ *
               _rd1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rd2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _rdBlkRegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _returnReset *
               _returnStop *
               _wr1RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
               _wr2RegCompleteHandler *
                 _i2c_setBuffer
                 _i2c_setDataCompleteCallback
                   _setCallBack
             _i2c1_driver_isNACK *
             _mssp1_clearIRQ *
           _mssp1_waitForEvent
         _mssp1_IRQisEnabled
     _i2c_open
       _i2c1_driver_open
       _i2c1_driver_setBusCollisionISR
       _i2c1_driver_setI2cISR
       _mssp1_clearIRQ
     _i2c_setAddressNACKCallback
       _setCallBack
     _i2c_setBuffer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision
   i2_i2c_ISR *
     i2_do_I2C_DO_ACK *
       i2_i2c1_driver_sendACK
     i2_do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_DO_NACK_RESTART *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_DO_NACK_STOP *
       i2_i2c1_driver_sendNACK
     i2_do_I2C_IDLE *
     i2_do_I2C_RCEN *
       i2_i2c1_driver_startRX
     i2_do_I2C_RESET *
       i2_i2c1_driver_resetBus
     i2_do_I2C_RX *
       Absolute function(Fake) *
       i2_do_I2C_DO_NACK_RESTART *
         i2_i2c1_driver_sendNACK
       i2_do_I2C_DO_NACK_STOP *
         i2_i2c1_driver_sendNACK
       i2_i2c1_driver_getRXData *
       i2_i2c1_driver_sendACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_SEND_ADR_READ *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_ADR_WRITE *
       i2_i2c1_driver_TXData
     i2_do_I2C_SEND_RESTART *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_READ *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_RESTART_WRITE *
       i2_i2c1_driver_restart
     i2_do_I2C_SEND_STOP *
       i2_i2c1_driver_stop
     i2_do_I2C_TX *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART_READ *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_RESTART_WRITE *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c1_driver_TXData *
       i2_i2c1_driver_isNACK *
       i2_i2c_restartWrite *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       i2_do_I2C_SEND_RESTART *
         i2_i2c1_driver_restart
       i2_do_I2C_SEND_STOP *
         i2_i2c1_driver_stop
       i2_i2c_restartWrite *
       i2_mssp1_setIRQ *
       i2_rd1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rd2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_rdBlkRegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_returnReset *
       i2_returnStop *
       i2_wr1RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
       i2_wr2RegCompleteHandler *
         i2_i2c_setBuffer
         i2_i2c_setDataCompleteCallback
           i2_setCallBack
     i2_i2c1_driver_isNACK *
     i2_mssp1_clearIRQ *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      47       5       44.4%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      49       1       77.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      90       6        0.0%
DATA                 0      0      90       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 20 11:35:23 2018

                ??i2_i2c1_driver_startRX 002E                             returnReset@p 0095  
          _do_I2C_SEND_RESTART$intlevel0 0D56                              __CFG_CP$OFF 000000  
                   __size_of_do_I2C_IDLE 0010                      _do_I2C_SEND_RESTART 0D50  
                   __size_of_do_I2C_RCEN 0010                      ?i2_i2c_restartWrite 0039  
                            __CFG_LVP$ON 000000                                      l431 0752  
                                    l440 0284                                      l361 0B5A  
                                    l354 0264                                      l427 0758  
                                    l435 02C4                                      l451 0446  
                                    l428 074C                                      l436 028A  
                                    l437 0278                                      l373 0A34  
                                    l446 02EE                                      l454 0456  
                                    l630 0162                                      l463 0610  
                                    l439 027E                                      l455 044A  
                                    l375 0A46                                      l631 017E  
                                    l464 05FC                                      l457 0450  
                                    l385 0BA8                                      l537 0732  
                                    l386 0B98                                      l467 0602  
                                    l475 07A4                                      l635 01A0  
                                    l468 060A                                      l628 0144  
                                    l488 04D2                                      l597 09DE  
                                    l679 0CD8                             __CFG_CPD$OFF 000000  
        __end_ofi2_i2c1_driver_getRXData 0EA8             __size_of_i2c_masterOperation 0030  
                   _returnStop$intlevel0 0DDA          i2i2c_setDataCompleteCallback@cb 0034  
          i2c_setDataCompleteCallback@cb 0090                  __size_of_PMD_Initialize 001C  
                  __size_of_do_I2C_RESET 0014                                      prod 000FF3  
                                    tosl 000FFD                                      wreg 000FE8  
               ?i2_rd1RegCompleteHandler 0039          i2c1_driver_setBusCollisionISR@f 0043  
                            i2_do_I2C_RX 0580                              i2_do_I2C_TX 038C  
               ?i2_wr1RegCompleteHandler 0039                             __CFG_ZCD$OFF 000000  
                ??_rd2RegCompleteHandler 0049                                     l4044 015E  
                                   l4036 0134                                     l4046 0162  
                                   l4056 0190                                     l3862 06F4  
                                   l3874 09BA                                     l3884 0D8A  
                         i2_mssp1_setIRQ 0E6E                   __size_ofi2_do_I2C_IDLE 000A  
                 __size_ofi2_do_I2C_RCEN 000A                                     u2027 014C  
                                   u2037 01A8                                     _LATA 000F83  
                                   u1430 0C2A                                     _LATB 000F84  
                                   u2047 0C32                                     _LATC 000F85  
                                   _LATD 000F86                                     _LATE 000F87  
                                   u1418 0466                                     u1419 047A  
                                   u1700 0D84                                     u1428 0620  
                                   u1429 0634                                     u1368 0768  
                                   u1369 077C                                     u1490 0CC4  
                                   u1388 029A                                     u1389 02AE  
                                   u1478 07B8                                     u1479 07CC  
                                   u1498 0CC6                                     u1970 015E  
                                   _PMD0 000EE1                                     _PMD1 000EE2  
                                   _PMD2 000EE3                                     _PMD3 000EE4  
                                   _PMD4 000EE5                                     _PMD5 000EE6  
                   ?_do_I2C_SEND_RESTART 002E                                     _WPUA 000F10  
                                   _WPUB 000F18                                     _WPUC 000F20  
                                   _WPUD 000F25                                     _WPUE 000F2D  
                   ??i2_i2c_restartWrite 003B                  ??_wr2RegCompleteHandler 0049  
                          __CFG_FCMEN$ON 000000                            _EUSART2_Write 0D88  
      __size_of_do_I2C_SEND_RESTART_READ 000E                     __end_ofi2_returnStop 0EB8  
              ?_do_I2C_SEND_RESTART_READ 002E                                     _main 00E2  
              __size_of_do_I2C_SEND_STOP 000E                   __size_of_do_I2C_DO_ACK 000E  
                          ?_EUSART2_Read 002E                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   fsr0l 000FE9                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 004A                    ?_do_I2C_SEND_ADR_READ 002E  
                                   prodh 000FF4                                     prodl 000FF3  
        ??_i2c1_driver_clearBusCollision 002E                 __size_of_i2c_writeNBytes 004C  
                                   start 00DE                            _i2c_setBuffer 0BAE  
                          __CFG_CSWEN$ON 000000                          __end_of_i2c_ISR 07D0  
                           ___param_bank 000000         __size_of_rdBlkRegCompleteHandler 004E  
                          __CFG_SCANE$ON 000000                 ??_do_I2C_DO_NACK_RESTART 0043  
              __size_of_mssp1_disableIRQ 0006                             _do_I2C_RESET 0CA4  
         __size_of_OSCILLATOR_Initialize 0018              i2c_setAddressNACKCallback@p 0093  
          __end_of_OSCILLATOR_Initialize 0BDE                 __end_of_i2c1_driver_open 0C24  
                                  ?_main 002E                           _i2c_readNBytes 09B8  
               __size_ofi2_i2c_setBuffer 0018                 __end_of_i2c1_driver_stop 0E98  
                          __CFG_WDTE$OFF 000000               __end_of_i2c1_driver_TXData 0E0A  
                         __CFG_DEBUG$OFF 000000                  __size_ofi2_do_I2C_RESET 000E  
                                  i2l431 07DE                                    i2l440 03A2  
                                  i2l273 0072                                    i2l427 07E4  
                                  i2l435 03E2                                    i2l451 05A8  
                                  i2l428 07D8                                    i2l436 03A8  
                                  i2l437 0396                                    i2l446 040C  
                                  i2l454 05B8                                    i2l463 0666  
                                  i2l439 039C                                    i2l455 05AC  
                                  i2l464 0652                                    i2l457 05B2  
                                  i2l467 0658                                    i2l475 086E  
                                  i2l468 0660                                    i2l488 054A  
                                  _OSCEN 000EDC                                    _TRISA 000F88  
                                  _TRISB 000F89                                    _TRISC 000F8A  
                                  _TRISD 000F8B                                    _TRISE 000F8C  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                          __CFG_WRT4$OFF 000000                            __CFG_WRT5$OFF 000000  
                          __CFG_WRT6$OFF 000000                            __CFG_WRT7$OFF 000000  
                         __CFG_EBTR0$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                            i2c_open@ret 0047                           __CFG_EBTR4$OFF 000000  
                         __CFG_EBTR5$OFF 000000                           __CFG_EBTR6$OFF 000000  
                         __CFG_EBTR7$OFF 000000                           _i2c_masterRead 0DFA  
                          __CFG_WRTB$OFF 000000                    __end_ofi2_returnReset 0EB4  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                 __end_ofi2_mssp1_setIRQ 0E74                           __CFG_EBTRB$OFF 000000  
             __end_of_i2c1_driver_isNACK 0C50                       __size_ofi2_i2c_ISR 0040  
             ?_do_I2C_SEND_RESTART_WRITE 002E                       __CFG_MCLRE$EXTMCLR 000000  
                  ??_do_I2C_SEND_RESTART 0043                                    main@i 009F  
                          i2returnStop@p 0039   __end_of_i2c1_driver_setBusCollisionISR 0D18  
__size_of_i2c1_driver_setBusCollisionISR 000E           _i2c1_driver_setBusCollisionISR 0D0A  
                         ?_EUSART2_Write 002E                                    pclath 000FFA  
                                  tablat 000FF5                  __size_of_mssp1_clearIRQ 0006  
                         ??_EUSART2_Read 0043                   ?_do_I2C_SEND_ADR_WRITE 002E  
                                  status 000FD8                                    wtemp6 004B  
        __size_ofi2_i2c1_driver_sendNACK 0006                           ?_i2c_setBuffer 0043  
                           ?_setCallBack 0043          __size_ofi2_i2c1_driver_resetBus 0002  
                          _fsmStateTable 0060                          __initialization 089A  
                             _i2c_poller 0B96                               _i2c_status 0001  
                           __end_of_main 01BA                            i2_do_I2C_IDLE 0DE8  
                       i2setCallBack@idx 0033                            i2_do_I2C_RCEN 0DDE  
                       __end_of_i2c_open 0268                         i2_do_I2C_TX$1036 002F  
                 __end_of_i2c_readNBytes 09EA              ?_INTERRUPT_InterruptManager 002E  
                  i2i2c_setBuffer@buffer 002E                         i2_mssp1_clearIRQ 0E68  
       __end_ofi2_do_I2C_DO_ADDRESS_NACK 0816          __end_ofi2_rd1RegCompleteHandler 0AAA  
                          setCallBack@cb 0043                            _do_I2C_DO_ACK 0D34  
                                 ??_main 0099                        ?_i2c_restartWrite 0095  
          __size_of_i2c1_driver_sendNACK 0006                            __activetblptr 000003  
        __end_ofi2_wr1RegCompleteHandler 0ADA                             i2c_close@ret 0043  
                 __end_of_i2c_masterRead 0E02                       ??_i2c_restartWrite 0049  
          __size_of_i2c1_driver_resetBus 0002                  ?_do_I2C_DO_ADDRESS_NACK 002E  
                        ?i2_mssp1_setIRQ 002E       __end_ofi2_do_I2C_SEND_RESTART_READ 0E42  
             i2_do_I2C_SEND_RESTART_READ 0E3A               __end_of_EUSART2_Initialize 0BF6  
                                 _ANSELA 000F11                                   _ANSELB 000F19  
                                 _ANSELC 000F21                                   _ANSELD 000F26  
                                 _ANSELE 000F2E                 __size_ofi2_do_I2C_DO_ACK 0008  
                                 _RC2REG 000E99                                   _RC2STA 000E9D  
                                 _RC3PPS 000EFA                                   _RC4PPS 000EFB  
                                 _ODCONA 000F0F                                   _ODCONB 000F17  
                                 _ODCONC 000F1F                                   _ODCOND 000F24  
                                 _ODCONE 000F2C                                   _RD7PPS 000F06  
                         __CFG_WDTCCS$SC 000000                       __size_of_i2c_close 001C  
                                 _OSCFRQ 000EDE                  i2_do_I2C_SEND_ADR_WRITE 0D96  
                 ??_do_I2C_SEND_ADR_READ 0044                                   _TX2REG 000E9A  
                                 _TX2STA 000E9E                 rdBlkRegCompleteHandler@p 0095  
                              ??_i2c_ISR 0046                           __CFG_PWRTE$OFF 000000  
                ??i2_do_I2C_SEND_RESTART 002E                           __CFG_XINST$OFF 000000  
       __size_ofi2_i2c1_driver_getRXData 0004                    _i2c1_driver_getRXData 0E8C  
              __CFG_RSTOSC$HFINTOSC_1MHZ 000000                       i2_i2c1_driver_stop 0EB8  
                    _do_I2C_RX$intlevel0 041E              __end_of_do_I2C_DO_NACK_STOP 0D34  
    __end_of_i2c_setDataCompleteCallback 0B42           ?i2_i2c_setDataCompleteCallback 0034  
            _i2c_setDataCompleteCallback 0B26                           ?i2_do_I2C_IDLE 002E  
                        _i2c_masterWrite 0DF2                           ?i2_do_I2C_RCEN 002E  
  __end_of_i2c1_driver_clearBusCollision 0E8C   __size_of_i2c1_driver_clearBusCollision 0006  
          _i2c1_driver_clearBusCollision 0E86                           __CFG_STVREN$ON 000000  
                      __end_ofi2_i2c_ISR 089A          __size_of_do_I2C_DO_NACK_RESTART 000E  
                      ??_i2c_writeNBytes 0049                          ?_i2c_readNBytes 0090  
                         i2returnReset@p 0039                                   clear_0 08C8  
                         ?_do_I2C_DO_ACK 002E                      ?i2_i2c1_driver_stop 002E  
         i2i2c_setDataCompleteCallback@p 0037                   i2_i2c1_driver_sendNACK 0E74  
                 i2c1_driver_setI2cISR@f 0043              __end_of_i2c1_driver_sendACK 0E5C  
                         _PMD_Initialize 0B5E           __end_of_do_I2C_DO_ADDRESS_NACK 078A  
                        ?_i2c_masterRead 002E                   i2_i2c1_driver_resetBus 0EC2  
            ?_i2c_setAddressNACKCallback 0090     __size_ofi2_do_I2C_SEND_RESTART_WRITE 0008  
            __end_of_i2c1_driver_restart 0E9C                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                           ?_returnReset 0095            _do_I2C_DO_NACK_STOP$intlevel0 0D2C  
                  _i2c1_driver_setI2cISR 0CFC              __end_of_i2c1_driver_startRX 0E94  
                  __size_ofi2_returnStop 0004                        ??i2_i2c_setBuffer 0032  
                        ??_EUSART2_Write 0043           __size_ofi2_do_I2C_DO_NACK_STOP 0008  
          __size_of_INTERRUPT_Initialize 0004            __end_ofi2_do_I2C_DO_NACK_STOP 0E1A  
           __size_of_EUSART2_is_rx_ready 000E                        _SYSTEM_Initialize 0C50  
                             __accesstop 0060                     ??i2_i2c1_driver_stop 002E  
                __end_of__initialization 08CE                          ??_i2c_setBuffer 0047  
         _do_I2C_SEND_ADR_READ$intlevel0 0C96                         _do_I2C_SEND_STOP 0D42  
                     __size_of_do_I2C_RX 0078                       __size_of_do_I2C_TX 0092  
                     ?_SYSTEM_Initialize 002E                            ___rparam_used 000001  
             __end_of_mssp1_IRQisEnabled 0CCA        _rdBlkRegCompleteHandler$intlevel0 06AA  
                    _i2c_masterOperation 0A1A                 __size_of_do_I2C_TX_EMPTY 005C  
             ?i2_rdBlkRegCompleteHandler 0039                  _rdBlkRegCompleteHandler 06A4  
         __size_ofi2_i2c1_driver_sendACK 0006               __end_of_mssp1_waitForEvent 0C3A  
          __end_ofi2_i2c1_driver_sendACK 0E80                              ?_i2c_poller 002E  
                         __pcstackCOMRAM 002E                      _do_I2C_TX$intlevel0 026E  
                           __pidataBANK0 09EA                      ??_SYSTEM_Initialize 0043  
         __size_ofi2_i2c1_driver_restart 0004            __end_ofi2_i2c1_driver_restart 0EC0  
                       _mssp1_disableIRQ 0E5C           __size_ofi2_i2c1_driver_startRX 0004  
          __end_ofi2_i2c1_driver_startRX 0EAC                   __end_of_PMD_Initialize 0B7A  
                      __end_of_i2c_close 0B5E                             i2_returnStop 0EB4  
                   __end_of_EUSART2_Read 0CDC                           i2_do_I2C_RESET 0DB2  
                   ?_i2c_masterOperation 002E                 i2_do_I2C_DO_ADDRESS_NACK 07D0  
                           ?i2_do_I2C_RX 002E                             ?i2_do_I2C_TX 002E  
                         main@gamerScore 009A        __size_ofi2_do_I2C_DO_NACK_RESTART 0008  
               i2rd2RegCompleteHandler@p 0039                           setCallBack@idx 0048  
              ?i2_do_I2C_DO_NACK_RESTART 002E                   _do_I2C_DO_NACK_RESTART 0D18  
                         _do_I2C_TX$1036 0044                __end_of_SYSTEM_Initialize 0C66  
              ??i2_do_I2C_SEND_ADR_WRITE 002F               __end_ofi2_do_I2C_SEND_STOP 0E2A  
                         _mssp1_clearIRQ 0E62                               __pbssBANK0 00A4  
          __size_ofi2_i2c1_driver_TXData 0008           __size_of_rd2RegCompleteHandler 0038  
                              ?_i2c_open 002E            __end_of_rd2RegCompleteHandler 0910  
         __size_of_wr2RegCompleteHandler 0038            __end_of_wr2RegCompleteHandler 09B8  
                __end_of_i2c_masterWrite 0DFA         __size_ofi2_rd1RegCompleteHandler 0030  
                  _rd1RegCompleteHandler 0910                   ?_i2c1_driver_getRXData 002E  
                      ??i2_do_I2C_DO_ACK 002E                 i2wr2RegCompleteHandler@p 0039  
          __size_ofi2_i2c1_driver_isNACK 0016                    _do_I2C_IDLE$intlevel0 0CF2  
                      i2_do_I2C_TX_EMPTY 064E         __size_ofi2_wr1RegCompleteHandler 0030  
                        ??i2_do_I2C_IDLE 002E                    _wr1RegCompleteHandler 0948  
                         _SSP1DATPPSbits 000EB8             __size_of_i2c_busCollisionISR 0006  
                        ??i2_do_I2C_RCEN 002E          _wr1RegCompleteHandler$intlevel0 094E  
        _rd1RegCompleteHandler$intlevel0 0916                            ??_do_I2C_IDLE 0043  
                   __size_of_setCallBack 0078                            ??_do_I2C_RCEN 0043  
      __end_ofi2_rdBlkRegCompleteHandler 085A                    i2c_readNBytes@address 0048  
                     ?i2_do_I2C_TX_EMPTY 002E                          __CFG_PPS1WAY$ON 000000  
                        ??_do_I2C_DO_ACK 0043                   __end_ofi2_do_I2C_RESET 0DC0  
                    i2c_setBuffer@buffer 0043                           _SSP1CLKPPSbits 000EB7  
                        ?_PMD_Initialize 002E           ?_i2c1_driver_clearBusCollision 002E  
                    ??i2_do_I2C_TX_EMPTY 002E                    ??_i2c_masterOperation 0046  
                      ?_i2c1_driver_open 002E                        __end_of_do_I2C_RX 0490  
                      __end_of_do_I2C_TX 02FA                 ??i2_do_I2C_SEND_ADR_READ 002F  
                      ?_i2c1_driver_stop 002E                   ?_i2c1_driver_setI2cISR 0043  
                                _SP2BRGH 000E9C                                  _SP2BRGL 000E9B  
                     ??_i2c1_driver_open 0043                 ?i2_rd2RegCompleteHandler 0039  
                     ??_i2c1_driver_stop 0043                                  _OSCCON1 000ED8  
                                _OSCCON3 000EDA                            ?_mssp1_setIRQ 002E  
                 __size_ofi2_setCallBack 0078                                  _OSCTUNE 000EDD  
                                _SSP1ADD 000F93                 ?i2_wr2RegCompleteHandler 0039  
                                _SSP1BUF 000F92                   __end_of_mssp1_clearIRQ 0E68  
                                _SSP1MSK 000F94                      __size_of_i2c_poller 0018  
                ??_do_I2C_SEND_ADR_WRITE 0044      _do_I2C_SEND_RESTART_WRITE$intlevel0 0D64  
            ??_do_I2C_SEND_RESTART_WRITE 0043                       _i2c1_driver_TXData 0E02  
                             ??_i2c_open 0046              __size_ofi2_i2c_restartWrite 0004  
               __end_ofi2_mssp1_clearIRQ 0E6E                       _i2c1_driver_i2cISR 00A4  
                                _i2c_ISR 078A                ??_rdBlkRegCompleteHandler 0049  
              __end_ofi2_do_I2C_TX_EMPTY 06A4                  i2_i2c1_driver_getRXData 0EA4  
                                __Hparam 0000                    _returnReset$intlevel0 0DD0  
                  _do_I2C_RCEN$intlevel0 0CE2                       _i2c1_driver_isNACK 0C3A  
                    ?_i2c1_driver_TXData 002E                                  __Lparam 0000  
       _do_I2C_DO_ADDRESS_NACK$intlevel0 0744      __size_of_i2c_setAddressNACKCallback 001C  
                      ??_do_I2C_TX_EMPTY 0043                      ?_i2c1_driver_isNACK 002E  
                        ?i2_do_I2C_RESET 002E                                  __pcinit 089A  
                                __ramtop 0F00                   i2c_writeNBytes@address 0049  
                     i2c_readNBytes@data 0090                                  __ptext0 00E2  
                                __ptext1 06F2                                  __ptext2 0B0A  
                                __ptext3 0DF2                                  __ptext4 09B8  
                                __ptext5 01BA                                  __ptext6 0CFC  
                                __ptext7 0D0A                                  __ptext8 0C0E  
                                __ptext9 0DFA                      __end_of_do_I2C_IDLE 0CFC  
                    __end_of_do_I2C_RCEN 0CEC                         ??i2_mssp1_setIRQ 002E  
                  _OSCILLATOR_Initialize 0BC6              __end_of_do_I2C_SEND_RESTART 0D5E  
                         ??_mssp1_setIRQ 0043                     ??_i2c1_driver_TXData 0043  
               ??_PIN_MANAGER_Initialize 0043                   i2c_masterOperation@ret 0047  
                        ?_mssp1_clearIRQ 002E               _do_I2C_SEND_STOP$intlevel0 0D48  
            ?i2_do_I2C_SEND_RESTART_READ 002E                 _do_I2C_SEND_RESTART_READ 0D6C  
             __size_of_SYSTEM_Initialize 0016                                  main@rec 00A3  
                      main@photonAddress 009B                     __size_of_returnReset 000A  
                   end_of_initialization 08CE                     ??_i2c1_driver_isNACK 0043  
              __size_of_i2c_restartWrite 000A             __end_of_i2c1_driver_sendNACK 0E56  
                 ?_rd1RegCompleteHandler 0095                          _i2c_writeNBytes 06F2  
                       ?_i2c_masterWrite 002E                   ?_wr1RegCompleteHandler 0095  
           __end_of_i2c1_driver_resetBus 0EC2                       _EUSART2_Initialize 0BDE  
                       ??_i2c_readNBytes 0048                            i2_setCallBack 0508  
         __size_ofi2_do_I2C_SEND_RESTART 0008            __end_ofi2_do_I2C_SEND_RESTART 0E32  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
                  __size_of_EUSART2_Read 0012                   __size_ofi2_returnReset 0004  
           ?i2_do_I2C_SEND_RESTART_WRITE 002E                _do_I2C_SEND_RESTART_WRITE 0D5E  
                ?i2_i2c1_driver_sendNACK 002E                         ??_i2c_masterRead 0048  
                  __CFG_WDTCPS$WDTCPS_31 000000                      ?_EUSART2_Initialize 002E  
                    _EUSART2_is_rx_ready 0D7A                          i2_i2c_setBuffer 0BF6  
                ?i2_i2c1_driver_resetBus 002E          __end_ofi2_rd2RegCompleteHandler 0A7A  
                             _returnStop 0DD4          __end_of_rdBlkRegCompleteHandler 06F2  
               __end_of_do_I2C_SEND_STOP 0D50                                i2_i2c_ISR 085A  
        __end_ofi2_wr2RegCompleteHandler 0B0A          __size_ofi2_do_I2C_SEND_ADR_READ 000E  
   __size_of_i2c_setDataCompleteCallback 001C          ??i2_i2c_setDataCompleteCallback 0039  
                             main@i_1261 00A1                              returnStop@p 0095  
                       __CFG_FEXTOSC$OFF 000000                 __end_of_mssp1_disableIRQ 0E62  
                   __size_ofi2_do_I2C_RX 0072                     __size_ofi2_do_I2C_TX 008C  
                   ??_EUSART2_Initialize 0043                     ?_EUSART2_is_rx_ready 002E  
           i2c_setDataCompleteCallback@p 0093                ??i2_i2c1_driver_getRXData 002E  
                i2_rd1RegCompleteHandler 0A7A               __size_ofi2_do_I2C_TX_EMPTY 0056  
                           _EUSART2_Read 0CCA                  i2_wr1RegCompleteHandler 0AAA  
          __size_of_do_I2C_SEND_ADR_READ 0014                           ?i2_setCallBack 002E  
                           ??_i2c_poller 0046              ??i2_rdBlkRegCompleteHandler 003B  
         __end_ofi2_i2c1_driver_sendNACK 0E7A                              _do_I2C_IDLE 0CEC  
                            _do_I2C_RCEN 0CDC             __end_of_INTERRUPT_Initialize 0EA4  
         __end_ofi2_i2c1_driver_resetBus 0EC4               ??i2_do_I2C_DO_ADDRESS_NACK 002E  
       __end_ofi2_do_I2C_DO_NACK_RESTART 0E12            ??i2_do_I2C_SEND_RESTART_WRITE 002E  
                     _mssp1_IRQisEnabled 0CB8                   ?_OSCILLATOR_Initialize 002E  
                             ?i2_i2c_ISR 002E             __size_of_do_I2C_DO_NACK_STOP 000E  
                     _mssp1_waitForEvent 0C24                  ?_do_I2C_DO_NACK_RESTART 002E  
                    start_initialization 089A                                _i2c_close 0B42  
                    _i2c_busCollisionISR 0E80          __size_of_PIN_MANAGER_Initialize 0092  
                    ?_mssp1_IRQisEnabled 002E                          i2setCallBack@cb 002E  
                __end_of_i2c_writeNBytes 073E                          i2_do_I2C_DO_ACK 0E1A  
                          i2_returnReset 0EB0                      ?_mssp1_waitForEvent 0043  
                           setCallBack@p 0046                       __end_of_i2c_poller 0BAE  
                  ??_EUSART2_is_rx_ready 0043             __size_of_i2c1_driver_sendACK 0006  
                        i2c_open@address 0046                    __end_of_EUSART2_Write 0D96  
                i2c_setBuffer@bufferSize 0045                  ??_i2c1_driver_getRXData 0043  
                 rd1RegCompleteHandler@p 0095             __size_of_i2c1_driver_restart 0004  
            __size_ofi2_i2c1_driver_stop 0004             __size_of_i2c1_driver_startRX 0004  
                  i2_do_I2C_DO_NACK_STOP 0E12                   i2_do_I2C_SEND_ADR_READ 0DA4  
                  __end_of_i2c_setBuffer 0BC6                        __size_of_i2c_open 00AE  
                   ?_i2c_busCollisionISR 002E                         __CFG_LPBOREN$OFF 000000  
                   __end_of_mssp1_setIRQ 0E50                  __end_ofi2_i2c_setBuffer 0C0E  
                   ??_mssp1_IRQisEnabled 0043                       i2_do_I2C_SEND_STOP 0E22  
                       ??_PMD_Initialize 0043                     ??_mssp1_waitForEvent 0045  
                 wr1RegCompleteHandler@p 0095                    i2_i2c1_driver_sendACK 0E7A  
                          ?_do_I2C_RESET 002E             __end_ofi2_i2c1_driver_TXData 0E4A  
                            __pdataBANK0 0060                    i2i2c1_driver_TXData@d 002E  
              _do_I2C_TX_EMPTY$intlevel0 05F8      __size_ofi2_do_I2C_SEND_RESTART_READ 0008  
                  i2_i2c1_driver_restart 0EBC                              ?_returnStop 0095  
                    ?i2_do_I2C_SEND_STOP 002E                  ??_i2c1_driver_setI2cISR 0046  
                  i2_i2c1_driver_startRX 0EA8                      i2i2c_restartWrite@p 0039  
         __end_of_do_I2C_DO_NACK_RESTART 0D26                     _i2c1_driver_sendNACK 0E50  
           __end_ofi2_i2c1_driver_isNACK 0C7C                              __pbssCOMRAM 0001  
                             ?_i2c_close 002E                     _i2c1_driver_resetBus 0EC0  
              i2_rdBlkRegCompleteHandler 0816                            __pcstackBANK0 0090  
                         ?i2_returnReset 0039                                _do_I2C_RX 0418  
                              _do_I2C_TX 0268                      EUSART2_Write@txData 0043  
              ??i2_rd1RegCompleteHandler 003B           __size_of_do_I2C_SEND_ADR_WRITE 0014  
  __end_ofi2_i2c_setDataCompleteCallback 0B96   __size_ofi2_i2c_setDataCompleteCallback 001C  
          i2_i2c_setDataCompleteCallback 0B7A            __end_of_do_I2C_SEND_ADR_WRITE 0C90  
              ??i2_wr1RegCompleteHandler 003B                         _i2c_restartWrite 0DC0  
                   ??i2_do_I2C_SEND_STOP 002E               _i2c_restartWrite$intlevel0 0DC6  
              __size_of_i2c1_driver_open 0016                        ?i2_mssp1_clearIRQ 002E  
              __size_of_i2c1_driver_stop 0004                          ??i2_setCallBack 0033  
                               ?_i2c_ISR 002E          _do_I2C_SEND_ADR_WRITE$intlevel0 0C82  
                        _do_I2C_TX_EMPTY 05F2                            ??_setCallBack 0048  
       __size_ofi2_rd2RegCompleteHandler 0030                    _rd2RegCompleteHandler 08D8  
                     ??i2_mssp1_clearIRQ 002E                    ??_i2c_busCollisionISR 002E  
       __size_ofi2_wr2RegCompleteHandler 0030                   _PIN_MANAGER_Initialize 02FA  
                  _wr2RegCompleteHandler 0980                         ??i2_do_I2C_RESET 002E  
                              __pintcode 0008                    __end_ofi2_do_I2C_IDLE 0DF2  
                  __end_ofi2_do_I2C_RCEN 0DE8                           ??_do_I2C_RESET 0043  
                              __ptext100 0508                                __ptext101 0BF6  
                              __ptext102 0EB8                                __ptext103 0EBC  
                              __ptext104 0E7A                                __ptext105 0E80  
                              __ptext106 0E86                                __ptext107 0000  
            __end_of_i2c_masterOperation 0A4A                 ??_do_I2C_DO_ADDRESS_NACK 0043  
            _i2c1_driver_busCollisionISR 002B                    __end_of_do_I2C_DO_ACK 0D42  
           ??_INTERRUPT_InterruptManager 0031               ??_do_I2C_SEND_RESTART_READ 0043  
                  ?_i2c1_driver_sendNACK 002E                              ??i2_i2c_ISR 0031  
                __end_ofi2_do_I2C_DO_ACK 0E22                         ??_mssp1_clearIRQ 0043  
                               _BAUD2CON 000E9F                 i2_do_I2C_DO_NACK_RESTART 0E0A  
                  ?_i2c1_driver_resetBus 002E       __size_of_do_I2C_SEND_RESTART_WRITE 000E  
               ?i2_do_I2C_SEND_ADR_WRITE 002E                               ?_do_I2C_RX 002E  
                             ?_do_I2C_TX 002E                        _i2c1_driver_start 0E9C  
                       ?_i2c_writeNBytes 0095               __end_ofi2_i2c_restartWrite 0EB0  
                ??_rd1RegCompleteHandler 0049                        i2c_readNBytes@len 0092  
                   _INTERRUPT_Initialize 0EA0                        _i2c_ISR$intlevel0 0790  
                     ?_i2c1_driver_start 002E                  ??_wr1RegCompleteHandler 0049  
                 ?i2_do_I2C_DO_NACK_STOP 002E                                 _LATAbits 000F83  
                    __size_of_returnStop 000A                                 _PIE3bits 000EC5  
                    __CFG_BORV$VBOR_2P45 000000                      ??_i2c1_driver_start 0043  
    __size_of_INTERRUPT_InterruptManager 00D6                                 i2u160_48 03B8  
                               i2u160_49 03CC                                 i2u163_48 05C8  
                               i2u163_49 05DC                                 i2u164_48 0676  
                               i2u164_49 068A                                 i2u158_48 07F4  
                               i2u182_48 007C                                 i2u158_49 0808  
                               i2u182_49 0092                                 i2u175_48 0882  
                               i2u175_49 0896                                 i2u179_48 0062  
                               _PIR3bits 000ECD                         ?i2_i2c_setBuffer 002E  
                 ?i2_i2c1_driver_sendACK 002E                                 _SSP1CON1 000F96  
                               _SSP1CON2 000F97             ?_i2c_setDataCompleteCallback 0090  
                               _SSP1STAT 000F95                      __end_of_setCallBack 0508  
                 ?i2_i2c1_driver_restart 002E                   ?i2_i2c1_driver_startRX 002E  
           i2c_setAddressNACKCallback@cb 0090                        ?_do_I2C_SEND_STOP 002E  
                        ??i2_returnReset 003B                              ??_i2c_close 0043  
              __end_of_i2c1_driver_start 0EA0                            ??_returnReset 0049  
                     ??_do_I2C_SEND_STOP 0043              __size_of_i2c1_driver_TXData 0008  
           ??_i2c_setAddressNACKCallback 0049        __end_of_do_I2C_SEND_RESTART_WRITE 0D6C  
                __end_of_do_I2C_TX_EMPTY 064E                                copy_data0 08AE  
                  ?_INTERRUPT_Initialize 002E                 ?_rdBlkRegCompleteHandler 0095  
                      ?_mssp1_disableIRQ 002E             __size_of_do_I2C_SEND_RESTART 000E  
            __size_of_i2c1_driver_isNACK 0016                     i2_i2c1_driver_TXData 0E42  
                _do_I2C_DO_ACK$intlevel0 0D3A                                 _i2c_open 01BA  
                  __size_of_mssp1_setIRQ 0006                           i2setCallBack@p 0031  
                     ??_mssp1_disableIRQ 0043                   ?_rd2RegCompleteHandler 0095  
                    _do_I2C_DO_NACK_STOP 0D26                         __size_of_i2c_ISR 0046  
                 ?_wr2RegCompleteHandler 0095          _wr2RegCompleteHandler$intlevel0 0986  
        _rd2RegCompleteHandler$intlevel0 08DE                                 __Hrparam 0000  
                   i2_i2c1_driver_isNACK 0C66                                 __Lrparam 0000  
                     __CFG_BOREN$SBORDIS 000000                      i2c_writeNBytes@data 0095  
                           ?_do_I2C_IDLE 002E                             ?_do_I2C_RCEN 002E  
                ??_OSCILLATOR_Initialize 0043                      _i2c1_driver_sendACK 0E56  
               __size_of_i2c_masterWrite 0008                    i2_do_I2C_SEND_RESTART 0E2A  
        __size_of_do_I2C_DO_ADDRESS_NACK 004C                      i2c1_driver_TXData@d 0043  
                 ??_i2c1_driver_sendNACK 0043            ??_i2c_setDataCompleteCallback 0049  
        __end_ofi2_do_I2C_SEND_ADR_WRITE 0DA4         ??_i2c1_driver_setBusCollisionISR 0046  
        ?_i2c1_driver_setBusCollisionISR 0043       _do_I2C_SEND_RESTART_READ$intlevel0 0D72  
                    _i2c1_driver_restart 0E98                            ?i2_returnStop 0039  
                   ?_do_I2C_DO_NACK_STOP 002E                      _i2c1_driver_startRX 0E90  
           __end_of_do_I2C_SEND_ADR_READ 0CA4                   ??_i2c1_driver_resetBus 0043  
                       ?i2_do_I2C_DO_ACK 002E                            ??i2_do_I2C_RX 002E  
                          ??i2_do_I2C_TX 002F                             _mssp1_setIRQ 0E4A  
                            ??_do_I2C_RX 0043                              ??_do_I2C_TX 0044  
                               __ptext10 0A1A                                 __ptext11 0CB8  
                               __ptext20 0D34                                 __ptext12 0B96  
                               __ptext21 0CDC                                 __ptext13 0C24  
                               __ptext30 05F2                                 __ptext22 0C7C  
                               __ptext14 078A                                 __ptext31 0E4A  
                               __ptext23 0C90                                 __ptext15 0418  
                               __ptext40 0910                                 __ptext32 0C3A  
                               __ptext24 0D42                                 __ptext16 0268  
                               __ptext41 0948                                 __ptext33 0E02  
                               __ptext25 0D50                                 __ptext17 073E  
                               __ptext50 0E98                                 __ptext42 0DC0  
                               __ptext34 0E8C                                 __ptext26 0D5E  
                               __ptext18 0D18                                 __ptext51 0E56  
                               __ptext43 0DCA                                 __ptext35 0E50  
                               __ptext27 0D6C                                 __ptext19 0D26  
                               __ptext60 0EA0                                 __ptext52 0E9C  
                               __ptext44 0DD4                                 __ptext36 0EC0  
                               __ptext28 0CEC                                 __ptext61 0BDE  
                               __ptext53 0B42                                 __ptext45 0980  
                               __ptext37 0E90                                 __ptext29 0CA4  
                               __ptext70 07D0                                 __ptext62 0D7A  
                               __ptext54 0E5C                                 __ptext46 0B26  
                               __ptext38 06A4                                 __ptext71 0E0A  
                               __ptext63 0D88                                 __ptext55 0E62  
                               __ptext47 0490                                 __ptext39 08D8  
                               __ptext80 0E3A                                 __ptext72 0E12  
                               __ptext64 0CCA                                 __ptext56 0C50  
                               __ptext48 0BAE                                 __ptext81 0DE8  
                               __ptext73 0E1A                                 __ptext57 0B5E  
                               __ptext49 0E94                                 __ptext90 0EA8  
                               __ptext82 0DB2                                 __ptext74 0DDE  
                               __ptext66 085A                                 __ptext58 02FA  
                               __ptext91 0816                                 __ptext83 064E  
                               __ptext75 0D96                                 __ptext67 0E68  
                               __ptext59 0BC6                                 __ptext92 0A4A  
                               __ptext84 0E6E                                 __ptext76 0DA4  
                               __ptext68 0580                                 __ptext93 0A7A  
                               __ptext85 0C66                                 __ptext77 0E22  
                               __ptext69 038C                                 __ptext94 0AAA  
                               __ptext86 0E42                                 __ptext78 0E2A  
                               __ptext95 0EAC                                 __ptext87 0EA4  
                               __ptext79 0E32                                 __ptext96 0EB0  
                               __ptext88 0E74                                 __ptext97 0EB4  
                               __ptext89 0EC2                                 __ptext98 0ADA  
                               __ptext99 0B7A                             _SSP1CON1bits 000F96  
                           _SSP1CON2bits 000F97                     ?_i2c1_driver_sendACK 002E  
                   __end_of_do_I2C_RESET 0CB8                    ?i2_i2c1_driver_TXData 002E  
                ?i2_do_I2C_SEND_ADR_READ 002E                  __size_ofi2_mssp1_setIRQ 0006  
            __size_of_EUSART2_Initialize 0018                     ?_i2c1_driver_restart 002E  
                    __end_of_returnReset 0DD4                         _i2c1_driver_open 0C0E  
     __size_ofi2_rdBlkRegCompleteHandler 0044                  i2_rd2RegCompleteHandler 0A4A  
                       _i2c1_driver_stop 0E94                            __size_of_main 00D8  
                   ?_i2c1_driver_startRX 002E           __size_of_i2c1_driver_getRXData 0004  
          __end_of_i2c1_driver_getRXData 0E90                  i2_wr2RegCompleteHandler 0ADA  
                   __CFG_WDTCWS$WDTCWS_7 000000                              _setCallBack 0490  
                  ?i2_i2c1_driver_isNACK 002E                  i2c_masterOperation@read 0046  
                             _RC2STAbits 000E9D                                 int$flags 004A  
     __end_of_INTERRUPT_InterruptManager 00DE               _INTERRUPT_InterruptManager 0008  
                               main@addr 009E                                 main@data 009C  
                           _SSP1STATbits 000F95                           ??i2_returnStop 003B  
       __end_of_do_I2C_SEND_RESTART_READ 0D7A                             ??_returnStop 0049  
               __end_of_i2c_restartWrite 0DCA                    ??_do_I2C_DO_NACK_STOP 0043  
                __size_of_i2c_readNBytes 0032                mssp1_waitForEvent@timeout 0043  
         __size_of_i2c1_driver_setI2cISR 000E            __end_of_i2c1_driver_setI2cISR 0D0A  
                             _INTCONbits 000FF2              __end_of_EUSART2_is_rx_ready 0D88  
             __size_of_i2c1_driver_start 0004                       i2c_writeNBytes@len 0097  
                 ??_INTERRUPT_Initialize 0043                 ?i2_i2c1_driver_getRXData 002E  
                __size_of_i2c_masterRead 0008           __end_ofi2_do_I2C_SEND_ADR_READ 0DB2  
                  ??_i2c1_driver_sendACK 0043                         ?_do_I2C_TX_EMPTY 002E  
      __size_ofi2_do_I2C_DO_ADDRESS_NACK 0046               __end_ofi2_i2c1_driver_stop 0EBC  
              ?i2_do_I2C_DO_ADDRESS_NACK 002E                   _do_I2C_DO_ADDRESS_NACK 073E  
                               intlevel2 0000                   _do_I2C_RESET$intlevel0 0CAA  
                  ??_i2c1_driver_restart 0043                   rd2RegCompleteHandler@p 0095  
                  ??_i2c1_driver_startRX 0043               i2rdBlkRegCompleteHandler@p 0039  
                    __end_ofi2_do_I2C_RX 05F2                      __end_ofi2_do_I2C_TX 0418  
                ?_PIN_MANAGER_Initialize 002E                        i2c_restartWrite@p 0095  
                      __CFG_CLKOUTEN$OFF 000000                       __end_of_returnStop 0DDE  
            __size_of_mssp1_IRQisEnabled 0012      __end_ofi2_do_I2C_SEND_RESTART_WRITE 0E3A  
            i2_do_I2C_SEND_RESTART_WRITE 0E32                   ?i2_do_I2C_SEND_RESTART 002E  
             ??i2_do_I2C_DO_NACK_RESTART 002E                   wr2RegCompleteHandler@p 0095  
            __size_of_mssp1_waitForEvent 0016                i2i2c_setBuffer@bufferSize 0030  
              __size_ofi2_mssp1_clearIRQ 0006                   __size_of_EUSART2_Write 000E  
                             _RX2PPSbits 000E8D                        ??_i2c_masterWrite 0048  
     __end_of_i2c_setAddressNACKCallback 0B26               _i2c_setAddressNACKCallback 0B0A  
                 __size_of_i2c_setBuffer 0018                              _returnReset 0DCA  
       _do_I2C_DO_NACK_RESTART$intlevel0 0D1E                 i2rd1RegCompleteHandler@p 0039  
                ??i2_do_I2C_DO_NACK_STOP 002E                   ??i2_i2c1_driver_TXData 002E  
                             _TX2STAbits 000E9E                ??i2_rd2RegCompleteHandler 003B  
           ??i2_do_I2C_SEND_RESTART_READ 002E           __end_of_PIN_MANAGER_Initialize 038C  
            __end_of_i2c_busCollisionISR 0E86           __size_of_rd1RegCompleteHandler 0038  
              ??i2_wr2RegCompleteHandler 003B            __end_of_rd1RegCompleteHandler 0948  
            __size_ofi2_do_I2C_SEND_STOP 0008                 ??i2_i2c1_driver_sendNACK 002E  
         __size_of_wr1RegCompleteHandler 0038                   ??i2_i2c1_driver_isNACK 002E  
          __end_of_wr1RegCompleteHandler 0980         __size_ofi2_do_I2C_SEND_ADR_WRITE 000E  
                  _do_I2C_SEND_ADR_WRITE 0C7C                  ??i2_i2c1_driver_sendACK 002E  
                   _do_I2C_SEND_ADR_READ 0C90                    __end_ofi2_setCallBack 0580  
               ??i2_i2c1_driver_resetBus 002E                 i2wr1RegCompleteHandler@p 0039  
                ??i2_i2c1_driver_restart 002E                       i2_i2c_restartWrite 0EAC  
