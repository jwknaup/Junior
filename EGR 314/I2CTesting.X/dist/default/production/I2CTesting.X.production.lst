

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 18 10:04:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           ; Version 1.45
    67                           ; Generated 16/11/2017 GMT
    68                           ; 
    69                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F47K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  0012EA                     __pidataBANK0:
   103                           	opt stack 0
   104                           
   105                           ;initializer for _fsmStateTable
   106  0012EA  D2                 	db	low _do_I2C_IDLE
   107  0012EB  14                 	db	high _do_I2C_IDLE
   108  0012EC  00                 	db	low (_do_I2C_IDLE shr (0+16))
   109  0012ED  AC                 	db	low _do_I2C_SEND_ADR_READ
   110  0012EE  14                 	db	high _do_I2C_SEND_ADR_READ
   111  0012EF  00                 	db	low (_do_I2C_SEND_ADR_READ shr (0+16))
   112  0012F0  9E                 	db	low _do_I2C_SEND_ADR_WRITE
   113  0012F1  14                 	db	high _do_I2C_SEND_ADR_WRITE
   114  0012F2  00                 	db	low (_do_I2C_SEND_ADR_WRITE shr (0+16))
   115  0012F3  A8                 	db	low _do_I2C_TX
   116  0012F4  0F                 	db	high _do_I2C_TX
   117  0012F5  00                 	db	low (_do_I2C_TX shr (0+16))
   118  0012F6  22                 	db	low _do_I2C_RX
   119  0012F7  11                 	db	high _do_I2C_RX
   120  0012F8  00                 	db	low (_do_I2C_RX shr (0+16))
   121  0012F9  C8                 	db	low _do_I2C_RCEN
   122  0012FA  14                 	db	high _do_I2C_RCEN
   123  0012FB  00                 	db	low (_do_I2C_RCEN shr (0+16))
   124  0012FC  94                 	db	low _do_I2C_TX_EMPTY
   125  0012FD  11                 	db	high _do_I2C_TX_EMPTY
   126  0012FE  00                 	db	low (_do_I2C_TX_EMPTY shr (0+16))
   127  0012FF  0C                 	db	low _do_I2C_SEND_RESTART_READ
   128  001300  15                 	db	high _do_I2C_SEND_RESTART_READ
   129  001301  00                 	db	low (_do_I2C_SEND_RESTART_READ shr (0+16))
   130  001302  04                 	db	low _do_I2C_SEND_RESTART_WRITE
   131  001303  15                 	db	high _do_I2C_SEND_RESTART_WRITE
   132  001304  00                 	db	low (_do_I2C_SEND_RESTART_WRITE shr (0+16))
   133  001305  FC                 	db	low _do_I2C_SEND_RESTART
   134  001306  14                 	db	high _do_I2C_SEND_RESTART
   135  001307  00                 	db	low (_do_I2C_SEND_RESTART shr (0+16))
   136  001308  F4                 	db	low _do_I2C_SEND_STOP
   137  001309  14                 	db	high _do_I2C_SEND_STOP
   138  00130A  00                 	db	low (_do_I2C_SEND_STOP shr (0+16))
   139  00130B  EC                 	db	low _do_I2C_DO_ACK
   140  00130C  14                 	db	high _do_I2C_DO_ACK
   141  00130D  00                 	db	low (_do_I2C_DO_ACK shr (0+16))
   142  00130E  E4                 	db	low _do_I2C_DO_NACK_STOP
   143  00130F  14                 	db	high _do_I2C_DO_NACK_STOP
   144  001310  00                 	db	low (_do_I2C_DO_NACK_STOP shr (0+16))
   145  001311  DC                 	db	low _do_I2C_DO_NACK_RESTART
   146  001312  14                 	db	high _do_I2C_DO_NACK_RESTART
   147  001313  00                 	db	low (_do_I2C_DO_NACK_RESTART shr (0+16))
   148  001314  BA                 	db	low _do_I2C_RESET
   149  001315  14                 	db	high _do_I2C_RESET
   150  001316  00                 	db	low (_do_I2C_RESET shr (0+16))
   151  001317  EA                 	db	low _do_I2C_DO_ADDRESS_NACK
   152  001318  11                 	db	high _do_I2C_DO_ADDRESS_NACK
   153  001319  00                 	db	low (_do_I2C_DO_ADDRESS_NACK shr (0+16))
   154                           
   155                           	psect	smallconst
   156  000F00                     __psmallconst:
   157                           	opt stack 0
   158  000F00  00                 	db	0
   159  000F01                     _spi2_configuration:
   160                           	opt stack 0
   161  000F01  00                 	db	0
   162  000F02  40                 	db	64
   163  000F03  04                 	db	4
   164  000F04                     __end_of_spi2_configuration:
   165                           	opt stack 0
   166  0000                     _SSP2BUF	set	3730
   167  0000                     _SSP2ADD	set	3731
   168  0000                     _SSP2CON2	set	3735
   169  0000                     _SSP2CON1	set	3734
   170  0000                     _SSP2STAT	set	3733
   171  0000                     _SSP2CON1bits	set	3734
   172  0000                     _SSP1DATPPSbits	set	3768
   173  0000                     _SSP1CLKPPSbits	set	3767
   174  0000                     _RC4PPS	set	3835
   175  0000                     _SSP2DATPPSbits	set	3728
   176  0000                     _SSP2CLKPPSbits	set	3727
   177  0000                     _RC3PPS	set	3834
   178  0000                     _RB1PPS	set	3824
   179  0000                     _PIR3bits	set	3789
   180  0000                     _PIE3bits	set	3781
   181  0000                     _PMD5	set	3814
   182  0000                     _PMD4	set	3813
   183  0000                     _PMD3	set	3812
   184  0000                     _PMD2	set	3811
   185  0000                     _PMD1	set	3810
   186  0000                     _PMD0	set	3809
   187  0000                     _OSCTUNE	set	3805
   188  0000                     _OSCFRQ	set	3806
   189  0000                     _OSCEN	set	3804
   190  0000                     _OSCCON3	set	3802
   191  0000                     _OSCCON1	set	3800
   192  0000                     _RD3PPS	set	3842
   193  0000                     _ODCOND	set	3876
   194  0000                     _ODCONC	set	3871
   195  0000                     _ODCONB	set	3863
   196  0000                     _ODCONA	set	3855
   197  0000                     _ODCONE	set	3884
   198  0000                     _WPUC	set	3872
   199  0000                     _WPUA	set	3856
   200  0000                     _WPUB	set	3864
   201  0000                     _WPUE	set	3885
   202  0000                     _WPUD	set	3877
   203  0000                     _ANSELA	set	3857
   204  0000                     _ANSELE	set	3886
   205  0000                     _ANSELD	set	3878
   206  0000                     _ANSELB	set	3865
   207  0000                     _ANSELC	set	3873
   208  0000                     _TRISBbits	set	3977
   209  0000                     _INTCONbits	set	4082
   210  0000                     _TRISD	set	3979
   211  0000                     _TRISC	set	3978
   212  0000                     _TRISB	set	3977
   213  0000                     _TRISA	set	3976
   214  0000                     _TRISE	set	3980
   215  0000                     _LATC	set	3973
   216  0000                     _LATB	set	3972
   217  0000                     _LATA	set	3971
   218  0000                     _LATD	set	3974
   219  0000                     _LATE	set	3975
   220  0000                     _SSP1STATbits	set	3989
   221  0000                     _SSP1MSK	set	3988
   222  0000                     _SSP1BUF	set	3986
   223  0000                     _SSP1CON2bits	set	3991
   224  0000                     _SSP1ADD	set	3987
   225  0000                     _SSP1CON2	set	3991
   226  0000                     _SSP1CON1	set	3990
   227  0000                     _SSP1STAT	set	3989
   228  0000                     _SSP1CON1bits	set	3990
   229                           
   230                           ; #config settings
   231  000F04  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           	psect	cinit
   234  0012B4                     __pcinit:
   235                           	opt stack 0
   236  0012B4                     start_initialization:
   237                           	opt stack 0
   238  0012B4                     __initialization:
   239                           	opt stack 0
   240                           
   241                           ; Initialize objects allocated to BANK0 (48 bytes)
   242                           ; load TBLPTR registers with __pidataBANK0
   243  0012B4  0EEA               	movlw	low __pidataBANK0
   244  0012B6  6EF6               	movwf	tblptrl,c
   245  0012B8  0E12               	movlw	high __pidataBANK0
   246  0012BA  6EF7               	movwf	tblptrh,c
   247  0012BC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   248  0012BE  6EF8               	movwf	tblptru,c
   249  0012C0  EE00  F060         	lfsr	0,__pdataBANK0
   250  0012C4  EE10 F030          	lfsr	1,48
   251  0012C8                     copy_data0:
   252  0012C8  0009               	tblrd		*+
   253  0012CA  CFF5 FFEE          	movff	tablat,postinc0
   254  0012CE  50E5               	movf	postdec1,w,c
   255  0012D0  50E1               	movf	fsr1l,w,c
   256  0012D2  E1FA               	bnz	copy_data0
   257                           
   258                           ; Clear objects allocated to COMRAM (48 bytes)
   259  0012D4  EE00  F001         	lfsr	0,__pbssCOMRAM
   260  0012D8  0E30               	movlw	48
   261  0012DA                     clear_0:
   262  0012DA  6AEE               	clrf	postinc0,c
   263  0012DC  06E8               	decf	wreg,f,c
   264  0012DE  E1FD               	bnz	clear_0
   265  0012E0                     end_of_initialization:
   266                           	opt stack 0
   267  0012E0                     __end_of__initialization:
   268                           	opt stack 0
   269  0012E0  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   270  0012E2  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   271  0012E4  0100               	movlb	0
   272  0012E6  EFED  F009         	goto	_main	;jump to C main() function
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           postdec1	equ	0xFE5
   280                           fsr1l	equ	0xFE1
   281                           
   282                           	psect	bssCOMRAM
   283  000001                     __pbssCOMRAM:
   284                           	opt stack 0
   285  000001                     _i2c_status:
   286                           	opt stack 0
   287  000001                     	ds	42
   288  00002B                     _i2c1_driver_i2cISR:
   289                           	opt stack 0
   290  00002B                     	ds	3
   291  00002E                     _i2c1_driver_busCollisionISR:
   292                           	opt stack 0
   293  00002E                     	ds	3
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           postdec1	equ	0xFE5
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	dataBANK0
   304  000060                     __pdataBANK0:
   305                           	opt stack 0
   306  000060                     _fsmStateTable:
   307                           	opt stack 0
   308  000060                     	ds	48
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           postdec1	equ	0xFE5
   316                           fsr1l	equ	0xFE1
   317                           
   318                           	psect	cstackCOMRAM
   319  000031                     __pcstackCOMRAM:
   320                           	opt stack 0
   321  000031                     ??_i2c1_driver_isNACK:
   322  000031                     i2c1_driver_TXData@d:
   323                           	opt stack 0
   324  000031                     i2c_setBuffer@buffer:
   325                           	opt stack 0
   326  000031                     setCallBack@cb:
   327                           	opt stack 0
   328                           
   329                           ; 3 bytes @ 0x0
   330  000031                     	ds	1
   331  000032                     _do_I2C_TX$1041:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x1
   335  000032                     	ds	1
   336  000033                     i2c_setBuffer@bufferSize:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x2
   340  000033                     	ds	1
   341  000034                     ??_INTERRUPT_InterruptManager:
   342  000034                     setCallBack@p:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x3
   346  000034                     	ds	1
   347  000035                     
   348                           ; 1 bytes @ 0x4
   349  000035                     	ds	1
   350  000036                     setCallBack@idx:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x5
   354  000036                     	ds	1
   355  000037                     i2c_setDataCompleteCallback@cb:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x6
   359  000037                     	ds	3
   360  00003A                     i2c_setDataCompleteCallback@p:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x9
   364  00003A                     	ds	2
   365  00003C                     wr1RegCompleteHandler@p:
   366                           	opt stack 0
   367  00003C                     rd1RegCompleteHandler@p:
   368                           	opt stack 0
   369  00003C                     rd2RegCompleteHandler@p:
   370                           	opt stack 0
   371  00003C                     wr2RegCompleteHandler@p:
   372                           	opt stack 0
   373  00003C                     rdBlkRegCompleteHandler@p:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0xB
   377  00003C                     	ds	2
   378  00003E                     
   379                           ; 1 bytes @ 0xD
   380  00003E                     	ds	8
   381  000046                     spi2_master_open@spiUniqueConfiguration:
   382                           	opt stack 0
   383  000046                     spi2_exchangeByte@b:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x15
   387  000046                     	ds	1
   388  000047                     main@addr:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x16
   392  000047                     	ds	1
   393  000048                     main@gamerScore:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x17
   397  000048                     	ds	1
   398  000049                     main@photonAddress:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x18
   402  000049                     	ds	1
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           postdec1	equ	0xFE5
   410                           fsr1l	equ	0xFE1
   411                           
   412 ;;
   413 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   414 ;;
   415 ;; *************** function _main *****************
   416 ;; Defined at:
   417 ;;		line 48 in file "main.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  data            2    0        unsigned char [2]
   422 ;;  photonAddres    1   24[COMRAM] unsigned char 
   423 ;;  gamerScore      1   23[COMRAM] unsigned char 
   424 ;;  addr            1   22[COMRAM] unsigned char 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   435 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   437 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   438 ;;Total ram usage:        3 bytes
   439 ;; Hardware stack levels required when called:    8
   440 ;; This function calls:
   441 ;;		_SYSTEM_Initialize
   442 ;;		_spi2_exchangeByte
   443 ;;		_spi2_master_open
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text0
   450  0013DA                     __ptext0:
   451                           	opt stack 0
   452  0013DA                     _main:
   453                           	opt stack 23
   454                           
   455                           ;main.c: 51: SYSTEM_Initialize();
   456                           
   457                           ;incstack = 0
   458  0013DA  EC46  F00A         	call	_SYSTEM_Initialize	;wreg free
   459                           
   460                           ;main.c: 58: (INTCONbits.GIE = 1);
   461  0013DE  8EF2               	bsf	intcon,7,c	;volatile
   462                           
   463                           ;main.c: 64: (INTCONbits.PEIE = 1);
   464  0013E0  8CF2               	bsf	intcon,6,c	;volatile
   465                           
   466                           ;main.c: 70: uint8_t data[2];
   467                           ;main.c: 71: uint8_t addr = 0x22;
   468  0013E2  0E22               	movlw	34
   469  0013E4  6E47               	movwf	main@addr,c
   470                           
   471                           ;main.c: 72: uint8_t gamerScore = 0x17;
   472  0013E6  0E17               	movlw	23
   473  0013E8  6E48               	movwf	main@gamerScore,c
   474                           
   475                           ;main.c: 73: uint8_t photonAddress = 0x30;
   476  0013EA  0E30               	movlw	48
   477  0013EC  6E49               	movwf	main@photonAddress,c
   478                           
   479                           ;main.c: 82: spi2_master_open(CUSTOM1);
   480  0013EE  0E00               	movlw	0
   481  0013F0  EC56  F008         	call	_spi2_master_open
   482  0013F4                     
   483                           ;main.c: 101: {
   484                           ;main.c: 117: spi2_exchangeByte(126);
   485  0013F4  0E7E               	movlw	126
   486  0013F6  EC3D  F00A         	call	_spi2_exchangeByte
   487  0013FA  D7FC               	goto	l618
   488  0013FC                     __end_of_main:
   489                           	opt stack 0
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           intcon	equ	0xFF2
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1l	equ	0xFE1
   499                           
   500 ;; *************** function _spi2_master_open *****************
   501 ;; Defined at:
   502 ;;		line 44 in file "mcc_generated_files/spi2_driver.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  spiUniqueCon    1    wreg     enum E11675
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  spiUniqueCon    1   21[COMRAM] enum E11675
   507 ;; Return value:  Size  Location     Type
   508 ;;		None               void
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   519 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   520 ;;Total ram usage:        1 bytes
   521 ;; Hardware stack levels used:    1
   522 ;; Hardware stack levels required when called:    6
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text1
   531  0010AC                     __ptext1:
   532                           	opt stack 0
   533  0010AC                     _spi2_master_open:
   534                           	opt stack 24
   535                           
   536                           ;incstack = 0
   537                           ;spi2_master_open@spiUniqueConfiguration stored from wreg
   538  0010AC  6E46               	movwf	spi2_master_open@spiUniqueConfiguration,c
   539                           
   540                           ;spi2_driver.c: 46: if(!SSP2CON1bits.SSPEN)
   541  0010AE  010E               	movlb	14	; () banked
   542  0010B0  BB96               	btfsc	150,5,b	;volatile
   543  0010B2  0012               	return	
   544                           
   545                           ; BSR set to: 14
   546                           ;spi2_driver.c: 47: {
   547                           ;spi2_driver.c: 48: SSP2STAT = spi2_configuration[spiUniqueConfiguration].stat;
   548  0010B4  5046               	movf	spi2_master_open@spiUniqueConfiguration,w,c
   549  0010B6  0D03               	mullw	3
   550  0010B8  0E01               	movlw	1
   551  0010BA  26F3               	addwf	prodl,f,c
   552  0010BC  0E00               	movlw	0
   553  0010BE  22F4               	addwfc	prodh,f,c
   554  0010C0  0E01               	movlw	low _spi2_configuration
   555  0010C2  24F3               	addwf	prodl,w,c
   556  0010C4  6EF6               	movwf	tblptrl,c
   557  0010C6  0E0F               	movlw	high _spi2_configuration
   558  0010C8  20F4               	addwfc	prodh,w,c
   559  0010CA  6EF7               	movwf	tblptrh,c
   560  0010CC                     	if	1	;There are 3 active tblptr bytes
   561  0010CC  6AF8               	clrf	tblptru,c
   562  0010CE  0E00               	movlw	low (__mediumconst shr (0+16))
   563  0010D0  22F8               	addwfc	tblptru,f,c
   564  0010D2                     	endif
   565  0010D2  0008               	tblrd		*
   566  0010D4  CFF5 FE95          	movff	tablat,3733	;volatile
   567                           
   568                           ;spi2_driver.c: 49: SSP2CON1 |= spi2_configuration[spiUniqueConfiguration].con1 | 0x2A;
   569  0010D8  5046               	movf	spi2_master_open@spiUniqueConfiguration,w,c
   570  0010DA  0D03               	mullw	3
   571  0010DC  0E01               	movlw	low _spi2_configuration
   572  0010DE  24F3               	addwf	prodl,w,c
   573  0010E0  6EF6               	movwf	tblptrl,c
   574  0010E2  0E0F               	movlw	high _spi2_configuration
   575  0010E4  20F4               	addwfc	prodh,w,c
   576  0010E6  6EF7               	movwf	tblptrh,c
   577  0010E8                     	if	1	;There are 3 active tblptr bytes
   578  0010E8  6AF8               	clrf	tblptru,c
   579  0010EA  0E00               	movlw	low (__mediumconst shr (0+16))
   580  0010EC  22F8               	addwfc	tblptru,f,c
   581  0010EE                     	endif
   582  0010EE  0008               	tblrd		*
   583  0010F0  50F5               	movf	tablat,w,c
   584  0010F2  092A               	iorlw	42
   585  0010F4  1396               	iorwf	150,f,b	;volatile
   586                           
   587                           ; BSR set to: 14
   588                           ;spi2_driver.c: 50: SSP2CON2 = 0x00;
   589  0010F6  0E00               	movlw	0
   590  0010F8  6F97               	movwf	151,b	;volatile
   591                           
   592                           ; BSR set to: 14
   593                           ;spi2_driver.c: 51: SSP2ADD = spi2_configuration[spiUniqueConfiguration].add | 0;
   594  0010FA  5046               	movf	spi2_master_open@spiUniqueConfiguration,w,c
   595  0010FC  0D03               	mullw	3
   596  0010FE  0E02               	movlw	2
   597  001100  26F3               	addwf	prodl,f,c
   598  001102  0E00               	movlw	0
   599  001104  22F4               	addwfc	prodh,f,c
   600  001106  0E01               	movlw	low _spi2_configuration
   601  001108  24F3               	addwf	prodl,w,c
   602  00110A  6EF6               	movwf	tblptrl,c
   603  00110C  0E0F               	movlw	high _spi2_configuration
   604  00110E  20F4               	addwfc	prodh,w,c
   605  001110  6EF7               	movwf	tblptrh,c
   606  001112                     	if	1	;There are 3 active tblptr bytes
   607  001112  6AF8               	clrf	tblptru,c
   608  001114  0E00               	movlw	low (__mediumconst shr (0+16))
   609  001116  22F8               	addwfc	tblptru,f,c
   610  001118                     	endif
   611  001118  0008               	tblrd		*
   612  00111A  CFF5 FE93          	movff	tablat,3731	;volatile
   613                           
   614                           ; BSR set to: 14
   615                           
   616                           ; BSR set to: 14
   617                           
   618                           ;spi2_driver.c: 53: do { TRISBbits.TRISB1 = 0; } while(0);
   619  00111E  9289               	bcf	3977,1,c	;volatile
   620                           
   621                           ; BSR set to: 14
   622                           ;spi2_driver.c: 54: return 1;
   623                           ;	Return value of _spi2_master_open is never used
   624                           
   625                           ; BSR set to: 14
   626  001120  0012               	return	
   627  001122                     __end_of_spi2_master_open:
   628                           	opt stack 0
   629                           tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           prodh	equ	0xFF4
   634                           prodl	equ	0xFF3
   635                           intcon	equ	0xFF2
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           postdec1	equ	0xFE5
   639                           fsr1l	equ	0xFE1
   640                           
   641 ;; *************** function _spi2_exchangeByte *****************
   642 ;; Defined at:
   643 ;;		line 76 in file "mcc_generated_files/spi2_driver.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;  b               1    wreg     unsigned char 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  b               1   21[COMRAM] unsigned char 
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      unsigned char 
   650 ;; Registers used:
   651 ;;		wreg, status,2
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   661 ;;Total ram usage:        1 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    6
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;;		_spi2_exchangeBlock
   669 ;;		_spi2_writeBlock
   670 ;;		_spi2_readBlock
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text2
   675  00147A                     __ptext2:
   676                           	opt stack 0
   677  00147A                     _spi2_exchangeByte:
   678                           	opt stack 24
   679                           
   680                           ; BSR set to: 14
   681                           ;incstack = 0
   682                           ;spi2_exchangeByte@b stored from wreg
   683  00147A  6E46               	movwf	spi2_exchangeByte@b,c
   684                           
   685                           ;spi2_driver.c: 78: SSP2BUF = b;
   686  00147C  C046  FE92         	movff	spi2_exchangeByte@b,3730	;volatile
   687  001480  010E               	movlb	14	; () banked
   688  001482  A5CD               	btfss	205,2,b	;volatile
   689  001484  D7FD               	goto	l662
   690                           
   691                           ; BSR set to: 14
   692                           ;spi2_driver.c: 80: PIR3bits.SSP2IF = 0;
   693  001486  95CD               	bcf	205,2,b	;volatile
   694                           
   695                           ;spi2_driver.c: 81: return SSP2BUF;
   696  001488  5192               	movf	146,w,b	;volatile
   697                           
   698                           ; BSR set to: 14
   699  00148A  0012               	return		;funcret
   700  00148C                     __end_of_spi2_exchangeByte:
   701                           	opt stack 0
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           prodh	equ	0xFF4
   707                           prodl	equ	0xFF3
   708                           intcon	equ	0xFF2
   709                           postinc0	equ	0xFEE
   710                           wreg	equ	0xFE8
   711                           postdec1	equ	0xFE5
   712                           fsr1l	equ	0xFE1
   713                           
   714 ;; *************** function _SYSTEM_Initialize *****************
   715 ;; Defined at:
   716 ;;		line 116 in file "mcc_generated_files/mcc.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, status,2, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   734 ;;Total ram usage:        0 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    7
   737 ;; This function calls:
   738 ;;		_INTERRUPT_Initialize
   739 ;;		_OSCILLATOR_Initialize
   740 ;;		_PIN_MANAGER_Initialize
   741 ;;		_PMD_Initialize
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text3
   748  00148C                     __ptext3:
   749                           	opt stack 0
   750  00148C                     _SYSTEM_Initialize:
   751                           	opt stack 23
   752                           
   753                           ;mcc.c: 118: INTERRUPT_Initialize();
   754                           
   755                           ; BSR set to: 14
   756                           ;incstack = 0
   757  00148C  ECA0  F00A         	call	_INTERRUPT_Initialize	;wreg free
   758                           
   759                           ;mcc.c: 119: PMD_Initialize();
   760  001490  ECFE  F009         	call	_PMD_Initialize	;wreg free
   761                           
   762                           ;mcc.c: 120: PIN_MANAGER_Initialize();
   763  001494  EC83  F007         	call	_PIN_MANAGER_Initialize	;wreg free
   764                           
   765                           ;mcc.c: 121: OSCILLATOR_Initialize();
   766  001498  EC1A  F00A         	call	_OSCILLATOR_Initialize	;wreg free
   767  00149C  0012               	return		;funcret
   768  00149E                     __end_of_SYSTEM_Initialize:
   769                           	opt stack 0
   770                           tblptru	equ	0xFF8
   771                           tblptrh	equ	0xFF7
   772                           tblptrl	equ	0xFF6
   773                           tablat	equ	0xFF5
   774                           prodh	equ	0xFF4
   775                           prodl	equ	0xFF3
   776                           intcon	equ	0xFF2
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           postdec1	equ	0xFE5
   780                           fsr1l	equ	0xFE1
   781                           
   782 ;; *************** function _PMD_Initialize *****************
   783 ;; Defined at:
   784 ;;		line 138 in file "mcc_generated_files/mcc.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    6
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_SYSTEM_Initialize
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text4
   813  0013FC                     __ptext4:
   814                           	opt stack 0
   815  0013FC                     _PMD_Initialize:
   816                           	opt stack 23
   817                           
   818                           ;mcc.c: 141: PMD0 = 0x00;
   819                           
   820                           ;incstack = 0
   821  0013FC  0E00               	movlw	0
   822  0013FE  010E               	movlb	14	; () banked
   823  001400  6FE1               	movwf	225,b	;volatile
   824                           
   825                           ;mcc.c: 143: PMD1 = 0x00;
   826  001402  0E00               	movlw	0
   827  001404  6FE2               	movwf	226,b	;volatile
   828                           
   829                           ;mcc.c: 145: PMD2 = 0x00;
   830  001406  0E00               	movlw	0
   831  001408  6FE3               	movwf	227,b	;volatile
   832                           
   833                           ;mcc.c: 147: PMD3 = 0x00;
   834  00140A  0E00               	movlw	0
   835  00140C  6FE4               	movwf	228,b	;volatile
   836                           
   837                           ;mcc.c: 149: PMD4 = 0x00;
   838  00140E  0E00               	movlw	0
   839  001410  6FE5               	movwf	229,b	;volatile
   840                           
   841                           ;mcc.c: 151: PMD5 = 0x00;
   842  001412  0E00               	movlw	0
   843  001414  6FE6               	movwf	230,b	;volatile
   844                           
   845                           ; BSR set to: 14
   846  001416  0012               	return		;funcret
   847  001418                     __end_of_PMD_Initialize:
   848                           	opt stack 0
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           prodh	equ	0xFF4
   854                           prodl	equ	0xFF3
   855                           intcon	equ	0xFF2
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           postdec1	equ	0xFE5
   859                           fsr1l	equ	0xFE1
   860                           
   861 ;; *************** function _PIN_MANAGER_Initialize *****************
   862 ;; Defined at:
   863 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    6
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_SYSTEM_Initialize
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text5
   892  000F06                     __ptext5:
   893                           	opt stack 0
   894  000F06                     _PIN_MANAGER_Initialize:
   895                           	opt stack 23
   896                           
   897                           ;pin_manager.c: 57: LATE = 0x00;
   898                           
   899                           ; BSR set to: 14
   900                           ;incstack = 0
   901  000F06  0E00               	movlw	0
   902  000F08  6E87               	movwf	3975,c	;volatile
   903                           
   904                           ;pin_manager.c: 58: LATD = 0x00;
   905  000F0A  0E00               	movlw	0
   906  000F0C  6E86               	movwf	3974,c	;volatile
   907                           
   908                           ;pin_manager.c: 59: LATA = 0x0C;
   909  000F0E  0E0C               	movlw	12
   910  000F10  6E83               	movwf	3971,c	;volatile
   911                           
   912                           ;pin_manager.c: 60: LATB = 0x00;
   913  000F12  0E00               	movlw	0
   914  000F14  6E84               	movwf	3972,c	;volatile
   915                           
   916                           ;pin_manager.c: 61: LATC = 0x00;
   917  000F16  0E00               	movlw	0
   918  000F18  6E85               	movwf	3973,c	;volatile
   919                           
   920                           ;pin_manager.c: 66: TRISE = 0x07;
   921  000F1A  0E07               	movlw	7
   922  000F1C  6E8C               	movwf	3980,c	;volatile
   923                           
   924                           ;pin_manager.c: 67: TRISA = 0xEB;
   925  000F1E  0EEB               	movlw	235
   926  000F20  6E88               	movwf	3976,c	;volatile
   927                           
   928                           ;pin_manager.c: 68: TRISB = 0xFD;
   929  000F22  0EFD               	movlw	253
   930  000F24  6E89               	movwf	3977,c	;volatile
   931                           
   932                           ;pin_manager.c: 69: TRISC = 0xFF;
   933  000F26  688A               	setf	3978,c	;volatile
   934                           
   935                           ;pin_manager.c: 70: TRISD = 0xF7;
   936  000F28  0EF7               	movlw	247
   937  000F2A  6E8B               	movwf	3979,c	;volatile
   938                           
   939                           ;pin_manager.c: 75: ANSELC = 0xE7;
   940  000F2C  0EE7               	movlw	231
   941  000F2E  010F               	movlb	15	; () banked
   942  000F30  6F21               	movwf	33,b	;volatile
   943                           
   944                           ;pin_manager.c: 76: ANSELB = 0xFD;
   945  000F32  0EFD               	movlw	253
   946  000F34  6F19               	movwf	25,b	;volatile
   947                           
   948                           ;pin_manager.c: 77: ANSELD = 0x7F;
   949  000F36  0E7F               	movlw	127
   950  000F38  6F26               	movwf	38,b	;volatile
   951                           
   952                           ;pin_manager.c: 78: ANSELE = 0x07;
   953  000F3A  0E07               	movlw	7
   954  000F3C  6F2E               	movwf	46,b	;volatile
   955                           
   956                           ; BSR set to: 15
   957                           ;pin_manager.c: 79: ANSELA = 0xFF;
   958  000F3E  6911               	setf	17,b	;volatile
   959                           
   960                           ;pin_manager.c: 84: WPUD = 0x88;
   961  000F40  0E88               	movlw	136
   962  000F42  6F25               	movwf	37,b	;volatile
   963                           
   964                           ;pin_manager.c: 85: WPUE = 0x00;
   965  000F44  0E00               	movlw	0
   966  000F46  6F2D               	movwf	45,b	;volatile
   967                           
   968                           ;pin_manager.c: 86: WPUB = 0x02;
   969  000F48  0E02               	movlw	2
   970  000F4A  6F18               	movwf	24,b	;volatile
   971                           
   972                           ;pin_manager.c: 87: WPUA = 0x00;
   973  000F4C  0E00               	movlw	0
   974  000F4E  6F10               	movwf	16,b	;volatile
   975                           
   976                           ;pin_manager.c: 88: WPUC = 0x18;
   977  000F50  0E18               	movlw	24
   978  000F52  6F20               	movwf	32,b	;volatile
   979                           
   980                           ;pin_manager.c: 93: ODCONE = 0x00;
   981  000F54  0E00               	movlw	0
   982  000F56  6F2C               	movwf	44,b	;volatile
   983                           
   984                           ;pin_manager.c: 94: ODCONA = 0x00;
   985  000F58  0E00               	movlw	0
   986  000F5A  6F0F               	movwf	15,b	;volatile
   987                           
   988                           ;pin_manager.c: 95: ODCONB = 0x00;
   989  000F5C  0E00               	movlw	0
   990  000F5E  6F17               	movwf	23,b	;volatile
   991                           
   992                           ;pin_manager.c: 96: ODCONC = 0x00;
   993  000F60  0E00               	movlw	0
   994  000F62  6F1F               	movwf	31,b	;volatile
   995                           
   996                           ;pin_manager.c: 97: ODCOND = 0x00;
   997  000F64  0E00               	movlw	0
   998  000F66  6F24               	movwf	36,b	;volatile
   999                           
  1000                           ;pin_manager.c: 104: RB1PPS = 0x11;
  1001  000F68  0E11               	movlw	17
  1002  000F6A  010E               	movlb	14	; () banked
  1003  000F6C  6FF0               	movwf	240,b	;volatile
  1004                           
  1005                           ;pin_manager.c: 105: RC3PPS = 0x0F;
  1006  000F6E  0E0F               	movlw	15
  1007  000F70  6FFA               	movwf	250,b	;volatile
  1008                           
  1009                           ; BSR set to: 14
  1010                           ;pin_manager.c: 106: SSP2CLKPPSbits.SSPCLKPPS = 0x09;
  1011  000F72  818F               	bsf	143,0,b	;volatile
  1012  000F74  938F               	bcf	143,1,b	;volatile
  1013  000F76  958F               	bcf	143,2,b	;volatile
  1014  000F78  878F               	bsf	143,3,b	;volatile
  1015  000F7A  998F               	bcf	143,4,b	;volatile
  1016                           
  1017                           ; BSR set to: 14
  1018                           ;pin_manager.c: 107: SSP2DATPPSbits.SSPDATPPS = 0x1F;
  1019  000F7C  8190               	bsf	144,0,b	;volatile
  1020  000F7E  8390               	bsf	144,1,b	;volatile
  1021  000F80  8590               	bsf	144,2,b	;volatile
  1022  000F82  8790               	bsf	144,3,b	;volatile
  1023  000F84  8990               	bsf	144,4,b	;volatile
  1024                           
  1025                           ;pin_manager.c: 108: RC4PPS = 0x10;
  1026  000F86  0E10               	movlw	16
  1027  000F88  6FFB               	movwf	251,b	;volatile
  1028                           
  1029                           ;pin_manager.c: 109: RD3PPS = 0x12;
  1030  000F8A  0E12               	movlw	18
  1031  000F8C  010F               	movlb	15	; () banked
  1032  000F8E  6F02               	movwf	2,b	;volatile
  1033                           
  1034                           ; BSR set to: 15
  1035                           ;pin_manager.c: 110: SSP1CLKPPSbits.SSPCLKPPS = 0x13;
  1036  000F90  010E               	movlb	14	; () banked
  1037  000F92  81B7               	bsf	183,0,b	;volatile
  1038  000F94  83B7               	bsf	183,1,b	;volatile
  1039  000F96  95B7               	bcf	183,2,b	;volatile
  1040  000F98  97B7               	bcf	183,3,b	;volatile
  1041  000F9A  89B7               	bsf	183,4,b	;volatile
  1042                           
  1043                           ; BSR set to: 14
  1044                           ;pin_manager.c: 111: SSP1DATPPSbits.SSPDATPPS = 0x14;
  1045  000F9C  91B8               	bcf	184,0,b	;volatile
  1046  000F9E  93B8               	bcf	184,1,b	;volatile
  1047  000FA0  85B8               	bsf	184,2,b	;volatile
  1048  000FA2  97B8               	bcf	184,3,b	;volatile
  1049  000FA4  89B8               	bsf	184,4,b	;volatile
  1050                           
  1051                           ; BSR set to: 14
  1052  000FA6  0012               	return		;funcret
  1053  000FA8                     __end_of_PIN_MANAGER_Initialize:
  1054                           	opt stack 0
  1055                           tblptru	equ	0xFF8
  1056                           tblptrh	equ	0xFF7
  1057                           tblptrl	equ	0xFF6
  1058                           tablat	equ	0xFF5
  1059                           prodh	equ	0xFF4
  1060                           prodl	equ	0xFF3
  1061                           intcon	equ	0xFF2
  1062                           postinc0	equ	0xFEE
  1063                           wreg	equ	0xFE8
  1064                           postdec1	equ	0xFE5
  1065                           fsr1l	equ	0xFE1
  1066                           
  1067 ;; *************** function _OSCILLATOR_Initialize *****************
  1068 ;; Defined at:
  1069 ;;		line 124 in file "mcc_generated_files/mcc.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1087 ;;Total ram usage:        0 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    6
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_SYSTEM_Initialize
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text6
  1098  001434                     __ptext6:
  1099                           	opt stack 0
  1100  001434                     _OSCILLATOR_Initialize:
  1101                           	opt stack 23
  1102                           
  1103                           ;mcc.c: 127: OSCCON1 = 0x62;
  1104                           
  1105                           ; BSR set to: 14
  1106                           ;incstack = 0
  1107  001434  0E62               	movlw	98
  1108  001436  010E               	movlb	14	; () banked
  1109  001438  6FD8               	movwf	216,b	;volatile
  1110                           
  1111                           ;mcc.c: 129: OSCCON3 = 0x00;
  1112  00143A  0E00               	movlw	0
  1113  00143C  6FDA               	movwf	218,b	;volatile
  1114                           
  1115                           ;mcc.c: 131: OSCEN = 0x00;
  1116  00143E  0E00               	movlw	0
  1117  001440  6FDC               	movwf	220,b	;volatile
  1118                           
  1119                           ;mcc.c: 133: OSCFRQ = 0x03;
  1120  001442  0E03               	movlw	3
  1121  001444  6FDE               	movwf	222,b	;volatile
  1122                           
  1123                           ;mcc.c: 135: OSCTUNE = 0x20;
  1124  001446  0E20               	movlw	32
  1125  001448  6FDD               	movwf	221,b	;volatile
  1126                           
  1127                           ; BSR set to: 14
  1128  00144A  0012               	return		;funcret
  1129  00144C                     __end_of_OSCILLATOR_Initialize:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           prodh	equ	0xFF4
  1136                           prodl	equ	0xFF3
  1137                           intcon	equ	0xFF2
  1138                           postinc0	equ	0xFEE
  1139                           wreg	equ	0xFE8
  1140                           postdec1	equ	0xFE5
  1141                           fsr1l	equ	0xFE1
  1142                           
  1143 ;; *************** function _INTERRUPT_Initialize *****************
  1144 ;; Defined at:
  1145 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		None
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    6
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_SYSTEM_Initialize
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text7
  1174  001540                     __ptext7:
  1175                           	opt stack 0
  1176  001540                     _INTERRUPT_Initialize:
  1177                           	opt stack 23
  1178                           
  1179                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  1180                           
  1181                           ; BSR set to: 14
  1182                           ;incstack = 0
  1183  001540  9AF2               	bcf	intcon,5,c	;volatile
  1184  001542  0012               	return		;funcret
  1185  001544                     __end_of_INTERRUPT_Initialize:
  1186                           	opt stack 0
  1187                           tblptru	equ	0xFF8
  1188                           tblptrh	equ	0xFF7
  1189                           tblptrl	equ	0xFF6
  1190                           tablat	equ	0xFF5
  1191                           prodh	equ	0xFF4
  1192                           prodl	equ	0xFF3
  1193                           intcon	equ	0xFF2
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec1	equ	0xFE5
  1197                           fsr1l	equ	0xFE1
  1198                           
  1199 ;; *************** function _INTERRUPT_InterruptManager *****************
  1200 ;; Defined at:
  1201 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1217 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1218 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1219 ;;Total ram usage:       18 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    5
  1222 ;; This function calls:
  1223 ;;		Absolute function
  1224 ;;		_i2c_ISR
  1225 ;;		_i2c_busCollisionISR
  1226 ;; This function is called by:
  1227 ;;		Interrupt level 2
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	intcode
  1232  000008                     __pintcode:
  1233                           	opt stack 0
  1234  000008                     _INTERRUPT_InterruptManager:
  1235                           	opt stack 23
  1236                           
  1237                           ;incstack = 0
  1238  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1239  00000A  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
  1240  00000E  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1241  000012  CFE9 F036          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1242  000016  CFEA F037          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1243  00001A  CFE1 F038          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1244  00001E  CFE2 F039          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1245  000022  CFD9 F03A          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1246  000026  CFDA F03B          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1247  00002A  CFF3 F03C          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1248  00002E  CFF4 F03D          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1249  000032  CFF6 F03E          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1250  000036  CFF7 F03F          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1251  00003A  CFF8 F040          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1252  00003E  CFF5 F041          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1253  000042  C04A  F042         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1254  000046  C04B  F043         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1255  00004A  C04C  F044         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1256  00004E  C04D  F045         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1257                           
  1258                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  1259  000052  ACF2               	btfss	intcon,6,c	;volatile
  1260  000054  D01D               	goto	i2u78_49
  1261                           
  1262                           ;interrupt_manager.c: 61: {
  1263                           ;interrupt_manager.c: 62: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  1264  000056  010E               	movlb	14	; () banked
  1265  000058  B3C5               	btfsc	197,1,b	;volatile
  1266                           
  1267                           ; BSR set to: 14
  1268  00005A  A3CD               	btfss	205,1,b	;volatile
  1269  00005C  D00A               	goto	i2l275
  1270                           
  1271                           ; BSR set to: 14
  1272                           ;interrupt_manager.c: 63: {
  1273                           ;interrupt_manager.c: 64: i2c1_driver_busCollisionISR();
  1274  00005E  D801               	call	i2u75_48
  1275  000060  D017               	goto	i2u78_49
  1276  000062                     i2u75_48:
  1277  000062  0005               	push	
  1278  000064  6EFA               	movwf	pclath,c
  1279  000066  502E               	movf	_i2c1_driver_busCollisionISR,w,c
  1280  000068  6EFD               	movwf	tosl,c
  1281  00006A  502F               	movf	_i2c1_driver_busCollisionISR+1,w,c
  1282  00006C  6EFE               	movwf	tosh,c
  1283  00006E  5030               	movf	_i2c1_driver_busCollisionISR+2,w,c
  1284  000070  D00C               	goto	L1
  1285  000072                     i2l275:
  1286                           
  1287                           ; BSR set to: 14
  1288                           ;interrupt_manager.c: 66: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  1289  000072  B1C5               	btfsc	197,0,b	;volatile
  1290                           
  1291                           ; BSR set to: 14
  1292  000074  A1CD               	btfss	205,0,b	;volatile
  1293  000076  D00C               	goto	i2u78_49
  1294                           
  1295                           ; BSR set to: 14
  1296                           ;interrupt_manager.c: 67: {
  1297                           ;interrupt_manager.c: 68: i2c1_driver_i2cISR();
  1298  000078  D801               	call	i2u78_48
  1299  00007A  D00A               	goto	i2u78_49
  1300  00007C                     i2u78_48:
  1301  00007C  0005               	push	
  1302  00007E  6EFA               	movwf	pclath,c
  1303  000080  502B               	movf	_i2c1_driver_i2cISR,w,c
  1304  000082  6EFD               	movwf	tosl,c
  1305  000084  502C               	movf	_i2c1_driver_i2cISR+1,w,c
  1306  000086  6EFE               	movwf	tosh,c
  1307  000088  502D               	movf	_i2c1_driver_i2cISR+2,w,c
  1308  00008A                     L1:
  1309  00008A  6EFF               	movwf	tosu,c
  1310  00008C  50FA               	movf	pclath,w,c
  1311  00008E  0012               	return		;indir
  1312  000090                     i2u78_49:
  1313                           
  1314                           ;interrupt_manager.c: 75: else
  1315                           ;interrupt_manager.c: 76: {
  1316                           
  1317                           ;interrupt_manager.c: 73: }
  1318                           ;interrupt_manager.c: 74: }
  1319                           
  1320                           ;interrupt_manager.c: 70: else
  1321                           ;interrupt_manager.c: 71: {
  1322                           
  1323                           ;interrupt_manager.c: 69: }
  1324  000090  C045  F04D         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1325  000094  C044  F04C         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1326  000098  C043  F04B         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1327  00009C  C042  F04A         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1328  0000A0  C041  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1329  0000A4  C040  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1330  0000A8  C03F  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1331  0000AC  C03E  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1332  0000B0  C03D  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1333  0000B4  C03C  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1334  0000B8  C03B  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1335  0000BC  C03A  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1336  0000C0  C039  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1337  0000C4  C038  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1338  0000C8  C037  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1339  0000CC  C036  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1340  0000D0  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1341  0000D4  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1342  0000D8  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1343  0000DA  0011               	retfie		f
  1344  0000DC                     __end_of_INTERRUPT_InterruptManager:
  1345                           	opt stack 0
  1346                           tosu	equ	0xFFF
  1347                           tosh	equ	0xFFE
  1348                           tosl	equ	0xFFD
  1349                           pclatu	equ	0xFFB
  1350                           pclath	equ	0xFFA
  1351                           tblptru	equ	0xFF8
  1352                           tblptrh	equ	0xFF7
  1353                           tblptrl	equ	0xFF6
  1354                           tablat	equ	0xFF5
  1355                           prodh	equ	0xFF4
  1356                           prodl	equ	0xFF3
  1357                           intcon	equ	0xFF2
  1358                           postinc0	equ	0xFEE
  1359                           fsr0h	equ	0xFEA
  1360                           fsr0l	equ	0xFE9
  1361                           wreg	equ	0xFE8
  1362                           postdec1	equ	0xFE5
  1363                           fsr1h	equ	0xFE2
  1364                           fsr1l	equ	0xFE1
  1365                           fsr2h	equ	0xFDA
  1366                           fsr2l	equ	0xFD9
  1367                           
  1368 ;; *************** function _i2c_busCollisionISR *****************
  1369 ;; Defined at:
  1370 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:    1
  1391 ;; This function calls:
  1392 ;;		_i2c1_driver_clearBusCollision
  1393 ;; This function is called by:
  1394 ;;		_i2c_open
  1395 ;;		_INTERRUPT_InterruptManager
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text9
  1400  00151C                     __ptext9:
  1401                           	opt stack 0
  1402  00151C                     _i2c_busCollisionISR:
  1403                           	opt stack 26
  1404                           
  1405                           ;i2c_master.c: 437: i2c1_driver_clearBusCollision();
  1406                           
  1407                           ;incstack = 0
  1408  00151C  EC91  F00A         	call	_i2c1_driver_clearBusCollision	;wreg free
  1409  001520  0012               	return		;funcret
  1410  001522                     __end_of_i2c_busCollisionISR:
  1411                           	opt stack 0
  1412                           tosu	equ	0xFFF
  1413                           tosh	equ	0xFFE
  1414                           tosl	equ	0xFFD
  1415                           pclatu	equ	0xFFB
  1416                           pclath	equ	0xFFA
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           tblptrl	equ	0xFF6
  1420                           tablat	equ	0xFF5
  1421                           prodh	equ	0xFF4
  1422                           prodl	equ	0xFF3
  1423                           intcon	equ	0xFF2
  1424                           postinc0	equ	0xFEE
  1425                           fsr0h	equ	0xFEA
  1426                           fsr0l	equ	0xFE9
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1h	equ	0xFE2
  1430                           fsr1l	equ	0xFE1
  1431                           fsr2h	equ	0xFDA
  1432                           fsr2l	equ	0xFD9
  1433                           
  1434 ;; *************** function _i2c1_driver_clearBusCollision *****************
  1435 ;; Defined at:
  1436 ;;		line 253 in file "mcc_generated_files/i2c1_driver.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		None
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_i2c_busCollisionISR
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text10
  1464  001522                     __ptext10:
  1465                           	opt stack 0
  1466  001522                     _i2c1_driver_clearBusCollision:
  1467                           	opt stack 26
  1468                           
  1469                           ;i2c1_driver.c: 255: PIR3bits.BCL1IF = 0;
  1470                           
  1471                           ;incstack = 0
  1472  001522  010E               	movlb	14	; () banked
  1473  001524  93CD               	bcf	205,1,b	;volatile
  1474                           
  1475                           ; BSR set to: 14
  1476  001526  0012               	return		;funcret
  1477  001528                     __end_of_i2c1_driver_clearBusCollision:
  1478                           	opt stack 0
  1479                           tosu	equ	0xFFF
  1480                           tosh	equ	0xFFE
  1481                           tosl	equ	0xFFD
  1482                           pclatu	equ	0xFFB
  1483                           pclath	equ	0xFFA
  1484                           tblptru	equ	0xFF8
  1485                           tblptrh	equ	0xFF7
  1486                           tblptrl	equ	0xFF6
  1487                           tablat	equ	0xFF5
  1488                           prodh	equ	0xFF4
  1489                           prodl	equ	0xFF3
  1490                           intcon	equ	0xFF2
  1491                           postinc0	equ	0xFEE
  1492                           fsr0h	equ	0xFEA
  1493                           fsr0l	equ	0xFE9
  1494                           wreg	equ	0xFE8
  1495                           postdec1	equ	0xFE5
  1496                           fsr1h	equ	0xFE2
  1497                           fsr1l	equ	0xFE1
  1498                           fsr2h	equ	0xFDA
  1499                           fsr2l	equ	0xFD9
  1500                           
  1501 ;; *************** function _i2c_ISR *****************
  1502 ;; Defined at:
  1503 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    4
  1524 ;; This function calls:
  1525 ;;		_do_I2C_DO_ACK
  1526 ;;		_do_I2C_DO_ADDRESS_NACK
  1527 ;;		_do_I2C_DO_NACK_RESTART
  1528 ;;		_do_I2C_DO_NACK_STOP
  1529 ;;		_do_I2C_IDLE
  1530 ;;		_do_I2C_RCEN
  1531 ;;		_do_I2C_RESET
  1532 ;;		_do_I2C_RX
  1533 ;;		_do_I2C_SEND_ADR_READ
  1534 ;;		_do_I2C_SEND_ADR_WRITE
  1535 ;;		_do_I2C_SEND_RESTART
  1536 ;;		_do_I2C_SEND_RESTART_READ
  1537 ;;		_do_I2C_SEND_RESTART_WRITE
  1538 ;;		_do_I2C_SEND_STOP
  1539 ;;		_do_I2C_TX
  1540 ;;		_do_I2C_TX_EMPTY
  1541 ;;		_i2c1_driver_isNACK
  1542 ;;		_mssp1_clearIRQ
  1543 ;; This function is called by:
  1544 ;;		_i2c_open
  1545 ;;		_i2c_poller
  1546 ;;		_INTERRUPT_InterruptManager
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text11
  1551  001274                     __ptext11:
  1552                           	opt stack 0
  1553  001274                     _i2c_ISR:
  1554                           	opt stack 23
  1555                           
  1556                           ;i2c_master.c: 421: mssp1_clearIRQ();
  1557                           
  1558                           ; BSR set to: 14
  1559                           ;incstack = 0
  1560  001274  EC94  F00A         	call	_mssp1_clearIRQ	;wreg free
  1561                           
  1562                           ;i2c_master.c: 427: if(i2c_status.addressNACKCheck && i2c1_driver_isNACK())
  1563  001278  A601               	btfss	_i2c_status,3,c
  1564  00127A  D006               	goto	i2l477
  1565  00127C  EC32  F00A         	call	_i2c1_driver_isNACK	;wreg free
  1566  001280  A0D8               	btfss	status,0,c
  1567  001282  D002               	goto	i2l477
  1568                           
  1569                           ;i2c_master.c: 428: {
  1570                           ;i2c_master.c: 429: i2c_status.state = I2C_ADDRESS_NACK;
  1571  001284  0E0F               	movlw	15
  1572  001286  6E0B               	movwf	_i2c_status+10,c
  1573  001288                     i2l477:
  1574                           
  1575                           ;i2c_master.c: 430: }
  1576                           ;i2c_master.c: 432: i2c_status.state = fsmStateTable[i2c_status.state]();
  1577  001288  500B               	movf	_i2c_status+10,w,c
  1578  00128A  0D03               	mullw	3
  1579  00128C  0E60               	movlw	low _fsmStateTable
  1580  00128E  24F3               	addwf	prodl,w,c
  1581  001290  6ED9               	movwf	fsr2l,c
  1582  001292  0E00               	movlw	high _fsmStateTable
  1583  001294  20F4               	addwfc	prodh,w,c
  1584  001296  6EDA               	movwf	fsr2h,c
  1585  001298  D801               	call	i2u71_48
  1586  00129A  D00A               	goto	i2u71_49
  1587  00129C                     i2u71_48:
  1588  00129C  0005               	push	
  1589  00129E  6EFA               	movwf	pclath,c
  1590  0012A0  50DE               	movf	postinc2,w,c
  1591  0012A2  6EFD               	movwf	tosl,c
  1592  0012A4  50DE               	movf	postinc2,w,c
  1593  0012A6  6EFE               	movwf	tosh,c
  1594  0012A8  50DE               	movf	postinc2,w,c
  1595  0012AA  6EFF               	movwf	tosu,c
  1596  0012AC  50FA               	movf	pclath,w,c
  1597  0012AE  0012               	return		;indir
  1598  0012B0                     i2u71_49:
  1599  0012B0  6E0B               	movwf	_i2c_status+10,c
  1600  0012B2  0012               	return		;funcret
  1601  0012B4                     __end_of_i2c_ISR:
  1602                           	opt stack 0
  1603                           tosu	equ	0xFFF
  1604                           tosh	equ	0xFFE
  1605                           tosl	equ	0xFFD
  1606                           pclatu	equ	0xFFB
  1607                           pclath	equ	0xFFA
  1608                           tblptru	equ	0xFF8
  1609                           tblptrh	equ	0xFF7
  1610                           tblptrl	equ	0xFF6
  1611                           tablat	equ	0xFF5
  1612                           prodh	equ	0xFF4
  1613                           prodl	equ	0xFF3
  1614                           intcon	equ	0xFF2
  1615                           postinc0	equ	0xFEE
  1616                           fsr0h	equ	0xFEA
  1617                           fsr0l	equ	0xFE9
  1618                           wreg	equ	0xFE8
  1619                           postdec1	equ	0xFE5
  1620                           fsr1h	equ	0xFE2
  1621                           fsr1l	equ	0xFE1
  1622                           postinc2	equ	0xFDE
  1623                           fsr2h	equ	0xFDA
  1624                           fsr2l	equ	0xFD9
  1625                           status	equ	0xFD8
  1626                           
  1627 ;; *************** function _mssp1_clearIRQ *****************
  1628 ;; Defined at:
  1629 ;;		line 53 in file "mcc_generated_files/i2c1_driver.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		None
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_i2c_ISR
  1653 ;;		_i2c_open
  1654 ;;		_i2c_close
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text12
  1659  001528                     __ptext12:
  1660                           	opt stack 0
  1661  001528                     _mssp1_clearIRQ:
  1662                           	opt stack 26
  1663                           
  1664                           ;i2c1_driver.c: 55: PIR3bits.SSP1IF = 0;
  1665                           
  1666                           ;incstack = 0
  1667  001528  010E               	movlb	14	; () banked
  1668  00152A  91CD               	bcf	205,0,b	;volatile
  1669                           
  1670                           ; BSR set to: 14
  1671  00152C  0012               	return		;funcret
  1672  00152E                     __end_of_mssp1_clearIRQ:
  1673                           	opt stack 0
  1674                           tosu	equ	0xFFF
  1675                           tosh	equ	0xFFE
  1676                           tosl	equ	0xFFD
  1677                           pclatu	equ	0xFFB
  1678                           pclath	equ	0xFFA
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           prodh	equ	0xFF4
  1684                           prodl	equ	0xFF3
  1685                           intcon	equ	0xFF2
  1686                           postinc0	equ	0xFEE
  1687                           fsr0h	equ	0xFEA
  1688                           fsr0l	equ	0xFE9
  1689                           wreg	equ	0xFE8
  1690                           postdec1	equ	0xFE5
  1691                           fsr1h	equ	0xFE2
  1692                           fsr1l	equ	0xFE1
  1693                           postinc2	equ	0xFDE
  1694                           fsr2h	equ	0xFDA
  1695                           fsr2l	equ	0xFD9
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _do_I2C_RX *****************
  1699 ;; Defined at:
  1700 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      enum E11956
  1707 ;; Registers used:
  1708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    3
  1721 ;; This function calls:
  1722 ;;		Absolute function
  1723 ;;		_do_I2C_DO_NACK_RESTART
  1724 ;;		_do_I2C_DO_NACK_STOP
  1725 ;;		_i2c1_driver_getRXData
  1726 ;;		_i2c1_driver_sendACK
  1727 ;;		_i2c_restartWrite
  1728 ;;		_rd1RegCompleteHandler
  1729 ;;		_rd2RegCompleteHandler
  1730 ;;		_rdBlkRegCompleteHandler
  1731 ;;		_returnReset
  1732 ;;		_returnStop
  1733 ;;		_wr1RegCompleteHandler
  1734 ;;		_wr2RegCompleteHandler
  1735 ;; This function is called by:
  1736 ;;		_i2c_ISR
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text13
  1741  001122                     __ptext13:
  1742                           	opt stack 0
  1743  001122                     _do_I2C_RX:
  1744                           	opt stack 23
  1745                           
  1746                           ;i2c_master.c: 359: *i2c_status.data_ptr++ = i2c1_driver_getRXData();
  1747                           
  1748                           ; BSR set to: 14
  1749                           ;incstack = 0
  1750  001122  ECA2  F00A         	call	_i2c1_driver_getRXData	;wreg free
  1751  001126  C003  FFD9         	movff	_i2c_status+2,fsr2l
  1752  00112A  C004  FFDA         	movff	_i2c_status+3,fsr2h
  1753  00112E  6EDF               	movwf	indf2,c
  1754  001130  4A03               	infsnz	_i2c_status+2,f,c
  1755  001132  2A04               	incf	_i2c_status+3,f,c
  1756                           
  1757                           ;i2c_master.c: 360: if(--i2c_status.data_length)
  1758  001134  0605               	decf	_i2c_status+4,f,c
  1759  001136  A0D8               	btfss	status,0,c
  1760  001138  0606               	decf	_i2c_status+5,f,c
  1761  00113A  5005               	movf	_i2c_status+4,w,c
  1762  00113C  1006               	iorwf	_i2c_status+5,w,c
  1763  00113E  B4D8               	btfsc	status,2,c
  1764  001140  D004               	goto	i2l453
  1765                           
  1766                           ;i2c_master.c: 361: {
  1767                           ;i2c_master.c: 362: i2c1_driver_sendACK();
  1768  001142  EC9D  F00A         	call	_i2c1_driver_sendACK	;wreg free
  1769                           
  1770                           ;i2c_master.c: 363: return I2C_RCEN;
  1771  001146  0E05               	movlw	5
  1772                           
  1773                           ;i2c_master.c: 364: }
  1774  001148  0012               	return	
  1775  00114A                     i2l453:
  1776                           
  1777                           ;i2c_master.c: 365: else
  1778                           ;i2c_master.c: 366: {
  1779                           ;i2c_master.c: 367: i2c_status.bufferFree = 1;
  1780  00114A  8401               	bsf	_i2c_status,2,c
  1781                           
  1782                           ;i2c_master.c: 368: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  1783  00114C  D006               	goto	i2l456
  1784  00114E                     
  1785                           ;i2c_master.c: 371: case i2c_restart_read:
  1786                           ;i2c_master.c: 372: return do_I2C_DO_NACK_RESTART();
  1787  00114E  EC6E  F00A         	call	_do_I2C_DO_NACK_RESTART	;wreg free
  1788  001152  0012               	return	
  1789  001154                     
  1790                           ;i2c_master.c: 375: case i2c_stop:
  1791                           ;i2c_master.c: 376: return do_I2C_DO_NACK_STOP();
  1792                           
  1793                           ;i2c_master.c: 374: case i2c_continue:
  1794  001154  EC72  F00A         	call	_do_I2C_DO_NACK_STOP	;wreg free
  1795                           
  1796                           ;i2c_master.c: 377: }
  1797  001158  0012               	return	
  1798  00115A                     i2l456:
  1799  00115A  C01F  F03C         	movff	_i2c_status+30,rdBlkRegCompleteHandler@p
  1800  00115E  C020  F03D         	movff	_i2c_status+31,rdBlkRegCompleteHandler@p+1
  1801  001162  EE20  F00D         	lfsr	2,_i2c_status+12
  1802  001166  D801               	call	i2u65_48
  1803  001168  D00A               	goto	i2u65_49
  1804  00116A                     i2u65_48:
  1805  00116A  0005               	push	
  1806  00116C  6EFA               	movwf	pclath,c
  1807  00116E  50DE               	movf	postinc2,w,c
  1808  001170  6EFD               	movwf	tosl,c
  1809  001172  50DE               	movf	postinc2,w,c
  1810  001174  6EFE               	movwf	tosh,c
  1811  001176  50DE               	movf	postinc2,w,c
  1812  001178  6EFF               	movwf	tosu,c
  1813  00117A  50FA               	movf	pclath,w,c
  1814  00117C  0012               	return		;indir
  1815  00117E                     i2u65_49:
  1816                           
  1817                           ; Switch size 1, requested type "space"
  1818                           ; Number of cases is 4, Range of values is 1 to 4
  1819                           ; switch strategies available:
  1820                           ; Name         Instructions Cycles
  1821                           ; simple_byte           13     7 (average)
  1822                           ;	Chosen strategy is simple_byte
  1823  00117E  0A01               	xorlw	1	; case 1
  1824  001180  B4D8               	btfsc	status,2,c
  1825  001182  D7E8               	goto	i2l459
  1826  001184  0A03               	xorlw	3	; case 2
  1827  001186  B4D8               	btfsc	status,2,c
  1828  001188  D7E2               	goto	i2l457
  1829  00118A  0A01               	xorlw	1	; case 3
  1830  00118C  B4D8               	btfsc	status,2,c
  1831  00118E  D7DF               	goto	i2l457
  1832  001190  0A07               	xorlw	7	; case 4
  1833  001192  D7E0               	goto	i2l459
  1834  001194                     __end_of_do_I2C_RX:
  1835                           	opt stack 0
  1836                           tosu	equ	0xFFF
  1837                           tosh	equ	0xFFE
  1838                           tosl	equ	0xFFD
  1839                           pclatu	equ	0xFFB
  1840                           pclath	equ	0xFFA
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           prodh	equ	0xFF4
  1846                           prodl	equ	0xFF3
  1847                           intcon	equ	0xFF2
  1848                           postinc0	equ	0xFEE
  1849                           fsr0h	equ	0xFEA
  1850                           fsr0l	equ	0xFE9
  1851                           wreg	equ	0xFE8
  1852                           postdec1	equ	0xFE5
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           indf2	equ	0xFDF
  1856                           postinc2	equ	0xFDE
  1857                           fsr2h	equ	0xFDA
  1858                           fsr2l	equ	0xFD9
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _do_I2C_TX *****************
  1862 ;; Defined at:
  1863 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      enum E11956
  1870 ;; Registers used:
  1871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1878 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1881 ;;Total ram usage:        2 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    3
  1884 ;; This function calls:
  1885 ;;		Absolute function
  1886 ;;		_do_I2C_SEND_RESTART_READ
  1887 ;;		_do_I2C_SEND_RESTART_WRITE
  1888 ;;		_do_I2C_SEND_STOP
  1889 ;;		_i2c1_driver_TXData
  1890 ;;		_i2c1_driver_isNACK
  1891 ;;		_i2c_restartWrite
  1892 ;;		_rd1RegCompleteHandler
  1893 ;;		_rd2RegCompleteHandler
  1894 ;;		_rdBlkRegCompleteHandler
  1895 ;;		_returnReset
  1896 ;;		_returnStop
  1897 ;;		_wr1RegCompleteHandler
  1898 ;;		_wr2RegCompleteHandler
  1899 ;; This function is called by:
  1900 ;;		_i2c_ISR
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text14
  1905  000FA8                     __ptext14:
  1906                           	opt stack 0
  1907  000FA8                     _do_I2C_TX:
  1908                           	opt stack 23
  1909                           
  1910                           ;i2c_master.c: 335: if(i2c1_driver_isNACK())
  1911                           
  1912                           ;incstack = 0
  1913  000FA8  EC32  F00A         	call	_i2c1_driver_isNACK	;wreg free
  1914  000FAC  B0D8               	btfsc	status,0,c
  1915  000FAE  D00A               	goto	i2l438
  1916  000FB0  D026               	goto	i2l437
  1917  000FB2                     
  1918                           ;i2c_master.c: 340: return do_I2C_SEND_RESTART_READ();
  1919  000FB2  EC86  F00A         	call	_do_I2C_SEND_RESTART_READ	;wreg free
  1920  000FB6  0012               	return	
  1921  000FB8                     
  1922                           ;i2c_master.c: 342: return do_I2C_SEND_RESTART_WRITE();
  1923  000FB8  EC82  F00A         	call	_do_I2C_SEND_RESTART_WRITE	;wreg free
  1924  000FBC  0012               	return	
  1925  000FBE                     
  1926                           ;i2c_master.c: 345: case i2c_stop:
  1927                           ;i2c_master.c: 346: return do_I2C_SEND_STOP();
  1928                           
  1929                           ;i2c_master.c: 344: case i2c_continue:
  1930  000FBE  EC7A  F00A         	call	_do_I2C_SEND_STOP	;wreg free
  1931                           
  1932                           ;i2c_master.c: 347: }
  1933  000FC2  0012               	return	
  1934  000FC4                     i2l438:
  1935  000FC4  C025  F03C         	movff	_i2c_status+36,rdBlkRegCompleteHandler@p
  1936  000FC8  C026  F03D         	movff	_i2c_status+37,rdBlkRegCompleteHandler@p+1
  1937  000FCC  EE20  F016         	lfsr	2,_i2c_status+21
  1938  000FD0  D801               	call	i2u62_48
  1939  000FD2  D00A               	goto	i2u62_49
  1940  000FD4                     i2u62_48:
  1941  000FD4  0005               	push	
  1942  000FD6  6EFA               	movwf	pclath,c
  1943  000FD8  50DE               	movf	postinc2,w,c
  1944  000FDA  6EFD               	movwf	tosl,c
  1945  000FDC  50DE               	movf	postinc2,w,c
  1946  000FDE  6EFE               	movwf	tosh,c
  1947  000FE0  50DE               	movf	postinc2,w,c
  1948  000FE2  6EFF               	movwf	tosu,c
  1949  000FE4  50FA               	movf	pclath,w,c
  1950  000FE6  0012               	return		;indir
  1951  000FE8                     i2u62_49:
  1952                           
  1953                           ; Switch size 1, requested type "space"
  1954                           ; Number of cases is 4, Range of values is 1 to 4
  1955                           ; switch strategies available:
  1956                           ; Name         Instructions Cycles
  1957                           ; simple_byte           13     7 (average)
  1958                           ;	Chosen strategy is simple_byte
  1959  000FE8  0A01               	xorlw	1	; case 1
  1960  000FEA  B4D8               	btfsc	status,2,c
  1961  000FEC  D7E8               	goto	i2l442
  1962  000FEE  0A03               	xorlw	3	; case 2
  1963  000FF0  B4D8               	btfsc	status,2,c
  1964  000FF2  D7DF               	goto	i2l439
  1965  000FF4  0A01               	xorlw	1	; case 3
  1966  000FF6  B4D8               	btfsc	status,2,c
  1967  000FF8  D7DF               	goto	i2l441
  1968  000FFA  0A07               	xorlw	7	; case 4
  1969  000FFC  D7E0               	goto	i2l442
  1970  000FFE                     i2l437:
  1971                           
  1972                           ;i2c_master.c: 349: else
  1973                           ;i2c_master.c: 350: {
  1974                           ;i2c_master.c: 351: i2c_status.addressNACKCheck = 0;
  1975  000FFE  9601               	bcf	_i2c_status,3,c
  1976                           
  1977                           ;i2c_master.c: 352: i2c1_driver_TXData(*i2c_status.data_ptr++);
  1978  001000  C003  FFD9         	movff	_i2c_status+2,fsr2l
  1979  001004  C004  FFDA         	movff	_i2c_status+3,fsr2h
  1980  001008  4A03               	infsnz	_i2c_status+2,f,c
  1981  00100A  2A04               	incf	_i2c_status+3,f,c
  1982  00100C  50DF               	movf	indf2,w,c
  1983  00100E  EC8A  F00A         	call	_i2c1_driver_TXData
  1984                           
  1985                           ;i2c_master.c: 353: return (--i2c_status.data_length)?I2C_TX:I2C_TX_EMPTY;
  1986  001012  0605               	decf	_i2c_status+4,f,c
  1987  001014  A0D8               	btfss	status,0,c
  1988  001016  0606               	decf	_i2c_status+5,f,c
  1989  001018  5005               	movf	_i2c_status+4,w,c
  1990  00101A  1006               	iorwf	_i2c_status+5,w,c
  1991  00101C  A4D8               	btfss	status,2,c
  1992  00101E  D004               	goto	i2l448
  1993  001020  0E00               	movlw	0
  1994  001022  6E33               	movwf	_do_I2C_TX$1041+1,c
  1995  001024  0E06               	movlw	6
  1996  001026  D003               	goto	L2
  1997  001028                     i2l448:
  1998  001028  0E00               	movlw	0
  1999  00102A  6E33               	movwf	_do_I2C_TX$1041+1,c
  2000  00102C  0E03               	movlw	3
  2001  00102E                     L2:
  2002  00102E  6E32               	movwf	_do_I2C_TX$1041,c
  2003  001030  5032               	movf	_do_I2C_TX$1041,w,c
  2004  001032  0012               	return	
  2005  001034                     __end_of_do_I2C_TX:
  2006                           	opt stack 0
  2007                           tosu	equ	0xFFF
  2008                           tosh	equ	0xFFE
  2009                           tosl	equ	0xFFD
  2010                           pclatu	equ	0xFFB
  2011                           pclath	equ	0xFFA
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           prodh	equ	0xFF4
  2017                           prodl	equ	0xFF3
  2018                           intcon	equ	0xFF2
  2019                           postinc0	equ	0xFEE
  2020                           fsr0h	equ	0xFEA
  2021                           fsr0l	equ	0xFE9
  2022                           wreg	equ	0xFE8
  2023                           postdec1	equ	0xFE5
  2024                           fsr1h	equ	0xFE2
  2025                           fsr1l	equ	0xFE1
  2026                           indf2	equ	0xFDF
  2027                           postinc2	equ	0xFDE
  2028                           fsr2h	equ	0xFDA
  2029                           fsr2l	equ	0xFD9
  2030                           status	equ	0xFD8
  2031                           
  2032 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
  2033 ;; Defined at:
  2034 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      enum E11956
  2041 ;; Registers used:
  2042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    3
  2055 ;; This function calls:
  2056 ;;		Absolute function
  2057 ;;		_do_I2C_SEND_RESTART
  2058 ;;		_do_I2C_SEND_STOP
  2059 ;;		_i2c_restartWrite
  2060 ;;		_rd1RegCompleteHandler
  2061 ;;		_rd2RegCompleteHandler
  2062 ;;		_rdBlkRegCompleteHandler
  2063 ;;		_returnReset
  2064 ;;		_returnStop
  2065 ;;		_wr1RegCompleteHandler
  2066 ;;		_wr2RegCompleteHandler
  2067 ;; This function is called by:
  2068 ;;		_i2c_ISR
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text15
  2073  0011EA                     __ptext15:
  2074                           	opt stack 0
  2075  0011EA                     _do_I2C_DO_ADDRESS_NACK:
  2076                           	opt stack 23
  2077                           
  2078                           ;i2c_master.c: 321: i2c_status.addressNACKCheck = 0;
  2079                           
  2080                           ;incstack = 0
  2081  0011EA  9601               	bcf	_i2c_status,3,c
  2082                           
  2083                           ;i2c_master.c: 322: i2c_status.error = I2C_FAIL;
  2084  0011EC  0E02               	movlw	2
  2085  0011EE  6E0C               	movwf	_i2c_status+11,c
  2086                           
  2087                           ;i2c_master.c: 323: switch(i2c_status.callbackTable[i2c_addressNACK](i2c_status.callback
      +                          Payload[i2c_addressNACK]))
  2088  0011F0  D006               	goto	i2l429
  2089  0011F2                     
  2090                           ;i2c_master.c: 326: case i2c_restart_write:
  2091                           ;i2c_master.c: 327: return do_I2C_SEND_RESTART();
  2092  0011F2  EC7E  F00A         	call	_do_I2C_SEND_RESTART	;wreg free
  2093  0011F6  0012               	return	
  2094  0011F8                     
  2095                           ;i2c_master.c: 329: return do_I2C_SEND_STOP();
  2096  0011F8  EC7A  F00A         	call	_do_I2C_SEND_STOP	;wreg free
  2097                           
  2098                           ;i2c_master.c: 330: }
  2099  0011FC  0012               	return	
  2100  0011FE                     i2l429:
  2101  0011FE  C023  F03C         	movff	_i2c_status+34,rdBlkRegCompleteHandler@p
  2102  001202  C024  F03D         	movff	_i2c_status+35,rdBlkRegCompleteHandler@p+1
  2103  001206  EE20  F013         	lfsr	2,_i2c_status+18
  2104  00120A  D801               	call	i2u60_48
  2105  00120C  D00A               	goto	i2u60_49
  2106  00120E                     i2u60_48:
  2107  00120E  0005               	push	
  2108  001210  6EFA               	movwf	pclath,c
  2109  001212  50DE               	movf	postinc2,w,c
  2110  001214  6EFD               	movwf	tosl,c
  2111  001216  50DE               	movf	postinc2,w,c
  2112  001218  6EFE               	movwf	tosh,c
  2113  00121A  50DE               	movf	postinc2,w,c
  2114  00121C  6EFF               	movwf	tosu,c
  2115  00121E  50FA               	movf	pclath,w,c
  2116  001220  0012               	return		;indir
  2117  001222                     i2u60_49:
  2118                           
  2119                           ; Switch size 1, requested type "space"
  2120                           ; Number of cases is 2, Range of values is 2 to 3
  2121                           ; switch strategies available:
  2122                           ; Name         Instructions Cycles
  2123                           ; simple_byte            7     4 (average)
  2124                           ;	Chosen strategy is simple_byte
  2125  001222  0A02               	xorlw	2	; case 2
  2126  001224  B4D8               	btfsc	status,2,c
  2127  001226  D7E5               	goto	i2l430
  2128  001228  0A01               	xorlw	1	; case 3
  2129  00122A  B4D8               	btfsc	status,2,c
  2130  00122C  D7E2               	goto	i2l430
  2131  00122E  D7E4               	goto	i2l433
  2132  001230                     __end_of_do_I2C_DO_ADDRESS_NACK:
  2133                           	opt stack 0
  2134                           tosu	equ	0xFFF
  2135                           tosh	equ	0xFFE
  2136                           tosl	equ	0xFFD
  2137                           pclatu	equ	0xFFB
  2138                           pclath	equ	0xFFA
  2139                           tblptru	equ	0xFF8
  2140                           tblptrh	equ	0xFF7
  2141                           tblptrl	equ	0xFF6
  2142                           tablat	equ	0xFF5
  2143                           prodh	equ	0xFF4
  2144                           prodl	equ	0xFF3
  2145                           intcon	equ	0xFF2
  2146                           postinc0	equ	0xFEE
  2147                           fsr0h	equ	0xFEA
  2148                           fsr0l	equ	0xFE9
  2149                           wreg	equ	0xFE8
  2150                           postdec1	equ	0xFE5
  2151                           fsr1h	equ	0xFE2
  2152                           fsr1l	equ	0xFE1
  2153                           indf2	equ	0xFDF
  2154                           postinc2	equ	0xFDE
  2155                           fsr2h	equ	0xFDA
  2156                           fsr2l	equ	0xFD9
  2157                           status	equ	0xFD8
  2158                           
  2159 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
  2160 ;; Defined at:
  2161 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      enum E11956
  2168 ;; Registers used:
  2169 ;;		wreg, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2179 ;;Total ram usage:        0 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    1
  2182 ;; This function calls:
  2183 ;;		_i2c1_driver_sendNACK
  2184 ;; This function is called by:
  2185 ;;		_do_I2C_RX
  2186 ;;		_i2c_ISR
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text16
  2191  0014DC                     __ptext16:
  2192                           	opt stack 0
  2193  0014DC                     _do_I2C_DO_NACK_RESTART:
  2194                           	opt stack 24
  2195                           
  2196                           ;i2c_master.c: 313: i2c1_driver_sendNACK();
  2197                           
  2198                           ;incstack = 0
  2199  0014DC  EC9A  F00A         	call	_i2c1_driver_sendNACK	;wreg free
  2200                           
  2201                           ;i2c_master.c: 314: return I2C_SEND_RESTART;
  2202  0014E0  0E09               	movlw	9
  2203  0014E2  0012               	return	
  2204  0014E4                     __end_of_do_I2C_DO_NACK_RESTART:
  2205                           	opt stack 0
  2206                           tosu	equ	0xFFF
  2207                           tosh	equ	0xFFE
  2208                           tosl	equ	0xFFD
  2209                           pclatu	equ	0xFFB
  2210                           pclath	equ	0xFFA
  2211                           tblptru	equ	0xFF8
  2212                           tblptrh	equ	0xFF7
  2213                           tblptrl	equ	0xFF6
  2214                           tablat	equ	0xFF5
  2215                           prodh	equ	0xFF4
  2216                           prodl	equ	0xFF3
  2217                           intcon	equ	0xFF2
  2218                           postinc0	equ	0xFEE
  2219                           fsr0h	equ	0xFEA
  2220                           fsr0l	equ	0xFE9
  2221                           wreg	equ	0xFE8
  2222                           postdec1	equ	0xFE5
  2223                           fsr1h	equ	0xFE2
  2224                           fsr1l	equ	0xFE1
  2225                           indf2	equ	0xFDF
  2226                           postinc2	equ	0xFDE
  2227                           fsr2h	equ	0xFDA
  2228                           fsr2l	equ	0xFD9
  2229                           status	equ	0xFD8
  2230                           
  2231 ;; *************** function _do_I2C_DO_NACK_STOP *****************
  2232 ;; Defined at:
  2233 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      enum E11956
  2240 ;; Registers used:
  2241 ;;		wreg, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    1
  2254 ;; This function calls:
  2255 ;;		_i2c1_driver_sendNACK
  2256 ;; This function is called by:
  2257 ;;		_do_I2C_RX
  2258 ;;		_i2c_ISR
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text17
  2263  0014E4                     __ptext17:
  2264                           	opt stack 0
  2265  0014E4                     _do_I2C_DO_NACK_STOP:
  2266                           	opt stack 24
  2267                           
  2268                           ;i2c_master.c: 307: i2c1_driver_sendNACK();
  2269                           
  2270                           ;incstack = 0
  2271  0014E4  EC9A  F00A         	call	_i2c1_driver_sendNACK	;wreg free
  2272                           
  2273                           ;i2c_master.c: 308: return I2C_SEND_STOP;
  2274  0014E8  0E0A               	movlw	10
  2275  0014EA  0012               	return	
  2276  0014EC                     __end_of_do_I2C_DO_NACK_STOP:
  2277                           	opt stack 0
  2278                           tosu	equ	0xFFF
  2279                           tosh	equ	0xFFE
  2280                           tosl	equ	0xFFD
  2281                           pclatu	equ	0xFFB
  2282                           pclath	equ	0xFFA
  2283                           tblptru	equ	0xFF8
  2284                           tblptrh	equ	0xFF7
  2285                           tblptrl	equ	0xFF6
  2286                           tablat	equ	0xFF5
  2287                           prodh	equ	0xFF4
  2288                           prodl	equ	0xFF3
  2289                           intcon	equ	0xFF2
  2290                           postinc0	equ	0xFEE
  2291                           fsr0h	equ	0xFEA
  2292                           fsr0l	equ	0xFE9
  2293                           wreg	equ	0xFE8
  2294                           postdec1	equ	0xFE5
  2295                           fsr1h	equ	0xFE2
  2296                           fsr1l	equ	0xFE1
  2297                           indf2	equ	0xFDF
  2298                           postinc2	equ	0xFDE
  2299                           fsr2h	equ	0xFDA
  2300                           fsr2l	equ	0xFD9
  2301                           status	equ	0xFD8
  2302                           
  2303 ;; *************** function _do_I2C_DO_ACK *****************
  2304 ;; Defined at:
  2305 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      enum E11956
  2312 ;; Registers used:
  2313 ;;		wreg, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    1
  2326 ;; This function calls:
  2327 ;;		_i2c1_driver_sendACK
  2328 ;; This function is called by:
  2329 ;;		_i2c_ISR
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text18
  2334  0014EC                     __ptext18:
  2335                           	opt stack 0
  2336  0014EC                     _do_I2C_DO_ACK:
  2337                           	opt stack 25
  2338                           
  2339                           ;i2c_master.c: 301: i2c1_driver_sendACK();
  2340                           
  2341                           ;incstack = 0
  2342  0014EC  EC9D  F00A         	call	_i2c1_driver_sendACK	;wreg free
  2343                           
  2344                           ;i2c_master.c: 302: return I2C_RCEN;
  2345  0014F0  0E05               	movlw	5
  2346  0014F2  0012               	return	
  2347  0014F4                     __end_of_do_I2C_DO_ACK:
  2348                           	opt stack 0
  2349                           tosu	equ	0xFFF
  2350                           tosh	equ	0xFFE
  2351                           tosl	equ	0xFFD
  2352                           pclatu	equ	0xFFB
  2353                           pclath	equ	0xFFA
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           prodh	equ	0xFF4
  2359                           prodl	equ	0xFF3
  2360                           intcon	equ	0xFF2
  2361                           postinc0	equ	0xFEE
  2362                           fsr0h	equ	0xFEA
  2363                           fsr0l	equ	0xFE9
  2364                           wreg	equ	0xFE8
  2365                           postdec1	equ	0xFE5
  2366                           fsr1h	equ	0xFE2
  2367                           fsr1l	equ	0xFE1
  2368                           indf2	equ	0xFDF
  2369                           postinc2	equ	0xFDE
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8
  2373                           
  2374 ;; *************** function _do_I2C_RCEN *****************
  2375 ;; Defined at:
  2376 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;		None
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;		None
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      enum E11956
  2383 ;; Registers used:
  2384 ;;		wreg, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2394 ;;Total ram usage:        0 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    1
  2397 ;; This function calls:
  2398 ;;		_i2c1_driver_startRX
  2399 ;; This function is called by:
  2400 ;;		_i2c_ISR
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text19
  2405  0014C8                     __ptext19:
  2406                           	opt stack 0
  2407  0014C8                     _do_I2C_RCEN:
  2408                           	opt stack 25
  2409                           
  2410                           ;i2c_master.c: 294: i2c_status.addressNACKCheck = 0;
  2411                           
  2412                           ;incstack = 0
  2413  0014C8  9601               	bcf	_i2c_status,3,c
  2414                           
  2415                           ;i2c_master.c: 295: i2c1_driver_startRX();
  2416  0014CA  ECA4  F00A         	call	_i2c1_driver_startRX	;wreg free
  2417                           
  2418                           ;i2c_master.c: 296: return I2C_RX;
  2419  0014CE  0E04               	movlw	4
  2420  0014D0  0012               	return	
  2421  0014D2                     __end_of_do_I2C_RCEN:
  2422                           	opt stack 0
  2423                           tosu	equ	0xFFF
  2424                           tosh	equ	0xFFE
  2425                           tosl	equ	0xFFD
  2426                           pclatu	equ	0xFFB
  2427                           pclath	equ	0xFFA
  2428                           tblptru	equ	0xFF8
  2429                           tblptrh	equ	0xFF7
  2430                           tblptrl	equ	0xFF6
  2431                           tablat	equ	0xFF5
  2432                           prodh	equ	0xFF4
  2433                           prodl	equ	0xFF3
  2434                           intcon	equ	0xFF2
  2435                           postinc0	equ	0xFEE
  2436                           fsr0h	equ	0xFEA
  2437                           fsr0l	equ	0xFE9
  2438                           wreg	equ	0xFE8
  2439                           postdec1	equ	0xFE5
  2440                           fsr1h	equ	0xFE2
  2441                           fsr1l	equ	0xFE1
  2442                           indf2	equ	0xFDF
  2443                           postinc2	equ	0xFDE
  2444                           fsr2h	equ	0xFDA
  2445                           fsr2l	equ	0xFD9
  2446                           status	equ	0xFD8
  2447                           
  2448 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
  2449 ;; Defined at:
  2450 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      enum E11956
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    1
  2471 ;; This function calls:
  2472 ;;		_i2c1_driver_TXData
  2473 ;; This function is called by:
  2474 ;;		_i2c_ISR
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text20
  2479  00149E                     __ptext20:
  2480                           	opt stack 0
  2481  00149E                     _do_I2C_SEND_ADR_WRITE:
  2482                           	opt stack 25
  2483                           
  2484                           ;i2c_master.c: 287: i2c_status.addressNACKCheck = 1;
  2485                           
  2486                           ;incstack = 0
  2487  00149E  8601               	bsf	_i2c_status,3,c
  2488                           
  2489                           ;i2c_master.c: 288: i2c1_driver_TXData(i2c_status.address << 1);
  2490  0014A0  5002               	movf	_i2c_status+1,w,c
  2491  0014A2  2402               	addwf	_i2c_status+1,w,c
  2492  0014A4  EC8A  F00A         	call	_i2c1_driver_TXData
  2493                           
  2494                           ;i2c_master.c: 289: return I2C_TX;
  2495  0014A8  0E03               	movlw	3
  2496  0014AA  0012               	return	
  2497  0014AC                     __end_of_do_I2C_SEND_ADR_WRITE:
  2498                           	opt stack 0
  2499                           tosu	equ	0xFFF
  2500                           tosh	equ	0xFFE
  2501                           tosl	equ	0xFFD
  2502                           pclatu	equ	0xFFB
  2503                           pclath	equ	0xFFA
  2504                           tblptru	equ	0xFF8
  2505                           tblptrh	equ	0xFF7
  2506                           tblptrl	equ	0xFF6
  2507                           tablat	equ	0xFF5
  2508                           prodh	equ	0xFF4
  2509                           prodl	equ	0xFF3
  2510                           intcon	equ	0xFF2
  2511                           postinc0	equ	0xFEE
  2512                           fsr0h	equ	0xFEA
  2513                           fsr0l	equ	0xFE9
  2514                           wreg	equ	0xFE8
  2515                           postdec1	equ	0xFE5
  2516                           fsr1h	equ	0xFE2
  2517                           fsr1l	equ	0xFE1
  2518                           indf2	equ	0xFDF
  2519                           postinc2	equ	0xFDE
  2520                           fsr2h	equ	0xFDA
  2521                           fsr2l	equ	0xFD9
  2522                           status	equ	0xFD8
  2523                           
  2524 ;; *************** function _do_I2C_SEND_ADR_READ *****************
  2525 ;; Defined at:
  2526 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      enum E11956
  2533 ;; Registers used:
  2534 ;;		wreg, status,0, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    1
  2547 ;; This function calls:
  2548 ;;		_i2c1_driver_TXData
  2549 ;; This function is called by:
  2550 ;;		_i2c_ISR
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text21
  2555  0014AC                     __ptext21:
  2556                           	opt stack 0
  2557  0014AC                     _do_I2C_SEND_ADR_READ:
  2558                           	opt stack 25
  2559                           
  2560                           ;i2c_master.c: 280: i2c_status.addressNACKCheck = 1;
  2561                           
  2562                           ;incstack = 0
  2563  0014AC  8601               	bsf	_i2c_status,3,c
  2564                           
  2565                           ;i2c_master.c: 281: i2c1_driver_TXData(i2c_status.address << 1 | 1);
  2566  0014AE  80D8               	bsf	status,0,c
  2567  0014B0  3402               	rlcf	_i2c_status+1,w,c
  2568  0014B2  EC8A  F00A         	call	_i2c1_driver_TXData
  2569                           
  2570                           ;i2c_master.c: 282: return I2C_RCEN;
  2571  0014B6  0E05               	movlw	5
  2572  0014B8  0012               	return	
  2573  0014BA                     __end_of_do_I2C_SEND_ADR_READ:
  2574                           	opt stack 0
  2575                           tosu	equ	0xFFF
  2576                           tosh	equ	0xFFE
  2577                           tosl	equ	0xFFD
  2578                           pclatu	equ	0xFFB
  2579                           pclath	equ	0xFFA
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodh	equ	0xFF4
  2585                           prodl	equ	0xFF3
  2586                           intcon	equ	0xFF2
  2587                           postinc0	equ	0xFEE
  2588                           fsr0h	equ	0xFEA
  2589                           fsr0l	equ	0xFE9
  2590                           wreg	equ	0xFE8
  2591                           postdec1	equ	0xFE5
  2592                           fsr1h	equ	0xFE2
  2593                           fsr1l	equ	0xFE1
  2594                           indf2	equ	0xFDF
  2595                           postinc2	equ	0xFDE
  2596                           fsr2h	equ	0xFDA
  2597                           fsr2l	equ	0xFD9
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function _do_I2C_SEND_STOP *****************
  2601 ;; Defined at:
  2602 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      enum E11956
  2609 ;; Registers used:
  2610 ;;		wreg, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    1
  2623 ;; This function calls:
  2624 ;;		_i2c1_driver_stop
  2625 ;; This function is called by:
  2626 ;;		_do_I2C_DO_ADDRESS_NACK
  2627 ;;		_do_I2C_TX
  2628 ;;		_do_I2C_TX_EMPTY
  2629 ;;		_i2c_ISR
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text22
  2634  0014F4                     __ptext22:
  2635                           	opt stack 0
  2636  0014F4                     _do_I2C_SEND_STOP:
  2637                           	opt stack 24
  2638                           
  2639                           ;i2c_master.c: 274: i2c1_driver_stop();
  2640                           
  2641                           ;incstack = 0
  2642  0014F4  ECAC  F00A         	call	_i2c1_driver_stop	;wreg free
  2643                           
  2644                           ;i2c_master.c: 275: return I2C_IDLE;
  2645  0014F8  0E00               	movlw	0
  2646  0014FA  0012               	return	
  2647  0014FC                     __end_of_do_I2C_SEND_STOP:
  2648                           	opt stack 0
  2649                           tosu	equ	0xFFF
  2650                           tosh	equ	0xFFE
  2651                           tosl	equ	0xFFD
  2652                           pclatu	equ	0xFFB
  2653                           pclath	equ	0xFFA
  2654                           tblptru	equ	0xFF8
  2655                           tblptrh	equ	0xFF7
  2656                           tblptrl	equ	0xFF6
  2657                           tablat	equ	0xFF5
  2658                           prodh	equ	0xFF4
  2659                           prodl	equ	0xFF3
  2660                           intcon	equ	0xFF2
  2661                           postinc0	equ	0xFEE
  2662                           fsr0h	equ	0xFEA
  2663                           fsr0l	equ	0xFE9
  2664                           wreg	equ	0xFE8
  2665                           postdec1	equ	0xFE5
  2666                           fsr1h	equ	0xFE2
  2667                           fsr1l	equ	0xFE1
  2668                           indf2	equ	0xFDF
  2669                           postinc2	equ	0xFDE
  2670                           fsr2h	equ	0xFDA
  2671                           fsr2l	equ	0xFD9
  2672                           status	equ	0xFD8
  2673                           
  2674 ;; *************** function _do_I2C_SEND_RESTART *****************
  2675 ;; Defined at:
  2676 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      enum E11956
  2683 ;; Registers used:
  2684 ;;		wreg, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;Total ram usage:        0 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    1
  2697 ;; This function calls:
  2698 ;;		_i2c1_driver_restart
  2699 ;; This function is called by:
  2700 ;;		_do_I2C_DO_ADDRESS_NACK
  2701 ;;		_do_I2C_TX_EMPTY
  2702 ;;		_i2c_ISR
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text23
  2707  0014FC                     __ptext23:
  2708                           	opt stack 0
  2709  0014FC                     _do_I2C_SEND_RESTART:
  2710                           	opt stack 24
  2711                           
  2712                           ;i2c_master.c: 268: i2c1_driver_restart();
  2713                           
  2714                           ;incstack = 0
  2715  0014FC  ECAE  F00A         	call	_i2c1_driver_restart	;wreg free
  2716                           
  2717                           ;i2c_master.c: 269: return I2C_SEND_ADR_READ;
  2718  001500  0E01               	movlw	1
  2719  001502  0012               	return	
  2720  001504                     __end_of_do_I2C_SEND_RESTART:
  2721                           	opt stack 0
  2722                           tosu	equ	0xFFF
  2723                           tosh	equ	0xFFE
  2724                           tosl	equ	0xFFD
  2725                           pclatu	equ	0xFFB
  2726                           pclath	equ	0xFFA
  2727                           tblptru	equ	0xFF8
  2728                           tblptrh	equ	0xFF7
  2729                           tblptrl	equ	0xFF6
  2730                           tablat	equ	0xFF5
  2731                           prodh	equ	0xFF4
  2732                           prodl	equ	0xFF3
  2733                           intcon	equ	0xFF2
  2734                           postinc0	equ	0xFEE
  2735                           fsr0h	equ	0xFEA
  2736                           fsr0l	equ	0xFE9
  2737                           wreg	equ	0xFE8
  2738                           postdec1	equ	0xFE5
  2739                           fsr1h	equ	0xFE2
  2740                           fsr1l	equ	0xFE1
  2741                           indf2	equ	0xFDF
  2742                           postinc2	equ	0xFDE
  2743                           fsr2h	equ	0xFDA
  2744                           fsr2l	equ	0xFD9
  2745                           status	equ	0xFD8
  2746                           
  2747 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
  2748 ;; Defined at:
  2749 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      enum E11956
  2756 ;; Registers used:
  2757 ;;		wreg, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2767 ;;Total ram usage:        0 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    1
  2770 ;; This function calls:
  2771 ;;		_i2c1_driver_restart
  2772 ;; This function is called by:
  2773 ;;		_do_I2C_TX
  2774 ;;		_i2c_ISR
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text24
  2779  001504                     __ptext24:
  2780                           	opt stack 0
  2781  001504                     _do_I2C_SEND_RESTART_WRITE:
  2782                           	opt stack 24
  2783                           
  2784                           ;i2c_master.c: 262: i2c1_driver_restart();
  2785                           
  2786                           ;incstack = 0
  2787  001504  ECAE  F00A         	call	_i2c1_driver_restart	;wreg free
  2788                           
  2789                           ;i2c_master.c: 263: return I2C_SEND_ADR_WRITE;
  2790  001508  0E02               	movlw	2
  2791  00150A  0012               	return	
  2792  00150C                     __end_of_do_I2C_SEND_RESTART_WRITE:
  2793                           	opt stack 0
  2794                           tosu	equ	0xFFF
  2795                           tosh	equ	0xFFE
  2796                           tosl	equ	0xFFD
  2797                           pclatu	equ	0xFFB
  2798                           pclath	equ	0xFFA
  2799                           tblptru	equ	0xFF8
  2800                           tblptrh	equ	0xFF7
  2801                           tblptrl	equ	0xFF6
  2802                           tablat	equ	0xFF5
  2803                           prodh	equ	0xFF4
  2804                           prodl	equ	0xFF3
  2805                           intcon	equ	0xFF2
  2806                           postinc0	equ	0xFEE
  2807                           fsr0h	equ	0xFEA
  2808                           fsr0l	equ	0xFE9
  2809                           wreg	equ	0xFE8
  2810                           postdec1	equ	0xFE5
  2811                           fsr1h	equ	0xFE2
  2812                           fsr1l	equ	0xFE1
  2813                           indf2	equ	0xFDF
  2814                           postinc2	equ	0xFDE
  2815                           fsr2h	equ	0xFDA
  2816                           fsr2l	equ	0xFD9
  2817                           status	equ	0xFD8
  2818                           
  2819 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
  2820 ;; Defined at:
  2821 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      enum E11956
  2828 ;; Registers used:
  2829 ;;		wreg, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    1
  2842 ;; This function calls:
  2843 ;;		_i2c1_driver_restart
  2844 ;; This function is called by:
  2845 ;;		_do_I2C_TX
  2846 ;;		_i2c_ISR
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text25
  2851  00150C                     __ptext25:
  2852                           	opt stack 0
  2853  00150C                     _do_I2C_SEND_RESTART_READ:
  2854                           	opt stack 24
  2855                           
  2856                           ;i2c_master.c: 256: i2c1_driver_restart();
  2857                           
  2858                           ;incstack = 0
  2859  00150C  ECAE  F00A         	call	_i2c1_driver_restart	;wreg free
  2860                           
  2861                           ;i2c_master.c: 257: return I2C_SEND_ADR_READ;
  2862  001510  0E01               	movlw	1
  2863  001512  0012               	return	
  2864  001514                     __end_of_do_I2C_SEND_RESTART_READ:
  2865                           	opt stack 0
  2866                           tosu	equ	0xFFF
  2867                           tosh	equ	0xFFE
  2868                           tosl	equ	0xFFD
  2869                           pclatu	equ	0xFFB
  2870                           pclath	equ	0xFFA
  2871                           tblptru	equ	0xFF8
  2872                           tblptrh	equ	0xFF7
  2873                           tblptrl	equ	0xFF6
  2874                           tablat	equ	0xFF5
  2875                           prodh	equ	0xFF4
  2876                           prodl	equ	0xFF3
  2877                           intcon	equ	0xFF2
  2878                           postinc0	equ	0xFEE
  2879                           fsr0h	equ	0xFEA
  2880                           fsr0l	equ	0xFE9
  2881                           wreg	equ	0xFE8
  2882                           postdec1	equ	0xFE5
  2883                           fsr1h	equ	0xFE2
  2884                           fsr1l	equ	0xFE1
  2885                           indf2	equ	0xFDF
  2886                           postinc2	equ	0xFDE
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8
  2890                           
  2891 ;; *************** function _do_I2C_IDLE *****************
  2892 ;; Defined at:
  2893 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      enum E11956
  2900 ;; Registers used:
  2901 ;;		wreg, status,2
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;Total ram usage:        0 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_i2c_ISR
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text26
  2921  0014D2                     __ptext26:
  2922                           	opt stack 0
  2923  0014D2                     _do_I2C_IDLE:
  2924                           	opt stack 26
  2925                           
  2926                           ;i2c_master.c: 249: i2c_status.busy = 0;
  2927                           
  2928                           ;incstack = 0
  2929  0014D2  9001               	bcf	_i2c_status,0,c
  2930                           
  2931                           ;i2c_master.c: 250: i2c_status.error = I2C_NOERR;
  2932  0014D4  0E00               	movlw	0
  2933  0014D6  6E0C               	movwf	_i2c_status+11,c
  2934                           
  2935                           ;i2c_master.c: 251: return I2C_RESET;
  2936  0014D8  0E0E               	movlw	14
  2937  0014DA  0012               	return	
  2938  0014DC                     __end_of_do_I2C_IDLE:
  2939                           	opt stack 0
  2940                           tosu	equ	0xFFF
  2941                           tosh	equ	0xFFE
  2942                           tosl	equ	0xFFD
  2943                           pclatu	equ	0xFFB
  2944                           pclath	equ	0xFFA
  2945                           tblptru	equ	0xFF8
  2946                           tblptrh	equ	0xFF7
  2947                           tblptrl	equ	0xFF6
  2948                           tablat	equ	0xFF5
  2949                           prodh	equ	0xFF4
  2950                           prodl	equ	0xFF3
  2951                           intcon	equ	0xFF2
  2952                           postinc0	equ	0xFEE
  2953                           fsr0h	equ	0xFEA
  2954                           fsr0l	equ	0xFE9
  2955                           wreg	equ	0xFE8
  2956                           postdec1	equ	0xFE5
  2957                           fsr1h	equ	0xFE2
  2958                           fsr1l	equ	0xFE1
  2959                           indf2	equ	0xFDF
  2960                           postinc2	equ	0xFDE
  2961                           fsr2h	equ	0xFDA
  2962                           fsr2l	equ	0xFD9
  2963                           status	equ	0xFD8
  2964                           
  2965 ;; *************** function _do_I2C_RESET *****************
  2966 ;; Defined at:
  2967 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      enum E11956
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;Total ram usage:        0 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    1
  2988 ;; This function calls:
  2989 ;;		_i2c1_driver_resetBus
  2990 ;; This function is called by:
  2991 ;;		_i2c_ISR
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text27
  2996  0014BA                     __ptext27:
  2997                           	opt stack 0
  2998  0014BA                     _do_I2C_RESET:
  2999                           	opt stack 25
  3000                           
  3001                           ;i2c_master.c: 241: i2c1_driver_resetBus();
  3002                           
  3003                           ;incstack = 0
  3004  0014BA  ECB0  F00A         	call	_i2c1_driver_resetBus	;wreg free
  3005                           
  3006                           ;i2c_master.c: 242: i2c_status.busy = 0;
  3007  0014BE  9001               	bcf	_i2c_status,0,c
  3008                           
  3009                           ;i2c_master.c: 243: i2c_status.error = I2C_NOERR;
  3010  0014C0  0E00               	movlw	0
  3011  0014C2  6E0C               	movwf	_i2c_status+11,c
  3012                           
  3013                           ;i2c_master.c: 244: return I2C_RESET;
  3014  0014C4  0E0E               	movlw	14
  3015  0014C6  0012               	return	
  3016  0014C8                     __end_of_do_I2C_RESET:
  3017                           	opt stack 0
  3018                           tosu	equ	0xFFF
  3019                           tosh	equ	0xFFE
  3020                           tosl	equ	0xFFD
  3021                           pclatu	equ	0xFFB
  3022                           pclath	equ	0xFFA
  3023                           tblptru	equ	0xFF8
  3024                           tblptrh	equ	0xFF7
  3025                           tblptrl	equ	0xFF6
  3026                           tablat	equ	0xFF5
  3027                           prodh	equ	0xFF4
  3028                           prodl	equ	0xFF3
  3029                           intcon	equ	0xFF2
  3030                           postinc0	equ	0xFEE
  3031                           fsr0h	equ	0xFEA
  3032                           fsr0l	equ	0xFE9
  3033                           wreg	equ	0xFE8
  3034                           postdec1	equ	0xFE5
  3035                           fsr1h	equ	0xFE2
  3036                           fsr1l	equ	0xFE1
  3037                           indf2	equ	0xFDF
  3038                           postinc2	equ	0xFDE
  3039                           fsr2h	equ	0xFDA
  3040                           fsr2l	equ	0xFD9
  3041                           status	equ	0xFD8
  3042                           
  3043 ;; *************** function _do_I2C_TX_EMPTY *****************
  3044 ;; Defined at:
  3045 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      enum E11956
  3052 ;; Registers used:
  3053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    3
  3066 ;; This function calls:
  3067 ;;		Absolute function
  3068 ;;		_do_I2C_SEND_RESTART
  3069 ;;		_do_I2C_SEND_STOP
  3070 ;;		_i2c_restartWrite
  3071 ;;		_mssp1_setIRQ
  3072 ;;		_rd1RegCompleteHandler
  3073 ;;		_rd2RegCompleteHandler
  3074 ;;		_rdBlkRegCompleteHandler
  3075 ;;		_returnReset
  3076 ;;		_returnStop
  3077 ;;		_wr1RegCompleteHandler
  3078 ;;		_wr2RegCompleteHandler
  3079 ;; This function is called by:
  3080 ;;		_i2c_ISR
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text28
  3085  001194                     __ptext28:
  3086                           	opt stack 0
  3087  001194                     _do_I2C_TX_EMPTY:
  3088                           	opt stack 23
  3089                           
  3090                           ;i2c_master.c: 384: i2c_status.bufferFree = 1;
  3091                           
  3092                           ;incstack = 0
  3093  001194  8401               	bsf	_i2c_status,2,c
  3094                           
  3095                           ;i2c_master.c: 385: switch(i2c_status.callbackTable[i2c_dataComplete](i2c_status.callbac
      +                          kPayload[i2c_dataComplete]))
  3096  001196  D00A               	goto	i2l465
  3097  001198                     
  3098                           ;i2c_master.c: 388: case i2c_restart_write:
  3099                           ;i2c_master.c: 389: return do_I2C_SEND_RESTART();
  3100  001198  EC7E  F00A         	call	_do_I2C_SEND_RESTART	;wreg free
  3101  00119C  0012               	return	
  3102  00119E                     
  3103                           ;i2c_master.c: 391: mssp1_setIRQ();
  3104  00119E  EC97  F00A         	call	_mssp1_setIRQ	;wreg free
  3105                           
  3106                           ;i2c_master.c: 392: return I2C_TX;
  3107  0011A2  0E03               	movlw	3
  3108  0011A4  0012               	return	
  3109  0011A6                     
  3110                           ;i2c_master.c: 395: return do_I2C_SEND_STOP();
  3111                           
  3112                           ;i2c_master.c: 394: case i2c_stop:
  3113  0011A6  EC7A  F00A         	call	_do_I2C_SEND_STOP	;wreg free
  3114                           
  3115                           ;i2c_master.c: 396: }
  3116  0011AA  0012               	return	
  3117  0011AC                     i2l465:
  3118  0011AC  C01F  F03C         	movff	_i2c_status+30,rdBlkRegCompleteHandler@p
  3119  0011B0  C020  F03D         	movff	_i2c_status+31,rdBlkRegCompleteHandler@p+1
  3120  0011B4  EE20  F00D         	lfsr	2,_i2c_status+12
  3121  0011B8  D801               	call	i2u66_48
  3122  0011BA  D00A               	goto	i2u66_49
  3123  0011BC                     i2u66_48:
  3124  0011BC  0005               	push	
  3125  0011BE  6EFA               	movwf	pclath,c
  3126  0011C0  50DE               	movf	postinc2,w,c
  3127  0011C2  6EFD               	movwf	tosl,c
  3128  0011C4  50DE               	movf	postinc2,w,c
  3129  0011C6  6EFE               	movwf	tosh,c
  3130  0011C8  50DE               	movf	postinc2,w,c
  3131  0011CA  6EFF               	movwf	tosu,c
  3132  0011CC  50FA               	movf	pclath,w,c
  3133  0011CE  0012               	return		;indir
  3134  0011D0                     i2u66_49:
  3135                           
  3136                           ; Switch size 1, requested type "space"
  3137                           ; Number of cases is 4, Range of values is 1 to 4
  3138                           ; switch strategies available:
  3139                           ; Name         Instructions Cycles
  3140                           ; simple_byte           13     7 (average)
  3141                           ;	Chosen strategy is simple_byte
  3142  0011D0  0A01               	xorlw	1	; case 1
  3143  0011D2  B4D8               	btfsc	status,2,c
  3144  0011D4  D7E8               	goto	i2l470
  3145  0011D6  0A03               	xorlw	3	; case 2
  3146  0011D8  B4D8               	btfsc	status,2,c
  3147  0011DA  D7DE               	goto	i2l466
  3148  0011DC  0A01               	xorlw	1	; case 3
  3149  0011DE  B4D8               	btfsc	status,2,c
  3150  0011E0  D7DB               	goto	i2l466
  3151  0011E2  0A07               	xorlw	7	; case 4
  3152  0011E4  B4D8               	btfsc	status,2,c
  3153  0011E6  D7DB               	goto	i2l469
  3154  0011E8  D7DE               	goto	i2l470
  3155  0011EA                     __end_of_do_I2C_TX_EMPTY:
  3156                           	opt stack 0
  3157                           tosu	equ	0xFFF
  3158                           tosh	equ	0xFFE
  3159                           tosl	equ	0xFFD
  3160                           pclatu	equ	0xFFB
  3161                           pclath	equ	0xFFA
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           prodh	equ	0xFF4
  3167                           prodl	equ	0xFF3
  3168                           intcon	equ	0xFF2
  3169                           postinc0	equ	0xFEE
  3170                           fsr0h	equ	0xFEA
  3171                           fsr0l	equ	0xFE9
  3172                           wreg	equ	0xFE8
  3173                           postdec1	equ	0xFE5
  3174                           fsr1h	equ	0xFE2
  3175                           fsr1l	equ	0xFE1
  3176                           indf2	equ	0xFDF
  3177                           postinc2	equ	0xFDE
  3178                           fsr2h	equ	0xFDA
  3179                           fsr2l	equ	0xFD9
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _mssp1_setIRQ *****************
  3183 ;; Defined at:
  3184 ;;		line 58 in file "mcc_generated_files/i2c1_driver.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		None
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_do_I2C_TX_EMPTY
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text29
  3212  00152E                     __ptext29:
  3213                           	opt stack 0
  3214  00152E                     _mssp1_setIRQ:
  3215                           	opt stack 25
  3216                           
  3217                           ;i2c1_driver.c: 60: PIR3bits.SSP1IF = 1;
  3218                           
  3219                           ;incstack = 0
  3220  00152E  010E               	movlb	14	; () banked
  3221  001530  81CD               	bsf	205,0,b	;volatile
  3222                           
  3223                           ; BSR set to: 14
  3224  001532  0012               	return		;funcret
  3225  001534                     __end_of_mssp1_setIRQ:
  3226                           	opt stack 0
  3227                           tosu	equ	0xFFF
  3228                           tosh	equ	0xFFE
  3229                           tosl	equ	0xFFD
  3230                           pclatu	equ	0xFFB
  3231                           pclath	equ	0xFFA
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           prodh	equ	0xFF4
  3237                           prodl	equ	0xFF3
  3238                           intcon	equ	0xFF2
  3239                           postinc0	equ	0xFEE
  3240                           fsr0h	equ	0xFEA
  3241                           fsr0l	equ	0xFE9
  3242                           wreg	equ	0xFE8
  3243                           postdec1	equ	0xFE5
  3244                           fsr1h	equ	0xFE2
  3245                           fsr1l	equ	0xFE1
  3246                           indf2	equ	0xFDF
  3247                           postinc2	equ	0xFDE
  3248                           fsr2h	equ	0xFDA
  3249                           fsr2l	equ	0xFD9
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _i2c1_driver_isNACK *****************
  3253 ;; Defined at:
  3254 ;;		line 161 in file "mcc_generated_files/i2c1_driver.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;		None               void
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3272 ;;Total ram usage:        1 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_do_I2C_TX
  3278 ;;		_i2c_ISR
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text30
  3283  001464                     __ptext30:
  3284                           	opt stack 0
  3285  001464                     _i2c1_driver_isNACK:
  3286                           	opt stack 26
  3287                           
  3288                           ;i2c1_driver.c: 163: return SSP1CON2bits.ACKSTAT = 1;
  3289                           
  3290                           ; BSR set to: 14
  3291                           ;incstack = 0
  3292  001464  5097               	movf	3991,w,c	;volatile
  3293  001466  0BBF               	andlw	-65
  3294  001468  0940               	iorlw	64
  3295  00146A  6E97               	movwf	3991,c	;volatile
  3296  00146C  3897               	swapf	3991,w,c	;volatile
  3297  00146E  32E8               	rrcf	wreg,f,c
  3298  001470  32E8               	rrcf	wreg,f,c
  3299  001472  0B01               	andlw	1
  3300  001474  6E31               	movwf	??_i2c1_driver_isNACK& (0+255),c
  3301  001476  3031               	rrcf	??_i2c1_driver_isNACK,w,c
  3302  001478  0012               	return	
  3303  00147A                     __end_of_i2c1_driver_isNACK:
  3304                           	opt stack 0
  3305                           tosu	equ	0xFFF
  3306                           tosh	equ	0xFFE
  3307                           tosl	equ	0xFFD
  3308                           pclatu	equ	0xFFB
  3309                           pclath	equ	0xFFA
  3310                           tblptru	equ	0xFF8
  3311                           tblptrh	equ	0xFF7
  3312                           tblptrl	equ	0xFF6
  3313                           tablat	equ	0xFF5
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           intcon	equ	0xFF2
  3317                           postinc0	equ	0xFEE
  3318                           fsr0h	equ	0xFEA
  3319                           fsr0l	equ	0xFE9
  3320                           wreg	equ	0xFE8
  3321                           postdec1	equ	0xFE5
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           indf2	equ	0xFDF
  3325                           postinc2	equ	0xFDE
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8
  3329                           
  3330 ;; *************** function _i2c1_driver_TXData *****************
  3331 ;; Defined at:
  3332 ;;		line 186 in file "mcc_generated_files/i2c1_driver.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  d               1    wreg     unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  d               1    0[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;Total ram usage:        1 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_do_I2C_SEND_ADR_READ
  3356 ;;		_do_I2C_SEND_ADR_WRITE
  3357 ;;		_do_I2C_TX
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text31
  3362  001514                     __ptext31:
  3363                           	opt stack 0
  3364  001514                     _i2c1_driver_TXData:
  3365                           	opt stack 25
  3366                           
  3367                           ;incstack = 0
  3368                           ;i2c1_driver_TXData@d stored from wreg
  3369  001514  6E31               	movwf	i2c1_driver_TXData@d,c
  3370                           
  3371                           ;i2c1_driver.c: 188: SSP1BUF = d;
  3372  001516  C031  FF92         	movff	i2c1_driver_TXData@d,3986	;volatile
  3373  00151A  0012               	return		;funcret
  3374  00151C                     __end_of_i2c1_driver_TXData:
  3375                           	opt stack 0
  3376                           tosu	equ	0xFFF
  3377                           tosh	equ	0xFFE
  3378                           tosl	equ	0xFFD
  3379                           pclatu	equ	0xFFB
  3380                           pclath	equ	0xFFA
  3381                           tblptru	equ	0xFF8
  3382                           tblptrh	equ	0xFF7
  3383                           tblptrl	equ	0xFF6
  3384                           tablat	equ	0xFF5
  3385                           prodh	equ	0xFF4
  3386                           prodl	equ	0xFF3
  3387                           intcon	equ	0xFF2
  3388                           postinc0	equ	0xFEE
  3389                           fsr0h	equ	0xFEA
  3390                           fsr0l	equ	0xFE9
  3391                           wreg	equ	0xFE8
  3392                           postdec1	equ	0xFE5
  3393                           fsr1h	equ	0xFE2
  3394                           fsr1l	equ	0xFE1
  3395                           indf2	equ	0xFDF
  3396                           postinc2	equ	0xFDE
  3397                           fsr2h	equ	0xFDA
  3398                           fsr2l	equ	0xFD9
  3399                           status	equ	0xFD8
  3400                           
  3401 ;; *************** function _i2c1_driver_getRXData *****************
  3402 ;; Defined at:
  3403 ;;		line 171 in file "mcc_generated_files/i2c1_driver.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      unsigned char 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_do_I2C_RX
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text32
  3431  001544                     __ptext32:
  3432                           	opt stack 0
  3433  001544                     _i2c1_driver_getRXData:
  3434                           	opt stack 25
  3435                           
  3436                           ;i2c1_driver.c: 173: return SSP1BUF;
  3437                           
  3438                           ;incstack = 0
  3439  001544  5092               	movf	3986,w,c	;volatile
  3440  001546  0012               	return	
  3441  001548                     __end_of_i2c1_driver_getRXData:
  3442                           	opt stack 0
  3443                           tosu	equ	0xFFF
  3444                           tosh	equ	0xFFE
  3445                           tosl	equ	0xFFD
  3446                           pclatu	equ	0xFFB
  3447                           pclath	equ	0xFFA
  3448                           tblptru	equ	0xFF8
  3449                           tblptrh	equ	0xFF7
  3450                           tblptrl	equ	0xFF6
  3451                           tablat	equ	0xFF5
  3452                           prodh	equ	0xFF4
  3453                           prodl	equ	0xFF3
  3454                           intcon	equ	0xFF2
  3455                           postinc0	equ	0xFEE
  3456                           fsr0h	equ	0xFEA
  3457                           fsr0l	equ	0xFE9
  3458                           wreg	equ	0xFE8
  3459                           postdec1	equ	0xFE5
  3460                           fsr1h	equ	0xFE2
  3461                           fsr1l	equ	0xFE1
  3462                           indf2	equ	0xFDF
  3463                           postinc2	equ	0xFDE
  3464                           fsr2h	equ	0xFDA
  3465                           fsr2l	equ	0xFD9
  3466                           status	equ	0xFD8
  3467                           
  3468 ;; *************** function _i2c1_driver_sendNACK *****************
  3469 ;; Defined at:
  3470 ;;		line 202 in file "mcc_generated_files/i2c1_driver.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		None
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3488 ;;Total ram usage:        0 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_do_I2C_DO_NACK_STOP
  3494 ;;		_do_I2C_DO_NACK_RESTART
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text33
  3499  001534                     __ptext33:
  3500                           	opt stack 0
  3501  001534                     _i2c1_driver_sendNACK:
  3502                           	opt stack 24
  3503                           
  3504                           ;i2c1_driver.c: 204: SSP1CON2bits.ACKDT = 1;
  3505                           
  3506                           ;incstack = 0
  3507  001534  8A97               	bsf	3991,5,c	;volatile
  3508                           
  3509                           ;i2c1_driver.c: 205: SSP1CON2bits.ACKEN = 1;
  3510  001536  8897               	bsf	3991,4,c	;volatile
  3511  001538  0012               	return		;funcret
  3512  00153A                     __end_of_i2c1_driver_sendNACK:
  3513                           	opt stack 0
  3514                           tosu	equ	0xFFF
  3515                           tosh	equ	0xFFE
  3516                           tosl	equ	0xFFD
  3517                           pclatu	equ	0xFFB
  3518                           pclath	equ	0xFFA
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           intcon	equ	0xFF2
  3526                           postinc0	equ	0xFEE
  3527                           fsr0h	equ	0xFEA
  3528                           fsr0l	equ	0xFE9
  3529                           wreg	equ	0xFE8
  3530                           postdec1	equ	0xFE5
  3531                           fsr1h	equ	0xFE2
  3532                           fsr1l	equ	0xFE1
  3533                           indf2	equ	0xFDF
  3534                           postinc2	equ	0xFDE
  3535                           fsr2h	equ	0xFDA
  3536                           fsr2l	equ	0xFD9
  3537                           status	equ	0xFD8
  3538                           
  3539 ;; *************** function _i2c1_driver_resetBus *****************
  3540 ;; Defined at:
  3541 ;;		line 141 in file "mcc_generated_files/i2c1_driver.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		None
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_do_I2C_RESET
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text34
  3569  001560                     __ptext34:
  3570                           	opt stack 0
  3571  001560                     _i2c1_driver_resetBus:
  3572                           	opt stack 25
  3573                           
  3574                           ;incstack = 0
  3575  001560  0012               	return		;funcret
  3576  001562                     __end_of_i2c1_driver_resetBus:
  3577                           	opt stack 0
  3578                           tosu	equ	0xFFF
  3579                           tosh	equ	0xFFE
  3580                           tosl	equ	0xFFD
  3581                           pclatu	equ	0xFFB
  3582                           pclath	equ	0xFFA
  3583                           tblptru	equ	0xFF8
  3584                           tblptrh	equ	0xFF7
  3585                           tblptrl	equ	0xFF6
  3586                           tablat	equ	0xFF5
  3587                           prodh	equ	0xFF4
  3588                           prodl	equ	0xFF3
  3589                           intcon	equ	0xFF2
  3590                           postinc0	equ	0xFEE
  3591                           fsr0h	equ	0xFEA
  3592                           fsr0l	equ	0xFE9
  3593                           wreg	equ	0xFE8
  3594                           postdec1	equ	0xFE5
  3595                           fsr1h	equ	0xFE2
  3596                           fsr1l	equ	0xFE1
  3597                           indf2	equ	0xFDF
  3598                           postinc2	equ	0xFDE
  3599                           fsr2h	equ	0xFDA
  3600                           fsr2l	equ	0xFD9
  3601                           status	equ	0xFD8
  3602                           
  3603 ;; *************** function _i2c1_driver_startRX *****************
  3604 ;; Defined at:
  3605 ;;		line 166 in file "mcc_generated_files/i2c1_driver.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		None
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_do_I2C_RCEN
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text35
  3633  001548                     __ptext35:
  3634                           	opt stack 0
  3635  001548                     _i2c1_driver_startRX:
  3636                           	opt stack 25
  3637                           
  3638                           ;i2c1_driver.c: 168: SSP1CON2bits.RCEN = 1;
  3639                           
  3640                           ;incstack = 0
  3641  001548  8697               	bsf	3991,3,c	;volatile
  3642  00154A  0012               	return		;funcret
  3643  00154C                     __end_of_i2c1_driver_startRX:
  3644                           	opt stack 0
  3645                           tosu	equ	0xFFF
  3646                           tosh	equ	0xFFE
  3647                           tosl	equ	0xFFD
  3648                           pclatu	equ	0xFFB
  3649                           pclath	equ	0xFFA
  3650                           tblptru	equ	0xFF8
  3651                           tblptrh	equ	0xFF7
  3652                           tblptrl	equ	0xFF6
  3653                           tablat	equ	0xFF5
  3654                           prodh	equ	0xFF4
  3655                           prodl	equ	0xFF3
  3656                           intcon	equ	0xFF2
  3657                           postinc0	equ	0xFEE
  3658                           fsr0h	equ	0xFEA
  3659                           fsr0l	equ	0xFE9
  3660                           wreg	equ	0xFE8
  3661                           postdec1	equ	0xFE5
  3662                           fsr1h	equ	0xFE2
  3663                           fsr1l	equ	0xFE1
  3664                           indf2	equ	0xFDF
  3665                           postinc2	equ	0xFDE
  3666                           fsr2h	equ	0xFDA
  3667                           fsr2l	equ	0xFD9
  3668                           status	equ	0xFD8
  3669                           
  3670 ;; *************** function _rdBlkRegCompleteHandler *****************
  3671 ;; Defined at:
  3672 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  p               2   11[COMRAM] PTR void 
  3675 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3676 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      enum E97
  3681 ;; Registers used:
  3682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3692 ;;Total ram usage:        2 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    2
  3695 ;; This function calls:
  3696 ;;		_i2c_setBuffer
  3697 ;;		_i2c_setDataCompleteCallback
  3698 ;; This function is called by:
  3699 ;;		_i2c_readDataBlock
  3700 ;;		_do_I2C_DO_ADDRESS_NACK
  3701 ;;		_do_I2C_TX
  3702 ;;		_do_I2C_RX
  3703 ;;		_do_I2C_TX_EMPTY
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text36
  3708  001230                     __ptext36:
  3709                           	opt stack 0
  3710  001230                     _rdBlkRegCompleteHandler:
  3711                           	opt stack 23
  3712                           
  3713                           ;i2c_simple_master.c: 136: i2c_setBuffer(((buf_t *)p)->data,((buf_t*)p)->len);
  3714                           
  3715                           ;incstack = 0
  3716  001230  EE20 F002          	lfsr	2,2
  3717  001234  503C               	movf	rdBlkRegCompleteHandler@p,w,c
  3718  001236  26D9               	addwf	fsr2l,f,c
  3719  001238  503D               	movf	rdBlkRegCompleteHandler@p+1,w,c
  3720  00123A  22DA               	addwfc	fsr2h,f,c
  3721  00123C  CFDE F031          	movff	postinc2,i2c_setBuffer@buffer
  3722  001240  CFDD F032          	movff	postdec2,i2c_setBuffer@buffer+1
  3723  001244  C03C  FFD9         	movff	rdBlkRegCompleteHandler@p,fsr2l
  3724  001248  C03D  FFDA         	movff	rdBlkRegCompleteHandler@p+1,fsr2h
  3725  00124C  CFDE F033          	movff	postinc2,i2c_setBuffer@bufferSize
  3726  001250  CFDD F034          	movff	postdec2,i2c_setBuffer@bufferSize+1
  3727  001254  EC26  F00A         	call	_i2c_setBuffer	;wreg free
  3728                           
  3729                           ;i2c_simple_master.c: 137: i2c_setDataCompleteCallback((0),(0));
  3730  001258  0E00               	movlw	0
  3731  00125A  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  3732  00125C  0E00               	movlw	0
  3733  00125E  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  3734  001260  0E00               	movlw	0
  3735  001262  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  3736  001264  0E00               	movlw	0
  3737  001266  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  3738  001268  0E00               	movlw	0
  3739  00126A  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  3740  00126C  EC0C  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3741                           
  3742                           ;i2c_simple_master.c: 138: return i2c_restart_read;
  3743  001270  0E02               	movlw	2
  3744  001272  0012               	return	
  3745  001274                     __end_of_rdBlkRegCompleteHandler:
  3746                           	opt stack 0
  3747                           tosu	equ	0xFFF
  3748                           tosh	equ	0xFFE
  3749                           tosl	equ	0xFFD
  3750                           pclatu	equ	0xFFB
  3751                           pclath	equ	0xFFA
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           prodh	equ	0xFF4
  3757                           prodl	equ	0xFF3
  3758                           intcon	equ	0xFF2
  3759                           postinc0	equ	0xFEE
  3760                           fsr0h	equ	0xFEA
  3761                           fsr0l	equ	0xFE9
  3762                           wreg	equ	0xFE8
  3763                           postdec1	equ	0xFE5
  3764                           fsr1h	equ	0xFE2
  3765                           fsr1l	equ	0xFE1
  3766                           indf2	equ	0xFDF
  3767                           postinc2	equ	0xFDE
  3768                           postdec2	equ	0xFDD
  3769                           fsr2h	equ	0xFDA
  3770                           fsr2l	equ	0xFD9
  3771                           status	equ	0xFD8
  3772                           
  3773 ;; *************** function _rd2RegCompleteHandler *****************
  3774 ;; Defined at:
  3775 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  p               2   11[COMRAM] PTR void 
  3778 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3779 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;		None
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      enum E97
  3784 ;; Registers used:
  3785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3795 ;;Total ram usage:        2 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    2
  3798 ;; This function calls:
  3799 ;;		_i2c_setBuffer
  3800 ;;		_i2c_setDataCompleteCallback
  3801 ;; This function is called by:
  3802 ;;		_i2c_read2ByteRegister
  3803 ;;		_do_I2C_DO_ADDRESS_NACK
  3804 ;;		_do_I2C_TX
  3805 ;;		_do_I2C_RX
  3806 ;;		_do_I2C_TX_EMPTY
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text37
  3811  00131A                     __ptext37:
  3812                           	opt stack 0
  3813  00131A                     _rd2RegCompleteHandler:
  3814                           	opt stack 23
  3815                           
  3816                           ;i2c_simple_master.c: 89: i2c_setBuffer(p,2);
  3817                           
  3818                           ;incstack = 0
  3819  00131A  C03C  F031         	movff	rd2RegCompleteHandler@p,i2c_setBuffer@buffer
  3820  00131E  C03D  F032         	movff	rd2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  3821  001322  0E00               	movlw	0
  3822  001324  6E34               	movwf	i2c_setBuffer@bufferSize+1,c
  3823  001326  0E02               	movlw	2
  3824  001328  6E33               	movwf	i2c_setBuffer@bufferSize,c
  3825  00132A  EC26  F00A         	call	_i2c_setBuffer	;wreg free
  3826                           
  3827                           ;i2c_simple_master.c: 90: i2c_setDataCompleteCallback((0),(0));
  3828  00132E  0E00               	movlw	0
  3829  001330  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  3830  001332  0E00               	movlw	0
  3831  001334  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  3832  001336  0E00               	movlw	0
  3833  001338  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  3834  00133A  0E00               	movlw	0
  3835  00133C  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  3836  00133E  0E00               	movlw	0
  3837  001340  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  3838  001342  EC0C  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3839                           
  3840                           ;i2c_simple_master.c: 91: return i2c_restart_read;
  3841  001346  0E02               	movlw	2
  3842  001348  0012               	return	
  3843  00134A                     __end_of_rd2RegCompleteHandler:
  3844                           	opt stack 0
  3845                           tosu	equ	0xFFF
  3846                           tosh	equ	0xFFE
  3847                           tosl	equ	0xFFD
  3848                           pclatu	equ	0xFFB
  3849                           pclath	equ	0xFFA
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           prodh	equ	0xFF4
  3855                           prodl	equ	0xFF3
  3856                           intcon	equ	0xFF2
  3857                           postinc0	equ	0xFEE
  3858                           fsr0h	equ	0xFEA
  3859                           fsr0l	equ	0xFE9
  3860                           wreg	equ	0xFE8
  3861                           postdec1	equ	0xFE5
  3862                           fsr1h	equ	0xFE2
  3863                           fsr1l	equ	0xFE1
  3864                           indf2	equ	0xFDF
  3865                           postinc2	equ	0xFDE
  3866                           postdec2	equ	0xFDD
  3867                           fsr2h	equ	0xFDA
  3868                           fsr2l	equ	0xFD9
  3869                           status	equ	0xFD8
  3870                           
  3871 ;; *************** function _rd1RegCompleteHandler *****************
  3872 ;; Defined at:
  3873 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  p               2   11[COMRAM] PTR void 
  3876 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3877 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      enum E97
  3882 ;; Registers used:
  3883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;Total ram usage:        2 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    2
  3896 ;; This function calls:
  3897 ;;		_i2c_setBuffer
  3898 ;;		_i2c_setDataCompleteCallback
  3899 ;; This function is called by:
  3900 ;;		_i2c_read1ByteRegister
  3901 ;;		_do_I2C_DO_ADDRESS_NACK
  3902 ;;		_do_I2C_TX
  3903 ;;		_do_I2C_RX
  3904 ;;		_do_I2C_TX_EMPTY
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text38
  3909  00134A                     __ptext38:
  3910                           	opt stack 0
  3911  00134A                     _rd1RegCompleteHandler:
  3912                           	opt stack 23
  3913                           
  3914                           ;i2c_simple_master.c: 60: i2c_setBuffer(p,1);
  3915                           
  3916                           ;incstack = 0
  3917  00134A  C03C  F031         	movff	rd1RegCompleteHandler@p,i2c_setBuffer@buffer
  3918  00134E  C03D  F032         	movff	rd1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  3919  001352  0E00               	movlw	0
  3920  001354  6E34               	movwf	i2c_setBuffer@bufferSize+1,c
  3921  001356  0E01               	movlw	1
  3922  001358  6E33               	movwf	i2c_setBuffer@bufferSize,c
  3923  00135A  EC26  F00A         	call	_i2c_setBuffer	;wreg free
  3924                           
  3925                           ;i2c_simple_master.c: 61: i2c_setDataCompleteCallback((0),(0));
  3926  00135E  0E00               	movlw	0
  3927  001360  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  3928  001362  0E00               	movlw	0
  3929  001364  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  3930  001366  0E00               	movlw	0
  3931  001368  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  3932  00136A  0E00               	movlw	0
  3933  00136C  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  3934  00136E  0E00               	movlw	0
  3935  001370  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  3936  001372  EC0C  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  3937                           
  3938                           ;i2c_simple_master.c: 62: return i2c_restart_read;
  3939  001376  0E02               	movlw	2
  3940  001378  0012               	return	
  3941  00137A                     __end_of_rd1RegCompleteHandler:
  3942                           	opt stack 0
  3943                           tosu	equ	0xFFF
  3944                           tosh	equ	0xFFE
  3945                           tosl	equ	0xFFD
  3946                           pclatu	equ	0xFFB
  3947                           pclath	equ	0xFFA
  3948                           tblptru	equ	0xFF8
  3949                           tblptrh	equ	0xFF7
  3950                           tblptrl	equ	0xFF6
  3951                           tablat	equ	0xFF5
  3952                           prodh	equ	0xFF4
  3953                           prodl	equ	0xFF3
  3954                           intcon	equ	0xFF2
  3955                           postinc0	equ	0xFEE
  3956                           fsr0h	equ	0xFEA
  3957                           fsr0l	equ	0xFE9
  3958                           wreg	equ	0xFE8
  3959                           postdec1	equ	0xFE5
  3960                           fsr1h	equ	0xFE2
  3961                           fsr1l	equ	0xFE1
  3962                           indf2	equ	0xFDF
  3963                           postinc2	equ	0xFDE
  3964                           postdec2	equ	0xFDD
  3965                           fsr2h	equ	0xFDA
  3966                           fsr2l	equ	0xFD9
  3967                           status	equ	0xFD8
  3968                           
  3969 ;; *************** function _wr1RegCompleteHandler *****************
  3970 ;; Defined at:
  3971 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  p               2   11[COMRAM] PTR void 
  3974 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  3975 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      enum E97
  3980 ;; Registers used:
  3981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3991 ;;Total ram usage:        2 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    2
  3994 ;; This function calls:
  3995 ;;		_i2c_setBuffer
  3996 ;;		_i2c_setDataCompleteCallback
  3997 ;; This function is called by:
  3998 ;;		_i2c_write1ByteRegister
  3999 ;;		_do_I2C_DO_ADDRESS_NACK
  4000 ;;		_do_I2C_TX
  4001 ;;		_do_I2C_RX
  4002 ;;		_do_I2C_TX_EMPTY
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text39
  4007  00137A                     __ptext39:
  4008                           	opt stack 0
  4009  00137A                     _wr1RegCompleteHandler:
  4010                           	opt stack 23
  4011                           
  4012                           ;i2c_simple_master.c: 33: i2c_setBuffer(p,1);
  4013                           
  4014                           ;incstack = 0
  4015  00137A  C03C  F031         	movff	wr1RegCompleteHandler@p,i2c_setBuffer@buffer
  4016  00137E  C03D  F032         	movff	wr1RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4017  001382  0E00               	movlw	0
  4018  001384  6E34               	movwf	i2c_setBuffer@bufferSize+1,c
  4019  001386  0E01               	movlw	1
  4020  001388  6E33               	movwf	i2c_setBuffer@bufferSize,c
  4021  00138A  EC26  F00A         	call	_i2c_setBuffer	;wreg free
  4022                           
  4023                           ;i2c_simple_master.c: 34: i2c_setDataCompleteCallback((0),(0));
  4024  00138E  0E00               	movlw	0
  4025  001390  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  4026  001392  0E00               	movlw	0
  4027  001394  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  4028  001396  0E00               	movlw	0
  4029  001398  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  4030  00139A  0E00               	movlw	0
  4031  00139C  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  4032  00139E  0E00               	movlw	0
  4033  0013A0  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  4034  0013A2  EC0C  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  4035                           
  4036                           ;i2c_simple_master.c: 35: return i2c_continue;
  4037  0013A6  0E04               	movlw	4
  4038  0013A8  0012               	return	
  4039  0013AA                     __end_of_wr1RegCompleteHandler:
  4040                           	opt stack 0
  4041                           tosu	equ	0xFFF
  4042                           tosh	equ	0xFFE
  4043                           tosl	equ	0xFFD
  4044                           pclatu	equ	0xFFB
  4045                           pclath	equ	0xFFA
  4046                           tblptru	equ	0xFF8
  4047                           tblptrh	equ	0xFF7
  4048                           tblptrl	equ	0xFF6
  4049                           tablat	equ	0xFF5
  4050                           prodh	equ	0xFF4
  4051                           prodl	equ	0xFF3
  4052                           intcon	equ	0xFF2
  4053                           postinc0	equ	0xFEE
  4054                           fsr0h	equ	0xFEA
  4055                           fsr0l	equ	0xFE9
  4056                           wreg	equ	0xFE8
  4057                           postdec1	equ	0xFE5
  4058                           fsr1h	equ	0xFE2
  4059                           fsr1l	equ	0xFE1
  4060                           indf2	equ	0xFDF
  4061                           postinc2	equ	0xFDE
  4062                           postdec2	equ	0xFDD
  4063                           fsr2h	equ	0xFDA
  4064                           fsr2l	equ	0xFD9
  4065                           status	equ	0xFD8
  4066                           
  4067 ;; *************** function _i2c_restartWrite *****************
  4068 ;; Defined at:
  4069 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  p               2   11[COMRAM] PTR void 
  4072 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4073 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      enum E96
  4078 ;; Registers used:
  4079 ;;		wreg
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4089 ;;Total ram usage:        2 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_i2c_write1ByteRegister
  4095 ;;		_i2c_writeNBytes
  4096 ;;		_i2c_read1ByteRegister
  4097 ;;		_i2c_read2ByteRegister
  4098 ;;		_i2c_write2ByteRegister
  4099 ;;		_i2c_readDataBlock
  4100 ;;		_do_I2C_DO_ADDRESS_NACK
  4101 ;;		_do_I2C_TX
  4102 ;;		_do_I2C_RX
  4103 ;;		_do_I2C_TX_EMPTY
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text40
  4108  00154C                     __ptext40:
  4109                           	opt stack 0
  4110  00154C                     _i2c_restartWrite:
  4111                           	opt stack 25
  4112                           
  4113                           ;i2c_types.c: 37: return i2c_restart_write;
  4114                           
  4115                           ;incstack = 0
  4116  00154C  0E03               	movlw	3
  4117  00154E  0012               	return	
  4118  001550                     __end_of_i2c_restartWrite:
  4119                           	opt stack 0
  4120                           tosu	equ	0xFFF
  4121                           tosh	equ	0xFFE
  4122                           tosl	equ	0xFFD
  4123                           pclatu	equ	0xFFB
  4124                           pclath	equ	0xFFA
  4125                           tblptru	equ	0xFF8
  4126                           tblptrh	equ	0xFF7
  4127                           tblptrl	equ	0xFF6
  4128                           tablat	equ	0xFF5
  4129                           prodh	equ	0xFF4
  4130                           prodl	equ	0xFF3
  4131                           intcon	equ	0xFF2
  4132                           postinc0	equ	0xFEE
  4133                           fsr0h	equ	0xFEA
  4134                           fsr0l	equ	0xFE9
  4135                           wreg	equ	0xFE8
  4136                           postdec1	equ	0xFE5
  4137                           fsr1h	equ	0xFE2
  4138                           fsr1l	equ	0xFE1
  4139                           indf2	equ	0xFDF
  4140                           postinc2	equ	0xFDE
  4141                           postdec2	equ	0xFDD
  4142                           fsr2h	equ	0xFDA
  4143                           fsr2l	equ	0xFD9
  4144                           status	equ	0xFD8
  4145                           
  4146 ;; *************** function _returnReset *****************
  4147 ;; Defined at:
  4148 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  p               2   11[COMRAM] PTR void 
  4151 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4152 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      enum E11790
  4157 ;; Registers used:
  4158 ;;		wreg
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4168 ;;Total ram usage:        2 bytes
  4169 ;; Hardware stack levels used:    1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_i2c_open
  4174 ;;		_do_I2C_DO_ADDRESS_NACK
  4175 ;;		_do_I2C_TX
  4176 ;;		_do_I2C_RX
  4177 ;;		_do_I2C_TX_EMPTY
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           
  4181                           	psect	text41
  4182  001550                     __ptext41:
  4183                           	opt stack 0
  4184  001550                     _returnReset:
  4185                           	opt stack 25
  4186                           
  4187                           ;i2c_master.c: 450: return i2c_reset_link;
  4188                           
  4189                           ;incstack = 0
  4190  001550  0E05               	movlw	5
  4191  001552  0012               	return	
  4192  001554                     __end_of_returnReset:
  4193                           	opt stack 0
  4194                           tosu	equ	0xFFF
  4195                           tosh	equ	0xFFE
  4196                           tosl	equ	0xFFD
  4197                           pclatu	equ	0xFFB
  4198                           pclath	equ	0xFFA
  4199                           tblptru	equ	0xFF8
  4200                           tblptrh	equ	0xFF7
  4201                           tblptrl	equ	0xFF6
  4202                           tablat	equ	0xFF5
  4203                           prodh	equ	0xFF4
  4204                           prodl	equ	0xFF3
  4205                           intcon	equ	0xFF2
  4206                           postinc0	equ	0xFEE
  4207                           fsr0h	equ	0xFEA
  4208                           fsr0l	equ	0xFE9
  4209                           wreg	equ	0xFE8
  4210                           postdec1	equ	0xFE5
  4211                           fsr1h	equ	0xFE2
  4212                           fsr1l	equ	0xFE1
  4213                           indf2	equ	0xFDF
  4214                           postinc2	equ	0xFDE
  4215                           postdec2	equ	0xFDD
  4216                           fsr2h	equ	0xFDA
  4217                           fsr2l	equ	0xFD9
  4218                           status	equ	0xFD8
  4219                           
  4220 ;; *************** function _returnStop *****************
  4221 ;; Defined at:
  4222 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  p               2   11[COMRAM] PTR void 
  4225 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4226 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      enum E11790
  4231 ;; Registers used:
  4232 ;;		wreg
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4242 ;;Total ram usage:        2 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_setCallBack
  4248 ;;		_i2c_open
  4249 ;;		_do_I2C_DO_ADDRESS_NACK
  4250 ;;		_do_I2C_TX
  4251 ;;		_do_I2C_RX
  4252 ;;		_do_I2C_TX_EMPTY
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text42
  4257  001554                     __ptext42:
  4258                           	opt stack 0
  4259  001554                     _returnStop:
  4260                           	opt stack 25
  4261                           
  4262                           ;i2c_master.c: 445: return i2c_stop;
  4263                           
  4264                           ;incstack = 0
  4265  001554  0E01               	movlw	1
  4266  001556  0012               	return	
  4267  001558                     __end_of_returnStop:
  4268                           	opt stack 0
  4269                           tosu	equ	0xFFF
  4270                           tosh	equ	0xFFE
  4271                           tosl	equ	0xFFD
  4272                           pclatu	equ	0xFFB
  4273                           pclath	equ	0xFFA
  4274                           tblptru	equ	0xFF8
  4275                           tblptrh	equ	0xFF7
  4276                           tblptrl	equ	0xFF6
  4277                           tablat	equ	0xFF5
  4278                           prodh	equ	0xFF4
  4279                           prodl	equ	0xFF3
  4280                           intcon	equ	0xFF2
  4281                           postinc0	equ	0xFEE
  4282                           fsr0h	equ	0xFEA
  4283                           fsr0l	equ	0xFE9
  4284                           wreg	equ	0xFE8
  4285                           postdec1	equ	0xFE5
  4286                           fsr1h	equ	0xFE2
  4287                           fsr1l	equ	0xFE1
  4288                           indf2	equ	0xFDF
  4289                           postinc2	equ	0xFDE
  4290                           postdec2	equ	0xFDD
  4291                           fsr2h	equ	0xFDA
  4292                           fsr2l	equ	0xFD9
  4293                           status	equ	0xFD8
  4294                           
  4295 ;; *************** function _wr2RegCompleteHandler *****************
  4296 ;; Defined at:
  4297 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  p               2   11[COMRAM] PTR void 
  4300 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4301 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      enum E97
  4306 ;; Registers used:
  4307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4317 ;;Total ram usage:        2 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    2
  4320 ;; This function calls:
  4321 ;;		_i2c_setBuffer
  4322 ;;		_i2c_setDataCompleteCallback
  4323 ;; This function is called by:
  4324 ;;		_i2c_write2ByteRegister
  4325 ;;		_do_I2C_DO_ADDRESS_NACK
  4326 ;;		_do_I2C_TX
  4327 ;;		_do_I2C_RX
  4328 ;;		_do_I2C_TX_EMPTY
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text43
  4333  0013AA                     __ptext43:
  4334                           	opt stack 0
  4335  0013AA                     _wr2RegCompleteHandler:
  4336                           	opt stack 23
  4337                           
  4338                           ;i2c_simple_master.c: 112: i2c_setBuffer(p,2);
  4339                           
  4340                           ;incstack = 0
  4341  0013AA  C03C  F031         	movff	wr2RegCompleteHandler@p,i2c_setBuffer@buffer
  4342  0013AE  C03D  F032         	movff	wr2RegCompleteHandler@p+1,i2c_setBuffer@buffer+1
  4343  0013B2  0E00               	movlw	0
  4344  0013B4  6E34               	movwf	i2c_setBuffer@bufferSize+1,c
  4345  0013B6  0E02               	movlw	2
  4346  0013B8  6E33               	movwf	i2c_setBuffer@bufferSize,c
  4347  0013BA  EC26  F00A         	call	_i2c_setBuffer	;wreg free
  4348                           
  4349                           ;i2c_simple_master.c: 113: i2c_setDataCompleteCallback((0),(0));
  4350  0013BE  0E00               	movlw	0
  4351  0013C0  6E37               	movwf	i2c_setDataCompleteCallback@cb,c
  4352  0013C2  0E00               	movlw	0
  4353  0013C4  6E38               	movwf	i2c_setDataCompleteCallback@cb+1,c
  4354  0013C6  0E00               	movlw	0
  4355  0013C8  6E39               	movwf	i2c_setDataCompleteCallback@cb+2,c
  4356  0013CA  0E00               	movlw	0
  4357  0013CC  6E3A               	movwf	i2c_setDataCompleteCallback@p,c
  4358  0013CE  0E00               	movlw	0
  4359  0013D0  6E3B               	movwf	i2c_setDataCompleteCallback@p+1,c
  4360  0013D2  EC0C  F00A         	call	_i2c_setDataCompleteCallback	;wreg free
  4361                           
  4362                           ;i2c_simple_master.c: 114: return i2c_continue;
  4363  0013D6  0E04               	movlw	4
  4364  0013D8  0012               	return	
  4365  0013DA                     __end_of_wr2RegCompleteHandler:
  4366                           	opt stack 0
  4367                           tosu	equ	0xFFF
  4368                           tosh	equ	0xFFE
  4369                           tosl	equ	0xFFD
  4370                           pclatu	equ	0xFFB
  4371                           pclath	equ	0xFFA
  4372                           tblptru	equ	0xFF8
  4373                           tblptrh	equ	0xFF7
  4374                           tblptrl	equ	0xFF6
  4375                           tablat	equ	0xFF5
  4376                           prodh	equ	0xFF4
  4377                           prodl	equ	0xFF3
  4378                           intcon	equ	0xFF2
  4379                           postinc0	equ	0xFEE
  4380                           fsr0h	equ	0xFEA
  4381                           fsr0l	equ	0xFE9
  4382                           wreg	equ	0xFE8
  4383                           postdec1	equ	0xFE5
  4384                           fsr1h	equ	0xFE2
  4385                           fsr1l	equ	0xFE1
  4386                           indf2	equ	0xFDF
  4387                           postinc2	equ	0xFDE
  4388                           postdec2	equ	0xFDD
  4389                           fsr2h	equ	0xFDA
  4390                           fsr2l	equ	0xFD9
  4391                           status	equ	0xFD8
  4392                           
  4393 ;; *************** function _i2c_setDataCompleteCallback *****************
  4394 ;; Defined at:
  4395 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  cb              3    6[COMRAM] PTR FTN(PTR void ,)enum 
  4398 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4399 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
  4400 ;;  p               2    9[COMRAM] PTR void 
  4401 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4402 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4414 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4417 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4418 ;;Total ram usage:        5 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    1
  4421 ;; This function calls:
  4422 ;;		_setCallBack
  4423 ;; This function is called by:
  4424 ;;		_wr1RegCompleteHandler
  4425 ;;		_rd1RegCompleteHandler
  4426 ;;		_rd2RegCompleteHandler
  4427 ;;		_wr2RegCompleteHandler
  4428 ;;		_rdBlkRegCompleteHandler
  4429 ;;		_i2c_write1ByteRegister
  4430 ;;		_i2c_read1ByteRegister
  4431 ;;		_i2c_read2ByteRegister
  4432 ;;		_i2c_write2ByteRegister
  4433 ;;		_i2c_readDataBlock
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text44
  4438  001418                     __ptext44:
  4439                           	opt stack 0
  4440  001418                     _i2c_setDataCompleteCallback:
  4441                           	opt stack 23
  4442                           
  4443                           ;i2c_master.c: 91: setCallBack(i2c_dataComplete,cb,p);
  4444                           
  4445                           ;incstack = 0
  4446  001418  C037  F031         	movff	i2c_setDataCompleteCallback@cb,setCallBack@cb
  4447  00141C  C038  F032         	movff	i2c_setDataCompleteCallback@cb+1,setCallBack@cb+1
  4448  001420  C039  F033         	movff	i2c_setDataCompleteCallback@cb+2,setCallBack@cb+2
  4449  001424  C03A  F034         	movff	i2c_setDataCompleteCallback@p,setCallBack@p
  4450  001428  C03B  F035         	movff	i2c_setDataCompleteCallback@p+1,setCallBack@p+1
  4451  00142C  0E00               	movlw	0
  4452  00142E  EC1A  F008         	call	_setCallBack
  4453  001432  0012               	return		;funcret
  4454  001434                     __end_of_i2c_setDataCompleteCallback:
  4455                           	opt stack 0
  4456                           tosu	equ	0xFFF
  4457                           tosh	equ	0xFFE
  4458                           tosl	equ	0xFFD
  4459                           pclatu	equ	0xFFB
  4460                           pclath	equ	0xFFA
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           postinc0	equ	0xFEE
  4469                           fsr0h	equ	0xFEA
  4470                           fsr0l	equ	0xFE9
  4471                           wreg	equ	0xFE8
  4472                           postdec1	equ	0xFE5
  4473                           fsr1h	equ	0xFE2
  4474                           fsr1l	equ	0xFE1
  4475                           indf2	equ	0xFDF
  4476                           postinc2	equ	0xFDE
  4477                           postdec2	equ	0xFDD
  4478                           fsr2h	equ	0xFDA
  4479                           fsr2l	equ	0xFD9
  4480                           status	equ	0xFD8
  4481                           
  4482 ;; *************** function _setCallBack *****************
  4483 ;; Defined at:
  4484 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  idx             1    wreg     enum E11974
  4487 ;;  cb              3    0[COMRAM] PTR FTN(PTR void ,)enum 
  4488 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
  4489 ;;		 -> wr1RegCompleteHandler(1), i2c_restartWrite(1), Absolute function(1), 
  4490 ;;  p               2    3[COMRAM] PTR void 
  4491 ;;		 -> i2c_readDataBlock@d(4), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
  4492 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  idx             1    5[COMRAM] enum E11974
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4504 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4507 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4508 ;;Total ram usage:        6 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_i2c_setDataCompleteCallback
  4514 ;;		_i2c_setWriteCollisionCallback
  4515 ;;		_i2c_setAddressNACKCallback
  4516 ;;		_i2c_setDataNACKCallback
  4517 ;;		_i2c_setTimeOutCallback
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           	psect	text45
  4522  001034                     __ptext45:
  4523                           	opt stack 0
  4524  001034                     _setCallBack:
  4525                           	opt stack 23
  4526                           
  4527                           ;incstack = 0
  4528                           ;setCallBack@idx stored from wreg
  4529  001034  6E36               	movwf	setCallBack@idx,c
  4530                           
  4531                           ;i2c_master.c: 455: if(cb)
  4532  001036  5031               	movf	setCallBack@cb,w,c
  4533  001038  1032               	iorwf	setCallBack@cb+1,w,c
  4534  00103A  1033               	iorwf	setCallBack@cb+2,w,c
  4535  00103C  B4D8               	btfsc	status,2,c
  4536  00103E  D01B               	goto	i2l490
  4537                           
  4538                           ;i2c_master.c: 456: {
  4539                           ;i2c_master.c: 457: i2c_status.callbackTable[idx] = cb;
  4540  001040  5036               	movf	setCallBack@idx,w,c
  4541  001042  0D03               	mullw	3
  4542  001044  0E0D               	movlw	low (_i2c_status+12)
  4543  001046  24F3               	addwf	prodl,w,c
  4544  001048  6ED9               	movwf	fsr2l,c
  4545  00104A  0E00               	movlw	high (_i2c_status+12)
  4546  00104C  20F4               	addwfc	prodh,w,c
  4547  00104E  6EDA               	movwf	fsr2h,c
  4548  001050  C031  FFDE         	movff	setCallBack@cb,postinc2
  4549  001054  C032  FFDE         	movff	setCallBack@cb+1,postinc2
  4550  001058  C033  FFDE         	movff	setCallBack@cb+2,postinc2
  4551                           
  4552                           ;i2c_master.c: 458: i2c_status.callbackPayload[idx] = p;
  4553  00105C  5036               	movf	setCallBack@idx,w,c
  4554  00105E  0D02               	mullw	2
  4555  001060  0E1F               	movlw	low (_i2c_status+30)
  4556  001062  24F3               	addwf	prodl,w,c
  4557  001064  6ED9               	movwf	fsr2l,c
  4558  001066  0E00               	movlw	high (_i2c_status+30)
  4559  001068  20F4               	addwfc	prodh,w,c
  4560  00106A  6EDA               	movwf	fsr2h,c
  4561  00106C  C034  FFDE         	movff	setCallBack@p,postinc2
  4562  001070  C035  FFDD         	movff	setCallBack@p+1,postdec2
  4563                           
  4564                           ;i2c_master.c: 459: }
  4565  001074  0012               	return	
  4566  001076                     i2l490:
  4567                           
  4568                           ;i2c_master.c: 460: else
  4569                           ;i2c_master.c: 461: {
  4570                           ;i2c_master.c: 462: i2c_status.callbackTable[idx] = returnStop;
  4571  001076  5036               	movf	setCallBack@idx,w,c
  4572  001078  0D03               	mullw	3
  4573  00107A  0E0D               	movlw	low (_i2c_status+12)
  4574  00107C  24F3               	addwf	prodl,w,c
  4575  00107E  6ED9               	movwf	fsr2l,c
  4576  001080  0E00               	movlw	high (_i2c_status+12)
  4577  001082  20F4               	addwfc	prodh,w,c
  4578  001084  6EDA               	movwf	fsr2h,c
  4579  001086  0E54               	movlw	low _returnStop
  4580  001088  6EDE               	movwf	postinc2,c
  4581  00108A  0E15               	movlw	high _returnStop
  4582  00108C  6EDE               	movwf	postinc2,c
  4583  00108E  0E00               	movlw	low (_returnStop shr (0+16))
  4584  001090  6EDE               	movwf	postinc2,c
  4585                           
  4586                           ;i2c_master.c: 463: i2c_status.callbackPayload[idx] = (0);
  4587  001092  5036               	movf	setCallBack@idx,w,c
  4588  001094  0D02               	mullw	2
  4589  001096  0E1F               	movlw	low (_i2c_status+30)
  4590  001098  24F3               	addwf	prodl,w,c
  4591  00109A  6ED9               	movwf	fsr2l,c
  4592  00109C  0E00               	movlw	high (_i2c_status+30)
  4593  00109E  20F4               	addwfc	prodh,w,c
  4594  0010A0  6EDA               	movwf	fsr2h,c
  4595  0010A2  0E00               	movlw	0
  4596  0010A4  6EDE               	movwf	postinc2,c
  4597  0010A6  0E00               	movlw	0
  4598  0010A8  6EDD               	movwf	postdec2,c
  4599  0010AA  0012               	return	
  4600  0010AC                     __end_of_setCallBack:
  4601                           	opt stack 0
  4602                           tosu	equ	0xFFF
  4603                           tosh	equ	0xFFE
  4604                           tosl	equ	0xFFD
  4605                           pclatu	equ	0xFFB
  4606                           pclath	equ	0xFFA
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           prodh	equ	0xFF4
  4612                           prodl	equ	0xFF3
  4613                           intcon	equ	0xFF2
  4614                           postinc0	equ	0xFEE
  4615                           fsr0h	equ	0xFEA
  4616                           fsr0l	equ	0xFE9
  4617                           wreg	equ	0xFE8
  4618                           postdec1	equ	0xFE5
  4619                           fsr1h	equ	0xFE2
  4620                           fsr1l	equ	0xFE1
  4621                           indf2	equ	0xFDF
  4622                           postinc2	equ	0xFDE
  4623                           postdec2	equ	0xFDD
  4624                           fsr2h	equ	0xFDA
  4625                           fsr2l	equ	0xFD9
  4626                           status	equ	0xFD8
  4627                           
  4628 ;; *************** function _i2c_setBuffer *****************
  4629 ;; Defined at:
  4630 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  buffer          2    0[COMRAM] PTR void 
  4633 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(4), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
  4634 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
  4635 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
  4636 ;;  bufferSize      2    2[COMRAM] unsigned int 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4651 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4652 ;;Total ram usage:        4 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_wr1RegCompleteHandler
  4658 ;;		_rd1RegCompleteHandler
  4659 ;;		_rd2RegCompleteHandler
  4660 ;;		_wr2RegCompleteHandler
  4661 ;;		_rdBlkRegCompleteHandler
  4662 ;;		_i2c_write1ByteRegister
  4663 ;;		_i2c_writeNBytes
  4664 ;;		_i2c_read1ByteRegister
  4665 ;;		_i2c_read2ByteRegister
  4666 ;;		_i2c_write2ByteRegister
  4667 ;;		_i2c_readDataBlock
  4668 ;;		_i2c_readNBytes
  4669 ;; This function uses a non-reentrant model
  4670 ;;
  4671                           
  4672                           	psect	text46
  4673  00144C                     __ptext46:
  4674                           	opt stack 0
  4675  00144C                     _i2c_setBuffer:
  4676                           	opt stack 24
  4677                           
  4678                           ;i2c_master.c: 186: if(i2c_status.bufferFree)
  4679                           
  4680                           ;incstack = 0
  4681  00144C  A401               	btfss	_i2c_status,2,c
  4682  00144E  0012               	return	
  4683                           
  4684                           ;i2c_master.c: 187: {
  4685                           ;i2c_master.c: 188: i2c_status.data_ptr = buffer;
  4686  001450  C031  F003         	movff	i2c_setBuffer@buffer,_i2c_status+2
  4687  001454  C032  F004         	movff	i2c_setBuffer@buffer+1,_i2c_status+3
  4688                           
  4689                           ;i2c_master.c: 189: i2c_status.data_length = bufferSize;
  4690  001458  C033  F005         	movff	i2c_setBuffer@bufferSize,_i2c_status+4
  4691  00145C  C034  F006         	movff	i2c_setBuffer@bufferSize+1,_i2c_status+5
  4692                           
  4693                           ;i2c_master.c: 190: i2c_status.bufferFree = 0;
  4694  001460  9401               	bcf	_i2c_status,2,c
  4695  001462  0012               	return	
  4696  001464                     __end_of_i2c_setBuffer:
  4697                           	opt stack 0
  4698                           tosu	equ	0xFFF
  4699                           tosh	equ	0xFFE
  4700                           tosl	equ	0xFFD
  4701                           pclatu	equ	0xFFB
  4702                           pclath	equ	0xFFA
  4703                           tblptru	equ	0xFF8
  4704                           tblptrh	equ	0xFF7
  4705                           tblptrl	equ	0xFF6
  4706                           tablat	equ	0xFF5
  4707                           prodh	equ	0xFF4
  4708                           prodl	equ	0xFF3
  4709                           intcon	equ	0xFF2
  4710                           postinc0	equ	0xFEE
  4711                           fsr0h	equ	0xFEA
  4712                           fsr0l	equ	0xFE9
  4713                           wreg	equ	0xFE8
  4714                           postdec1	equ	0xFE5
  4715                           fsr1h	equ	0xFE2
  4716                           fsr1l	equ	0xFE1
  4717                           indf2	equ	0xFDF
  4718                           postinc2	equ	0xFDE
  4719                           postdec2	equ	0xFDD
  4720                           fsr2h	equ	0xFDA
  4721                           fsr2l	equ	0xFD9
  4722                           status	equ	0xFD8
  4723                           
  4724 ;; *************** function _i2c1_driver_stop *****************
  4725 ;; Defined at:
  4726 ;;		line 156 in file "mcc_generated_files/i2c1_driver.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		None
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_do_I2C_SEND_STOP
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text47
  4754  001558                     __ptext47:
  4755                           	opt stack 0
  4756  001558                     _i2c1_driver_stop:
  4757                           	opt stack 24
  4758                           
  4759                           ;i2c1_driver.c: 158: SSP1CON2bits.PEN = 1;
  4760                           
  4761                           ;incstack = 0
  4762  001558  8497               	bsf	3991,2,c	;volatile
  4763  00155A  0012               	return		;funcret
  4764  00155C                     __end_of_i2c1_driver_stop:
  4765                           	opt stack 0
  4766                           tosu	equ	0xFFF
  4767                           tosh	equ	0xFFE
  4768                           tosl	equ	0xFFD
  4769                           pclatu	equ	0xFFB
  4770                           pclath	equ	0xFFA
  4771                           tblptru	equ	0xFF8
  4772                           tblptrh	equ	0xFF7
  4773                           tblptrl	equ	0xFF6
  4774                           tablat	equ	0xFF5
  4775                           prodh	equ	0xFF4
  4776                           prodl	equ	0xFF3
  4777                           intcon	equ	0xFF2
  4778                           postinc0	equ	0xFEE
  4779                           fsr0h	equ	0xFEA
  4780                           fsr0l	equ	0xFE9
  4781                           wreg	equ	0xFE8
  4782                           postdec1	equ	0xFE5
  4783                           fsr1h	equ	0xFE2
  4784                           fsr1l	equ	0xFE1
  4785                           indf2	equ	0xFDF
  4786                           postinc2	equ	0xFDE
  4787                           postdec2	equ	0xFDD
  4788                           fsr2h	equ	0xFDA
  4789                           fsr2l	equ	0xFD9
  4790                           status	equ	0xFD8
  4791                           
  4792 ;; *************** function _i2c1_driver_restart *****************
  4793 ;; Defined at:
  4794 ;;		line 151 in file "mcc_generated_files/i2c1_driver.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;		None
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		None
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4812 ;;Total ram usage:        0 bytes
  4813 ;; Hardware stack levels used:    1
  4814 ;; This function calls:
  4815 ;;		Nothing
  4816 ;; This function is called by:
  4817 ;;		_do_I2C_SEND_RESTART_READ
  4818 ;;		_do_I2C_SEND_RESTART_WRITE
  4819 ;;		_do_I2C_SEND_RESTART
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text48
  4824  00155C                     __ptext48:
  4825                           	opt stack 0
  4826  00155C                     _i2c1_driver_restart:
  4827                           	opt stack 24
  4828                           
  4829                           ;i2c1_driver.c: 153: SSP1CON2bits.RSEN = 1;
  4830                           
  4831                           ;incstack = 0
  4832  00155C  8297               	bsf	3991,1,c	;volatile
  4833  00155E  0012               	return		;funcret
  4834  001560                     __end_of_i2c1_driver_restart:
  4835                           	opt stack 0
  4836                           tosu	equ	0xFFF
  4837                           tosh	equ	0xFFE
  4838                           tosl	equ	0xFFD
  4839                           pclatu	equ	0xFFB
  4840                           pclath	equ	0xFFA
  4841                           tblptru	equ	0xFF8
  4842                           tblptrh	equ	0xFF7
  4843                           tblptrl	equ	0xFF6
  4844                           tablat	equ	0xFF5
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           intcon	equ	0xFF2
  4848                           postinc0	equ	0xFEE
  4849                           fsr0h	equ	0xFEA
  4850                           fsr0l	equ	0xFE9
  4851                           wreg	equ	0xFE8
  4852                           postdec1	equ	0xFE5
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           fsr2h	equ	0xFDA
  4859                           fsr2l	equ	0xFD9
  4860                           status	equ	0xFD8
  4861                           
  4862 ;; *************** function _i2c1_driver_sendACK *****************
  4863 ;; Defined at:
  4864 ;;		line 196 in file "mcc_generated_files/i2c1_driver.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		None
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;Total ram usage:        0 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_do_I2C_DO_ACK
  4888 ;;		_do_I2C_RX
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text49
  4893  00153A                     __ptext49:
  4894                           	opt stack 0
  4895  00153A                     _i2c1_driver_sendACK:
  4896                           	opt stack 25
  4897                           
  4898                           ;i2c1_driver.c: 198: SSP1CON2bits.ACKDT = 0;
  4899                           
  4900                           ;incstack = 0
  4901  00153A  9A97               	bcf	3991,5,c	;volatile
  4902                           
  4903                           ;i2c1_driver.c: 199: SSP1CON2bits.ACKEN = 1;
  4904  00153C  8897               	bsf	3991,4,c	;volatile
  4905  00153E  0012               	return		;funcret
  4906  001540                     __end_of_i2c1_driver_sendACK:
  4907                           	opt stack 0
  4908                           tosu	equ	0xFFF
  4909                           tosh	equ	0xFFE
  4910                           tosl	equ	0xFFD
  4911                           pclatu	equ	0xFFB
  4912                           pclath	equ	0xFFA
  4913                           tblptru	equ	0xFF8
  4914                           tblptrh	equ	0xFF7
  4915                           tblptrl	equ	0xFF6
  4916                           tablat	equ	0xFF5
  4917                           prodh	equ	0xFF4
  4918                           prodl	equ	0xFF3
  4919                           intcon	equ	0xFF2
  4920                           postinc0	equ	0xFEE
  4921                           fsr0h	equ	0xFEA
  4922                           fsr0l	equ	0xFE9
  4923                           wreg	equ	0xFE8
  4924                           postdec1	equ	0xFE5
  4925                           fsr1h	equ	0xFE2
  4926                           fsr1l	equ	0xFE1
  4927                           indf2	equ	0xFDF
  4928                           postinc2	equ	0xFDE
  4929                           postdec2	equ	0xFDD
  4930                           fsr2h	equ	0xFDA
  4931                           fsr2l	equ	0xFD9
  4932                           status	equ	0xFD8
  4933                           tosu	equ	0xFFF
  4934                           tosh	equ	0xFFE
  4935                           tosl	equ	0xFFD
  4936                           pclatu	equ	0xFFB
  4937                           pclath	equ	0xFFA
  4938                           tblptru	equ	0xFF8
  4939                           tblptrh	equ	0xFF7
  4940                           tblptrl	equ	0xFF6
  4941                           tablat	equ	0xFF5
  4942                           prodh	equ	0xFF4
  4943                           prodl	equ	0xFF3
  4944                           intcon	equ	0xFF2
  4945                           postinc0	equ	0xFEE
  4946                           fsr0h	equ	0xFEA
  4947                           fsr0l	equ	0xFE9
  4948                           wreg	equ	0xFE8
  4949                           postdec1	equ	0xFE5
  4950                           fsr1h	equ	0xFE2
  4951                           fsr1l	equ	0xFE1
  4952                           indf2	equ	0xFDF
  4953                           postinc2	equ	0xFDE
  4954                           postdec2	equ	0xFDD
  4955                           fsr2h	equ	0xFDA
  4956                           fsr2l	equ	0xFD9
  4957                           status	equ	0xFD8
  4958                           
  4959                           	psect	text50
  4960  000000                     __ptext50:
  4961                           	opt stack 0
  4962                           tosu	equ	0xFFF
  4963                           tosh	equ	0xFFE
  4964                           tosl	equ	0xFFD
  4965                           pclatu	equ	0xFFB
  4966                           pclath	equ	0xFFA
  4967                           tblptru	equ	0xFF8
  4968                           tblptrh	equ	0xFF7
  4969                           tblptrl	equ	0xFF6
  4970                           tablat	equ	0xFF5
  4971                           prodh	equ	0xFF4
  4972                           prodl	equ	0xFF3
  4973                           intcon	equ	0xFF2
  4974                           postinc0	equ	0xFEE
  4975                           fsr0h	equ	0xFEA
  4976                           fsr0l	equ	0xFE9
  4977                           wreg	equ	0xFE8
  4978                           postdec1	equ	0xFE5
  4979                           fsr1h	equ	0xFE2
  4980                           fsr1l	equ	0xFE1
  4981                           indf2	equ	0xFDF
  4982                           postinc2	equ	0xFDE
  4983                           postdec2	equ	0xFDD
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988                           	psect	rparam
  4989  0000                     tosu	equ	0xFFF
  4990                           tosh	equ	0xFFE
  4991                           tosl	equ	0xFFD
  4992                           pclatu	equ	0xFFB
  4993                           pclath	equ	0xFFA
  4994                           tblptru	equ	0xFF8
  4995                           tblptrh	equ	0xFF7
  4996                           tblptrl	equ	0xFF6
  4997                           tablat	equ	0xFF5
  4998                           prodh	equ	0xFF4
  4999                           prodl	equ	0xFF3
  5000                           intcon	equ	0xFF2
  5001                           postinc0	equ	0xFEE
  5002                           fsr0h	equ	0xFEA
  5003                           fsr0l	equ	0xFE9
  5004                           wreg	equ	0xFE8
  5005                           postdec1	equ	0xFE5
  5006                           fsr1h	equ	0xFE2
  5007                           fsr1l	equ	0xFE1
  5008                           indf2	equ	0xFDF
  5009                           postinc2	equ	0xFDE
  5010                           postdec2	equ	0xFDD
  5011                           fsr2h	equ	0xFDA
  5012                           fsr2l	equ	0xFD9
  5013                           status	equ	0xFD8
  5014                           
  5015                           	psect	temp
  5016  00004A                     btemp:
  5017                           	opt stack 0
  5018  00004A                     	ds	1
  5019  0000                     int$flags	set	btemp
  5020  0000                     wtemp6	set	btemp+1
  5021                           tosu	equ	0xFFF
  5022                           tosh	equ	0xFFE
  5023                           tosl	equ	0xFFD
  5024                           pclatu	equ	0xFFB
  5025                           pclath	equ	0xFFA
  5026                           tblptru	equ	0xFF8
  5027                           tblptrh	equ	0xFF7
  5028                           tblptrl	equ	0xFF6
  5029                           tablat	equ	0xFF5
  5030                           prodh	equ	0xFF4
  5031                           prodl	equ	0xFF3
  5032                           intcon	equ	0xFF2
  5033                           postinc0	equ	0xFEE
  5034                           fsr0h	equ	0xFEA
  5035                           fsr0l	equ	0xFE9
  5036                           wreg	equ	0xFE8
  5037                           postdec1	equ	0xFE5
  5038                           fsr1h	equ	0xFE2
  5039                           fsr1l	equ	0xFE1
  5040                           indf2	equ	0xFDF
  5041                           postinc2	equ	0xFDE
  5042                           postdec2	equ	0xFDD
  5043                           fsr2h	equ	0xFDA
  5044                           fsr2l	equ	0xFD9
  5045                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    3
    Data        48
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      73
    BANK0           160      0      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(2) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(2) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    do_I2C_TX$2104$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2110$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2116$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_ISR$2122	PTR const FTN()enum E11956 size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX_EMPTY$2121	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX_EMPTY$2116	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_RX$2115	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_RX$2110	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    do_I2C_TX$2109	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    do_I2C_TX$2104	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    returnStop@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S838$11$0	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    d.data	PTR unsigned char  size(2) Largest target is 0

    S1103$data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), 

    fsmStateTable	PTR const FTN()enum E11956[16] size(3) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), 
		 -> i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E11790 size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S838$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@data(COMRAM[2]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    S838$callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E11790[6] size(3) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), i2c_restartWrite(), Absolute function(), returnReset(), 
		 -> returnStop(), 

    S838$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), 
		 -> i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_readDataBlock@reg(COMRAM[1]), i2c_readDataBlock@d(COMRAM[4]), i2c_write2ByteRegister@reg(COMRAM[1]), i2c_write2ByteRegister@data(COMRAM[2]), 
		 -> i2c_read2ByteRegister@reg(COMRAM[1]), i2c_read2ByteRegister@result(COMRAM[2]), i2c_read1ByteRegister@reg(COMRAM[1]), i2c_read1ByteRegister@d2(COMRAM[1]), 
		 -> i2c_write1ByteRegister@reg(COMRAM[1]), i2c_write1ByteRegister@data(COMRAM[1]), NULL(NULL[0]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 


Critical Paths under _main in COMRAM

    _main->_spi2_exchangeByte
    _main->_spi2_master_open

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _i2c_ISR->_do_I2C_TX
    _do_I2C_TX->_i2c1_driver_TXData
    _do_I2C_TX->_i2c1_driver_isNACK
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_SEND_ADR_READ->_i2c1_driver_TXData
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      60
                                             22 COMRAM     3     3      0
                  _SYSTEM_Initialize
                  _spi2_exchangeByte
                   _spi2_master_open
 ---------------------------------------------------------------------------------
 (1) _spi2_master_open                                     1     1      0      45
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spi2_exchangeByte                                    1     1      0      15
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                          18    18      0   88386
                                              3 COMRAM    18    18      0
                   Absolute function *
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (4) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _i2c_ISR                                              0     0      0   88386
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (5) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_TX_EMPTY                                      0     0      0   22074
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_TX                                            2     2      0   22120
                                              1 COMRAM     2     2      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (5) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (5) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (5) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_RX                                            0     0      0   22074
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (6) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_sendNACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_DO_ADDRESS_NACK                               0     0      0   22074
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (6) _wr2RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _wr1RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _returnStop                                           2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _returnReset                                          2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _rdBlkRegCompleteHandler                              2     0      2    4602
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _rd2RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (6) _rd1RegCompleteHandler                                2     0      2    4368
                                             11 COMRAM     2     0      2
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (7) _i2c_setDataCompleteCallback                          5     0      5    2478
                                              6 COMRAM     5     0      5
                        _setCallBack
 ---------------------------------------------------------------------------------
 (8) _setCallBack                                          6     1      5     914
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (7) _i2c_setBuffer                                        4     0      4    1868
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) _i2c_restartWrite                                     2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_stop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (7) _i2c1_driver_restart                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (6) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _spi2_exchangeByte
   _spi2_master_open

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      30       5       30.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      49       1       77.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      79       6        0.0%
DATA                 0      0      79       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 18 10:04:57 2018

                          returnReset@p 003C                             __CFG_CP$OFF 000000  
                  __size_of_do_I2C_IDLE 000A                     _do_I2C_SEND_RESTART 14FC  
                  __size_of_do_I2C_RCEN 000A                             __CFG_LVP$ON 000000  
                                   l618 13F4                                     l662 1480  
                          __CFG_CPD$OFF 000000           i2c_setDataCompleteCallback@cb 0037  
               __size_of_PMD_Initialize 001C                   __size_of_do_I2C_RESET 000E  
                                   prod 000FF3                                     tosl 000FFD  
                                   wreg 000FE8                            __CFG_ZCD$OFF 000000  
               ??_rd2RegCompleteHandler 003E                                    _LATA 000F83  
                                  _LATB 000F84                                    _LATC 000F85  
                                  _LATD 000F86                                    _LATE 000F87  
                                  _PMD0 000EE1                                    _PMD1 000EE2  
                                  _PMD2 000EE3                                    _PMD3 000EE4  
                                  _PMD4 000EE5                                    _PMD5 000EE6  
                  ?_do_I2C_SEND_RESTART 0031                                    _WPUA 000F10  
                                  _WPUB 000F18                                    _WPUC 000F20  
                                  _WPUD 000F25                                    _WPUE 000F2D  
               ??_wr2RegCompleteHandler 003E                           __CFG_FCMEN$ON 000000  
     __size_of_do_I2C_SEND_RESTART_READ 0008               ?_do_I2C_SEND_RESTART_READ 0031  
                                  _main 13DA               __size_of_do_I2C_SEND_STOP 0008  
                __size_of_do_I2C_DO_ACK 0008                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    fsr2h 000FDA  
                                  fsr0l 000FE9                                    indf2 000FDF  
                                  fsr1l 000FE1                                    fsr2l 000FD9  
                                  btemp 004A                   ?_do_I2C_SEND_ADR_READ 0031  
                                  prodh 000FF4                                    prodl 000FF3  
       ??_i2c1_driver_clearBusCollision 0031                                    start 00DC  
                         _i2c_setBuffer 144C                           __CFG_CSWEN$ON 000000  
                       __end_of_i2c_ISR 12B4                            ___param_bank 000000  
      __size_of_rdBlkRegCompleteHandler 0044                           __CFG_SCANE$ON 000000  
              ??_do_I2C_DO_NACK_RESTART 0031                            _do_I2C_RESET 14BA  
        __size_of_OSCILLATOR_Initialize 0018           __end_of_OSCILLATOR_Initialize 144C  
            __size_of_spi2_exchangeByte 0012                                   ?_main 0031  
              __end_of_i2c1_driver_stop 155C                           __CFG_WDTE$OFF 000000  
            __end_of_i2c1_driver_TXData 151C                          __CFG_DEBUG$OFF 000000  
                                 i2l430 11F2                                   i2l433 11F8  
                                 i2l441 0FB8                                   i2l442 0FBE  
                                 i2l275 0072                                   i2l429 11FE  
                                 i2l437 0FFE                                   i2l453 114A  
                                 i2l470 11A6                                   i2l438 0FC4  
                                 i2l439 0FB2                                   i2l448 1028  
                                 i2l456 115A                                   i2l465 11AC  
                                 i2l457 114E                                   i2l490 1076  
                                 i2l466 1198                                   i2l459 1154  
                                 i2l469 119E                                   i2l477 1288  
                                 _OSCEN 000EDC                                   _TRISA 000F88  
                                 _TRISB 000F89                                   _TRISC 000F8A  
                                 _TRISD 000F8B                                   _TRISE 000F8C  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                           __CFG_WRT3$OFF 000000  
                         __CFG_WRT4$OFF 000000                           __CFG_WRT5$OFF 000000  
                         __CFG_WRT6$OFF 000000                           __CFG_WRT7$OFF 000000  
                        __CFG_EBTR0$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                        __CFG_EBTR4$OFF 000000                          __CFG_EBTR5$OFF 000000  
                        __CFG_EBTR6$OFF 000000                          __CFG_EBTR7$OFF 000000  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                          __CFG_EBTRB$OFF 000000  
            __end_of_i2c1_driver_isNACK 147A              ?_do_I2C_SEND_RESTART_WRITE 0031  
                    __CFG_MCLRE$EXTMCLR 000000                   ??_do_I2C_SEND_RESTART 0031  
                                 pclath 000FFA                                   tablat 000FF5  
               __size_of_mssp1_clearIRQ 0006                  ?_do_I2C_SEND_ADR_WRITE 0031  
                                 status 000FD8                                   wtemp6 004B  
                        ?_i2c_setBuffer 0031                            ?_setCallBack 0031  
                         _fsmStateTable 0060                         __initialization 12B4  
                            _i2c_status 0001                            __end_of_main 13FC  
           ?_INTERRUPT_InterruptManager 0031                           setCallBack@cb 0031  
                         _do_I2C_DO_ACK 14EC                                  ??_main 0047  
                     ?_i2c_restartWrite 003C           __size_of_i2c1_driver_sendNACK 0006  
                         __activetblptr 000003                      ??_i2c_restartWrite 003E  
         __size_of_i2c1_driver_resetBus 0002                 ?_do_I2C_DO_ADDRESS_NACK 0031  
                                _ANSELA 000F11                                  _ANSELB 000F19  
                                _ANSELC 000F21                                  _ANSELD 000F26  
                                _ANSELE 000F2E                                  _RB1PPS 000EF0  
                                _RC3PPS 000EFA                                  _RC4PPS 000EFB  
                                _RD3PPS 000F02                                  _ODCONA 000F0F  
                                _ODCONB 000F17                                  _ODCONC 000F1F  
                                _ODCOND 000F24                                  _ODCONE 000F2C  
                        __CFG_WDTCCS$SC 000000                                  _OSCFRQ 000EDE  
                ??_do_I2C_SEND_ADR_READ 0032                rdBlkRegCompleteHandler@p 003C  
                             ??_i2c_ISR 0034                          __CFG_PWRTE$OFF 000000  
                        __CFG_XINST$OFF 000000                   _i2c1_driver_getRXData 1544  
             __CFG_RSTOSC$HFINTOSC_1MHZ 000000             __end_of_do_I2C_DO_NACK_STOP 14EC  
   __end_of_i2c_setDataCompleteCallback 1434             _i2c_setDataCompleteCallback 1418  
 __end_of_i2c1_driver_clearBusCollision 1528  __size_of_i2c1_driver_clearBusCollision 0006  
         _i2c1_driver_clearBusCollision 1522                          __CFG_STVREN$ON 000000  
       __size_of_do_I2C_DO_NACK_RESTART 0008                      spi2_exchangeByte@b 0046  
                                clear_0 12DA                          ?_do_I2C_DO_ACK 0031  
              __end_of_spi2_master_open 1122             __end_of_i2c1_driver_sendACK 1540  
                        _PMD_Initialize 13FC          __end_of_do_I2C_DO_ADDRESS_NACK 1230  
                          __mediumconst 0000             __end_of_i2c1_driver_restart 1560  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                            ?_returnReset 003C  
           __end_of_i2c1_driver_startRX 154C           __size_of_INTERRUPT_Initialize 0004  
                     _SYSTEM_Initialize 148C                              __accesstop 0060  
               __end_of__initialization 12E0                         ??_i2c_setBuffer 0035  
                      _do_I2C_SEND_STOP 14F4                      __size_of_do_I2C_RX 0072  
                    __size_of_do_I2C_TX 008C                      ?_SYSTEM_Initialize 0031  
                         ___rparam_used 000001                __size_of_do_I2C_TX_EMPTY 0056  
               _rdBlkRegCompleteHandler 1230              __end_of_spi2_configuration 0F04  
                        __pcstackCOMRAM 0031                            __pidataBANK0 12EA  
                   ??_SYSTEM_Initialize 0046                  __end_of_PMD_Initialize 1418  
                        main@gamerScore 0048                          setCallBack@idx 0036  
                _do_I2C_DO_NACK_RESTART 14DC                          _do_I2C_TX$1041 0032  
             __end_of_SYSTEM_Initialize 149E                          _mssp1_clearIRQ 1528  
        __size_of_rd2RegCompleteHandler 0030           __end_of_rd2RegCompleteHandler 134A  
        __size_of_wr2RegCompleteHandler 0030           __end_of_wr2RegCompleteHandler 13DA  
                 _rd1RegCompleteHandler 134A                  ?_i2c1_driver_getRXData 0031  
                 _wr1RegCompleteHandler 137A                          _SSP1DATPPSbits 000EB8  
          __size_of_i2c_busCollisionISR 0006                           ??_do_I2C_IDLE 0031  
                  __size_of_setCallBack 0078                           ??_do_I2C_RCEN 0031  
                       __CFG_PPS1WAY$ON 000000                         ??_do_I2C_DO_ACK 0031  
                   i2c_setBuffer@buffer 0031                          _SSP2DATPPSbits 000E90  
                        _SSP1CLKPPSbits 000EB7                         ?_PMD_Initialize 0031  
        ?_i2c1_driver_clearBusCollision 0031                       __end_of_do_I2C_RX 1194  
                     __end_of_do_I2C_TX 1034                       ?_i2c1_driver_stop 0031  
                    ??_i2c1_driver_stop 0031                                 _OSCCON1 000ED8  
                               _OSCCON3 000EDA                           ?_mssp1_setIRQ 0031  
                               i2u60_48 120E                          _SSP2CLKPPSbits 000E8F  
                               i2u60_49 1222                                 _OSCTUNE 000EDD  
                               i2u62_48 0FD4                                 i2u62_49 0FE8  
                               i2u71_48 129C                                 i2u71_49 12B0  
                               i2u65_48 116A                                 i2u65_49 117E  
                               i2u66_48 11BC                                 i2u66_49 11D0  
                               i2u75_48 0062                                 i2u78_48 007C  
                               i2u78_49 0090                                 _SSP1ADD 000F93  
                               _SSP2ADD 000E93                                 _SSP1BUF 000F92  
                __end_of_mssp1_clearIRQ 152E                                 _SSP2BUF 000E92  
                               _SSP1MSK 000F94                 ??_do_I2C_SEND_ADR_WRITE 0032  
           ??_do_I2C_SEND_RESTART_WRITE 0031                      _i2c1_driver_TXData 1514  
                    _i2c1_driver_i2cISR 002B                                 _i2c_ISR 1274  
             ??_rdBlkRegCompleteHandler 003E                                 __Hparam 0000  
                    _i2c1_driver_isNACK 1464                     ?_i2c1_driver_TXData 0031  
                               __Lparam 0000                            __psmallconst 0F00  
                     ??_do_I2C_TX_EMPTY 0031                     ?_i2c1_driver_isNACK 0031  
                               __pcinit 12B4                                 __ramtop 0F00  
                               __ptext0 13DA                                 __ptext1 10AC  
                               __ptext2 147A                                 __ptext3 148C  
                               __ptext4 13FC                                 __ptext5 0F06  
                               __ptext6 1434                                 __ptext7 1540  
                               __ptext9 151C                     __end_of_do_I2C_IDLE 14DC  
                   __end_of_do_I2C_RCEN 14D2                   _OSCILLATOR_Initialize 1434  
           __end_of_do_I2C_SEND_RESTART 1504                          ??_mssp1_setIRQ 0031  
                  ??_i2c1_driver_TXData 0031                ??_PIN_MANAGER_Initialize 0046  
                       ?_mssp1_clearIRQ 0031                _do_I2C_SEND_RESTART_READ 150C  
            __size_of_SYSTEM_Initialize 0012                       main@photonAddress 0049  
                  __size_of_returnReset 0004                    end_of_initialization 12E0  
                  ??_i2c1_driver_isNACK 0031               __size_of_i2c_restartWrite 0004  
          __end_of_i2c1_driver_sendNACK 153A                  ?_rd1RegCompleteHandler 003C  
                ?_wr1RegCompleteHandler 003C            __end_of_i2c1_driver_resetBus 1562  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc2 000FDE  
             _do_I2C_SEND_RESTART_WRITE 1504                   __CFG_WDTCPS$WDTCPS_31 000000  
                            _returnStop 1554         __end_of_rdBlkRegCompleteHandler 1274  
              __end_of_do_I2C_SEND_STOP 14FC                       ?_spi2_master_open 0031  
                             _TRISBbits 000F89    __size_of_i2c_setDataCompleteCallback 001C  
                    ??_spi2_master_open 0046                             returnStop@p 003C  
                      __CFG_FEXTOSC$OFF 000000            i2c_setDataCompleteCallback@p 003A  
         __size_of_do_I2C_SEND_ADR_READ 000E                             _do_I2C_IDLE 14D2  
                           _do_I2C_RCEN 14C8            __end_of_INTERRUPT_Initialize 1544  
                ?_OSCILLATOR_Initialize 0031            __size_of_do_I2C_DO_NACK_STOP 0008  
                    _spi2_configuration 0F01                 ?_do_I2C_DO_NACK_RESTART 0031  
                   start_initialization 12B4                     _i2c_busCollisionISR 151C  
       __size_of_PIN_MANAGER_Initialize 00A2                            setCallBack@p 0034  
          __size_of_i2c1_driver_sendACK 0006                 i2c_setBuffer@bufferSize 0033  
               ??_i2c1_driver_getRXData 0031                  rd1RegCompleteHandler@p 003C  
          __size_of_i2c1_driver_restart 0004            __size_of_i2c1_driver_startRX 0004  
                 __end_of_i2c_setBuffer 1464                    ?_i2c_busCollisionISR 0031  
                      __CFG_LPBOREN$OFF 000000                    __end_of_mssp1_setIRQ 1534  
                      ??_PMD_Initialize 0046                  wr1RegCompleteHandler@p 003C  
                         ?_do_I2C_RESET 0031                             __pdataBANK0 0060  
                           ?_returnStop 003C          __end_of_do_I2C_DO_NACK_RESTART 14E4  
                  _i2c1_driver_sendNACK 1534                             __pbssCOMRAM 0001  
                  _i2c1_driver_resetBus 1560                               _do_I2C_RX 1122  
                             _do_I2C_TX 0FA8          __size_of_do_I2C_SEND_ADR_WRITE 000E  
         __end_of_do_I2C_SEND_ADR_WRITE 14AC                        _i2c_restartWrite 154C  
             __size_of_i2c1_driver_stop 0004                                ?_i2c_ISR 0031  
                       _do_I2C_TX_EMPTY 1194                           ??_setCallBack 0036  
                 _rd2RegCompleteHandler 131A                   ??_i2c_busCollisionISR 0031  
                _PIN_MANAGER_Initialize 0F06                   _wr2RegCompleteHandler 13AA  
                             __pintcode 0008                          ??_do_I2C_RESET 0031  
              ??_do_I2C_DO_ADDRESS_NACK 0031             _i2c1_driver_busCollisionISR 002E  
                 __end_of_do_I2C_DO_ACK 14F4            ??_INTERRUPT_InterruptManager 0034  
            ??_do_I2C_SEND_RESTART_READ 0031                   ?_i2c1_driver_sendNACK 0031  
                      ??_mssp1_clearIRQ 0031                             __smallconst 0F00  
                 ?_i2c1_driver_resetBus 0031      __size_of_do_I2C_SEND_RESTART_WRITE 0008  
                            ?_do_I2C_RX 0031                              ?_do_I2C_TX 0031  
               ??_rd1RegCompleteHandler 003E                    _INTERRUPT_Initialize 1540  
               ??_wr1RegCompleteHandler 003E                     __size_of_returnStop 0004  
                              _PIE3bits 000EC5                     __CFG_BORV$VBOR_2P45 000000  
   __size_of_INTERRUPT_InterruptManager 00D4                                _PIR3bits 000ECD  
                              _SSP1CON1 000F96                                _SSP1CON2 000F97  
                              _SSP2CON1 000E96                                _SSP2CON2 000E97  
          ?_i2c_setDataCompleteCallback 0037                                _SSP1STAT 000F95  
                              _SSP2STAT 000E95                     __end_of_setCallBack 10AC  
                     ?_do_I2C_SEND_STOP 0031                           ??_returnReset 003E  
                    ??_do_I2C_SEND_STOP 0031             __size_of_i2c1_driver_TXData 0008  
     __end_of_do_I2C_SEND_RESTART_WRITE 150C                 __end_of_do_I2C_TX_EMPTY 11EA  
                             copy_data0 12C8                   ?_INTERRUPT_Initialize 0031  
              ?_rdBlkRegCompleteHandler 003C            __size_of_do_I2C_SEND_RESTART 0008  
           __size_of_i2c1_driver_isNACK 0016                   __size_of_mssp1_setIRQ 0006  
                ?_rd2RegCompleteHandler 003C               __size_of_spi2_master_open 0076  
                   _do_I2C_DO_NACK_STOP 14E4                        __size_of_i2c_ISR 0040  
                ?_wr2RegCompleteHandler 003C                                __Hrparam 0000  
                              __Lrparam 0000                      __CFG_BOREN$SBORDIS 000000  
                          ?_do_I2C_IDLE 0031                            ?_do_I2C_RCEN 0031  
               ??_OSCILLATOR_Initialize 0046                     _i2c1_driver_sendACK 153A  
       __size_of_do_I2C_DO_ADDRESS_NACK 0046                     i2c1_driver_TXData@d 0031  
                ??_i2c1_driver_sendNACK 0031           ??_i2c_setDataCompleteCallback 003C  
                   _i2c1_driver_restart 155C                    ?_do_I2C_DO_NACK_STOP 0031  
                   _i2c1_driver_startRX 1548            __end_of_do_I2C_SEND_ADR_READ 14BA  
                ??_i2c1_driver_resetBus 0031                            _mssp1_setIRQ 152E  
                           ??_do_I2C_RX 0031                             ??_do_I2C_TX 0032  
                              __ptext10 1522                                __ptext11 1274  
                              __ptext20 149E                                __ptext12 1528  
                              __ptext21 14AC                                __ptext13 1122  
                              __ptext30 1464                                __ptext22 14F4  
                              __ptext14 0FA8                                __ptext31 1514  
                              __ptext23 14FC                                __ptext15 11EA  
                              __ptext40 154C                                __ptext32 1544  
                              __ptext24 1504                                __ptext16 14DC  
                              __ptext41 1550                                __ptext33 1534  
                              __ptext25 150C                                __ptext17 14E4  
                              __ptext50 0000                                __ptext42 1554  
                              __ptext34 1560                                __ptext26 14D2  
                              __ptext18 14EC                                __ptext43 13AA  
                              __ptext35 1548                                __ptext27 14BA  
                              __ptext19 14C8                                __ptext44 1418  
                              __ptext36 1230                                __ptext28 1194  
                              __ptext45 1034                                __ptext37 131A  
                              __ptext29 152E                                __ptext46 144C  
                              __ptext38 134A                                __ptext47 1558  
                              __ptext39 137A                                __ptext48 155C  
                              __ptext49 153A                            _SSP1CON1bits 000F96  
                          _SSP1CON2bits 000F97  spi2_master_open@spiUniqueConfiguration 0046  
                          _SSP2CON1bits 000E96                    ?_i2c1_driver_sendACK 0031  
                  __end_of_do_I2C_RESET 14C8                    ?_i2c1_driver_restart 0031  
                   __end_of_returnReset 1554                        _i2c1_driver_stop 1558  
                         __size_of_main 0022                    ?_i2c1_driver_startRX 0031  
        __size_of_i2c1_driver_getRXData 0004           __end_of_i2c1_driver_getRXData 1548  
                  __CFG_WDTCWS$WDTCWS_7 000000                             _setCallBack 1034  
                              int$flags 004A      __end_of_INTERRUPT_InterruptManager 00DC  
            _INTERRUPT_InterruptManager 0008                                main@addr 0047  
                          _SSP1STATbits 000F95        __end_of_do_I2C_SEND_RESTART_READ 1514  
                          ??_returnStop 003E                __end_of_i2c_restartWrite 1550  
                 ??_do_I2C_DO_NACK_STOP 0031                       _spi2_exchangeByte 147A  
                            _INTCONbits 000FF2                      ?_spi2_exchangeByte 0031  
                ??_INTERRUPT_Initialize 0046                   ??_i2c1_driver_sendACK 0031  
                      ?_do_I2C_TX_EMPTY 0031                  _do_I2C_DO_ADDRESS_NACK 11EA  
                              intlevel2 0000                   ??_i2c1_driver_restart 0031  
                   ??_spi2_exchangeByte 0046                  rd2RegCompleteHandler@p 003C  
                 ??_i2c1_driver_startRX 0031                 ?_PIN_MANAGER_Initialize 0031  
                     i2c_restartWrite@p 003C                       __CFG_CLKOUTEN$OFF 000000  
                    __end_of_returnStop 1558                  wr2RegCompleteHandler@p 003C  
             __end_of_spi2_exchangeByte 148C                  __size_of_i2c_setBuffer 0018  
                           _returnReset 1550          __end_of_PIN_MANAGER_Initialize 0FA8  
           __end_of_i2c_busCollisionISR 1522          __size_of_rd1RegCompleteHandler 0030  
         __end_of_rd1RegCompleteHandler 137A                        _spi2_master_open 10AC  
        __size_of_wr1RegCompleteHandler 0030           __end_of_wr1RegCompleteHandler 13AA  
                 _do_I2C_SEND_ADR_WRITE 149E                    _do_I2C_SEND_ADR_READ 14AC  
