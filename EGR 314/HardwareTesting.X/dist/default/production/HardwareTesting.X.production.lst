

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 02 21:29:58 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           ; Version 1.45
    40                           ; Generated 16/11/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F47K40 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     _PIE3bits	set	3781
    74  0000                     _PIR3bits	set	3789
    75  0000                     _PMD5	set	3814
    76  0000                     _PMD4	set	3813
    77  0000                     _PMD3	set	3812
    78  0000                     _PMD2	set	3811
    79  0000                     _PMD1	set	3810
    80  0000                     _PMD0	set	3809
    81  0000                     _OSCTUNE	set	3805
    82  0000                     _OSCFRQ	set	3806
    83  0000                     _OSCEN	set	3804
    84  0000                     _OSCCON3	set	3802
    85  0000                     _OSCCON1	set	3800
    86  0000                     _SSP1DATPPSbits	set	3768
    87  0000                     _RC4PPS	set	3835
    88  0000                     _RC3PPS	set	3834
    89  0000                     _SSP1CLKPPSbits	set	3767
    90  0000                     _ODCOND	set	3876
    91  0000                     _ODCONC	set	3871
    92  0000                     _ODCONB	set	3863
    93  0000                     _ODCONA	set	3855
    94  0000                     _ODCONE	set	3884
    95  0000                     _WPUC	set	3872
    96  0000                     _WPUA	set	3856
    97  0000                     _WPUB	set	3864
    98  0000                     _WPUE	set	3885
    99  0000                     _WPUD	set	3877
   100  0000                     _ANSELA	set	3857
   101  0000                     _ANSELE	set	3886
   102  0000                     _ANSELD	set	3878
   103  0000                     _ANSELB	set	3865
   104  0000                     _ANSELC	set	3873
   105  0000                     _LATCbits	set	3973
   106  0000                     _INTCONbits	set	4082
   107  0000                     _SSP1BUF	set	3986
   108  0000                     _SSP1CON2bits	set	3991
   109  0000                     _SSP1CON1bits	set	3990
   110  0000                     _SSP1ADD	set	3987
   111  0000                     _SSP1CON3	set	3992
   112  0000                     _SSP1CON1	set	3990
   113  0000                     _SSP1STAT	set	3989
   114  0000                     _TRISD	set	3979
   115  0000                     _TRISC	set	3978
   116  0000                     _TRISB	set	3977
   117  0000                     _TRISA	set	3976
   118  0000                     _TRISE	set	3980
   119  0000                     _LATC	set	3973
   120  0000                     _LATB	set	3972
   121  0000                     _LATA	set	3971
   122  0000                     _LATD	set	3974
   123  0000                     _LATE	set	3975
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  000860                     __pcinit:
   129                           	opt stack 0
   130  000860                     start_initialization:
   131                           	opt stack 0
   132  000860                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Clear objects allocated to COMRAM (36 bytes)
   136  000860  EE00  F001         	lfsr	0,__pbssCOMRAM
   137  000864  0E24               	movlw	36
   138  000866                     clear_0:
   139  000866  6AEE               	clrf	postinc0,c
   140  000868  06E8               	decf	wreg,f,c
   141  00086A  E1FD               	bnz	clear_0
   142  00086C                     end_of_initialization:
   143                           	opt stack 0
   144  00086C                     __end_of__initialization:
   145                           	opt stack 0
   146  00086C  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   147  00086E  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   148  000870  0100               	movlb	0
   149  000872  EF6F  F002         	goto	_main	;jump to C main() function
   150                           postinc0	equ	0xFEE
   151                           wreg	equ	0xFE8
   152                           
   153                           	psect	bssCOMRAM
   154  000001                     __pbssCOMRAM:
   155                           	opt stack 0
   156  000001                     _i2c1_object:
   157                           	opt stack 0
   158  000001                     	ds	7
   159  000008                     I2C1_ISR@pi2c_buf_ptr:
   160                           	opt stack 0
   161  000008                     	ds	2
   162  00000A                     _p_i2c1_current:
   163                           	opt stack 0
   164  00000A                     	ds	2
   165  00000C                     _p_i2c1_trb_current:
   166                           	opt stack 0
   167  00000C                     	ds	2
   168  00000E                     _i2caddr:
   169                           	opt stack 0
   170  00000E                     	ds	1
   171  00000F                     I2C1_ISR@i2c_10bit_address_restart:
   172                           	opt stack 0
   173  00000F                     	ds	1
   174  000010                     I2C1_ISR@i2c_bytes_left:
   175                           	opt stack 0
   176  000010                     	ds	1
   177  000011                     _i2c1_trb_count:
   178                           	opt stack 0
   179  000011                     	ds	1
   180  000012                     _i2c1_state:
   181                           	opt stack 0
   182  000012                     	ds	1
   183  000013                     I2C1_MasterRead@trBlock:
   184                           	opt stack 0
   185  000013                     	ds	5
   186  000018                     I2C1_MasterWrite@trBlock:
   187                           	opt stack 0
   188  000018                     	ds	5
   189  00001D                     _i2c1_tr_queue:
   190                           	opt stack 0
   191  00001D                     	ds	5
   192  000022                     I2C1_ISR@i2c_address:
   193                           	opt stack 0
   194  000022                     	ds	2
   195  000024                     _status:
   196                           	opt stack 0
   197  000024                     	ds	1
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	cstackBANK0
   202  000060                     __pcstackBANK0:
   203                           	opt stack 0
   204  000060                     I2C1_MasterWrite@pdata:
   205                           	opt stack 0
   206  000060                     I2C1_MasterRead@pdata:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x0
   210  000060                     	ds	2
   211  000062                     I2C1_MasterWrite@length:
   212                           	opt stack 0
   213  000062                     I2C1_MasterRead@length:
   214                           	opt stack 0
   215                           
   216                           ; 1 bytes @ 0x2
   217  000062                     	ds	1
   218  000063                     I2C1_MasterWrite@address:
   219                           	opt stack 0
   220  000063                     I2C1_MasterRead@address:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x3
   224  000063                     	ds	2
   225  000065                     I2C1_MasterWrite@pflag:
   226                           	opt stack 0
   227  000065                     I2C1_MasterRead@pflag:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x5
   231  000065                     	ds	2
   232  000067                     writeRegister@regAddr:
   233                           	opt stack 0
   234  000067                     readRegister@addr:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0x7
   238  000067                     	ds	1
   239  000068                     writeRegister@data:
   240                           	opt stack 0
   241  000068                     readRegister@data:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x8
   245  000068                     	ds	1
   246  000069                     readRegister@result:
   247                           	opt stack 0
   248  000069                     mcpBegin@addr:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x9
   252  000069                     	ds	1
   253  00006A                     ??_digitalRead:
   254  00006A                     updateRegisterBit@pValue:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0xA
   258  00006A                     	ds	1
   259  00006B                     updateRegisterBit@portAaddr:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0xB
   263  00006B                     	ds	1
   264  00006C                     updateRegisterBit@portBaddr:
   265                           	opt stack 0
   266  00006C                     digitalRead@bitty:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0xC
   270  00006C                     	ds	1
   271  00006D                     updateRegisterBit@bitty:
   272                           	opt stack 0
   273  00006D                     digitalRead@regAddr:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0xD
   277  00006D                     	ds	1
   278  00006E                     updateRegisterBit@pin:
   279                           	opt stack 0
   280  00006E                     digitalRead@pin:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0xE
   284  00006E                     	ds	1
   285  00006F                     updateRegisterBit@regAddr:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0xF
   289  00006F                     	ds	1
   290  000070                     updateRegisterBit@regValue:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x10
   294  000070                     	ds	1
   295  000071                     mcpPinMode@d:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x11
   299  000071                     	ds	1
   300  000072                     mcpPinMode@p:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x12
   304  000072                     	ds	1
   305  000073                     ??_main:
   306                           
   307                           ; 1 bytes @ 0x13
   308  000073                     	ds	1
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	cstackCOMRAM
   313  000025                     __pcstackCOMRAM:
   314                           	opt stack 0
   315  000025                     ??_I2C1_Stop:
   316  000025                     
   317                           ; 1 bytes @ 0x0
   318  000025                     	ds	2
   319  000027                     I2C1_Stop@completion_code:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x2
   323  000027                     	ds	1
   324  000028                     ??_I2C1_ISR:
   325                           
   326                           ; 1 bytes @ 0x3
   327  000028                     	ds	2
   328  00002A                     ??_INTERRUPT_InterruptManager:
   329                           
   330                           ; 1 bytes @ 0x5
   331  00002A                     	ds	18
   332  00003C                     regForPin@portAaddr:
   333                           	opt stack 0
   334  00003C                     bitForPin@pin:
   335                           	opt stack 0
   336  00003C                     I2C1_MasterTRBInsert@ptrb_list:
   337                           	opt stack 0
   338  00003C                     I2C1_MasterReadTRBBuild@ptrb:
   339                           	opt stack 0
   340  00003C                     I2C1_MasterWriteTRBBuild@ptrb:
   341                           	opt stack 0
   342  00003C                     bitWrite@n:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x17
   346  00003C                     	ds	1
   347  00003D                     regForPin@portBaddr:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x18
   351  00003D                     	ds	1
   352  00003E                     regForPin@pin:
   353                           	opt stack 0
   354  00003E                     bitWrite@b:
   355                           	opt stack 0
   356  00003E                     I2C1_MasterTRBInsert@pflag:
   357                           	opt stack 0
   358  00003E                     I2C1_MasterReadTRBBuild@pdata:
   359                           	opt stack 0
   360  00003E                     I2C1_MasterWriteTRBBuild@pdata:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x19
   364  00003E                     	ds	1
   365  00003F                     ??_bitWrite:
   366  00003F                     _regForPin$673:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x1A
   370  00003F                     	ds	1
   371  000040                     I2C1_MasterReadTRBBuild@length:
   372                           	opt stack 0
   373  000040                     I2C1_MasterWriteTRBBuild@length:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x1B
   377  000040                     	ds	1
   378  000041                     I2C1_MasterTRBInsert@count:
   379                           	opt stack 0
   380  000041                     bitWrite@x:
   381                           	opt stack 0
   382  000041                     I2C1_MasterReadTRBBuild@address:
   383                           	opt stack 0
   384  000041                     I2C1_MasterWriteTRBBuild@address:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x1C
   388  000041                     	ds	2
   389  000043                     ??_I2C1_MasterWriteTRBBuild:
   390  000043                     ??_I2C1_MasterReadTRBBuild:
   391                           
   392                           ; 1 bytes @ 0x1E
   393  000043                     	ds	2
   394  000045                     ??_readRegister:
   395  000045                     writeRegister@regValue:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x20
   399  000045                     	ds	1
   400  000046                     ??_writeRegister:
   401                           
   402                           ; 1 bytes @ 0x21
   403  000046                     	ds	2
   404  000048                     postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           
   407                           ; 1 bytes @ 0x23
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 119 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   429 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   430 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   431 ;;Total ram usage:        1 bytes
   432 ;; Hardware stack levels required when called:    8
   433 ;; This function calls:
   434 ;;		_SYSTEM_Initialize
   435 ;;		_digitalRead
   436 ;;		_mcpBegin
   437 ;;		_mcpPinMode
   438 ;; This function is called by:
   439 ;;		Startup code after reset
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	text0
   444  0004DE                     __ptext0:
   445                           	opt stack 0
   446  0004DE                     _main:
   447                           	opt stack 23
   448                           
   449                           ;main.c: 122: SYSTEM_Initialize();
   450                           
   451                           ;incstack = 0
   452  0004DE  EC3B  F004         	call	_SYSTEM_Initialize	;wreg free
   453                           
   454                           ;main.c: 141: mcpBegin(0);
   455  0004E2  0E00               	movlw	0
   456  0004E4  ECD5  F003         	call	_mcpBegin
   457                           
   458                           ;main.c: 142: mcpPinMode(8,1);
   459  0004E8  0E01               	movlw	1
   460  0004EA  0100               	movlb	0	; () banked
   461  0004EC  6F71               	movwf	mcpPinMode@d& (0+255),b
   462  0004EE  0E08               	movlw	8
   463  0004F0  ECEC  F003         	call	_mcpPinMode
   464  0004F4                     
   465                           ;main.c: 145: {
   466                           ;main.c: 146: if(digitalRead(8)){
   467  0004F4  0E08               	movlw	8
   468  0004F6  EC58  F003         	call	_digitalRead
   469  0004FA  0900               	iorlw	0
   470  0004FC  B4D8               	btfsc	status,2,c
   471  0004FE  D010               	goto	l335
   472                           
   473                           ;main.c: 147: do { LATCbits.LATC6 = ~LATCbits.LATC6; } while(0);
   474  000500  AC85               	btfss	3973,6,c	;volatile
   475  000502  D002               	goto	u960
   476  000504  0E01               	movlw	1
   477  000506  D001               	goto	u966
   478  000508                     u960:
   479  000508  0E00               	movlw	0
   480  00050A                     u966:
   481  00050A  0AFF               	xorlw	255
   482  00050C  0100               	movlb	0	; () banked
   483  00050E  6F73               	movwf	??_main& (0+255),b
   484  000510  3B73               	swapf	??_main& (0+255),f,b
   485  000512  4773               	rlncf	??_main& (0+255),f,b
   486  000514  4773               	rlncf	??_main& (0+255),f,b
   487  000516  5085               	movf	3973,w,c	;volatile
   488  000518  1973               	xorwf	??_main& (0+255),w,b
   489  00051A  0BBF               	andlw	-65
   490  00051C  1973               	xorwf	??_main& (0+255),w,b
   491  00051E  6E85               	movwf	3973,c	;volatile
   492  000520                     l335:
   493                           
   494                           ;main.c: 148: }
   495                           ;main.c: 150: _delay((unsigned long)((50)*(4000000/4000.0)));
   496                           
   497                           ; BSR set to: 0
   498                           
   499                           ; BSR set to: 0
   500  000520  0E41               	movlw	65
   501  000522  0100               	movlb	0	; () banked
   502  000524  6F73               	movwf	??_main& (0+255),b
   503  000526  0EEE               	movlw	238
   504  000528                     u977:
   505  000528  2EE8               	decfsz	wreg,f,c
   506  00052A  D7FE               	bra	u977
   507  00052C  2F73               	decfsz	??_main& (0+255),f,b
   508  00052E  D7FC               	bra	u977
   509  000530  F000               	nop	
   510  000532  D7E0               	goto	l332
   511  000534                     __end_of_main:
   512                           	opt stack 0
   513                           postinc0	equ	0xFEE
   514                           wreg	equ	0xFE8
   515                           status	equ	0xFD8
   516                           
   517 ;; *************** function _mcpPinMode *****************
   518 ;; Defined at:
   519 ;;		line 106 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  p               1    wreg     unsigned char 
   522 ;;  d               1   17[BANK0 ] unsigned char 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  p               1   18[BANK0 ] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   534 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   535 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   537 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   538 ;;Total ram usage:        2 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    7
   541 ;; This function calls:
   542 ;;		_updateRegisterBit
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text1
   549  0007D8                     __ptext1:
   550                           	opt stack 0
   551  0007D8                     _mcpPinMode:
   552                           	opt stack 23
   553                           
   554                           ;incstack = 0
   555                           ;mcpPinMode@p stored from wreg
   556  0007D8  0100               	movlb	0	; () banked
   557  0007DA  6F72               	movwf	mcpPinMode@p& (0+255),b
   558                           
   559                           ;main.c: 107: updateRegisterBit(p,(d==1),0x00, 0x01);
   560  0007DC  0100               	movlb	0	; () banked
   561  0007DE  0571               	decf	mcpPinMode@d& (0+255),w,b
   562  0007E0  A4D8               	btfss	status,2,c
   563  0007E2  D002               	goto	u870
   564  0007E4  0E01               	movlw	1
   565  0007E6  D001               	goto	u880
   566  0007E8                     u870:
   567  0007E8  0E00               	movlw	0
   568  0007EA                     u880:
   569  0007EA  6F6A               	movwf	updateRegisterBit@pValue& (0+255),b
   570  0007EC  0E00               	movlw	0
   571  0007EE  6F6B               	movwf	updateRegisterBit@portAaddr& (0+255),b
   572  0007F0  0E01               	movlw	1
   573  0007F2  6F6C               	movwf	updateRegisterBit@portBaddr& (0+255),b
   574  0007F4  5172               	movf	mcpPinMode@p& (0+255),w,b
   575  0007F6  ECC2  F002         	call	_updateRegisterBit
   576  0007FA  0012               	return		;funcret
   577  0007FC                     __end_of_mcpPinMode:
   578                           	opt stack 0
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           status	equ	0xFD8
   582                           
   583 ;; *************** function _updateRegisterBit *****************
   584 ;; Defined at:
   585 ;;		line 95 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  pin             1    wreg     unsigned char 
   588 ;;  pValue          1   10[BANK0 ] unsigned char 
   589 ;;  portAaddr       1   11[BANK0 ] unsigned char 
   590 ;;  portBaddr       1   12[BANK0 ] unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  pin             1   14[BANK0 ] unsigned char 
   593 ;;  regValue        1   16[BANK0 ] unsigned char 
   594 ;;  regAddr         1   15[BANK0 ] unsigned char 
   595 ;;  bitty           1   13[BANK0 ] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   605 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   606 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   608 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   609 ;;Total ram usage:        7 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; Hardware stack levels required when called:    6
   612 ;; This function calls:
   613 ;;		_bitForPin
   614 ;;		_bitWrite
   615 ;;		_readRegister
   616 ;;		_regForPin
   617 ;;		_writeRegister
   618 ;; This function is called by:
   619 ;;		_mcpPinMode
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text2
   624  000584                     __ptext2:
   625                           	opt stack 0
   626  000584                     _updateRegisterBit:
   627                           	opt stack 23
   628                           
   629                           ;incstack = 0
   630                           ;updateRegisterBit@pin stored from wreg
   631  000584  0100               	movlb	0	; () banked
   632  000586  6F6E               	movwf	updateRegisterBit@pin& (0+255),b
   633                           
   634                           ;main.c: 96: uint8_t regValue;
   635                           ;main.c: 97: uint8_t regAddr = regForPin(pin, portAaddr, portBaddr);
   636  000588  C06B  F03C         	movff	updateRegisterBit@portAaddr,regForPin@portAaddr
   637  00058C  C06C  F03D         	movff	updateRegisterBit@portBaddr,regForPin@portBaddr
   638  000590  0100               	movlb	0	; () banked
   639  000592  516E               	movf	updateRegisterBit@pin& (0+255),w,b
   640  000594  EC0C  F004         	call	_regForPin
   641  000598  0100               	movlb	0	; () banked
   642  00059A  6F6F               	movwf	updateRegisterBit@regAddr& (0+255),b
   643                           
   644                           ;main.c: 98: uint8_t bitty = bitForPin(pin);
   645  00059C  516E               	movf	updateRegisterBit@pin& (0+255),w,b
   646  00059E  EC46  F004         	call	_bitForPin
   647  0005A2  0100               	movlb	0	; () banked
   648  0005A4  6F6D               	movwf	updateRegisterBit@bitty& (0+255),b
   649                           
   650                           ; BSR set to: 0
   651                           ;main.c: 99: regValue = readRegister(regAddr);
   652  0005A6  516F               	movf	updateRegisterBit@regAddr& (0+255),w,b
   653  0005A8  EC3E  F002         	call	_readRegister
   654  0005AC  0100               	movlb	0	; () banked
   655  0005AE  6F70               	movwf	updateRegisterBit@regValue& (0+255),b
   656                           
   657                           ; BSR set to: 0
   658                           ;main.c: 101: regValue = bitWrite(regValue, bitty, pValue);
   659  0005B0  C06D  F03C         	movff	updateRegisterBit@bitty,bitWrite@n
   660  0005B4  6A3D               	clrf	bitWrite@n+1,c
   661  0005B6  C06A  F03E         	movff	updateRegisterBit@pValue,bitWrite@b
   662  0005BA  5170               	movf	updateRegisterBit@regValue& (0+255),w,b
   663  0005BC  ECE8  F002         	call	_bitWrite
   664  0005C0  0100               	movlb	0	; () banked
   665  0005C2  6F70               	movwf	updateRegisterBit@regValue& (0+255),b
   666                           
   667                           ;main.c: 103: writeRegister(regAddr, regValue);
   668  0005C4  C070  F045         	movff	updateRegisterBit@regValue,writeRegister@regValue
   669  0005C8  516F               	movf	updateRegisterBit@regAddr& (0+255),w,b
   670  0005CA  EC0D  F002         	call	_writeRegister
   671  0005CE  0012               	return		;funcret
   672  0005D0                     __end_of_updateRegisterBit:
   673                           	opt stack 0
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           status	equ	0xFD8
   677                           
   678 ;; *************** function _bitWrite *****************
   679 ;; Defined at:
   680 ;;		line 84 in file "main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  x               1    wreg     unsigned char 
   683 ;;  n               2   23[COMRAM] unsigned int 
   684 ;;  b               1   25[COMRAM] unsigned char 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  x               1   28[COMRAM] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      unsigned char 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   696 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   698 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   699 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   700 ;;Total ram usage:        6 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    3
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_updateRegisterBit
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text3
   711  0005D0                     __ptext3:
   712                           	opt stack 0
   713  0005D0                     _bitWrite:
   714                           	opt stack 25
   715                           
   716                           ;incstack = 0
   717                           ;bitWrite@x stored from wreg
   718  0005D0  6E41               	movwf	bitWrite@x,c
   719                           
   720                           ;main.c: 85: if (n <= 7 && n >= 0) {
   721  0005D2  503D               	movf	bitWrite@n+1,w,c
   722  0005D4  E121               	bnz	l1544
   723  0005D6  0E08               	movlw	8
   724  0005D8  5C3C               	subwf	bitWrite@n,w,c
   725  0005DA  B0D8               	btfsc	status,0,c
   726  0005DC  D01D               	goto	l317
   727                           
   728                           ;main.c: 86: if (b) {
   729  0005DE  503E               	movf	bitWrite@b,w,c
   730  0005E0  B4D8               	btfsc	status,2,c
   731  0005E2  D00D               	goto	l316
   732                           
   733                           ;main.c: 87: x |= (1u << n);
   734  0005E4  C03C  F03F         	movff	bitWrite@n,??_bitWrite
   735  0005E8  0E01               	movlw	1
   736  0005EA  6E40               	movwf	(??_bitWrite+1)& (0+255),c
   737  0005EC  2A3F               	incf	??_bitWrite,f,c
   738  0005EE  D002               	goto	u684
   739  0005F0                     u685:
   740  0005F0  90D8               	bcf	status,0,c
   741  0005F2  3640               	rlcf	??_bitWrite+1,f,c
   742  0005F4                     u684:
   743  0005F4  2E3F               	decfsz	??_bitWrite,f,c
   744  0005F6  D7FC               	goto	u685
   745  0005F8  5040               	movf	??_bitWrite+1,w,c
   746  0005FA  1241               	iorwf	bitWrite@x,f,c
   747                           
   748                           ;main.c: 88: } else {
   749  0005FC  D00D               	goto	l317
   750  0005FE                     l316:
   751                           
   752                           ;main.c: 89: x &= ~(1u << n);
   753  0005FE  C03C  F03F         	movff	bitWrite@n,??_bitWrite
   754  000602  0E01               	movlw	1
   755  000604  6E40               	movwf	(??_bitWrite+1)& (0+255),c
   756  000606  2A3F               	incf	??_bitWrite,f,c
   757  000608  D002               	goto	u694
   758  00060A                     u695:
   759  00060A  90D8               	bcf	status,0,c
   760  00060C  3640               	rlcf	??_bitWrite+1,f,c
   761  00060E                     u694:
   762  00060E  2E3F               	decfsz	??_bitWrite,f,c
   763  000610  D7FC               	goto	u695
   764  000612  5040               	movf	??_bitWrite+1,w,c
   765  000614  0AFF               	xorlw	255
   766  000616  1641               	andwf	bitWrite@x,f,c
   767  000618                     l317:
   768  000618                     l1544:
   769                           
   770                           ;main.c: 90: }
   771                           ;main.c: 91: }
   772                           ;main.c: 92: return x;
   773  000618  5041               	movf	bitWrite@x,w,c
   774  00061A  0012               	return	
   775  00061C                     __end_of_bitWrite:
   776                           	opt stack 0
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           status	equ	0xFD8
   780                           
   781 ;; *************** function _mcpBegin *****************
   782 ;; Defined at:
   783 ;;		line 64 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;  addr            1    wreg     unsigned char 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  addr            1    9[BANK0 ] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   800 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   801 ;;Total ram usage:        1 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    6
   804 ;; This function calls:
   805 ;;		_I2C1_Initialize
   806 ;;		_writeRegister
   807 ;; This function is called by:
   808 ;;		_main
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text4
   813  0007AA                     __ptext4:
   814                           	opt stack 0
   815  0007AA                     _mcpBegin:
   816                           	opt stack 24
   817                           
   818                           ;incstack = 0
   819                           ;mcpBegin@addr stored from wreg
   820  0007AA  0100               	movlb	0	; () banked
   821  0007AC  6F69               	movwf	mcpBegin@addr& (0+255),b
   822                           
   823                           ;main.c: 65: if (addr > 7) {
   824  0007AE  0E07               	movlw	7
   825  0007B0  0100               	movlb	0	; () banked
   826  0007B2  6569               	cpfsgt	mcpBegin@addr& (0+255),b
   827  0007B4  D002               	goto	l301
   828                           
   829                           ; BSR set to: 0
   830                           ;main.c: 66: addr = 7;
   831  0007B6  0E07               	movlw	7
   832  0007B8  6F69               	movwf	mcpBegin@addr& (0+255),b
   833  0007BA                     l301:
   834                           
   835                           ; BSR set to: 0
   836                           ;main.c: 67: }
   837                           ;main.c: 68: i2caddr = addr;
   838                           
   839                           ; BSR set to: 0
   840  0007BA  C069  F00E         	movff	mcpBegin@addr,_i2caddr
   841                           
   842                           ; BSR set to: 0
   843                           ;main.c: 70: I2C1_Initialize();
   844  0007BE  ECBB  F003         	call	_I2C1_Initialize	;wreg free
   845                           
   846                           ;main.c: 74: writeRegister(0x00,0xff);
   847  0007C2  0EFF               	movlw	255
   848  0007C4  6E45               	movwf	writeRegister@regValue,c
   849  0007C6  0E00               	movlw	0
   850  0007C8  EC0D  F002         	call	_writeRegister
   851                           
   852                           ;main.c: 75: writeRegister(0x01,0xff);
   853  0007CC  0EFF               	movlw	255
   854  0007CE  6E45               	movwf	writeRegister@regValue,c
   855  0007D0  0E01               	movlw	1
   856  0007D2  EC0D  F002         	call	_writeRegister
   857  0007D6  0012               	return		;funcret
   858  0007D8                     __end_of_mcpBegin:
   859                           	opt stack 0
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           status	equ	0xFD8
   863                           
   864 ;; *************** function _writeRegister *****************
   865 ;; Defined at:
   866 ;;		line 49 in file "main.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  regAddr         1    wreg     unsigned char 
   869 ;;  regValue        1   32[COMRAM] unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  regAddr         1    7[BANK0 ] unsigned char 
   872 ;;  data            1    8[BANK0 ] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   883 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   885 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   886 ;;Total ram usage:        5 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    5
   889 ;; This function calls:
   890 ;;		_I2C1_MasterWrite
   891 ;; This function is called by:
   892 ;;		_mcpBegin
   893 ;;		_updateRegisterBit
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text5
   898  00041A                     __ptext5:
   899                           	opt stack 0
   900  00041A                     _writeRegister:
   901                           	opt stack 23
   902                           
   903                           ;incstack = 0
   904                           ;writeRegister@regAddr stored from wreg
   905  00041A  0100               	movlb	0	; () banked
   906  00041C  6F67               	movwf	writeRegister@regAddr& (0+255),b
   907                           
   908                           ;main.c: 50: uint8_t data = regAddr;
   909  00041E  C067  F068         	movff	writeRegister@regAddr,writeRegister@data
   910                           
   911                           ;main.c: 51: I2C1_MasterWrite(&data, 1, 0x21 | i2caddr, &status);
   912  000422  0E68               	movlw	low writeRegister@data
   913  000424  0100               	movlb	0	; () banked
   914  000426  6F60               	movwf	I2C1_MasterWrite@pdata& (0+255),b
   915  000428  0E00               	movlw	high writeRegister@data
   916  00042A  6F61               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
   917  00042C  0E01               	movlw	1
   918  00042E  6F62               	movwf	I2C1_MasterWrite@length& (0+255),b
   919  000430  0E21               	movlw	33
   920  000432  C00E  F046         	movff	_i2caddr,??_writeRegister
   921  000436  6A47               	clrf	(??_writeRegister+1)& (0+255),c
   922  000438  1046               	iorwf	??_writeRegister,w,c
   923  00043A  6F63               	movwf	I2C1_MasterWrite@address& (0+255),b
   924  00043C  5047               	movf	??_writeRegister+1,w,c
   925  00043E  6F64               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
   926  000440  0E24               	movlw	low _status
   927  000442  6F65               	movwf	I2C1_MasterWrite@pflag& (0+255),b
   928  000444  0E00               	movlw	high _status
   929  000446  6F66               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
   930  000448  EC0E  F003         	call	_I2C1_MasterWrite	;wreg free
   931                           
   932                           ;main.c: 52: data = regValue;
   933  00044C  C045  F068         	movff	writeRegister@regValue,writeRegister@data
   934                           
   935                           ;main.c: 53: I2C1_MasterWrite(&data, 1, 0x21 | i2caddr, &status);
   936  000450  0E68               	movlw	low writeRegister@data
   937  000452  0100               	movlb	0	; () banked
   938  000454  6F60               	movwf	I2C1_MasterWrite@pdata& (0+255),b
   939  000456  0E00               	movlw	high writeRegister@data
   940  000458  6F61               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
   941  00045A  0E01               	movlw	1
   942  00045C  6F62               	movwf	I2C1_MasterWrite@length& (0+255),b
   943  00045E  0E21               	movlw	33
   944  000460  C00E  F046         	movff	_i2caddr,??_writeRegister
   945  000464  6A47               	clrf	(??_writeRegister+1)& (0+255),c
   946  000466  1046               	iorwf	??_writeRegister,w,c
   947  000468  6F63               	movwf	I2C1_MasterWrite@address& (0+255),b
   948  00046A  5047               	movf	??_writeRegister+1,w,c
   949  00046C  6F64               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
   950  00046E  0E24               	movlw	low _status
   951  000470  6F65               	movwf	I2C1_MasterWrite@pflag& (0+255),b
   952  000472  0E00               	movlw	high _status
   953  000474  6F66               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
   954  000476  EC0E  F003         	call	_I2C1_MasterWrite	;wreg free
   955  00047A  0012               	return		;funcret
   956  00047C                     __end_of_writeRegister:
   957                           	opt stack 0
   958                           postinc0	equ	0xFEE
   959                           wreg	equ	0xFE8
   960                           status	equ	0xFD8
   961                           
   962 ;; *************** function _digitalRead *****************
   963 ;; Defined at:
   964 ;;		line 110 in file "main.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  pin             1    wreg     unsigned char 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  pin             1   14[BANK0 ] unsigned char 
   969 ;;  regAddr         1   13[BANK0 ] unsigned char 
   970 ;;  bitty           1   12[BANK0 ] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      unsigned char 
   973 ;; Registers used:
   974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   981 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   982 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   983 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;Total ram usage:        5 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    6
   987 ;; This function calls:
   988 ;;		_bitForPin
   989 ;;		_readRegister
   990 ;;		_regForPin
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text6
   997  0006B0                     __ptext6:
   998                           	opt stack 0
   999  0006B0                     _digitalRead:
  1000                           	opt stack 24
  1001                           
  1002                           ;incstack = 0
  1003                           ;digitalRead@pin stored from wreg
  1004  0006B0  0100               	movlb	0	; () banked
  1005  0006B2  6F6E               	movwf	digitalRead@pin& (0+255),b
  1006                           
  1007                           ;main.c: 111: uint8_t bitty = bitForPin(pin);
  1008  0006B4  0100               	movlb	0	; () banked
  1009  0006B6  516E               	movf	digitalRead@pin& (0+255),w,b
  1010  0006B8  EC46  F004         	call	_bitForPin
  1011  0006BC  0100               	movlb	0	; () banked
  1012  0006BE  6F6C               	movwf	digitalRead@bitty& (0+255),b
  1013                           
  1014                           ;main.c: 112: uint8_t regAddr=regForPin(pin,0x12,0x13);
  1015  0006C0  0E12               	movlw	18
  1016  0006C2  6E3C               	movwf	regForPin@portAaddr,c
  1017  0006C4  0E13               	movlw	19
  1018  0006C6  6E3D               	movwf	regForPin@portBaddr,c
  1019  0006C8  516E               	movf	digitalRead@pin& (0+255),w,b
  1020  0006CA  EC0C  F004         	call	_regForPin
  1021  0006CE  0100               	movlb	0	; () banked
  1022  0006D0  6F6D               	movwf	digitalRead@regAddr& (0+255),b
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main.c: 113: return (readRegister(regAddr) >> bitty) & 0x1;
  1026  0006D2  C06C  F06A         	movff	digitalRead@bitty,??_digitalRead
  1027  0006D6  516D               	movf	digitalRead@regAddr& (0+255),w,b
  1028  0006D8  EC3E  F002         	call	_readRegister
  1029  0006DC  0100               	movlb	0	; () banked
  1030  0006DE  6F6B               	movwf	(??_digitalRead+1)& (0+255),b
  1031  0006E0  2B6A               	incf	??_digitalRead& (0+255),f,b
  1032  0006E2  D002               	goto	u894
  1033  0006E4                     u895:
  1034  0006E4  90D8               	bcf	status,0,c
  1035  0006E6  336B               	rrcf	(??_digitalRead+1)& (0+255),f,b
  1036  0006E8                     u894:
  1037  0006E8  2F6A               	decfsz	??_digitalRead& (0+255),f,b
  1038  0006EA  D7FC               	goto	u895
  1039  0006EC  0100               	movlb	0	; () banked
  1040  0006EE  516B               	movf	(??_digitalRead+1)& (0+255),w,b
  1041  0006F0  0B01               	andlw	1
  1042  0006F2  0012               	return	
  1043  0006F4                     __end_of_digitalRead:
  1044                           	opt stack 0
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           status	equ	0xFD8
  1048                           
  1049 ;; *************** function _regForPin *****************
  1050 ;; Defined at:
  1051 ;;		line 78 in file "main.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  pin             1    wreg     unsigned char 
  1054 ;;  portAaddr       1   23[COMRAM] unsigned char 
  1055 ;;  portBaddr       1   24[COMRAM] unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  pin             1   25[COMRAM] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      unsigned char 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1068 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1070 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1071 ;;Total ram usage:        5 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    3
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_updateRegisterBit
  1078 ;;		_digitalRead
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text7
  1083  000818                     __ptext7:
  1084                           	opt stack 0
  1085  000818                     _regForPin:
  1086                           	opt stack 25
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;incstack = 0
  1090                           ;regForPin@pin stored from wreg
  1091  000818  6E3E               	movwf	regForPin@pin,c
  1092                           
  1093                           ;main.c: 79: return(pin<8) ?portAaddr:portBaddr;
  1094  00081A  0E07               	movlw	7
  1095  00081C  643E               	cpfsgt	regForPin@pin,c
  1096  00081E  D003               	goto	l306
  1097  000820  C03D  F03F         	movff	regForPin@portBaddr,_regForPin$673
  1098  000824  D002               	goto	L1
  1099  000826                     l306:
  1100  000826  C03C  F03F         	movff	regForPin@portAaddr,_regForPin$673
  1101  00082A                     L1:
  1102  00082A  6A40               	clrf	_regForPin$673+1,c
  1103  00082C  503F               	movf	_regForPin$673,w,c
  1104  00082E  0012               	return	
  1105  000830                     __end_of_regForPin:
  1106                           	opt stack 0
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           status	equ	0xFD8
  1110                           
  1111 ;; *************** function _readRegister *****************
  1112 ;; Defined at:
  1113 ;;		line 56 in file "main.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  addr            1    wreg     unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  addr            1    7[BANK0 ] unsigned char 
  1118 ;;  result          1    9[BANK0 ] unsigned char 
  1119 ;;  data            1    8[BANK0 ] unsigned char 
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      unsigned char 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1132 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1133 ;;Total ram usage:        5 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    5
  1136 ;; This function calls:
  1137 ;;		_I2C1_MasterRead
  1138 ;;		_I2C1_MasterWrite
  1139 ;; This function is called by:
  1140 ;;		_updateRegisterBit
  1141 ;;		_digitalRead
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text8
  1146  00047C                     __ptext8:
  1147                           	opt stack 0
  1148  00047C                     _readRegister:
  1149                           	opt stack 23
  1150                           
  1151                           ;incstack = 0
  1152                           ;readRegister@addr stored from wreg
  1153  00047C  0100               	movlb	0	; () banked
  1154  00047E  6F67               	movwf	readRegister@addr& (0+255),b
  1155                           
  1156                           ;main.c: 57: uint8_t data=addr;
  1157  000480  C067  F068         	movff	readRegister@addr,readRegister@data
  1158                           
  1159                           ;main.c: 58: I2C1_MasterWrite(&data,1,0x21 | i2caddr, &status);
  1160  000484  0E68               	movlw	low readRegister@data
  1161  000486  0100               	movlb	0	; () banked
  1162  000488  6F60               	movwf	I2C1_MasterWrite@pdata& (0+255),b
  1163  00048A  0E00               	movlw	high readRegister@data
  1164  00048C  6F61               	movwf	(I2C1_MasterWrite@pdata+1)& (0+255),b
  1165  00048E  0E01               	movlw	1
  1166  000490  6F62               	movwf	I2C1_MasterWrite@length& (0+255),b
  1167  000492  0E21               	movlw	33
  1168  000494  C00E  F045         	movff	_i2caddr,??_readRegister
  1169  000498  6A46               	clrf	(??_readRegister+1)& (0+255),c
  1170  00049A  1045               	iorwf	??_readRegister,w,c
  1171  00049C  6F63               	movwf	I2C1_MasterWrite@address& (0+255),b
  1172  00049E  5046               	movf	??_readRegister+1,w,c
  1173  0004A0  6F64               	movwf	(I2C1_MasterWrite@address+1)& (0+255),b
  1174  0004A2  0E24               	movlw	low _status
  1175  0004A4  6F65               	movwf	I2C1_MasterWrite@pflag& (0+255),b
  1176  0004A6  0E00               	movlw	high _status
  1177  0004A8  6F66               	movwf	(I2C1_MasterWrite@pflag+1)& (0+255),b
  1178  0004AA  EC0E  F003         	call	_I2C1_MasterWrite	;wreg free
  1179                           
  1180                           ;main.c: 59: uint8_t result;
  1181                           ;main.c: 60: I2C1_MasterRead(&result, 1, 0x21 | i2caddr, &status);
  1182  0004AE  0E69               	movlw	low readRegister@result
  1183  0004B0  0100               	movlb	0	; () banked
  1184  0004B2  6F60               	movwf	I2C1_MasterRead@pdata& (0+255),b
  1185  0004B4  0E00               	movlw	high readRegister@result
  1186  0004B6  6F61               	movwf	(I2C1_MasterRead@pdata+1)& (0+255),b
  1187  0004B8  0E01               	movlw	1
  1188  0004BA  6F62               	movwf	I2C1_MasterRead@length& (0+255),b
  1189  0004BC  0E21               	movlw	33
  1190  0004BE  C00E  F045         	movff	_i2caddr,??_readRegister
  1191  0004C2  6A46               	clrf	(??_readRegister+1)& (0+255),c
  1192  0004C4  1045               	iorwf	??_readRegister,w,c
  1193  0004C6  6F63               	movwf	I2C1_MasterRead@address& (0+255),b
  1194  0004C8  5046               	movf	??_readRegister+1,w,c
  1195  0004CA  6F64               	movwf	(I2C1_MasterRead@address+1)& (0+255),b
  1196  0004CC  0E24               	movlw	low _status
  1197  0004CE  6F65               	movwf	I2C1_MasterRead@pflag& (0+255),b
  1198  0004D0  0E00               	movlw	high _status
  1199  0004D2  6F66               	movwf	(I2C1_MasterRead@pflag+1)& (0+255),b
  1200  0004D4  EC33  F003         	call	_I2C1_MasterRead	;wreg free
  1201                           
  1202                           ;main.c: 61: return result;
  1203  0004D8  0100               	movlb	0	; () banked
  1204  0004DA  5169               	movf	readRegister@result& (0+255),w,b
  1205  0004DC  0012               	return	
  1206  0004DE                     __end_of_readRegister:
  1207                           	opt stack 0
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _I2C1_MasterWrite *****************
  1213 ;; Defined at:
  1214 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
  1217 ;;		 -> readRegister@data(1), writeRegister@data(1), 
  1218 ;;  length          1    2[BANK0 ] unsigned char 
  1219 ;;  address         2    3[BANK0 ] unsigned int 
  1220 ;;  pflag           2    5[BANK0 ] PTR enum E11606
  1221 ;;		 -> status(1), 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1233 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1236 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1237 ;;Total ram usage:        7 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    4
  1240 ;; This function calls:
  1241 ;;		_I2C1_MasterTRBInsert
  1242 ;;		_I2C1_MasterWriteTRBBuild
  1243 ;; This function is called by:
  1244 ;;		_writeRegister
  1245 ;;		_readRegister
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text9
  1250  00061C                     __ptext9:
  1251                           	opt stack 0
  1252  00061C                     _I2C1_MasterWrite:
  1253                           	opt stack 23
  1254                           
  1255                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  1256                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;incstack = 0
  1260  00061C  B005               	btfsc	_i2c1_object+4,0,c
  1261  00061E  D01C               	goto	l217
  1262                           
  1263                           ;i2c1.c: 608: {
  1264                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  1265  000620  0E18               	movlw	low I2C1_MasterWrite@trBlock
  1266  000622  6E3C               	movwf	I2C1_MasterWriteTRBBuild@ptrb,c
  1267  000624  0E00               	movlw	high I2C1_MasterWrite@trBlock
  1268  000626  6E3D               	movwf	I2C1_MasterWriteTRBBuild@ptrb+1,c
  1269  000628  C060  F03E         	movff	I2C1_MasterWrite@pdata,I2C1_MasterWriteTRBBuild@pdata
  1270  00062C  C061  F03F         	movff	I2C1_MasterWrite@pdata+1,I2C1_MasterWriteTRBBuild@pdata+1
  1271  000630  C062  F040         	movff	I2C1_MasterWrite@length,I2C1_MasterWriteTRBBuild@length
  1272  000634  C063  F041         	movff	I2C1_MasterWrite@address,I2C1_MasterWriteTRBBuild@address
  1273  000638  C064  F042         	movff	I2C1_MasterWrite@address+1,I2C1_MasterWriteTRBBuild@address+1
  1274  00063C  EC7A  F003         	call	_I2C1_MasterWriteTRBBuild	;wreg free
  1275                           
  1276                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  1277  000640  0E18               	movlw	low I2C1_MasterWrite@trBlock
  1278  000642  6E3C               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
  1279  000644  0E00               	movlw	high I2C1_MasterWrite@trBlock
  1280  000646  6E3D               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
  1281  000648  C065  F03E         	movff	I2C1_MasterWrite@pflag,I2C1_MasterTRBInsert@pflag
  1282  00064C  C066  F03F         	movff	I2C1_MasterWrite@pflag+1,I2C1_MasterTRBInsert@pflag+1
  1283  000650  0E01               	movlw	1
  1284  000652  EC7F  F001         	call	_I2C1_MasterTRBInsert
  1285                           
  1286                           ;i2c1.c: 611: }
  1287  000656  0012               	return	
  1288  000658                     l217:
  1289                           
  1290                           ;i2c1.c: 612: else
  1291                           ;i2c1.c: 613: {
  1292                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  1293  000658  C065  FFD9         	movff	I2C1_MasterWrite@pflag,fsr2l
  1294  00065C  C066  FFDA         	movff	I2C1_MasterWrite@pflag+1,fsr2h
  1295  000660  0E01               	movlw	1
  1296  000662  6EDF               	movwf	indf2,c
  1297  000664  0012               	return	
  1298  000666                     __end_of_I2C1_MasterWrite:
  1299                           	opt stack 0
  1300                           postinc0	equ	0xFEE
  1301                           wreg	equ	0xFE8
  1302                           indf2	equ	0xFDF
  1303                           fsr2h	equ	0xFDA
  1304                           fsr2l	equ	0xFD9
  1305                           status	equ	0xFD8
  1306                           
  1307 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  1308 ;; Defined at:
  1309 ;;		line 707 in file "mcc_generated_files/i2c1.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;  ptrb            2   23[COMRAM] PTR struct .
  1312 ;;		 -> I2C1_MasterWrite@trBlock(5), 
  1313 ;;  pdata           2   25[COMRAM] PTR unsigned char 
  1314 ;;		 -> readRegister@data(1), writeRegister@data(1), 
  1315 ;;  length          1   27[COMRAM] unsigned char 
  1316 ;;  address         2   28[COMRAM] unsigned int 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1328 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;Total ram usage:        9 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    3
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_I2C1_MasterWrite
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text10
  1343  0006F4                     __ptext10:
  1344                           	opt stack 0
  1345  0006F4                     _I2C1_MasterWriteTRBBuild:
  1346                           	opt stack 23
  1347                           
  1348                           ;i2c1.c: 713: ptrb->address = address << 1;
  1349                           
  1350                           ;incstack = 0
  1351  0006F4  C041  F043         	movff	I2C1_MasterWriteTRBBuild@address,??_I2C1_MasterWriteTRBBuild
  1352  0006F8  C042  F044         	movff	I2C1_MasterWriteTRBBuild@address+1,??_I2C1_MasterWriteTRBBuild+1
  1353  0006FC  90D8               	bcf	status,0,c
  1354  0006FE  3643               	rlcf	??_I2C1_MasterWriteTRBBuild,f,c
  1355  000700  3644               	rlcf	??_I2C1_MasterWriteTRBBuild+1,f,c
  1356  000702  C03C  FFD9         	movff	I2C1_MasterWriteTRBBuild@ptrb,fsr2l
  1357  000706  C03D  FFDA         	movff	I2C1_MasterWriteTRBBuild@ptrb+1,fsr2h
  1358  00070A  C043  FFDE         	movff	??_I2C1_MasterWriteTRBBuild,postinc2
  1359  00070E  C044  FFDD         	movff	??_I2C1_MasterWriteTRBBuild+1,postdec2
  1360                           
  1361                           ;i2c1.c: 714: ptrb->length = length;
  1362  000712  EE20 F002          	lfsr	2,2
  1363  000716  503C               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  1364  000718  26D9               	addwf	fsr2l,f,c
  1365  00071A  503D               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  1366  00071C  22DA               	addwfc	fsr2h,f,c
  1367  00071E  C040  FFDF         	movff	I2C1_MasterWriteTRBBuild@length,indf2
  1368                           
  1369                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
  1370  000722  EE20 F003          	lfsr	2,3
  1371  000726  503C               	movf	I2C1_MasterWriteTRBBuild@ptrb,w,c
  1372  000728  26D9               	addwf	fsr2l,f,c
  1373  00072A  503D               	movf	I2C1_MasterWriteTRBBuild@ptrb+1,w,c
  1374  00072C  22DA               	addwfc	fsr2h,f,c
  1375  00072E  C03E  FFDE         	movff	I2C1_MasterWriteTRBBuild@pdata,postinc2
  1376  000732  C03F  FFDD         	movff	I2C1_MasterWriteTRBBuild@pdata+1,postdec2
  1377  000736  0012               	return		;funcret
  1378  000738                     __end_of_I2C1_MasterWriteTRBBuild:
  1379                           	opt stack 0
  1380                           postinc0	equ	0xFEE
  1381                           wreg	equ	0xFE8
  1382                           indf2	equ	0xFDF
  1383                           postinc2	equ	0xFDE
  1384                           postdec2	equ	0xFDD
  1385                           fsr2h	equ	0xFDA
  1386                           fsr2l	equ	0xFD9
  1387                           status	equ	0xFD8
  1388                           
  1389 ;; *************** function _I2C1_MasterRead *****************
  1390 ;; Defined at:
  1391 ;;		line 619 in file "mcc_generated_files/i2c1.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
  1394 ;;		 -> readRegister@result(1), 
  1395 ;;  length          1    2[BANK0 ] unsigned char 
  1396 ;;  address         2    3[BANK0 ] unsigned int 
  1397 ;;  pflag           2    5[BANK0 ] PTR enum E11606
  1398 ;;		 -> status(1), 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1410 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1413 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1414 ;;Total ram usage:        7 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    4
  1417 ;; This function calls:
  1418 ;;		_I2C1_MasterReadTRBBuild
  1419 ;;		_I2C1_MasterTRBInsert
  1420 ;; This function is called by:
  1421 ;;		_readRegister
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text11
  1426  000666                     __ptext11:
  1427                           	opt stack 0
  1428  000666                     _I2C1_MasterRead:
  1429                           	opt stack 23
  1430                           
  1431                           ;i2c1.c: 625: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  1432                           ;i2c1.c: 629: if (i2c1_object.trStatus.s.full != 1)
  1433                           
  1434                           ;incstack = 0
  1435  000666  B005               	btfsc	_i2c1_object+4,0,c
  1436  000668  D01C               	goto	l224
  1437                           
  1438                           ;i2c1.c: 630: {
  1439                           ;i2c1.c: 631: I2C1_MasterReadTRBBuild(&trBlock, pdata, length, address);
  1440  00066A  0E13               	movlw	low I2C1_MasterRead@trBlock
  1441  00066C  6E3C               	movwf	I2C1_MasterReadTRBBuild@ptrb,c
  1442  00066E  0E00               	movlw	high I2C1_MasterRead@trBlock
  1443  000670  6E3D               	movwf	I2C1_MasterReadTRBBuild@ptrb+1,c
  1444  000672  C060  F03E         	movff	I2C1_MasterRead@pdata,I2C1_MasterReadTRBBuild@pdata
  1445  000676  C061  F03F         	movff	I2C1_MasterRead@pdata+1,I2C1_MasterReadTRBBuild@pdata+1
  1446  00067A  C062  F040         	movff	I2C1_MasterRead@length,I2C1_MasterReadTRBBuild@length
  1447  00067E  C063  F041         	movff	I2C1_MasterRead@address,I2C1_MasterReadTRBBuild@address
  1448  000682  C064  F042         	movff	I2C1_MasterRead@address+1,I2C1_MasterReadTRBBuild@address+1
  1449  000686  EC9A  F002         	call	_I2C1_MasterReadTRBBuild	;wreg free
  1450                           
  1451                           ;i2c1.c: 632: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  1452  00068A  0E13               	movlw	low I2C1_MasterRead@trBlock
  1453  00068C  6E3C               	movwf	I2C1_MasterTRBInsert@ptrb_list,c
  1454  00068E  0E00               	movlw	high I2C1_MasterRead@trBlock
  1455  000690  6E3D               	movwf	I2C1_MasterTRBInsert@ptrb_list+1,c
  1456  000692  C065  F03E         	movff	I2C1_MasterRead@pflag,I2C1_MasterTRBInsert@pflag
  1457  000696  C066  F03F         	movff	I2C1_MasterRead@pflag+1,I2C1_MasterTRBInsert@pflag+1
  1458  00069A  0E01               	movlw	1
  1459  00069C  EC7F  F001         	call	_I2C1_MasterTRBInsert
  1460                           
  1461                           ;i2c1.c: 633: }
  1462  0006A0  0012               	return	
  1463  0006A2                     l224:
  1464                           
  1465                           ;i2c1.c: 634: else
  1466                           ;i2c1.c: 635: {
  1467                           ;i2c1.c: 636: *pflag = I2C1_MESSAGE_FAIL;
  1468  0006A2  C065  FFD9         	movff	I2C1_MasterRead@pflag,fsr2l
  1469  0006A6  C066  FFDA         	movff	I2C1_MasterRead@pflag+1,fsr2h
  1470  0006AA  0E01               	movlw	1
  1471  0006AC  6EDF               	movwf	indf2,c
  1472  0006AE  0012               	return	
  1473  0006B0                     __end_of_I2C1_MasterRead:
  1474                           	opt stack 0
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           indf2	equ	0xFDF
  1478                           postinc2	equ	0xFDE
  1479                           postdec2	equ	0xFDD
  1480                           fsr2h	equ	0xFDA
  1481                           fsr2l	equ	0xFD9
  1482                           status	equ	0xFD8
  1483                           
  1484 ;; *************** function _I2C1_MasterTRBInsert *****************
  1485 ;; Defined at:
  1486 ;;		line 641 in file "mcc_generated_files/i2c1.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  count           1    wreg     unsigned char 
  1489 ;;  ptrb_list       2   23[COMRAM] PTR struct .
  1490 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
  1491 ;;  pflag           2   25[COMRAM] PTR enum E11606
  1492 ;;		 -> status(1), 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  count           1   28[COMRAM] unsigned char 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1507 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1508 ;;Total ram usage:        6 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    3
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_I2C1_MasterWrite
  1515 ;;		_I2C1_MasterRead
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text12
  1520  0002FE                     __ptext12:
  1521                           	opt stack 0
  1522  0002FE                     _I2C1_MasterTRBInsert:
  1523                           	opt stack 23
  1524                           
  1525                           ;incstack = 0
  1526                           ;I2C1_MasterTRBInsert@count stored from wreg
  1527  0002FE  6E41               	movwf	I2C1_MasterTRBInsert@count,c
  1528                           
  1529                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
  1530  000300  B005               	btfsc	_i2c1_object+4,0,c
  1531  000302  D039               	goto	l229
  1532                           
  1533                           ;i2c1.c: 649: {
  1534                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
  1535  000304  C03E  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  1536  000308  C03F  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  1537  00030C  0E02               	movlw	2
  1538  00030E  6EDF               	movwf	indf2,c
  1539                           
  1540                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  1541  000310  EE20 F001          	lfsr	2,1
  1542  000314  5001               	movf	_i2c1_object,w,c
  1543  000316  26D9               	addwf	fsr2l,f,c
  1544  000318  5002               	movf	_i2c1_object+1,w,c
  1545  00031A  22DA               	addwfc	fsr2h,f,c
  1546  00031C  C03C  FFDE         	movff	I2C1_MasterTRBInsert@ptrb_list,postinc2
  1547  000320  C03D  FFDD         	movff	I2C1_MasterTRBInsert@ptrb_list+1,postdec2
  1548                           
  1549                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
  1550  000324  C001  FFD9         	movff	_i2c1_object,fsr2l
  1551  000328  C002  FFDA         	movff	_i2c1_object+1,fsr2h
  1552  00032C  C041  FFDF         	movff	I2C1_MasterTRBInsert@count,indf2
  1553                           
  1554                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
  1555  000330  EE20 F003          	lfsr	2,3
  1556  000334  5001               	movf	_i2c1_object,w,c
  1557  000336  26D9               	addwf	fsr2l,f,c
  1558  000338  5002               	movf	_i2c1_object+1,w,c
  1559  00033A  22DA               	addwfc	fsr2h,f,c
  1560  00033C  C03E  FFDE         	movff	I2C1_MasterTRBInsert@pflag,postinc2
  1561  000340  C03F  FFDD         	movff	I2C1_MasterTRBInsert@pflag+1,postdec2
  1562                           
  1563                           ;i2c1.c: 655: i2c1_object.pTrTail++;
  1564  000344  0E05               	movlw	5
  1565  000346  2601               	addwf	_i2c1_object,f,c
  1566  000348  0E00               	movlw	0
  1567  00034A  2202               	addwfc	_i2c1_object+1,f,c
  1568                           
  1569                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  1570  00034C  0E22               	movlw	low (_i2c1_tr_queue+5)
  1571  00034E  1801               	xorwf	_i2c1_object,w,c
  1572  000350  E108               	bnz	l1474
  1573  000352  0E00               	movlw	high (_i2c1_tr_queue+5)
  1574  000354  1802               	xorwf	_i2c1_object+1,w,c
  1575  000356  A4D8               	btfss	status,2,c
  1576  000358  D004               	goto	l230
  1577                           
  1578                           ;i2c1.c: 659: {
  1579                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
  1580  00035A  0E1D               	movlw	low _i2c1_tr_queue
  1581  00035C  6E01               	movwf	_i2c1_object,c
  1582  00035E  0E00               	movlw	high _i2c1_tr_queue
  1583  000360  6E02               	movwf	_i2c1_object+1,c
  1584  000362                     l230:
  1585  000362                     l1474:
  1586                           
  1587                           ;i2c1.c: 662: }
  1588                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
  1589  000362  9205               	bcf	_i2c1_object+4,1,c
  1590                           
  1591                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  1592  000364  5001               	movf	_i2c1_object,w,c
  1593  000366  1803               	xorwf	_i2c1_object+2,w,c
  1594  000368  E10C               	bnz	l1480
  1595  00036A  5002               	movf	_i2c1_object+1,w,c
  1596  00036C  1804               	xorwf	_i2c1_object+3,w,c
  1597  00036E  A4D8               	btfss	status,2,c
  1598  000370  D008               	goto	l232
  1599                           
  1600                           ;i2c1.c: 670: {
  1601                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
  1602  000372  8005               	bsf	_i2c1_object+4,0,c
  1603                           
  1604                           ;i2c1.c: 673: }
  1605                           ;i2c1.c: 675: }
  1606  000374  D006               	goto	l232
  1607  000376                     l229:
  1608                           
  1609                           ;i2c1.c: 676: else
  1610                           ;i2c1.c: 677: {
  1611                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
  1612  000376  C03E  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  1613  00037A  C03F  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  1614  00037E  0E01               	movlw	1
  1615  000380  6EDF               	movwf	indf2,c
  1616  000382                     l232:
  1617  000382                     l1480:
  1618                           
  1619                           ;i2c1.c: 679: }
  1620                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
  1621  000382  C03E  FFD9         	movff	I2C1_MasterTRBInsert@pflag,fsr2l
  1622  000386  C03F  FFDA         	movff	I2C1_MasterTRBInsert@pflag+1,fsr2h
  1623  00038A  0E02               	movlw	2
  1624  00038C  18DE               	xorwf	postinc2,w,c
  1625  00038E  A4D8               	btfss	status,2,c
  1626  000390  0012               	return	
  1627  000392  D002               	goto	l234
  1628  000394                     l235:
  1629                           
  1630                           ;i2c1.c: 685: {
  1631                           ;i2c1.c: 688: PIR3bits.SSP1IF = 1;
  1632  000394  010E               	movlb	14	; () banked
  1633  000396  81CD               	bsf	205,0,b	;volatile
  1634  000398                     l234:
  1635                           
  1636                           ; BSR set to: 14
  1637  000398  5012               	movf	_i2c1_state,w,c
  1638  00039A  B4D8               	btfsc	status,2,c
  1639  00039C  0012               	return	
  1640  00039E  D7FA               	goto	l235
  1641  0003A0                     __end_of_I2C1_MasterTRBInsert:
  1642                           	opt stack 0
  1643                           postinc0	equ	0xFEE
  1644                           wreg	equ	0xFE8
  1645                           indf2	equ	0xFDF
  1646                           postinc2	equ	0xFDE
  1647                           postdec2	equ	0xFDD
  1648                           fsr2h	equ	0xFDA
  1649                           fsr2l	equ	0xFD9
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _I2C1_MasterReadTRBBuild *****************
  1653 ;; Defined at:
  1654 ;;		line 694 in file "mcc_generated_files/i2c1.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  ptrb            2   23[COMRAM] PTR struct .
  1657 ;;		 -> I2C1_MasterRead@trBlock(5), 
  1658 ;;  pdata           2   25[COMRAM] PTR unsigned char 
  1659 ;;		 -> readRegister@result(1), 
  1660 ;;  length          1   27[COMRAM] unsigned char 
  1661 ;;  address         2   28[COMRAM] unsigned int 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1673 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;Total ram usage:        9 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    3
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_I2C1_MasterRead
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text13
  1688  000534                     __ptext13:
  1689                           	opt stack 0
  1690  000534                     _I2C1_MasterReadTRBBuild:
  1691                           	opt stack 23
  1692                           
  1693                           ;i2c1.c: 700: ptrb->address = address << 1;
  1694                           
  1695                           ;incstack = 0
  1696  000534  C041  F043         	movff	I2C1_MasterReadTRBBuild@address,??_I2C1_MasterReadTRBBuild
  1697  000538  C042  F044         	movff	I2C1_MasterReadTRBBuild@address+1,??_I2C1_MasterReadTRBBuild+1
  1698  00053C  90D8               	bcf	status,0,c
  1699  00053E  3643               	rlcf	??_I2C1_MasterReadTRBBuild,f,c
  1700  000540  3644               	rlcf	??_I2C1_MasterReadTRBBuild+1,f,c
  1701  000542  C03C  FFD9         	movff	I2C1_MasterReadTRBBuild@ptrb,fsr2l
  1702  000546  C03D  FFDA         	movff	I2C1_MasterReadTRBBuild@ptrb+1,fsr2h
  1703  00054A  C043  FFDE         	movff	??_I2C1_MasterReadTRBBuild,postinc2
  1704  00054E  C044  FFDD         	movff	??_I2C1_MasterReadTRBBuild+1,postdec2
  1705                           
  1706                           ;i2c1.c: 702: ptrb->address |= 0x01;
  1707  000552  C03C  FFD9         	movff	I2C1_MasterReadTRBBuild@ptrb,fsr2l
  1708  000556  C03D  FFDA         	movff	I2C1_MasterReadTRBBuild@ptrb+1,fsr2h
  1709  00055A  0E00               	movlw	0
  1710  00055C  80DB               	bsf	plusw2,0,c
  1711                           
  1712                           ;i2c1.c: 703: ptrb->length = length;
  1713  00055E  EE20 F002          	lfsr	2,2
  1714  000562  503C               	movf	I2C1_MasterReadTRBBuild@ptrb,w,c
  1715  000564  26D9               	addwf	fsr2l,f,c
  1716  000566  503D               	movf	I2C1_MasterReadTRBBuild@ptrb+1,w,c
  1717  000568  22DA               	addwfc	fsr2h,f,c
  1718  00056A  C040  FFDF         	movff	I2C1_MasterReadTRBBuild@length,indf2
  1719                           
  1720                           ;i2c1.c: 704: ptrb->pbuffer = pdata;
  1721  00056E  EE20 F003          	lfsr	2,3
  1722  000572  503C               	movf	I2C1_MasterReadTRBBuild@ptrb,w,c
  1723  000574  26D9               	addwf	fsr2l,f,c
  1724  000576  503D               	movf	I2C1_MasterReadTRBBuild@ptrb+1,w,c
  1725  000578  22DA               	addwfc	fsr2h,f,c
  1726  00057A  C03E  FFDE         	movff	I2C1_MasterReadTRBBuild@pdata,postinc2
  1727  00057E  C03F  FFDD         	movff	I2C1_MasterReadTRBBuild@pdata+1,postdec2
  1728  000582  0012               	return		;funcret
  1729  000584                     __end_of_I2C1_MasterReadTRBBuild:
  1730                           	opt stack 0
  1731                           postinc0	equ	0xFEE
  1732                           wreg	equ	0xFE8
  1733                           indf2	equ	0xFDF
  1734                           postinc2	equ	0xFDE
  1735                           postdec2	equ	0xFDD
  1736                           plusw2	equ	0xFDB
  1737                           fsr2h	equ	0xFDA
  1738                           fsr2l	equ	0xFD9
  1739                           status	equ	0xFD8
  1740                           
  1741 ;; *************** function _bitForPin *****************
  1742 ;; Defined at:
  1743 ;;		line 81 in file "main.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  pin             1    wreg     unsigned char 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;  pin             1   23[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      unsigned char 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1761 ;;Total ram usage:        1 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    3
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_updateRegisterBit
  1768 ;;		_digitalRead
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text14
  1773  00088C                     __ptext14:
  1774                           	opt stack 0
  1775  00088C                     _bitForPin:
  1776                           	opt stack 25
  1777                           
  1778                           ;incstack = 0
  1779                           ;bitForPin@pin stored from wreg
  1780  00088C  6E3C               	movwf	bitForPin@pin,c
  1781                           
  1782                           ;main.c: 82: return pin%8;
  1783  00088E  503C               	movf	bitForPin@pin,w,c
  1784  000890  0B07               	andlw	7
  1785  000892  0012               	return	
  1786  000894                     __end_of_bitForPin:
  1787                           	opt stack 0
  1788                           postinc0	equ	0xFEE
  1789                           wreg	equ	0xFE8
  1790                           indf2	equ	0xFDF
  1791                           postinc2	equ	0xFDE
  1792                           postdec2	equ	0xFDD
  1793                           plusw2	equ	0xFDB
  1794                           fsr2h	equ	0xFDA
  1795                           fsr2l	equ	0xFD9
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _SYSTEM_Initialize *****************
  1799 ;; Defined at:
  1800 ;;		line 116 in file "mcc_generated_files/mcc.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    4
  1821 ;; This function calls:
  1822 ;;		_I2C1_Initialize
  1823 ;;		_INTERRUPT_Initialize
  1824 ;;		_OSCILLATOR_Initialize
  1825 ;;		_PIN_MANAGER_Initialize
  1826 ;;		_PMD_Initialize
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text15
  1833  000876                     __ptext15:
  1834                           	opt stack 0
  1835  000876                     _SYSTEM_Initialize:
  1836                           	opt stack 26
  1837                           
  1838                           ;mcc.c: 118: INTERRUPT_Initialize();
  1839                           
  1840                           ;incstack = 0
  1841  000876  EC4D  F004         	call	_INTERRUPT_Initialize	;wreg free
  1842                           
  1843                           ;mcc.c: 119: PMD_Initialize();
  1844  00087A  ECFE  F003         	call	_PMD_Initialize	;wreg free
  1845                           
  1846                           ;mcc.c: 120: PIN_MANAGER_Initialize();
  1847  00087E  ECD0  F001         	call	_PIN_MANAGER_Initialize	;wreg free
  1848                           
  1849                           ;mcc.c: 121: OSCILLATOR_Initialize();
  1850  000882  EC18  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1851                           
  1852                           ;mcc.c: 122: I2C1_Initialize();
  1853  000886  ECBB  F003         	call	_I2C1_Initialize	;wreg free
  1854  00088A  0012               	return		;funcret
  1855  00088C                     __end_of_SYSTEM_Initialize:
  1856                           	opt stack 0
  1857                           postinc0	equ	0xFEE
  1858                           wreg	equ	0xFE8
  1859                           indf2	equ	0xFDF
  1860                           postinc2	equ	0xFDE
  1861                           postdec2	equ	0xFDD
  1862                           plusw2	equ	0xFDB
  1863                           fsr2h	equ	0xFDA
  1864                           fsr2l	equ	0xFD9
  1865                           status	equ	0xFD8
  1866                           
  1867 ;; *************** function _PMD_Initialize *****************
  1868 ;; Defined at:
  1869 ;;		line 139 in file "mcc_generated_files/mcc.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    3
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_SYSTEM_Initialize
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text16
  1898  0007FC                     __ptext16:
  1899                           	opt stack 0
  1900  0007FC                     _PMD_Initialize:
  1901                           	opt stack 26
  1902                           
  1903                           ;mcc.c: 142: PMD0 = 0x00;
  1904                           
  1905                           ;incstack = 0
  1906  0007FC  0E00               	movlw	0
  1907  0007FE  010E               	movlb	14	; () banked
  1908  000800  6FE1               	movwf	225,b	;volatile
  1909                           
  1910                           ;mcc.c: 144: PMD1 = 0x00;
  1911  000802  0E00               	movlw	0
  1912  000804  6FE2               	movwf	226,b	;volatile
  1913                           
  1914                           ;mcc.c: 146: PMD2 = 0x00;
  1915  000806  0E00               	movlw	0
  1916  000808  6FE3               	movwf	227,b	;volatile
  1917                           
  1918                           ;mcc.c: 148: PMD3 = 0x00;
  1919  00080A  0E00               	movlw	0
  1920  00080C  6FE4               	movwf	228,b	;volatile
  1921                           
  1922                           ;mcc.c: 150: PMD4 = 0x00;
  1923  00080E  0E00               	movlw	0
  1924  000810  6FE5               	movwf	229,b	;volatile
  1925                           
  1926                           ;mcc.c: 152: PMD5 = 0x00;
  1927  000812  0E00               	movlw	0
  1928  000814  6FE6               	movwf	230,b	;volatile
  1929                           
  1930                           ; BSR set to: 14
  1931  000816  0012               	return		;funcret
  1932  000818                     __end_of_PMD_Initialize:
  1933                           	opt stack 0
  1934                           postinc0	equ	0xFEE
  1935                           wreg	equ	0xFE8
  1936                           indf2	equ	0xFDF
  1937                           postinc2	equ	0xFDE
  1938                           postdec2	equ	0xFDD
  1939                           plusw2	equ	0xFDB
  1940                           fsr2h	equ	0xFDA
  1941                           fsr2l	equ	0xFD9
  1942                           status	equ	0xFD8
  1943                           
  1944 ;; *************** function _PIN_MANAGER_Initialize *****************
  1945 ;; Defined at:
  1946 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    3
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_SYSTEM_Initialize
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text17
  1975  0003A0                     __ptext17:
  1976                           	opt stack 0
  1977  0003A0                     _PIN_MANAGER_Initialize:
  1978                           	opt stack 26
  1979                           
  1980                           ;pin_manager.c: 57: LATE = 0x00;
  1981                           
  1982                           ; BSR set to: 14
  1983                           ;incstack = 0
  1984  0003A0  0E00               	movlw	0
  1985  0003A2  6E87               	movwf	3975,c	;volatile
  1986                           
  1987                           ;pin_manager.c: 58: LATD = 0x00;
  1988  0003A4  0E00               	movlw	0
  1989  0003A6  6E86               	movwf	3974,c	;volatile
  1990                           
  1991                           ;pin_manager.c: 59: LATA = 0x00;
  1992  0003A8  0E00               	movlw	0
  1993  0003AA  6E83               	movwf	3971,c	;volatile
  1994                           
  1995                           ;pin_manager.c: 60: LATB = 0x00;
  1996  0003AC  0E00               	movlw	0
  1997  0003AE  6E84               	movwf	3972,c	;volatile
  1998                           
  1999                           ;pin_manager.c: 61: LATC = 0x40;
  2000  0003B0  0E40               	movlw	64
  2001  0003B2  6E85               	movwf	3973,c	;volatile
  2002                           
  2003                           ;pin_manager.c: 66: TRISE = 0x07;
  2004  0003B4  0E07               	movlw	7
  2005  0003B6  6E8C               	movwf	3980,c	;volatile
  2006                           
  2007                           ;pin_manager.c: 67: TRISA = 0xFF;
  2008  0003B8  6888               	setf	3976,c	;volatile
  2009                           
  2010                           ;pin_manager.c: 68: TRISB = 0xFF;
  2011  0003BA  6889               	setf	3977,c	;volatile
  2012                           
  2013                           ;pin_manager.c: 69: TRISC = 0xBF;
  2014  0003BC  0EBF               	movlw	191
  2015  0003BE  6E8A               	movwf	3978,c	;volatile
  2016                           
  2017                           ;pin_manager.c: 70: TRISD = 0xFF;
  2018  0003C0  688B               	setf	3979,c	;volatile
  2019                           
  2020                           ;pin_manager.c: 75: ANSELC = 0x87;
  2021  0003C2  0E87               	movlw	135
  2022  0003C4  010F               	movlb	15	; () banked
  2023  0003C6  6F21               	movwf	33,b	;volatile
  2024                           
  2025                           ; BSR set to: 15
  2026                           ;pin_manager.c: 76: ANSELB = 0xFF;
  2027  0003C8  6919               	setf	25,b	;volatile
  2028                           
  2029                           ; BSR set to: 15
  2030                           ;pin_manager.c: 77: ANSELD = 0xFF;
  2031  0003CA  6926               	setf	38,b	;volatile
  2032                           
  2033                           ;pin_manager.c: 78: ANSELE = 0x07;
  2034  0003CC  0E07               	movlw	7
  2035  0003CE  6F2E               	movwf	46,b	;volatile
  2036                           
  2037                           ; BSR set to: 15
  2038                           ;pin_manager.c: 79: ANSELA = 0xFF;
  2039  0003D0  6911               	setf	17,b	;volatile
  2040                           
  2041                           ;pin_manager.c: 84: WPUD = 0x00;
  2042  0003D2  0E00               	movlw	0
  2043  0003D4  6F25               	movwf	37,b	;volatile
  2044                           
  2045                           ;pin_manager.c: 85: WPUE = 0x00;
  2046  0003D6  0E00               	movlw	0
  2047  0003D8  6F2D               	movwf	45,b	;volatile
  2048                           
  2049                           ;pin_manager.c: 86: WPUB = 0x00;
  2050  0003DA  0E00               	movlw	0
  2051  0003DC  6F18               	movwf	24,b	;volatile
  2052                           
  2053                           ;pin_manager.c: 87: WPUA = 0x00;
  2054  0003DE  0E00               	movlw	0
  2055  0003E0  6F10               	movwf	16,b	;volatile
  2056                           
  2057                           ;pin_manager.c: 88: WPUC = 0x00;
  2058  0003E2  0E00               	movlw	0
  2059  0003E4  6F20               	movwf	32,b	;volatile
  2060                           
  2061                           ;pin_manager.c: 93: ODCONE = 0x00;
  2062  0003E6  0E00               	movlw	0
  2063  0003E8  6F2C               	movwf	44,b	;volatile
  2064                           
  2065                           ;pin_manager.c: 94: ODCONA = 0x00;
  2066  0003EA  0E00               	movlw	0
  2067  0003EC  6F0F               	movwf	15,b	;volatile
  2068                           
  2069                           ;pin_manager.c: 95: ODCONB = 0x00;
  2070  0003EE  0E00               	movlw	0
  2071  0003F0  6F17               	movwf	23,b	;volatile
  2072                           
  2073                           ;pin_manager.c: 96: ODCONC = 0x00;
  2074  0003F2  0E00               	movlw	0
  2075  0003F4  6F1F               	movwf	31,b	;volatile
  2076                           
  2077                           ;pin_manager.c: 97: ODCOND = 0x00;
  2078  0003F6  0E00               	movlw	0
  2079  0003F8  6F24               	movwf	36,b	;volatile
  2080                           
  2081                           ; BSR set to: 15
  2082                           ;pin_manager.c: 104: SSP1CLKPPSbits.SSPCLKPPS = 0x13;
  2083  0003FA  010E               	movlb	14	; () banked
  2084  0003FC  81B7               	bsf	183,0,b	;volatile
  2085  0003FE  83B7               	bsf	183,1,b	;volatile
  2086  000400  95B7               	bcf	183,2,b	;volatile
  2087  000402  97B7               	bcf	183,3,b	;volatile
  2088  000404  89B7               	bsf	183,4,b	;volatile
  2089                           
  2090                           ;pin_manager.c: 105: RC3PPS = 0x0F;
  2091  000406  0E0F               	movlw	15
  2092  000408  6FFA               	movwf	250,b	;volatile
  2093                           
  2094                           ;pin_manager.c: 106: RC4PPS = 0x10;
  2095  00040A  0E10               	movlw	16
  2096  00040C  6FFB               	movwf	251,b	;volatile
  2097                           
  2098                           ; BSR set to: 14
  2099                           ;pin_manager.c: 107: SSP1DATPPSbits.SSPDATPPS = 0x14;
  2100  00040E  91B8               	bcf	184,0,b	;volatile
  2101  000410  93B8               	bcf	184,1,b	;volatile
  2102  000412  85B8               	bsf	184,2,b	;volatile
  2103  000414  97B8               	bcf	184,3,b	;volatile
  2104  000416  89B8               	bsf	184,4,b	;volatile
  2105                           
  2106                           ; BSR set to: 14
  2107  000418  0012               	return		;funcret
  2108  00041A                     __end_of_PIN_MANAGER_Initialize:
  2109                           	opt stack 0
  2110                           postinc0	equ	0xFEE
  2111                           wreg	equ	0xFE8
  2112                           indf2	equ	0xFDF
  2113                           postinc2	equ	0xFDE
  2114                           postdec2	equ	0xFDD
  2115                           plusw2	equ	0xFDB
  2116                           fsr2h	equ	0xFDA
  2117                           fsr2l	equ	0xFD9
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function _OSCILLATOR_Initialize *****************
  2121 ;; Defined at:
  2122 ;;		line 125 in file "mcc_generated_files/mcc.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    3
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_SYSTEM_Initialize
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text18
  2151  000830                     __ptext18:
  2152                           	opt stack 0
  2153  000830                     _OSCILLATOR_Initialize:
  2154                           	opt stack 26
  2155                           
  2156                           ;mcc.c: 128: OSCCON1 = 0x62;
  2157                           
  2158                           ; BSR set to: 14
  2159                           ;incstack = 0
  2160  000830  0E62               	movlw	98
  2161  000832  010E               	movlb	14	; () banked
  2162  000834  6FD8               	movwf	216,b	;volatile
  2163                           
  2164                           ;mcc.c: 130: OSCCON3 = 0x00;
  2165  000836  0E00               	movlw	0
  2166  000838  6FDA               	movwf	218,b	;volatile
  2167                           
  2168                           ;mcc.c: 132: OSCEN = 0x00;
  2169  00083A  0E00               	movlw	0
  2170  00083C  6FDC               	movwf	220,b	;volatile
  2171                           
  2172                           ;mcc.c: 134: OSCFRQ = 0x05;
  2173  00083E  0E05               	movlw	5
  2174  000840  6FDE               	movwf	222,b	;volatile
  2175                           
  2176                           ;mcc.c: 136: OSCTUNE = 0x20;
  2177  000842  0E20               	movlw	32
  2178  000844  6FDD               	movwf	221,b	;volatile
  2179                           
  2180                           ; BSR set to: 14
  2181  000846  0012               	return		;funcret
  2182  000848                     __end_of_OSCILLATOR_Initialize:
  2183                           	opt stack 0
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           indf2	equ	0xFDF
  2187                           postinc2	equ	0xFDE
  2188                           postdec2	equ	0xFDD
  2189                           plusw2	equ	0xFDB
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function _INTERRUPT_Initialize *****************
  2195 ;; Defined at:
  2196 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		None
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    3
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_SYSTEM_Initialize
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text19
  2225  00089A                     __ptext19:
  2226                           	opt stack 0
  2227  00089A                     _INTERRUPT_Initialize:
  2228                           	opt stack 26
  2229                           
  2230                           ;interrupt_manager.c: 54: INTCONbits.IPEN = 0;
  2231                           
  2232                           ; BSR set to: 14
  2233                           ;incstack = 0
  2234  00089A  9AF2               	bcf	intcon,5,c	;volatile
  2235  00089C  0012               	return		;funcret
  2236  00089E                     __end_of_INTERRUPT_Initialize:
  2237                           	opt stack 0
  2238                           intcon	equ	0xFF2
  2239                           postinc0	equ	0xFEE
  2240                           wreg	equ	0xFE8
  2241                           indf2	equ	0xFDF
  2242                           postinc2	equ	0xFDE
  2243                           postdec2	equ	0xFDD
  2244                           plusw2	equ	0xFDB
  2245                           fsr2h	equ	0xFDA
  2246                           fsr2l	equ	0xFD9
  2247                           status	equ	0xFD8
  2248                           
  2249 ;; *************** function _I2C1_Initialize *****************
  2250 ;; Defined at:
  2251 ;;		line 196 in file "mcc_generated_files/i2c1.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    3
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_SYSTEM_Initialize
  2276 ;;		_mcpBegin
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text20
  2281  000776                     __ptext20:
  2282                           	opt stack 0
  2283  000776                     _I2C1_Initialize:
  2284                           	opt stack 26
  2285                           
  2286                           ;i2c1.c: 198: i2c1_object.pTrHead = i2c1_tr_queue;
  2287                           
  2288                           ;incstack = 0
  2289  000776  0E1D               	movlw	low _i2c1_tr_queue
  2290  000778  6E03               	movwf	_i2c1_object+2,c
  2291  00077A  0E00               	movlw	high _i2c1_tr_queue
  2292  00077C  6E04               	movwf	_i2c1_object+3,c
  2293                           
  2294                           ;i2c1.c: 199: i2c1_object.pTrTail = i2c1_tr_queue;
  2295  00077E  0E1D               	movlw	low _i2c1_tr_queue
  2296  000780  6E01               	movwf	_i2c1_object,c
  2297  000782  0E00               	movlw	high _i2c1_tr_queue
  2298  000784  6E02               	movwf	_i2c1_object+1,c
  2299                           
  2300                           ;i2c1.c: 200: i2c1_object.trStatus.s.empty = 1;
  2301  000786  8205               	bsf	_i2c1_object+4,1,c
  2302                           
  2303                           ;i2c1.c: 201: i2c1_object.trStatus.s.full = 0;
  2304  000788  9005               	bcf	_i2c1_object+4,0,c
  2305                           
  2306                           ;i2c1.c: 203: i2c1_object.i2cErrors = 0;
  2307  00078A  0E00               	movlw	0
  2308  00078C  6E07               	movwf	_i2c1_object+6,c
  2309                           
  2310                           ;i2c1.c: 206: SSP1STAT = 0x00;
  2311  00078E  0E00               	movlw	0
  2312  000790  6E95               	movwf	3989,c	;volatile
  2313                           
  2314                           ;i2c1.c: 208: SSP1CON1 = 0x28;
  2315  000792  0E28               	movlw	40
  2316  000794  6E96               	movwf	3990,c	;volatile
  2317                           
  2318                           ;i2c1.c: 210: SSP1CON3 = 0x00;
  2319  000796  0E00               	movlw	0
  2320  000798  6E98               	movwf	3992,c	;volatile
  2321                           
  2322                           ;i2c1.c: 212: SSP1ADD = 0x03;
  2323  00079A  0E03               	movlw	3
  2324  00079C  6E93               	movwf	3987,c	;volatile
  2325                           
  2326                           ;i2c1.c: 215: PIR3bits.SSP1IF = 0;
  2327  00079E  010E               	movlb	14	; () banked
  2328  0007A0  91CD               	bcf	205,0,b	;volatile
  2329                           
  2330                           ; BSR set to: 14
  2331                           ;i2c1.c: 216: PIR3bits.BCL1IF = 0;
  2332  0007A2  93CD               	bcf	205,1,b	;volatile
  2333                           
  2334                           ; BSR set to: 14
  2335                           ;i2c1.c: 219: PIE3bits.SSP1IE = 1;
  2336  0007A4  81C5               	bsf	197,0,b	;volatile
  2337                           
  2338                           ; BSR set to: 14
  2339                           ;i2c1.c: 220: PIE3bits.BCL1IE = 1;
  2340  0007A6  83C5               	bsf	197,1,b	;volatile
  2341                           
  2342                           ; BSR set to: 14
  2343  0007A8  0012               	return		;funcret
  2344  0007AA                     __end_of_I2C1_Initialize:
  2345                           	opt stack 0
  2346                           intcon	equ	0xFF2
  2347                           postinc0	equ	0xFEE
  2348                           wreg	equ	0xFE8
  2349                           indf2	equ	0xFDF
  2350                           postinc2	equ	0xFDE
  2351                           postdec2	equ	0xFDD
  2352                           plusw2	equ	0xFDB
  2353                           fsr2h	equ	0xFDA
  2354                           fsr2l	equ	0xFD9
  2355                           status	equ	0xFD8
  2356                           
  2357 ;; *************** function _INTERRUPT_InterruptManager *****************
  2358 ;; Defined at:
  2359 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;Total ram usage:       18 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    2
  2380 ;; This function calls:
  2381 ;;		_I2C1_BusCollisionISR
  2382 ;;		_I2C1_ISR
  2383 ;; This function is called by:
  2384 ;;		Interrupt level 2
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	intcode
  2389  000008                     __pintcode:
  2390                           	opt stack 0
  2391  000008                     _INTERRUPT_InterruptManager:
  2392                           	opt stack 23
  2393                           
  2394                           ; BSR set to: 14
  2395                           ;incstack = 0
  2396  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2397  00000A  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
  2398  00000E  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2399  000012  CFE9 F02C          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2400  000016  CFEA F02D          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2401  00001A  CFE1 F02E          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2402  00001E  CFE2 F02F          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2403  000022  CFD9 F030          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2404  000026  CFDA F031          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2405  00002A  CFF3 F032          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2406  00002E  CFF4 F033          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2407  000032  CFF6 F034          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2408  000036  CFF7 F035          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2409  00003A  CFF8 F036          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2410  00003E  CFF5 F037          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2411  000042  C048  F038         	movff	btemp,??_INTERRUPT_InterruptManager+14
  2412  000046  C049  F039         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  2413  00004A  C04A  F03A         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  2414  00004E  C04B  F03B         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  2415                           
  2416                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1)
  2417  000052  ACF2               	btfss	intcon,6,c	;volatile
  2418  000054  D00C               	goto	i2l273
  2419                           
  2420                           ;interrupt_manager.c: 61: {
  2421                           ;interrupt_manager.c: 62: if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  2422  000056  010E               	movlb	14	; () banked
  2423  000058  B3C5               	btfsc	197,1,b	;volatile
  2424                           
  2425                           ; BSR set to: 14
  2426  00005A  A3CD               	btfss	205,1,b	;volatile
  2427  00005C  D003               	goto	i2l271
  2428                           
  2429                           ; BSR set to: 14
  2430                           ;interrupt_manager.c: 63: {
  2431                           ;interrupt_manager.c: 64: I2C1_BusCollisionISR();
  2432  00005E  EC4A  F004         	call	_I2C1_BusCollisionISR	;wreg free
  2433                           
  2434                           ;interrupt_manager.c: 65: }
  2435  000062  D005               	goto	i2l273
  2436  000064                     i2l271:
  2437                           
  2438                           ; BSR set to: 14
  2439                           ;interrupt_manager.c: 66: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  2440  000064  B1C5               	btfsc	197,0,b	;volatile
  2441                           
  2442                           ; BSR set to: 14
  2443  000066  A1CD               	btfss	205,0,b	;volatile
  2444  000068  D002               	goto	i2l273
  2445                           
  2446                           ; BSR set to: 14
  2447                           ;interrupt_manager.c: 67: {
  2448                           ;interrupt_manager.c: 68: I2C1_ISR();
  2449  00006A  EC5F  F000         	call	_I2C1_ISR	;wreg free
  2450  00006E                     i2l273:
  2451                           
  2452                           ;interrupt_manager.c: 75: else
  2453                           ;interrupt_manager.c: 76: {
  2454                           
  2455                           ;interrupt_manager.c: 73: }
  2456                           ;interrupt_manager.c: 74: }
  2457                           
  2458                           ;interrupt_manager.c: 70: else
  2459                           ;interrupt_manager.c: 71: {
  2460  00006E  C03B  F04B         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  2461  000072  C03A  F04A         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  2462  000076  C039  F049         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  2463  00007A  C038  F048         	movff	??_INTERRUPT_InterruptManager+14,btemp
  2464  00007E  C037  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2465  000082  C036  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2466  000086  C035  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2467  00008A  C034  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2468  00008E  C033  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2469  000092  C032  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2470  000096  C031  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2471  00009A  C030  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2472  00009E  C02F  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2473  0000A2  C02E  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2474  0000A6  C02D  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2475  0000AA  C02C  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2476  0000AE  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2477  0000B2  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2478  0000B6  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2479  0000B8  0011               	retfie		f
  2480  0000BA                     __end_of_INTERRUPT_InterruptManager:
  2481                           	opt stack 0
  2482                           pclatu	equ	0xFFB
  2483                           pclath	equ	0xFFA
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           prodh	equ	0xFF4
  2489                           prodl	equ	0xFF3
  2490                           intcon	equ	0xFF2
  2491                           postinc0	equ	0xFEE
  2492                           fsr0h	equ	0xFEA
  2493                           fsr0l	equ	0xFE9
  2494                           wreg	equ	0xFE8
  2495                           fsr1h	equ	0xFE2
  2496                           fsr1l	equ	0xFE1
  2497                           indf2	equ	0xFDF
  2498                           postinc2	equ	0xFDE
  2499                           postdec2	equ	0xFDD
  2500                           plusw2	equ	0xFDB
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _I2C1_ISR *****************
  2506 ;; Defined at:
  2507 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;Total ram usage:        2 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    1
  2528 ;; This function calls:
  2529 ;;		_I2C1_FunctionComplete
  2530 ;;		_I2C1_Stop
  2531 ;; This function is called by:
  2532 ;;		_INTERRUPT_InterruptManager
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text22
  2537  0000BE                     __ptext22:
  2538                           	opt stack 0
  2539  0000BE                     _I2C1_ISR:
  2540                           	opt stack 23
  2541                           
  2542                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  2543                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  2544                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  2545                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  2546                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
  2547                           
  2548                           ;incstack = 0
  2549  0000BE  010E               	movlb	14	; () banked
  2550  0000C0  91CD               	bcf	205,0,b	;volatile
  2551                           
  2552                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  2553  0000C2  AE96               	btfss	3990,7,c	;volatile
  2554  0000C4  D0F9               	goto	i2l164
  2555                           
  2556                           ; BSR set to: 14
  2557                           ;i2c1.c: 246: {
  2558                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  2559  0000C6  9E96               	bcf	3990,7,c	;volatile
  2560                           
  2561                           ; BSR set to: 14
  2562                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  2563  0000C8  0E00               	movlw	0
  2564  0000CA  6E12               	movwf	_i2c1_state,c
  2565                           
  2566                           ; BSR set to: 14
  2567                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  2568  0000CC  EE20 F003          	lfsr	2,3
  2569  0000D0  500A               	movf	_p_i2c1_current,w,c
  2570  0000D2  26D9               	addwf	fsr2l,f,c
  2571  0000D4  500B               	movf	_p_i2c1_current+1,w,c
  2572  0000D6  22DA               	addwfc	fsr2h,f,c
  2573  0000D8  CFDE F028          	movff	postinc2,??_I2C1_ISR
  2574  0000DC  CFDD F029          	movff	postdec2,??_I2C1_ISR+1
  2575  0000E0  C028  FFD9         	movff	??_I2C1_ISR,fsr2l
  2576  0000E4  C029  FFDA         	movff	??_I2C1_ISR+1,fsr2h
  2577  0000E8  0E01               	movlw	1
  2578  0000EA  6EDF               	movwf	indf2,c
  2579                           
  2580                           ; BSR set to: 14
  2581                           ;i2c1.c: 253: p_i2c1_current = (0);
  2582  0000EC  0E00               	movlw	0
  2583  0000EE  6E0A               	movwf	_p_i2c1_current,c
  2584  0000F0  0E00               	movlw	0
  2585  0000F2  6E0B               	movwf	_p_i2c1_current+1,c
  2586                           
  2587                           ; BSR set to: 14
  2588                           ;i2c1.c: 255: return;
  2589  0000F4  0012               	return	
  2590  0000F6                     i2l165:
  2591                           
  2592                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  2593  0000F6  B205               	btfsc	_i2c1_object+4,1,c
  2594  0000F8  0012               	return	
  2595                           
  2596                           ;i2c1.c: 264: {
  2597                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  2598  0000FA  C003  F00A         	movff	_i2c1_object+2,_p_i2c1_current
  2599  0000FE  C004  F00B         	movff	_i2c1_object+3,_p_i2c1_current+1
  2600                           
  2601                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  2602  000102  C003  FFD9         	movff	_i2c1_object+2,fsr2l
  2603  000106  C004  FFDA         	movff	_i2c1_object+3,fsr2h
  2604  00010A  50DF               	movf	indf2,w,c
  2605  00010C  6E11               	movwf	_i2c1_trb_count,c
  2606                           
  2607                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  2608  00010E  EE20 F001          	lfsr	2,1
  2609  000112  5003               	movf	_i2c1_object+2,w,c
  2610  000114  26D9               	addwf	fsr2l,f,c
  2611  000116  5004               	movf	_i2c1_object+3,w,c
  2612  000118  22DA               	addwfc	fsr2h,f,c
  2613  00011A  CFDE F00C          	movff	postinc2,_p_i2c1_trb_current
  2614  00011E  CFDD F00D          	movff	postdec2,_p_i2c1_trb_current+1
  2615                           
  2616                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  2617  000122  0E05               	movlw	5
  2618  000124  2603               	addwf	_i2c1_object+2,f,c
  2619  000126  0E00               	movlw	0
  2620  000128  2204               	addwfc	_i2c1_object+3,f,c
  2621                           
  2622                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  2623  00012A  0E22               	movlw	low (_i2c1_tr_queue+5)
  2624  00012C  1803               	xorwf	_i2c1_object+2,w,c
  2625  00012E  E108               	bnz	i2l1628
  2626  000130  0E00               	movlw	high (_i2c1_tr_queue+5)
  2627  000132  1804               	xorwf	_i2c1_object+3,w,c
  2628  000134  A4D8               	btfss	status,2,c
  2629  000136  D004               	goto	i2l167
  2630                           
  2631                           ;i2c1.c: 274: {
  2632                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  2633  000138  0E1D               	movlw	low _i2c1_tr_queue
  2634  00013A  6E03               	movwf	_i2c1_object+2,c
  2635  00013C  0E00               	movlw	high _i2c1_tr_queue
  2636  00013E  6E04               	movwf	_i2c1_object+3,c
  2637  000140                     i2l167:
  2638  000140                     i2l1628:
  2639                           
  2640                           ;i2c1.c: 277: }
  2641                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  2642  000140  9005               	bcf	_i2c1_object+4,0,c
  2643                           
  2644                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  2645  000142  5001               	movf	_i2c1_object,w,c
  2646  000144  1803               	xorwf	_i2c1_object+2,w,c
  2647  000146  E104               	bnz	i2l168
  2648  000148  5002               	movf	_i2c1_object+1,w,c
  2649  00014A  1804               	xorwf	_i2c1_object+3,w,c
  2650  00014C  B4D8               	btfsc	status,2,c
  2651                           
  2652                           ;i2c1.c: 285: {
  2653                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  2654  00014E  8205               	bsf	_i2c1_object+4,1,c
  2655  000150                     i2l168:
  2656                           
  2657                           ;i2c1.c: 288: }
  2658                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  2659  000150  8097               	bsf	3991,0,c	;volatile
  2660                           
  2661                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  2662  000152  0E02               	movlw	2
  2663  000154  6E12               	movwf	_i2c1_state,c
  2664                           
  2665                           ;i2c1.c: 295: }
  2666                           ;i2c1.c: 297: break;
  2667  000156  0012               	return	
  2668  000158                     i2l170:
  2669                           
  2670                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  2671  000158  8297               	bsf	3991,1,c	;volatile
  2672                           
  2673                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  2674  00015A  0E02               	movlw	2
  2675  00015C  6E12               	movwf	_i2c1_state,c
  2676                           
  2677                           ;i2c1.c: 309: break;
  2678  00015E  0012               	return	
  2679  000160                     i2l171:
  2680                           
  2681                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  2682  000160  AC97               	btfss	3991,6,c	;volatile
  2683  000162  D005               	goto	i2l172
  2684                           
  2685                           ;i2c1.c: 314: {
  2686                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  2687  000164  2A07               	incf	_i2c1_object+6,f,c
  2688                           
  2689                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2690  000166  0E04               	movlw	4
  2691  000168  EC9C  F003         	call	_I2C1_Stop
  2692                           
  2693                           ;i2c1.c: 317: }
  2694  00016C  0012               	return	
  2695  00016E                     i2l172:
  2696                           
  2697                           ;i2c1.c: 318: else
  2698                           ;i2c1.c: 319: {
  2699                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  2700  00016E  90D8               	bcf	status,0,c
  2701  000170  3023               	rrcf	I2C1_ISR@i2c_address+1,w,c
  2702  000172  6E29               	movwf	(??_I2C1_ISR+1)& (0+255),c
  2703  000174  3022               	rrcf	I2C1_ISR@i2c_address,w,c
  2704  000176  6E28               	movwf	??_I2C1_ISR& (0+255),c
  2705  000178  5028               	movf	??_I2C1_ISR,w,c
  2706  00017A  6E92               	movwf	3986,c	;volatile
  2707                           
  2708                           ;i2c1.c: 324: if(i2c_address & 0x01)
  2709  00017C  A022               	btfss	I2C1_ISR@i2c_address,0,c
  2710  00017E  D003               	goto	i2l174
  2711                           
  2712                           ;i2c1.c: 325: {
  2713                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  2714  000180  0E0B               	movlw	11
  2715  000182  6E12               	movwf	_i2c1_state,c
  2716                           
  2717                           ;i2c1.c: 329: }
  2718  000184  0012               	return	
  2719  000186                     i2l174:
  2720                           
  2721                           ;i2c1.c: 330: else
  2722                           ;i2c1.c: 331: {
  2723                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  2724  000186  0E03               	movlw	3
  2725  000188  6E12               	movwf	_i2c1_state,c
  2726                           
  2727                           ;i2c1.c: 334: }
  2728                           ;i2c1.c: 335: }
  2729                           ;i2c1.c: 337: break;
  2730  00018A  0012               	return	
  2731  00018C                     i2l176:
  2732                           
  2733                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  2734  00018C  AC97               	btfss	3991,6,c	;volatile
  2735  00018E  D005               	goto	i2l177
  2736                           
  2737                           ;i2c1.c: 342: {
  2738                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  2739  000190  2A07               	incf	_i2c1_object+6,f,c
  2740                           
  2741                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2742  000192  0E04               	movlw	4
  2743  000194  EC9C  F003         	call	_I2C1_Stop
  2744                           
  2745                           ;i2c1.c: 345: }
  2746  000198  0012               	return	
  2747  00019A                     i2l177:
  2748                           
  2749                           ;i2c1.c: 346: else
  2750                           ;i2c1.c: 347: {
  2751                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  2752  00019A  8297               	bsf	3991,1,c	;volatile
  2753                           
  2754                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  2755  00019C  C022  F028         	movff	I2C1_ISR@i2c_address,??_I2C1_ISR
  2756  0001A0  C023  F029         	movff	I2C1_ISR@i2c_address+1,??_I2C1_ISR+1
  2757  0001A4  C029  F028         	movff	??_I2C1_ISR+1,??_I2C1_ISR
  2758  0001A8  6A29               	clrf	??_I2C1_ISR+1,c
  2759  0001AA  0E06               	movlw	6
  2760  0001AC  1628               	andwf	??_I2C1_ISR,f,c
  2761  0001AE  0E00               	movlw	0
  2762  0001B0  1629               	andwf	??_I2C1_ISR+1,f,c
  2763  0001B2  0EF0               	movlw	240
  2764  0001B4  1028               	iorwf	??_I2C1_ISR,w,c
  2765  0001B6  6E22               	movwf	I2C1_ISR@i2c_address,c
  2766  0001B8  5029               	movf	??_I2C1_ISR+1,w,c
  2767  0001BA  6E23               	movwf	I2C1_ISR@i2c_address+1,c
  2768                           
  2769                           ;i2c1.c: 357: i2c_address |= 0x0001;
  2770  0001BC  8022               	bsf	I2C1_ISR@i2c_address,0,c
  2771                           
  2772                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  2773  0001BE  0E01               	movlw	1
  2774  0001C0  6E0F               	movwf	I2C1_ISR@i2c_10bit_address_restart,c
  2775                           
  2776                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  2777  0001C2  0E02               	movlw	2
  2778  0001C4  6E12               	movwf	_i2c1_state,c
  2779                           
  2780                           ;i2c1.c: 364: }
  2781                           ;i2c1.c: 366: break;
  2782  0001C6  0012               	return	
  2783  0001C8                     
  2784                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  2785  0001C8  040F               	decf	I2C1_ISR@i2c_10bit_address_restart,w,c
  2786  0001CA  B4D8               	btfsc	status,2,c
  2787  0001CC  D01A               	goto	i2l181
  2788                           
  2789                           ;i2c1.c: 382: {
  2790                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  2791  0001CE  C00C  FFD9         	movff	_p_i2c1_trb_current,fsr2l
  2792  0001D2  C00D  FFDA         	movff	_p_i2c1_trb_current+1,fsr2h
  2793  0001D6  CFDE F022          	movff	postinc2,I2C1_ISR@i2c_address
  2794  0001DA  CFDD F023          	movff	postdec2,I2C1_ISR@i2c_address+1
  2795                           
  2796                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  2797  0001DE  EE20 F003          	lfsr	2,3
  2798  0001E2  500C               	movf	_p_i2c1_trb_current,w,c
  2799  0001E4  26D9               	addwf	fsr2l,f,c
  2800  0001E6  500D               	movf	_p_i2c1_trb_current+1,w,c
  2801  0001E8  22DA               	addwfc	fsr2h,f,c
  2802  0001EA  CFDE F008          	movff	postinc2,I2C1_ISR@pi2c_buf_ptr
  2803  0001EE  CFDD F009          	movff	postdec2,I2C1_ISR@pi2c_buf_ptr+1
  2804                           
  2805                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  2806  0001F2  EE20 F002          	lfsr	2,2
  2807  0001F6  500C               	movf	_p_i2c1_trb_current,w,c
  2808  0001F8  26D9               	addwf	fsr2l,f,c
  2809  0001FA  500D               	movf	_p_i2c1_trb_current+1,w,c
  2810  0001FC  22DA               	addwfc	fsr2h,f,c
  2811  0001FE  50DF               	movf	indf2,w,c
  2812  000200  6E10               	movwf	I2C1_ISR@i2c_bytes_left,c
  2813  000202                     i2l181:
  2814                           
  2815                           ;i2c1.c: 409: else
  2816                           ;i2c1.c: 410: {
  2817                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  2818  000202  C022  FF92         	movff	I2C1_ISR@i2c_address,3986	;volatile
  2819                           
  2820                           ;i2c1.c: 413: if(i2c_address & 0x01)
  2821  000206  A022               	btfss	I2C1_ISR@i2c_address,0,c
  2822  000208  D003               	goto	i2l185
  2823                           
  2824                           ;i2c1.c: 414: {
  2825                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  2826  00020A  0E05               	movlw	5
  2827  00020C  6E12               	movwf	_i2c1_state,c
  2828                           
  2829                           ;i2c1.c: 417: }
  2830  00020E  0012               	return	
  2831  000210                     i2l185:
  2832                           
  2833                           ;i2c1.c: 418: else
  2834                           ;i2c1.c: 419: {
  2835                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  2836  000210  0E03               	movlw	3
  2837  000212  6E12               	movwf	_i2c1_state,c
  2838                           
  2839                           ;i2c1.c: 422: }
  2840                           ;i2c1.c: 423: }
  2841                           ;i2c1.c: 424: break;
  2842  000214  0012               	return	
  2843  000216                     i2l187:
  2844                           
  2845                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  2846  000216  AC97               	btfss	3991,6,c	;volatile
  2847  000218  D006               	goto	i2l188
  2848                           
  2849                           ;i2c1.c: 430: {
  2850                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  2851  00021A  2A07               	incf	_i2c1_object+6,f,c
  2852                           
  2853                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  2854  00021C  9C97               	bcf	3991,6,c	;volatile
  2855                           
  2856                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  2857  00021E  0E05               	movlw	5
  2858  000220  EC9C  F003         	call	_I2C1_Stop
  2859                           
  2860                           ;i2c1.c: 440: }
  2861  000224  0012               	return	
  2862  000226                     i2l188:
  2863                           
  2864                           ;i2c1.c: 441: else
  2865                           ;i2c1.c: 442: {
  2866                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  2867  000226  0610               	decf	I2C1_ISR@i2c_bytes_left,f,c
  2868  000228  2810               	incf	I2C1_ISR@i2c_bytes_left,w,c
  2869  00022A  A4D8               	btfss	status,2,c
  2870  00022C  D00E               	goto	i2l190
  2871                           
  2872                           ;i2c1.c: 445: {
  2873                           ;i2c1.c: 449: p_i2c1_trb_current++;
  2874  00022E  0E05               	movlw	5
  2875  000230  260C               	addwf	_p_i2c1_trb_current,f,c
  2876  000232  0E00               	movlw	0
  2877  000234  220D               	addwfc	_p_i2c1_trb_current+1,f,c
  2878                           
  2879                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  2880  000236  2E11               	decfsz	_i2c1_trb_count,f,c
  2881  000238  D004               	goto	i2l191
  2882                           
  2883                           ;i2c1.c: 453: {
  2884                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  2885  00023A  0E00               	movlw	0
  2886  00023C  EC9C  F003         	call	_I2C1_Stop
  2887                           
  2888                           ;i2c1.c: 455: }
  2889  000240  0012               	return	
  2890  000242                     i2l191:
  2891                           
  2892                           ;i2c1.c: 456: else
  2893                           ;i2c1.c: 457: {
  2894                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  2895  000242  8297               	bsf	3991,1,c	;volatile
  2896                           
  2897                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  2898  000244  0E02               	movlw	2
  2899  000246  6E12               	movwf	_i2c1_state,c
  2900                           
  2901                           ;i2c1.c: 469: }
  2902                           ;i2c1.c: 470: }
  2903  000248  0012               	return	
  2904  00024A                     i2l190:
  2905                           
  2906                           ;i2c1.c: 471: else
  2907                           ;i2c1.c: 472: {
  2908                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  2909  00024A  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  2910  00024E  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  2911  000252  50DF               	movf	indf2,w,c
  2912  000254  6E92               	movwf	3986,c	;volatile
  2913  000256  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  2914  000258  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  2915                           
  2916                           ;i2c1.c: 475: }
  2917                           ;i2c1.c: 476: }
  2918                           ;i2c1.c: 477: break;
  2919  00025A  0012               	return	
  2920  00025C                     i2l194:
  2921                           
  2922                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  2923  00025C  AC97               	btfss	3991,6,c	;volatile
  2924  00025E  D006               	goto	i2l195
  2925                           
  2926                           ;i2c1.c: 483: {
  2927                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  2928  000260  2A07               	incf	_i2c1_object+6,f,c
  2929                           
  2930                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  2931  000262  0E04               	movlw	4
  2932  000264  EC9C  F003         	call	_I2C1_Stop
  2933                           
  2934                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  2935  000268  9C97               	bcf	3991,6,c	;volatile
  2936                           
  2937                           ;i2c1.c: 493: }
  2938  00026A  0012               	return	
  2939  00026C                     i2l195:
  2940                           
  2941                           ;i2c1.c: 494: else
  2942                           ;i2c1.c: 495: {
  2943                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  2944  00026C  8697               	bsf	3991,3,c	;volatile
  2945                           
  2946                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  2947  00026E  0E08               	movlw	8
  2948  000270  6E12               	movwf	_i2c1_state,c
  2949                           
  2950                           ;i2c1.c: 498: }
  2951                           ;i2c1.c: 499: break;
  2952  000272  0012               	return	
  2953  000274                     
  2954                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  2955  000274  0E08               	movlw	8
  2956  000276  6E12               	movwf	_i2c1_state,c
  2957                           
  2958                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  2959  000278  8697               	bsf	3991,3,c	;volatile
  2960                           
  2961                           ;i2c1.c: 511: break;
  2962  00027A  0012               	return	
  2963  00027C                     
  2964                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  2965  00027C  C008  FFD9         	movff	I2C1_ISR@pi2c_buf_ptr,fsr2l
  2966  000280  C009  FFDA         	movff	I2C1_ISR@pi2c_buf_ptr+1,fsr2h
  2967  000284  CF92 FFDF          	movff	3986,indf2	;volatile
  2968  000288  4A08               	infsnz	I2C1_ISR@pi2c_buf_ptr,f,c
  2969  00028A  2A09               	incf	I2C1_ISR@pi2c_buf_ptr+1,f,c
  2970                           
  2971                           ;i2c1.c: 519: if(--i2c_bytes_left)
  2972  00028C  0E01               	movlw	1
  2973  00028E  5E10               	subwf	I2C1_ISR@i2c_bytes_left,f,c
  2974  000290  B4D8               	btfsc	status,2,c
  2975  000292  D004               	goto	i2l199
  2976                           
  2977                           ;i2c1.c: 520: {
  2978                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  2979  000294  9A97               	bcf	3991,5,c	;volatile
  2980                           
  2981                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  2982  000296  0E06               	movlw	6
  2983  000298  6E12               	movwf	_i2c1_state,c
  2984                           
  2985                           ;i2c1.c: 530: }
  2986  00029A  D003               	goto	i2l200
  2987  00029C                     i2l199:
  2988                           
  2989                           ;i2c1.c: 531: else
  2990                           ;i2c1.c: 532: {
  2991                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  2992  00029C  8A97               	bsf	3991,5,c	;volatile
  2993                           
  2994                           ;i2c1.c: 538: I2C1_FunctionComplete();
  2995  00029E  EC24  F004         	call	_I2C1_FunctionComplete	;wreg free
  2996  0002A2                     i2l200:
  2997                           
  2998                           ;i2c1.c: 539: }
  2999                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  3000  0002A2  8897               	bsf	3991,4,c	;volatile
  3001                           
  3002                           ;i2c1.c: 543: break;
  3003  0002A4  0012               	return	
  3004  0002A6                     
  3005                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  3006                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  3007  0002A6  0E00               	movlw	0
  3008  0002A8  EC9C  F003         	call	_I2C1_Stop
  3009                           
  3010                           ;i2c1.c: 550: break;
  3011  0002AC  0012               	return	
  3012  0002AE                     
  3013                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  3014  0002AE  2A07               	incf	_i2c1_object+6,f,c
  3015                           
  3016                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  3017  0002B0  0E06               	movlw	6
  3018  0002B2  EC9C  F003         	call	_I2C1_Stop
  3019                           
  3020                           ;i2c1.c: 560: }
  3021                           
  3022                           ;i2c1.c: 558: break;
  3023  0002B6  0012               	return	
  3024  0002B8                     i2l164:
  3025  0002B8  5012               	movf	_i2c1_state,w,c
  3026                           
  3027                           ; Switch size 1, requested type "space"
  3028                           ; Number of cases is 11, Range of values is 0 to 11
  3029                           ; switch strategies available:
  3030                           ; Name         Instructions Cycles
  3031                           ; simple_byte           34    18 (average)
  3032                           ;	Chosen strategy is simple_byte
  3033  0002BA  0A00               	xorlw	0	; case 0
  3034  0002BC  B4D8               	btfsc	status,2,c
  3035  0002BE  D71B               	goto	i2l165
  3036  0002C0  0A01               	xorlw	1	; case 1
  3037  0002C2  B4D8               	btfsc	status,2,c
  3038  0002C4  D749               	goto	i2l170
  3039  0002C6  0A03               	xorlw	3	; case 2
  3040  0002C8  B4D8               	btfsc	status,2,c
  3041  0002CA  D77E               	goto	i2l179
  3042  0002CC  0A01               	xorlw	1	; case 3
  3043  0002CE  B4D8               	btfsc	status,2,c
  3044  0002D0  D7A2               	goto	i2l187
  3045  0002D2  0A07               	xorlw	7	; case 4
  3046  0002D4  B4D8               	btfsc	status,2,c
  3047  0002D6  D7E7               	goto	i2l201
  3048  0002D8  0A01               	xorlw	1	; case 5
  3049  0002DA  B4D8               	btfsc	status,2,c
  3050  0002DC  D7BF               	goto	i2l194
  3051  0002DE  0A03               	xorlw	3	; case 6
  3052  0002E0  B4D8               	btfsc	status,2,c
  3053  0002E2  D7C8               	goto	i2l197
  3054  0002E4  0A01               	xorlw	1	; case 7
  3055  0002E6  B4D8               	btfsc	status,2,c
  3056  0002E8  D7DE               	goto	i2l201
  3057  0002EA  0A0F               	xorlw	15	; case 8
  3058  0002EC  B4D8               	btfsc	status,2,c
  3059  0002EE  D7C6               	goto	i2l198
  3060  0002F0  0A02               	xorlw	2	; case 10
  3061  0002F2  B4D8               	btfsc	status,2,c
  3062  0002F4  D735               	goto	i2l171
  3063  0002F6  0A01               	xorlw	1	; case 11
  3064  0002F8  B4D8               	btfsc	status,2,c
  3065  0002FA  D748               	goto	i2l176
  3066  0002FC  D7D8               	goto	i2l203
  3067  0002FE                     __end_of_I2C1_ISR:
  3068                           	opt stack 0
  3069                           pclatu	equ	0xFFB
  3070                           pclath	equ	0xFFA
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           prodh	equ	0xFF4
  3076                           prodl	equ	0xFF3
  3077                           intcon	equ	0xFF2
  3078                           postinc0	equ	0xFEE
  3079                           fsr0h	equ	0xFEA
  3080                           fsr0l	equ	0xFE9
  3081                           wreg	equ	0xFE8
  3082                           fsr1h	equ	0xFE2
  3083                           fsr1l	equ	0xFE1
  3084                           indf2	equ	0xFDF
  3085                           postinc2	equ	0xFDE
  3086                           postdec2	equ	0xFDD
  3087                           plusw2	equ	0xFDB
  3088                           fsr2h	equ	0xFDA
  3089                           fsr2l	equ	0xFD9
  3090                           status	equ	0xFD8
  3091                           
  3092 ;; *************** function _I2C1_Stop *****************
  3093 ;; Defined at:
  3094 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  completion_c    1    wreg     enum E11606
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  completion_c    1    2[COMRAM] enum E11606
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3110 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3111 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3112 ;;Total ram usage:        3 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_I2C1_ISR
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text23
  3122  000738                     __ptext23:
  3123                           	opt stack 0
  3124  000738                     _I2C1_Stop:
  3125                           	opt stack 23
  3126                           
  3127                           ;incstack = 0
  3128                           ;I2C1_Stop@completion_code stored from wreg
  3129  000738  6E27               	movwf	I2C1_Stop@completion_code,c
  3130                           
  3131                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  3132  00073A  8497               	bsf	3991,2,c	;volatile
  3133                           
  3134                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  3135  00073C  EE20 F003          	lfsr	2,3
  3136  000740  500A               	movf	_p_i2c1_current,w,c
  3137  000742  26D9               	addwf	fsr2l,f,c
  3138  000744  500B               	movf	_p_i2c1_current+1,w,c
  3139  000746  22DA               	addwfc	fsr2h,f,c
  3140  000748  50DE               	movf	postinc2,w,c
  3141  00074A  10DE               	iorwf	postinc2,w,c
  3142  00074C  B4D8               	btfsc	status,2,c
  3143  00074E  D010               	goto	i2l211
  3144                           
  3145                           ;i2c1.c: 588: {
  3146                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  3147  000750  EE20 F003          	lfsr	2,3
  3148  000754  500A               	movf	_p_i2c1_current,w,c
  3149  000756  26D9               	addwf	fsr2l,f,c
  3150  000758  500B               	movf	_p_i2c1_current+1,w,c
  3151  00075A  22DA               	addwfc	fsr2h,f,c
  3152  00075C  CFDE F025          	movff	postinc2,??_I2C1_Stop
  3153  000760  CFDD F026          	movff	postdec2,??_I2C1_Stop+1
  3154  000764  C025  FFD9         	movff	??_I2C1_Stop,fsr2l
  3155  000768  C026  FFDA         	movff	??_I2C1_Stop+1,fsr2h
  3156  00076C  C027  FFDF         	movff	I2C1_Stop@completion_code,indf2
  3157  000770                     i2l211:
  3158                           
  3159                           ;i2c1.c: 591: }
  3160                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  3161  000770  0E00               	movlw	0
  3162  000772  6E12               	movwf	_i2c1_state,c
  3163  000774  0012               	return		;funcret
  3164  000776                     __end_of_I2C1_Stop:
  3165                           	opt stack 0
  3166                           pclatu	equ	0xFFB
  3167                           pclath	equ	0xFFA
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           intcon	equ	0xFF2
  3175                           postinc0	equ	0xFEE
  3176                           fsr0h	equ	0xFEA
  3177                           fsr0l	equ	0xFE9
  3178                           wreg	equ	0xFE8
  3179                           fsr1h	equ	0xFE2
  3180                           fsr1l	equ	0xFE1
  3181                           indf2	equ	0xFDF
  3182                           postinc2	equ	0xFDE
  3183                           postdec2	equ	0xFDD
  3184                           plusw2	equ	0xFDB
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _I2C1_FunctionComplete *****************
  3190 ;; Defined at:
  3191 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_I2C1_ISR
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text24
  3219  000848                     __ptext24:
  3220                           	opt stack 0
  3221  000848                     _I2C1_FunctionComplete:
  3222                           	opt stack 23
  3223                           
  3224                           ;i2c1.c: 567: p_i2c1_trb_current++;
  3225                           
  3226                           ;incstack = 0
  3227  000848  0E05               	movlw	5
  3228  00084A  260C               	addwf	_p_i2c1_trb_current,f,c
  3229  00084C  0E00               	movlw	0
  3230  00084E  220D               	addwfc	_p_i2c1_trb_current+1,f,c
  3231                           
  3232                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  3233  000850  2E11               	decfsz	_i2c1_trb_count,f,c
  3234  000852  D003               	goto	i2l206
  3235                           
  3236                           ;i2c1.c: 571: {
  3237                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  3238  000854  0E04               	movlw	4
  3239  000856  6E12               	movwf	_i2c1_state,c
  3240                           
  3241                           ;i2c1.c: 573: }
  3242  000858  0012               	return	
  3243  00085A                     i2l206:
  3244                           
  3245                           ;i2c1.c: 574: else
  3246                           ;i2c1.c: 575: {
  3247                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  3248  00085A  0E01               	movlw	1
  3249  00085C  6E12               	movwf	_i2c1_state,c
  3250  00085E  0012               	return	
  3251  000860                     __end_of_I2C1_FunctionComplete:
  3252                           	opt stack 0
  3253                           pclatu	equ	0xFFB
  3254                           pclath	equ	0xFFA
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodh	equ	0xFF4
  3260                           prodl	equ	0xFF3
  3261                           intcon	equ	0xFF2
  3262                           postinc0	equ	0xFEE
  3263                           fsr0h	equ	0xFEA
  3264                           fsr0l	equ	0xFE9
  3265                           wreg	equ	0xFE8
  3266                           fsr1h	equ	0xFE2
  3267                           fsr1l	equ	0xFE1
  3268                           indf2	equ	0xFDF
  3269                           postinc2	equ	0xFDE
  3270                           postdec2	equ	0xFDD
  3271                           plusw2	equ	0xFDB
  3272                           fsr2h	equ	0xFDA
  3273                           fsr2l	equ	0xFD9
  3274                           status	equ	0xFD8
  3275                           
  3276 ;; *************** function _I2C1_BusCollisionISR *****************
  3277 ;; Defined at:
  3278 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		None
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3296 ;;Total ram usage:        0 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_INTERRUPT_InterruptManager
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text25
  3306  000894                     __ptext25:
  3307                           	opt stack 0
  3308  000894                     _I2C1_BusCollisionISR:
  3309                           	opt stack 24
  3310                           
  3311                           ;i2c1.c: 731: PIR3bits.BCL1IF = 0;
  3312                           
  3313                           ;incstack = 0
  3314  000894  010E               	movlb	14	; () banked
  3315  000896  93CD               	bcf	205,1,b	;volatile
  3316                           
  3317                           ; BSR set to: 14
  3318  000898  0012               	return		;funcret
  3319  00089A                     __end_of_I2C1_BusCollisionISR:
  3320                           	opt stack 0
  3321  0000                     pclatu	equ	0xFFB
  3322                           pclath	equ	0xFFA
  3323                           tblptru	equ	0xFF8
  3324                           tblptrh	equ	0xFF7
  3325                           tblptrl	equ	0xFF6
  3326                           tablat	equ	0xFF5
  3327                           prodh	equ	0xFF4
  3328                           prodl	equ	0xFF3
  3329                           intcon	equ	0xFF2
  3330                           postinc0	equ	0xFEE
  3331                           fsr0h	equ	0xFEA
  3332                           fsr0l	equ	0xFE9
  3333                           wreg	equ	0xFE8
  3334                           fsr1h	equ	0xFE2
  3335                           fsr1l	equ	0xFE1
  3336                           indf2	equ	0xFDF
  3337                           postinc2	equ	0xFDE
  3338                           postdec2	equ	0xFDD
  3339                           plusw2	equ	0xFDB
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8
  3343                           pclatu	equ	0xFFB
  3344                           pclath	equ	0xFFA
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           prodh	equ	0xFF4
  3350                           prodl	equ	0xFF3
  3351                           intcon	equ	0xFF2
  3352                           postinc0	equ	0xFEE
  3353                           fsr0h	equ	0xFEA
  3354                           fsr0l	equ	0xFE9
  3355                           wreg	equ	0xFE8
  3356                           fsr1h	equ	0xFE2
  3357                           fsr1l	equ	0xFE1
  3358                           indf2	equ	0xFDF
  3359                           postinc2	equ	0xFDE
  3360                           postdec2	equ	0xFDD
  3361                           plusw2	equ	0xFDB
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366                           	psect	rparam
  3367  0000                     pclatu	equ	0xFFB
  3368                           pclath	equ	0xFFA
  3369                           tblptru	equ	0xFF8
  3370                           tblptrh	equ	0xFF7
  3371                           tblptrl	equ	0xFF6
  3372                           tablat	equ	0xFF5
  3373                           prodh	equ	0xFF4
  3374                           prodl	equ	0xFF3
  3375                           intcon	equ	0xFF2
  3376                           postinc0	equ	0xFEE
  3377                           fsr0h	equ	0xFEA
  3378                           fsr0l	equ	0xFE9
  3379                           wreg	equ	0xFE8
  3380                           fsr1h	equ	0xFE2
  3381                           fsr1l	equ	0xFE1
  3382                           indf2	equ	0xFDF
  3383                           postinc2	equ	0xFDE
  3384                           postdec2	equ	0xFDD
  3385                           plusw2	equ	0xFDB
  3386                           fsr2h	equ	0xFDA
  3387                           fsr2l	equ	0xFD9
  3388                           status	equ	0xFD8
  3389                           
  3390                           	psect	temp
  3391  000048                     btemp:
  3392                           	opt stack 0
  3393  000048                     	ds	1
  3394  0000                     int$flags	set	btemp
  3395  0000                     wtemp6	set	btemp+1
  3396                           pclatu	equ	0xFFB
  3397                           pclath	equ	0xFFA
  3398                           tblptru	equ	0xFF8
  3399                           tblptrh	equ	0xFF7
  3400                           tblptrl	equ	0xFF6
  3401                           tablat	equ	0xFF5
  3402                           prodh	equ	0xFF4
  3403                           prodl	equ	0xFF3
  3404                           intcon	equ	0xFF2
  3405                           postinc0	equ	0xFEE
  3406                           fsr0h	equ	0xFEA
  3407                           fsr0l	equ	0xFE9
  3408                           wreg	equ	0xFE8
  3409                           fsr1h	equ	0xFE2
  3410                           fsr1l	equ	0xFE1
  3411                           indf2	equ	0xFDF
  3412                           postinc2	equ	0xFDE
  3413                           postdec2	equ	0xFDD
  3414                           plusw2	equ	0xFDB
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160     20      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 0
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E11606 size(2) Largest target is 0
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(2) Largest target is 0
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@data(BANK0[1]), writeRegister@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterWrite@trBlock(COMRAM[5]), 

    I2C1_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    I2C1_MasterReadTRBBuild@ptrb	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E11606 size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E11606 size(2) Largest target is 1
		 -> status(COMRAM[1]), 

    I2C1_MasterRead@pflag	PTR enum E11606 size(2) Largest target is 1
		 -> status(COMRAM[1]), 

    I2C1_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), 

    F11718.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    I2C1_MasterWrite@pflag	PTR enum E11606 size(2) Largest target is 1
		 -> status(COMRAM[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@data(BANK0[1]), writeRegister@data(BANK0[1]), 

    F11713.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 
		 -> NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    p_i2c1_trb_current	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E11606 size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    S98$pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    S110$pTrFlag	PTR enum E11606 size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E11606 size(2) Largest target is 1
		 -> readRegister@result(BANK0[1]), readRegister@data(BANK0[1]), status(COMRAM[1]), writeRegister@data(BANK0[1]), 

    S110$ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(2) Largest target is 6
		 -> I2C1_MasterRead@trBlock(COMRAM[5]), I2C1_MasterWrite@trBlock(COMRAM[5]), 

    p_i2c1_current	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), NULL(NULL[0]), 

    S121$pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    i2c1_object.pTrHead	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    S121$pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 

    i2c1_object.pTrTail	PTR struct . size(2) Largest target is 7
		 -> i2c1_tr_queue(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _updateRegisterBit->_writeRegister
    _mcpBegin->_writeRegister
    _digitalRead->_readRegister
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _I2C1_MasterRead->_I2C1_MasterReadTRBBuild

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_mcpPinMode
    _mcpPinMode->_updateRegisterBit
    _updateRegisterBit->_readRegister
    _mcpBegin->_writeRegister
    _writeRegister->_I2C1_MasterWrite
    _digitalRead->_readRegister
    _readRegister->_I2C1_MasterRead
    _readRegister->_I2C1_MasterWrite

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   16026
                                             19 BANK0      1     1      0
                  _SYSTEM_Initialize
                        _digitalRead
                           _mcpBegin
                         _mcpPinMode
 ---------------------------------------------------------------------------------
 (1) _mcpPinMode                                           2     1      1    8458
                                             17 BANK0      2     1      1
                  _updateRegisterBit
 ---------------------------------------------------------------------------------
 (2) _updateRegisterBit                                    7     4      3    8306
                                             10 BANK0      7     4      3
                          _bitForPin
                           _bitWrite
                       _readRegister
                          _regForPin
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _bitWrite                                             6     3      3     341
                                             23 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _mcpBegin                                             1     1      0    2806
                                              9 BANK0      1     1      0
                    _I2C1_Initialize
                      _writeRegister
 ---------------------------------------------------------------------------------
 (3) _writeRegister                                        5     4      1    2741
                                             32 COMRAM     3     2      1
                                              7 BANK0      2     2      0
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (1) _digitalRead                                          5     5      0    4762
                                             10 BANK0      5     5      0
                          _bitForPin
                       _readRegister
                          _regForPin
 ---------------------------------------------------------------------------------
 (3) _regForPin                                            5     3      2     490
                                             23 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         5     5      0    4120
                                             32 COMRAM     2     2      0
                                              7 BANK0      3     3      0
                    _I2C1_MasterRead
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWrite                                     7     0      7    2327
                                              0 BANK0      7     0      7
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWriteTRBBuild                             9     2      7     546
                                             23 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterRead                                      7     0      7    1638
                                              0 BANK0      7     0      7
            _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterTRBInsert                                 6     2      4     546
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterReadTRBBuild                              9     2      7     577
                                             23 COMRAM     9     2      7
 ---------------------------------------------------------------------------------
 (3) _bitForPin                                            1     1      0      22
                                             23 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _I2C1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                          18    18      0      22
                                              5 COMRAM    18    18      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             2     2      0      22
                                              3 COMRAM     2     2      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _I2C1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _digitalRead
     _bitForPin
     _readRegister
       _I2C1_MasterRead
         _I2C1_MasterReadTRBBuild
         _I2C1_MasterTRBInsert
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _regForPin
   _mcpBegin
     _I2C1_Initialize
     _writeRegister
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
   _mcpPinMode
     _updateRegisterBit
       _bitForPin
       _bitWrite
       _readRegister
         _I2C1_MasterRead
           _I2C1_MasterReadTRBBuild
           _I2C1_MasterTRBInsert
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
       _regForPin
       _writeRegister
         _I2C1_MasterWrite
           _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      14       5       12.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      47       1       75.5%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B       6        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 02 21:29:58 2018

                        __CFG_CP$OFF 000000                          __CFG_LVP$ON 000000  
                                l301 07BA                                  l230 0362  
                                l232 0382                                  l224 06A2  
                                l217 0658                                  l234 0398  
                                l306 0826                                  l235 0394  
                                l316 05FE                                  l332 04F4  
                                l229 0376                                  l317 0618  
                                l335 0520                         __CFG_CPD$OFF 000000  
                                u684 05F4                                  u685 05F0  
                                u694 060E                                  u870 07E8  
                                u695 060A                                  u880 07EA  
                                u960 0508                                  u894 06E8  
                                u966 050A                                  u895 06E4  
                                u977 0528              __size_of_PMD_Initialize 001C  
                                wreg 000FE8                         __CFG_ZCD$OFF 000000  
                   __end_of_I2C1_ISR 02FE                                 l1480 0382  
                               l1544 0618                                 l1474 0362  
                       mcpBegin@addr 0069                                 _LATA 000F83  
                               _LATB 000F84                                 _LATC 000F85  
                               _LATD 000F86                                 _LATE 000F87  
                               _PMD0 000EE1                                 _PMD1 000EE2  
                               _PMD2 000EE3                                 _PMD3 000EE4  
                               _PMD4 000EE5                                 _PMD5 000EE6  
                               _WPUA 000F10                                 _WPUB 000F18  
                               _WPUC 000F20                                 _WPUD 000F25  
                               _WPUE 000F2D      __end_of_I2C1_MasterReadTRBBuild 0584  
                      __CFG_FCMEN$ON 000000                                 _main 04DE  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9               ??_I2C1_MasterTRBInsert 0040  
                               btemp 0048                                 prodh 000FF4  
                               prodl 000FF3                                 start 00BA  
                      __CFG_CSWEN$ON 000000                         ___param_bank 000000  
     I2C1_MasterWriteTRBBuild@length 0040                        __CFG_SCANE$ON 000000  
                         _i2c1_state 0012       __size_of_OSCILLATOR_Initialize 0018  
          I2C1_MasterTRBInsert@count 0041        __end_of_OSCILLATOR_Initialize 0848  
         __size_of_updateRegisterBit 004C            I2C1_MasterTRBInsert@pflag 003E  
                              ?_main 0025                          mcpPinMode@d 0071  
                        mcpPinMode@p 0072                    __end_of_I2C1_Stop 0776  
                      __CFG_WDTE$OFF 000000                       __CFG_DEBUG$OFF 000000  
                              i2l200 02A2                                i2l201 02A6  
                              i2l211 0770                                i2l203 02AE  
                              i2l206 085A                                i2l170 0158  
                              i2l171 0160                                i2l164 02B8  
                              i2l172 016E                                i2l181 0202  
                              i2l165 00F6                                i2l190 024A  
                              i2l174 0186                                i2l191 0242  
                              i2l167 0140                                i2l271 0064  
                              i2l176 018C                                i2l168 0150  
                              i2l185 0210                                i2l177 019A  
                              i2l273 006E                                i2l194 025C  
                              i2l195 026C                                i2l187 0216  
                              i2l179 01C8                                i2l188 0226  
                              i2l197 0274                                i2l198 027C  
                              i2l199 029C                                _OSCEN 000EDC  
                              _TRISA 000F88                                _TRISB 000F89  
                              _TRISC 000F8A                                _TRISD 000F8B  
                              _TRISE 000F8C         __end_of_I2C1_BusCollisionISR 089A  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                  ??_I2C1_MasterRead 0045                        __CFG_WRT4$OFF 000000  
                      __CFG_WRT5$OFF 000000                        __CFG_WRT6$OFF 000000  
                      __CFG_WRT7$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_EBTR1$OFF 000000                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                    ??_I2C1_Initialize 003C  
                     __CFG_EBTR4$OFF 000000                       __CFG_EBTR5$OFF 000000  
                     __CFG_EBTR6$OFF 000000                       __CFG_EBTR7$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                       __CFG_EBTRB$OFF 000000  
                 __CFG_MCLRE$EXTMCLR 000000                                pclath 000FFA  
                              tablat 000FF5                                plusw2 000FDB  
                              status 000FD8                                wtemp6 0049  
    I2C1_MasterWriteTRBBuild@address 0041                      __initialization 0860  
              I2C1_MasterWrite@pdata 0060                I2C1_MasterWrite@pflag 0065  
                       __end_of_main 0534          ?_INTERRUPT_InterruptManager 0025  
                        _i2c1_object 0001                               ??_main 0073  
                      __activetblptr 000003                 __size_of_digitalRead 0044  
                 regForPin@portAaddr 003C                        ?_readRegister 0025  
                 regForPin@portBaddr 003D                               _ANSELA 000F11  
                             _ANSELB 000F19                               _ANSELC 000F21  
                             _ANSELD 000F26                               _ANSELE 000F2E  
                             _RC3PPS 000EFA                               _RC4PPS 000EFB  
                             _ODCONA 000F0F                               _ODCONB 000F17  
                             _ODCONC 000F1F                               _ODCOND 000F24  
                             _ODCONE 000F2C                       __CFG_WDTCCS$SC 000000  
                             i2l1628 0140                               _OSCFRQ 000EDE  
                  ?_I2C1_MasterWrite 0060                     __end_of_bitWrite 061C  
                     __CFG_PWRTE$OFF 000000                       __CFG_XINST$OFF 000000  
                 ??_I2C1_MasterWrite 0045                     __end_of_mcpBegin 07D8  
          __CFG_RSTOSC$HFINTOSC_1MHZ 000000                       _p_i2c1_current 000A  
                     __CFG_STVREN$ON 000000           ??_I2C1_MasterWriteTRBBuild 0043  
                          ?_I2C1_ISR 0025                               clear_0 0866  
                             _status 0024     __size_of_I2C1_MasterReadTRBBuild 0050  
                     _PMD_Initialize 07FC                        _regForPin$673 003F  
                     ??_readRegister 0045                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
      I2C1_MasterWriteTRBBuild@pdata 003E        __size_of_INTERRUPT_Initialize 0004  
                  _SYSTEM_Initialize 0876                           __accesstop 0060  
            __end_of__initialization 086C                   ?_SYSTEM_Initialize 0025  
                      ___rparam_used 000001                       _i2c1_trb_count 0011  
             __size_of_writeRegister 0062                _I2C1_FunctionComplete 0848  
               _I2C1_BusCollisionISR 0894                       __pcstackCOMRAM 0025  
                 digitalRead@regAddr 006D               I2C1_MasterWrite@length 0062  
                ??_SYSTEM_Initialize 003C                   __size_of_bitForPin 0008  
                         ??_I2C1_ISR 0028               __end_of_PMD_Initialize 0818  
     I2C1_MasterReadTRBBuild@address 0041                   readRegister@result 0069  
          __end_of_SYSTEM_Initialize 088C                   __size_of_regForPin 0018  
              ?_I2C1_BusCollisionISR 0025                       _SSP1DATPPSbits 000EB8  
                    __CFG_PPS1WAY$ON 000000                      _I2C1_MasterRead 0666  
                    _I2C1_Initialize 0776                       _SSP1CLKPPSbits 000EB7  
                    ?_PMD_Initialize 0025                        _writeRegister 041A  
                            _OSCCON1 000ED8                              _OSCCON3 000EDA  
                          _I2C1_Stop 0738                            ?_bitWrite 003C  
                            _OSCTUNE 000EDD                              _SSP1ADD 000F93  
                            _SSP1BUF 000F92                            ?_mcpBegin 0025  
             updateRegisterBit@bitty 006D                         regForPin@pin 003E  
                  __end_of_bitForPin 0894                           _mcpPinMode 07D8  
      I2C1_MasterTRBInsert@ptrb_list 003C                              _i2caddr 000E  
             ?_I2C1_FunctionComplete 0025                              __Hparam 0000  
      __size_of_I2C1_MasterTRBInsert 00A2                              __Lparam 0000  
                 _p_i2c1_trb_current 000C                 __end_of_readRegister 04DE  
                            __pcinit 0860                              __ramtop 0F00  
            _I2C1_MasterReadTRBBuild 0534                              __ptext0 04DE  
                            __ptext1 07D8                              __ptext2 0584  
                            __ptext3 05D0                              __ptext4 07AA  
                            __ptext5 041A                              __ptext6 06B0  
                            __ptext7 0818                              __ptext8 047C  
                            __ptext9 061C                    __end_of_regForPin 0830  
                     ?_writeRegister 0045                _OSCILLATOR_Initialize 0830  
       I2C1_MasterReadTRBBuild@pdata 003E                 I2C1_MasterRead@pdata 0060  
               I2C1_MasterRead@pflag 0065             ??_PIN_MANAGER_Initialize 003C  
                         ?_I2C1_Stop 0025                           ??_bitWrite 003F  
         __size_of_SYSTEM_Initialize 0016                 I2C1_ISR@pi2c_buf_ptr 0008  
                         ??_mcpBegin 0048                 end_of_initialization 086C  
                     digitalRead@pin 006E              __end_of_I2C1_MasterRead 06B0  
             ??_I2C1_BusCollisionISR 0025              __end_of_I2C1_Initialize 07AA  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                        ??_digitalRead 006A  
              __CFG_WDTCPS$WDTCPS_31 000000            __size_of_I2C1_MasterWrite 004A  
                  __size_of_I2C1_ISR 0240                     __CFG_FEXTOSC$OFF 000000  
  I2C1_ISR@i2c_10bit_address_restart 000F             updateRegisterBit@regAddr 006F  
                        ?_mcpPinMode 0071              I2C1_MasterWrite@address 0063  
          ??_I2C1_MasterReadTRBBuild 0043         __end_of_INTERRUPT_Initialize 089E  
            I2C1_MasterWrite@trBlock 0018                      ??_writeRegister 0046  
           I2C1_Stop@completion_code 0027               ?_OSCILLATOR_Initialize 0025  
                start_initialization 0860                  __end_of_digitalRead 06F4  
                        ??_I2C1_Stop 0025      __size_of_PIN_MANAGER_Initialize 007A  
                   readRegister@addr 0067                     readRegister@data 0068  
  __size_of_I2C1_MasterWriteTRBBuild 0044            ?_I2C1_MasterWriteTRBBuild 003C  
              __size_of_readRegister 0062                     ?_I2C1_MasterRead 0060  
                   ?_I2C1_Initialize 0025                     __CFG_LPBOREN$OFF 000000  
                   ??_PMD_Initialize 003C                  __size_of_mcpPinMode 0024  
          updateRegisterBit@regValue 0070         I2C1_MasterWriteTRBBuild@ptrb 003C  
                        __pbssCOMRAM 0001                        __pcstackBANK0 0060  
                      _i2c1_tr_queue 001D                         _readRegister 047C  
                  __size_of_bitWrite 004C                         bitForPin@pin 003C  
            ??_I2C1_FunctionComplete 0025                    __size_of_mcpBegin 002E  
                          _bitForPin 088C               _PIN_MANAGER_Initialize 03A0  
                          __pintcode 0008                             _I2C1_ISR 00BE  
                        _digitalRead 06B0         ??_INTERRUPT_InterruptManager 002A  
                   _I2C1_MasterWrite 061C         __end_of_I2C1_MasterTRBInsert 03A0  
             I2C1_MasterRead@address 0063                            _regForPin 0818  
               _INTERRUPT_Initialize 089A          I2C1_MasterReadTRBBuild@ptrb 003C  
             I2C1_MasterRead@trBlock 0013                             _LATCbits 000F85  
                         ?_bitForPin 0025                             _PIE3bits 000EC5  
                          bitWrite@b 003E                            bitWrite@n 003C  
                          bitWrite@x 0041                  __CFG_BORV$VBOR_2P45 000000  
__size_of_INTERRUPT_InterruptManager 00B2                             _PIR3bits 000ECD  
                           _SSP1CON1 000F96                             _SSP1CON3 000F98  
                           _SSP1STAT 000F95              updateRegisterBit@pValue 006A  
                         ?_regForPin 003C                ?_INTERRUPT_Initialize 0025  
                       ??_mcpPinMode 0048                             __Hrparam 0000  
      __size_of_I2C1_BusCollisionISR 0006                             __Lrparam 0000  
                 __CFG_BOREN$SBORDIS 000000               I2C1_ISR@i2c_bytes_left 0010  
            ??_OSCILLATOR_Initialize 003C                     digitalRead@bitty 006C  
   __end_of_I2C1_MasterWriteTRBBuild 0738                   __end_of_mcpPinMode 07FC  
              writeRegister@regValue 0045                             _bitWrite 05D0  
                I2C1_ISR@i2c_address 0022                             __ptext10 06F4  
                           __ptext11 0666                             __ptext20 0776  
                           __ptext12 02FE                             __ptext13 0534  
                           __ptext22 00BE                             __ptext14 088C  
                           __ptext23 0738                             __ptext15 0876  
                           __ptext24 0848                             __ptext16 07FC  
                           __ptext25 0894                             __ptext17 03A0  
                           __ptext18 0830                             __ptext19 089A  
                       _SSP1CON1bits 000F96                         _SSP1CON2bits 000F97  
                           _mcpBegin 07AA                 updateRegisterBit@pin 006E  
                      __size_of_main 0056        I2C1_MasterReadTRBBuild@length 0040  
              I2C1_MasterRead@length 0062                          ??_bitForPin 003C  
         updateRegisterBit@portAaddr 006B           updateRegisterBit@portBaddr 006C  
               __CFG_WDTCWS$WDTCWS_7 000000                    writeRegister@data 0068  
               _I2C1_MasterTRBInsert 02FE                             int$flags 0048  
 __end_of_INTERRUPT_InterruptManager 00BA           _INTERRUPT_InterruptManager 0008  
              __end_of_writeRegister 047C                    _updateRegisterBit 0584  
                         _INTCONbits 000FF2                   ?_updateRegisterBit 006A  
                        ??_regForPin 003E               ??_INTERRUPT_Initialize 003C  
                           intlevel2 0000                 writeRegister@regAddr 0067  
                ??_updateRegisterBit 0048              ?_PIN_MANAGER_Initialize 0025  
           __end_of_I2C1_MasterWrite 0666                    __CFG_CLKOUTEN$OFF 000000  
     __size_of_I2C1_FunctionComplete 0018        __end_of_I2C1_FunctionComplete 0860  
              ?_I2C1_MasterTRBInsert 003C             ?_I2C1_MasterReadTRBBuild 003C  
           __size_of_I2C1_MasterRead 004A                         ?_digitalRead 0025  
           __size_of_I2C1_Initialize 0034            __end_of_updateRegisterBit 05D0  
           _I2C1_MasterWriteTRBBuild 06F4       __end_of_PIN_MANAGER_Initialize 041A  
                 __size_of_I2C1_Stop 003E  
