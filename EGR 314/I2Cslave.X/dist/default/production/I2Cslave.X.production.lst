

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 20 11:31:33 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F47K40 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _TX2REG	set	3738
    54  0000                     _RC2REG	set	3737
    55  0000                     _RC2STAbits	set	3741
    56  0000                     _TX2STAbits	set	3742
    57  0000                     _PIR3bits	set	3789
    58  0000                     _SP2BRGH	set	3740
    59  0000                     _SP2BRGL	set	3739
    60  0000                     _TX2STA	set	3742
    61  0000                     _RC2STA	set	3741
    62  0000                     _BAUD2CON	set	3743
    63  0000                     _RX2PPSbits	set	3725
    64  0000                     _PMD5	set	3814
    65  0000                     _PMD4	set	3813
    66  0000                     _PMD3	set	3812
    67  0000                     _PMD2	set	3811
    68  0000                     _PMD1	set	3810
    69  0000                     _PMD0	set	3809
    70  0000                     _OSCTUNE	set	3805
    71  0000                     _OSCFRQ	set	3806
    72  0000                     _OSCEN	set	3804
    73  0000                     _OSCCON3	set	3802
    74  0000                     _OSCCON1	set	3800
    75  0000                     _RD3PPS	set	3842
    76  0000                     _ODCOND	set	3876
    77  0000                     _ODCONC	set	3871
    78  0000                     _ODCONB	set	3863
    79  0000                     _ODCONA	set	3855
    80  0000                     _ODCONE	set	3884
    81  0000                     _WPUC	set	3872
    82  0000                     _WPUA	set	3856
    83  0000                     _WPUB	set	3864
    84  0000                     _WPUE	set	3885
    85  0000                     _WPUD	set	3877
    86  0000                     _ANSELA	set	3857
    87  0000                     _ANSELE	set	3886
    88  0000                     _ANSELD	set	3878
    89  0000                     _ANSELB	set	3865
    90  0000                     _ANSELC	set	3873
    91  0000                     _LATAbits	set	3971
    92  0000                     _TRISD	set	3979
    93  0000                     _TRISC	set	3978
    94  0000                     _TRISB	set	3977
    95  0000                     _TRISA	set	3976
    96  0000                     _TRISE	set	3980
    97  0000                     _LATC	set	3973
    98  0000                     _LATB	set	3972
    99  0000                     _LATA	set	3971
   100  0000                     _LATD	set	3974
   101  0000                     _LATE	set	3975
   102                           
   103                           ; #config settings
   104  0000                     
   105                           	psect	cinit
   106  01FEB8                     __pcinit:
   107                           	opt stack 0
   108  01FEB8                     start_initialization:
   109                           	opt stack 0
   110  01FEB8                     __initialization:
   111                           	opt stack 0
   112  01FEB8                     end_of_initialization:
   113                           	opt stack 0
   114  01FEB8                     __end_of__initialization:
   115                           	opt stack 0
   116  01FEB8  0100               	movlb	0
   117  01FEBA  EFA5  F0FF         	goto	_main	;jump to C main() function
   118                           
   119                           	psect	cstackCOMRAM
   120  000001                     __pcstackCOMRAM:
   121                           	opt stack 0
   122  000001                     EUSART2_Write@txData:
   123                           	opt stack 0
   124                           
   125                           ; 1 bytes @ 0x0
   126  000001                     	ds	1
   127  000002                     ??_main:
   128                           
   129                           ; 1 bytes @ 0x1
   130  000002                     	ds	1
   131  000003                     main@rec:
   132                           	opt stack 0
   133                           
   134                           ; 1 bytes @ 0x2
   135  000003                     	ds	1
   136                           
   137 ;;
   138 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   139 ;;
   140 ;; *************** function _main *****************
   141 ;; Defined at:
   142 ;;		line 48 in file "main.c"
   143 ;; Parameters:    Size  Location     Type
   144 ;;		None
   145 ;; Auto vars:     Size  Location     Type
   146 ;;  rec             1    2[COMRAM] unsigned char 
   147 ;; Return value:  Size  Location     Type
   148 ;;                  1    wreg      void 
   149 ;; Registers used:
   150 ;;		wreg, status,2, status,0, cstack
   151 ;; Tracked objects:
   152 ;;		On entry : 0/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   160 ;;Total ram usage:        2 bytes
   161 ;; Hardware stack levels required when called:    2
   162 ;; This function calls:
   163 ;;		_EUSART2_Initialize
   164 ;;		_EUSART2_Read
   165 ;;		_EUSART2_Write
   166 ;;		_EUSART2_is_rx_ready
   167 ;;		_SYSTEM_Initialize
   168 ;; This function is called by:
   169 ;;		Startup code after reset
   170 ;; This function uses a non-reentrant model
   171 ;;
   172                           
   173                           	psect	text0
   174  01FF4A                     __ptext0:
   175                           	opt stack 0
   176  01FF4A                     _main:
   177                           	opt stack 29
   178                           
   179                           ;main.c: 51: SYSTEM_Initialize();
   180                           
   181                           ;incstack = 0
   182  01FF4A  EC76  F0FF         	call	_SYSTEM_Initialize	;wreg free
   183                           
   184                           ;main.c: 69: EUSART2_Initialize();
   185  01FF4E  EC7F  F0FF         	call	_EUSART2_Initialize	;wreg free
   186                           
   187                           ;main.c: 71: while(!EUSART2_is_rx_ready()){
   188  01FF52  D008               	goto	l165
   189  01FF54                     
   190                           ;main.c: 73: _delay((unsigned long)((50)*(2000000/4000.0)));
   191  01FF54  0E21               	movlw	33
   192  01FF56  6E02               	movwf	??_main& (0+255),c
   193  01FF58  0E76               	movlw	118
   194  01FF5A                     u97:
   195  01FF5A  2EE8               	decfsz	wreg,f,c
   196  01FF5C  D7FE               	bra	u97
   197  01FF5E  2E02               	decfsz	??_main& (0+255),f,c
   198  01FF60  D7FC               	bra	u97
   199  01FF62  D000               	nop2	
   200  01FF64                     l165:
   201  01FF64  EC66  F0FF         	call	_EUSART2_is_rx_ready	;wreg free
   202  01FF68  0900               	iorlw	0
   203  01FF6A  B4D8               	btfsc	status,2,c
   204  01FF6C  D7F3               	goto	l166
   205                           
   206                           ;main.c: 74: }
   207                           ;main.c: 76: uint8_t rec = EUSART2_Read();
   208  01FF6E  EC6D  F0FF         	call	_EUSART2_Read	;wreg free
   209  01FF72  6E03               	movwf	main@rec,c
   210                           
   211                           ;main.c: 80: if(rec == 1)
   212  01FF74  0403               	decf	main@rec,w,c
   213  01FF76  B4D8               	btfsc	status,2,c
   214                           
   215                           ;main.c: 81: do { LATAbits.LATA4 = 1; } while(0);
   216  01FF78  8883               	bsf	3971,4,c	;volatile
   217  01FF7A                     
   218                           ;main.c: 86: {
   219                           ;main.c: 88: EUSART2_Write(64);
   220                           
   221                           ;main.c: 85: while (1)
   222  01FF7A  0E40               	movlw	64
   223  01FF7C  EC5F  F0FF         	call	_EUSART2_Write
   224                           
   225                           ;main.c: 90: _delay((unsigned long)((50)*(2000000/4000.0)));
   226  01FF80  0E21               	movlw	33
   227  01FF82  6E02               	movwf	??_main& (0+255),c
   228  01FF84  0E76               	movlw	118
   229  01FF86                     u107:
   230  01FF86  2EE8               	decfsz	wreg,f,c
   231  01FF88  D7FE               	bra	u107
   232  01FF8A  2E02               	decfsz	??_main& (0+255),f,c
   233  01FF8C  D7FC               	bra	u107
   234  01FF8E  D000               	nop2	
   235  01FF90  D7F4               	goto	l170
   236  01FF92                     __end_of_main:
   237                           	opt stack 0
   238                           wreg	equ	0xFE8
   239                           status	equ	0xFD8
   240                           
   241 ;; *************** function _SYSTEM_Initialize *****************
   242 ;; Defined at:
   243 ;;		line 116 in file "mcc_generated_files/mcc.c"
   244 ;; Parameters:    Size  Location     Type
   245 ;;		None
   246 ;; Auto vars:     Size  Location     Type
   247 ;;		None
   248 ;; Return value:  Size  Location     Type
   249 ;;                  1    wreg      void 
   250 ;; Registers used:
   251 ;;		wreg, status,2, cstack
   252 ;; Tracked objects:
   253 ;;		On entry : 0/0
   254 ;;		On exit  : 0/0
   255 ;;		Unchanged: 0/0
   256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   261 ;;Total ram usage:        0 bytes
   262 ;; Hardware stack levels used:    1
   263 ;; Hardware stack levels required when called:    1
   264 ;; This function calls:
   265 ;;		_EUSART2_Initialize
   266 ;;		_OSCILLATOR_Initialize
   267 ;;		_PIN_MANAGER_Initialize
   268 ;;		_PMD_Initialize
   269 ;; This function is called by:
   270 ;;		_main
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text1
   275  01FEEC                     __ptext1:
   276                           	opt stack 0
   277  01FEEC                     _SYSTEM_Initialize:
   278                           	opt stack 29
   279                           
   280                           ;mcc.c: 118: PMD_Initialize();
   281                           
   282                           ;incstack = 0
   283  01FEEC  EC97  F0FF         	call	_PMD_Initialize	;wreg free
   284                           
   285                           ;mcc.c: 119: PIN_MANAGER_Initialize();
   286  01FEF0  ECC9  F0FF         	call	_PIN_MANAGER_Initialize	;wreg free
   287                           
   288                           ;mcc.c: 120: OSCILLATOR_Initialize();
   289  01FEF4  EC8B  F0FF         	call	_OSCILLATOR_Initialize	;wreg free
   290                           
   291                           ;mcc.c: 121: EUSART2_Initialize();
   292  01FEF8  EC7F  F0FF         	call	_EUSART2_Initialize	;wreg free
   293  01FEFC  0012               	return		;funcret
   294  01FEFE                     __end_of_SYSTEM_Initialize:
   295                           	opt stack 0
   296                           wreg	equ	0xFE8
   297                           status	equ	0xFD8
   298                           
   299 ;; *************** function _PMD_Initialize *****************
   300 ;; Defined at:
   301 ;;		line 138 in file "mcc_generated_files/mcc.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		_SYSTEM_Initialize
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text2
   329  01FF2E                     __ptext2:
   330                           	opt stack 0
   331  01FF2E                     _PMD_Initialize:
   332                           	opt stack 29
   333                           
   334                           ;mcc.c: 141: PMD0 = 0x00;
   335                           
   336                           ;incstack = 0
   337  01FF2E  0E00               	movlw	0
   338  01FF30  010E               	movlb	14	; () banked
   339  01FF32  6FE1               	movwf	225,b	;volatile
   340                           
   341                           ;mcc.c: 143: PMD1 = 0x00;
   342  01FF34  0E00               	movlw	0
   343  01FF36  6FE2               	movwf	226,b	;volatile
   344                           
   345                           ;mcc.c: 145: PMD2 = 0x00;
   346  01FF38  0E00               	movlw	0
   347  01FF3A  6FE3               	movwf	227,b	;volatile
   348                           
   349                           ;mcc.c: 147: PMD3 = 0x00;
   350  01FF3C  0E00               	movlw	0
   351  01FF3E  6FE4               	movwf	228,b	;volatile
   352                           
   353                           ;mcc.c: 149: PMD4 = 0x00;
   354  01FF40  0E00               	movlw	0
   355  01FF42  6FE5               	movwf	229,b	;volatile
   356                           
   357                           ;mcc.c: 151: PMD5 = 0x00;
   358  01FF44  0E00               	movlw	0
   359  01FF46  6FE6               	movwf	230,b	;volatile
   360                           
   361                           ; BSR set to: 14
   362  01FF48  0012               	return		;funcret
   363  01FF4A                     __end_of_PMD_Initialize:
   364                           	opt stack 0
   365                           wreg	equ	0xFE8
   366                           status	equ	0xFD8
   367                           
   368 ;; *************** function _PIN_MANAGER_Initialize *****************
   369 ;; Defined at:
   370 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_SYSTEM_Initialize
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text3
   398  01FF92                     __ptext3:
   399                           	opt stack 0
   400  01FF92                     _PIN_MANAGER_Initialize:
   401                           	opt stack 29
   402                           
   403                           ;pin_manager.c: 57: LATE = 0x00;
   404                           
   405                           ; BSR set to: 14
   406                           ;incstack = 0
   407  01FF92  0E00               	movlw	0
   408  01FF94  6E87               	movwf	3975,c	;volatile
   409                           
   410                           ;pin_manager.c: 58: LATD = 0x00;
   411  01FF96  0E00               	movlw	0
   412  01FF98  6E86               	movwf	3974,c	;volatile
   413                           
   414                           ;pin_manager.c: 59: LATA = 0x00;
   415  01FF9A  0E00               	movlw	0
   416  01FF9C  6E83               	movwf	3971,c	;volatile
   417                           
   418                           ;pin_manager.c: 60: LATB = 0x00;
   419  01FF9E  0E00               	movlw	0
   420  01FFA0  6E84               	movwf	3972,c	;volatile
   421                           
   422                           ;pin_manager.c: 61: LATC = 0x00;
   423  01FFA2  0E00               	movlw	0
   424  01FFA4  6E85               	movwf	3973,c	;volatile
   425                           
   426                           ;pin_manager.c: 66: TRISE = 0x07;
   427  01FFA6  0E07               	movlw	7
   428  01FFA8  6E8C               	movwf	3980,c	;volatile
   429                           
   430                           ;pin_manager.c: 67: TRISA = 0xEF;
   431  01FFAA  0EEF               	movlw	239
   432  01FFAC  6E88               	movwf	3976,c	;volatile
   433                           
   434                           ;pin_manager.c: 68: TRISB = 0xFF;
   435  01FFAE  6889               	setf	3977,c	;volatile
   436                           
   437                           ;pin_manager.c: 69: TRISC = 0xFF;
   438  01FFB0  688A               	setf	3978,c	;volatile
   439                           
   440                           ;pin_manager.c: 70: TRISD = 0xF7;
   441  01FFB2  0EF7               	movlw	247
   442  01FFB4  6E8B               	movwf	3979,c	;volatile
   443                           
   444                           ;pin_manager.c: 75: ANSELC = 0xFF;
   445  01FFB6  010F               	movlb	15	; () banked
   446  01FFB8  6921               	setf	33,b	;volatile
   447                           
   448                           ; BSR set to: 15
   449                           ;pin_manager.c: 76: ANSELB = 0xFF;
   450  01FFBA  6919               	setf	25,b	;volatile
   451                           
   452                           ;pin_manager.c: 77: ANSELD = 0xFB;
   453  01FFBC  0EFB               	movlw	251
   454  01FFBE  6F26               	movwf	38,b	;volatile
   455                           
   456                           ;pin_manager.c: 78: ANSELE = 0x07;
   457  01FFC0  0E07               	movlw	7
   458  01FFC2  6F2E               	movwf	46,b	;volatile
   459                           
   460                           ; BSR set to: 15
   461                           ;pin_manager.c: 79: ANSELA = 0xFF;
   462  01FFC4  6911               	setf	17,b	;volatile
   463                           
   464                           ;pin_manager.c: 84: WPUD = 0x00;
   465  01FFC6  0E00               	movlw	0
   466  01FFC8  6F25               	movwf	37,b	;volatile
   467                           
   468                           ;pin_manager.c: 85: WPUE = 0x00;
   469  01FFCA  0E00               	movlw	0
   470  01FFCC  6F2D               	movwf	45,b	;volatile
   471                           
   472                           ;pin_manager.c: 86: WPUB = 0x00;
   473  01FFCE  0E00               	movlw	0
   474  01FFD0  6F18               	movwf	24,b	;volatile
   475                           
   476                           ;pin_manager.c: 87: WPUA = 0x00;
   477  01FFD2  0E00               	movlw	0
   478  01FFD4  6F10               	movwf	16,b	;volatile
   479                           
   480                           ;pin_manager.c: 88: WPUC = 0x00;
   481  01FFD6  0E00               	movlw	0
   482  01FFD8  6F20               	movwf	32,b	;volatile
   483                           
   484                           ;pin_manager.c: 93: ODCONE = 0x00;
   485  01FFDA  0E00               	movlw	0
   486  01FFDC  6F2C               	movwf	44,b	;volatile
   487                           
   488                           ;pin_manager.c: 94: ODCONA = 0x00;
   489  01FFDE  0E00               	movlw	0
   490  01FFE0  6F0F               	movwf	15,b	;volatile
   491                           
   492                           ;pin_manager.c: 95: ODCONB = 0x00;
   493  01FFE2  0E00               	movlw	0
   494  01FFE4  6F17               	movwf	23,b	;volatile
   495                           
   496                           ;pin_manager.c: 96: ODCONC = 0x00;
   497  01FFE6  0E00               	movlw	0
   498  01FFE8  6F1F               	movwf	31,b	;volatile
   499                           
   500                           ;pin_manager.c: 97: ODCOND = 0x00;
   501  01FFEA  0E00               	movlw	0
   502  01FFEC  6F24               	movwf	36,b	;volatile
   503                           
   504                           ;pin_manager.c: 104: RD3PPS = 0x0B;
   505  01FFEE  0E0B               	movlw	11
   506  01FFF0  6F02               	movwf	2,b	;volatile
   507                           
   508                           ; BSR set to: 15
   509                           ;pin_manager.c: 105: RX2PPSbits.RXPPS = 0x1A;
   510  01FFF2  010E               	movlb	14	; () banked
   511  01FFF4  918D               	bcf	141,0,b	;volatile
   512  01FFF6  838D               	bsf	141,1,b	;volatile
   513  01FFF8  958D               	bcf	141,2,b	;volatile
   514  01FFFA  878D               	bsf	141,3,b	;volatile
   515  01FFFC  898D               	bsf	141,4,b	;volatile
   516                           
   517                           ; BSR set to: 14
   518  01FFFE  0012               	return		;funcret
   519  020000                     __end_of_PIN_MANAGER_Initialize:
   520                           	opt stack 0
   521                           wreg	equ	0xFE8
   522                           status	equ	0xFD8
   523                           
   524 ;; *************** function _OSCILLATOR_Initialize *****************
   525 ;; Defined at:
   526 ;;		line 124 in file "mcc_generated_files/mcc.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, status,2
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used:    1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_SYSTEM_Initialize
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text4
   554  01FF16                     __ptext4:
   555                           	opt stack 0
   556  01FF16                     _OSCILLATOR_Initialize:
   557                           	opt stack 29
   558                           
   559                           ;mcc.c: 127: OSCCON1 = 0x62;
   560                           
   561                           ; BSR set to: 14
   562                           ;incstack = 0
   563  01FF16  0E62               	movlw	98
   564  01FF18  010E               	movlb	14	; () banked
   565  01FF1A  6FD8               	movwf	216,b	;volatile
   566                           
   567                           ;mcc.c: 129: OSCCON3 = 0x00;
   568  01FF1C  0E00               	movlw	0
   569  01FF1E  6FDA               	movwf	218,b	;volatile
   570                           
   571                           ;mcc.c: 131: OSCEN = 0x00;
   572  01FF20  0E00               	movlw	0
   573  01FF22  6FDC               	movwf	220,b	;volatile
   574                           
   575                           ;mcc.c: 133: OSCFRQ = 0x03;
   576  01FF24  0E03               	movlw	3
   577  01FF26  6FDE               	movwf	222,b	;volatile
   578                           
   579                           ;mcc.c: 135: OSCTUNE = 0x20;
   580  01FF28  0E20               	movlw	32
   581  01FF2A  6FDD               	movwf	221,b	;volatile
   582                           
   583                           ; BSR set to: 14
   584  01FF2C  0012               	return		;funcret
   585  01FF2E                     __end_of_OSCILLATOR_Initialize:
   586                           	opt stack 0
   587                           wreg	equ	0xFE8
   588                           status	equ	0xFD8
   589                           
   590 ;; *************** function _EUSART2_Initialize *****************
   591 ;; Defined at:
   592 ;;		line 55 in file "mcc_generated_files/eusart2.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_SYSTEM_Initialize
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text5
   621  01FEFE                     __ptext5:
   622                           	opt stack 0
   623  01FEFE                     _EUSART2_Initialize:
   624                           	opt stack 29
   625                           
   626                           ;eusart2.c: 60: BAUD2CON = 0x08;
   627                           
   628                           ; BSR set to: 14
   629                           ;incstack = 0
   630  01FEFE  0E08               	movlw	8
   631  01FF00  010E               	movlb	14	; () banked
   632  01FF02  6F9F               	movwf	159,b	;volatile
   633                           
   634                           ;eusart2.c: 63: RC2STA = 0x90;
   635  01FF04  0E90               	movlw	144
   636  01FF06  6F9D               	movwf	157,b	;volatile
   637                           
   638                           ;eusart2.c: 66: TX2STA = 0x24;
   639  01FF08  0E24               	movlw	36
   640  01FF0A  6F9E               	movwf	158,b	;volatile
   641                           
   642                           ;eusart2.c: 69: SP2BRGL = 0x33;
   643  01FF0C  0E33               	movlw	51
   644  01FF0E  6F9B               	movwf	155,b	;volatile
   645                           
   646                           ;eusart2.c: 72: SP2BRGH = 0x00;
   647  01FF10  0E00               	movlw	0
   648  01FF12  6F9C               	movwf	156,b	;volatile
   649                           
   650                           ; BSR set to: 14
   651  01FF14  0012               	return		;funcret
   652  01FF16                     __end_of_EUSART2_Initialize:
   653                           	opt stack 0
   654                           wreg	equ	0xFE8
   655                           status	equ	0xFD8
   656                           
   657 ;; *************** function _EUSART2_is_rx_ready *****************
   658 ;; Defined at:
   659 ;;		line 82 in file "mcc_generated_files/eusart2.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      unsigned char 
   666 ;; Registers used:
   667 ;;		wreg
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   677 ;;Total ram usage:        0 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text6
   687  01FECC                     __ptext6:
   688                           	opt stack 0
   689  01FECC                     _EUSART2_is_rx_ready:
   690                           	opt stack 30
   691                           
   692                           ;eusart2.c: 84: return PIR3bits.RC2IF;
   693                           
   694                           ; BSR set to: 14
   695                           ;incstack = 0
   696  01FECC  010E               	movlb	14	; () banked
   697  01FECE  AFCD               	btfss	205,7,b	;volatile
   698  01FED0  D002               	goto	u10
   699  01FED2  0E01               	movlw	1
   700  01FED4  0012               	return	
   701  01FED6                     u10:
   702  01FED6  0E00               	movlw	0
   703  01FED8  0012               	return	
   704  01FEDA                     __end_of_EUSART2_is_rx_ready:
   705                           	opt stack 0
   706                           wreg	equ	0xFE8
   707                           status	equ	0xFD8
   708                           
   709 ;; *************** function _EUSART2_Write *****************
   710 ;; Defined at:
   711 ;;		line 111 in file "mcc_generated_files/eusart2.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  txData          1    wreg     unsigned char 
   714 ;; Auto vars:     Size  Location     Type
   715 ;;  txData          1    0[COMRAM] unsigned char 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;Total ram usage:        1 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; This function calls:
   732 ;;		Nothing
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text7
   739  01FEBE                     __ptext7:
   740                           	opt stack 0
   741  01FEBE                     _EUSART2_Write:
   742                           	opt stack 30
   743                           
   744                           ; BSR set to: 14
   745                           ;incstack = 0
   746                           ;EUSART2_Write@txData stored from wreg
   747  01FEBE  6E01               	movwf	EUSART2_Write@txData,c
   748  01FEC0                     
   749                           ;eusart2.c: 114: {
   750                           
   751                           ;eusart2.c: 113: while(0 == PIR3bits.TX2IF)
   752  01FEC0  010E               	movlb	14	; () banked
   753  01FEC2  ADCD               	btfss	205,6,b	;volatile
   754  01FEC4  D7FD               	goto	l830
   755                           
   756                           ; BSR set to: 14
   757                           ;eusart2.c: 115: }
   758                           ;eusart2.c: 117: TX2REG = txData;
   759                           
   760                           ; BSR set to: 14
   761  01FEC6  C001  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
   762                           
   763                           ; BSR set to: 14
   764  01FECA  0012               	return		;funcret
   765  01FECC                     __end_of_EUSART2_Write:
   766                           	opt stack 0
   767                           wreg	equ	0xFE8
   768                           status	equ	0xFD8
   769                           
   770 ;; *************** function _EUSART2_Read *****************
   771 ;; Defined at:
   772 ;;		line 92 in file "mcc_generated_files/eusart2.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      unsigned char 
   779 ;; Registers used:
   780 ;;		wreg, status,2
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text8
   800  01FEDA                     __ptext8:
   801                           	opt stack 0
   802  01FEDA                     _EUSART2_Read:
   803                           	opt stack 30
   804                           
   805                           ;eusart2.c: 96: {
   806                           
   807                           ;eusart2.c: 95: while(!PIR3bits.RC2IF)
   808                           
   809                           ; BSR set to: 14
   810                           ;incstack = 0
   811  01FEDA  010E               	movlb	14	; () banked
   812  01FEDC  AFCD               	btfss	205,7,b	;volatile
   813  01FEDE  D7FD               	goto	_EUSART2_Read
   814                           
   815                           ; BSR set to: 14
   816                           ;eusart2.c: 97: }
   817                           ;eusart2.c: 100: if(1 == RC2STAbits.OERR)
   818  01FEE0  A39D               	btfss	157,1,b	;volatile
   819  01FEE2  D002               	goto	l139
   820                           
   821                           ; BSR set to: 14
   822                           ;eusart2.c: 101: {
   823                           ;eusart2.c: 104: RC2STAbits.SPEN = 0;
   824  01FEE4  9F9D               	bcf	157,7,b	;volatile
   825                           
   826                           ;eusart2.c: 105: RC2STAbits.SPEN = 1;
   827  01FEE6  8F9D               	bsf	157,7,b	;volatile
   828  01FEE8                     l139:
   829                           
   830                           ; BSR set to: 14
   831                           ;eusart2.c: 106: }
   832                           ;eusart2.c: 108: return RC2REG;
   833                           
   834                           ; BSR set to: 14
   835  01FEE8  5199               	movf	153,w,b	;volatile
   836  01FEEA  0012               	return	
   837  01FEEC                     __end_of_EUSART2_Read:
   838                           	opt stack 0
   839  0000                     wreg	equ	0xFE8
   840                           status	equ	0xFD8
   841                           wreg	equ	0xFE8
   842                           status	equ	0xFD8
   843                           
   844                           	psect	rparam
   845  0000                     wreg	equ	0xFE8
   846                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_EUSART2_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              1 COMRAM     2     2      0
                 _EUSART2_Initialize
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART2_Initialize
   _EUSART2_Read
   _EUSART2_Write
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EUSART2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BIGRAM             E87      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 20 11:31:33 2018

                    __CFG_CP$OFF 000000                               u10 FED6  
                             u97 FF5A                      __CFG_LVP$ON 000000  
                            l170 FF7A                              l139 FEE8  
                            l165 FF64                              l166 FF54  
                            l830 FEC0                              u107 FF86  
                   __CFG_CPD$OFF 000000          __size_of_PMD_Initialize 001C  
                            wreg 000FE8                     __CFG_ZCD$OFF 000000  
                           _LATA 000F83                             _LATB 000F84  
                           _LATC 000F85                             _LATD 000F86  
                           _LATE 000F87                             _PMD0 000EE1  
                           _PMD1 000EE2                             _PMD2 000EE3  
                           _PMD3 000EE4                             _PMD4 000EE5  
                           _PMD5 000EE6                             _WPUA 000F10  
                           _WPUB 000F18                             _WPUC 000F20  
                           _WPUD 000F25                             _WPUE 000F2D  
                  __CFG_FCMEN$ON 000000                    _EUSART2_Write FEBE  
                           _main FF4A                    ?_EUSART2_Read 0001  
                           start 0000                    __CFG_CSWEN$ON 000000  
                   ___param_bank 000000                    __CFG_SCANE$ON 000000  
 __size_of_OSCILLATOR_Initialize 0018    __end_of_OSCILLATOR_Initialize FF2E  
                          ?_main 0001                    __CFG_WDTE$OFF 000000  
                 __CFG_DEBUG$OFF 000000                            _OSCEN 000EDC  
                          _TRISA 000F88                            _TRISB 000F89  
                          _TRISC 000F8A                            _TRISD 000F8B  
                          _TRISE 000F8C                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                    __CFG_WRT4$OFF 000000  
                  __CFG_WRT5$OFF 000000                    __CFG_WRT6$OFF 000000  
                  __CFG_WRT7$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                   __CFG_EBTR4$OFF 000000  
                 __CFG_EBTR5$OFF 000000                   __CFG_EBTR6$OFF 000000  
                 __CFG_EBTR7$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000               __CFG_MCLRE$EXTMCLR 000000  
                 ?_EUSART2_Write 0001                   ??_EUSART2_Read 0001  
                          status 000FD8                  __initialization FEB8  
                   __end_of_main FF92                           ??_main 0002  
                  __activetblptr 000000       __end_of_EUSART2_Initialize FF16  
                         _ANSELA 000F11                           _ANSELB 000F19  
                         _ANSELC 000F21                           _ANSELD 000F26  
                         _ANSELE 000F2E                           _RC2REG 000E99  
                         _RC2STA 000E9D                           _RD3PPS 000F02  
                         _ODCONA 000F0F                           _ODCONB 000F17  
                         _ODCONC 000F1F                           _ODCOND 000F24  
                         _ODCONE 000F2C                   __CFG_WDTCCS$SC 000000  
                         _OSCFRQ 000EDE                           _TX2REG 000E9A  
                         _TX2STA 000E9E                   __CFG_PWRTE$OFF 000000  
                 __CFG_XINST$OFF 000000        __CFG_RSTOSC$HFINTOSC_1MHZ 000000  
                 __CFG_STVREN$ON 000000                   _PMD_Initialize FF2E  
                ??_EUSART2_Write 0001     __size_of_EUSART2_is_rx_ready 000E  
              _SYSTEM_Initialize FEEC                       __accesstop 0060  
        __end_of__initialization FEB8               ?_SYSTEM_Initialize 0001  
                  ___rparam_used 000001                   __pcstackCOMRAM 0001  
            ??_SYSTEM_Initialize 0001           __end_of_PMD_Initialize FF4A  
           __end_of_EUSART2_Read FEEC        __end_of_SYSTEM_Initialize FEFE  
                __CFG_PPS1WAY$ON 000000                  ?_PMD_Initialize 0001  
                        _SP2BRGH 000E9C                          _SP2BRGL 000E9B  
                        _OSCCON1 000ED8                          _OSCCON3 000EDA  
                        _OSCTUNE 000EDD                          __Hparam 0000  
                        __Lparam 0000                          __pcinit FEB8  
                        __ramtop 0F00                          __ptext0 FF4A  
                        __ptext1 FEEC                          __ptext2 FF2E  
                        __ptext3 FF92                          __ptext4 FF16  
                        __ptext5 FEFE                          __ptext6 FECC  
                        __ptext7 FEBE                          __ptext8 FEDA  
          _OSCILLATOR_Initialize FF16         ??_PIN_MANAGER_Initialize 0001  
     __size_of_SYSTEM_Initialize 0012                          main@rec 0003  
           end_of_initialization FEB8               _EUSART2_Initialize FEFE  
          __size_of_EUSART2_Read 0012            __CFG_WDTCPS$WDTCPS_31 000000  
            ?_EUSART2_Initialize 0001              _EUSART2_is_rx_ready FECC  
               __CFG_FEXTOSC$OFF 000000             ??_EUSART2_Initialize 0001  
           ?_EUSART2_is_rx_ready 0001                     _EUSART2_Read FEDA  
         ?_OSCILLATOR_Initialize 0001              start_initialization FEB8  
__size_of_PIN_MANAGER_Initialize 006E            ??_EUSART2_is_rx_ready 0001  
          __end_of_EUSART2_Write FECC                 __CFG_LPBOREN$OFF 000000  
               ??_PMD_Initialize 0001              EUSART2_Write@txData 0001  
         _PIN_MANAGER_Initialize FF92                         _BAUD2CON 000E9F  
                       _LATAbits 000F83              __CFG_BORV$VBOR_2P45 000000  
                       _PIR3bits 000ECD                         __Hrparam 0000  
                       __Lrparam 0000               __CFG_BOREN$SBORDIS 000000  
        ??_OSCILLATOR_Initialize 0001      __size_of_EUSART2_Initialize 0018  
                  __size_of_main 0048             __CFG_WDTCWS$WDTCWS_7 000000  
                     _RC2STAbits 000E9D      __end_of_EUSART2_is_rx_ready FEDA  
        ?_PIN_MANAGER_Initialize 0001                __CFG_CLKOUTEN$OFF 000000  
         __size_of_EUSART2_Write 000E                       _RX2PPSbits 000E8D  
                     _TX2STAbits 000E9E   __end_of_PIN_MANAGER_Initialize 0000  
