

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 20 11:06:42 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F47K40 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _TX2REG	set	3738
    54  0000                     _RC2REG	set	3737
    55  0000                     _RC2STAbits	set	3741
    56  0000                     _TX2STAbits	set	3742
    57  0000                     _PIR3bits	set	3789
    58  0000                     _SP2BRGH	set	3740
    59  0000                     _SP2BRGL	set	3739
    60  0000                     _TX2STA	set	3742
    61  0000                     _RC2STA	set	3741
    62  0000                     _BAUD2CON	set	3743
    63  0000                     _RX2PPSbits	set	3725
    64  0000                     _RB6PPS	set	3829
    65  0000                     _PMD5	set	3814
    66  0000                     _PMD4	set	3813
    67  0000                     _PMD3	set	3812
    68  0000                     _PMD2	set	3811
    69  0000                     _PMD1	set	3810
    70  0000                     _PMD0	set	3809
    71  0000                     _OSCTUNE	set	3805
    72  0000                     _OSCFRQ	set	3806
    73  0000                     _OSCEN	set	3804
    74  0000                     _OSCCON3	set	3802
    75  0000                     _OSCCON1	set	3800
    76  0000                     _RD7PPS	set	3846
    77  0000                     _ODCOND	set	3876
    78  0000                     _ODCONC	set	3871
    79  0000                     _ODCONB	set	3863
    80  0000                     _ODCONA	set	3855
    81  0000                     _ODCONE	set	3884
    82  0000                     _WPUC	set	3872
    83  0000                     _WPUA	set	3856
    84  0000                     _WPUB	set	3864
    85  0000                     _WPUE	set	3885
    86  0000                     _WPUD	set	3877
    87  0000                     _ANSELA	set	3857
    88  0000                     _ANSELE	set	3886
    89  0000                     _ANSELD	set	3878
    90  0000                     _ANSELB	set	3865
    91  0000                     _ANSELC	set	3873
    92  0000                     _LATAbits	set	3971
    93  0000                     _TRISD	set	3979
    94  0000                     _TRISC	set	3978
    95  0000                     _TRISB	set	3977
    96  0000                     _TRISA	set	3976
    97  0000                     _TRISE	set	3980
    98  0000                     _LATC	set	3973
    99  0000                     _LATB	set	3972
   100  0000                     _LATA	set	3971
   101  0000                     _LATD	set	3974
   102  0000                     _LATE	set	3975
   103                           
   104                           ; #config settings
   105  0000                     
   106                           	psect	cinit
   107  01FEBE                     __pcinit:
   108                           	opt stack 0
   109  01FEBE                     start_initialization:
   110                           	opt stack 0
   111  01FEBE                     __initialization:
   112                           	opt stack 0
   113  01FEBE                     end_of_initialization:
   114                           	opt stack 0
   115  01FEBE                     __end_of__initialization:
   116                           	opt stack 0
   117  01FEBE  0100               	movlb	0
   118  01FEC0  EFA8  F0FF         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	cstackCOMRAM
   121  000001                     __pcstackCOMRAM:
   122                           	opt stack 0
   123  000001                     EUSART2_Write@txData:
   124                           	opt stack 0
   125                           
   126                           ; 1 bytes @ 0x0
   127  000001                     	ds	1
   128  000002                     ??_main:
   129                           
   130                           ; 1 bytes @ 0x1
   131  000002                     	ds	1
   132  000003                     main@rec:
   133                           	opt stack 0
   134                           
   135                           ; 1 bytes @ 0x2
   136  000003                     	ds	1
   137                           
   138 ;;
   139 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   140 ;;
   141 ;; *************** function _main *****************
   142 ;; Defined at:
   143 ;;		line 48 in file "main.c"
   144 ;; Parameters:    Size  Location     Type
   145 ;;		None
   146 ;; Auto vars:     Size  Location     Type
   147 ;;  rec             1    2[COMRAM] unsigned char 
   148 ;; Return value:  Size  Location     Type
   149 ;;                  1    wreg      void 
   150 ;; Registers used:
   151 ;;		wreg, status,2, cstack
   152 ;; Tracked objects:
   153 ;;		On entry : 0/0
   154 ;;		On exit  : 0/0
   155 ;;		Unchanged: 0/0
   156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   161 ;;Total ram usage:        2 bytes
   162 ;; Hardware stack levels required when called:    2
   163 ;; This function calls:
   164 ;;		_EUSART2_Initialize
   165 ;;		_EUSART2_Read
   166 ;;		_EUSART2_Write
   167 ;;		_EUSART2_is_rx_ready
   168 ;;		_SYSTEM_Initialize
   169 ;; This function is called by:
   170 ;;		Startup code after reset
   171 ;; This function uses a non-reentrant model
   172 ;;
   173                           
   174                           	psect	text0
   175  01FF50                     __ptext0:
   176                           	opt stack 0
   177  01FF50                     _main:
   178                           	opt stack 29
   179                           
   180                           ;main.c: 51: SYSTEM_Initialize();
   181                           
   182                           ;incstack = 0
   183  01FF50  EC79  F0FF         	call	_SYSTEM_Initialize	;wreg free
   184                           
   185                           ;main.c: 69: EUSART2_Initialize();
   186  01FF54  EC82  F0FF         	call	_EUSART2_Initialize	;wreg free
   187                           
   188                           ;main.c: 71: uint8_t rec = 0;
   189  01FF58  0E00               	movlw	0
   190  01FF5A  6E03               	movwf	main@rec,c
   191  01FF5C                     
   192                           ;main.c: 74: {
   193                           ;main.c: 76: EUSART2_Write(128);
   194  01FF5C  0E80               	movlw	128
   195  01FF5E  EC62  F0FF         	call	_EUSART2_Write
   196                           
   197                           ;main.c: 78: if(EUSART2_is_rx_ready())
   198  01FF62  EC69  F0FF         	call	_EUSART2_is_rx_ready	;wreg free
   199  01FF66  0900               	iorlw	0
   200  01FF68  B4D8               	btfsc	status,2,c
   201  01FF6A  D003               	goto	l121
   202                           
   203                           ;main.c: 79: rec = EUSART2_Read();
   204  01FF6C  EC70  F0FF         	call	_EUSART2_Read	;wreg free
   205  01FF70  6E03               	movwf	main@rec,c
   206  01FF72                     l121:
   207                           
   208                           ;main.c: 80: if(rec > 0)
   209  01FF72  5003               	movf	main@rec,w,c
   210  01FF74  A4D8               	btfss	status,2,c
   211                           
   212                           ;main.c: 81: do { LATAbits.LATA2 = 0; } while(0);
   213  01FF76  9483               	bcf	3971,2,c	;volatile
   214                           
   215                           ;main.c: 82: _delay((unsigned long)((50)*(2000000/4000.0)));
   216  01FF78  0E21               	movlw	33
   217  01FF7A  6E02               	movwf	??_main& (0+255),c
   218  01FF7C  0E76               	movlw	118
   219  01FF7E                     u97:
   220  01FF7E  2EE8               	decfsz	wreg,f,c
   221  01FF80  D7FE               	bra	u97
   222  01FF82  2E02               	decfsz	??_main& (0+255),f,c
   223  01FF84  D7FC               	bra	u97
   224  01FF86  D000               	nop2	
   225  01FF88  D7E9               	goto	l120
   226  01FF8A                     __end_of_main:
   227                           	opt stack 0
   228                           wreg	equ	0xFE8
   229                           status	equ	0xFD8
   230                           
   231 ;; *************** function _SYSTEM_Initialize *****************
   232 ;; Defined at:
   233 ;;		line 116 in file "mcc_generated_files/mcc.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;		None
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      void 
   240 ;; Registers used:
   241 ;;		wreg, status,2, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   251 ;;Total ram usage:        0 bytes
   252 ;; Hardware stack levels used:    1
   253 ;; Hardware stack levels required when called:    1
   254 ;; This function calls:
   255 ;;		_EUSART2_Initialize
   256 ;;		_OSCILLATOR_Initialize
   257 ;;		_PIN_MANAGER_Initialize
   258 ;;		_PMD_Initialize
   259 ;; This function is called by:
   260 ;;		_main
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text1
   265  01FEF2                     __ptext1:
   266                           	opt stack 0
   267  01FEF2                     _SYSTEM_Initialize:
   268                           	opt stack 29
   269                           
   270                           ;mcc.c: 118: PMD_Initialize();
   271                           
   272                           ;incstack = 0
   273  01FEF2  EC9A  F0FF         	call	_PMD_Initialize	;wreg free
   274                           
   275                           ;mcc.c: 119: PIN_MANAGER_Initialize();
   276  01FEF6  ECC5  F0FF         	call	_PIN_MANAGER_Initialize	;wreg free
   277                           
   278                           ;mcc.c: 120: OSCILLATOR_Initialize();
   279  01FEFA  EC8E  F0FF         	call	_OSCILLATOR_Initialize	;wreg free
   280                           
   281                           ;mcc.c: 121: EUSART2_Initialize();
   282  01FEFE  EC82  F0FF         	call	_EUSART2_Initialize	;wreg free
   283  01FF02  0012               	return		;funcret
   284  01FF04                     __end_of_SYSTEM_Initialize:
   285                           	opt stack 0
   286                           wreg	equ	0xFE8
   287                           status	equ	0xFD8
   288                           
   289 ;; *************** function _PMD_Initialize *****************
   290 ;; Defined at:
   291 ;;		line 138 in file "mcc_generated_files/mcc.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, status,2
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels used:    1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_SYSTEM_Initialize
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text2
   319  01FF34                     __ptext2:
   320                           	opt stack 0
   321  01FF34                     _PMD_Initialize:
   322                           	opt stack 29
   323                           
   324                           ;mcc.c: 141: PMD0 = 0x00;
   325                           
   326                           ;incstack = 0
   327  01FF34  0E00               	movlw	0
   328  01FF36  010E               	movlb	14	; () banked
   329  01FF38  6FE1               	movwf	225,b	;volatile
   330                           
   331                           ;mcc.c: 143: PMD1 = 0x00;
   332  01FF3A  0E00               	movlw	0
   333  01FF3C  6FE2               	movwf	226,b	;volatile
   334                           
   335                           ;mcc.c: 145: PMD2 = 0x00;
   336  01FF3E  0E00               	movlw	0
   337  01FF40  6FE3               	movwf	227,b	;volatile
   338                           
   339                           ;mcc.c: 147: PMD3 = 0x00;
   340  01FF42  0E00               	movlw	0
   341  01FF44  6FE4               	movwf	228,b	;volatile
   342                           
   343                           ;mcc.c: 149: PMD4 = 0x00;
   344  01FF46  0E00               	movlw	0
   345  01FF48  6FE5               	movwf	229,b	;volatile
   346                           
   347                           ;mcc.c: 151: PMD5 = 0x00;
   348  01FF4A  0E00               	movlw	0
   349  01FF4C  6FE6               	movwf	230,b	;volatile
   350                           
   351                           ; BSR set to: 14
   352  01FF4E  0012               	return		;funcret
   353  01FF50                     __end_of_PMD_Initialize:
   354                           	opt stack 0
   355                           wreg	equ	0xFE8
   356                           status	equ	0xFD8
   357                           
   358 ;; *************** function _PIN_MANAGER_Initialize *****************
   359 ;; Defined at:
   360 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels used:    1
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_SYSTEM_Initialize
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text3
   388  01FF8A                     __ptext3:
   389                           	opt stack 0
   390  01FF8A                     _PIN_MANAGER_Initialize:
   391                           	opt stack 29
   392                           
   393                           ;pin_manager.c: 57: LATE = 0x00;
   394                           
   395                           ; BSR set to: 14
   396                           ;incstack = 0
   397  01FF8A  0E00               	movlw	0
   398  01FF8C  6E87               	movwf	3975,c	;volatile
   399                           
   400                           ;pin_manager.c: 58: LATD = 0x00;
   401  01FF8E  0E00               	movlw	0
   402  01FF90  6E86               	movwf	3974,c	;volatile
   403                           
   404                           ;pin_manager.c: 59: LATA = 0x14;
   405  01FF92  0E14               	movlw	20
   406  01FF94  6E83               	movwf	3971,c	;volatile
   407                           
   408                           ;pin_manager.c: 60: LATB = 0x00;
   409  01FF96  0E00               	movlw	0
   410  01FF98  6E84               	movwf	3972,c	;volatile
   411                           
   412                           ;pin_manager.c: 61: LATC = 0x20;
   413  01FF9A  0E20               	movlw	32
   414  01FF9C  6E85               	movwf	3973,c	;volatile
   415                           
   416                           ;pin_manager.c: 66: TRISE = 0x07;
   417  01FF9E  0E07               	movlw	7
   418  01FFA0  6E8C               	movwf	3980,c	;volatile
   419                           
   420                           ;pin_manager.c: 67: TRISA = 0xEB;
   421  01FFA2  0EEB               	movlw	235
   422  01FFA4  6E88               	movwf	3976,c	;volatile
   423                           
   424                           ;pin_manager.c: 68: TRISB = 0xBD;
   425  01FFA6  0EBD               	movlw	189
   426  01FFA8  6E89               	movwf	3977,c	;volatile
   427                           
   428                           ;pin_manager.c: 69: TRISC = 0xDF;
   429  01FFAA  0EDF               	movlw	223
   430  01FFAC  6E8A               	movwf	3978,c	;volatile
   431                           
   432                           ;pin_manager.c: 70: TRISD = 0x7F;
   433  01FFAE  0E7F               	movlw	127
   434  01FFB0  6E8B               	movwf	3979,c	;volatile
   435                           
   436                           ;pin_manager.c: 75: ANSELC = 0xFF;
   437  01FFB2  010F               	movlb	15	; () banked
   438  01FFB4  6921               	setf	33,b	;volatile
   439                           
   440                           ; BSR set to: 15
   441                           ;pin_manager.c: 76: ANSELB = 0xFF;
   442  01FFB6  6919               	setf	25,b	;volatile
   443                           
   444                           ;pin_manager.c: 77: ANSELD = 0xF7;
   445  01FFB8  0EF7               	movlw	247
   446  01FFBA  6F26               	movwf	38,b	;volatile
   447                           
   448                           ;pin_manager.c: 78: ANSELE = 0x07;
   449  01FFBC  0E07               	movlw	7
   450  01FFBE  6F2E               	movwf	46,b	;volatile
   451                           
   452                           ; BSR set to: 15
   453                           ;pin_manager.c: 79: ANSELA = 0xFF;
   454  01FFC0  6911               	setf	17,b	;volatile
   455                           
   456                           ;pin_manager.c: 84: WPUD = 0x80;
   457  01FFC2  0E80               	movlw	128
   458  01FFC4  6F25               	movwf	37,b	;volatile
   459                           
   460                           ;pin_manager.c: 85: WPUE = 0x00;
   461  01FFC6  0E00               	movlw	0
   462  01FFC8  6F2D               	movwf	45,b	;volatile
   463                           
   464                           ;pin_manager.c: 86: WPUB = 0x00;
   465  01FFCA  0E00               	movlw	0
   466  01FFCC  6F18               	movwf	24,b	;volatile
   467                           
   468                           ;pin_manager.c: 87: WPUA = 0x00;
   469  01FFCE  0E00               	movlw	0
   470  01FFD0  6F10               	movwf	16,b	;volatile
   471                           
   472                           ;pin_manager.c: 88: WPUC = 0x00;
   473  01FFD2  0E00               	movlw	0
   474  01FFD4  6F20               	movwf	32,b	;volatile
   475                           
   476                           ;pin_manager.c: 93: ODCONE = 0x00;
   477  01FFD6  0E00               	movlw	0
   478  01FFD8  6F2C               	movwf	44,b	;volatile
   479                           
   480                           ;pin_manager.c: 94: ODCONA = 0x00;
   481  01FFDA  0E00               	movlw	0
   482  01FFDC  6F0F               	movwf	15,b	;volatile
   483                           
   484                           ;pin_manager.c: 95: ODCONB = 0x00;
   485  01FFDE  0E00               	movlw	0
   486  01FFE0  6F17               	movwf	23,b	;volatile
   487                           
   488                           ;pin_manager.c: 96: ODCONC = 0x00;
   489  01FFE2  0E00               	movlw	0
   490  01FFE4  6F1F               	movwf	31,b	;volatile
   491                           
   492                           ;pin_manager.c: 97: ODCOND = 0x00;
   493  01FFE6  0E00               	movlw	0
   494  01FFE8  6F24               	movwf	36,b	;volatile
   495                           
   496                           ;pin_manager.c: 104: RD7PPS = 0x0B;
   497  01FFEA  0E0B               	movlw	11
   498  01FFEC  6F06               	movwf	6,b	;volatile
   499                           
   500                           ;pin_manager.c: 105: RB6PPS = 0x0B;
   501  01FFEE  0E0B               	movlw	11
   502  01FFF0  010E               	movlb	14	; () banked
   503  01FFF2  6FF5               	movwf	245,b	;volatile
   504                           
   505                           ; BSR set to: 14
   506                           ;pin_manager.c: 106: RX2PPSbits.RXPPS = 0x1B;
   507  01FFF4  818D               	bsf	141,0,b	;volatile
   508  01FFF6  838D               	bsf	141,1,b	;volatile
   509  01FFF8  958D               	bcf	141,2,b	;volatile
   510  01FFFA  878D               	bsf	141,3,b	;volatile
   511  01FFFC  898D               	bsf	141,4,b	;volatile
   512                           
   513                           ; BSR set to: 14
   514  01FFFE  0012               	return		;funcret
   515  020000                     __end_of_PIN_MANAGER_Initialize:
   516                           	opt stack 0
   517                           wreg	equ	0xFE8
   518                           status	equ	0xFD8
   519                           
   520 ;; *************** function _OSCILLATOR_Initialize *****************
   521 ;; Defined at:
   522 ;;		line 124 in file "mcc_generated_files/mcc.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_SYSTEM_Initialize
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text4
   550  01FF1C                     __ptext4:
   551                           	opt stack 0
   552  01FF1C                     _OSCILLATOR_Initialize:
   553                           	opt stack 29
   554                           
   555                           ;mcc.c: 127: OSCCON1 = 0x62;
   556                           
   557                           ; BSR set to: 14
   558                           ;incstack = 0
   559  01FF1C  0E62               	movlw	98
   560  01FF1E  010E               	movlb	14	; () banked
   561  01FF20  6FD8               	movwf	216,b	;volatile
   562                           
   563                           ;mcc.c: 129: OSCCON3 = 0x00;
   564  01FF22  0E00               	movlw	0
   565  01FF24  6FDA               	movwf	218,b	;volatile
   566                           
   567                           ;mcc.c: 131: OSCEN = 0x00;
   568  01FF26  0E00               	movlw	0
   569  01FF28  6FDC               	movwf	220,b	;volatile
   570                           
   571                           ;mcc.c: 133: OSCFRQ = 0x03;
   572  01FF2A  0E03               	movlw	3
   573  01FF2C  6FDE               	movwf	222,b	;volatile
   574                           
   575                           ;mcc.c: 135: OSCTUNE = 0x20;
   576  01FF2E  0E20               	movlw	32
   577  01FF30  6FDD               	movwf	221,b	;volatile
   578                           
   579                           ; BSR set to: 14
   580  01FF32  0012               	return		;funcret
   581  01FF34                     __end_of_OSCILLATOR_Initialize:
   582                           	opt stack 0
   583                           wreg	equ	0xFE8
   584                           status	equ	0xFD8
   585                           
   586 ;; *************** function _EUSART2_Initialize *****************
   587 ;; Defined at:
   588 ;;		line 55 in file "mcc_generated_files/eusart2.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_SYSTEM_Initialize
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text5
   617  01FF04                     __ptext5:
   618                           	opt stack 0
   619  01FF04                     _EUSART2_Initialize:
   620                           	opt stack 29
   621                           
   622                           ;eusart2.c: 60: BAUD2CON = 0x08;
   623                           
   624                           ; BSR set to: 14
   625                           ;incstack = 0
   626  01FF04  0E08               	movlw	8
   627  01FF06  010E               	movlb	14	; () banked
   628  01FF08  6F9F               	movwf	159,b	;volatile
   629                           
   630                           ;eusart2.c: 63: RC2STA = 0x90;
   631  01FF0A  0E90               	movlw	144
   632  01FF0C  6F9D               	movwf	157,b	;volatile
   633                           
   634                           ;eusart2.c: 66: TX2STA = 0x24;
   635  01FF0E  0E24               	movlw	36
   636  01FF10  6F9E               	movwf	158,b	;volatile
   637                           
   638                           ;eusart2.c: 69: SP2BRGL = 0x33;
   639  01FF12  0E33               	movlw	51
   640  01FF14  6F9B               	movwf	155,b	;volatile
   641                           
   642                           ;eusart2.c: 72: SP2BRGH = 0x00;
   643  01FF16  0E00               	movlw	0
   644  01FF18  6F9C               	movwf	156,b	;volatile
   645                           
   646                           ; BSR set to: 14
   647  01FF1A  0012               	return		;funcret
   648  01FF1C                     __end_of_EUSART2_Initialize:
   649                           	opt stack 0
   650                           wreg	equ	0xFE8
   651                           status	equ	0xFD8
   652                           
   653 ;; *************** function _EUSART2_is_rx_ready *****************
   654 ;; Defined at:
   655 ;;		line 82 in file "mcc_generated_files/eusart2.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      unsigned char 
   662 ;; Registers used:
   663 ;;		wreg
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text6
   683  01FED2                     __ptext6:
   684                           	opt stack 0
   685  01FED2                     _EUSART2_is_rx_ready:
   686                           	opt stack 30
   687                           
   688                           ;eusart2.c: 84: return PIR3bits.RC2IF;
   689                           
   690                           ; BSR set to: 14
   691                           ;incstack = 0
   692  01FED2  010E               	movlb	14	; () banked
   693  01FED4  AFCD               	btfss	205,7,b	;volatile
   694  01FED6  D002               	goto	u20
   695  01FED8  0E01               	movlw	1
   696  01FEDA  0012               	return	
   697  01FEDC                     u20:
   698  01FEDC  0E00               	movlw	0
   699  01FEDE  0012               	return	
   700  01FEE0                     __end_of_EUSART2_is_rx_ready:
   701                           	opt stack 0
   702                           wreg	equ	0xFE8
   703                           status	equ	0xFD8
   704                           
   705 ;; *************** function _EUSART2_Write *****************
   706 ;; Defined at:
   707 ;;		line 111 in file "mcc_generated_files/eusart2.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  txData          1    wreg     unsigned char 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  txData          1    0[COMRAM] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   725 ;;Total ram usage:        1 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text7
   735  01FEC4                     __ptext7:
   736                           	opt stack 0
   737  01FEC4                     _EUSART2_Write:
   738                           	opt stack 30
   739                           
   740                           ; BSR set to: 14
   741                           ;incstack = 0
   742                           ;EUSART2_Write@txData stored from wreg
   743  01FEC4  6E01               	movwf	EUSART2_Write@txData,c
   744  01FEC6                     
   745                           ;eusart2.c: 114: {
   746                           
   747                           ;eusart2.c: 113: while(0 == PIR3bits.TX2IF)
   748  01FEC6  010E               	movlb	14	; () banked
   749  01FEC8  ADCD               	btfss	205,6,b	;volatile
   750  01FECA  D7FD               	goto	l814
   751                           
   752                           ; BSR set to: 14
   753                           ;eusart2.c: 115: }
   754                           ;eusart2.c: 117: TX2REG = txData;
   755                           
   756                           ; BSR set to: 14
   757  01FECC  C001  FE9A         	movff	EUSART2_Write@txData,3738	;volatile
   758                           
   759                           ; BSR set to: 14
   760  01FED0  0012               	return		;funcret
   761  01FED2                     __end_of_EUSART2_Write:
   762                           	opt stack 0
   763                           wreg	equ	0xFE8
   764                           status	equ	0xFD8
   765                           
   766 ;; *************** function _EUSART2_Read *****************
   767 ;; Defined at:
   768 ;;		line 92 in file "mcc_generated_files/eusart2.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      unsigned char 
   775 ;; Registers used:
   776 ;;		wreg, status,2
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text8
   796  01FEE0                     __ptext8:
   797                           	opt stack 0
   798  01FEE0                     _EUSART2_Read:
   799                           	opt stack 30
   800                           
   801                           ;eusart2.c: 96: {
   802                           
   803                           ;eusart2.c: 95: while(!PIR3bits.RC2IF)
   804                           
   805                           ; BSR set to: 14
   806                           ;incstack = 0
   807  01FEE0  010E               	movlb	14	; () banked
   808  01FEE2  AFCD               	btfss	205,7,b	;volatile
   809  01FEE4  D7FD               	goto	_EUSART2_Read
   810                           
   811                           ; BSR set to: 14
   812                           ;eusart2.c: 97: }
   813                           ;eusart2.c: 100: if(1 == RC2STAbits.OERR)
   814  01FEE6  A39D               	btfss	157,1,b	;volatile
   815  01FEE8  D002               	goto	l167
   816                           
   817                           ; BSR set to: 14
   818                           ;eusart2.c: 101: {
   819                           ;eusart2.c: 104: RC2STAbits.SPEN = 0;
   820  01FEEA  9F9D               	bcf	157,7,b	;volatile
   821                           
   822                           ;eusart2.c: 105: RC2STAbits.SPEN = 1;
   823  01FEEC  8F9D               	bsf	157,7,b	;volatile
   824  01FEEE                     l167:
   825                           
   826                           ; BSR set to: 14
   827                           ;eusart2.c: 106: }
   828                           ;eusart2.c: 108: return RC2REG;
   829                           
   830                           ; BSR set to: 14
   831  01FEEE  5199               	movf	153,w,b	;volatile
   832  01FEF0  0012               	return	
   833  01FEF2                     __end_of_EUSART2_Read:
   834                           	opt stack 0
   835  0000                     wreg	equ	0xFE8
   836                           status	equ	0xFD8
   837                           wreg	equ	0xFE8
   838                           status	equ	0xFD8
   839                           
   840                           	psect	rparam
   841  0000                     wreg	equ	0xFE8
   842                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_EUSART2_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              1 COMRAM     2     2      0
                 _EUSART2_Initialize
                       _EUSART2_Read
                      _EUSART2_Write
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART2_Initialize
   _EUSART2_Read
   _EUSART2_Write
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EUSART2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BIGRAM             E87      0       0      35        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 20 11:06:42 2018

                    __CFG_CP$OFF 000000                               u20 FEDC  
                             u97 FF7E                      __CFG_LVP$ON 000000  
                            l120 FF5C                              l121 FF72  
                            l167 FEEE                              l814 FEC6  
                   __CFG_CPD$OFF 000000          __size_of_PMD_Initialize 001C  
                            wreg 000FE8                     __CFG_ZCD$OFF 000000  
                           _LATA 000F83                             _LATB 000F84  
                           _LATC 000F85                             _LATD 000F86  
                           _LATE 000F87                             _PMD0 000EE1  
                           _PMD1 000EE2                             _PMD2 000EE3  
                           _PMD3 000EE4                             _PMD4 000EE5  
                           _PMD5 000EE6                             _WPUA 000F10  
                           _WPUB 000F18                             _WPUC 000F20  
                           _WPUD 000F25                             _WPUE 000F2D  
                  __CFG_FCMEN$ON 000000                    _EUSART2_Write FEC4  
                           _main FF50                    ?_EUSART2_Read 0001  
                           start 0000                    __CFG_CSWEN$ON 000000  
                   ___param_bank 000000                    __CFG_SCANE$ON 000000  
 __size_of_OSCILLATOR_Initialize 0018    __end_of_OSCILLATOR_Initialize FF34  
                          ?_main 0001                    __CFG_WDTE$OFF 000000  
                 __CFG_DEBUG$OFF 000000                            _OSCEN 000EDC  
                          _TRISA 000F88                            _TRISB 000F89  
                          _TRISC 000F8A                            _TRISD 000F8B  
                          _TRISE 000F8C                    __CFG_WRT0$OFF 000000  
                  __CFG_WRT1$OFF 000000                    __CFG_WRT2$OFF 000000  
                  __CFG_WRT3$OFF 000000                    __CFG_WRT4$OFF 000000  
                  __CFG_WRT5$OFF 000000                    __CFG_WRT6$OFF 000000  
                  __CFG_WRT7$OFF 000000                   __CFG_EBTR0$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                   __CFG_EBTR4$OFF 000000  
                 __CFG_EBTR5$OFF 000000                   __CFG_EBTR6$OFF 000000  
                 __CFG_EBTR7$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000               __CFG_MCLRE$EXTMCLR 000000  
                 ?_EUSART2_Write 0001                   ??_EUSART2_Read 0001  
                          status 000FD8                  __initialization FEBE  
                   __end_of_main FF8A                           ??_main 0002  
                  __activetblptr 000000       __end_of_EUSART2_Initialize FF1C  
                         _ANSELA 000F11                           _ANSELB 000F19  
                         _ANSELC 000F21                           _ANSELD 000F26  
                         _ANSELE 000F2E                           _RC2REG 000E99  
                         _RC2STA 000E9D                           _RB6PPS 000EF5  
                         _ODCONA 000F0F                           _ODCONB 000F17  
                         _ODCONC 000F1F                           _ODCOND 000F24  
                         _ODCONE 000F2C                           _RD7PPS 000F06  
                 __CFG_WDTCCS$SC 000000                           _OSCFRQ 000EDE  
                         _TX2REG 000E9A                           _TX2STA 000E9E  
                 __CFG_PWRTE$OFF 000000                   __CFG_XINST$OFF 000000  
      __CFG_RSTOSC$HFINTOSC_1MHZ 000000                   __CFG_STVREN$ON 000000  
                 _PMD_Initialize FF34                  ??_EUSART2_Write 0001  
   __size_of_EUSART2_is_rx_ready 000E                _SYSTEM_Initialize FEF2  
                     __accesstop 0060          __end_of__initialization FEBE  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001              ??_SYSTEM_Initialize 0001  
         __end_of_PMD_Initialize FF50             __end_of_EUSART2_Read FEF2  
      __end_of_SYSTEM_Initialize FF04                  __CFG_PPS1WAY$ON 000000  
                ?_PMD_Initialize 0001                          _SP2BRGH 000E9C  
                        _SP2BRGL 000E9B                          _OSCCON1 000ED8  
                        _OSCCON3 000EDA                          _OSCTUNE 000EDD  
                        __Hparam 0000                          __Lparam 0000  
                        __pcinit FEBE                          __ramtop 0F00  
                        __ptext0 FF50                          __ptext1 FEF2  
                        __ptext2 FF34                          __ptext3 FF8A  
                        __ptext4 FF1C                          __ptext5 FF04  
                        __ptext6 FED2                          __ptext7 FEC4  
                        __ptext8 FEE0            _OSCILLATOR_Initialize FF1C  
       ??_PIN_MANAGER_Initialize 0001       __size_of_SYSTEM_Initialize 0012  
                        main@rec 0003             end_of_initialization FEBE  
             _EUSART2_Initialize FF04            __size_of_EUSART2_Read 0012  
          __CFG_WDTCPS$WDTCPS_31 000000              ?_EUSART2_Initialize 0001  
            _EUSART2_is_rx_ready FED2                 __CFG_FEXTOSC$OFF 000000  
           ??_EUSART2_Initialize 0001             ?_EUSART2_is_rx_ready 0001  
                   _EUSART2_Read FEE0           ?_OSCILLATOR_Initialize 0001  
            start_initialization FEBE  __size_of_PIN_MANAGER_Initialize 0076  
          ??_EUSART2_is_rx_ready 0001            __end_of_EUSART2_Write FED2  
               __CFG_LPBOREN$OFF 000000                 ??_PMD_Initialize 0001  
            EUSART2_Write@txData 0001           _PIN_MANAGER_Initialize FF8A  
                       _BAUD2CON 000E9F                         _LATAbits 000F83  
            __CFG_BORV$VBOR_2P45 000000                         _PIR3bits 000ECD  
                       __Hrparam 0000                         __Lrparam 0000  
             __CFG_BOREN$SBORDIS 000000          ??_OSCILLATOR_Initialize 0001  
    __size_of_EUSART2_Initialize 0018                    __size_of_main 003A  
           __CFG_WDTCWS$WDTCWS_7 000000                       _RC2STAbits 000E9D  
    __end_of_EUSART2_is_rx_ready FEE0          ?_PIN_MANAGER_Initialize 0001  
              __CFG_CLKOUTEN$OFF 000000           __size_of_EUSART2_Write 000E  
                     _RX2PPSbits 000E8D                       _TX2STAbits 000E9E  
 __end_of_PIN_MANAGER_Initialize 0000  
