Loading plugins phase: Elapsed time ==> 0s.162ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\MotorControl.cyprj -d CY8C5888LTI-LP097 -s C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 1s.636ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.064ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  MotorControl.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\MotorControl.cyprj -dcpsoc3 MotorControl.v -verilog
======================================================================

======================================================================
Compiling:  MotorControl.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\MotorControl.cyprj -dcpsoc3 MotorControl.v -verilog
======================================================================

======================================================================
Compiling:  MotorControl.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\MotorControl.cyprj -dcpsoc3 -verilog MotorControl.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Mon Oct 23 16:13:49 2017


======================================================================
Compiling:  MotorControl.v
Program  :   vpp
Options  :    -yv2 -q10 MotorControl.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Mon Oct 23 16:13:49 2017

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\and_v1_0\and_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'MotorControl.ctl'.
MotorControl.v (line 1077, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 947, col 46):  Note: Substituting module 'sub_vi_vv' for '-'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 977, col 46):  Note: Substituting module 'add_vi_vv' for '+'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  MotorControl.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\MotorControl.cyprj -dcpsoc3 -verilog MotorControl.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Mon Oct 23 16:13:50 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\codegentemp\MotorControl.ctl'.
Linking 'C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\codegentemp\MotorControl.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  MotorControl.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\MotorControl.cyprj -dcpsoc3 -verilog MotorControl.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Mon Oct 23 16:13:50 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\codegentemp\MotorControl.ctl'.
Linking 'C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\codegentemp\MotorControl.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\enc:Net_1129\
	\enc:Cnt16:Net_82\
	\enc:Cnt16:Net_95\
	\enc:Cnt16:Net_91\
	\enc:Cnt16:Net_102\
	\enc:Cnt16:CounterUDB:ctrl_cmod_2\
	\enc:Cnt16:CounterUDB:ctrl_cmod_1\
	\enc:Cnt16:CounterUDB:ctrl_cmod_0\
	\adc:SAR:Net_221\
	\adc:SAR:Net_381\
	\adc:bSAR_SEQ:sw_soc\
	\adc:soc_out\
	\adc:Net_3905\
	\adc:Net_3867\
	\adc:MODULE_1:g1:a0:gx:u0:albi_2\
	\adc:MODULE_1:g1:a0:gx:u0:agbi_2\
	\adc:MODULE_1:g1:a0:gx:u0:albi_1\
	\adc:MODULE_1:g1:a0:gx:u0:agbi_1\
	\adc:MODULE_1:g1:a0:gx:u0:albi_0\
	\adc:MODULE_1:g1:a0:gx:u0:agbi_0\
	\adc:MODULE_1:g1:a0:xneq\
	\adc:MODULE_1:g1:a0:xlt\
	\adc:MODULE_1:g1:a0:xlte\
	\adc:MODULE_1:g1:a0:xgt\
	\adc:MODULE_1:g1:a0:xgte\
	\adc:MODULE_1:lt\
	\adc:MODULE_1:gt\
	\adc:MODULE_1:gte\
	\adc:MODULE_1:lte\
	\adc:MODULE_1:neq\
	\pwm:PWMUDB:km_run\
	\pwm:PWMUDB:ctrl_cmpmode2_2\
	\pwm:PWMUDB:ctrl_cmpmode2_1\
	\pwm:PWMUDB:ctrl_cmpmode2_0\
	\pwm:PWMUDB:ctrl_cmpmode1_2\
	\pwm:PWMUDB:ctrl_cmpmode1_1\
	\pwm:PWMUDB:ctrl_cmpmode1_0\
	\pwm:PWMUDB:capt_rising\
	\pwm:PWMUDB:capt_falling\
	\pwm:PWMUDB:trig_rise\
	\pwm:PWMUDB:trig_fall\
	\pwm:PWMUDB:sc_kill\
	\pwm:PWMUDB:min_kill\
	\pwm:PWMUDB:km_tc\
	\pwm:PWMUDB:db_tc\
	\pwm:PWMUDB:dith_sel\
	\pwm:Net_101\
	\pwm:Net_96\
	\pwm:PWMUDB:MODULE_2:b_31\
	\pwm:PWMUDB:MODULE_2:b_30\
	\pwm:PWMUDB:MODULE_2:b_29\
	\pwm:PWMUDB:MODULE_2:b_28\
	\pwm:PWMUDB:MODULE_2:b_27\
	\pwm:PWMUDB:MODULE_2:b_26\
	\pwm:PWMUDB:MODULE_2:b_25\
	\pwm:PWMUDB:MODULE_2:b_24\
	\pwm:PWMUDB:MODULE_2:b_23\
	\pwm:PWMUDB:MODULE_2:b_22\
	\pwm:PWMUDB:MODULE_2:b_21\
	\pwm:PWMUDB:MODULE_2:b_20\
	\pwm:PWMUDB:MODULE_2:b_19\
	\pwm:PWMUDB:MODULE_2:b_18\
	\pwm:PWMUDB:MODULE_2:b_17\
	\pwm:PWMUDB:MODULE_2:b_16\
	\pwm:PWMUDB:MODULE_2:b_15\
	\pwm:PWMUDB:MODULE_2:b_14\
	\pwm:PWMUDB:MODULE_2:b_13\
	\pwm:PWMUDB:MODULE_2:b_12\
	\pwm:PWMUDB:MODULE_2:b_11\
	\pwm:PWMUDB:MODULE_2:b_10\
	\pwm:PWMUDB:MODULE_2:b_9\
	\pwm:PWMUDB:MODULE_2:b_8\
	\pwm:PWMUDB:MODULE_2:b_7\
	\pwm:PWMUDB:MODULE_2:b_6\
	\pwm:PWMUDB:MODULE_2:b_5\
	\pwm:PWMUDB:MODULE_2:b_4\
	\pwm:PWMUDB:MODULE_2:b_3\
	\pwm:PWMUDB:MODULE_2:b_2\
	\pwm:PWMUDB:MODULE_2:b_1\
	\pwm:PWMUDB:MODULE_2:b_0\
	\pwm:PWMUDB:MODULE_2:g2:a0:a_31\
	\pwm:PWMUDB:MODULE_2:g2:a0:a_30\
	\pwm:PWMUDB:MODULE_2:g2:a0:a_29\
	\pwm:PWMUDB:MODULE_2:g2:a0:a_28\
	\pwm:PWMUDB:MODULE_2:g2:a0:a_27\
	\pwm:PWMUDB:MODULE_2:g2:a0:a_26\
	\pwm:PWMUDB:MODULE_2:g2:a0:a_25\
	\pwm:PWMUDB:MODULE_2:g2:a0:a_24\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_31\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_30\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_29\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_28\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_27\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_26\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_25\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_24\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_23\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_22\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_21\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_20\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_19\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_18\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_17\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_16\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_15\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_14\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_13\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_12\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_11\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_10\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_9\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_8\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_7\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_6\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_5\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_4\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_3\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_2\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_1\
	\pwm:PWMUDB:MODULE_2:g2:a0:b_0\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_31\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_30\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_29\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_28\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_27\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_26\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_25\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_24\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_23\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_22\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_21\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_20\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_19\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_18\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_17\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_16\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_15\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_14\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_13\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_12\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_11\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_10\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_9\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_8\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_7\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_6\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_5\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_4\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_3\
	\pwm:PWMUDB:MODULE_2:g2:a0:s_2\
	\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\
	\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\
	\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\
	\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\
	\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\
	\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\
	\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_188
	Net_173
	Net_170
	\pwm:Net_113\
	\pwm:Net_107\
	\pwm:Net_114\

    Synthesized names
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_31\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_30\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_29\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_28\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_27\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_26\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_25\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_24\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_23\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_22\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_21\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_20\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_19\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_18\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_17\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_16\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_15\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_14\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_13\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_12\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_11\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_10\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_9\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_8\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_7\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_6\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_5\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_4\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_3\
	\pwm:PWMUDB:add_vi_vv_MODGEN_2_2\

Deleted 163 User equations/components.
Deleted 30 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to tmpOE__switch1_net_0
Aliasing \lcd:tmpOE__LCDPort_net_6\ to tmpOE__switch1_net_0
Aliasing \lcd:tmpOE__LCDPort_net_5\ to tmpOE__switch1_net_0
Aliasing \lcd:tmpOE__LCDPort_net_4\ to tmpOE__switch1_net_0
Aliasing \lcd:tmpOE__LCDPort_net_3\ to tmpOE__switch1_net_0
Aliasing \lcd:tmpOE__LCDPort_net_2\ to tmpOE__switch1_net_0
Aliasing \lcd:tmpOE__LCDPort_net_1\ to tmpOE__switch1_net_0
Aliasing \lcd:tmpOE__LCDPort_net_0\ to tmpOE__switch1_net_0
Aliasing \enc:Cnt16:CounterUDB:ctrl_capmode_1\ to zero
Aliasing \enc:Cnt16:CounterUDB:ctrl_capmode_0\ to zero
Aliasing \enc:Cnt16:CounterUDB:capt_rising\ to zero
Aliasing \enc:Cnt16:CounterUDB:underflow\ to \enc:Cnt16:CounterUDB:status_1\
Aliasing \enc:Cnt16:CounterUDB:tc_i\ to \enc:Cnt16:CounterUDB:reload_tc\
Aliasing \enc:bQuadDec:status_4\ to zero
Aliasing \enc:bQuadDec:status_5\ to zero
Aliasing \enc:bQuadDec:status_6\ to zero
Aliasing \enc:Net_1229\ to tmpOE__switch1_net_0
Aliasing tmpOE__C1_net_0 to tmpOE__switch1_net_0
Aliasing tmpOE__C2_net_0 to tmpOE__switch1_net_0
Aliasing \adc:AMuxHw_2_Decoder_enable\ to tmpOE__switch1_net_0
Aliasing \adc:SAR:vp_ctl_0\ to zero
Aliasing \adc:SAR:vp_ctl_2\ to zero
Aliasing \adc:SAR:vn_ctl_1\ to zero
Aliasing \adc:SAR:vn_ctl_3\ to zero
Aliasing \adc:SAR:vp_ctl_1\ to zero
Aliasing \adc:SAR:vp_ctl_3\ to zero
Aliasing \adc:SAR:vn_ctl_0\ to zero
Aliasing \adc:SAR:vn_ctl_2\ to zero
Aliasing \adc:SAR:soc\ to zero
Aliasing \adc:bSAR_SEQ:status_7\ to zero
Aliasing \adc:bSAR_SEQ:status_6\ to zero
Aliasing \adc:bSAR_SEQ:status_5\ to zero
Aliasing \adc:bSAR_SEQ:status_4\ to zero
Aliasing \adc:bSAR_SEQ:status_3\ to zero
Aliasing \adc:bSAR_SEQ:status_2\ to zero
Aliasing \adc:bSAR_SEQ:status_1\ to zero
Aliasing Net_14 to \adc:bSAR_SEQ:status_0\
Aliasing \adc:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__switch1_net_0
Aliasing tmpOE__pot_net_0 to tmpOE__switch1_net_0
Aliasing tmpOE__motora_net_0 to tmpOE__switch1_net_0
Aliasing \pwm:PWMUDB:hwCapture\ to zero
Aliasing \pwm:PWMUDB:trig_out\ to tmpOE__switch1_net_0
Aliasing Net_127 to zero
Aliasing \pwm:PWMUDB:runmode_enable\\S\ to zero
Aliasing \pwm:PWMUDB:ltch_kill_reg\\R\ to \pwm:PWMUDB:runmode_enable\\R\
Aliasing \pwm:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \pwm:PWMUDB:min_kill_reg\\R\ to \pwm:PWMUDB:runmode_enable\\R\
Aliasing \pwm:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \pwm:PWMUDB:final_kill\ to tmpOE__switch1_net_0
Aliasing \pwm:PWMUDB:dith_count_1\\R\ to \pwm:PWMUDB:runmode_enable\\R\
Aliasing \pwm:PWMUDB:dith_count_1\\S\ to zero
Aliasing \pwm:PWMUDB:dith_count_0\\R\ to \pwm:PWMUDB:runmode_enable\\R\
Aliasing \pwm:PWMUDB:dith_count_0\\S\ to zero
Aliasing \pwm:PWMUDB:status_6\ to zero
Aliasing \pwm:PWMUDB:status_4\ to zero
Aliasing \pwm:PWMUDB:cmp1_status_reg\\R\ to \pwm:PWMUDB:runmode_enable\\R\
Aliasing \pwm:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \pwm:PWMUDB:cmp2_status_reg\\R\ to \pwm:PWMUDB:runmode_enable\\R\
Aliasing \pwm:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \pwm:PWMUDB:final_kill_reg\\R\ to \pwm:PWMUDB:runmode_enable\\R\
Aliasing \pwm:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \pwm:PWMUDB:cs_addr_0\ to \pwm:PWMUDB:runmode_enable\\R\
Aliasing \pwm:PWMUDB:pwm_temp\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_23\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_22\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_21\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_20\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_19\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_18\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_17\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_16\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_15\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_14\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_13\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_12\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_11\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_10\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_9\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_8\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_7\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_6\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_5\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_4\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_3\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:a_2\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__switch1_net_0
Aliasing tmpOE__motorb_net_0 to tmpOE__switch1_net_0
Aliasing \enc:Cnt16:CounterUDB:prevCapture\\D\ to zero
Aliasing \enc:Cnt16:CounterUDB:cmp_out_reg_i\\D\ to \enc:Cnt16:CounterUDB:prevCompare\\D\
Aliasing \adc:AMuxHw_2_Decoder_old_id_5\\D\ to \adc:MODIN1_5\
Aliasing \adc:AMuxHw_2_Decoder_old_id_4\\D\ to \adc:MODIN1_4\
Aliasing \adc:AMuxHw_2_Decoder_old_id_3\\D\ to \adc:MODIN1_3\
Aliasing \adc:AMuxHw_2_Decoder_old_id_2\\D\ to \adc:MODIN1_2\
Aliasing \adc:AMuxHw_2_Decoder_old_id_1\\D\ to \adc:MODIN1_1\
Aliasing \adc:AMuxHw_2_Decoder_old_id_0\\D\ to \adc:MODIN1_0\
Aliasing \pwm:PWMUDB:min_kill_reg\\D\ to tmpOE__switch1_net_0
Aliasing \pwm:PWMUDB:prevCapture\\D\ to zero
Aliasing \pwm:PWMUDB:trig_last\\D\ to zero
Aliasing \pwm:PWMUDB:ltch_kill_reg\\D\ to tmpOE__switch1_net_0
Aliasing \pwm:PWMUDB:tc_i_reg\\D\ to \pwm:PWMUDB:status_2\
Removing Lhs of wire one[6] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \lcd:tmpOE__LCDPort_net_6\[9] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \lcd:tmpOE__LCDPort_net_5\[10] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \lcd:tmpOE__LCDPort_net_4\[11] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \lcd:tmpOE__LCDPort_net_3\[12] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \lcd:tmpOE__LCDPort_net_2\[13] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \lcd:tmpOE__LCDPort_net_1\[14] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \lcd:tmpOE__LCDPort_net_0\[15] = tmpOE__switch1_net_0[1]
Removing Rhs of wire \enc:Net_1275\[36] = \enc:Cnt16:Net_49\[37]
Removing Rhs of wire \enc:Net_1275\[36] = \enc:Cnt16:CounterUDB:tc_reg_i\[94]
Removing Lhs of wire \enc:Cnt16:Net_89\[39] = \enc:Net_1251\[40]
Removing Lhs of wire \enc:Cnt16:CounterUDB:ctrl_capmode_1\[50] = zero[2]
Removing Lhs of wire \enc:Cnt16:CounterUDB:ctrl_capmode_0\[51] = zero[2]
Removing Lhs of wire \enc:Cnt16:CounterUDB:ctrl_enable\[63] = \enc:Cnt16:CounterUDB:control_7\[55]
Removing Lhs of wire \enc:Cnt16:CounterUDB:capt_rising\[65] = zero[2]
Removing Lhs of wire \enc:Cnt16:CounterUDB:capt_falling\[66] = \enc:Cnt16:CounterUDB:prevCapture\[64]
Removing Rhs of wire \enc:Net_1260\[70] = \enc:bQuadDec:state_2\[208]
Removing Lhs of wire \enc:Cnt16:CounterUDB:final_enable\[72] = \enc:Cnt16:CounterUDB:control_7\[55]
Removing Lhs of wire \enc:Cnt16:CounterUDB:counter_enable\[73] = \enc:Cnt16:CounterUDB:control_7\[55]
Removing Rhs of wire \enc:Cnt16:CounterUDB:status_0\[74] = \enc:Cnt16:CounterUDB:cmp_out_status\[75]
Removing Rhs of wire \enc:Cnt16:CounterUDB:status_1\[76] = \enc:Cnt16:CounterUDB:per_zero\[77]
Removing Rhs of wire \enc:Cnt16:CounterUDB:status_2\[78] = \enc:Cnt16:CounterUDB:overflow_status\[79]
Removing Rhs of wire \enc:Cnt16:CounterUDB:status_3\[80] = \enc:Cnt16:CounterUDB:underflow_status\[81]
Removing Lhs of wire \enc:Cnt16:CounterUDB:status_4\[82] = \enc:Cnt16:CounterUDB:hwCapture\[68]
Removing Rhs of wire \enc:Cnt16:CounterUDB:status_5\[83] = \enc:Cnt16:CounterUDB:fifo_full\[84]
Removing Rhs of wire \enc:Cnt16:CounterUDB:status_6\[85] = \enc:Cnt16:CounterUDB:fifo_nempty\[86]
Removing Rhs of wire \enc:Cnt16:CounterUDB:overflow\[88] = \enc:Cnt16:CounterUDB:per_FF\[89]
Removing Lhs of wire \enc:Cnt16:CounterUDB:underflow\[90] = \enc:Cnt16:CounterUDB:status_1\[76]
Removing Lhs of wire \enc:Cnt16:CounterUDB:tc_i\[93] = \enc:Cnt16:CounterUDB:reload_tc\[71]
Removing Rhs of wire \enc:Cnt16:CounterUDB:cmp_out_i\[95] = \enc:Cnt16:CounterUDB:cmp_equal\[96]
Removing Rhs of wire \enc:Net_1264\[99] = \enc:Cnt16:CounterUDB:cmp_out_reg_i\[98]
Removing Lhs of wire \enc:Cnt16:CounterUDB:dp_dir\[103] = \enc:Net_1251\[40]
Removing Lhs of wire \enc:Cnt16:CounterUDB:cs_addr_2\[104] = \enc:Net_1251\[40]
Removing Lhs of wire \enc:Cnt16:CounterUDB:cs_addr_1\[105] = \enc:Cnt16:CounterUDB:count_enable\[102]
Removing Lhs of wire \enc:Cnt16:CounterUDB:cs_addr_0\[106] = \enc:Cnt16:CounterUDB:reload\[69]
Removing Lhs of wire \enc:Net_1290\[183] = \enc:Net_1275\[36]
Removing Lhs of wire \enc:bQuadDec:index_filt\[206] = \enc:Net_1232\[207]
Removing Lhs of wire \enc:Net_1232\[207] = tmpOE__switch1_net_0[1]
Removing Rhs of wire \enc:bQuadDec:error\[209] = \enc:bQuadDec:state_3\[210]
Removing Lhs of wire \enc:bQuadDec:status_0\[213] = \enc:Net_530\[214]
Removing Lhs of wire \enc:bQuadDec:status_1\[215] = \enc:Net_611\[216]
Removing Lhs of wire \enc:bQuadDec:status_2\[217] = \enc:Net_1260\[70]
Removing Lhs of wire \enc:bQuadDec:status_3\[218] = \enc:bQuadDec:error\[209]
Removing Lhs of wire \enc:bQuadDec:status_4\[219] = zero[2]
Removing Lhs of wire \enc:bQuadDec:status_5\[220] = zero[2]
Removing Lhs of wire \enc:bQuadDec:status_6\[221] = zero[2]
Removing Lhs of wire \enc:Net_1229\[225] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \enc:Net_1272\[226] = \enc:Net_1264\[99]
Removing Lhs of wire tmpOE__C1_net_0[229] = tmpOE__switch1_net_0[1]
Removing Lhs of wire tmpOE__C2_net_0[234] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \adc:AMuxHw_2_Decoder_enable\[239] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \adc:cmp_vv_vv_MODGEN_1\[241] = \adc:MODULE_1:g1:a0:xeq\[576]
Removing Rhs of wire \adc:clock\[242] = \adc:Net_3874\[476]
Removing Rhs of wire \adc:ch_addr_5\[244] = \adc:bSAR_SEQ:count_5\[443]
Removing Rhs of wire \adc:ch_addr_4\[246] = \adc:bSAR_SEQ:count_4\[444]
Removing Rhs of wire \adc:ch_addr_3\[248] = \adc:bSAR_SEQ:count_3\[445]
Removing Rhs of wire \adc:ch_addr_2\[250] = \adc:bSAR_SEQ:count_2\[446]
Removing Rhs of wire \adc:ch_addr_1\[252] = \adc:bSAR_SEQ:count_1\[447]
Removing Rhs of wire \adc:ch_addr_0\[254] = \adc:bSAR_SEQ:count_0\[448]
Removing Lhs of wire \adc:SAR:vp_ctl_0\[388] = zero[2]
Removing Lhs of wire \adc:SAR:vp_ctl_2\[389] = zero[2]
Removing Lhs of wire \adc:SAR:vn_ctl_1\[390] = zero[2]
Removing Lhs of wire \adc:SAR:vn_ctl_3\[391] = zero[2]
Removing Lhs of wire \adc:SAR:vp_ctl_1\[392] = zero[2]
Removing Lhs of wire \adc:SAR:vp_ctl_3\[393] = zero[2]
Removing Lhs of wire \adc:SAR:vn_ctl_0\[394] = zero[2]
Removing Lhs of wire \adc:SAR:vn_ctl_2\[395] = zero[2]
Removing Lhs of wire \adc:SAR:Net_188\[396] = \adc:clock\[242]
Removing Lhs of wire \adc:SAR:soc\[402] = zero[2]
Removing Rhs of wire \adc:bSAR_SEQ:enable\[433] = \adc:bSAR_SEQ:control_0\[434]
Removing Rhs of wire \adc:bSAR_SEQ:load_period\[435] = \adc:bSAR_SEQ:control_1\[436]
Removing Lhs of wire \adc:bSAR_SEQ:status_7\[449] = zero[2]
Removing Lhs of wire \adc:bSAR_SEQ:status_6\[450] = zero[2]
Removing Lhs of wire \adc:bSAR_SEQ:status_5\[451] = zero[2]
Removing Lhs of wire \adc:bSAR_SEQ:status_4\[452] = zero[2]
Removing Lhs of wire \adc:bSAR_SEQ:status_3\[453] = zero[2]
Removing Lhs of wire \adc:bSAR_SEQ:status_2\[454] = zero[2]
Removing Lhs of wire \adc:bSAR_SEQ:status_1\[455] = zero[2]
Removing Rhs of wire \adc:bSAR_SEQ:status_0\[456] = \adc:bSAR_SEQ:nrq_edge_detect_reg\[457]
Removing Rhs of wire Net_14[464] = \adc:bSAR_SEQ:status_0\[456]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newa_5\[487] = \adc:MODIN1_5\[488]
Removing Lhs of wire \adc:MODIN1_5\[488] = \adc:ch_addr_5\[244]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newa_4\[489] = \adc:MODIN1_4\[490]
Removing Lhs of wire \adc:MODIN1_4\[490] = \adc:ch_addr_4\[246]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newa_3\[491] = \adc:MODIN1_3\[492]
Removing Lhs of wire \adc:MODIN1_3\[492] = \adc:ch_addr_3\[248]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newa_2\[493] = \adc:MODIN1_2\[494]
Removing Lhs of wire \adc:MODIN1_2\[494] = \adc:ch_addr_2\[250]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newa_1\[495] = \adc:MODIN1_1\[496]
Removing Lhs of wire \adc:MODIN1_1\[496] = \adc:ch_addr_1\[252]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newa_0\[497] = \adc:MODIN1_0\[498]
Removing Lhs of wire \adc:MODIN1_0\[498] = \adc:ch_addr_0\[254]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newb_5\[499] = \adc:MODIN2_5\[500]
Removing Lhs of wire \adc:MODIN2_5\[500] = \adc:AMuxHw_2_Decoder_old_id_5\[243]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newb_4\[501] = \adc:MODIN2_4\[502]
Removing Lhs of wire \adc:MODIN2_4\[502] = \adc:AMuxHw_2_Decoder_old_id_4\[245]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newb_3\[503] = \adc:MODIN2_3\[504]
Removing Lhs of wire \adc:MODIN2_3\[504] = \adc:AMuxHw_2_Decoder_old_id_3\[247]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newb_2\[505] = \adc:MODIN2_2\[506]
Removing Lhs of wire \adc:MODIN2_2\[506] = \adc:AMuxHw_2_Decoder_old_id_2\[249]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newb_1\[507] = \adc:MODIN2_1\[508]
Removing Lhs of wire \adc:MODIN2_1\[508] = \adc:AMuxHw_2_Decoder_old_id_1\[251]
Removing Lhs of wire \adc:MODULE_1:g1:a0:newb_0\[509] = \adc:MODIN2_0\[510]
Removing Lhs of wire \adc:MODIN2_0\[510] = \adc:AMuxHw_2_Decoder_old_id_0\[253]
Removing Lhs of wire \adc:MODULE_1:g1:a0:dataa_5\[511] = \adc:ch_addr_5\[244]
Removing Lhs of wire \adc:MODULE_1:g1:a0:dataa_4\[512] = \adc:ch_addr_4\[246]
Removing Lhs of wire \adc:MODULE_1:g1:a0:dataa_3\[513] = \adc:ch_addr_3\[248]
Removing Lhs of wire \adc:MODULE_1:g1:a0:dataa_2\[514] = \adc:ch_addr_2\[250]
Removing Lhs of wire \adc:MODULE_1:g1:a0:dataa_1\[515] = \adc:ch_addr_1\[252]
Removing Lhs of wire \adc:MODULE_1:g1:a0:dataa_0\[516] = \adc:ch_addr_0\[254]
Removing Lhs of wire \adc:MODULE_1:g1:a0:datab_5\[517] = \adc:AMuxHw_2_Decoder_old_id_5\[243]
Removing Lhs of wire \adc:MODULE_1:g1:a0:datab_4\[518] = \adc:AMuxHw_2_Decoder_old_id_4\[245]
Removing Lhs of wire \adc:MODULE_1:g1:a0:datab_3\[519] = \adc:AMuxHw_2_Decoder_old_id_3\[247]
Removing Lhs of wire \adc:MODULE_1:g1:a0:datab_2\[520] = \adc:AMuxHw_2_Decoder_old_id_2\[249]
Removing Lhs of wire \adc:MODULE_1:g1:a0:datab_1\[521] = \adc:AMuxHw_2_Decoder_old_id_1\[251]
Removing Lhs of wire \adc:MODULE_1:g1:a0:datab_0\[522] = \adc:AMuxHw_2_Decoder_old_id_0\[253]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:a_5\[523] = \adc:ch_addr_5\[244]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:a_4\[524] = \adc:ch_addr_4\[246]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:a_3\[525] = \adc:ch_addr_3\[248]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:a_2\[526] = \adc:ch_addr_2\[250]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:a_1\[527] = \adc:ch_addr_1\[252]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:a_0\[528] = \adc:ch_addr_0\[254]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:b_5\[529] = \adc:AMuxHw_2_Decoder_old_id_5\[243]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:b_4\[530] = \adc:AMuxHw_2_Decoder_old_id_4\[245]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:b_3\[531] = \adc:AMuxHw_2_Decoder_old_id_3\[247]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:b_2\[532] = \adc:AMuxHw_2_Decoder_old_id_2\[249]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:b_1\[533] = \adc:AMuxHw_2_Decoder_old_id_1\[251]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:b_0\[534] = \adc:AMuxHw_2_Decoder_old_id_0\[253]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:aeqb_0\[541] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:eq_0\[542] = \adc:MODULE_1:g1:a0:gx:u0:xnor_array_0\[540]
Removing Lhs of wire \adc:MODULE_1:g1:a0:gx:u0:eqi_0\[548] = \adc:MODULE_1:g1:a0:gx:u0:eq_5\[547]
Removing Rhs of wire \adc:MODULE_1:g1:a0:xeq\[576] = \adc:MODULE_1:g1:a0:gx:u0:aeqb_1\[549]
Removing Lhs of wire tmpOE__pot_net_0[588] = tmpOE__switch1_net_0[1]
Removing Lhs of wire tmpOE__motora_net_0[594] = tmpOE__switch1_net_0[1]
Removing Rhs of wire Net_182[595] = \pwm:PWMUDB:pwm1_i_reg\[720]
Removing Lhs of wire \pwm:PWMUDB:ctrl_enable\[614] = \pwm:PWMUDB:control_7\[606]
Removing Lhs of wire \pwm:PWMUDB:hwCapture\[624] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:hwEnable\[625] = \pwm:PWMUDB:control_7\[606]
Removing Lhs of wire \pwm:PWMUDB:trig_out\[629] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \pwm:PWMUDB:runmode_enable\\R\[631] = zero[2]
Removing Lhs of wire Net_127[632] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:runmode_enable\\S\[633] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:final_enable\[634] = \pwm:PWMUDB:runmode_enable\[630]
Removing Lhs of wire \pwm:PWMUDB:ltch_kill_reg\\R\[638] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:ltch_kill_reg\\S\[639] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:min_kill_reg\\R\[640] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:min_kill_reg\\S\[641] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:final_kill\[644] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \pwm:PWMUDB:add_vi_vv_MODGEN_2_1\[648] = \pwm:PWMUDB:MODULE_2:g2:a0:s_1\[887]
Removing Lhs of wire \pwm:PWMUDB:add_vi_vv_MODGEN_2_0\[650] = \pwm:PWMUDB:MODULE_2:g2:a0:s_0\[888]
Removing Lhs of wire \pwm:PWMUDB:dith_count_1\\R\[651] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:dith_count_1\\S\[652] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:dith_count_0\\R\[653] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:dith_count_0\\S\[654] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:status_6\[657] = zero[2]
Removing Rhs of wire \pwm:PWMUDB:status_5\[658] = \pwm:PWMUDB:final_kill_reg\[673]
Removing Lhs of wire \pwm:PWMUDB:status_4\[659] = zero[2]
Removing Rhs of wire \pwm:PWMUDB:status_3\[660] = \pwm:PWMUDB:fifo_full\[680]
Removing Rhs of wire \pwm:PWMUDB:status_1\[662] = \pwm:PWMUDB:cmp2_status_reg\[672]
Removing Rhs of wire \pwm:PWMUDB:status_0\[663] = \pwm:PWMUDB:cmp1_status_reg\[671]
Removing Lhs of wire \pwm:PWMUDB:cmp1_status_reg\\R\[674] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:cmp1_status_reg\\S\[675] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:cmp2_status_reg\\R\[676] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:cmp2_status_reg\\S\[677] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:final_kill_reg\\R\[678] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:final_kill_reg\\S\[679] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:cs_addr_2\[681] = \pwm:PWMUDB:tc_i\[636]
Removing Lhs of wire \pwm:PWMUDB:cs_addr_1\[682] = \pwm:PWMUDB:runmode_enable\[630]
Removing Lhs of wire \pwm:PWMUDB:cs_addr_0\[683] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:compare1\[716] = \pwm:PWMUDB:cmp1_less\[687]
Removing Lhs of wire \pwm:PWMUDB:compare2\[717] = \pwm:PWMUDB:cmp2_less\[690]
Removing Rhs of wire Net_172[727] = \pwm:PWMUDB:pwm2_i_reg\[722]
Removing Lhs of wire \pwm:PWMUDB:pwm_temp\[728] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_23\[769] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_22\[770] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_21\[771] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_20\[772] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_19\[773] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_18\[774] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_17\[775] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_16\[776] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_15\[777] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_14\[778] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_13\[779] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_12\[780] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_11\[781] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_10\[782] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_9\[783] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_8\[784] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_7\[785] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_6\[786] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_5\[787] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_4\[788] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_3\[789] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_2\[790] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_1\[791] = \pwm:PWMUDB:MODIN3_1\[792]
Removing Lhs of wire \pwm:PWMUDB:MODIN3_1\[792] = \pwm:PWMUDB:dith_count_1\[647]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:a_0\[793] = \pwm:PWMUDB:MODIN3_0\[794]
Removing Lhs of wire \pwm:PWMUDB:MODIN3_0\[794] = \pwm:PWMUDB:dith_count_0\[649]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[926] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[927] = tmpOE__switch1_net_0[1]
Removing Lhs of wire tmpOE__motorb_net_0[936] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \enc:Cnt16:CounterUDB:prevCapture\\D\[942] = zero[2]
Removing Lhs of wire \enc:Cnt16:CounterUDB:overflow_reg_i\\D\[943] = \enc:Cnt16:CounterUDB:overflow\[88]
Removing Lhs of wire \enc:Cnt16:CounterUDB:underflow_reg_i\\D\[944] = \enc:Cnt16:CounterUDB:status_1\[76]
Removing Lhs of wire \enc:Cnt16:CounterUDB:tc_reg_i\\D\[945] = \enc:Cnt16:CounterUDB:reload_tc\[71]
Removing Lhs of wire \enc:Cnt16:CounterUDB:prevCompare\\D\[946] = \enc:Cnt16:CounterUDB:cmp_out_i\[95]
Removing Lhs of wire \enc:Cnt16:CounterUDB:cmp_out_reg_i\\D\[947] = \enc:Cnt16:CounterUDB:cmp_out_i\[95]
Removing Lhs of wire \enc:Cnt16:CounterUDB:count_stored_i\\D\[948] = \enc:Net_1203\[101]
Removing Lhs of wire \adc:AMuxHw_2_Decoder_old_id_5\\D\[956] = \adc:ch_addr_5\[244]
Removing Lhs of wire \adc:AMuxHw_2_Decoder_old_id_4\\D\[957] = \adc:ch_addr_4\[246]
Removing Lhs of wire \adc:AMuxHw_2_Decoder_old_id_3\\D\[958] = \adc:ch_addr_3\[248]
Removing Lhs of wire \adc:AMuxHw_2_Decoder_old_id_2\\D\[959] = \adc:ch_addr_2\[250]
Removing Lhs of wire \adc:AMuxHw_2_Decoder_old_id_1\\D\[960] = \adc:ch_addr_1\[252]
Removing Lhs of wire \adc:AMuxHw_2_Decoder_old_id_0\\D\[961] = \adc:ch_addr_0\[254]
Removing Lhs of wire \adc:bSAR_SEQ:nrq_edge_detect_reg\\D\[1026] = \adc:bSAR_SEQ:nrq_edge_detect\[463]
Removing Lhs of wire \adc:bSAR_SEQ:nrq_reg\\D\[1028] = \adc:bSAR_SEQ:bus_clk_nrq_reg\[460]
Removing Lhs of wire \pwm:PWMUDB:min_kill_reg\\D\[1029] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \pwm:PWMUDB:prevCapture\\D\[1030] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:trig_last\\D\[1031] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:ltch_kill_reg\\D\[1034] = tmpOE__switch1_net_0[1]
Removing Lhs of wire \pwm:PWMUDB:prevCompare1\\D\[1037] = \pwm:PWMUDB:cmp1\[666]
Removing Lhs of wire \pwm:PWMUDB:prevCompare2\\D\[1038] = \pwm:PWMUDB:cmp2\[669]
Removing Lhs of wire \pwm:PWMUDB:cmp1_status_reg\\D\[1039] = \pwm:PWMUDB:cmp1_status\[667]
Removing Lhs of wire \pwm:PWMUDB:cmp2_status_reg\\D\[1040] = \pwm:PWMUDB:cmp2_status\[670]
Removing Lhs of wire \pwm:PWMUDB:pwm_i_reg\\D\[1042] = \pwm:PWMUDB:pwm_i\[719]
Removing Lhs of wire \pwm:PWMUDB:pwm1_i_reg\\D\[1043] = \pwm:PWMUDB:pwm1_i\[721]
Removing Lhs of wire \pwm:PWMUDB:pwm2_i_reg\\D\[1044] = \pwm:PWMUDB:pwm2_i\[723]
Removing Lhs of wire \pwm:PWMUDB:tc_i_reg\\D\[1045] = \pwm:PWMUDB:status_2\[661]

------------------------------------------------------
Aliased 0 equations, 229 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'tmpOE__switch1_net_0' (cost = 0):
tmpOE__switch1_net_0 <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\enc:Cnt16:CounterUDB:capt_either_edge\' (cost = 0):
\enc:Cnt16:CounterUDB:capt_either_edge\ <= (\enc:Cnt16:CounterUDB:prevCapture\);

Note:  Expanding virtual equation for '\enc:Cnt16:CounterUDB:reload_tc\' (cost = 2):
\enc:Cnt16:CounterUDB:reload_tc\ <= (\enc:Cnt16:CounterUDB:status_1\
	OR \enc:Cnt16:CounterUDB:overflow\);

Note:  Expanding virtual equation for '\enc:bQuadDec:A_j\' (cost = 1):
\enc:bQuadDec:A_j\ <= ((\enc:bQuadDec:quad_A_delayed_0\ and \enc:bQuadDec:quad_A_delayed_1\ and \enc:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\enc:bQuadDec:A_k\' (cost = 3):
\enc:bQuadDec:A_k\ <= ((not \enc:bQuadDec:quad_A_delayed_0\ and not \enc:bQuadDec:quad_A_delayed_1\ and not \enc:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\enc:bQuadDec:B_j\' (cost = 1):
\enc:bQuadDec:B_j\ <= ((\enc:bQuadDec:quad_B_delayed_0\ and \enc:bQuadDec:quad_B_delayed_1\ and \enc:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\enc:bQuadDec:B_k\' (cost = 3):
\enc:bQuadDec:B_k\ <= ((not \enc:bQuadDec:quad_B_delayed_0\ and not \enc:bQuadDec:quad_B_delayed_1\ and not \enc:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\enc:Net_1151\' (cost = 0):
\enc:Net_1151\ <= (not \enc:Net_1251\);

Note:  Expanding virtual equation for '\enc:Net_1287\' (cost = 0):
\enc:Net_1287\ <= (not \enc:Net_1264\);

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\adc:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\)
	OR (\adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\adc:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\)
	OR (\adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\adc:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\)
	OR (\adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\adc:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\)
	OR (\adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\adc:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\)
	OR (\adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\adc:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\)
	OR (\adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\adc:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (\adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\adc:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (\adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\adc:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (\adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\adc:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (\adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\adc:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (\adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\adc:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\adc:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\adc:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \adc:ch_addr_4\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_3\)
	OR (not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:AMuxHw_2_Decoder_old_id_3\)
	OR (not \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\adc:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_4\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\adc:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\adc:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\adc:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \adc:ch_addr_1\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_0\)
	OR (not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:AMuxHw_2_Decoder_old_id_0\)
	OR (not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\adc:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_1\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\));

Note:  Expanding virtual equation for '\pwm:PWMUDB:cmp1\' (cost = 0):
\pwm:PWMUDB:cmp1\ <= (\pwm:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\pwm:PWMUDB:cmp2\' (cost = 0):
\pwm:PWMUDB:cmp2\ <= (\pwm:PWMUDB:cmp2_less\);

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\pwm:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:s_0\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:s_0\ <= (not \pwm:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\pwm:PWMUDB:dith_count_1\ and \pwm:PWMUDB:dith_count_0\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\enc:Net_1248\' (cost = 2):
\enc:Net_1248\ <= ((not \enc:Net_1264\ and \enc:Net_1275\));

Note:  Expanding virtual equation for '\adc:MODULE_1:g1:a0:xeq\' (cost = 64):
\adc:MODULE_1:g1:a0:xeq\ <= ((not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (\adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\));

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:s_1\' (cost = 2):
\pwm:PWMUDB:MODULE_2:g2:a0:s_1\ <= ((not \pwm:PWMUDB:dith_count_0\ and \pwm:PWMUDB:dith_count_1\)
	OR (not \pwm:PWMUDB:dith_count_1\ and \pwm:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;


Substituting virtuals - pass 3:

Note:  Virtual signal \adc:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\adc:AMuxHw_2_Decoder_is_active\ <= ((not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_0\ and not \adc:ch_addr_0\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_1\ and not \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_2\ and not \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_3\ and not \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_4\ and not \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (not \adc:AMuxHw_2_Decoder_old_id_5\ and not \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\)
	OR (\adc:AMuxHw_2_Decoder_old_id_5\ and \adc:ch_addr_5\ and \adc:AMuxHw_2_Decoder_old_id_4\ and \adc:ch_addr_4\ and \adc:AMuxHw_2_Decoder_old_id_3\ and \adc:ch_addr_3\ and \adc:AMuxHw_2_Decoder_old_id_2\ and \adc:ch_addr_2\ and \adc:AMuxHw_2_Decoder_old_id_1\ and \adc:ch_addr_1\ and \adc:AMuxHw_2_Decoder_old_id_0\ and \adc:ch_addr_0\));

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 56 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \enc:Cnt16:CounterUDB:hwCapture\ to zero
Aliasing \pwm:PWMUDB:final_capture\ to zero
Aliasing \pwm:PWMUDB:pwm_i\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \pwm:PWMUDB:final_kill_reg\\D\ to zero
Removing Lhs of wire \enc:Cnt16:CounterUDB:hwCapture\[68] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:final_capture\[685] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:pwm_i\[719] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\[897] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\[907] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\[917] = zero[2]
Removing Lhs of wire \pwm:PWMUDB:runmode_enable\\D\[1032] = \pwm:PWMUDB:control_7\[606]
Removing Lhs of wire \pwm:PWMUDB:final_kill_reg\\D\[1041] = zero[2]

------------------------------------------------------
Aliased 0 equations, 8 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\MotorControl.cyprj" -dcpsoc3 MotorControl.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.276ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.1.0.3210, Family: PSoC3, Started at: Monday, 23 October 2017 16:13:51
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Jacob\Documents\Junior\EGR 455\EGR455\MotorControl.cydsn\MotorControl.cyprj -d CY8C5888LTI-LP097 MotorControl.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.025ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \adc:MODULE_1:g1:a0:gx:u0:lti_1\ kept \adc:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \adc:MODULE_1:g1:a0:gx:u0:gti_1\ kept \adc:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \adc:MODULE_1:g1:a0:gx:u0:lti_0\ kept \adc:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \adc:MODULE_1:g1:a0:gx:u0:gti_0\ kept \adc:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \pwm:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Converted constant MacroCell: \enc:Cnt16:CounterUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \pwm:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \pwm:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \pwm:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \pwm:PWMUDB:pwm_i_reg\ from registered to combinatorial
Assigning clock adc_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'Clock_1'. Fanout=3, Signal=Net_5
    Digital Clock 1: Automatic-assigning  clock 'Clock_2'. Fanout=1, Signal=Net_168
    Digital Clock 2: Automatic-assigning  clock 'adc_IntClock'. Fanout=73, Signal=\adc:clock\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \enc:Cnt16:CounterUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_1 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_1, EnableOut: Constant 1
    UDB Clk/Enable \enc:Cnt16:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\: with output requested to be synchronous
        ClockIn: Clock_1 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_1, EnableOut: Constant 1
    UDB Clk/Enable \enc:bQuadDec:CtrlClkEn\: with output requested to be synchronous
        ClockIn: Clock_1 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_1, EnableOut: Constant 1
    UDB Clk/Enable \adc:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: adc_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \adc:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: adc_IntClock, EnableOut: \adc:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \adc:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: adc_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: adc_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \pwm:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: Clock_2 was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: Clock_2, EnableOut: Constant 1
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \enc:Net_1264\, Duplicate of \enc:Cnt16:CounterUDB:prevCompare\ 
    MacroCell: Name=\enc:Net_1264\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:cmp_out_i\
        );
        Output = \enc:Net_1264\ (fanout=2)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing unused cells resulting from optimization
Done removing unused cells.
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = switch1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => switch1(0)__PA ,
            pad => switch1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \lcd:LCDPort(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \lcd:LCDPort(0)\__PA ,
            pad => \lcd:LCDPort(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \lcd:LCDPort(1)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \lcd:LCDPort(1)\__PA ,
            pad => \lcd:LCDPort(1)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \lcd:LCDPort(2)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \lcd:LCDPort(2)\__PA ,
            pad => \lcd:LCDPort(2)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \lcd:LCDPort(3)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \lcd:LCDPort(3)\__PA ,
            pad => \lcd:LCDPort(3)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \lcd:LCDPort(4)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \lcd:LCDPort(4)\__PA ,
            pad => \lcd:LCDPort(4)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \lcd:LCDPort(5)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \lcd:LCDPort(5)\__PA ,
            pad => \lcd:LCDPort(5)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \lcd:LCDPort(6)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \lcd:LCDPort(6)\__PA ,
            pad => \lcd:LCDPort(6)_PAD\ );
        Properties:
        {
        }

    Pin : Name = C1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => C1(0)__PA ,
            fb => Net_2 ,
            pad => C1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = C2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => C2(0)__PA ,
            fb => Net_3 ,
            pad => C2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = pot(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => pot(0)__PA ,
            analog_term => Net_15 ,
            pad => pot(0)_PAD ,
            pin_input => \adc:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = motora(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => motora(0)__PA ,
            pin_input => Net_182 ,
            pad => motora(0)_PAD );
        Properties:
        {
        }

    Pin : Name = motorb(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => motorb(0)__PA ,
            pin_input => Net_172 ,
            pad => motorb(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\enc:Net_1251_split\, Mode=(Combinatorial)
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \enc:Net_1251\ * !\enc:Net_1260\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\
            + \enc:Net_1251\ * !\enc:Net_1260\ * \enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + \enc:Net_1251\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + \enc:Net_1251\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:bQuadDec:quad_A_filt\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:Net_1251_split\ (fanout=1)

    MacroCell: Name=\enc:Cnt16:CounterUDB:reload\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\enc:Net_1260\ * !\enc:Cnt16:CounterUDB:status_1\ * 
              !\enc:Cnt16:CounterUDB:overflow\
        );
        Output = \enc:Cnt16:CounterUDB:reload\ (fanout=2)

    MacroCell: Name=\enc:Cnt16:CounterUDB:status_0\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:cmp_out_i\ * 
              !\enc:Cnt16:CounterUDB:prevCompare\
        );
        Output = \enc:Cnt16:CounterUDB:status_0\ (fanout=1)

    MacroCell: Name=\enc:Cnt16:CounterUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:overflow\ * 
              !\enc:Cnt16:CounterUDB:overflow_reg_i\
        );
        Output = \enc:Cnt16:CounterUDB:status_2\ (fanout=1)

    MacroCell: Name=\enc:Cnt16:CounterUDB:status_3\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:status_1\ * 
              !\enc:Cnt16:CounterUDB:underflow_reg_i\
        );
        Output = \enc:Cnt16:CounterUDB:status_3\ (fanout=1)

    MacroCell: Name=\enc:Cnt16:CounterUDB:count_enable\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:control_7\ * 
              !\enc:Cnt16:CounterUDB:count_stored_i\ * \enc:Net_1203\
        );
        Output = \enc:Cnt16:CounterUDB:count_enable\ (fanout=2)

    MacroCell: Name=\enc:Net_530\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Net_1275\ * \enc:Net_1251\ * 
              !\enc:Cnt16:CounterUDB:prevCompare\
        );
        Output = \enc:Net_530\ (fanout=1)

    MacroCell: Name=\enc:Net_611\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Net_1275\ * !\enc:Net_1251\ * 
              !\enc:Cnt16:CounterUDB:prevCompare\
        );
        Output = \enc:Net_611\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\adc:AMuxHw_2_Decoder_old_id_5\ * \adc:ch_addr_5\
            + !\adc:AMuxHw_2_Decoder_old_id_4\ * \adc:ch_addr_4\
            + !\adc:AMuxHw_2_Decoder_old_id_3\ * \adc:ch_addr_3\
            + !\adc:AMuxHw_2_Decoder_old_id_2\ * \adc:ch_addr_2\
            + \adc:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \adc:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\adc:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_13 * !\adc:bSAR_SEQ:load_period\
        );
        Output = \adc:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\pwm:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:runmode_enable\ * \pwm:PWMUDB:tc_i\
        );
        Output = \pwm:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\enc:bQuadDec:quad_A_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_2
        );
        Output = \enc:bQuadDec:quad_A_delayed_0\ (fanout=2)

    MacroCell: Name=\enc:bQuadDec:quad_A_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:bQuadDec:quad_A_delayed_0\
        );
        Output = \enc:bQuadDec:quad_A_delayed_1\ (fanout=2)

    MacroCell: Name=\enc:bQuadDec:quad_A_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:bQuadDec:quad_A_delayed_1\
        );
        Output = \enc:bQuadDec:quad_A_delayed_2\ (fanout=1)

    MacroCell: Name=\enc:bQuadDec:quad_B_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3
        );
        Output = \enc:bQuadDec:quad_B_delayed_0\ (fanout=2)

    MacroCell: Name=\enc:bQuadDec:quad_B_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:bQuadDec:quad_B_delayed_0\
        );
        Output = \enc:bQuadDec:quad_B_delayed_1\ (fanout=2)

    MacroCell: Name=\enc:bQuadDec:quad_B_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:bQuadDec:quad_B_delayed_1\
        );
        Output = \enc:bQuadDec:quad_B_delayed_2\ (fanout=1)

    MacroCell: Name=\enc:Net_1251\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              \enc:Net_1251\ * !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_0\
            + \enc:Net_1251\ * !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:error\ * \enc:bQuadDec:state_0\
            + \enc:Net_1251\ * !\enc:Net_1260\ * !\enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * \enc:bQuadDec:state_1\
            + \enc:Net_1251_split\
        );
        Output = \enc:Net_1251\ (fanout=6)

    MacroCell: Name=\enc:Cnt16:CounterUDB:overflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:overflow\
        );
        Output = \enc:Cnt16:CounterUDB:overflow_reg_i\ (fanout=1)

    MacroCell: Name=\enc:Cnt16:CounterUDB:underflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:status_1\
        );
        Output = \enc:Cnt16:CounterUDB:underflow_reg_i\ (fanout=1)

    MacroCell: Name=\enc:Net_1275\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\enc:Cnt16:CounterUDB:status_1\ * 
              !\enc:Cnt16:CounterUDB:overflow\
        );
        Output = \enc:Net_1275\ (fanout=2)

    MacroCell: Name=\enc:Cnt16:CounterUDB:prevCompare\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:cmp_out_i\
        );
        Output = \enc:Cnt16:CounterUDB:prevCompare\ (fanout=3)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \adc:AMuxHw_2_Decoder_old_id_5\ * !\adc:ch_addr_5\
            + \adc:AMuxHw_2_Decoder_old_id_4\ * !\adc:ch_addr_4\
            + \adc:AMuxHw_2_Decoder_old_id_3\ * !\adc:ch_addr_3\
            + \adc:AMuxHw_2_Decoder_old_id_2\ * !\adc:ch_addr_2\
            + !\adc:AMuxHw_2_Decoder_old_id_1\ * \adc:ch_addr_1\
            + \adc:AMuxHw_2_Decoder_old_id_1\ * !\adc:ch_addr_1\
            + !\adc:AMuxHw_2_Decoder_old_id_0\ * \adc:ch_addr_0\
            + \adc:AMuxHw_2_Decoder_old_id_0\ * !\adc:ch_addr_0\
        );
        Output = \adc:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\enc:Cnt16:CounterUDB:count_stored_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Net_1203\
        );
        Output = \enc:Cnt16:CounterUDB:count_stored_i\ (fanout=1)

    MacroCell: Name=\enc:Net_1203\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\enc:bQuadDec:quad_A_filt\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + \enc:Net_1203_split\
        );
        Output = \enc:Net_1203\ (fanout=3)

    MacroCell: Name=\enc:bQuadDec:quad_A_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\enc:bQuadDec:quad_A_delayed_0\ * 
              !\enc:bQuadDec:quad_A_delayed_1\ * 
              !\enc:bQuadDec:quad_A_delayed_2\ * \enc:bQuadDec:quad_A_filt\
            + \enc:bQuadDec:quad_A_delayed_0\ * 
              \enc:bQuadDec:quad_A_delayed_1\ * 
              \enc:bQuadDec:quad_A_delayed_2\ * !\enc:bQuadDec:quad_A_filt\
        );
        Output = \enc:bQuadDec:quad_A_filt\ (fanout=8)

    MacroCell: Name=\enc:bQuadDec:quad_B_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\enc:bQuadDec:quad_B_delayed_0\ * 
              !\enc:bQuadDec:quad_B_delayed_1\ * 
              !\enc:bQuadDec:quad_B_delayed_2\ * \enc:bQuadDec:quad_B_filt\
            + \enc:bQuadDec:quad_B_delayed_0\ * 
              \enc:bQuadDec:quad_B_delayed_1\ * 
              \enc:bQuadDec:quad_B_delayed_2\ * !\enc:bQuadDec:quad_B_filt\
        );
        Output = \enc:bQuadDec:quad_B_filt\ (fanout=8)

    MacroCell: Name=\enc:Net_1260\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\enc:Net_1260\ * !\enc:bQuadDec:error\
            + !\enc:Net_1260\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:Net_1260\ (fanout=10)

    MacroCell: Name=\enc:bQuadDec:error\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + \enc:bQuadDec:quad_A_filt\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:bQuadDec:error\ (fanout=9)

    MacroCell: Name=\enc:bQuadDec:state_1\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:error\ * \enc:bQuadDec:state_1\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + \enc:bQuadDec:quad_A_filt\ * !\enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:bQuadDec:state_1\ (fanout=8)

    MacroCell: Name=\enc:bQuadDec:state_0\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_B_filt\ * 
              \enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + !\enc:bQuadDec:quad_A_filt\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:bQuadDec:state_0\ (fanout=8)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_5\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_4\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_3\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_2\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_1\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_0\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_14, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: PosEdge(\adc:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \adc:bSAR_SEQ:bus_clk_nrq_reg\ * !\adc:bSAR_SEQ:nrq_reg\
        );
        Output = Net_14 (fanout=3)

    MacroCell: Name=\adc:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \adc:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_14
            + \adc:Net_3935\
        );
        Output = \adc:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\adc:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: PosEdge(\adc:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \adc:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \adc:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\pwm:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:control_7\
        );
        Output = \pwm:PWMUDB:runmode_enable\ (fanout=4)

    MacroCell: Name=\pwm:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:cmp1_less\
        );
        Output = \pwm:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\pwm:PWMUDB:prevCompare2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:cmp2_less\
        );
        Output = \pwm:PWMUDB:prevCompare2\ (fanout=1)

    MacroCell: Name=\pwm:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\pwm:PWMUDB:prevCompare1\ * \pwm:PWMUDB:cmp1_less\
        );
        Output = \pwm:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=\pwm:PWMUDB:status_1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\pwm:PWMUDB:prevCompare2\ * \pwm:PWMUDB:cmp2_less\
        );
        Output = \pwm:PWMUDB:status_1\ (fanout=1)

    MacroCell: Name=\enc:Net_1203_split\, Mode=(Combinatorial)
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              !\enc:Net_1260\ * \enc:Net_1203\ * \enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + \enc:bQuadDec:quad_A_filt\ * !\enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:Net_1203_split\ (fanout=1)

    MacroCell: Name=Net_182, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:runmode_enable\ * \pwm:PWMUDB:cmp1_less\
        );
        Output = Net_182 (fanout=1)

    MacroCell: Name=Net_172, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:runmode_enable\ * \pwm:PWMUDB:cmp2_less\
        );
        Output = Net_172 (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\enc:Cnt16:CounterUDB:sC16:counterdp:u0\
        PORT MAP (
            clock => Net_5 ,
            cs_addr_2 => \enc:Net_1251\ ,
            cs_addr_1 => \enc:Cnt16:CounterUDB:count_enable\ ,
            cs_addr_0 => \enc:Cnt16:CounterUDB:reload\ ,
            chain_out => \enc:Cnt16:CounterUDB:sC16:counterdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \enc:Cnt16:CounterUDB:sC16:counterdp:u1\

    datapathcell: Name =\enc:Cnt16:CounterUDB:sC16:counterdp:u1\
        PORT MAP (
            clock => Net_5 ,
            cs_addr_2 => \enc:Net_1251\ ,
            cs_addr_1 => \enc:Cnt16:CounterUDB:count_enable\ ,
            cs_addr_0 => \enc:Cnt16:CounterUDB:reload\ ,
            z0_comb => \enc:Cnt16:CounterUDB:status_1\ ,
            f0_comb => \enc:Cnt16:CounterUDB:overflow\ ,
            ce1_comb => \enc:Cnt16:CounterUDB:cmp_out_i\ ,
            f0_bus_stat_comb => \enc:Cnt16:CounterUDB:status_6\ ,
            f0_blk_stat_comb => \enc:Cnt16:CounterUDB:status_5\ ,
            chain_in => \enc:Cnt16:CounterUDB:sC16:counterdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \enc:Cnt16:CounterUDB:sC16:counterdp:u0\

    datapathcell: Name =\pwm:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => Net_168 ,
            cs_addr_2 => \pwm:PWMUDB:tc_i\ ,
            cs_addr_1 => \pwm:PWMUDB:runmode_enable\ ,
            cl0_comb => \pwm:PWMUDB:cmp1_less\ ,
            z0_comb => \pwm:PWMUDB:tc_i\ ,
            cl1_comb => \pwm:PWMUDB:cmp2_less\ ,
            f1_blk_stat_comb => \pwm:PWMUDB:status_3\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\adc:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \adc:clock\ ,
            status_0 => Net_14 ,
            clk_en => \adc:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\adc:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\enc:Cnt16:CounterUDB:sSTSReg:stsreg\
        PORT MAP (
            reset => \enc:Net_1260\ ,
            clock => Net_5 ,
            status_6 => \enc:Cnt16:CounterUDB:status_6\ ,
            status_5 => \enc:Cnt16:CounterUDB:status_5\ ,
            status_3 => \enc:Cnt16:CounterUDB:status_3\ ,
            status_2 => \enc:Cnt16:CounterUDB:status_2\ ,
            status_1 => \enc:Cnt16:CounterUDB:status_1\ ,
            status_0 => \enc:Cnt16:CounterUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\enc:bQuadDec:Stsreg\
        PORT MAP (
            clock => Net_5 ,
            status_3 => \enc:bQuadDec:error\ ,
            status_2 => \enc:Net_1260\ ,
            status_1 => \enc:Net_611\ ,
            status_0 => \enc:Net_530\ ,
            interrupt => Net_6 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "0001111"
            cy_md_select = "0001111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\pwm:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => Net_168 ,
            status_3 => \pwm:PWMUDB:status_3\ ,
            status_2 => \pwm:PWMUDB:status_2\ ,
            status_1 => \pwm:PWMUDB:status_1\ ,
            status_0 => \pwm:PWMUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\adc:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \adc:nrq\ ,
            out => \adc:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\enc:Cnt16:CounterUDB:sCTRLReg:ctrlreg\
        PORT MAP (
            clock => Net_5 ,
            control_7 => \enc:Cnt16:CounterUDB:control_7\ ,
            control_6 => \enc:Cnt16:CounterUDB:control_6\ ,
            control_5 => \enc:Cnt16:CounterUDB:control_5\ ,
            control_4 => \enc:Cnt16:CounterUDB:control_4\ ,
            control_3 => \enc:Cnt16:CounterUDB:control_3\ ,
            control_2 => \enc:Cnt16:CounterUDB:control_2\ ,
            control_1 => \enc:Cnt16:CounterUDB:control_1\ ,
            control_0 => \enc:Cnt16:CounterUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\adc:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \adc:clock\ ,
            control_7 => \adc:bSAR_SEQ:control_7\ ,
            control_6 => \adc:bSAR_SEQ:control_6\ ,
            control_5 => \adc:bSAR_SEQ:control_5\ ,
            control_4 => \adc:bSAR_SEQ:control_4\ ,
            control_3 => \adc:bSAR_SEQ:control_3\ ,
            control_2 => \adc:bSAR_SEQ:control_2\ ,
            control_1 => \adc:bSAR_SEQ:load_period\ ,
            control_0 => \adc:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\pwm:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => Net_168 ,
            control_7 => \pwm:PWMUDB:control_7\ ,
            control_6 => \pwm:PWMUDB:control_6\ ,
            control_5 => \pwm:PWMUDB:control_5\ ,
            control_4 => \pwm:PWMUDB:control_4\ ,
            control_3 => \pwm:PWMUDB:control_3\ ,
            control_2 => \pwm:PWMUDB:control_2\ ,
            control_1 => \pwm:PWMUDB:control_1\ ,
            control_0 => \pwm:PWMUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\adc:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \adc:clock\ ,
            load => \adc:bSAR_SEQ:load_period\ ,
            enable => \adc:bSAR_SEQ:cnt_enable\ ,
            count_6 => \adc:bSAR_SEQ:count_6\ ,
            count_5 => \adc:ch_addr_5\ ,
            count_4 => \adc:ch_addr_4\ ,
            count_3 => \adc:ch_addr_3\ ,
            count_2 => \adc:ch_addr_2\ ,
            count_1 => \adc:ch_addr_1\ ,
            count_0 => \adc:ch_addr_0\ ,
            tc => \adc:bSAR_SEQ:cnt_tc\ ,
            clk_en => \adc:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000000"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\adc:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\adc:TempBuf\
        PORT MAP (
            dmareq => \adc:Net_3830\ ,
            termin => zero ,
            termout => \adc:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\adc:FinalBuf\
        PORT MAP (
            dmareq => \adc:Net_3698\ ,
            termin => zero ,
            termout => \adc:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\enc:isr\
        PORT MAP (
            interrupt => Net_6 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\adc:IRQ\
        PORT MAP (
            interrupt => Net_14 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    3 :    5 :    8 : 37.50 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    2 :   30 :   32 :  6.25 %
IO                            :   16 :   32 :   48 : 33.33 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  112 :   80 :  192 : 58.33 %
  Unique P-terms              :  149 :  235 :  384 : 38.80 %
  Total P-terms               :  155 :      :      :        
  Datapath Cells              :    3 :   21 :   24 : 12.50 %
  Status Cells                :    6 :   18 :   24 : 25.00 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    3 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    1 :      :      :        
  Control Cells               :    4 :   20 :   24 : 16.67 %
    Control Registers         :    3 :      :      :        
    Count7 Cells              :    1 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.163ms
Tech Mapping phase: Elapsed time ==> 0s.237ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_16" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_18" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_19" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_21" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_23" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_24" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_26" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_28" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_29" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_31" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_33" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_34" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_36" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_38" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_39" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_41" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_43" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_44" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_46" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_48" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_49" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_51" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_53" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_54" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_56" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_58" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_59" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_61" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_63" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_64" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_66" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_68" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_69" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_71" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_73" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_74" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_76" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_78" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_79" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_81" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_83" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_84" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_86" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_88" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_89" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_91" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_93" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_94" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_95" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_96" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_97" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_98" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_99" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_100" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_101" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_102" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_103" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_104" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_105" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_106" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_107" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_108" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_109" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_6@[IOP=(1)][IoId=(6)] : C1(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : C2(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \lcd:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \lcd:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \lcd:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \lcd:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \lcd:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \lcd:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \lcd:LCDPort(6)\ (fixed)
IO_2@[IOP=(1)][IoId=(2)] : motora(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : motorb(0) (fixed)
IO_4@[IOP=(1)][IoId=(4)] : pot(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : switch1(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \adc:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \adc:SAR:vRef_Vdda_1\
Log: apr.M0058: The analog placement iterative improvement is 49% done. (App=cydsfit)
Analog Placement Results:
IO_6@[IOP=(1)][IoId=(6)] : C1(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : C2(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \lcd:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \lcd:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \lcd:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \lcd:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \lcd:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \lcd:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \lcd:LCDPort(6)\ (fixed)
IO_2@[IOP=(1)][IoId=(2)] : motora(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : motorb(0) (fixed)
IO_4@[IOP=(1)][IoId=(4)] : pot(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : switch1(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \adc:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \adc:SAR:vRef_Vdda_1\

Analog Placement phase: Elapsed time ==> 1s.085ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.001ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \adc:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_15 {
    p1_4
  }
  Net: Net_16 {
  }
  Net: Net_18 {
  }
  Net: Net_19 {
  }
  Net: Net_21 {
  }
  Net: Net_23 {
  }
  Net: Net_24 {
  }
  Net: Net_26 {
  }
  Net: Net_28 {
  }
  Net: Net_29 {
  }
  Net: Net_31 {
  }
  Net: Net_33 {
  }
  Net: Net_34 {
  }
  Net: Net_36 {
  }
  Net: Net_38 {
  }
  Net: Net_39 {
  }
  Net: Net_41 {
  }
  Net: Net_43 {
  }
  Net: Net_44 {
  }
  Net: Net_46 {
  }
  Net: Net_48 {
  }
  Net: Net_49 {
  }
  Net: Net_51 {
  }
  Net: Net_53 {
  }
  Net: Net_54 {
  }
  Net: Net_56 {
  }
  Net: Net_58 {
  }
  Net: Net_59 {
  }
  Net: Net_61 {
  }
  Net: Net_63 {
  }
  Net: Net_64 {
  }
  Net: Net_66 {
  }
  Net: Net_68 {
  }
  Net: Net_69 {
  }
  Net: Net_71 {
  }
  Net: Net_73 {
  }
  Net: Net_74 {
  }
  Net: Net_76 {
  }
  Net: Net_78 {
  }
  Net: Net_79 {
  }
  Net: Net_81 {
  }
  Net: Net_83 {
  }
  Net: Net_84 {
  }
  Net: Net_86 {
  }
  Net: Net_88 {
  }
  Net: Net_89 {
  }
  Net: Net_91 {
  }
  Net: Net_93 {
  }
  Net: Net_94 {
  }
  Net: Net_95 {
  }
  Net: Net_96 {
  }
  Net: Net_97 {
  }
  Net: Net_98 {
  }
  Net: Net_99 {
  }
  Net: Net_100 {
  }
  Net: Net_101 {
  }
  Net: Net_102 {
  }
  Net: Net_103 {
  }
  Net: Net_104 {
  }
  Net: Net_105 {
  }
  Net: Net_106 {
  }
  Net: Net_107 {
  }
  Net: Net_108 {
  }
  Net: Net_109 {
  }
  Net: \adc:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \adc:SAR:Net_209\ {
  }
  Net: \adc:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref
  }
  Net: AmuxNet::\adc:AMuxHw_2\ {
    sar_1_vplus
    agr0_x_sar_1_vplus
    agr0
    agr0_x_p1_4
    p1_4
  }
}
Map of item to net {
  sar_1_vrefhi                                     -> \adc:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \adc:SAR:Net_126\
  sar_1_vminus                                     -> \adc:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \adc:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \adc:SAR:Net_235\
  sar_1_vref_vdda_vdda_2                           -> \adc:SAR:Net_235\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \adc:SAR:Net_235\
  sar_1_vref                                       -> \adc:SAR:Net_235\
  sar_1_vplus                                      -> \adc:Net_2803\
  p1_4                                             -> Net_15
  agr0_x_sar_1_vplus                               -> AmuxNet::\adc:AMuxHw_2\
  agr0                                             -> AmuxNet::\adc:AMuxHw_2\
  agr0_x_p1_4                                      -> AmuxNet::\adc:AMuxHw_2\
}
Mux Info {
  Mux: \adc:AMuxHw_2\ {
     Mouth: \adc:Net_2803\
     Guts:  AmuxNet::\adc:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_15
      Outer: agr0_x_p1_4
      Inner: agr0_x_sar_1_vplus
      Path {
        p1_4
        agr0_x_p1_4
        agr0
        agr0_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_16
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 2 {
      Net:   Net_18
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 3 {
      Net:   Net_19
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_21
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_23
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_24
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_26
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_28
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_29
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_31
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_33
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_34
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_36
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_38
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_39
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_41
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_43
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_44
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_46
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_48
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_49
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_51
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_53
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_54
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_56
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_58
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_59
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_61
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_63
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_64
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_66
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_68
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_69
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_71
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_73
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_74
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_76
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_78
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_79
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_81
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_83
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_84
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_86
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_88
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_89
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_91
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_93
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_94
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_95
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_96
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_97
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_98
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_99
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_100
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_101
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_102
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_103
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_104
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_105
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_106
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_107
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_108
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_109
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.245ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 3.6 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   36 :   12 :   48 :  75.00%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.14
                   Pterms :            4.31
               Macrocells :            3.11
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.002ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.073ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         18 :       8.72 :       6.22
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=4, #inputs=9, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\enc:bQuadDec:quad_B_filt\, Mode=(T-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\enc:bQuadDec:quad_B_delayed_0\ * 
              !\enc:bQuadDec:quad_B_delayed_1\ * 
              !\enc:bQuadDec:quad_B_delayed_2\ * \enc:bQuadDec:quad_B_filt\
            + \enc:bQuadDec:quad_B_delayed_0\ * 
              \enc:bQuadDec:quad_B_delayed_1\ * 
              \enc:bQuadDec:quad_B_delayed_2\ * !\enc:bQuadDec:quad_B_filt\
        );
        Output = \enc:bQuadDec:quad_B_filt\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\enc:bQuadDec:quad_B_delayed_2\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:bQuadDec:quad_B_delayed_1\
        );
        Output = \enc:bQuadDec:quad_B_delayed_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\enc:bQuadDec:quad_B_delayed_1\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:bQuadDec:quad_B_delayed_0\
        );
        Output = \enc:bQuadDec:quad_B_delayed_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\enc:bQuadDec:error\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + \enc:bQuadDec:quad_A_filt\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:bQuadDec:error\ (fanout=9)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=2, #inputs=7, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\enc:bQuadDec:state_1\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:error\ * \enc:bQuadDec:state_1\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + \enc:bQuadDec:quad_A_filt\ * !\enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:bQuadDec:state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\enc:bQuadDec:quad_B_delayed_0\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_3
        );
        Output = \enc:bQuadDec:quad_B_delayed_0\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=4, #inputs=10, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\enc:Cnt16:CounterUDB:count_stored_i\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Net_1203\
        );
        Output = \enc:Cnt16:CounterUDB:count_stored_i\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\enc:Cnt16:CounterUDB:count_enable\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:control_7\ * 
              !\enc:Cnt16:CounterUDB:count_stored_i\ * \enc:Net_1203\
        );
        Output = \enc:Cnt16:CounterUDB:count_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\enc:Net_1203\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\enc:bQuadDec:quad_A_filt\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + \enc:Net_1203_split\
        );
        Output = \enc:Net_1203\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\enc:Net_1260\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\enc:Net_1260\ * !\enc:bQuadDec:error\
            + !\enc:Net_1260\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:Net_1260\ (fanout=10)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=1, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\enc:Net_1203_split\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              !\enc:Net_1260\ * \enc:Net_1203\ * \enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + \enc:bQuadDec:quad_A_filt\ * !\enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:Net_1203_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

statusicell: Name =\enc:bQuadDec:Stsreg\
    PORT MAP (
        clock => Net_5 ,
        status_3 => \enc:bQuadDec:error\ ,
        status_2 => \enc:Net_1260\ ,
        status_1 => \enc:Net_611\ ,
        status_0 => \enc:Net_530\ ,
        interrupt => Net_6 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "0001111"
        cy_md_select = "0001111"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\enc:Cnt16:CounterUDB:sCTRLReg:ctrlreg\
    PORT MAP (
        clock => Net_5 ,
        control_7 => \enc:Cnt16:CounterUDB:control_7\ ,
        control_6 => \enc:Cnt16:CounterUDB:control_6\ ,
        control_5 => \enc:Cnt16:CounterUDB:control_5\ ,
        control_4 => \enc:Cnt16:CounterUDB:control_4\ ,
        control_3 => \enc:Cnt16:CounterUDB:control_3\ ,
        control_2 => \enc:Cnt16:CounterUDB:control_2\ ,
        control_1 => \enc:Cnt16:CounterUDB:control_1\ ,
        control_0 => \enc:Cnt16:CounterUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=4, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\enc:Cnt16:CounterUDB:reload\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\enc:Net_1260\ * !\enc:Cnt16:CounterUDB:status_1\ * 
              !\enc:Cnt16:CounterUDB:overflow\
        );
        Output = \enc:Cnt16:CounterUDB:reload\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\enc:Net_1275\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\enc:Cnt16:CounterUDB:status_1\ * 
              !\enc:Cnt16:CounterUDB:overflow\
        );
        Output = \enc:Net_1275\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\enc:Cnt16:CounterUDB:underflow_reg_i\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:status_1\
        );
        Output = \enc:Cnt16:CounterUDB:underflow_reg_i\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\enc:Cnt16:CounterUDB:status_2\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:overflow\ * 
              !\enc:Cnt16:CounterUDB:overflow_reg_i\
        );
        Output = \enc:Cnt16:CounterUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=4, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\enc:Net_611\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Net_1275\ * !\enc:Net_1251\ * 
              !\enc:Cnt16:CounterUDB:prevCompare\
        );
        Output = \enc:Net_611\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\enc:Cnt16:CounterUDB:overflow_reg_i\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:overflow\
        );
        Output = \enc:Cnt16:CounterUDB:overflow_reg_i\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\enc:Net_530\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Net_1275\ * \enc:Net_1251\ * 
              !\enc:Cnt16:CounterUDB:prevCompare\
        );
        Output = \enc:Net_530\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\enc:Cnt16:CounterUDB:status_3\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:status_1\ * 
              !\enc:Cnt16:CounterUDB:underflow_reg_i\
        );
        Output = \enc:Cnt16:CounterUDB:status_3\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\enc:Cnt16:CounterUDB:sC16:counterdp:u1\
    PORT MAP (
        clock => Net_5 ,
        cs_addr_2 => \enc:Net_1251\ ,
        cs_addr_1 => \enc:Cnt16:CounterUDB:count_enable\ ,
        cs_addr_0 => \enc:Cnt16:CounterUDB:reload\ ,
        z0_comb => \enc:Cnt16:CounterUDB:status_1\ ,
        f0_comb => \enc:Cnt16:CounterUDB:overflow\ ,
        ce1_comb => \enc:Cnt16:CounterUDB:cmp_out_i\ ,
        f0_bus_stat_comb => \enc:Cnt16:CounterUDB:status_6\ ,
        f0_blk_stat_comb => \enc:Cnt16:CounterUDB:status_5\ ,
        chain_in => \enc:Cnt16:CounterUDB:sC16:counterdp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \enc:Cnt16:CounterUDB:sC16:counterdp:u0\

statusicell: Name =\enc:Cnt16:CounterUDB:sSTSReg:stsreg\
    PORT MAP (
        reset => \enc:Net_1260\ ,
        clock => Net_5 ,
        status_6 => \enc:Cnt16:CounterUDB:status_6\ ,
        status_5 => \enc:Cnt16:CounterUDB:status_5\ ,
        status_3 => \enc:Cnt16:CounterUDB:status_3\ ,
        status_2 => \enc:Cnt16:CounterUDB:status_2\ ,
        status_1 => \enc:Cnt16:CounterUDB:status_1\ ,
        status_0 => \enc:Cnt16:CounterUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =\adc:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \adc:nrq\ ,
        out => \adc:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=4, #inputs=4, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\pwm:PWMUDB:status_1\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\pwm:PWMUDB:prevCompare2\ * \pwm:PWMUDB:cmp2_less\
        );
        Output = \pwm:PWMUDB:status_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\pwm:PWMUDB:prevCompare2\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:cmp2_less\
        );
        Output = \pwm:PWMUDB:prevCompare2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_172, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:runmode_enable\ * \pwm:PWMUDB:cmp2_less\
        );
        Output = Net_172 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\pwm:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:control_7\
        );
        Output = \pwm:PWMUDB:runmode_enable\ (fanout=4)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=4, #inputs=4, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_182, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:runmode_enable\ * \pwm:PWMUDB:cmp1_less\
        );
        Output = Net_182 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\pwm:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:cmp1_less\
        );
        Output = \pwm:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\pwm:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_168) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\pwm:PWMUDB:prevCompare1\ * \pwm:PWMUDB:cmp1_less\
        );
        Output = \pwm:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\pwm:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(0,5)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \pwm:PWMUDB:runmode_enable\ * \pwm:PWMUDB:tc_i\
        );
        Output = \pwm:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\pwm:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => Net_168 ,
        cs_addr_2 => \pwm:PWMUDB:tc_i\ ,
        cs_addr_1 => \pwm:PWMUDB:runmode_enable\ ,
        cl0_comb => \pwm:PWMUDB:cmp1_less\ ,
        z0_comb => \pwm:PWMUDB:tc_i\ ,
        cl1_comb => \pwm:PWMUDB:cmp2_less\ ,
        f1_blk_stat_comb => \pwm:PWMUDB:status_3\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\pwm:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => Net_168 ,
        status_3 => \pwm:PWMUDB:status_3\ ,
        status_2 => \pwm:PWMUDB:status_2\ ,
        status_1 => \pwm:PWMUDB:status_1\ ,
        status_0 => \pwm:PWMUDB:status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\pwm:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => Net_168 ,
        control_7 => \pwm:PWMUDB:control_7\ ,
        control_6 => \pwm:PWMUDB:control_6\ ,
        control_5 => \pwm:PWMUDB:control_5\ ,
        control_4 => \pwm:PWMUDB:control_4\ ,
        control_3 => \pwm:PWMUDB:control_3\ ,
        control_2 => \pwm:PWMUDB:control_2\ ,
        control_1 => \pwm:PWMUDB:control_1\ ,
        control_0 => \pwm:PWMUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=2, #inputs=9, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\enc:bQuadDec:quad_A_filt\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\enc:bQuadDec:quad_A_delayed_0\ * 
              !\enc:bQuadDec:quad_A_delayed_1\ * 
              !\enc:bQuadDec:quad_A_delayed_2\ * \enc:bQuadDec:quad_A_filt\
            + \enc:bQuadDec:quad_A_delayed_0\ * 
              \enc:bQuadDec:quad_A_delayed_1\ * 
              \enc:bQuadDec:quad_A_delayed_2\ * !\enc:bQuadDec:quad_A_filt\
        );
        Output = \enc:bQuadDec:quad_A_filt\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\enc:bQuadDec:state_0\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_B_filt\ * 
              \enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + !\enc:bQuadDec:quad_A_filt\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:bQuadDec:state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,0)][LB=1] #macrocells=4, #inputs=11, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\enc:Net_1251\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 8
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              \enc:Net_1251\ * !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_0\
            + \enc:Net_1251\ * !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:error\ * \enc:bQuadDec:state_0\
            + \enc:Net_1251\ * !\enc:Net_1260\ * !\enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * \enc:bQuadDec:state_1\
            + \enc:Net_1251_split\
        );
        Output = \enc:Net_1251\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\enc:bQuadDec:quad_A_delayed_2\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:bQuadDec:quad_A_delayed_1\
        );
        Output = \enc:bQuadDec:quad_A_delayed_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\enc:bQuadDec:quad_A_delayed_1\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:bQuadDec:quad_A_delayed_0\
        );
        Output = \enc:bQuadDec:quad_A_delayed_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\enc:bQuadDec:quad_A_delayed_0\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_2
        );
        Output = \enc:bQuadDec:quad_A_delayed_0\ (fanout=2)
        Properties               : 
        {
        }
}

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=1, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\enc:Net_1251_split\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \enc:Net_1251\ * !\enc:Net_1260\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\
            + \enc:Net_1251\ * !\enc:Net_1260\ * \enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + \enc:Net_1251\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + \enc:Net_1251\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * !\enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * !\enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              !\enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              \enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:Net_1260\ * \enc:bQuadDec:quad_A_filt\ * 
              \enc:bQuadDec:quad_B_filt\ * !\enc:bQuadDec:error\ * 
              !\enc:bQuadDec:state_1\ * \enc:bQuadDec:state_0\
            + !\enc:bQuadDec:quad_A_filt\ * \enc:bQuadDec:quad_B_filt\ * 
              !\enc:bQuadDec:error\ * !\enc:bQuadDec:state_1\ * 
              !\enc:bQuadDec:state_0\
        );
        Output = \enc:Net_1251_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\enc:Cnt16:CounterUDB:prevCompare\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_5) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:cmp_out_i\
        );
        Output = \enc:Cnt16:CounterUDB:prevCompare\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\enc:Cnt16:CounterUDB:status_0\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \enc:Cnt16:CounterUDB:cmp_out_i\ * 
              !\enc:Cnt16:CounterUDB:prevCompare\
        );
        Output = \enc:Cnt16:CounterUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\enc:Cnt16:CounterUDB:sC16:counterdp:u0\
    PORT MAP (
        clock => Net_5 ,
        cs_addr_2 => \enc:Net_1251\ ,
        cs_addr_1 => \enc:Cnt16:CounterUDB:count_enable\ ,
        cs_addr_0 => \enc:Cnt16:CounterUDB:reload\ ,
        chain_out => \enc:Cnt16:CounterUDB:sC16:counterdp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \enc:Cnt16:CounterUDB:sC16:counterdp:u1\

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \adc:AMuxHw_2_Decoder_old_id_5\ * !\adc:ch_addr_5\
            + \adc:AMuxHw_2_Decoder_old_id_4\ * !\adc:ch_addr_4\
            + \adc:AMuxHw_2_Decoder_old_id_3\ * !\adc:ch_addr_3\
            + \adc:AMuxHw_2_Decoder_old_id_2\ * !\adc:ch_addr_2\
            + !\adc:AMuxHw_2_Decoder_old_id_1\ * \adc:ch_addr_1\
            + \adc:AMuxHw_2_Decoder_old_id_1\ * !\adc:ch_addr_1\
            + !\adc:AMuxHw_2_Decoder_old_id_0\ * \adc:ch_addr_0\
            + \adc:AMuxHw_2_Decoder_old_id_0\ * !\adc:ch_addr_0\
        );
        Output = \adc:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_0\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_2\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_1\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }
}

count7cell: Name =\adc:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \adc:clock\ ,
        load => \adc:bSAR_SEQ:load_period\ ,
        enable => \adc:bSAR_SEQ:cnt_enable\ ,
        count_6 => \adc:bSAR_SEQ:count_6\ ,
        count_5 => \adc:ch_addr_5\ ,
        count_4 => \adc:ch_addr_4\ ,
        count_3 => \adc:ch_addr_3\ ,
        count_2 => \adc:ch_addr_2\ ,
        count_1 => \adc:ch_addr_1\ ,
        count_0 => \adc:ch_addr_0\ ,
        tc => \adc:bSAR_SEQ:cnt_tc\ ,
        clk_en => \adc:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000000"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\adc:bSAR_SEQ:enable\)

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_3\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_5\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:ch_addr_4\
        );
        Output = \adc:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\adc:AMuxHw_2_Decoder_old_id_5\ * \adc:ch_addr_5\
            + !\adc:AMuxHw_2_Decoder_old_id_4\ * \adc:ch_addr_4\
            + !\adc:AMuxHw_2_Decoder_old_id_3\ * \adc:ch_addr_3\
            + !\adc:AMuxHw_2_Decoder_old_id_2\ * \adc:ch_addr_2\
            + \adc:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \adc:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\adc:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \adc:clock\ ,
        status_0 => Net_14 ,
        clk_en => \adc:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\adc:bSAR_SEQ:enable\)

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=2, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\adc:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \adc:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_14
            + \adc:Net_3935\
        );
        Output = \adc:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\adc:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_13 * !\adc:bSAR_SEQ:load_period\
        );
        Output = \adc:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,5)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_14, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: PosEdge(\adc:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \adc:bSAR_SEQ:bus_clk_nrq_reg\ * !\adc:bSAR_SEQ:nrq_reg\
        );
        Output = Net_14 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: PosEdge(\adc:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \adc:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \adc:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\adc:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \adc:clock\ ,
        control_7 => \adc:bSAR_SEQ:control_7\ ,
        control_6 => \adc:bSAR_SEQ:control_6\ ,
        control_5 => \adc:bSAR_SEQ:control_5\ ,
        control_4 => \adc:bSAR_SEQ:control_4\ ,
        control_3 => \adc:bSAR_SEQ:control_3\ ,
        control_2 => \adc:bSAR_SEQ:control_2\ ,
        control_1 => \adc:bSAR_SEQ:load_period\ ,
        control_0 => \adc:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,0)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,3)] is empty.
UDB [UDB=(2,4)] is empty.
UDB [UDB=(2,5)] is empty.
UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,1)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              !\adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              !\adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              \adc:AMuxHw_2_Decoder_old_id_5\ * 
              \adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              \adc:AMuxHw_2_Decoder_old_id_1\ * 
              !\adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\adc:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\adc:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \adc:AMuxHw_2_Decoder_is_active\ * 
              !\adc:AMuxHw_2_Decoder_old_id_5\ * 
              !\adc:AMuxHw_2_Decoder_old_id_4\ * 
              \adc:AMuxHw_2_Decoder_old_id_3\ * 
              \adc:AMuxHw_2_Decoder_old_id_2\ * 
              !\adc:AMuxHw_2_Decoder_old_id_1\ * 
              \adc:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \adc:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] is empty.
UDB [UDB=(3,4)] is empty.
UDB [UDB=(3,5)] is empty.
Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\adc:IRQ\
        PORT MAP (
            interrupt => Net_14 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\enc:isr\
        PORT MAP (
            interrupt => Net_6 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\adc:FinalBuf\
        PORT MAP (
            dmareq => \adc:Net_3698\ ,
            termin => zero ,
            termout => \adc:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\adc:TempBuf\
        PORT MAP (
            dmareq => \adc:Net_3830\ ,
            termin => zero ,
            termout => \adc:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=7]: 
Pin : Name = motorb(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => motorb(0)__PA ,
        pin_input => Net_172 ,
        pad => motorb(0)_PAD );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=2]: 
Pin : Name = motora(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => motora(0)__PA ,
        pin_input => Net_182 ,
        pad => motora(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = pot(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => pot(0)__PA ,
        analog_term => Net_15 ,
        pad => pot(0)_PAD ,
        pin_input => \adc:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = C2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => C2(0)__PA ,
        fb => Net_3 ,
        pad => C2(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = C1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => C1(0)__PA ,
        fb => Net_2 ,
        pad => C1(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = switch1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => switch1(0)__PA ,
        pad => switch1(0)_PAD );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=0]: 
Pin : Name = \lcd:LCDPort(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \lcd:LCDPort(0)\__PA ,
        pad => \lcd:LCDPort(0)_PAD\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = \lcd:LCDPort(1)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \lcd:LCDPort(1)\__PA ,
        pad => \lcd:LCDPort(1)_PAD\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = \lcd:LCDPort(2)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \lcd:LCDPort(2)\__PA ,
        pad => \lcd:LCDPort(2)_PAD\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = \lcd:LCDPort(3)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \lcd:LCDPort(3)\__PA ,
        pad => \lcd:LCDPort(3)_PAD\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = \lcd:LCDPort(4)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \lcd:LCDPort(4)\__PA ,
        pad => \lcd:LCDPort(4)_PAD\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = \lcd:LCDPort(5)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \lcd:LCDPort(5)\__PA ,
        pad => \lcd:LCDPort(5)_PAD\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \lcd:LCDPort(6)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \lcd:LCDPort(6)\__PA ,
        pad => \lcd:LCDPort(6)_PAD\ );
    Properties:
    {
    }

Port 3 contains the following IO cells:
Port 12 contains the following IO cells:
Port 15 contains the following IO cells:
ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => Net_5 ,
            dclk_0 => Net_5_local ,
            dclk_glb_1 => Net_168 ,
            dclk_1 => Net_168_local ,
            dclk_glb_2 => \adc:clock\ ,
            dclk_2 => \adc:clock_local\ );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: empty
VIDAC group 0: empty
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\adc:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \adc:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,1): 
    sarcell: Name =\adc:SAR:ADC_SAR\
        PORT MAP (
            vplus => \adc:Net_2803\ ,
            vminus => \adc:SAR:Net_126\ ,
            ext_pin => \adc:SAR:Net_209\ ,
            vrefhi_out => \adc:SAR:Net_126\ ,
            vref => \adc:SAR:Net_235\ ,
            clk_udb => \adc:clock_local\ ,
            irq => \adc:SAR:Net_252\ ,
            next => Net_13 ,
            data_out_udb_11 => \adc:SAR:Net_207_11\ ,
            data_out_udb_10 => \adc:SAR:Net_207_10\ ,
            data_out_udb_9 => \adc:SAR:Net_207_9\ ,
            data_out_udb_8 => \adc:SAR:Net_207_8\ ,
            data_out_udb_7 => \adc:SAR:Net_207_7\ ,
            data_out_udb_6 => \adc:SAR:Net_207_6\ ,
            data_out_udb_5 => \adc:SAR:Net_207_5\ ,
            data_out_udb_4 => \adc:SAR:Net_207_4\ ,
            data_out_udb_3 => \adc:SAR:Net_207_3\ ,
            data_out_udb_2 => \adc:SAR:Net_207_2\ ,
            data_out_udb_1 => \adc:SAR:Net_207_1\ ,
            data_out_udb_0 => \adc:SAR:Net_207_0\ ,
            eof_udb => \adc:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\adc:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_109 ,
            muxin_62 => Net_108 ,
            muxin_61 => Net_107 ,
            muxin_60 => Net_106 ,
            muxin_59 => Net_105 ,
            muxin_58 => Net_104 ,
            muxin_57 => Net_103 ,
            muxin_56 => Net_102 ,
            muxin_55 => Net_101 ,
            muxin_54 => Net_100 ,
            muxin_53 => Net_99 ,
            muxin_52 => Net_98 ,
            muxin_51 => Net_97 ,
            muxin_50 => Net_96 ,
            muxin_49 => Net_95 ,
            muxin_48 => Net_94 ,
            muxin_47 => Net_93 ,
            muxin_46 => Net_91 ,
            muxin_45 => Net_89 ,
            muxin_44 => Net_88 ,
            muxin_43 => Net_86 ,
            muxin_42 => Net_84 ,
            muxin_41 => Net_83 ,
            muxin_40 => Net_81 ,
            muxin_39 => Net_79 ,
            muxin_38 => Net_78 ,
            muxin_37 => Net_76 ,
            muxin_36 => Net_74 ,
            muxin_35 => Net_73 ,
            muxin_34 => Net_71 ,
            muxin_33 => Net_69 ,
            muxin_32 => Net_68 ,
            muxin_31 => Net_66 ,
            muxin_30 => Net_64 ,
            muxin_29 => Net_63 ,
            muxin_28 => Net_61 ,
            muxin_27 => Net_59 ,
            muxin_26 => Net_58 ,
            muxin_25 => Net_56 ,
            muxin_24 => Net_54 ,
            muxin_23 => Net_53 ,
            muxin_22 => Net_51 ,
            muxin_21 => Net_49 ,
            muxin_20 => Net_48 ,
            muxin_19 => Net_46 ,
            muxin_18 => Net_44 ,
            muxin_17 => Net_43 ,
            muxin_16 => Net_41 ,
            muxin_15 => Net_39 ,
            muxin_14 => Net_38 ,
            muxin_13 => Net_36 ,
            muxin_12 => Net_34 ,
            muxin_11 => Net_33 ,
            muxin_10 => Net_31 ,
            muxin_9 => Net_29 ,
            muxin_8 => Net_28 ,
            muxin_7 => Net_26 ,
            muxin_6 => Net_24 ,
            muxin_5 => Net_23 ,
            muxin_4 => Net_21 ,
            muxin_3 => Net_19 ,
            muxin_2 => Net_18 ,
            muxin_1 => Net_16 ,
            muxin_0 => Net_15 ,
            hw_ctrl_en_63 => \adc:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \adc:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \adc:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \adc:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \adc:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \adc:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \adc:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \adc:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \adc:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \adc:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \adc:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \adc:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \adc:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \adc:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \adc:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \adc:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \adc:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \adc:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \adc:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \adc:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \adc:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \adc:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \adc:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \adc:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \adc:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \adc:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \adc:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \adc:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \adc:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \adc:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \adc:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \adc:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \adc:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \adc:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \adc:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \adc:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \adc:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \adc:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \adc:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \adc:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \adc:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \adc:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \adc:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \adc:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \adc:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \adc:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \adc:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \adc:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \adc:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \adc:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \adc:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \adc:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \adc:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \adc:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \adc:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \adc:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \adc:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \adc:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \adc:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \adc:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \adc:AMuxHw_2_Decoder_one_hot_3\ ,
            hw_ctrl_en_2 => \adc:AMuxHw_2_Decoder_one_hot_2\ ,
            hw_ctrl_en_1 => \adc:AMuxHw_2_Decoder_one_hot_1\ ,
            vout => \adc:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                  | 
Port | Pin | Fixed |      Type |       Drive Mode |             Name | Connections
-----+-----+-------+-----------+------------------+------------------+-----------------------------------------------------
   0 |   7 |     * |      NONE |         CMOS_OUT |        motorb(0) | In(Net_172)
-----+-----+-------+-----------+------------------+------------------+-----------------------------------------------------
   1 |   2 |     * |      NONE |         CMOS_OUT |        motora(0) | In(Net_182)
     |   4 |     * |      NONE |      HI_Z_ANALOG |           pot(0) | In(\adc:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_15)
     |   5 |     * |      NONE |     HI_Z_DIGITAL |            C2(0) | FB(Net_3)
     |   6 |     * |      NONE |     HI_Z_DIGITAL |            C1(0) | FB(Net_2)
     |   7 |     * |      NONE |    RES_PULL_DOWN |       switch1(0) | 
-----+-----+-------+-----------+------------------+------------------+-----------------------------------------------------
   2 |   0 |     * |      NONE |         CMOS_OUT | \lcd:LCDPort(0)\ | 
     |   1 |     * |      NONE |         CMOS_OUT | \lcd:LCDPort(1)\ | 
     |   2 |     * |      NONE |         CMOS_OUT | \lcd:LCDPort(2)\ | 
     |   3 |     * |      NONE |         CMOS_OUT | \lcd:LCDPort(3)\ | 
     |   4 |     * |      NONE |         CMOS_OUT | \lcd:LCDPort(4)\ | 
     |   5 |     * |      NONE |         CMOS_OUT | \lcd:LCDPort(5)\ | 
     |   6 |     * |      NONE |         CMOS_OUT | \lcd:LCDPort(6)\ | 
---------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.069ms
Digital Placement phase: Elapsed time ==> 4s.034ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.1\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "MotorControl_r.vh2" --pcf-path "MotorControl.pco" --des-name "MotorControl" --dsf-path "MotorControl.dsf" --sdc-path "MotorControl.sdc" --lib-path "MotorControl_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 3s.533ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.212ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.034ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in MotorControl_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.496ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.251ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 10s.199ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 10s.200ms
API generation phase: Elapsed time ==> 1s.291ms
Dependency generation phase: Elapsed time ==> 0s.019ms
Cleanup phase: Elapsed time ==> 0s.000ms
